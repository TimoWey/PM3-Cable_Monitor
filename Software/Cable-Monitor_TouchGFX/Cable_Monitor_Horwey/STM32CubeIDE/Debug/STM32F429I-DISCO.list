
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bb10  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017968  0802bcc0  0802bcc0  0003bcc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043628  08043628  00053628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047320  08047320  00057320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000064c  0804756c  0804756c  0005756c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0011a470  08047bb8  08047bb8  00057bb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08162028  08162028  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  08162028  08162028  00172028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08162030  08162030  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08162030  08162030  00172030  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08162044  08162044  00172044  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08162048  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013a94  20000168  081621b0  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013bfc  081621b0  00183bfc  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009915c  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00219426  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00277a29  00000000  00000000  002194b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00031f4e  00000000  00000000  00490ee2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004770  00000000  00000000  004c2e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001215d4  00000000  00000000  004c75a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007fe3  00000000  00000000  005e8b74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00031176  00000000  00000000  005f0b57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003bee8  00000000  00000000  00621ccd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d100  00000000  00000000  0065dbb8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0066acb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0066e030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bca8 	.word	0x0802bca8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bca8 	.word	0x0802bca8

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fd4f 	bl	8009118 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a fd99 	bl	802b1b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fed7 	bl	8001430 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	08162048 	.word	0x08162048
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013bfc 	.word	0x20013bfc

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fbab 	bl	8000e00 <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba6 	b.w	8000e04 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f029 fc5f 	bl	8029f82 <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 be81 	b.w	8009548 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 be69 	b.w	8009548 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 be5a 	b.w	8009550 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 fe3f 	bl	800953c <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012fc3 	.word	0x20012fc3

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4e 	bl	8000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f89f 	bl	8001ab8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 ffd6 	bl	801193c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0f 	b.w	8000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb13 	b.w	8000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb37 	b.w	8001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badf 	b.w	8000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae5 	b.w	8000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3d 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae9 	b.w	8000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f010 ba2b 	b.w	8010e14 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f029 fadd 	bl	8029f82 <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012fbc 	.word	0x20012fbc
 8000a20:	20012fb8 	.word	0x20012fb8
 8000a24:	20012fba 	.word	0x20012fba

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f02a f8b5 	bl	802aba8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802bd18 	.word	0x0802bd18
 8000a5c:	0802bd50 	.word	0x0802bd50
 8000a60:	0802bd9e 	.word	0x0802bd9e
 8000a64:	20012fc2 	.word	0x20012fc2

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f02a f891 	bl	802aba8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012fb8 	.word	0x20012fb8
 8000a94:	20012fba 	.word	0x20012fba
 8000a98:	0802bde3 	.word	0x0802bde3
 8000a9c:	0802be46 	.word	0x0802be46
 8000aa0:	0802bd9e 	.word	0x0802bd9e
 8000aa4:	20012fbe 	.word	0x20012fbe
 8000aa8:	20012fc0 	.word	0x20012fc0

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c f8cc 	bl	800cc50 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f02a f86f 	bl	802aba8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c f972 	bl	800cdb8 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802bf64 	.word	0x0802bf64
 8000aec:	0802bfad 	.word	0x0802bfad
 8000af0:	0802bfdc 	.word	0x0802bfdc
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802c056 	.word	0x0802c056

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c b8f8 	b.w	800ccf8 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c b926 	b.w	800cd60 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c b8eb 	b.w	800ccf8 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c b979 	b.w	800ce2c <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c f9a2 	bl	800ce98 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c f99b 	bl	800ce98 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f02a f80f 	bl	802aba8 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802c0bb 	.word	0x0802c0bb
 8000b90:	0802c098 	.word	0x0802c098
 8000b94:	0802c0f9 	.word	0x0802c0f9

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f02a f801 	bl	802aba8 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802c171 	.word	0x0802c171
 8000bac:	0802c098 	.word	0x0802c098
 8000bb0:	0802c0f9 	.word	0x0802c0f9

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f029 f9e2 	bl	8029f82 <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f011 f806 	bl	8011bec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802c1b8 	.word	0x0802c1b8

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 503c 	movw	r0, #5436	; 0x153c
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 533c 	movw	r3, #5436	; 0x153c
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 533c 	movw	r3, #5436	; 0x153c
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f003 b8a0 	b.w	8003d88 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fd7d 	bl	800f74e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802c270 	.word	0x0802c270

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f029 f98b 	bl	8029f82 <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fd69 	bl	800f74e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802c23c 	.word	0x0802c23c

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f241 5144 	movw	r1, #5444	; 0x1544
 8000c92:	f029 f976 	bl	8029f82 <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fd53 	bl	800f74e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802c208 	.word	0x0802c208

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f029 f961 	bl	8029f82 <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50ab 	add.w	r0, r0, #5472	; 0x1560
 8000cd0:	3010      	adds	r0, #16
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802c2a4 	.word	0x0802c2a4

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 7114 	movw	r1, #5908	; 0x1714
 8000d0e:	f029 f938 	bl	8029f82 <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fc06 	bl	800252c <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fc07 	bl	8002534 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f018 fcad 	bl	8019690 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 fa40 	bl	80081c4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f018 fc0b 	bl	8019560 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d436      	bmi.n	8000dc2 <touchgfx_init+0xaa>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f029 f916 	bl	8029f86 <__cxa_guard_acquire>
 8000d5a:	b390      	cbz	r0, 8000dc2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000d5e:	4f21      	ldr	r7, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d60:	4b21      	ldr	r3, [pc, #132]	; (8000de8 <touchgfx_init+0xd0>)
 8000d62:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000d64:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000d68:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000d70:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d72:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d76:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d78:	6126      	str	r6, [r4, #16]
 8000d7a:	f00e fce9 	bl	800f750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d7e:	4b1b      	ldr	r3, [pc, #108]	; (8000dec <touchgfx_init+0xd4>)
 8000d80:	6163      	str	r3, [r4, #20]
 8000d82:	4640      	mov	r0, r8
 8000d84:	f00e fce4 	bl	800f750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d88:	4b19      	ldr	r3, [pc, #100]	; (8000df0 <touchgfx_init+0xd8>)
 8000d8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8c:	4638      	mov	r0, r7
 8000d8e:	f00e fcdf 	bl	800f750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d92:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d96:	4a17      	ldr	r2, [pc, #92]	; (8000df4 <touchgfx_init+0xdc>)
 8000d98:	f8c3 2570 	str.w	r2, [r3, #1392]	; 0x570
 8000d9c:	f503 60b6 	add.w	r0, r3, #1456	; 0x5b0
 8000da0:	f007 fe7a 	bl	8008a98 <_ZN5ModelC1Ev>
 8000da4:	4622      	mov	r2, r4
 8000da6:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000daa:	4630      	mov	r0, r6
 8000dac:	f007 fb84 	bl	80084b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db0:	4630      	mov	r0, r6
 8000db2:	f002 ffe9 	bl	8003d88 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db6:	4810      	ldr	r0, [pc, #64]	; (8000df8 <touchgfx_init+0xe0>)
 8000db8:	f029 ff14 	bl	802abe4 <atexit>
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f029 f8ee 	bl	8029f9e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc2:	480e      	ldr	r0, [pc, #56]	; (8000dfc <touchgfx_init+0xe4>)
}
 8000dc4:	b002      	add	sp, #8
 8000dc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dca:	f7ff bdb5 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dce:	bf00      	nop
 8000dd0:	20013028 	.word	0x20013028
 8000dd4:	20001988 	.word	0x20001988
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	20001720 	.word	0x20001720
 8000de8:	0802c2a4 	.word	0x0802c2a4
 8000dec:	0802c208 	.word	0x0802c208
 8000df0:	0802c23c 	.word	0x0802c23c
 8000df4:	0802c270 	.word	0x0802c270
 8000df8:	08000cf1 	.word	0x08000cf1
 8000dfc:	2000190c 	.word	0x2000190c

08000e00 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000e00:	4770      	bx	lr
	...

08000e04 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e04:	4801      	ldr	r0, [pc, #4]	; (8000e0c <touchgfx_taskEntry+0x8>)
 8000e06:	f7ff bda5 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e0a:	bf00      	nop
 8000e0c:	2000190c 	.word	0x2000190c

08000e10 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e10:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e12:	4e22      	ldr	r6, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e14:	4c22      	ldr	r4, [pc, #136]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e16:	4d23      	ldr	r5, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e18:	4b23      	ldr	r3, [pc, #140]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e1a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e1c:	4630      	mov	r0, r6
 8000e1e:	f7ff fed1 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e22:	4628      	mov	r0, r5
 8000e24:	f01c ff00 	bl	801dc28 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e28:	4b20      	ldr	r3, [pc, #128]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e2a:	4821      	ldr	r0, [pc, #132]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e2c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e30:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e34:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e38:	491e      	ldr	r1, [pc, #120]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e3a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e3c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e42:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e46:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e4a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e4c:	21f0      	movs	r1, #240	; 0xf0
 8000e4e:	8001      	strh	r1, [r0, #0]
 8000e50:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e52:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e54:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e56:	481b      	ldr	r0, [pc, #108]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e58:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e5c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e60:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e64:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e68:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e6c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e70:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e74:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e78:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e7c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e80:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e82:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e86:	8001      	strh	r1, [r0, #0]
 8000e88:	480f      	ldr	r0, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e8a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e8c:	490f      	ldr	r1, [pc, #60]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e90:	2201      	movs	r2, #1
 8000e92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e96:	4a0e      	ldr	r2, [pc, #56]	; (8000ed0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e98:	601a      	str	r2, [r3, #0]
}
 8000e9a:	bd70      	pop	{r4, r5, r6, pc}
 8000e9c:	200018c8 	.word	0x200018c8
 8000ea0:	200018c4 	.word	0x200018c4
 8000ea4:	2000198c 	.word	0x2000198c
 8000ea8:	0802bd08 	.word	0x0802bd08
 8000eac:	2000190c 	.word	0x2000190c
 8000eb0:	20012fb8 	.word	0x20012fb8
 8000eb4:	01000001 	.word	0x01000001
 8000eb8:	01010000 	.word	0x01010000
 8000ebc:	20012fc4 	.word	0x20012fc4
 8000ec0:	20012fbe 	.word	0x20012fbe
 8000ec4:	20012fba 	.word	0x20012fba
 8000ec8:	20012fc0 	.word	0x20012fc0
 8000ecc:	20012fbc 	.word	0x20012fbc
 8000ed0:	0802be94 	.word	0x0802be94

08000ed4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed8:	8081      	strh	r1, [r0, #4]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000edc:	80c1      	strh	r1, [r0, #6]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000ee0:	8101      	strh	r1, [r0, #8]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee4:	8141      	strh	r1, [r0, #10]
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eee:	4770      	bx	lr

08000ef0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000ef0:	4770      	bx	lr

08000ef2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000ef2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef4:	88c4      	ldrh	r4, [r0, #6]
 8000ef6:	6803      	ldr	r3, [r0, #0]
 8000ef8:	1b12      	subs	r2, r2, r4
 8000efa:	8884      	ldrh	r4, [r0, #4]
 8000efc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efe:	1b09      	subs	r1, r1, r4
 8000f00:	b212      	sxth	r2, r2
    }
 8000f02:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f06:	b209      	sxth	r1, r1
 8000f08:	4718      	bx	r3

08000f0a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f10:	f04f 33ff 	mov.w	r3, #4294967295
 8000f14:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f16:	6813      	ldr	r3, [r2, #0]
 8000f18:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f1a:	6010      	str	r0, [r2, #0]
    }
 8000f1c:	4770      	bx	lr

08000f1e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f22:	b11a      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f24:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f28:	b102      	cbz	r2, 8000f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f2a:	6018      	str	r0, [r3, #0]
        }
    }
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2e:	2000      	movs	r0, #0
 8000f30:	4770      	bx	lr

08000f32 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f32:	888b      	ldrh	r3, [r1, #4]
 8000f34:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f36:	2001      	movs	r0, #1
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f3a:	4770      	bx	lr

08000f3c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f3c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f40:	4770      	bx	lr

08000f42 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f42:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f46:	4770      	bx	lr

08000f48 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f48:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f4a:	2200      	movs	r2, #0
        return rect.width;
 8000f4c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f50:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f54:	8002      	strh	r2, [r0, #0]
 8000f56:	8042      	strh	r2, [r0, #2]
 8000f58:	8084      	strh	r4, [r0, #4]
 8000f5a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f5c:	bd10      	pop	{r4, pc}

08000f5e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	8002      	strh	r2, [r0, #0]
 8000f62:	8042      	strh	r2, [r0, #2]
 8000f64:	8082      	strh	r2, [r0, #4]
 8000f66:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f68:	4770      	bx	lr
	...

08000f6c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6c:	4b02      	ldr	r3, [pc, #8]	; (8000f78 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6e:	2290      	movs	r2, #144	; 0x90
 8000f70:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	e000e100 	.word	0xe000e100

08000f7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f7c:	4b02      	ldr	r3, [pc, #8]	; (8000f88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f82:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f84:	4770      	bx	lr
 8000f86:	bf00      	nop
 8000f88:	e000e100 	.word	0xe000e100

08000f8c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f8c:	4a09      	ldr	r2, [pc, #36]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8e:	490a      	ldr	r1, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f90:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f92:	480a      	ldr	r0, [pc, #40]	; (8000fbc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f94:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f98:	3b01      	subs	r3, #1
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9e:	6911      	ldr	r1, [r2, #16]
 8000fa0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa4:	3901      	subs	r1, #1
 8000fa6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000faa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fac:	f043 0301 	orr.w	r3, r3, #1
 8000fb0:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fb2:	4770      	bx	lr
 8000fb4:	40016800 	.word	0x40016800
 8000fb8:	20001a12 	.word	0x20001a12
 8000fbc:	20001a10 	.word	0x20001a10

08000fc0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fc0:	4b01      	ldr	r3, [pc, #4]	; (8000fc8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fc2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc6:	4770      	bx	lr
 8000fc8:	40016800 	.word	0x40016800

08000fcc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	4b02      	ldr	r3, [pc, #8]	; (8000fd8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fce:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fd0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd4:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd6:	4770      	bx	lr
 8000fd8:	40016800 	.word	0x40016800

08000fdc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fdc:	b570      	push	{r4, r5, r6, lr}
 8000fde:	4604      	mov	r4, r0
    HAL::initialize();
 8000fe0:	f00f ff6d 	bl	8010ebe <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe4:	6823      	ldr	r3, [r4, #0]
 8000fe6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe8:	f014 ff16 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8000fec:	4601      	mov	r1, r0
 8000fee:	4620      	mov	r0, r4
 8000ff0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000ff2:	6823      	ldr	r3, [r4, #0]
 8000ff4:	4a05      	ldr	r2, [pc, #20]	; (800100c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff6:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ffa:	4620      	mov	r0, r4
 8000ffc:	46ac      	mov	ip, r5
 8000ffe:	2300      	movs	r3, #0
}
 8001000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001004:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001008:	4760      	bx	ip
 800100a:	bf00      	nop
 800100c:	d004b000 	.word	0xd004b000

08001010 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001010:	f00f bf3c 	b.w	8010e8c <_ZN8touchgfx3HAL10beginFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001014:	f00f bf46 	b.w	8010ea4 <_ZN8touchgfx3HAL8endFrameEv>

08001018 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001018:	f00f bf02 	b.w	8010e20 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800101c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800101c:	f010 b863 	b.w	80110e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001020:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001024:	b112      	cbz	r2, 800102c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001026:	6803      	ldr	r3, [r0, #0]
 8001028:	695b      	ldr	r3, [r3, #20]
 800102a:	4718      	bx	r3
    }
 800102c:	4770      	bx	lr
	...

08001030 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001030:	4b04      	ldr	r3, [pc, #16]	; (8001044 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001032:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001036:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800103a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103e:	f3bf 8f6f 	isb	sy
}
 8001042:	4770      	bx	lr
 8001044:	e000e100 	.word	0xe000e100

08001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001048:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800104a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800104c:	4e12      	ldr	r6, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001052:	6003      	str	r3, [r0, #0]
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800105a:	4605      	mov	r5, r0
 800105c:	b10a      	cbz	r2, 8001062 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001060:	b900      	cbnz	r0, 8001064 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001062:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001064:	6803      	ldr	r3, [r0, #0]
 8001066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001068:	4798      	blx	r3
        return auxiliaryLCD;
 800106a:	6833      	ldr	r3, [r6, #0]
 800106c:	fab0 f480 	clz	r4, r0
 8001070:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001072:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001074:	b130      	cbz	r0, 8001084 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001076:	6803      	ldr	r3, [r0, #0]
 8001078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800107a:	4798      	blx	r3
 800107c:	2800      	cmp	r0, #0
 800107e:	bf08      	it	eq
 8001080:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001084:	b92c      	cbnz	r4, 8001092 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001086:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001088:	4a06      	ldr	r2, [pc, #24]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800108a:	4807      	ldr	r0, [pc, #28]	; (80010a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800108c:	212c      	movs	r1, #44	; 0x2c
 800108e:	f029 fd8b 	bl	802aba8 <__assert_func>
    }
 8001092:	4628      	mov	r0, r5
 8001094:	bd70      	pop	{r4, r5, r6, pc}
 8001096:	bf00      	nop
 8001098:	20012fc4 	.word	0x20012fc4
 800109c:	0802c3b4 	.word	0x0802c3b4
 80010a0:	0802c2b0 	.word	0x0802c2b0
 80010a4:	0802c30e 	.word	0x0802c30e
 80010a8:	0802c347 	.word	0x0802c347

080010ac <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010ac:	4770      	bx	lr
	...

080010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010ba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010be:	d105      	bne.n	80010cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010c0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c4:	4281      	cmp	r1, r0
 80010c6:	d8fb      	bhi.n	80010c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010cc:	4f17      	ldr	r7, [pc, #92]	; (800112c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ce:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010da:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010de:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010e0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010e2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e4:	b2db      	uxtb	r3, r3
 80010e6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ec:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f0:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f4:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f8:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010fc:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001100:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001104:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001108:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800110a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001112:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001116:	fbbe fef5 	udiv	lr, lr, r5
 800111a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001122:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001126:	4281      	cmp	r1, r0
 8001128:	d8de      	bhi.n	80010e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800112a:	e7cd      	b.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800112c:	fffff800 	.word	0xfffff800

08001130 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001130:	b510      	push	{r4, lr}
        return instance;
 8001132:	4c14      	ldr	r4, [pc, #80]	; (8001184 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001134:	6823      	ldr	r3, [r4, #0]
 8001136:	b323      	cbz	r3, 8001182 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001138:	4b13      	ldr	r3, [pc, #76]	; (8001188 <HAL_LTDC_LineEventCallback+0x58>)
 800113a:	4a14      	ldr	r2, [pc, #80]	; (800118c <HAL_LTDC_LineEventCallback+0x5c>)
 800113c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113e:	8811      	ldrh	r1, [r2, #0]
 8001140:	428b      	cmp	r3, r1
 8001142:	d113      	bne.n	800116c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001144:	4b12      	ldr	r3, [pc, #72]	; (8001190 <HAL_LTDC_LineEventCallback+0x60>)
 8001146:	8819      	ldrh	r1, [r3, #0]
 8001148:	f00a f81a 	bl	800b180 <HAL_LTDC_ProgramLineEvent>
 800114c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001152:	3301      	adds	r3, #1
 8001154:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001158:	f7ff fce8 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800115c:	6820      	ldr	r0, [r4, #0]
 800115e:	f010 fbed 	bl	801193c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001166:	2000      	movs	r0, #0
 8001168:	f7ff bb60 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800116c:	f00a f808 	bl	800b180 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001170:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001172:	6803      	ldr	r3, [r0, #0]
 8001174:	6a1b      	ldr	r3, [r3, #32]
 8001176:	4798      	blx	r3
    }
 8001178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800117c:	2000      	movs	r0, #0
 800117e:	f7ff bb6d 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001182:	bd10      	pop	{r4, pc}
 8001184:	20012fc4 	.word	0x20012fc4
 8001188:	40016800 	.word	0x40016800
 800118c:	20001a12 	.word	0x20001a12
 8001190:	20001a10 	.word	0x20001a10

08001194 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001198:	ed2d 8b02 	vpush	{d8}
 800119c:	b091      	sub	sp, #68	; 0x44
 800119e:	af00      	add	r7, sp, #0
 80011a0:	4605      	mov	r5, r0
 80011a2:	4688      	mov	r8, r1
 80011a4:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a6:	f000 fe3d 	bl	8001e24 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011aa:	b203      	sxth	r3, r0
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	009b      	lsls	r3, r3, #2
 80011b0:	607b      	str	r3, [r7, #4]
 80011b2:	3307      	adds	r3, #7
 80011b4:	f023 0307 	bic.w	r3, r3, #7
 80011b8:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011bc:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011be:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c0:	b1f0      	cbz	r0, 8001200 <calculate_freq_and_signalstrength+0x6c>
 80011c2:	3d01      	subs	r5, #1
 80011c4:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c8:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011ca:	f000 fe29 	bl	8001e20 <MEAS_get_num_of_chan>
 80011ce:	fb06 5000 	mla	r0, r6, r0, r5
 80011d2:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d6:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011da:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e0:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011e2:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e6:	d1f0      	bne.n	80011ca <calculate_freq_and_signalstrength+0x36>
 80011e8:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011ea:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001298 <calculate_freq_and_signalstrength+0x104>
 80011ee:	4456      	add	r6, sl
 80011f0:	edd9 7a00 	vldr	s15, [r9]
 80011f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f8:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011fc:	454e      	cmp	r6, r9
 80011fe:	d1f7      	bne.n	80011f0 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 8001200:	68bb      	ldr	r3, [r7, #8]
 8001202:	466a      	mov	r2, sp
 8001204:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001208:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800120a:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120e:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 8001210:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001212:	b2a1      	uxth	r1, r4
 8001214:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001218:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800121c:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001220:	f027 fdee 	bl	8028e00 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001224:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001226:	2300      	movs	r3, #0
 8001228:	4651      	mov	r1, sl
 800122a:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122e:	462a      	mov	r2, r5
 8001230:	f027 fe6a 	bl	8028f08 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001234:	4622      	mov	r2, r4
 8001236:	4629      	mov	r1, r5
 8001238:	4628      	mov	r0, r5
 800123a:	f028 fad3 	bl	80297e4 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123e:	f000 fdf3 	bl	8001e28 <MEAS_get_samp_freq>
 8001242:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001246:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800124a:	edd9 7a00 	vldr	s15, [r9]
 800124e:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001252:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001256:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800125a:	f107 021c 	add.w	r2, r7, #28
 800125e:	4621      	mov	r1, r4
 8001260:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001262:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001266:	f027 fd63 	bl	8028d30 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800126a:	edd7 7a06 	vldr	s15, [r7, #24]
 800126e:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001272:	f000 fdd9 	bl	8001e28 <MEAS_get_samp_freq>
 8001276:	ee07 0a90 	vmov	s15, r0
 800127a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127e:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001282:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001286:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001288:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 800128c:	46bd      	mov	sp, r7
 800128e:	ecbd 8b02 	vpop	{d8}
 8001292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001296:	bf00      	nop
 8001298:	44fff000 	.word	0x44fff000

0800129c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800129c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129e:	2064      	movs	r0, #100	; 0x64
 80012a0:	f00b fcc8 	bl	800cc34 <osDelay>
  for(;;)
 80012a4:	e7fb      	b.n	800129e <StartDefaultTask+0x2>
 80012a6:	bf00      	nop

080012a8 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	4c10      	ldr	r4, [pc, #64]	; (80012ec <StartTimeoutTask+0x44>)
 80012ac:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f8 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012b0:	4f0f      	ldr	r7, [pc, #60]	; (80012f0 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012b2:	4e10      	ldr	r6, [pc, #64]	; (80012f4 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b4:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b6:	2300      	movs	r3, #0
 80012b8:	461a      	mov	r2, r3
 80012ba:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012bc:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012be:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012c2:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c4:	f00b fdb2 	bl	800ce2c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c8:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012ca:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012cc:	4638      	mov	r0, r7
 80012ce:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012d0:	b912      	cbnz	r2, 80012d8 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012d2:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d4:	f008 f938 	bl	8009548 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d8:	4630      	mov	r0, r6
 80012da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012de:	f008 f937 	bl	8009550 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012e2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e6:	f00b fca5 	bl	800cc34 <osDelay>
	  sleep_timeout_value--;
 80012ea:	e7e3      	b.n	80012b4 <StartTimeoutTask+0xc>
 80012ec:	20000014 	.word	0x20000014
 80012f0:	40021000 	.word	0x40021000
 80012f4:	40021800 	.word	0x40021800
 80012f8:	20001a1c 	.word	0x20001a1c

080012fc <updateGUI_test>:
	return sleep_timeout_value;
 80012fc:	4b01      	ldr	r3, [pc, #4]	; (8001304 <updateGUI_test+0x8>)
}
 80012fe:	6818      	ldr	r0, [r3, #0]
 8001300:	4770      	bx	lr
 8001302:	bf00      	nop
 8001304:	20000014 	.word	0x20000014

08001308 <gyro_disable>:
{
 8001308:	b5f0      	push	{r4, r5, r6, r7, lr}
 800130a:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800130c:	4e1f      	ldr	r6, [pc, #124]	; (800138c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800130e:	4d20      	ldr	r5, [pc, #128]	; (8001390 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001310:	4c20      	ldr	r4, [pc, #128]	; (8001394 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001312:	2700      	movs	r7, #0
 8001314:	9700      	str	r7, [sp, #0]
 8001316:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001318:	f043 0304 	orr.w	r3, r3, #4
 800131c:	6333      	str	r3, [r6, #48]	; 0x30
 800131e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001320:	f003 0304 	and.w	r3, r3, #4
 8001324:	9300      	str	r3, [sp, #0]
 8001326:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001328:	682b      	ldr	r3, [r5, #0]
 800132a:	f023 030c 	bic.w	r3, r3, #12
 800132e:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001330:	682b      	ldr	r3, [r5, #0]
 8001332:	f043 0304 	orr.w	r3, r3, #4
 8001336:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001338:	69ab      	ldr	r3, [r5, #24]
 800133a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133e:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001340:	200a      	movs	r0, #10
 8001342:	f007 ff23 	bl	800918c <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001346:	682b      	ldr	r3, [r5, #0]
 8001348:	f043 030c 	orr.w	r3, r3, #12
 800134c:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800134e:	9701      	str	r7, [sp, #4]
 8001350:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001352:	f043 0320 	orr.w	r3, r3, #32
 8001356:	6333      	str	r3, [r6, #48]	; 0x30
 8001358:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800135a:	f003 0320 	and.w	r3, r3, #32
 800135e:	9301      	str	r3, [sp, #4]
 8001360:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001362:	68a3      	ldr	r3, [r4, #8]
 8001364:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001368:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 800136a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800136c:	f023 030f 	bic.w	r3, r3, #15
 8001370:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001372:	68e3      	ldr	r3, [r4, #12]
 8001374:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001378:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 800137a:	200a      	movs	r0, #10
 800137c:	f007 ff06 	bl	800918c <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001386:	6023      	str	r3, [r4, #0]
}
 8001388:	b003      	add	sp, #12
 800138a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800138c:	40023800 	.word	0x40023800
 8001390:	40020800 	.word	0x40020800
 8001394:	40021400 	.word	0x40021400

08001398 <SystemClock_Config>:
{
 8001398:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139a:	2400      	movs	r4, #0
{
 800139c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013a2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013a6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013ae:	4a1e      	ldr	r2, [pc, #120]	; (8001428 <SystemClock_Config+0x90>)
 80013b0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013b2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b6:	4b1d      	ldr	r3, [pc, #116]	; (800142c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013bc:	6411      	str	r1, [r2, #64]	; 0x40
 80013be:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013c0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013c4:	9201      	str	r2, [sp, #4]
 80013c6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013c8:	9402      	str	r4, [sp, #8]
 80013ca:	681a      	ldr	r2, [r3, #0]
 80013cc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013d0:	601a      	str	r2, [r3, #0]
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013d8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013da:	2201      	movs	r2, #1
 80013dc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013e0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 4;
 80013e4:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013e6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 4;
 80013e8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013ea:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 168;
 80013ee:	23a8      	movs	r3, #168	; 0xa8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013f0:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 80013f4:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013f6:	2202      	movs	r2, #2
 80013f8:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013fa:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013fc:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001400:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001402:	f009 fedf 	bl	800b1c4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001406:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001408:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800140c:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001410:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001414:	a803      	add	r0, sp, #12
 8001416:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001418:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141c:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800141e:	f00a f8e9 	bl	800b5f4 <HAL_RCC_ClockConfig>
}
 8001422:	b015      	add	sp, #84	; 0x54
 8001424:	bd30      	pop	{r4, r5, pc}
 8001426:	bf00      	nop
 8001428:	40023800 	.word	0x40023800
 800142c:	40007000 	.word	0x40007000

08001430 <main>:
{
 8001430:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001434:	2400      	movs	r4, #0
{
 8001436:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001438:	f007 fe7c 	bl	8009134 <HAL_Init>
  SystemClock_Config();
 800143c:	f7ff ffac 	bl	8001398 <SystemClock_Config>
  gyro_disable();
 8001440:	f7ff ff62 	bl	8001308 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001444:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001448:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144c:	4bbd      	ldr	r3, [pc, #756]	; (8001744 <main+0x314>)
 800144e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001450:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001452:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001454:	48bc      	ldr	r0, [pc, #752]	; (8001748 <main+0x318>)
  hi2c3.Instance = I2C3;
 8001456:	4dbd      	ldr	r5, [pc, #756]	; (800174c <main+0x31c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001458:	f041 0110 	orr.w	r1, r1, #16
 800145c:	6319      	str	r1, [r3, #48]	; 0x30
 800145e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001460:	f001 0110 	and.w	r1, r1, #16
 8001464:	9100      	str	r1, [sp, #0]
 8001466:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001468:	9401      	str	r4, [sp, #4]
 800146a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800146c:	f041 0120 	orr.w	r1, r1, #32
 8001470:	6319      	str	r1, [r3, #48]	; 0x30
 8001472:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001474:	f001 0120 	and.w	r1, r1, #32
 8001478:	9101      	str	r1, [sp, #4]
 800147a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800147c:	9402      	str	r4, [sp, #8]
 800147e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001480:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001484:	6319      	str	r1, [r3, #48]	; 0x30
 8001486:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001488:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800148c:	9102      	str	r1, [sp, #8]
 800148e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001490:	9403      	str	r4, [sp, #12]
 8001492:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001494:	f041 0104 	orr.w	r1, r1, #4
 8001498:	6319      	str	r1, [r3, #48]	; 0x30
 800149a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800149c:	f001 0104 	and.w	r1, r1, #4
 80014a0:	9103      	str	r1, [sp, #12]
 80014a2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014a4:	9404      	str	r4, [sp, #16]
 80014a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014a8:	f041 0101 	orr.w	r1, r1, #1
 80014ac:	6319      	str	r1, [r3, #48]	; 0x30
 80014ae:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b0:	f001 0101 	and.w	r1, r1, #1
 80014b4:	9104      	str	r1, [sp, #16]
 80014b6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014b8:	9405      	str	r4, [sp, #20]
 80014ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014bc:	f041 0102 	orr.w	r1, r1, #2
 80014c0:	6319      	str	r1, [r3, #48]	; 0x30
 80014c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c4:	f001 0102 	and.w	r1, r1, #2
 80014c8:	9105      	str	r1, [sp, #20]
 80014ca:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014cc:	9406      	str	r4, [sp, #24]
 80014ce:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80014d4:	6319      	str	r1, [r3, #48]	; 0x30
 80014d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80014dc:	9106      	str	r1, [sp, #24]
 80014de:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014e0:	9407      	str	r4, [sp, #28]
 80014e2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e4:	f041 0108 	orr.w	r1, r1, #8
 80014e8:	6319      	str	r1, [r3, #48]	; 0x30
 80014ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ec:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f0:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f4:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f8:	f008 f826 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014fc:	4892      	ldr	r0, [pc, #584]	; (8001748 <main+0x318>)
 80014fe:	2120      	movs	r1, #32
 8001500:	2201      	movs	r2, #1
 8001502:	f008 f821 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001506:	4892      	ldr	r0, [pc, #584]	; (8001750 <main+0x320>)
 8001508:	4622      	mov	r2, r4
 800150a:	2114      	movs	r1, #20
 800150c:	f008 f81c 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001510:	4890      	ldr	r0, [pc, #576]	; (8001754 <main+0x324>)
 8001512:	4622      	mov	r2, r4
 8001514:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001518:	f008 f816 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800151c:	488e      	ldr	r0, [pc, #568]	; (8001758 <main+0x328>)
 800151e:	4622      	mov	r2, r4
 8001520:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001524:	f008 f810 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001528:	488c      	ldr	r0, [pc, #560]	; (800175c <main+0x32c>)
 800152a:	4622      	mov	r2, r4
 800152c:	2104      	movs	r1, #4
 800152e:	f008 f80b 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001532:	2201      	movs	r2, #1
 8001534:	4889      	ldr	r0, [pc, #548]	; (800175c <main+0x32c>)
 8001536:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800153a:	f008 f805 	bl	8009548 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800153e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001540:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001544:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001546:	4880      	ldr	r0, [pc, #512]	; (8001748 <main+0x318>)
 8001548:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800154a:	f04f 0a08 	mov.w	sl, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800154e:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001552:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001556:	f007 feb3 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800155a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800155e:	487a      	ldr	r0, [pc, #488]	; (8001748 <main+0x318>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001560:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001564:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001566:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001568:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800156a:	f007 fea9 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800156e:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001570:	4875      	ldr	r0, [pc, #468]	; (8001748 <main+0x318>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001572:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001574:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001576:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001578:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800157c:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800157e:	f007 fe9f 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = testpwm_Pin;
 8001582:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(testpwm_GPIO_Port, &GPIO_InitStruct);
 8001584:	4876      	ldr	r0, [pc, #472]	; (8001760 <main+0x330>)
  GPIO_InitStruct.Pin = testpwm_Pin;
 8001586:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(testpwm_GPIO_Port, &GPIO_InitStruct);
 8001588:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800158a:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 800158e:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001592:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001596:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(testpwm_GPIO_Port, &GPIO_InitStruct);
 8001598:	f007 fe92 	bl	80092c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159c:	486c      	ldr	r0, [pc, #432]	; (8001750 <main+0x320>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800159e:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015a2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015a4:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ae:	f007 fe87 	bl	80092c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b2:	4867      	ldr	r0, [pc, #412]	; (8001750 <main+0x320>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015bc:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015c0:	f007 fe7e 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015c8:	4862      	ldr	r0, [pc, #392]	; (8001754 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015ca:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015cc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d4:	f007 fe74 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d8:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015dc:	485e      	ldr	r0, [pc, #376]	; (8001758 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015de:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e6:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e8:	f007 fe6a 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015ec:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f0:	485a      	ldr	r0, [pc, #360]	; (800175c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015f2:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f6:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fa:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015fc:	f007 fe60 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001600:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001604:	4857      	ldr	r0, [pc, #348]	; (8001764 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001606:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001608:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 800160a:	220f      	movs	r2, #15
 800160c:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800160e:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001612:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001614:	f007 fe54 	bl	80092c0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001618:	2105      	movs	r1, #5
 800161a:	4622      	mov	r2, r4
 800161c:	2009      	movs	r0, #9
 800161e:	f007 fdd9 	bl	80091d4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001622:	2009      	movs	r0, #9
 8001624:	f007 fe14 	bl	8009250 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001628:	484f      	ldr	r0, [pc, #316]	; (8001768 <main+0x338>)
 800162a:	4a50      	ldr	r2, [pc, #320]	; (800176c <main+0x33c>)
 800162c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800162e:	f007 fe1d 	bl	800926c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001632:	494f      	ldr	r1, [pc, #316]	; (8001770 <main+0x340>)
 8001634:	4a4f      	ldr	r2, [pc, #316]	; (8001774 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001636:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001638:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800163c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001640:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001642:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001646:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164a:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800164e:	f008 f9e1 	bl	8009a14 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001652:	4641      	mov	r1, r8
 8001654:	4628      	mov	r0, r5
 8001656:	f009 fba9 	bl	800adac <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165a:	4621      	mov	r1, r4
 800165c:	4628      	mov	r0, r5
 800165e:	f009 fbc5 	bl	800adec <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001662:	f8df c124 	ldr.w	ip, [pc, #292]	; 8001788 <main+0x358>
  hspi5.Instance = SPI5;
 8001666:	4844      	ldr	r0, [pc, #272]	; (8001778 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001668:	4d44      	ldr	r5, [pc, #272]	; (800177c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166a:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001674:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001678:	2218      	movs	r2, #24
 800167a:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800167e:	220a      	movs	r2, #10
 8001680:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001682:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001686:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168a:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800168e:	f00a fa9f 	bl	800bbd0 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001692:	2207      	movs	r2, #7
 8001694:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001696:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001698:	4a39      	ldr	r2, [pc, #228]	; (8001780 <main+0x350>)
 800169a:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800169c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80016a0:	61aa      	str	r2, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80016a6:	2340      	movs	r3, #64	; 0x40
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a8:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016ac:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b0:	4628      	mov	r0, r5
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80016b2:	616b      	str	r3, [r5, #20]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b4:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016b8:	e9c5 b803 	strd	fp, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016bc:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 80016be:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c2:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016c4:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c6:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 80016ca:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016cc:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ce:	f00a f98d 	bl	800b9ec <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d6:	a90b      	add	r1, sp, #44	; 0x2c
 80016d8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016da:	e9cd 6a0b 	strd	r6, sl, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016de:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e2:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e4:	f00a f9a4 	bl	800ba30 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e8:	4630      	mov	r0, r6
 80016ea:	f007 fd4f 	bl	800918c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f2:	a90b      	add	r1, sp, #44	; 0x2c
 80016f4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f6:	e9cd 7a0b 	strd	r7, sl, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016fa:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fe:	f00a f997 	bl	800ba30 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001702:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001706:	a90b      	add	r1, sp, #44	; 0x2c
 8001708:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800170a:	e9cd 9a0b 	strd	r9, sl, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170e:	e9cd b40d 	strd	fp, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001712:	f00a f98d 	bl	800ba30 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001716:	f44f 720c 	mov.w	r2, #560	; 0x230
 800171a:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171c:	9908      	ldr	r1, [sp, #32]
 800171e:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001720:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001724:	a90b      	add	r1, sp, #44	; 0x2c
 8001726:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001728:	e9cd ba0b 	strd	fp, sl, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172c:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172e:	f00a f97f 	bl	800ba30 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001732:	4628      	mov	r0, r5
 8001734:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001738:	4d12      	ldr	r5, [pc, #72]	; (8001784 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173a:	f00a f997 	bl	800ba6c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800173e:	4621      	mov	r1, r4
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	e023      	b.n	800178c <main+0x35c>
 8001744:	40023800 	.word	0x40023800
 8001748:	40021000 	.word	0x40021000
 800174c:	20001a30 	.word	0x20001a30
 8001750:	40020800 	.word	0x40020800
 8001754:	40020400 	.word	0x40020400
 8001758:	40020c00 	.word	0x40020c00
 800175c:	40021800 	.word	0x40021800
 8001760:	40021400 	.word	0x40021400
 8001764:	40020000 	.word	0x40020000
 8001768:	20001a28 	.word	0x20001a28
 800176c:	40023000 	.word	0x40023000
 8001770:	40005c00 	.word	0x40005c00
 8001774:	000186a0 	.word	0x000186a0
 8001778:	20001b60 	.word	0x20001b60
 800177c:	20001b2c 	.word	0x20001b2c
 8001780:	a0000140 	.word	0xa0000140
 8001784:	20001a84 	.word	0x20001a84
 8001788:	40015000 	.word	0x40015000
 800178c:	a80f      	add	r0, sp, #60	; 0x3c
 800178e:	f029 fc10 	bl	802afb2 <memset>
  hltdc.Instance = LTDC;
 8001792:	4a70      	ldr	r2, [pc, #448]	; (8001954 <main+0x524>)
 8001794:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8001796:	221d      	movs	r2, #29
 8001798:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800179a:	f240 1b0d 	movw	fp, #269	; 0x10d
 800179e:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 80017a2:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 80017a6:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.AccumulatedVBP = 3;
 80017aa:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.TotalHeigh = 327;
 80017ae:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80017b2:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HorizontalSync = 9;
 80017b4:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017b8:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80017ba:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80017be:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80017c0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017c4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 80017c8:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 80017cc:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017d0:	f009 fb30 	bl	800ae34 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017d4:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 80017d6:	25f0      	movs	r5, #240	; 0xf0
 80017d8:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 80017da:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 80017dc:	f44f 75a0 	mov.w	r5, #320	; 0x140
 80017e0:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 80017e2:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 80017e4:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017e6:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 80017ee:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2505      	movs	r5, #5
 80017f2:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 80017f6:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 80017f8:	4d57      	ldr	r5, [pc, #348]	; (8001958 <main+0x528>)
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f009 fbe9 	bl	800afe0 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4a53      	ldr	r2, [pc, #332]	; (800195c <main+0x52c>)
 8001810:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8001812:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8001814:	4e52      	ldr	r6, [pc, #328]	; (8001960 <main+0x530>)
  LcdDrv->Init();
 8001816:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8001818:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 800181a:	4d52      	ldr	r5, [pc, #328]	; (8001964 <main+0x534>)
  LcdDrv->DisplayOff();
 800181c:	68d2      	ldr	r2, [r2, #12]
 800181e:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8001820:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001824:	4a50      	ldr	r2, [pc, #320]	; (8001968 <main+0x538>)
 8001826:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001828:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800182a:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 800182e:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001832:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8001834:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001838:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800183c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001840:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001844:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001846:	f00a fdb3 	bl	800c3b0 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800184a:	a90f      	add	r1, sp, #60	; 0x3c
 800184c:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800184e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001852:	f00a ff27 	bl	800c6a4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001856:	a90b      	add	r1, sp, #44	; 0x2c
 8001858:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800185a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800185e:	f00b f85f 	bl	800c920 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001862:	4a42      	ldr	r2, [pc, #264]	; (800196c <main+0x53c>)
 8001864:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001866:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001868:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 800186c:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001870:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001872:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001874:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001878:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800187c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001880:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001884:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001886:	9409      	str	r4, [sp, #36]	; 0x24
 8001888:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	f00a fd91 	bl	800c3b0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800188e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001892:	a90b      	add	r1, sp, #44	; 0x2c
 8001894:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001896:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001898:	f00a fe54 	bl	800c544 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 800189c:	a90f      	add	r1, sp, #60	; 0x3c
 800189e:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 80018a0:	4e33      	ldr	r6, [pc, #204]	; (8001970 <main+0x540>)
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018a2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018a6:	f00a fefd 	bl	800c6a4 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018aa:	a909      	add	r1, sp, #36	; 0x24
 80018ac:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ae:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018b2:	f00b f835 	bl	800c920 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 80018b6:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 80018ba:	f243 3244 	movw	r2, #13124	; 0x3344
 80018be:	e9c6 e200 	strd	lr, r2, [r6]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018c2:	4630      	mov	r0, r6
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018c4:	2280      	movs	r2, #128	; 0x80
 80018c6:	61b2      	str	r2, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018c8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018cc:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018d0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 80018d4:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018d8:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018da:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018dc:	f00a fd68 	bl	800c3b0 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018e4:	a90f      	add	r1, sp, #60	; 0x3c
 80018e6:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018e8:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018ea:	f00a fe2b 	bl	800c544 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80018ee:	a90b      	add	r1, sp, #44	; 0x2c
 80018f0:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018f2:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80018f6:	f00b f813 	bl	800c920 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018fa:	f7fe fed3 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018fe:	f7fe fecf 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001902:	f7ff fd01 	bl	8001308 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001906:	f000 f94d 	bl	8001ba4 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800190a:	f000 f97f 	bl	8001c0c <MEAS_timer_init>
  osKernelInitialize();
 800190e:	f00b f919 	bl	800cb44 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001912:	4a18      	ldr	r2, [pc, #96]	; (8001974 <main+0x544>)
 8001914:	4639      	mov	r1, r7
 8001916:	4640      	mov	r0, r8
 8001918:	f00b fa4e 	bl	800cdb8 <osMessageQueueNew>
 800191c:	4b16      	ldr	r3, [pc, #88]	; (8001978 <main+0x548>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800191e:	4a17      	ldr	r2, [pc, #92]	; (800197c <main+0x54c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001920:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001922:	4621      	mov	r1, r4
 8001924:	4816      	ldr	r0, [pc, #88]	; (8001980 <main+0x550>)
 8001926:	f00b f939 	bl	800cb9c <osThreadNew>
 800192a:	4b16      	ldr	r3, [pc, #88]	; (8001984 <main+0x554>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800192c:	4a16      	ldr	r2, [pc, #88]	; (8001988 <main+0x558>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800192e:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001930:	4621      	mov	r1, r4
 8001932:	4816      	ldr	r0, [pc, #88]	; (800198c <main+0x55c>)
 8001934:	f00b f932 	bl	800cb9c <osThreadNew>
 8001938:	4b15      	ldr	r3, [pc, #84]	; (8001990 <main+0x560>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800193a:	4a16      	ldr	r2, [pc, #88]	; (8001994 <main+0x564>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800193c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800193e:	4621      	mov	r1, r4
 8001940:	4815      	ldr	r0, [pc, #84]	; (8001998 <main+0x568>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001942:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001944:	f00b f92a 	bl	800cb9c <osThreadNew>
 8001948:	4b14      	ldr	r3, [pc, #80]	; (800199c <main+0x56c>)
 800194a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800194c:	f00b f90c 	bl	800cb68 <osKernelStart>
  while (1)
 8001950:	e7fe      	b.n	8001950 <main+0x520>
 8001952:	bf00      	nop
 8001954:	40016800 	.word	0x40016800
 8001958:	20001a18 	.word	0x20001a18
 800195c:	20000018 	.word	0x20000018
 8001960:	20001bb8 	.word	0x20001bb8
 8001964:	20001c48 	.word	0x20001c48
 8001968:	40010000 	.word	0x40010000
 800196c:	40000400 	.word	0x40000400
 8001970:	20001c00 	.word	0x20001c00
 8001974:	0802c424 	.word	0x0802c424
 8001978:	20001a1c 	.word	0x20001a1c
 800197c:	0802c460 	.word	0x0802c460
 8001980:	0800129d 	.word	0x0800129d
 8001984:	20001a24 	.word	0x20001a24
 8001988:	0802c400 	.word	0x0802c400
 800198c:	080006b5 	.word	0x080006b5
 8001990:	20001a14 	.word	0x20001a14
 8001994:	0802c43c 	.word	0x0802c43c
 8001998:	080012a9 	.word	0x080012a9
 800199c:	20001a20 	.word	0x20001a20

080019a0 <IOE_Init>:
 80019a0:	4770      	bx	lr
 80019a2:	bf00      	nop

080019a4 <IOE_ITConfig>:
 80019a4:	4770      	bx	lr
 80019a6:	bf00      	nop

080019a8 <IOE_Write>:
{
 80019a8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019aa:	4c09      	ldr	r4, [pc, #36]	; (80019d0 <IOE_Write+0x28>)
{
 80019ac:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019ae:	6824      	ldr	r4, [r4, #0]
 80019b0:	9402      	str	r4, [sp, #8]
{
 80019b2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019b4:	2301      	movs	r3, #1
 80019b6:	f88d 4017 	strb.w	r4, [sp, #23]
 80019ba:	f10d 0417 	add.w	r4, sp, #23
 80019be:	460a      	mov	r2, r1
 80019c0:	9301      	str	r3, [sp, #4]
 80019c2:	4601      	mov	r1, r0
 80019c4:	9400      	str	r4, [sp, #0]
 80019c6:	4803      	ldr	r0, [pc, #12]	; (80019d4 <IOE_Write+0x2c>)
 80019c8:	f008 f8ec 	bl	8009ba4 <HAL_I2C_Mem_Write>
}
 80019cc:	b006      	add	sp, #24
 80019ce:	bd10      	pop	{r4, pc}
 80019d0:	2000000c 	.word	0x2000000c
 80019d4:	20001a30 	.word	0x20001a30

080019d8 <IOE_Read>:
{
 80019d8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019da:	4b0b      	ldr	r3, [pc, #44]	; (8001a08 <IOE_Read+0x30>)
{
 80019dc:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019de:	681b      	ldr	r3, [r3, #0]
 80019e0:	9302      	str	r3, [sp, #8]
{
 80019e2:	4684      	mov	ip, r0
 80019e4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019e6:	2301      	movs	r3, #1
 80019e8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019ec:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ee:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019f2:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019f6:	4661      	mov	r1, ip
 80019f8:	4804      	ldr	r0, [pc, #16]	; (8001a0c <IOE_Read+0x34>)
 80019fa:	f008 f9c5 	bl	8009d88 <HAL_I2C_Mem_Read>
}
 80019fe:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001a02:	b007      	add	sp, #28
 8001a04:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a08:	2000000c 	.word	0x2000000c
 8001a0c:	20001a30 	.word	0x20001a30

08001a10 <IOE_ReadMultiple>:
{
 8001a10:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a12:	4c09      	ldr	r4, [pc, #36]	; (8001a38 <IOE_ReadMultiple+0x28>)
{
 8001a14:	b084      	sub	sp, #16
 8001a16:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a18:	6820      	ldr	r0, [r4, #0]
 8001a1a:	9002      	str	r0, [sp, #8]
 8001a1c:	e9cd 2300 	strd	r2, r3, [sp]
 8001a20:	4806      	ldr	r0, [pc, #24]	; (8001a3c <IOE_ReadMultiple+0x2c>)
 8001a22:	460a      	mov	r2, r1
 8001a24:	2301      	movs	r3, #1
 8001a26:	4661      	mov	r1, ip
 8001a28:	f008 f9ae 	bl	8009d88 <HAL_I2C_Mem_Read>
}
 8001a2c:	3800      	subs	r0, #0
 8001a2e:	bf18      	it	ne
 8001a30:	2001      	movne	r0, #1
 8001a32:	b004      	add	sp, #16
 8001a34:	bd10      	pop	{r4, pc}
 8001a36:	bf00      	nop
 8001a38:	2000000c 	.word	0x2000000c
 8001a3c:	20001a30 	.word	0x20001a30

08001a40 <IOE_Delay>:
 8001a40:	f007 bba4 	b.w	800918c <HAL_Delay>

08001a44 <LCD_IO_Init>:
{
 8001a44:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a46:	4806      	ldr	r0, [pc, #24]	; (8001a60 <LCD_IO_Init+0x1c>)
 8001a48:	2200      	movs	r2, #0
 8001a4a:	2104      	movs	r1, #4
 8001a4c:	f007 fd7c 	bl	8009548 <HAL_GPIO_WritePin>
}
 8001a50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a54:	4802      	ldr	r0, [pc, #8]	; (8001a60 <LCD_IO_Init+0x1c>)
 8001a56:	2201      	movs	r2, #1
 8001a58:	2104      	movs	r1, #4
 8001a5a:	f007 bd75 	b.w	8009548 <HAL_GPIO_WritePin>
 8001a5e:	bf00      	nop
 8001a60:	40020800 	.word	0x40020800

08001a64 <LCD_IO_WriteData>:
{
 8001a64:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a66:	4d10      	ldr	r5, [pc, #64]	; (8001aa8 <LCD_IO_WriteData+0x44>)
{
 8001a68:	b083      	sub	sp, #12
 8001a6a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a6c:	2201      	movs	r2, #1
 8001a6e:	480f      	ldr	r0, [pc, #60]	; (8001aac <LCD_IO_WriteData+0x48>)
 8001a70:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a74:	f007 fd68 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a78:	4628      	mov	r0, r5
 8001a7a:	2200      	movs	r2, #0
 8001a7c:	2104      	movs	r1, #4
 8001a7e:	f007 fd63 	bl	8009548 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a82:	4b0b      	ldr	r3, [pc, #44]	; (8001ab0 <LCD_IO_WriteData+0x4c>)
 8001a84:	480b      	ldr	r0, [pc, #44]	; (8001ab4 <LCD_IO_WriteData+0x50>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a8c:	f10d 0106 	add.w	r1, sp, #6
 8001a90:	2201      	movs	r2, #1
 8001a92:	f00a f8ff 	bl	800bc94 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a96:	2201      	movs	r2, #1
 8001a98:	2104      	movs	r1, #4
 8001a9a:	4628      	mov	r0, r5
}
 8001a9c:	b003      	add	sp, #12
 8001a9e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001aa2:	f007 bd51 	b.w	8009548 <HAL_GPIO_WritePin>
 8001aa6:	bf00      	nop
 8001aa8:	40020800 	.word	0x40020800
 8001aac:	40020c00 	.word	0x40020c00
 8001ab0:	20000010 	.word	0x20000010
 8001ab4:	20001b60 	.word	0x20001b60

08001ab8 <LCD_IO_WriteReg>:
{
 8001ab8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aba:	4d10      	ldr	r5, [pc, #64]	; (8001afc <LCD_IO_WriteReg+0x44>)
{
 8001abc:	b083      	sub	sp, #12
 8001abe:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	480f      	ldr	r0, [pc, #60]	; (8001b00 <LCD_IO_WriteReg+0x48>)
 8001ac4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ac8:	f007 fd3e 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001acc:	4628      	mov	r0, r5
 8001ace:	2200      	movs	r2, #0
 8001ad0:	2104      	movs	r1, #4
 8001ad2:	f007 fd39 	bl	8009548 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ad6:	4b0b      	ldr	r3, [pc, #44]	; (8001b04 <LCD_IO_WriteReg+0x4c>)
 8001ad8:	480b      	ldr	r0, [pc, #44]	; (8001b08 <LCD_IO_WriteReg+0x50>)
 8001ada:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001adc:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f10d 0106 	add.w	r1, sp, #6
 8001ae4:	2201      	movs	r2, #1
 8001ae6:	f00a f8d5 	bl	800bc94 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001aea:	2201      	movs	r2, #1
 8001aec:	2104      	movs	r1, #4
 8001aee:	4628      	mov	r0, r5
}
 8001af0:	b003      	add	sp, #12
 8001af2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001af6:	f007 bd27 	b.w	8009548 <HAL_GPIO_WritePin>
 8001afa:	bf00      	nop
 8001afc:	40020800 	.word	0x40020800
 8001b00:	40020c00 	.word	0x40020c00
 8001b04:	20000010 	.word	0x20000010
 8001b08:	20001b60 	.word	0x20001b60

08001b0c <LCD_IO_ReadData>:
{
 8001b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b10:	4e19      	ldr	r6, [pc, #100]	; (8001b78 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b12:	4f1a      	ldr	r7, [pc, #104]	; (8001b7c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b14:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b80 <LCD_IO_ReadData+0x74>
 8001b18:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b84 <LCD_IO_ReadData+0x78>
{
 8001b1c:	b083      	sub	sp, #12
 8001b1e:	460c      	mov	r4, r1
 8001b20:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b22:	2200      	movs	r2, #0
 8001b24:	4630      	mov	r0, r6
 8001b26:	2104      	movs	r1, #4
 8001b28:	f007 fd0e 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b2c:	4638      	mov	r0, r7
 8001b2e:	2200      	movs	r2, #0
 8001b30:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b34:	f007 fd08 	bl	8009548 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b38:	f8d9 3000 	ldr.w	r3, [r9]
 8001b3c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b40:	a901      	add	r1, sp, #4
 8001b42:	2201      	movs	r2, #1
 8001b44:	4640      	mov	r0, r8
 8001b46:	f00a f8a5 	bl	800bc94 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b4a:	f8d9 3000 	ldr.w	r3, [r9]
 8001b4e:	4622      	mov	r2, r4
 8001b50:	a901      	add	r1, sp, #4
 8001b52:	4640      	mov	r0, r8
 8001b54:	f00a fb46 	bl	800c1e4 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b58:	4638      	mov	r0, r7
 8001b5a:	2201      	movs	r2, #1
 8001b5c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b60:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b62:	f007 fcf1 	bl	8009548 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b66:	4630      	mov	r0, r6
 8001b68:	2201      	movs	r2, #1
 8001b6a:	2104      	movs	r1, #4
 8001b6c:	f007 fcec 	bl	8009548 <HAL_GPIO_WritePin>
}
 8001b70:	4620      	mov	r0, r4
 8001b72:	b003      	add	sp, #12
 8001b74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b78:	40020800 	.word	0x40020800
 8001b7c:	40020c00 	.word	0x40020c00
 8001b80:	20000010 	.word	0x20000010
 8001b84:	20001b60 	.word	0x20001b60

08001b88 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b88:	f007 bb00 	b.w	800918c <HAL_Delay>

08001b8c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b8c:	4b03      	ldr	r3, [pc, #12]	; (8001b9c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b8e:	6802      	ldr	r2, [r0, #0]
 8001b90:	429a      	cmp	r2, r3
 8001b92:	d000      	beq.n	8001b96 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b94:	4770      	bx	lr
    HAL_IncTick();
 8001b96:	f007 bae7 	b.w	8009168 <HAL_IncTick>
 8001b9a:	bf00      	nop
 8001b9c:	40001000 	.word	0x40001000

08001ba0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001ba0:	4770      	bx	lr
 8001ba2:	bf00      	nop

08001ba4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001ba4:	b410      	push	{r4}
 8001ba6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001ba8:	4b15      	ldr	r3, [pc, #84]	; (8001c00 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001baa:	4916      	ldr	r1, [pc, #88]	; (8001c04 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001bac:	2400      	movs	r4, #0
 8001bae:	9400      	str	r4, [sp, #0]
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f042 0220 	orr.w	r2, r2, #32
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bba:	f002 0220 	and.w	r2, r2, #32
 8001bbe:	9200      	str	r2, [sp, #0]
 8001bc0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bc2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001bc4:	4a10      	ldr	r2, [pc, #64]	; (8001c08 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bc6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001bca:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001bcc:	6808      	ldr	r0, [r1, #0]
 8001bce:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001bd2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001bd4:	9401      	str	r4, [sp, #4]
 8001bd6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bd8:	f041 0104 	orr.w	r1, r1, #4
 8001bdc:	6319      	str	r1, [r3, #48]	; 0x30
 8001bde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001be0:	f003 0304 	and.w	r3, r3, #4
 8001be4:	9301      	str	r3, [sp, #4]
 8001be6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001be8:	6813      	ldr	r3, [r2, #0]
 8001bea:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001bee:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001bf0:	6813      	ldr	r3, [r2, #0]
 8001bf2:	f043 030c 	orr.w	r3, r3, #12
 8001bf6:	6013      	str	r3, [r2, #0]
}
 8001bf8:	b003      	add	sp, #12
 8001bfa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bfe:	4770      	bx	lr
 8001c00:	40023800 	.word	0x40023800
 8001c04:	40021400 	.word	0x40021400
 8001c08:	40020800 	.word	0x40020800

08001c0c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001c0c:	b410      	push	{r4}
 8001c0e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c10:	4a0e      	ldr	r2, [pc, #56]	; (8001c4c <MEAS_timer_init+0x40>)
 8001c12:	2000      	movs	r0, #0
 8001c14:	9001      	str	r0, [sp, #4]
 8001c16:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001c18:	f041 0101 	orr.w	r1, r1, #1
 8001c1c:	6411      	str	r1, [r2, #64]	; 0x40
 8001c1e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c20:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c24:	f002 0201 	and.w	r2, r2, #1
 8001c28:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c2a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c2e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c30:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c32:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c34:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001c36:	685a      	ldr	r2, [r3, #4]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001c38:	4905      	ldr	r1, [pc, #20]	; (8001c50 <MEAS_timer_init+0x44>)
 8001c3a:	f042 0220 	orr.w	r2, r2, #32
 8001c3e:	605a      	str	r2, [r3, #4]
 8001c40:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001c44:	b003      	add	sp, #12
 8001c46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c4a:	4770      	bx	lr
 8001c4c:	40023800 	.word	0x40023800
 8001c50:	e000e100 	.word	0xe000e100

08001c54 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001c54:	b410      	push	{r4}
 8001c56:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c58:	4a36      	ldr	r2, [pc, #216]	; (8001d34 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c5a:	4b37      	ldr	r3, [pc, #220]	; (8001d38 <MEAS_ADC3_scan_init+0xe4>)
 8001c5c:	4c37      	ldr	r4, [pc, #220]	; (8001d3c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c5e:	2100      	movs	r1, #0
 8001c60:	9100      	str	r1, [sp, #0]
 8001c62:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001c64:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001c68:	6450      	str	r0, [r2, #68]	; 0x44
 8001c6a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001c6c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001c70:	9000      	str	r0, [sp, #0]
 8001c72:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c74:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001c76:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001c7a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001c7c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c7e:	f040 0004 	orr.w	r0, r0, #4
 8001c82:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001c84:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c86:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001c8a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001c8c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c8e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001c92:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001c94:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001c96:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001c9a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001c9c:	6858      	ldr	r0, [r3, #4]
 8001c9e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001ca2:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001ca4:	6898      	ldr	r0, [r3, #8]
 8001ca6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001caa:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001cac:	6898      	ldr	r0, [r3, #8]
 8001cae:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001cb2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001cb4:	6898      	ldr	r0, [r3, #8]
 8001cb6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001cba:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001cbc:	9101      	str	r1, [sp, #4]
 8001cbe:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001cc0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001cc4:	6310      	str	r0, [r2, #48]	; 0x30
 8001cc6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001cc8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001ccc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001cce:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001cd2:	9a01      	ldr	r2, [sp, #4]
 8001cd4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001cd8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cda:	f022 0201 	bic.w	r2, r2, #1
 8001cde:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001ce0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ce2:	07d2      	lsls	r2, r2, #31
 8001ce4:	d4fc      	bmi.n	8001ce0 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001ce6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001ce8:	4815      	ldr	r0, [pc, #84]	; (8001d40 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001cea:	4916      	ldr	r1, [pc, #88]	; (8001d44 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001cec:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001cf0:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001cf2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cf4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001cf8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001cfa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cfc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001d00:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001d02:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d04:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001d08:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001d0a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d0c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001d10:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001d12:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d14:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001d18:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001d1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001d1c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001d20:	f042 0210 	orr.w	r2, r2, #16
 8001d24:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001d26:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001d28:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001d2a:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001d2c:	b003      	add	sp, #12
 8001d2e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001d32:	4770      	bx	lr
 8001d34:	40023800 	.word	0x40023800
 8001d38:	40012200 	.word	0x40012200
 8001d3c:	e000e100 	.word	0xe000e100
 8001d40:	4001224c 	.word	0x4001224c
 8001d44:	20001c90 	.word	0x20001c90

08001d48 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001d48:	4b1b      	ldr	r3, [pc, #108]	; (8001db8 <DMA2_Stream1_IRQHandler+0x70>)
 8001d4a:	681a      	ldr	r2, [r3, #0]
 8001d4c:	0511      	lsls	r1, r2, #20
 8001d4e:	d400      	bmi.n	8001d52 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001d50:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d52:	4a1a      	ldr	r2, [pc, #104]	; (8001dbc <DMA2_Stream1_IRQHandler+0x74>)
 8001d54:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001d58:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001d5c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001d60:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d64:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001d68:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d6a:	f022 0201 	bic.w	r2, r2, #1
 8001d6e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001d70:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d72:	07d2      	lsls	r2, r2, #31
 8001d74:	d4fc      	bmi.n	8001d70 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d76:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d78:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001d7c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001d80:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d82:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d84:	490e      	ldr	r1, [pc, #56]	; (8001dc0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001d86:	f023 0301 	bic.w	r3, r3, #1
 8001d8a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d8c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d8e:	4b0d      	ldr	r3, [pc, #52]	; (8001dc4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001d90:	f020 0001 	bic.w	r0, r0, #1
 8001d94:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001d96:	6888      	ldr	r0, [r1, #8]
 8001d98:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001d9c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001d9e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001da0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001da4:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001da6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001da8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001dac:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001dae:	6813      	ldr	r3, [r2, #0]
 8001db0:	f023 0301 	bic.w	r3, r3, #1
 8001db4:	6013      	str	r3, [r2, #0]
}
 8001db6:	4770      	bx	lr
 8001db8:	40026400 	.word	0x40026400
 8001dbc:	e000e100 	.word	0xe000e100
 8001dc0:	40012200 	.word	0x40012200
 8001dc4:	40023800 	.word	0x40023800

08001dc8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001dc8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001dca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dce:	2100      	movs	r1, #0
 8001dd0:	480f      	ldr	r0, [pc, #60]	; (8001e10 <MEAS_start_measure+0x48>)
 8001dd2:	f029 f8ee 	bl	802afb2 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001dd6:	f7ff ff3d 	bl	8001c54 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001dda:	4a0e      	ldr	r2, [pc, #56]	; (8001e14 <MEAS_start_measure+0x4c>)
 8001ddc:	490e      	ldr	r1, [pc, #56]	; (8001e18 <MEAS_start_measure+0x50>)
 8001dde:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001de0:	480e      	ldr	r0, [pc, #56]	; (8001e1c <MEAS_start_measure+0x54>)
 8001de2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001de6:	f043 0301 	orr.w	r3, r3, #1
 8001dea:	6293      	str	r3, [r2, #40]	; 0x28
 8001dec:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001df0:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001df2:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001df4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001df8:	f043 0301 	orr.w	r3, r3, #1
 8001dfc:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001dfe:	680b      	ldr	r3, [r1, #0]
 8001e00:	f043 0301 	orr.w	r3, r3, #1
 8001e04:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001e06:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001e08:	07db      	lsls	r3, r3, #31
 8001e0a:	d4fc      	bmi.n	8001e06 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001e0c:	4800      	ldr	r0, [pc, #0]	; (8001e10 <MEAS_start_measure+0x48>)
 8001e0e:	bd10      	pop	{r4, pc}
 8001e10:	20001c90 	.word	0x20001c90
 8001e14:	40026400 	.word	0x40026400
 8001e18:	e000e100 	.word	0xe000e100
 8001e1c:	40012200 	.word	0x40012200

08001e20 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001e20:	2004      	movs	r0, #4
 8001e22:	4770      	bx	lr

08001e24 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001e24:	2040      	movs	r0, #64	; 0x40
 8001e26:	4770      	bx	lr

08001e28 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001e28:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001e2c:	4770      	bx	lr
 8001e2e:	bf00      	nop

08001e30 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001e30:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001e32:	4b0e      	ldr	r3, [pc, #56]	; (8001e6c <HAL_MspInit+0x3c>)
 8001e34:	2200      	movs	r2, #0
 8001e36:	9200      	str	r2, [sp, #0]
 8001e38:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001e3a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001e3e:	6459      	str	r1, [r3, #68]	; 0x44
 8001e40:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001e42:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001e46:	9000      	str	r0, [sp, #0]
 8001e48:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e4a:	9201      	str	r2, [sp, #4]
 8001e4c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001e4e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001e52:	6418      	str	r0, [r3, #64]	; 0x40
 8001e54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e5a:	9301      	str	r3, [sp, #4]
 8001e5c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e5e:	210f      	movs	r1, #15
 8001e60:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e64:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e66:	f007 b9b5 	b.w	80091d4 <HAL_NVIC_SetPriority>
 8001e6a:	bf00      	nop
 8001e6c:	40023800 	.word	0x40023800

08001e70 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001e70:	4b0b      	ldr	r3, [pc, #44]	; (8001ea0 <HAL_CRC_MspInit+0x30>)
 8001e72:	6802      	ldr	r2, [r0, #0]
 8001e74:	429a      	cmp	r2, r3
 8001e76:	d000      	beq.n	8001e7a <HAL_CRC_MspInit+0xa>
 8001e78:	4770      	bx	lr
{
 8001e7a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e7c:	2200      	movs	r2, #0
 8001e7e:	9201      	str	r2, [sp, #4]
 8001e80:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e84:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e88:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001e8c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001e90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e92:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e96:	9301      	str	r3, [sp, #4]
 8001e98:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e9a:	b002      	add	sp, #8
 8001e9c:	4770      	bx	lr
 8001e9e:	bf00      	nop
 8001ea0:	40023000 	.word	0x40023000

08001ea4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ea4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001ea8:	4b2e      	ldr	r3, [pc, #184]	; (8001f64 <HAL_I2C_MspInit+0xc0>)
 8001eaa:	6802      	ldr	r2, [r0, #0]
{
 8001eac:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eae:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001eb0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eb2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001eb6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001eba:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001ebc:	d002      	beq.n	8001ec4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001ebe:	b00a      	add	sp, #40	; 0x28
 8001ec0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ec4:	4d28      	ldr	r5, [pc, #160]	; (8001f68 <HAL_I2C_MspInit+0xc4>)
 8001ec6:	9401      	str	r4, [sp, #4]
 8001ec8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eca:	4828      	ldr	r0, [pc, #160]	; (8001f6c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ecc:	f043 0304 	orr.w	r3, r3, #4
 8001ed0:	632b      	str	r3, [r5, #48]	; 0x30
 8001ed2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ed4:	f003 0304 	and.w	r3, r3, #4
 8001ed8:	9301      	str	r3, [sp, #4]
 8001eda:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001edc:	9402      	str	r4, [sp, #8]
 8001ede:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ee0:	f043 0301 	orr.w	r3, r3, #1
 8001ee4:	632b      	str	r3, [r5, #48]	; 0x30
 8001ee6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001ee8:	f003 0301 	and.w	r3, r3, #1
 8001eec:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001eee:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001ef2:	f04f 0801 	mov.w	r8, #1
 8001ef6:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001efa:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001efc:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001efe:	2312      	movs	r3, #18
 8001f00:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001f04:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f08:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f0a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f0c:	f007 f9d8 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f10:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001f12:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001f16:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f18:	4815      	ldr	r0, [pc, #84]	; (8001f70 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f1a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001f1c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001f20:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f24:	f007 f9cc 	bl	80092c0 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f28:	9403      	str	r4, [sp, #12]
 8001f2a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001f2c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f30:	642b      	str	r3, [r5, #64]	; 0x40
 8001f32:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001f34:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f38:	4622      	mov	r2, r4
 8001f3a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f3c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f3e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001f40:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001f42:	f007 f947 	bl	80091d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001f46:	2048      	movs	r0, #72	; 0x48
 8001f48:	f007 f982 	bl	8009250 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001f4c:	6a2b      	ldr	r3, [r5, #32]
 8001f4e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f52:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f54:	6a2b      	ldr	r3, [r5, #32]
 8001f56:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f5a:	622b      	str	r3, [r5, #32]
}
 8001f5c:	b00a      	add	sp, #40	; 0x28
 8001f5e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001f62:	bf00      	nop
 8001f64:	40005c00 	.word	0x40005c00
 8001f68:	40023800 	.word	0x40023800
 8001f6c:	40020800 	.word	0x40020800
 8001f70:	40020000 	.word	0x40020000

08001f74 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f78:	4604      	mov	r4, r0
 8001f7a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f7c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f7e:	2230      	movs	r2, #48	; 0x30
 8001f80:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f82:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001f86:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001f8a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f8c:	f029 f811 	bl	802afb2 <memset>
  if(hltdc->Instance==LTDC)
 8001f90:	4b66      	ldr	r3, [pc, #408]	; (800212c <HAL_LTDC_MspInit+0x1b8>)
 8001f92:	6822      	ldr	r2, [r4, #0]
 8001f94:	429a      	cmp	r2, r3
 8001f96:	d002      	beq.n	8001f9e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f98:	b01a      	add	sp, #104	; 0x68
 8001f9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f9e:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 8001fa0:	2232      	movs	r2, #50	; 0x32
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8001fa2:	2302      	movs	r3, #2
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001fa4:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001fa6:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 8001fa8:	9212      	str	r2, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8001faa:	9314      	str	r3, [sp, #80]	; 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001fac:	f009 fbf2 	bl	800b794 <HAL_RCCEx_PeriphCLKConfig>
 8001fb0:	2800      	cmp	r0, #0
 8001fb2:	f040 80b7 	bne.w	8002124 <HAL_LTDC_MspInit+0x1b0>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001fb6:	4b5e      	ldr	r3, [pc, #376]	; (8002130 <HAL_LTDC_MspInit+0x1bc>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fb8:	485e      	ldr	r0, [pc, #376]	; (8002134 <HAL_LTDC_MspInit+0x1c0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001fba:	2400      	movs	r4, #0
 8001fbc:	9401      	str	r4, [sp, #4]
 8001fbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fc0:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001fc4:	645a      	str	r2, [r3, #68]	; 0x44
 8001fc6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001fc8:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001fcc:	9201      	str	r2, [sp, #4]
 8001fce:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001fd0:	9402      	str	r4, [sp, #8]
 8001fd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fd4:	f042 0220 	orr.w	r2, r2, #32
 8001fd8:	631a      	str	r2, [r3, #48]	; 0x30
 8001fda:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fdc:	f002 0220 	and.w	r2, r2, #32
 8001fe0:	9202      	str	r2, [sp, #8]
 8001fe2:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fe4:	9403      	str	r4, [sp, #12]
 8001fe6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe8:	f042 0201 	orr.w	r2, r2, #1
 8001fec:	631a      	str	r2, [r3, #48]	; 0x30
 8001fee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ff0:	f002 0201 	and.w	r2, r2, #1
 8001ff4:	9203      	str	r2, [sp, #12]
 8001ff6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ff8:	9404      	str	r4, [sp, #16]
 8001ffa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ffc:	f042 0202 	orr.w	r2, r2, #2
 8002000:	631a      	str	r2, [r3, #48]	; 0x30
 8002002:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002004:	f002 0202 	and.w	r2, r2, #2
 8002008:	9204      	str	r2, [sp, #16]
 800200a:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800200c:	9405      	str	r4, [sp, #20]
 800200e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002010:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002014:	631a      	str	r2, [r3, #48]	; 0x30
 8002016:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002018:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800201c:	9205      	str	r2, [sp, #20]
 800201e:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002020:	9406      	str	r4, [sp, #24]
 8002022:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002024:	f042 0204 	orr.w	r2, r2, #4
 8002028:	631a      	str	r2, [r3, #48]	; 0x30
 800202a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800202c:	f002 0204 	and.w	r2, r2, #4
 8002030:	9206      	str	r2, [sp, #24]
 8002032:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002034:	9407      	str	r4, [sp, #28]
 8002036:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002038:	f042 0208 	orr.w	r2, r2, #8
 800203c:	631a      	str	r2, [r3, #48]	; 0x30
 800203e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002040:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002044:	2600      	movs	r6, #0
 8002046:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002048:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800204a:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800204c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800204e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002052:	2302      	movs	r3, #2
 8002054:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002058:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800205c:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800205e:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002060:	f007 f92e 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002064:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002066:	f641 0258 	movw	r2, #6232	; 0x1858
 800206a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800206c:	4832      	ldr	r0, [pc, #200]	; (8002138 <HAL_LTDC_MspInit+0x1c4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800206e:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002070:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002074:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002078:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800207c:	f007 f920 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002080:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002082:	2203      	movs	r2, #3
 8002084:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002086:	482d      	ldr	r0, [pc, #180]	; (800213c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002088:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800208c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002090:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002094:	f007 f914 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002098:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800209a:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 800209e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020a0:	4826      	ldr	r0, [pc, #152]	; (800213c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020a2:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80020a4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020a8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80020ac:	f007 f908 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80020b2:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80020b6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b8:	4821      	ldr	r0, [pc, #132]	; (8002140 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020ba:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80020bc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020c0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c4:	f007 f8fc 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020c8:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80020ca:	22c0      	movs	r2, #192	; 0xc0
 80020cc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020ce:	481d      	ldr	r0, [pc, #116]	; (8002144 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020d0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80020d2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020d6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020da:	f007 f8f1 	bl	80092c0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020de:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80020e0:	2208      	movs	r2, #8
 80020e2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020e4:	4818      	ldr	r0, [pc, #96]	; (8002148 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020e6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80020e8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020ec:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020f0:	f007 f8e6 	bl	80092c0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020f4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020f6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020f8:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020fc:	4810      	ldr	r0, [pc, #64]	; (8002140 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020fe:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002102:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002106:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800210a:	f007 f8d9 	bl	80092c0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800210e:	4622      	mov	r2, r4
 8002110:	2105      	movs	r1, #5
 8002112:	2058      	movs	r0, #88	; 0x58
 8002114:	f007 f85e 	bl	80091d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002118:	2058      	movs	r0, #88	; 0x58
 800211a:	f007 f899 	bl	8009250 <HAL_NVIC_EnableIRQ>
}
 800211e:	b01a      	add	sp, #104	; 0x68
 8002120:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002124:	f7ff fd3c 	bl	8001ba0 <Error_Handler>
 8002128:	e745      	b.n	8001fb6 <HAL_LTDC_MspInit+0x42>
 800212a:	bf00      	nop
 800212c:	40016800 	.word	0x40016800
 8002130:	40023800 	.word	0x40023800
 8002134:	40021400 	.word	0x40021400
 8002138:	40020000 	.word	0x40020000
 800213c:	40020400 	.word	0x40020400
 8002140:	40021800 	.word	0x40021800
 8002144:	40020800 	.word	0x40020800
 8002148:	40020c00 	.word	0x40020c00
 800214c:	00000000 	.word	0x00000000

08002150 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002150:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002152:	4a1b      	ldr	r2, [pc, #108]	; (80021c0 <HAL_SPI_MspInit+0x70>)
 8002154:	6801      	ldr	r1, [r0, #0]
{
 8002156:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002158:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800215a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800215c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002160:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002164:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002166:	d001      	beq.n	800216c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002168:	b008      	add	sp, #32
 800216a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800216c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002170:	9300      	str	r3, [sp, #0]
 8002172:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002174:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002178:	6450      	str	r0, [r2, #68]	; 0x44
 800217a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800217c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002180:	9000      	str	r0, [sp, #0]
 8002182:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002184:	9301      	str	r3, [sp, #4]
 8002186:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002188:	480e      	ldr	r0, [pc, #56]	; (80021c4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800218a:	f043 0320 	orr.w	r3, r3, #32
 800218e:	6313      	str	r3, [r2, #48]	; 0x30
 8002190:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002192:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80021b8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002196:	f003 0320 	and.w	r3, r3, #32
 800219a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800219c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800219e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021a0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80021a2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80021a6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021aa:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021ac:	f007 f888 	bl	80092c0 <HAL_GPIO_Init>
}
 80021b0:	b008      	add	sp, #32
 80021b2:	bd10      	pop	{r4, pc}
 80021b4:	f3af 8000 	nop.w
 80021b8:	00000380 	.word	0x00000380
 80021bc:	00000002 	.word	0x00000002
 80021c0:	40015000 	.word	0x40015000
 80021c4:	40021400 	.word	0x40021400

080021c8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80021c8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80021ca:	4a21      	ldr	r2, [pc, #132]	; (8002250 <HAL_TIM_Base_MspInit+0x88>)
 80021cc:	6803      	ldr	r3, [r0, #0]
 80021ce:	4293      	cmp	r3, r2
{
 80021d0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80021d2:	d008      	beq.n	80021e6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80021d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80021d8:	d023      	beq.n	8002222 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80021da:	4a1e      	ldr	r2, [pc, #120]	; (8002254 <HAL_TIM_Base_MspInit+0x8c>)
 80021dc:	4293      	cmp	r3, r2
 80021de:	d011      	beq.n	8002204 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80021e0:	b005      	add	sp, #20
 80021e2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80021e6:	4b1c      	ldr	r3, [pc, #112]	; (8002258 <HAL_TIM_Base_MspInit+0x90>)
 80021e8:	2200      	movs	r2, #0
 80021ea:	9201      	str	r2, [sp, #4]
 80021ec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021ee:	f042 0201 	orr.w	r2, r2, #1
 80021f2:	645a      	str	r2, [r3, #68]	; 0x44
 80021f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021f6:	f003 0301 	and.w	r3, r3, #1
 80021fa:	9301      	str	r3, [sp, #4]
 80021fc:	9b01      	ldr	r3, [sp, #4]
}
 80021fe:	b005      	add	sp, #20
 8002200:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002204:	4b14      	ldr	r3, [pc, #80]	; (8002258 <HAL_TIM_Base_MspInit+0x90>)
 8002206:	2200      	movs	r2, #0
 8002208:	9203      	str	r2, [sp, #12]
 800220a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800220c:	f042 0202 	orr.w	r2, r2, #2
 8002210:	641a      	str	r2, [r3, #64]	; 0x40
 8002212:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002214:	f003 0302 	and.w	r3, r3, #2
 8002218:	9303      	str	r3, [sp, #12]
 800221a:	9b03      	ldr	r3, [sp, #12]
}
 800221c:	b005      	add	sp, #20
 800221e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002222:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002226:	2200      	movs	r2, #0
 8002228:	9202      	str	r2, [sp, #8]
 800222a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800222c:	f041 0101 	orr.w	r1, r1, #1
 8002230:	6419      	str	r1, [r3, #64]	; 0x40
 8002232:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002234:	f003 0301 	and.w	r3, r3, #1
 8002238:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 800223a:	201c      	movs	r0, #28
 800223c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 800223e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002240:	f006 ffc8 	bl	80091d4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002244:	201c      	movs	r0, #28
}
 8002246:	b005      	add	sp, #20
 8002248:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800224c:	f007 b800 	b.w	8009250 <HAL_NVIC_EnableIRQ>
 8002250:	40010000 	.word	0x40010000
 8002254:	40000400 	.word	0x40000400
 8002258:	40023800 	.word	0x40023800

0800225c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800225c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800225e:	4b2b      	ldr	r3, [pc, #172]	; (800230c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002260:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002262:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002264:	2200      	movs	r2, #0
 8002266:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002268:	2c00      	cmp	r4, #0
 800226a:	d14c      	bne.n	8002306 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800226c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800226e:	4a28      	ldr	r2, [pc, #160]	; (8002310 <HAL_SDRAM_MspInit+0xb4>)
 8002270:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002272:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002274:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002276:	4827      	ldr	r0, [pc, #156]	; (8002314 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002278:	433b      	orrs	r3, r7
 800227a:	6393      	str	r3, [r2, #56]	; 0x38
 800227c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800227e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002280:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002282:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002284:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002288:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800228a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800228c:	2302      	movs	r3, #2
 800228e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002292:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002296:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002298:	f007 f812 	bl	80092c0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800229c:	481e      	ldr	r0, [pc, #120]	; (8002318 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800229e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022a2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022a8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ac:	f007 f808 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022b0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b4:	4819      	ldr	r0, [pc, #100]	; (800231c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022b6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ba:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022be:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022c2:	f006 fffd 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022c6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022ca:	4815      	ldr	r0, [pc, #84]	; (8002320 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022cc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022ce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022d0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022d4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022d8:	f006 fff2 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022dc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e0:	4810      	ldr	r0, [pc, #64]	; (8002324 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022e2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022e6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ea:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022ee:	f006 ffe7 	bl	80092c0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022f2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f4:	480c      	ldr	r0, [pc, #48]	; (8002328 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022f6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022fa:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022fe:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002300:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002302:	f006 ffdd 	bl	80092c0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002306:	b009      	add	sp, #36	; 0x24
 8002308:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800230a:	bf00      	nop
 800230c:	20002090 	.word	0x20002090
 8002310:	40023800 	.word	0x40023800
 8002314:	40021400 	.word	0x40021400
 8002318:	40020800 	.word	0x40020800
 800231c:	40021800 	.word	0x40021800
 8002320:	40021000 	.word	0x40021000
 8002324:	40020c00 	.word	0x40020c00
 8002328:	40020400 	.word	0x40020400

0800232c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800232c:	b570      	push	{r4, r5, r6, lr}
 800232e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002330:	4b23      	ldr	r3, [pc, #140]	; (80023c0 <HAL_InitTick+0x94>)
 8002332:	2200      	movs	r2, #0
 8002334:	9202      	str	r2, [sp, #8]
 8002336:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002338:	f042 0210 	orr.w	r2, r2, #16
 800233c:	641a      	str	r2, [r3, #64]	; 0x40
 800233e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002340:	f003 0310 	and.w	r3, r3, #16
 8002344:	9302      	str	r3, [sp, #8]
{
 8002346:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002348:	a901      	add	r1, sp, #4
 800234a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800234c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800234e:	f009 f9ff 	bl	800b750 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002352:	9b06      	ldr	r3, [sp, #24]
 8002354:	b9d3      	cbnz	r3, 800238c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002356:	f009 f9eb 	bl	800b730 <HAL_RCC_GetPCLK1Freq>
 800235a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800235c:	4a19      	ldr	r2, [pc, #100]	; (80023c4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800235e:	4c1a      	ldr	r4, [pc, #104]	; (80023c8 <HAL_InitTick+0x9c>)
 8002360:	491a      	ldr	r1, [pc, #104]	; (80023cc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002362:	fba2 2303 	umull	r2, r3, r2, r3
 8002366:	0c9b      	lsrs	r3, r3, #18
 8002368:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800236a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800236c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002370:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002372:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002376:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002378:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800237a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800237c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800237e:	f00a f817 	bl	800c3b0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002382:	4606      	mov	r6, r0
 8002384:	b130      	cbz	r0, 8002394 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002386:	4630      	mov	r0, r6
 8002388:	b008      	add	sp, #32
 800238a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800238c:	f009 f9d0 	bl	800b730 <HAL_RCC_GetPCLK1Freq>
 8002390:	0043      	lsls	r3, r0, #1
 8002392:	e7e3      	b.n	800235c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002394:	4620      	mov	r0, r4
 8002396:	f00a f899 	bl	800c4cc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800239a:	4606      	mov	r6, r0
 800239c:	2800      	cmp	r0, #0
 800239e:	d1f2      	bne.n	8002386 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80023a0:	2036      	movs	r0, #54	; 0x36
 80023a2:	f006 ff55 	bl	8009250 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80023a6:	2d0f      	cmp	r5, #15
 80023a8:	d901      	bls.n	80023ae <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80023aa:	2601      	movs	r6, #1
 80023ac:	e7eb      	b.n	8002386 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80023ae:	4632      	mov	r2, r6
 80023b0:	4629      	mov	r1, r5
 80023b2:	2036      	movs	r0, #54	; 0x36
 80023b4:	f006 ff0e 	bl	80091d4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80023b8:	4b05      	ldr	r3, [pc, #20]	; (80023d0 <HAL_InitTick+0xa4>)
 80023ba:	601d      	str	r5, [r3, #0]
 80023bc:	e7e3      	b.n	8002386 <HAL_InitTick+0x5a>
 80023be:	bf00      	nop
 80023c0:	40023800 	.word	0x40023800
 80023c4:	431bde83 	.word	0x431bde83
 80023c8:	20002094 	.word	0x20002094
 80023cc:	40001000 	.word	0x40001000
 80023d0:	20000080 	.word	0x20000080

080023d4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023d4:	4770      	bx	lr
 80023d6:	bf00      	nop

080023d8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023d8:	e7fe      	b.n	80023d8 <HardFault_Handler>
 80023da:	bf00      	nop

080023dc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023dc:	e7fe      	b.n	80023dc <MemManage_Handler>
 80023de:	bf00      	nop

080023e0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023e0:	e7fe      	b.n	80023e0 <BusFault_Handler>
 80023e2:	bf00      	nop

080023e4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023e4:	e7fe      	b.n	80023e4 <UsageFault_Handler>
 80023e6:	bf00      	nop

080023e8 <DebugMon_Handler>:
 80023e8:	4770      	bx	lr
 80023ea:	bf00      	nop

080023ec <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80023ec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80023ee:	20c8      	movs	r0, #200	; 0xc8
 80023f0:	f006 fecc 	bl	800918c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80023f4:	4804      	ldr	r0, [pc, #16]	; (8002408 <EXTI3_IRQHandler+0x1c>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	2120      	movs	r1, #32
 80023fa:	f007 f8a5 	bl	8009548 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80023fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002402:	2008      	movs	r0, #8
 8002404:	f007 b8b0 	b.w	8009568 <HAL_GPIO_EXTI_IRQHandler>
 8002408:	40021000 	.word	0x40021000

0800240c <TIM2_IRQHandler>:
{
  /* USER CODE BEGIN TIM2_IRQn 0 */
//	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
//	HAL_Delay(1);
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800240c:	4801      	ldr	r0, [pc, #4]	; (8002414 <TIM2_IRQHandler+0x8>)
 800240e:	f00a b9dd 	b.w	800c7cc <HAL_TIM_IRQHandler>
 8002412:	bf00      	nop
 8002414:	20001c00 	.word	0x20001c00

08002418 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002418:	4801      	ldr	r0, [pc, #4]	; (8002420 <TIM6_DAC_IRQHandler+0x8>)
 800241a:	f00a b9d7 	b.w	800c7cc <HAL_TIM_IRQHandler>
 800241e:	bf00      	nop
 8002420:	20002094 	.word	0x20002094

08002424 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002424:	4801      	ldr	r0, [pc, #4]	; (800242c <I2C3_EV_IRQHandler+0x8>)
 8002426:	f007 bfff 	b.w	800a428 <HAL_I2C_EV_IRQHandler>
 800242a:	bf00      	nop
 800242c:	20001a30 	.word	0x20001a30

08002430 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002430:	4801      	ldr	r0, [pc, #4]	; (8002438 <LTDC_IRQHandler+0x8>)
 8002432:	f008 bd73 	b.w	800af1c <HAL_LTDC_IRQHandler>
 8002436:	bf00      	nop
 8002438:	20001a84 	.word	0x20001a84

0800243c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800243c:	2001      	movs	r0, #1
 800243e:	4770      	bx	lr

08002440 <_kill>:

int _kill(int pid, int sig)
{
 8002440:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002442:	f028 feaf 	bl	802b1a4 <__errno>
 8002446:	2316      	movs	r3, #22
 8002448:	6003      	str	r3, [r0, #0]
	return -1;
}
 800244a:	f04f 30ff 	mov.w	r0, #4294967295
 800244e:	bd08      	pop	{r3, pc}

08002450 <_exit>:

void _exit (int status)
{
 8002450:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002452:	f028 fea7 	bl	802b1a4 <__errno>
 8002456:	2316      	movs	r3, #22
 8002458:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800245a:	e7fe      	b.n	800245a <_exit+0xa>

0800245c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800245c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800245e:	1e16      	subs	r6, r2, #0
 8002460:	dd07      	ble.n	8002472 <_read+0x16>
 8002462:	460c      	mov	r4, r1
 8002464:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002466:	f3af 8000 	nop.w
 800246a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800246e:	42a5      	cmp	r5, r4
 8002470:	d1f9      	bne.n	8002466 <_read+0xa>
	}

return len;
}
 8002472:	4630      	mov	r0, r6
 8002474:	bd70      	pop	{r4, r5, r6, pc}
 8002476:	bf00      	nop

08002478 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002478:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800247a:	1e16      	subs	r6, r2, #0
 800247c:	dd07      	ble.n	800248e <_write+0x16>
 800247e:	460c      	mov	r4, r1
 8002480:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002482:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002486:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800248a:	42ac      	cmp	r4, r5
 800248c:	d1f9      	bne.n	8002482 <_write+0xa>
	}
	return len;
}
 800248e:	4630      	mov	r0, r6
 8002490:	bd70      	pop	{r4, r5, r6, pc}
 8002492:	bf00      	nop

08002494 <_close>:

int _close(int file)
{
	return -1;
}
 8002494:	f04f 30ff 	mov.w	r0, #4294967295
 8002498:	4770      	bx	lr
 800249a:	bf00      	nop

0800249c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800249c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80024a0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80024a2:	2000      	movs	r0, #0
 80024a4:	4770      	bx	lr
 80024a6:	bf00      	nop

080024a8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80024a8:	2001      	movs	r0, #1
 80024aa:	4770      	bx	lr

080024ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80024ac:	2000      	movs	r0, #0
 80024ae:	4770      	bx	lr

080024b0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80024b0:	4a0b      	ldr	r2, [pc, #44]	; (80024e0 <_sbrk+0x30>)
{
 80024b2:	b508      	push	{r3, lr}
 80024b4:	4603      	mov	r3, r0
	if (heap_end == 0)
 80024b6:	6810      	ldr	r0, [r2, #0]
 80024b8:	b128      	cbz	r0, 80024c6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80024ba:	4403      	add	r3, r0
 80024bc:	4669      	mov	r1, sp
 80024be:	428b      	cmp	r3, r1
 80024c0:	d807      	bhi.n	80024d2 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80024c2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80024c4:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80024c6:	4807      	ldr	r0, [pc, #28]	; (80024e4 <_sbrk+0x34>)
 80024c8:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80024ca:	4403      	add	r3, r0
 80024cc:	4669      	mov	r1, sp
 80024ce:	428b      	cmp	r3, r1
 80024d0:	d9f7      	bls.n	80024c2 <_sbrk+0x12>
		errno = ENOMEM;
 80024d2:	f028 fe67 	bl	802b1a4 <__errno>
 80024d6:	230c      	movs	r3, #12
 80024d8:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80024da:	f04f 30ff 	mov.w	r0, #4294967295
}
 80024de:	bd08      	pop	{r3, pc}
 80024e0:	200020dc 	.word	0x200020dc
 80024e4:	20013c00 	.word	0x20013c00

080024e8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80024e8:	4770      	bx	lr

080024ea <_ZN23ApplicationFontProviderD0Ev>:
 80024ea:	b510      	push	{r4, lr}
 80024ec:	2104      	movs	r1, #4
 80024ee:	4604      	mov	r4, r0
 80024f0:	f027 fd47 	bl	8029f82 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80024f8:	b508      	push	{r3, lr}
    switch (typography)
 80024fa:	2903      	cmp	r1, #3
 80024fc:	d813      	bhi.n	8002526 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80024fe:	e8df f001 	tbb	[pc, r1]
 8002502:	0602      	.short	0x0602
 8002504:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002506:	f005 fea9 	bl	800825c <_ZN17TypedTextDatabase8getFontsEv>
 800250a:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800250c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800250e:	f005 fea5 	bl	800825c <_ZN17TypedTextDatabase8getFontsEv>
 8002512:	6840      	ldr	r0, [r0, #4]
 8002514:	e7fa      	b.n	800250c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002516:	f005 fea1 	bl	800825c <_ZN17TypedTextDatabase8getFontsEv>
 800251a:	6880      	ldr	r0, [r0, #8]
 800251c:	e7f6      	b.n	800250c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800251e:	f005 fe9d 	bl	800825c <_ZN17TypedTextDatabase8getFontsEv>
 8002522:	68c0      	ldr	r0, [r0, #12]
 8002524:	e7f2      	b.n	800250c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002526:	2000      	movs	r0, #0
 8002528:	e7f0      	b.n	800250c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800252c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800252c:	4800      	ldr	r0, [pc, #0]	; (8002530 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800252e:	4770      	bx	lr
 8002530:	0802c498 	.word	0x0802c498

08002534 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002534:	200e      	movs	r0, #14
 8002536:	4770      	bx	lr

08002538 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002538:	b513      	push	{r0, r1, r4, lr}
 800253a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800253c:	b151      	cbz	r1, 8002554 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800253e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002540:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002542:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002546:	aa01      	add	r2, sp, #4
 8002548:	689c      	ldr	r4, [r3, #8]
 800254a:	f10d 0303 	add.w	r3, sp, #3
 800254e:	47a0      	blx	r4
        return glyph;
    }
 8002550:	b002      	add	sp, #8
 8002552:	bd10      	pop	{r4, pc}
            return 0;
 8002554:	4608      	mov	r0, r1
 8002556:	e7fb      	b.n	8002550 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002558 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002558:	89c0      	ldrh	r0, [r0, #14]
 800255a:	4770      	bx	lr

0800255c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800255c:	8a00      	ldrh	r0, [r0, #16]
 800255e:	4770      	bx	lr

08002560 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002560:	88c0      	ldrh	r0, [r0, #6]
 8002562:	4770      	bx	lr

08002564 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002564:	8880      	ldrh	r0, [r0, #4]
 8002566:	4770      	bx	lr

08002568 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002568:	7a80      	ldrb	r0, [r0, #10]
    }
 800256a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800256e:	4770      	bx	lr

08002570 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002570:	7a80      	ldrb	r0, [r0, #10]
    }
 8002572:	09c0      	lsrs	r0, r0, #7
 8002574:	4770      	bx	lr

08002576 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002576:	4770      	bx	lr

08002578 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002578:	4770      	bx	lr

0800257a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800257a:	4770      	bx	lr

0800257c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800257c:	4770      	bx	lr

0800257e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800257e:	4770      	bx	lr

08002580 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002582:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002584:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002586:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002588:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800258a:	466d      	mov	r5, sp
 800258c:	4601      	mov	r1, r0
 800258e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002592:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002594:	4628      	mov	r0, r5
 8002596:	4798      	blx	r3
 8002598:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800259c:	343c      	adds	r4, #60	; 0x3c
 800259e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025a2:	b005      	add	sp, #20
 80025a4:	bd30      	pop	{r4, r5, pc}

080025a6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80025a6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80025a8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80025aa:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80025ac:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80025ae:	466d      	mov	r5, sp
 80025b0:	4601      	mov	r1, r0
 80025b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80025b6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80025b8:	4628      	mov	r0, r5
 80025ba:	4798      	blx	r3
 80025bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80025c0:	343c      	adds	r4, #60	; 0x3c
 80025c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025c6:	b005      	add	sp, #20
 80025c8:	bd30      	pop	{r4, r5, pc}

080025ca <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80025ca:	2200      	movs	r2, #0
 80025cc:	8002      	strh	r2, [r0, #0]
 80025ce:	8042      	strh	r2, [r0, #2]
 80025d0:	8082      	strh	r2, [r0, #4]
 80025d2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80025d4:	4770      	bx	lr

080025d6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80025d6:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025dc:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80025de:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025e0:	4604      	mov	r4, r0
        setX(x);
 80025e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025e4:	4615      	mov	r5, r2
        setX(x);
 80025e6:	4798      	blx	r3
        setBaselineY(baselineY);
 80025e8:	6823      	ldr	r3, [r4, #0]
 80025ea:	4629      	mov	r1, r5
 80025ec:	4620      	mov	r0, r4
 80025ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80025f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80025f4:	4718      	bx	r3

080025f6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80025f6:	2000      	movs	r0, #0
 80025f8:	4770      	bx	lr

080025fa <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80025fa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80025fc:	4770      	bx	lr

080025fe <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80025fe:	4770      	bx	lr

08002600 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002600:	4770      	bx	lr

08002602 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002602:	4770      	bx	lr

08002604 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002604:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002606:	68c2      	ldr	r2, [r0, #12]
 8002608:	6844      	ldr	r4, [r0, #4]
 800260a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800260c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800260e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002612:	07d2      	lsls	r2, r2, #31
 8002614:	bf48      	it	mi
 8002616:	5962      	ldrmi	r2, [r4, r5]
 8002618:	689b      	ldr	r3, [r3, #8]
    }
 800261a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800261c:	bf48      	it	mi
 800261e:	58d3      	ldrmi	r3, [r2, r3]
 8002620:	4718      	bx	r3

08002622 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002622:	6843      	ldr	r3, [r0, #4]
 8002624:	b12b      	cbz	r3, 8002632 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002626:	6883      	ldr	r3, [r0, #8]
 8002628:	b92b      	cbnz	r3, 8002636 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800262a:	68c0      	ldr	r0, [r0, #12]
 800262c:	f000 0001 	and.w	r0, r0, #1
 8002630:	4770      	bx	lr
 8002632:	4618      	mov	r0, r3
 8002634:	4770      	bx	lr
 8002636:	2001      	movs	r0, #1
    }
 8002638:	4770      	bx	lr

0800263a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800263a:	b510      	push	{r4, lr}
    }
 800263c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800263e:	4604      	mov	r4, r0
    }
 8002640:	f027 fc9f 	bl	8029f82 <_ZdlPvj>
 8002644:	4620      	mov	r0, r4
 8002646:	bd10      	pop	{r4, pc}

08002648 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002648:	b510      	push	{r4, lr}
 800264a:	214c      	movs	r1, #76	; 0x4c
 800264c:	4604      	mov	r4, r0
 800264e:	f027 fc98 	bl	8029f82 <_ZdlPvj>
 8002652:	4620      	mov	r0, r4
 8002654:	bd10      	pop	{r4, pc}

08002656 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002656:	b510      	push	{r4, lr}
 8002658:	2110      	movs	r1, #16
 800265a:	4604      	mov	r4, r0
 800265c:	f027 fc91 	bl	8029f82 <_ZdlPvj>
 8002660:	4620      	mov	r0, r4
 8002662:	bd10      	pop	{r4, pc}

08002664 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002664:	b510      	push	{r4, lr}
 8002666:	4b03      	ldr	r3, [pc, #12]	; (8002674 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002668:	6003      	str	r3, [r0, #0]
 800266a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800266c:	f011 fed2 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002670:	4620      	mov	r0, r4
 8002672:	bd10      	pop	{r4, pc}
 8002674:	0802c818 	.word	0x0802c818

08002678 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002678:	b507      	push	{r0, r1, r2, lr}
 800267a:	4b07      	ldr	r3, [pc, #28]	; (8002698 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 800267c:	6003      	str	r3, [r0, #0]
 800267e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002680:	f011 fec8 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002684:	9801      	ldr	r0, [sp, #4]
 8002686:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800268a:	f027 fc7a 	bl	8029f82 <_ZdlPvj>
 800268e:	9801      	ldr	r0, [sp, #4]
 8002690:	b003      	add	sp, #12
 8002692:	f85d fb04 	ldr.w	pc, [sp], #4
 8002696:	bf00      	nop
 8002698:	0802c818 	.word	0x0802c818

0800269c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800269c:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800269e:	f7fe fcbf 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80026a2:	bd08      	pop	{r3, pc}

080026a4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026a4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026a6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026a8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80026aa:	4b12      	ldr	r3, [pc, #72]	; (80026f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80026ac:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80026ae:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026b0:	b28d      	uxth	r5, r1
 80026b2:	b92b      	cbnz	r3, 80026c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80026b4:	4b10      	ldr	r3, [pc, #64]	; (80026f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80026b6:	4a11      	ldr	r2, [pc, #68]	; (80026fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026b8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026ba:	4811      	ldr	r0, [pc, #68]	; (8002700 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80026bc:	f028 fa74 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80026c0:	4910      	ldr	r1, [pc, #64]	; (8002704 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80026c2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80026c4:	8809      	ldrh	r1, [r1, #0]
 80026c6:	4291      	cmp	r1, r2
 80026c8:	d803      	bhi.n	80026d2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80026ca:	4b0f      	ldr	r3, [pc, #60]	; (8002708 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80026cc:	4a0b      	ldr	r2, [pc, #44]	; (80026fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80026ce:	216d      	movs	r1, #109	; 0x6d
 80026d0:	e7f3      	b.n	80026ba <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80026d2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80026d6:	4b0d      	ldr	r3, [pc, #52]	; (800270c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80026de:	6803      	ldr	r3, [r0, #0]
 80026e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026e2:	4798      	blx	r3
 80026e4:	1a28      	subs	r0, r5, r0
 80026e6:	b201      	sxth	r1, r0
 80026e8:	4633      	mov	r3, r6
 80026ea:	4620      	mov	r0, r4
    }
 80026ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026f0:	4718      	bx	r3
 80026f2:	bf00      	nop
 80026f4:	2001301c 	.word	0x2001301c
 80026f8:	0802c5b0 	.word	0x0802c5b0
 80026fc:	0802c5f2 	.word	0x0802c5f2
 8002700:	0802c62d 	.word	0x0802c62d
 8002704:	20013020 	.word	0x20013020
 8002708:	0802c674 	.word	0x0802c674
 800270c:	20013024 	.word	0x20013024

08002710 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002710:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002712:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002716:	4299      	cmp	r1, r3
{
 8002718:	4604      	mov	r4, r0
 800271a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800271c:	d103      	bne.n	8002726 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800271e:	f013 fb7b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002722:	f001 fb41 	bl	8003da8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002726:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800272a:	429d      	cmp	r5, r3
 800272c:	d103      	bne.n	8002736 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800272e:	f013 fb73 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002732:	f001 fbf9 	bl	8003f28 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002736:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800273a:	42a5      	cmp	r5, r4
 800273c:	d105      	bne.n	800274a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800273e:	f013 fb6b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002742:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002746:	f001 bbff 	b.w	8003f48 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800274a:	bd38      	pop	{r3, r4, r5, pc}

0800274c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800274c:	2200      	movs	r2, #0
 800274e:	f04f 31ff 	mov.w	r1, #4294967295
 8002752:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002756:	6082      	str	r2, [r0, #8]
    }
 8002758:	4770      	bx	lr

0800275a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800275a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800275c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800275e:	4604      	mov	r4, r0
        setX(x);
 8002760:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002762:	4615      	mov	r5, r2
        setX(x);
 8002764:	4798      	blx	r3
        setY(y);
 8002766:	6823      	ldr	r3, [r4, #0]
 8002768:	4629      	mov	r1, r5
 800276a:	4620      	mov	r0, r4
 800276c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800276e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002772:	4718      	bx	r3

08002774 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002774:	b570      	push	{r4, r5, r6, lr}
 8002776:	4604      	mov	r4, r0
 8002778:	461d      	mov	r5, r3
 800277a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800277e:	f7ff ffec 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002782:	6823      	ldr	r3, [r4, #0]
 8002784:	4629      	mov	r1, r5
 8002786:	4620      	mov	r0, r4
 8002788:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800278a:	4798      	blx	r3
        setHeight(height);
 800278c:	6823      	ldr	r3, [r4, #0]
 800278e:	4631      	mov	r1, r6
 8002790:	4620      	mov	r0, r4
 8002792:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002794:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002798:	4718      	bx	r3
	...

0800279c <_ZN8touchgfx6WidgetC1Ev>:
 800279c:	2200      	movs	r2, #0
 800279e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80027a2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80027a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80027aa:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80027ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80027b2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80027b4:	4a01      	ldr	r2, [pc, #4]	; (80027bc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80027b6:	6002      	str	r2, [r0, #0]
 80027b8:	4770      	bx	lr
 80027ba:	bf00      	nop
 80027bc:	0802c6f8 	.word	0x0802c6f8

080027c0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80027c0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027c2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80027c4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027c6:	2100      	movs	r1, #0
 80027c8:	f028 fbf3 	bl	802afb2 <memset>
 80027cc:	4620      	mov	r0, r4
 80027ce:	f7ff ffe5 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80027d2:	4b0a      	ldr	r3, [pc, #40]	; (80027fc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80027d4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80027d6:	4b0a      	ldr	r3, [pc, #40]	; (8002800 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80027d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80027da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027de:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80027e0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80027e4:	2300      	movs	r3, #0
 80027e6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027ea:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80027ee:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027f2:	8723      	strh	r3, [r4, #56]	; 0x38
 80027f4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80027f6:	4620      	mov	r0, r4
 80027f8:	bd10      	pop	{r4, pc}
 80027fa:	bf00      	nop
 80027fc:	0802f444 	.word	0x0802f444
 8002800:	0802c760 	.word	0x0802c760

08002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002804:	4b1a      	ldr	r3, [pc, #104]	; (8002870 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002806:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002808:	881b      	ldrh	r3, [r3, #0]
 800280a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800280c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800280e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002810:	d92b      	bls.n	800286a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002812:	4b18      	ldr	r3, [pc, #96]	; (8002874 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	b92b      	cbnz	r3, 8002824 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002818:	4b17      	ldr	r3, [pc, #92]	; (8002878 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800281a:	4a18      	ldr	r2, [pc, #96]	; (800287c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800281c:	4818      	ldr	r0, [pc, #96]	; (8002880 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800281e:	216c      	movs	r1, #108	; 0x6c
 8002820:	f028 f9c2 	bl	802aba8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002824:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002828:	4b16      	ldr	r3, [pc, #88]	; (8002884 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002830:	4b15      	ldr	r3, [pc, #84]	; (8002888 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002832:	6818      	ldr	r0, [r3, #0]
 8002834:	f005 fd02 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002838:	682b      	ldr	r3, [r5, #0]
 800283a:	9001      	str	r0, [sp, #4]
 800283c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800283e:	4628      	mov	r0, r5
 8002840:	4798      	blx	r3
 8002842:	682b      	ldr	r3, [r5, #0]
 8002844:	9901      	ldr	r1, [sp, #4]
 8002846:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002848:	4604      	mov	r4, r0
 800284a:	4628      	mov	r0, r5
 800284c:	4798      	blx	r3
 800284e:	682b      	ldr	r3, [r5, #0]
 8002850:	9901      	ldr	r1, [sp, #4]
 8002852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002854:	fb14 f400 	smulbb	r4, r4, r0
 8002858:	4628      	mov	r0, r5
 800285a:	4798      	blx	r3
 800285c:	b2a4      	uxth	r4, r4
 800285e:	1823      	adds	r3, r4, r0
 8002860:	b21b      	sxth	r3, r3
 8002862:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002866:	b002      	add	sp, #8
 8002868:	bd70      	pop	{r4, r5, r6, pc}
 800286a:	2300      	movs	r3, #0
 800286c:	e7f9      	b.n	8002862 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800286e:	bf00      	nop
 8002870:	20013020 	.word	0x20013020
 8002874:	2001301c 	.word	0x2001301c
 8002878:	0802c5b0 	.word	0x0802c5b0
 800287c:	0802c5f2 	.word	0x0802c5f2
 8002880:	0802c62d 	.word	0x0802c62d
 8002884:	20013024 	.word	0x20013024
 8002888:	20013028 	.word	0x20013028

0800288c <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 800288c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002890:	ed2d 8b06 	vpush	{d8-d10}
 8002894:	4604      	mov	r4, r0
 8002896:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002898:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800289a:	2500      	movs	r5, #0
 800289c:	f014 ff3c 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 80028a0:	4b66      	ldr	r3, [pc, #408]	; (8002a3c <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80028a2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80028a4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80028a8:	2226      	movs	r2, #38	; 0x26
 80028aa:	4629      	mov	r1, r5
 80028ac:	4658      	mov	r0, fp
 80028ae:	f028 fb80 	bl	802afb2 <memset>
 80028b2:	4658      	mov	r0, fp
 80028b4:	f7ff ff72 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80028b8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80028bc:	26ff      	movs	r6, #255	; 0xff
 80028be:	4b60      	ldr	r3, [pc, #384]	; (8002a40 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80028c0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80028c2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028c8:	4629      	mov	r1, r5
 80028ca:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80028ce:	4650      	mov	r0, sl
        : color(col)
 80028d0:	66a5      	str	r5, [r4, #104]	; 0x68
 80028d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80028d6:	f028 fb6c 	bl	802afb2 <memset>
 80028da:	4650      	mov	r0, sl
 80028dc:	f7ff ff5e 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80028e0:	4b58      	ldr	r3, [pc, #352]	; (8002a44 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80028e2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80028e4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80028e8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80028ec:	a90a      	add	r1, sp, #40	; 0x28
 80028ee:	4650      	mov	r0, sl
 80028f0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80028f4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80028f8:	f010 fd85 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80028fc:	4648      	mov	r0, r9
 80028fe:	f7ff ff5f 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8002902:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002906:	4b50      	ldr	r3, [pc, #320]	; (8002a48 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002908:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800290c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002910:	4638      	mov	r0, r7
 8002912:	f00f fc41 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8002916:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800291a:	4618      	mov	r0, r3
 800291c:	9303      	str	r3, [sp, #12]
 800291e:	f7fe fb93 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002922:	4b4a      	ldr	r3, [pc, #296]	; (8002a4c <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002924:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002928:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 800292c:	3324      	adds	r3, #36	; 0x24
 800292e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002932:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002936:	4640      	mov	r0, r8
 8002938:	f7ff ff42 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800293c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002940:	4618      	mov	r0, r3
 8002942:	ee08 3a10 	vmov	s16, r3
 8002946:	f7ff ff3b 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800294a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800294e:	4618      	mov	r0, r3
 8002950:	ee08 3a90 	vmov	s17, r3
 8002954:	f7ff ff34 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8002958:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800295c:	4618      	mov	r0, r3
 800295e:	ee09 3a10 	vmov	s18, r3
 8002962:	f010 fe91 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002966:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800296a:	4618      	mov	r0, r3
 800296c:	ee09 3a90 	vmov	s19, r3
 8002970:	f010 fe8a 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002974:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002978:	4618      	mov	r0, r3
 800297a:	ee0a 3a10 	vmov	s20, r3
 800297e:	f010 fe83 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002982:	4a33      	ldr	r2, [pc, #204]	; (8002a50 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002984:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002988:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800298c:	4a31      	ldr	r2, [pc, #196]	; (8002a54 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800298e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002992:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002996:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800299a:	f011 fd31 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800299e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80029a2:	462a      	mov	r2, r5
 80029a4:	4658      	mov	r0, fp
 80029a6:	9300      	str	r3, [sp, #0]
 80029a8:	4629      	mov	r1, r5
 80029aa:	23f0      	movs	r3, #240	; 0xf0
 80029ac:	f7ff fee2 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029b0:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80029b6:	66a3      	str	r3, [r4, #104]	; 0x68
 80029b8:	4659      	mov	r1, fp
 80029ba:	4630      	mov	r0, r6
 80029bc:	f00d ff93 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80029c0:	462a      	mov	r2, r5
 80029c2:	4650      	mov	r0, sl
 80029c4:	4629      	mov	r1, r5
 80029c6:	f7ff fec8 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80029ca:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80029cc:	4650      	mov	r0, sl
 80029ce:	a90a      	add	r1, sp, #40	; 0x28
 80029d0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80029d4:	f010 fd17 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80029d8:	4651      	mov	r1, sl
 80029da:	4630      	mov	r0, r6
 80029dc:	f00d ff83 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80029e0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80029e4:	2159      	movs	r1, #89	; 0x59
 80029e6:	4648      	mov	r0, r9
 80029e8:	f7ff feb7 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80029ec:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80029f0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80029f4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80029f8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80029fc:	4650      	mov	r0, sl
 80029fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002a02:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002a06:	4649      	mov	r1, r9
 8002a08:	4798      	blx	r3
 8002a0a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002a0e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002a12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a16:	4b10      	ldr	r3, [pc, #64]	; (8002a58 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002a18:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002a1a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002a1e:	b92b      	cbnz	r3, 8002a2c <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002a20:	4b0e      	ldr	r3, [pc, #56]	; (8002a5c <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002a22:	4a0f      	ldr	r2, [pc, #60]	; (8002a60 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a24:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a26:	480f      	ldr	r0, [pc, #60]	; (8002a64 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002a28:	f028 f8be 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002a2c:	4b0e      	ldr	r3, [pc, #56]	; (8002a68 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a2e:	881b      	ldrh	r3, [r3, #0]
 8002a30:	2b15      	cmp	r3, #21
 8002a32:	d81d      	bhi.n	8002a70 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002a34:	4b0d      	ldr	r3, [pc, #52]	; (8002a6c <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002a36:	4a0a      	ldr	r2, [pc, #40]	; (8002a60 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002a38:	2161      	movs	r1, #97	; 0x61
 8002a3a:	e7f4      	b.n	8002a26 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002a3c:	0802c818 	.word	0x0802c818
 8002a40:	0802f4d4 	.word	0x0802f4d4
 8002a44:	0802f69c 	.word	0x0802f69c
 8002a48:	0802c770 	.word	0x0802c770
 8002a4c:	0802f208 	.word	0x0802f208
 8002a50:	0802c800 	.word	0x0802c800
 8002a54:	08002711 	.word	0x08002711
 8002a58:	2001301c 	.word	0x2001301c
 8002a5c:	0802c5b0 	.word	0x0802c5b0
 8002a60:	0802c6b2 	.word	0x0802c6b2
 8002a64:	0802c62d 	.word	0x0802c62d
 8002a68:	20013020 	.word	0x20013020
 8002a6c:	0802c674 	.word	0x0802c674
        return texts->getText(typedTextId);
 8002a70:	4b93      	ldr	r3, [pc, #588]	; (8002cc0 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002a72:	2115      	movs	r1, #21
 8002a74:	6818      	ldr	r0, [r3, #0]
 8002a76:	f005 fbe1 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8002a7a:	4a92      	ldr	r2, [pc, #584]	; (8002cc4 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002a7c:	4603      	mov	r3, r0
 8002a7e:	2104      	movs	r1, #4
 8002a80:	4650      	mov	r0, sl
 8002a82:	f016 fb77 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002a86:	4648      	mov	r0, r9
        wc1 = value;
 8002a88:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002a8c:	f010 f8c0 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002a90:	4b8d      	ldr	r3, [pc, #564]	; (8002cc8 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002a92:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002a94:	a90a      	add	r1, sp, #40	; 0x28
 8002a96:	2316      	movs	r3, #22
 8002a98:	4648      	mov	r0, r9
 8002a9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a9e:	f010 f8d7 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002aa2:	4649      	mov	r1, r9
 8002aa4:	4630      	mov	r0, r6
 8002aa6:	f00d ff1e 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002aaa:	230a      	movs	r3, #10
 8002aac:	9300      	str	r3, [sp, #0]
 8002aae:	2232      	movs	r2, #50	; 0x32
 8002ab0:	23f0      	movs	r3, #240	; 0xf0
 8002ab2:	4629      	mov	r1, r5
 8002ab4:	4638      	mov	r0, r7
 8002ab6:	f7ff fe5d 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002aba:	9b03      	ldr	r3, [sp, #12]
 8002abc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ac0:	22a0      	movs	r2, #160	; 0xa0
 8002ac2:	4611      	mov	r1, r2
 8002ac4:	4638      	mov	r0, r7
 8002ac6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002aca:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002ace:	f00f fc79 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ad2:	22a0      	movs	r2, #160	; 0xa0
 8002ad4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002ad8:	4638      	mov	r0, r7
 8002ada:	f00f fc7e 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002ade:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002ae2:	2b20      	cmp	r3, #32
 8002ae4:	d005      	beq.n	8002af2 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002ae6:	2320      	movs	r3, #32
 8002ae8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002aec:	4638      	mov	r0, r7
 8002aee:	f00f fb73 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002af2:	4638      	mov	r0, r7
 8002af4:	2101      	movs	r1, #1
 8002af6:	f00f fc7b 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002afa:	4639      	mov	r1, r7
 8002afc:	4630      	mov	r0, r6
 8002afe:	ad04      	add	r5, sp, #16
        color = newColor;
 8002b00:	f04f 37ff 	mov.w	r7, #4294967295
 8002b04:	f00d feef 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002b08:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002b0c:	223c      	movs	r2, #60	; 0x3c
 8002b0e:	4640      	mov	r0, r8
 8002b10:	2146      	movs	r1, #70	; 0x46
 8002b12:	f7ff fe22 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002b16:	4641      	mov	r1, r8
 8002b18:	4628      	mov	r0, r5
        color = newColor;
 8002b1a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002b1e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002b22:	f00f fdfb 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b2a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002b2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b32:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002cc8 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002b36:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b3a:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002b3c:	a90a      	add	r1, sp, #40	; 0x28
 8002b3e:	4640      	mov	r0, r8
 8002b40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b44:	f010 f884 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b48:	4641      	mov	r1, r8
 8002b4a:	4630      	mov	r0, r6
 8002b4c:	f00d fecb 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002b50:	ee18 0a10 	vmov	r0, s16
 8002b54:	2223      	movs	r2, #35	; 0x23
 8002b56:	2145      	movs	r1, #69	; 0x45
 8002b58:	f7ff fdff 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002b5c:	ee18 1a10 	vmov	r1, s16
 8002b60:	4628      	mov	r0, r5
        color = newColor;
 8002b62:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002b66:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002b6a:	f00f fdd7 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b6e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b72:	ee18 3a10 	vmov	r3, s16
 8002b76:	333c      	adds	r3, #60	; 0x3c
 8002b78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b7c:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002b7e:	ee18 0a10 	vmov	r0, s16
 8002b82:	a90a      	add	r1, sp, #40	; 0x28
 8002b84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b88:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b8c:	f010 f860 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b90:	ee18 1a10 	vmov	r1, s16
 8002b94:	4630      	mov	r0, r6
 8002b96:	f00d fea6 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002b9a:	ee18 0a90 	vmov	r0, s17
 8002b9e:	220c      	movs	r2, #12
 8002ba0:	2136      	movs	r1, #54	; 0x36
 8002ba2:	f7ff fdda 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002ba6:	ee18 1a90 	vmov	r1, s17
 8002baa:	4628      	mov	r0, r5
        color = newColor;
 8002bac:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002bb0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002bb4:	f00f fdb2 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002bb8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002bbc:	ee18 3a90 	vmov	r3, s17
 8002bc0:	333c      	adds	r3, #60	; 0x3c
 8002bc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002bc6:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002bc8:	ee18 0a90 	vmov	r0, s17
 8002bcc:	a90a      	add	r1, sp, #40	; 0x28
 8002bce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002bd2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002bd6:	f010 f83b 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002bda:	ee18 1a90 	vmov	r1, s17
 8002bde:	4630      	mov	r0, r6
 8002be0:	f00d fe81 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002be4:	ee19 0a10 	vmov	r0, s18
 8002be8:	22f0      	movs	r2, #240	; 0xf0
 8002bea:	2121      	movs	r1, #33	; 0x21
 8002bec:	f7ff fdb5 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002bf0:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002bf4:	aa0a      	add	r2, sp, #40	; 0x28
 8002bf6:	f04f 0802 	mov.w	r8, #2
 8002bfa:	a909      	add	r1, sp, #36	; 0x24
 8002bfc:	ee19 0a10 	vmov	r0, s18
 8002c00:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c04:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002c08:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c0c:	f010 fa05 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002c10:	2343      	movs	r3, #67	; 0x43
 8002c12:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002c16:	3510      	adds	r5, #16
        updateTextPosition();
 8002c18:	ee19 0a10 	vmov	r0, s18
 8002c1c:	f7ff fdf2 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c20:	ee19 1a10 	vmov	r1, s18
 8002c24:	4630      	mov	r0, r6
        colorPressed = col;
 8002c26:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c2a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002c2e:	f00d fe5a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002c32:	ee19 0a90 	vmov	r0, s19
 8002c36:	22aa      	movs	r2, #170	; 0xaa
 8002c38:	2121      	movs	r1, #33	; 0x21
 8002c3a:	f7ff fd8e 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c3e:	aa0a      	add	r2, sp, #40	; 0x28
 8002c40:	a909      	add	r1, sp, #36	; 0x24
 8002c42:	ee19 0a90 	vmov	r0, s19
 8002c46:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c4a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c4e:	f010 f9e4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c52:	2342      	movs	r3, #66	; 0x42
 8002c54:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002c58:	ee19 0a90 	vmov	r0, s19
 8002c5c:	f7ff fdd2 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c60:	ee19 1a90 	vmov	r1, s19
 8002c64:	4630      	mov	r0, r6
        colorPressed = col;
 8002c66:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002c6a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002c6e:	f00d fe3a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002c72:	ee1a 0a10 	vmov	r0, s20
 8002c76:	2264      	movs	r2, #100	; 0x64
 8002c78:	2121      	movs	r1, #33	; 0x21
 8002c7a:	f7ff fd6e 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c7e:	aa0a      	add	r2, sp, #40	; 0x28
 8002c80:	a909      	add	r1, sp, #36	; 0x24
 8002c82:	ee1a 0a10 	vmov	r0, s20
 8002c86:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c8a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c8e:	f010 f9c4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c92:	2341      	movs	r3, #65	; 0x41
        updateTextPosition();
 8002c94:	ee1a 0a10 	vmov	r0, s20
 8002c98:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002c9c:	f7ff fdb2 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ca0:	4630      	mov	r0, r6
        colorPressed = col;
 8002ca2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002ca6:	ee1a 1a10 	vmov	r1, s20
 8002caa:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002cae:	f00d fe1a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002cb2:	4620      	mov	r0, r4
 8002cb4:	b00d      	add	sp, #52	; 0x34
 8002cb6:	ecbd 8b06 	vpop	{d8-d10}
 8002cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cbe:	bf00      	nop
 8002cc0:	20013028 	.word	0x20013028
 8002cc4:	0802c6ea 	.word	0x0802c6ea
 8002cc8:	0802c760 	.word	0x0802c760

08002ccc <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002ccc:	4770      	bx	lr

08002cce <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cce:	4770      	bx	lr

08002cd0 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002cd0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002cd2:	68c2      	ldr	r2, [r0, #12]
 8002cd4:	6844      	ldr	r4, [r0, #4]
 8002cd6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002cd8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002cda:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002cde:	07d2      	lsls	r2, r2, #31
 8002ce0:	bf48      	it	mi
 8002ce2:	5962      	ldrmi	r2, [r4, r5]
 8002ce4:	689b      	ldr	r3, [r3, #8]
    }
 8002ce6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ce8:	bf48      	it	mi
 8002cea:	58d3      	ldrmi	r3, [r2, r3]
 8002cec:	4718      	bx	r3

08002cee <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002cee:	6843      	ldr	r3, [r0, #4]
 8002cf0:	b12b      	cbz	r3, 8002cfe <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002cf2:	6883      	ldr	r3, [r0, #8]
 8002cf4:	b92b      	cbnz	r3, 8002d02 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002cf6:	68c0      	ldr	r0, [r0, #12]
 8002cf8:	f000 0001 	and.w	r0, r0, #1
 8002cfc:	4770      	bx	lr
 8002cfe:	4618      	mov	r0, r3
 8002d00:	4770      	bx	lr
 8002d02:	2001      	movs	r0, #1
    }
 8002d04:	4770      	bx	lr

08002d06 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d06:	b510      	push	{r4, lr}
 8002d08:	2110      	movs	r1, #16
 8002d0a:	4604      	mov	r4, r0
 8002d0c:	f027 f939 	bl	8029f82 <_ZdlPvj>
 8002d10:	4620      	mov	r0, r4
 8002d12:	bd10      	pop	{r4, pc}

08002d14 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d14:	b510      	push	{r4, lr}
 8002d16:	4b03      	ldr	r3, [pc, #12]	; (8002d24 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002d18:	6003      	str	r3, [r0, #0]
 8002d1a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d1c:	f011 fb7a 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d20:	4620      	mov	r0, r4
 8002d22:	bd10      	pop	{r4, pc}
 8002d24:	0802c864 	.word	0x0802c864

08002d28 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002d28:	b507      	push	{r0, r1, r2, lr}
 8002d2a:	4b07      	ldr	r3, [pc, #28]	; (8002d48 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002d2c:	6003      	str	r3, [r0, #0]
 8002d2e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002d30:	f011 fb70 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002d34:	9801      	ldr	r0, [sp, #4]
 8002d36:	f44f 5187 	mov.w	r1, #4320	; 0x10e0
 8002d3a:	f027 f922 	bl	8029f82 <_ZdlPvj>
 8002d3e:	9801      	ldr	r0, [sp, #4]
 8002d40:	b003      	add	sp, #12
 8002d42:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d46:	bf00      	nop
 8002d48:	0802c864 	.word	0x0802c864

08002d4c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002d4c:	3098      	adds	r0, #152	; 0x98
 8002d4e:	4288      	cmp	r0, r1
{
 8002d50:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002d52:	d105      	bne.n	8002d60 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d54:	f013 f860 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002d58:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002d5c:	f001 b8d4 	b.w	8003f08 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002d60:	bd08      	pop	{r3, pc}
	...

08002d64 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d68:	ed2d 8b04 	vpush	{d8-d9}
 8002d6c:	4604      	mov	r4, r0
 8002d6e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002d70:	46a1      	mov	r9, r4
 8002d72:	2500      	movs	r5, #0
 8002d74:	f014 fcd0 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8002d78:	4bc8      	ldr	r3, [pc, #800]	; (800309c <_ZN24Calibration_HallViewBaseC1Ev+0x338>)
 8002d7a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d7c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002d80:	2226      	movs	r2, #38	; 0x26
 8002d82:	4629      	mov	r1, r5
 8002d84:	4648      	mov	r0, r9
 8002d86:	f028 f914 	bl	802afb2 <memset>
 8002d8a:	4648      	mov	r0, r9
 8002d8c:	f7ff fd06 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8002d90:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002d94:	26ff      	movs	r6, #255	; 0xff
 8002d96:	4bc2      	ldr	r3, [pc, #776]	; (80030a0 <_ZN24Calibration_HallViewBaseC1Ev+0x33c>)
 8002d98:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002d9a:	2226      	movs	r2, #38	; 0x26
 8002d9c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002da0:	4629      	mov	r1, r5
 8002da2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002da6:	4640      	mov	r0, r8
 8002da8:	66a5      	str	r5, [r4, #104]	; 0x68
 8002daa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002dae:	f028 f900 	bl	802afb2 <memset>
 8002db2:	4640      	mov	r0, r8
 8002db4:	f7ff fcf2 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8002db8:	4bba      	ldr	r3, [pc, #744]	; (80030a4 <_ZN24Calibration_HallViewBaseC1Ev+0x340>)
 8002dba:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002dbc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002dc0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002dc4:	a90a      	add	r1, sp, #40	; 0x28
 8002dc6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002dc8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002dcc:	f010 fb1b 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002dd0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	ee08 3a90 	vmov	s17, r3
 8002dda:	f010 fc55 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002dde:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002de2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002de6:	4618      	mov	r0, r3
 8002de8:	ee09 3a10 	vmov	s18, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002dec:	4eae      	ldr	r6, [pc, #696]	; (80030a8 <_ZN24Calibration_HallViewBaseC1Ev+0x344>)
 8002dee:	f7ff fce7 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8002df2:	4638      	mov	r0, r7
 8002df4:	f00f f9d0 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8002df8:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8002dfc:	f106 0b24 	add.w	fp, r6, #36	; 0x24
 8002e00:	4618      	mov	r0, r3
 8002e02:	f504 7ad6 	add.w	sl, r4, #428	; 0x1ac
 8002e06:	9302      	str	r3, [sp, #8]
 8002e08:	f7fe f91e 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e0c:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8002e10:	f8c4 b1a0 	str.w	fp, [r4, #416]	; 0x1a0
 8002e14:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002e18:	4650      	mov	r0, sl
 8002e1a:	f00f f9bd 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8002e1e:	f504 7307 	add.w	r3, r4, #540	; 0x21c
 8002e22:	4618      	mov	r0, r3
 8002e24:	9303      	str	r3, [sp, #12]
 8002e26:	f7fe f90f 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002e2a:	f504 730c 	add.w	r3, r4, #560	; 0x230
 8002e2e:	4618      	mov	r0, r3
 8002e30:	f8c4 621c 	str.w	r6, [r4, #540]	; 0x21c
 8002e34:	f8c4 b224 	str.w	fp, [r4, #548]	; 0x224
 8002e38:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 8002e3c:	f504 7b1e 	add.w	fp, r4, #632	; 0x278
 8002e40:	ee08 3a10 	vmov	s16, r3
 8002e44:	f7ff fcbc 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8002e48:	4658      	mov	r0, fp
 8002e4a:	f7ff fcb9 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002e4e:	4a97      	ldr	r2, [pc, #604]	; (80030ac <_ZN24Calibration_HallViewBaseC1Ev+0x348>)
 8002e50:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002e54:	e9c3 2434 	strd	r2, r4, [r3, #208]	; 0xd0
 8002e58:	4a95      	ldr	r2, [pc, #596]	; (80030b0 <_ZN24Calibration_HallViewBaseC1Ev+0x34c>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e5a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002e5e:	e9c3 2536 	strd	r2, r5, [r3, #216]	; 0xd8
 8002e62:	f504 7030 	add.w	r0, r4, #704	; 0x2c0
 8002e66:	f011 facb 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002e6a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002e6e:	462a      	mov	r2, r5
 8002e70:	4648      	mov	r0, r9
 8002e72:	9300      	str	r3, [sp, #0]
 8002e74:	4629      	mov	r1, r5
 8002e76:	23f0      	movs	r3, #240	; 0xf0
 8002e78:	f7ff fc7c 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e7c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002e7e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e82:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e84:	4649      	mov	r1, r9
 8002e86:	4630      	mov	r0, r6
 8002e88:	f00d fd2d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002e8c:	462a      	mov	r2, r5
 8002e8e:	4640      	mov	r0, r8
 8002e90:	4629      	mov	r1, r5
 8002e92:	f7ff fc62 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002e96:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002e98:	4640      	mov	r0, r8
 8002e9a:	a90a      	add	r1, sp, #40	; 0x28
 8002e9c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ea0:	f010 fab1 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ea4:	4641      	mov	r1, r8
 8002ea6:	4630      	mov	r0, r6
 8002ea8:	f00d fd1d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002eac:	ee18 0a90 	vmov	r0, s17
 8002eb0:	f240 1201 	movw	r2, #257	; 0x101
 8002eb4:	2121      	movs	r1, #33	; 0x21
 8002eb6:	f7ff fc50 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002eba:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ebc:	aa0a      	add	r2, sp, #40	; 0x28
 8002ebe:	a909      	add	r1, sp, #36	; 0x24
 8002ec0:	ee18 0a90 	vmov	r0, s17
 8002ec4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002ec8:	2302      	movs	r3, #2
 8002eca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ece:	f010 f8a4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002ed2:	230a      	movs	r3, #10
 8002ed4:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 8002ed8:	ee18 0a90 	vmov	r0, s17
 8002edc:	f7ff fc92 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002ee0:	f504 5286 	add.w	r2, r4, #4288	; 0x10c0
        color = col;
 8002ee4:	f04f 39ff 	mov.w	r9, #4294967295
 8002ee8:	3210      	adds	r2, #16
 8002eea:	ee18 1a90 	vmov	r1, s17
 8002eee:	f8c4 20c0 	str.w	r2, [r4, #192]	; 0xc0
 8002ef2:	4630      	mov	r0, r6
        colorPressed = col;
 8002ef4:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002ef8:	f00d fcf5 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002efc:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002f00:	223c      	movs	r2, #60	; 0x3c
 8002f02:	ee19 0a10 	vmov	r0, s18
 8002f06:	2120      	movs	r1, #32
 8002f08:	f7ff fc27 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8002f0c:	ee19 1a10 	vmov	r1, s18
 8002f10:	4640      	mov	r0, r8
        color = newColor;
 8002f12:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f16:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f1a:	f00f fbff 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f1e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f22:	f504 7c8e 	add.w	ip, r4, #284	; 0x11c
 8002f26:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        : typedTextId(id)
 8002f2a:	4b62      	ldr	r3, [pc, #392]	; (80030b4 <_ZN24Calibration_HallViewBaseC1Ev+0x350>)
 8002f2c:	930a      	str	r3, [sp, #40]	; 0x28
 8002f2e:	220b      	movs	r2, #11
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002f30:	ee19 0a10 	vmov	r0, s18
 8002f34:	a90a      	add	r1, sp, #40	; 0x28
 8002f36:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8002f3a:	f00f fe89 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f3e:	ee19 1a10 	vmov	r1, s18
 8002f42:	4630      	mov	r0, r6
 8002f44:	f00d fccf 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8002f48:	230a      	movs	r3, #10
 8002f4a:	9300      	str	r3, [sp, #0]
 8002f4c:	224b      	movs	r2, #75	; 0x4b
 8002f4e:	23f0      	movs	r3, #240	; 0xf0
 8002f50:	4629      	mov	r1, r5
 8002f52:	4638      	mov	r0, r7
 8002f54:	f7ff fc0e 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f58:	9b02      	ldr	r3, [sp, #8]
 8002f5a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f5e:	22a0      	movs	r2, #160	; 0xa0
 8002f60:	4611      	mov	r1, r2
 8002f62:	4638      	mov	r0, r7
 8002f64:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002f68:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002f6c:	f00f fa2a 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002f70:	22a0      	movs	r2, #160	; 0xa0
 8002f72:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002f76:	4638      	mov	r0, r7
 8002f78:	f00f fa2f 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002f7c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002f80:	2b20      	cmp	r3, #32
 8002f82:	d005      	beq.n	8002f90 <_ZN24Calibration_HallViewBaseC1Ev+0x22c>
        lineWidthQ5 = widthQ5;
 8002f84:	2320      	movs	r3, #32
 8002f86:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002f8a:	4638      	mov	r0, r7
 8002f8c:	f00f f924 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002f90:	2101      	movs	r1, #1
 8002f92:	4638      	mov	r0, r7
 8002f94:	f00f fa2c 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002f98:	4639      	mov	r1, r7
 8002f9a:	4630      	mov	r0, r6
 8002f9c:	f00d fca3 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002fa0:	230a      	movs	r3, #10
 8002fa2:	9300      	str	r3, [sp, #0]
 8002fa4:	2232      	movs	r2, #50	; 0x32
 8002fa6:	23f0      	movs	r3, #240	; 0xf0
 8002fa8:	2100      	movs	r1, #0
 8002faa:	4650      	mov	r0, sl
 8002fac:	f7ff fbe2 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fb0:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fb4:	22a0      	movs	r2, #160	; 0xa0
 8002fb6:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 8002fba:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8002fbe:	9b03      	ldr	r3, [sp, #12]
 8002fc0:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
 8002fc4:	4611      	mov	r1, r2
 8002fc6:	4650      	mov	r0, sl
 8002fc8:	f00f f9fc 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fcc:	22a0      	movs	r2, #160	; 0xa0
 8002fce:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002fd2:	4650      	mov	r0, sl
 8002fd4:	f00f fa01 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002fd8:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8002fdc:	2b20      	cmp	r3, #32
 8002fde:	d005      	beq.n	8002fec <_ZN24Calibration_HallViewBaseC1Ev+0x288>
        lineWidthQ5 = widthQ5;
 8002fe0:	2320      	movs	r3, #32
 8002fe2:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
        updateCachedShape();
 8002fe6:	4650      	mov	r0, sl
 8002fe8:	f00f f8f6 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002fec:	4650      	mov	r0, sl
 8002fee:	2101      	movs	r1, #1
 8002ff0:	f00f f9fe 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002ff4:	4651      	mov	r1, sl
 8002ff6:	4630      	mov	r0, r6
 8002ff8:	f00d fc75 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002ffc:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003000:	ee18 0a10 	vmov	r0, s16
 8003004:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8003006:	2500      	movs	r5, #0
 8003008:	2145      	movs	r1, #69	; 0x45
 800300a:	f7ff fba6 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800300e:	ee18 1a10 	vmov	r1, s16
 8003012:	4640      	mov	r0, r8
        color = newColor;
 8003014:	f8c4 7260 	str.w	r7, [r4, #608]	; 0x260
        linespace = space;
 8003018:	f8a4 5264 	strh.w	r5, [r4, #612]	; 0x264
        boundingArea = calculateBoundingArea();
 800301c:	f00f fb7e 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003020:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003024:	ee18 3a10 	vmov	r3, s16
 8003028:	333c      	adds	r3, #60	; 0x3c
 800302a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800302e:	f04f 0a0c 	mov.w	sl, #12
 8003032:	4b20      	ldr	r3, [pc, #128]	; (80030b4 <_ZN24Calibration_HallViewBaseC1Ev+0x350>)
 8003034:	930a      	str	r3, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003036:	ee18 0a10 	vmov	r0, s16
 800303a:	a90a      	add	r1, sp, #40	; 0x28
 800303c:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8003040:	f00f fe06 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003044:	ee18 1a10 	vmov	r1, s16
 8003048:	4630      	mov	r0, r6
 800304a:	f00d fc4c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800304e:	4652      	mov	r2, sl
 8003050:	4658      	mov	r0, fp
 8003052:	2136      	movs	r1, #54	; 0x36
 8003054:	f7ff fb81 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8003058:	4659      	mov	r1, fp
 800305a:	4640      	mov	r0, r8
        color = newColor;
 800305c:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
        linespace = space;
 8003060:	f8a4 52ac 	strh.w	r5, [r4, #684]	; 0x2ac
        boundingArea = calculateBoundingArea();
 8003064:	f00f fb5a 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003068:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800306c:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8003070:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003074:	4b0f      	ldr	r3, [pc, #60]	; (80030b4 <_ZN24Calibration_HallViewBaseC1Ev+0x350>)
 8003076:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003078:	a90a      	add	r1, sp, #40	; 0x28
 800307a:	230d      	movs	r3, #13
 800307c:	4658      	mov	r0, fp
 800307e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003082:	f00f fde5 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003086:	4630      	mov	r0, r6
 8003088:	4659      	mov	r1, fp
 800308a:	f00d fc2c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800308e:	4620      	mov	r0, r4
 8003090:	b00d      	add	sp, #52	; 0x34
 8003092:	ecbd 8b04 	vpop	{d8-d9}
 8003096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800309a:	bf00      	nop
 800309c:	0802c864 	.word	0x0802c864
 80030a0:	0802f4d4 	.word	0x0802f4d4
 80030a4:	0802f69c 	.word	0x0802f69c
 80030a8:	0802f208 	.word	0x0802f208
 80030ac:	0802c84c 	.word	0x0802c84c
 80030b0:	08002d4d 	.word	0x08002d4d
 80030b4:	0802c760 	.word	0x0802c760

080030b8 <_ZN23Calibration_PadViewBase21scrollList1UpdateItemER23Configuration_Containers>:
    virtual void setupScreen();

    virtual void scrollList1UpdateItem(Configuration_Container& item, int16_t itemIndex)
    {
        // Override and implement this function in Calibration_Pad
    }
 80030b8:	4770      	bx	lr

080030ba <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 80030ba:	2005      	movs	r0, #5
 80030bc:	4770      	bx	lr

080030be <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030be:	4770      	bx	lr

080030c0 <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 80030c0:	4770      	bx	lr
	...

080030c4 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 80030c4:	b538      	push	{r3, r4, r5, lr}
 80030c6:	4b07      	ldr	r3, [pc, #28]	; (80030e4 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED1Ev+0x20>)
 80030c8:	6003      	str	r3, [r0, #0]
 80030ca:	4604      	mov	r4, r0
 80030cc:	f44f 7535 	mov.w	r5, #724	; 0x2d4
 80030d0:	5963      	ldr	r3, [r4, r5]
 80030d2:	1960      	adds	r0, r4, r5
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	3db4      	subs	r5, #180	; 0xb4
 80030d8:	4798      	blx	r3
 80030da:	f115 0fb0 	cmn.w	r5, #176	; 0xb0
 80030de:	d1f7      	bne.n	80030d0 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED1Ev+0xc>
 80030e0:	4620      	mov	r0, r4
 80030e2:	bd38      	pop	{r3, r4, r5, pc}
 80030e4:	0802ca20 	.word	0x0802ca20

080030e8 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80030e8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80030ea:	68c2      	ldr	r2, [r0, #12]
 80030ec:	6844      	ldr	r4, [r0, #4]
 80030ee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030f2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80030f6:	07d2      	lsls	r2, r2, #31
 80030f8:	bf48      	it	mi
 80030fa:	5962      	ldrmi	r2, [r4, r5]
 80030fc:	689b      	ldr	r3, [r3, #8]
    }
 80030fe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003100:	bf48      	it	mi
 8003102:	58d3      	ldrmi	r3, [r2, r3]
 8003104:	4718      	bx	r3

08003106 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003106:	6843      	ldr	r3, [r0, #4]
 8003108:	b12b      	cbz	r3, 8003116 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800310a:	6883      	ldr	r3, [r0, #8]
 800310c:	b92b      	cbnz	r3, 800311a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800310e:	68c0      	ldr	r0, [r0, #12]
 8003110:	f000 0001 	and.w	r0, r0, #1
 8003114:	4770      	bx	lr
 8003116:	4618      	mov	r0, r3
 8003118:	4770      	bx	lr
 800311a:	2001      	movs	r0, #1
    }
 800311c:	4770      	bx	lr

0800311e <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
    virtual void execute(T1 t1, T2 t2, T3 t3)
 800311e:	b4f0      	push	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 8003120:	68c5      	ldr	r5, [r0, #12]
 8003122:	6846      	ldr	r6, [r0, #4]
 8003124:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 8003126:	4604      	mov	r4, r0
        (pobject->*pmemfun)(t1, t2, t3);
 8003128:	eb06 0065 	add.w	r0, r6, r5, asr #1
 800312c:	07ed      	lsls	r5, r5, #31
 800312e:	68a4      	ldr	r4, [r4, #8]
 8003130:	bf44      	itt	mi
 8003132:	59f5      	ldrmi	r5, [r6, r7]
 8003134:	592c      	ldrmi	r4, [r5, r4]
 8003136:	46a4      	mov	ip, r4
    }
 8003138:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun)(t1, t2, t3);
 800313a:	4760      	bx	ip

0800313c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800313c:	6843      	ldr	r3, [r0, #4]
 800313e:	b12b      	cbz	r3, 800314c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 8003140:	6883      	ldr	r3, [r0, #8]
 8003142:	b92b      	cbnz	r3, 8003150 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 8003144:	68c0      	ldr	r0, [r0, #12]
 8003146:	f000 0001 	and.w	r0, r0, #1
 800314a:	4770      	bx	lr
 800314c:	4618      	mov	r0, r3
 800314e:	4770      	bx	lr
 8003150:	2001      	movs	r0, #1
    }
 8003152:	4770      	bx	lr

08003154 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED0Ev>:
 8003154:	b510      	push	{r4, lr}
 8003156:	4604      	mov	r4, r0
 8003158:	f7ff ffb4 	bl	80030c4 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED1Ev>
 800315c:	4620      	mov	r0, r4
 800315e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8003162:	f026 ff0e 	bl	8029f82 <_ZdlPvj>
 8003166:	4620      	mov	r0, r4
 8003168:	bd10      	pop	{r4, pc}

0800316a <_ZN8touchgfx8CallbackI23Calibration_PadViewBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 800316a:	b510      	push	{r4, lr}
 800316c:	2110      	movs	r1, #16
 800316e:	4604      	mov	r4, r0
 8003170:	f026 ff07 	bl	8029f82 <_ZdlPvj>
 8003174:	4620      	mov	r0, r4
 8003176:	bd10      	pop	{r4, pc}

08003178 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003178:	b510      	push	{r4, lr}
 800317a:	2110      	movs	r1, #16
 800317c:	4604      	mov	r4, r0
 800317e:	f026 ff00 	bl	8029f82 <_ZdlPvj>
 8003182:	4620      	mov	r0, r4
 8003184:	bd10      	pop	{r4, pc}
	...

08003188 <_ZN23Calibration_PadViewBaseD1Ev>:
    scrollList1.setDrawableSize(40, 0);
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
    add(scrollList1);
}

Calibration_PadViewBase::~Calibration_PadViewBase()
 8003188:	b510      	push	{r4, lr}
 800318a:	4b05      	ldr	r3, [pc, #20]	; (80031a0 <_ZN23Calibration_PadViewBaseD1Ev+0x18>)
 800318c:	6003      	str	r3, [r0, #0]
 800318e:	4604      	mov	r4, r0
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003190:	f011 f940 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003194:	f504 7061 	add.w	r0, r4, #900	; 0x384
 8003198:	f7ff ff94 	bl	80030c4 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EED1Ev>
}
 800319c:	4620      	mov	r0, r4
 800319e:	bd10      	pop	{r4, pc}
 80031a0:	0802ca68 	.word	0x0802ca68

080031a4 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80031a4:	b510      	push	{r4, lr}
 80031a6:	4604      	mov	r4, r0
}
 80031a8:	f7ff ffee 	bl	8003188 <_ZN23Calibration_PadViewBaseD1Ev>
 80031ac:	4620      	mov	r0, r4
 80031ae:	f241 513c 	movw	r1, #5436	; 0x153c
 80031b2:	f026 fee6 	bl	8029f82 <_ZdlPvj>
 80031b6:	4620      	mov	r0, r4
 80031b8:	bd10      	pop	{r4, pc}

080031ba <_ZN23Calibration_PadViewBase11setupScreenEv>:

void Calibration_PadViewBase::setupScreen()
{
 80031ba:	b570      	push	{r4, r5, r6, lr}
 80031bc:	4605      	mov	r5, r0
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 80031be:	f500 703b 	add.w	r0, r0, #748	; 0x2ec
 80031c2:	f00c fe3e 	bl	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 80031c6:	f44f 7462 	mov.w	r4, #904	; 0x388
    scrollList1.initialize();
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
 80031ca:	f240 760c 	movw	r6, #1804	; 0x70c
    {
        scrollList1ListItems[i].initialize();
 80031ce:	592b      	ldr	r3, [r5, r4]
 80031d0:	1928      	adds	r0, r5, r4
 80031d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
 80031d6:	34b4      	adds	r4, #180	; 0xb4
        scrollList1ListItems[i].initialize();
 80031d8:	4798      	blx	r3
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
 80031da:	42b4      	cmp	r4, r6
 80031dc:	d1f7      	bne.n	80031ce <_ZN23Calibration_PadViewBase11setupScreenEv+0x14>
    }
}
 80031de:	bd70      	pop	{r4, r5, r6, pc}

080031e0 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 80031e0:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 80031e2:	b28b      	uxth	r3, r1
 80031e4:	2b04      	cmp	r3, #4
 80031e6:	d905      	bls.n	80031f4 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE11getDrawableEs+0x14>
 80031e8:	4b05      	ldr	r3, [pc, #20]	; (8003200 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE11getDrawableEs+0x20>)
 80031ea:	4a06      	ldr	r2, [pc, #24]	; (8003204 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE11getDrawableEs+0x24>)
 80031ec:	4806      	ldr	r0, [pc, #24]	; (8003208 <_ZN8touchgfx17DrawableListItemsI23Configuration_ContainerLi5EE11getDrawableEs+0x28>)
 80031ee:	2154      	movs	r1, #84	; 0x54
 80031f0:	f027 fcda 	bl	802aba8 <__assert_func>
        return &element[index];
 80031f4:	23b4      	movs	r3, #180	; 0xb4
 80031f6:	fb01 0003 	mla	r0, r1, r3, r0
    }
 80031fa:	3004      	adds	r0, #4
 80031fc:	bd08      	pop	{r3, pc}
 80031fe:	bf00      	nop
 8003200:	0802c890 	.word	0x0802c890
 8003204:	0802c8ab 	.word	0x0802c8ab
 8003208:	0802c946 	.word	0x0802c946

0800320c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800320c:	f500 708e 	add.w	r0, r0, #284	; 0x11c
 8003210:	4288      	cmp	r0, r1
{
 8003212:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003214:	d105      	bne.n	8003222 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003216:	f012 fdff 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 800321a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 800321e:	f000 be73 	b.w	8003f08 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003222:	bd08      	pop	{r3, pc}

08003224 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:

void Calibration_PadViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 8003224:	b570      	push	{r4, r5, r6, lr}
    if (items == &scrollList1ListItems)
 8003226:	f500 7461 	add.w	r4, r0, #900	; 0x384
 800322a:	428c      	cmp	r4, r1
{
 800322c:	4615      	mov	r5, r2
 800322e:	461a      	mov	r2, r3
    if (items == &scrollList1ListItems)
 8003230:	d110      	bne.n	8003254 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x30>
    {
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 8003232:	6803      	ldr	r3, [r0, #0]
        assert(index >= 0 && index < SIZE);
 8003234:	2d04      	cmp	r5, #4
 8003236:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003238:	d905      	bls.n	8003246 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x22>
 800323a:	4b07      	ldr	r3, [pc, #28]	; (8003258 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x34>)
 800323c:	4a07      	ldr	r2, [pc, #28]	; (800325c <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x38>)
 800323e:	4808      	ldr	r0, [pc, #32]	; (8003260 <_ZN23Calibration_PadViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x3c>)
 8003240:	2161      	movs	r1, #97	; 0x61
 8003242:	f027 fcb1 	bl	802aba8 <__assert_func>
        return element[index];
 8003246:	21b4      	movs	r1, #180	; 0xb4
 8003248:	fb05 4101 	mla	r1, r5, r1, r4
 800324c:	3104      	adds	r1, #4
    }
}
 800324e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        scrollList1UpdateItem(scrollList1ListItems[containerIndex], itemIndex);
 8003252:	4718      	bx	r3
}
 8003254:	bd70      	pop	{r4, r5, r6, pc}
 8003256:	bf00      	nop
 8003258:	0802c890 	.word	0x0802c890
 800325c:	0802c9a5 	.word	0x0802c9a5
 8003260:	0802c946 	.word	0x0802c946

08003264 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003268:	ed2d 8b06 	vpush	{d8-d10}
 800326c:	4604      	mov	r4, r0
 800326e:	b08d      	sub	sp, #52	; 0x34
 8003270:	f014 fa52 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003274:	4622      	mov	r2, r4
 8003276:	2500      	movs	r5, #0
 8003278:	4bea      	ldr	r3, [pc, #936]	; (8003624 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800327a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800327c:	f842 3b40 	str.w	r3, [r2], #64
 8003280:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8003284:	4629      	mov	r1, r5
 8003286:	2226      	movs	r2, #38	; 0x26
 8003288:	ee18 0a10 	vmov	r0, s16
 800328c:	f027 fe91 	bl	802afb2 <memset>
 8003290:	ee18 0a10 	vmov	r0, s16
 8003294:	f7ff fa82 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8003298:	26ff      	movs	r6, #255	; 0xff
 800329a:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800329e:	4be2      	ldr	r3, [pc, #904]	; (8003628 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>)
 80032a0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80032a2:	2226      	movs	r2, #38	; 0x26
 80032a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032a8:	4629      	mov	r1, r5
 80032aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80032ae:	66a5      	str	r5, [r4, #104]	; 0x68
 80032b0:	4650      	mov	r0, sl
 80032b2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80032b6:	f027 fe7c 	bl	802afb2 <memset>
 80032ba:	4650      	mov	r0, sl
 80032bc:	f7ff fa6e 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80032c0:	4bda      	ldr	r3, [pc, #872]	; (800362c <_ZN23Calibration_PadViewBaseC1Ev+0x3c8>)
 80032c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80032c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80032c8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80032cc:	a90a      	add	r1, sp, #40	; 0x28
        : Widget(), bitmap(bmp), alpha(255)
 80032ce:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80032d2:	4650      	mov	r0, sl
 80032d4:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80032d8:	f010 f895 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80032dc:	4640      	mov	r0, r8
 80032de:	f00e ff5b 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80032e2:	4ed3      	ldr	r6, [pc, #844]	; (8003630 <_ZN23Calibration_PadViewBaseC1Ev+0x3cc>)
 80032e4:	f504 7384 	add.w	r3, r4, #264	; 0x108
 80032e8:	4618      	mov	r0, r3
 80032ea:	f106 0924 	add.w	r9, r6, #36	; 0x24
 80032ee:	9302      	str	r3, [sp, #8]
 80032f0:	f7fd feaa 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80032f4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80032f8:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80032fc:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
 8003300:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
 8003304:	4618      	mov	r0, r3
 8003306:	ee09 3a90 	vmov	s19, r3
 800330a:	f010 f9bd 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800330e:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8003312:	4618      	mov	r0, r3
 8003314:	f504 77d6 	add.w	r7, r4, #428	; 0x1ac
 8003318:	ee08 3a90 	vmov	s17, r3
 800331c:	f7ff fa50 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003320:	4638      	mov	r0, r7
 8003322:	f00e ff39 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8003326:	f504 7307 	add.w	r3, r4, #540	; 0x21c
 800332a:	4618      	mov	r0, r3
 800332c:	9303      	str	r3, [sp, #12]
 800332e:	f7fd fe8b 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003332:	f504 730c 	add.w	r3, r4, #560	; 0x230
 8003336:	4618      	mov	r0, r3
 8003338:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
 800333c:	f8c4 621c 	str.w	r6, [r4, #540]	; 0x21c
 8003340:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
 8003344:	f504 7b1e 	add.w	fp, r4, #632	; 0x278
 8003348:	ee09 3a10 	vmov	s18, r3
 800334c:	f504 7530 	add.w	r5, r4, #704	; 0x2c0
 8003350:	f7ff fa36 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003354:	4658      	mov	r0, fp
 8003356:	f7ff fa33 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800335a:	4628      	mov	r0, r5
 800335c:	f00c ffc8 	bl	80102f0 <_ZN8touchgfx10ScrollListC1Ev>
 8003360:	f504 7361 	add.w	r3, r4, #900	; 0x384
 8003364:	ee0a 3a10 	vmov	s20, r3
class DrawableListItems : public DrawableListItemsInterface
 8003368:	4bb2      	ldr	r3, [pc, #712]	; (8003634 <_ZN23Calibration_PadViewBaseC1Ev+0x3d0>)
 800336a:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
 800336e:	f504 7662 	add.w	r6, r4, #904	; 0x388
 8003372:	f204 790c 	addw	r9, r4, #1804	; 0x70c
 8003376:	4630      	mov	r0, r6
 8003378:	36b4      	adds	r6, #180	; 0xb4
 800337a:	f005 f87d 	bl	8008478 <_ZN23Configuration_ContainerC1Ev>
 800337e:	454e      	cmp	r6, r9
 8003380:	d1f9      	bne.n	8003376 <_ZN23Calibration_PadViewBaseC1Ev+0x112>
        : pobject(pObject), pmemfun(pmemfun_3)
 8003382:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003386:	4aac      	ldr	r2, [pc, #688]	; (8003638 <_ZN23Calibration_PadViewBaseC1Ev+0x3d4>)
 8003388:	f8c3 251c 	str.w	r2, [r3, #1308]	; 0x51c
 800338c:	4aab      	ldr	r2, [pc, #684]	; (800363c <_ZN23Calibration_PadViewBaseC1Ev+0x3d8>)
 800338e:	f8c3 2524 	str.w	r2, [r3, #1316]	; 0x524
        : pobject(pObject), pmemfun(pmemfun_1)
 8003392:	4aab      	ldr	r2, [pc, #684]	; (8003640 <_ZN23Calibration_PadViewBaseC1Ev+0x3dc>)
 8003394:	f8c3 252c 	str.w	r2, [r3, #1324]	; 0x52c
        : pobject(pObject), pmemfun(pmemfun_3)
 8003398:	f04f 0900 	mov.w	r9, #0
        : pobject(pObject), pmemfun(pmemfun_1)
 800339c:	4aa9      	ldr	r2, [pc, #676]	; (8003644 <_ZN23Calibration_PadViewBaseC1Ev+0x3e0>)
 800339e:	f8c3 2534 	str.w	r2, [r3, #1332]	; 0x534
        : pobject(pObject), pmemfun(pmemfun_3)
 80033a2:	f8c3 4520 	str.w	r4, [r3, #1312]	; 0x520
 80033a6:	f8c3 9528 	str.w	r9, [r3, #1320]	; 0x528
        : pobject(pObject), pmemfun(pmemfun_1)
 80033aa:	f8c3 4530 	str.w	r4, [r3, #1328]	; 0x530
 80033ae:	f8c3 9538 	str.w	r9, [r3, #1336]	; 0x538
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80033b2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80033b6:	f204 700c 	addw	r0, r4, #1804	; 0x70c
 80033ba:	f011 f821 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80033be:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80033c2:	464a      	mov	r2, r9
 80033c4:	ee18 0a10 	vmov	r0, s16
 80033c8:	9300      	str	r3, [sp, #0]
 80033ca:	4649      	mov	r1, r9
 80033cc:	23f0      	movs	r3, #240	; 0xf0
 80033ce:	f7ff f9d1 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033d2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80033d4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80033d8:	66a3      	str	r3, [r4, #104]	; 0x68
 80033da:	ee18 1a10 	vmov	r1, s16
 80033de:	4630      	mov	r0, r6
 80033e0:	f00d fa81 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80033e4:	464a      	mov	r2, r9
 80033e6:	4649      	mov	r1, r9
 80033e8:	4650      	mov	r0, sl
 80033ea:	f7ff f9b6 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80033ee:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80033f0:	a90a      	add	r1, sp, #40	; 0x28
 80033f2:	4650      	mov	r0, sl
 80033f4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80033f8:	f010 f805 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80033fc:	4651      	mov	r1, sl
 80033fe:	4630      	mov	r0, r6
 8003400:	f00d fa71 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 50, 240, 10);
 8003404:	230a      	movs	r3, #10
 8003406:	9300      	str	r3, [sp, #0]
 8003408:	2232      	movs	r2, #50	; 0x32
 800340a:	23f0      	movs	r3, #240	; 0xf0
 800340c:	4649      	mov	r1, r9
 800340e:	4640      	mov	r0, r8
 8003410:	f7ff f9b0 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003414:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003418:	22a0      	movs	r2, #160	; 0xa0
 800341a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800341e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8003422:	9b02      	ldr	r3, [sp, #8]
 8003424:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003428:	4611      	mov	r1, r2
 800342a:	4640      	mov	r0, r8
 800342c:	f00e ffca 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003430:	22a0      	movs	r2, #160	; 0xa0
 8003432:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003436:	4640      	mov	r0, r8
 8003438:	f00e ffcf 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800343c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8003440:	2b20      	cmp	r3, #32
 8003442:	d005      	beq.n	8003450 <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>
        lineWidthQ5 = widthQ5;
 8003444:	2320      	movs	r3, #32
 8003446:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800344a:	4640      	mov	r0, r8
 800344c:	f00e fec4 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003450:	4640      	mov	r0, r8
 8003452:	2101      	movs	r1, #1
 8003454:	f00e ffcc 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003458:	4641      	mov	r1, r8
 800345a:	4630      	mov	r0, r6
 800345c:	f00d fa43 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003460:	ee19 0a90 	vmov	r0, s19
 8003464:	f240 1201 	movw	r2, #257	; 0x101
 8003468:	2121      	movs	r1, #33	; 0x21
 800346a:	f7ff f976 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800346e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003470:	aa0a      	add	r2, sp, #40	; 0x28
 8003472:	a909      	add	r1, sp, #36	; 0x24
 8003474:	ee19 0a90 	vmov	r0, s19
 8003478:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800347c:	2302      	movs	r3, #2
 800347e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003482:	f00f fdca 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003486:	2310      	movs	r3, #16
        updateTextPosition();
 8003488:	ee19 0a90 	vmov	r0, s19
 800348c:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 8003490:	f7ff f9b8 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003494:	f504 53a9 	add.w	r3, r4, #5408	; 0x1520
 8003498:	330c      	adds	r3, #12
        color = col;
 800349a:	f04f 38ff 	mov.w	r8, #4294967295
 800349e:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 80034a2:	ee19 1a90 	vmov	r1, s19
 80034a6:	4630      	mov	r0, r6
        colorPressed = col;
 80034a8:	e9c4 8856 	strd	r8, r8, [r4, #344]	; 0x158
 80034ac:	f00d fa1b 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80034b0:	f04f 0900 	mov.w	r9, #0
    textArea3.setXY(58, 60);
 80034b4:	223c      	movs	r2, #60	; 0x3c
 80034b6:	ee18 0a90 	vmov	r0, s17
 80034ba:	213a      	movs	r1, #58	; 0x3a
        boundingArea = calculateBoundingArea();
 80034bc:	f10d 0a10 	add.w	sl, sp, #16
 80034c0:	f7ff f94b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80034c4:	ee18 1a90 	vmov	r1, s17
 80034c8:	4650      	mov	r0, sl
        color = newColor;
 80034ca:	f8c4 8194 	str.w	r8, [r4, #404]	; 0x194
        linespace = space;
 80034ce:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80034d2:	f00f f923 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80034d6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80034da:	ee18 3a90 	vmov	r3, s17
 80034de:	333c      	adds	r3, #60	; 0x3c
 80034e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80034e4:	4b58      	ldr	r3, [pc, #352]	; (8003648 <_ZN23Calibration_PadViewBaseC1Ev+0x3e4>)
 80034e6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80034e8:	ee18 0a90 	vmov	r0, s17
 80034ec:	230f      	movs	r3, #15
 80034ee:	a90a      	add	r1, sp, #40	; 0x28
 80034f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034f4:	f00f fbac 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034f8:	ee18 1a90 	vmov	r1, s17
 80034fc:	4630      	mov	r0, r6
 80034fe:	f00d f9f2 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 75, 240, 10);
 8003502:	230a      	movs	r3, #10
 8003504:	9300      	str	r3, [sp, #0]
 8003506:	224b      	movs	r2, #75	; 0x4b
 8003508:	23f0      	movs	r3, #240	; 0xf0
 800350a:	4649      	mov	r1, r9
 800350c:	4638      	mov	r0, r7
 800350e:	f7ff f931 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003512:	9b03      	ldr	r3, [sp, #12]
 8003514:	f8c4 31d4 	str.w	r3, [r4, #468]	; 0x1d4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003518:	22a0      	movs	r2, #160	; 0xa0
 800351a:	4611      	mov	r1, r2
 800351c:	4638      	mov	r0, r7
 800351e:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
 8003522:	f8a4 822c 	strh.w	r8, [r4, #556]	; 0x22c
 8003526:	f00e ff4d 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800352a:	22a0      	movs	r2, #160	; 0xa0
 800352c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003530:	4638      	mov	r0, r7
 8003532:	f00e ff52 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003536:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800353a:	2b20      	cmp	r3, #32
 800353c:	d005      	beq.n	800354a <_ZN23Calibration_PadViewBaseC1Ev+0x2e6>
        lineWidthQ5 = widthQ5;
 800353e:	2320      	movs	r3, #32
 8003540:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
        updateCachedShape();
 8003544:	4638      	mov	r0, r7
 8003546:	f00e fe47 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800354a:	4638      	mov	r0, r7
 800354c:	2101      	movs	r1, #1
 800354e:	f00e ff4f 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003552:	4639      	mov	r1, r7
 8003554:	4630      	mov	r0, r6
        linespace = space;
 8003556:	f04f 0800 	mov.w	r8, #0
 800355a:	f00d f9c4 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 800355e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8003560:	ee19 0a10 	vmov	r0, s18
 8003564:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003566:	f04f 3aff 	mov.w	sl, #4294967295
 800356a:	2145      	movs	r1, #69	; 0x45
 800356c:	f7ff f8f5 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003570:	ee19 1a10 	vmov	r1, s18
 8003574:	4638      	mov	r0, r7
        color = newColor;
 8003576:	f8c4 a260 	str.w	sl, [r4, #608]	; 0x260
        linespace = space;
 800357a:	f8a4 8264 	strh.w	r8, [r4, #612]	; 0x264
        boundingArea = calculateBoundingArea();
 800357e:	f00f f8cd 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003582:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003586:	ee19 3a10 	vmov	r3, s18
 800358a:	333c      	adds	r3, #60	; 0x3c
 800358c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003590:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 8003648 <_ZN23Calibration_PadViewBaseC1Ev+0x3e4>
 8003594:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003598:	2311      	movs	r3, #17
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800359a:	ee19 0a10 	vmov	r0, s18
 800359e:	a90a      	add	r1, sp, #40	; 0x28
 80035a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035a4:	f00f fb54 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035a8:	ee19 1a10 	vmov	r1, s18
 80035ac:	4630      	mov	r0, r6
 80035ae:	f00d f99a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80035b2:	220c      	movs	r2, #12
 80035b4:	4658      	mov	r0, fp
 80035b6:	2136      	movs	r1, #54	; 0x36
 80035b8:	f7ff f8cf 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80035bc:	4659      	mov	r1, fp
 80035be:	4638      	mov	r0, r7
        color = newColor;
 80035c0:	f8c4 a2a8 	str.w	sl, [r4, #680]	; 0x2a8
        linespace = space;
 80035c4:	f8a4 82ac 	strh.w	r8, [r4, #684]	; 0x2ac
        boundingArea = calculateBoundingArea();
 80035c8:	f00f f8a8 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035cc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80035d0:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80035d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035d8:	2312      	movs	r3, #18
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80035da:	a90a      	add	r1, sp, #40	; 0x28
 80035dc:	4658      	mov	r0, fp
 80035de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035e2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80035e6:	f00f fb33 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035ea:	4659      	mov	r1, fp
 80035ec:	4630      	mov	r0, r6
 80035ee:	f00d f97a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scrollList1.setPosition(0, 88, 240, 161);
 80035f2:	23a1      	movs	r3, #161	; 0xa1
 80035f4:	2258      	movs	r2, #88	; 0x58
 80035f6:	9300      	str	r3, [sp, #0]
 80035f8:	4641      	mov	r1, r8
 80035fa:	23f0      	movs	r3, #240	; 0xf0
 80035fc:	4628      	mov	r0, r5
 80035fe:	f7ff f8b9 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollList1.setHorizontal(false);
 8003602:	4641      	mov	r1, r8
 8003604:	4628      	mov	r0, r5
 8003606:	f00d f8f2 	bl	80107ee <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList1.setCircular(true);
 800360a:	4628      	mov	r0, r5
 800360c:	2101      	movs	r1, #1
 800360e:	f00d f949 	bl	80108a4 <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 8003612:	4628      	mov	r0, r5
 8003614:	490d      	ldr	r1, [pc, #52]	; (800364c <_ZN23Calibration_PadViewBaseC1Ev+0x3e8>)
 8003616:	f00d f82a 	bl	801066e <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList1.setSwipeAcceleration(10);
 800361a:	4628      	mov	r0, r5
 800361c:	210a      	movs	r1, #10
 800361e:	f00d f829 	bl	8010674 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
 8003622:	e015      	b.n	8003650 <_ZN23Calibration_PadViewBaseC1Ev+0x3ec>
 8003624:	0802ca68 	.word	0x0802ca68
 8003628:	0802f4d4 	.word	0x0802f4d4
 800362c:	0802f69c 	.word	0x0802f69c
 8003630:	0802f208 	.word	0x0802f208
 8003634:	0802ca20 	.word	0x0802ca20
 8003638:	0802ca38 	.word	0x0802ca38
 800363c:	08003225 	.word	0x08003225
 8003640:	0802ca50 	.word	0x0802ca50
 8003644:	0800320d 	.word	0x0800320d
 8003648:	0802c760 	.word	0x0802c760
 800364c:	08017a7d 	.word	0x08017a7d
    scrollList1.setDragAcceleration(10);
 8003650:	4628      	mov	r0, r5
 8003652:	210a      	movs	r1, #10
 8003654:	f00d f811 	bl	801067a <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList1.setNumberOfItems(7);
 8003658:	4628      	mov	r0, r5
 800365a:	2107      	movs	r1, #7
 800365c:	f00c ff87 	bl	801056e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    scrollList1.setPadding(0, 0);
 8003660:	4642      	mov	r2, r8
 8003662:	4641      	mov	r1, r8
 8003664:	4628      	mov	r0, r5
 8003666:	f00c fec2 	bl	80103ee <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList1.setSnapping(true);
 800366a:	4628      	mov	r0, r5
 800366c:	2101      	movs	r1, #1
 800366e:	f00c fed6 	bl	801041e <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList1.setDrawableSize(40, 0);
 8003672:	4642      	mov	r2, r8
 8003674:	4628      	mov	r0, r5
 8003676:	2128      	movs	r1, #40	; 0x28
 8003678:	f00c fe9c 	bl	80103b4 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
 800367c:	f504 52a8 	add.w	r2, r4, #5376	; 0x1500
 8003680:	ee1a 1a10 	vmov	r1, s20
 8003684:	321c      	adds	r2, #28
 8003686:	4628      	mov	r0, r5
 8003688:	f00c fd67 	bl	801015a <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
 800368c:	4630      	mov	r0, r6
 800368e:	4629      	mov	r1, r5
 8003690:	f00d f929 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003694:	4620      	mov	r0, r4
 8003696:	b00d      	add	sp, #52	; 0x34
 8003698:	ecbd 8b06 	vpop	{d8-d10}
 800369c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080036a0 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80036a0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80036a2:	4770      	bx	lr

080036a4 <_ZN27Configuration_ContainerBaseD1Ev>:
}

Configuration_ContainerBase::~Configuration_ContainerBase()
{

}
 80036a4:	4770      	bx	lr

080036a6 <_ZN27Configuration_ContainerBase10initializeEv>:

void Configuration_ContainerBase::initialize()
{

}
 80036a6:	4770      	bx	lr

080036a8 <_ZN27Configuration_ContainerBaseD0Ev>:
Configuration_ContainerBase::~Configuration_ContainerBase()
 80036a8:	b510      	push	{r4, lr}
}
 80036aa:	21b4      	movs	r1, #180	; 0xb4
Configuration_ContainerBase::~Configuration_ContainerBase()
 80036ac:	4604      	mov	r4, r0
}
 80036ae:	f026 fc68 	bl	8029f82 <_ZdlPvj>
 80036b2:	4620      	mov	r0, r4
 80036b4:	bd10      	pop	{r4, pc}
	...

080036b8 <_ZN27Configuration_ContainerBaseC1Ev>:
Configuration_ContainerBase::Configuration_ContainerBase()
 80036b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80036bc:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 80036be:	2500      	movs	r5, #0
 80036c0:	4a3e      	ldr	r2, [pc, #248]	; (80037bc <_ZN27Configuration_ContainerBaseC1Ev+0x104>)
          firstChild(0)
 80036c2:	6285      	str	r5, [r0, #40]	; 0x28
 80036c4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80036c8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80036cc:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 80036d0:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 80036d4:	e9c0 5507 	strd	r5, r5, [r0, #28]
          touchable(false),
 80036d8:	8483      	strh	r3, [r0, #36]	; 0x24
 80036da:	f846 2b2c 	str.w	r2, [r6], #44
 80036de:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 80036e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80036e6:	f8a0 3058 	strh.w	r3, [r0, #88]	; 0x58
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80036ea:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80036ee:	f100 0778 	add.w	r7, r0, #120	; 0x78
 80036f2:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 80037c8 <_ZN27Configuration_ContainerBaseC1Ev+0x110>
 80036f6:	6603      	str	r3, [r0, #96]	; 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80036f8:	f04f 38ff 	mov.w	r8, #4294967295
        : TextAreaWithWildcardBase(), wc1(0)
 80036fc:	4b30      	ldr	r3, [pc, #192]	; (80037c0 <_ZN27Configuration_ContainerBaseC1Ev+0x108>)
 80036fe:	f8c0 9054 	str.w	r9, [r0, #84]	; 0x54
 8003702:	b08d      	sub	sp, #52	; 0x34
 8003704:	4604      	mov	r4, r0
              text(0)
 8003706:	e9c0 851b 	strd	r8, r5, [r0, #108]	; 0x6c
        : x(0), y(0), width(0), height(0)
 800370a:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 800370e:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
          nextSibling(0),
 8003712:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
          cachedAbsX(0),
 8003716:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
        : color(col)
 800371a:	65c5      	str	r5, [r0, #92]	; 0x5c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800371c:	f8a0 5064 	strh.w	r5, [r0, #100]	; 0x64
 8003720:	62c3      	str	r3, [r0, #44]	; 0x2c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003722:	6685      	str	r5, [r0, #104]	; 0x68
 8003724:	6745      	str	r5, [r0, #116]	; 0x74
 8003726:	4638      	mov	r0, r7
 8003728:	f00f fe46 	bl	80133b8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        rect.width = width;
 800372c:	4b25      	ldr	r3, [pc, #148]	; (80037c4 <_ZN27Configuration_ContainerBaseC1Ev+0x10c>)
 800372e:	60a3      	str	r3, [r4, #8]
    textArea1.setXY(10, 9);
 8003730:	2209      	movs	r2, #9
 8003732:	4630      	mov	r0, r6
 8003734:	210a      	movs	r1, #10
 8003736:	f7ff f810 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800373a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        color = newColor;
 800373c:	f8c4 805c 	str.w	r8, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8003740:	f10d 0808 	add.w	r8, sp, #8
 8003744:	4631      	mov	r1, r6
 8003746:	4640      	mov	r0, r8
 8003748:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800374c:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8003750:	4798      	blx	r3
 8003752:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003756:	f104 0368 	add.w	r3, r4, #104	; 0x68
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JIZ9));
 800375a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 800375e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003762:	4641      	mov	r1, r8
 8003764:	4630      	mov	r0, r6
 8003766:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800376a:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800376e:	f00f fa6f 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8003772:	4631      	mov	r1, r6
 8003774:	4620      	mov	r0, r4
 8003776:	f00d f8b6 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 2);
 800377a:	4638      	mov	r0, r7
 800377c:	2202      	movs	r2, #2
 800377e:	21c6      	movs	r1, #198	; 0xc6
 8003780:	f7fe ffeb 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8003784:	2301      	movs	r3, #1
 8003786:	f8ad 3020 	strh.w	r3, [sp, #32]
 800378a:	230a      	movs	r3, #10
 800378c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003790:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003794:	aa08      	add	r2, sp, #32
 8003796:	ab09      	add	r3, sp, #36	; 0x24
 8003798:	a907      	add	r1, sp, #28
 800379a:	4638      	mov	r0, r7
 800379c:	f8cd 8000 	str.w	r8, [sp]
 80037a0:	f8ad 501c 	strh.w	r5, [sp, #28]
 80037a4:	f00f fd73 	bl	801328e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    add(buttonWithIcon1);
 80037a8:	4620      	mov	r0, r4
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80037aa:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 80037ae:	4639      	mov	r1, r7
 80037b0:	f00d f899 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80037b4:	4620      	mov	r0, r4
 80037b6:	b00d      	add	sp, #52	; 0x34
 80037b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80037bc:	0802caa0 	.word	0x0802caa0
 80037c0:	0802c770 	.word	0x0802c770
 80037c4:	002800f0 	.word	0x002800f0
 80037c8:	0802c760 	.word	0x0802c760

080037cc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80037cc:	4770      	bx	lr

080037ce <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80037ce:	4770      	bx	lr

080037d0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80037d0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80037d4:	6808      	ldr	r0, [r1, #0]
 80037d6:	6849      	ldr	r1, [r1, #4]
 80037d8:	c303      	stmia	r3!, {r0, r1}
    }
 80037da:	4770      	bx	lr

080037dc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80037dc:	4770      	bx	lr

080037de <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80037de:	4770      	bx	lr

080037e0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80037e0:	6041      	str	r1, [r0, #4]
    }
 80037e2:	4770      	bx	lr

080037e4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80037e4:	b510      	push	{r4, lr}
 80037e6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80037e8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80037ec:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80037f0:	8002      	strh	r2, [r0, #0]
 80037f2:	8042      	strh	r2, [r0, #2]
 80037f4:	8084      	strh	r4, [r0, #4]
 80037f6:	80c1      	strh	r1, [r0, #6]
        }
 80037f8:	bd10      	pop	{r4, pc}

080037fa <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80037fa:	4770      	bx	lr

080037fc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80037fc:	4770      	bx	lr
	...

08003800 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003800:	4b06      	ldr	r3, [pc, #24]	; (800381c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003802:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003806:	2300      	movs	r3, #0
 8003808:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800380c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003810:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003814:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003818:	4770      	bx	lr
 800381a:	bf00      	nop
 800381c:	08003bbd 	.word	0x08003bbd

08003820 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003820:	2301      	movs	r3, #1
 8003822:	7203      	strb	r3, [r0, #8]
    }
 8003824:	4770      	bx	lr

08003826 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003826:	4770      	bx	lr

08003828 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003828:	4770      	bx	lr

0800382a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800382a:	4770      	bx	lr

0800382c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800382c:	4770      	bx	lr

0800382e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800382e:	4770      	bx	lr

08003830 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003830:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003832:	6840      	ldr	r0, [r0, #4]
 8003834:	6803      	ldr	r3, [r0, #0]
 8003836:	3110      	adds	r1, #16
 8003838:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800383a:	4718      	bx	r3

0800383c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800383c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800383e:	6840      	ldr	r0, [r0, #4]
 8003840:	6803      	ldr	r3, [r0, #0]
 8003842:	3110      	adds	r1, #16
 8003844:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003846:	4718      	bx	r3

08003848 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003848:	4770      	bx	lr

0800384a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800384a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800384c:	6840      	ldr	r0, [r0, #4]
 800384e:	6803      	ldr	r3, [r0, #0]
 8003850:	3110      	adds	r1, #16
 8003852:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003854:	4718      	bx	r3

08003856 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003856:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003858:	6840      	ldr	r0, [r0, #4]
 800385a:	6803      	ldr	r3, [r0, #0]
 800385c:	3110      	adds	r1, #16
 800385e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003860:	4718      	bx	r3

08003862 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003862:	4770      	bx	lr

08003864 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003864:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003866:	68c2      	ldr	r2, [r0, #12]
 8003868:	6841      	ldr	r1, [r0, #4]
 800386a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800386c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800386e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003872:	07d2      	lsls	r2, r2, #31
 8003874:	bf48      	it	mi
 8003876:	590a      	ldrmi	r2, [r1, r4]
 8003878:	689b      	ldr	r3, [r3, #8]
    }
 800387a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800387e:	bf48      	it	mi
 8003880:	58d3      	ldrmi	r3, [r2, r3]
 8003882:	4718      	bx	r3

08003884 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003884:	6843      	ldr	r3, [r0, #4]
 8003886:	b12b      	cbz	r3, 8003894 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003888:	6883      	ldr	r3, [r0, #8]
 800388a:	b92b      	cbnz	r3, 8003898 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800388c:	68c0      	ldr	r0, [r0, #12]
 800388e:	f000 0001 	and.w	r0, r0, #1
 8003892:	4770      	bx	lr
 8003894:	4618      	mov	r0, r3
 8003896:	4770      	bx	lr
 8003898:	2001      	movs	r0, #1
    }
 800389a:	4770      	bx	lr

0800389c <_ZN8touchgfx12NoTransitionD0Ev>:
 800389c:	b510      	push	{r4, lr}
 800389e:	210c      	movs	r1, #12
 80038a0:	4604      	mov	r4, r0
 80038a2:	f026 fb6e 	bl	8029f82 <_ZdlPvj>
 80038a6:	4620      	mov	r0, r4
 80038a8:	bd10      	pop	{r4, pc}

080038aa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80038aa:	b510      	push	{r4, lr}
 80038ac:	2110      	movs	r1, #16
 80038ae:	4604      	mov	r4, r0
 80038b0:	f026 fb67 	bl	8029f82 <_ZdlPvj>
 80038b4:	4620      	mov	r0, r4
 80038b6:	bd10      	pop	{r4, pc}

080038b8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80038b8:	b510      	push	{r4, lr}
 80038ba:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80038be:	4604      	mov	r4, r0
 80038c0:	f026 fb5f 	bl	8029f82 <_ZdlPvj>
 80038c4:	4620      	mov	r0, r4
 80038c6:	bd10      	pop	{r4, pc}

080038c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80038c8:	b510      	push	{r4, lr}
 80038ca:	2138      	movs	r1, #56	; 0x38
 80038cc:	4604      	mov	r4, r0
 80038ce:	f026 fb58 	bl	8029f82 <_ZdlPvj>
 80038d2:	4620      	mov	r0, r4
 80038d4:	bd10      	pop	{r4, pc}

080038d6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80038d6:	b510      	push	{r4, lr}
 80038d8:	2128      	movs	r1, #40	; 0x28
 80038da:	4604      	mov	r4, r0
 80038dc:	f026 fb51 	bl	8029f82 <_ZdlPvj>
 80038e0:	4620      	mov	r0, r4
 80038e2:	bd10      	pop	{r4, pc}

080038e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80038e4:	b510      	push	{r4, lr}
 80038e6:	2138      	movs	r1, #56	; 0x38
 80038e8:	4604      	mov	r4, r0
 80038ea:	f026 fb4a 	bl	8029f82 <_ZdlPvj>
 80038ee:	4620      	mov	r0, r4
 80038f0:	bd10      	pop	{r4, pc}

080038f2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80038f2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80038f4:	f012 fa90 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 80038f8:	6803      	ldr	r3, [r0, #0]
    }
 80038fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80038fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003900:	4718      	bx	r3
	...

08003904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003904:	b513      	push	{r0, r1, r4, lr}
 8003906:	4604      	mov	r4, r0
        animationCounter++;
 8003908:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800390a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800390c:	3001      	adds	r0, #1
 800390e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003910:	4298      	cmp	r0, r3
        animationCounter++;
 8003912:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003914:	d905      	bls.n	8003922 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003916:	2301      	movs	r3, #1
 8003918:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800391a:	2300      	movs	r3, #0
 800391c:	72a3      	strb	r3, [r4, #10]
    }
 800391e:	b002      	add	sp, #8
 8003920:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003922:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003926:	2100      	movs	r1, #0
 8003928:	f014 f8e6 	bl	8017af8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800392c:	f010 0201 	ands.w	r2, r0, #1
 8003930:	b283      	uxth	r3, r0
 8003932:	d12a      	bne.n	800398a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003934:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003936:	4a19      	ldr	r2, [pc, #100]	; (800399c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003938:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800393c:	89e3      	ldrh	r3, [r4, #14]
 800393e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003940:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003944:	82a0      	strh	r0, [r4, #20]
 8003946:	2000      	movs	r0, #0
 8003948:	1ad2      	subs	r2, r2, r3
 800394a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800394e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003950:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003952:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003954:	4a12      	ldr	r2, [pc, #72]	; (80039a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003956:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800395a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800395c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003960:	691b      	ldr	r3, [r3, #16]
 8003962:	f8ad 1000 	strh.w	r1, [sp]
 8003966:	f8ad 2006 	strh.w	r2, [sp, #6]
 800396a:	4669      	mov	r1, sp
 800396c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800396e:	7aa3      	ldrb	r3, [r4, #10]
 8003970:	2b01      	cmp	r3, #1
 8003972:	d1d4      	bne.n	800391e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003974:	4b0b      	ldr	r3, [pc, #44]	; (80039a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003976:	781b      	ldrb	r3, [r3, #0]
 8003978:	2b00      	cmp	r3, #0
 800397a:	d0d0      	beq.n	800391e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800397c:	f012 fa4c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003980:	b002      	add	sp, #8
 8003982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003986:	f012 ba4d 	b.w	8015e24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800398a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800398e:	2800      	cmp	r0, #0
 8003990:	bfd8      	it	le
 8003992:	460a      	movle	r2, r1
 8003994:	4413      	add	r3, r2
 8003996:	81e3      	strh	r3, [r4, #14]
 8003998:	e7cd      	b.n	8003936 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800399a:	bf00      	nop
 800399c:	20012fb8 	.word	0x20012fb8
 80039a0:	20012fba 	.word	0x20012fba
 80039a4:	20012fc2 	.word	0x20012fc2

080039a8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80039a8:	b510      	push	{r4, lr}
 80039aa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80039ac:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80039b0:	b158      	cbz	r0, 80039ca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80039b2:	6803      	ldr	r3, [r0, #0]
 80039b4:	68db      	ldr	r3, [r3, #12]
 80039b6:	4798      	blx	r3
 80039b8:	b138      	cbz	r0, 80039ca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80039ba:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80039be:	6803      	ldr	r3, [r0, #0]
 80039c0:	689b      	ldr	r3, [r3, #8]
 80039c2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80039c4:	2300      	movs	r3, #0
 80039c6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80039ca:	bd10      	pop	{r4, pc}

080039cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80039cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80039d4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039d6:	68a8      	ldr	r0, [r5, #8]
 80039d8:	6803      	ldr	r3, [r0, #0]
 80039da:	6a1b      	ldr	r3, [r3, #32]
 80039dc:	4798      	blx	r3
 80039de:	2897      	cmp	r0, #151	; 0x97
 80039e0:	d805      	bhi.n	80039ee <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80039e2:	4b46      	ldr	r3, [pc, #280]	; (8003afc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80039e4:	4a46      	ldr	r2, [pc, #280]	; (8003b00 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80039e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80039e8:	4846      	ldr	r0, [pc, #280]	; (8003b04 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80039ea:	f027 f8dd 	bl	802aba8 <__assert_func>
 80039ee:	6868      	ldr	r0, [r5, #4]
 80039f0:	6803      	ldr	r3, [r0, #0]
 80039f2:	6a1b      	ldr	r3, [r3, #32]
 80039f4:	4798      	blx	r3
 80039f6:	280f      	cmp	r0, #15
 80039f8:	d803      	bhi.n	8003a02 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80039fa:	4b43      	ldr	r3, [pc, #268]	; (8003b08 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80039fc:	4a40      	ldr	r2, [pc, #256]	; (8003b00 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80039fe:	21a4      	movs	r1, #164	; 0xa4
 8003a00:	e7f2      	b.n	80039e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a02:	68e8      	ldr	r0, [r5, #12]
 8003a04:	6803      	ldr	r3, [r0, #0]
 8003a06:	6a1b      	ldr	r3, [r3, #32]
 8003a08:	4798      	blx	r3
 8003a0a:	280b      	cmp	r0, #11
 8003a0c:	d803      	bhi.n	8003a16 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003a0e:	4b3f      	ldr	r3, [pc, #252]	; (8003b0c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003a10:	4a3b      	ldr	r2, [pc, #236]	; (8003b00 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003a12:	21a5      	movs	r1, #165	; 0xa5
 8003a14:	e7e8      	b.n	80039e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003a16:	f012 f9ff 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a1a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003b14 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003a1e:	3004      	adds	r0, #4
 8003a20:	f012 fa60 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a24:	f8d9 0000 	ldr.w	r0, [r9]
 8003a28:	b110      	cbz	r0, 8003a30 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003a2a:	6803      	ldr	r3, [r0, #0]
 8003a2c:	68db      	ldr	r3, [r3, #12]
 8003a2e:	4798      	blx	r3
    if (*currentTrans)
 8003a30:	f8d9 0000 	ldr.w	r0, [r9]
 8003a34:	b110      	cbz	r0, 8003a3c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003a36:	6803      	ldr	r3, [r0, #0]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	4798      	blx	r3
    if (*currentScreen)
 8003a3c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003b18 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003a40:	f8d8 0000 	ldr.w	r0, [r8]
 8003a44:	b110      	cbz	r0, 8003a4c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	695b      	ldr	r3, [r3, #20]
 8003a4a:	4798      	blx	r3
    if (*currentPresenter)
 8003a4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a50:	b110      	cbz	r0, 8003a58 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003a52:	6803      	ldr	r3, [r0, #0]
 8003a54:	685b      	ldr	r3, [r3, #4]
 8003a56:	4798      	blx	r3
    if (*currentScreen)
 8003a58:	f8d8 0000 	ldr.w	r0, [r8]
 8003a5c:	b110      	cbz	r0, 8003a64 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003a5e:	6803      	ldr	r3, [r0, #0]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	4798      	blx	r3
    if (*currentPresenter)
 8003a64:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a68:	b110      	cbz	r0, 8003a70 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003a6a:	6803      	ldr	r3, [r0, #0]
 8003a6c:	689b      	ldr	r3, [r3, #8]
 8003a6e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a70:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003a72:	6803      	ldr	r3, [r0, #0]
 8003a74:	2100      	movs	r1, #0
 8003a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a78:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003a7a:	f04f 0b00 	mov.w	fp, #0
 8003a7e:	4b24      	ldr	r3, [pc, #144]	; (8003b10 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003a80:	6003      	str	r3, [r0, #0]
 8003a82:	4604      	mov	r4, r0
 8003a84:	f8c0 b004 	str.w	fp, [r0, #4]
 8003a88:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a8c:	68a8      	ldr	r0, [r5, #8]
 8003a8e:	6803      	ldr	r3, [r0, #0]
 8003a90:	4659      	mov	r1, fp
 8003a92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a94:	4798      	blx	r3
 8003a96:	4606      	mov	r6, r0
 8003a98:	f005 f8b0 	bl	8008bfc <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003a9c:	6868      	ldr	r0, [r5, #4]
 8003a9e:	6803      	ldr	r3, [r0, #0]
 8003aa0:	4659      	mov	r1, fp
 8003aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa4:	4798      	blx	r3
 8003aa6:	4631      	mov	r1, r6
 8003aa8:	4605      	mov	r5, r0
 8003aaa:	f005 f883 	bl	8008bb4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8003aae:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ab2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ab6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003aba:	b1e5      	cbz	r5, 8003af6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003abc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003abe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ac2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003ac4:	f8c5 a008 	str.w	sl, [r5, #8]
 8003ac8:	4630      	mov	r0, r6
 8003aca:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003acc:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003ace:	4798      	blx	r3
    newPresenter->activate();
 8003ad0:	682b      	ldr	r3, [r5, #0]
 8003ad2:	4628      	mov	r0, r5
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ad8:	4621      	mov	r1, r4
 8003ada:	4630      	mov	r0, r6
 8003adc:	f013 ffc8 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003ae0:	6823      	ldr	r3, [r4, #0]
 8003ae2:	4620      	mov	r0, r4
 8003ae4:	691b      	ldr	r3, [r3, #16]
 8003ae6:	4798      	blx	r3
    newTransition->invalidate();
 8003ae8:	6823      	ldr	r3, [r4, #0]
 8003aea:	695b      	ldr	r3, [r3, #20]
 8003aec:	4620      	mov	r0, r4
}
 8003aee:	b001      	add	sp, #4
 8003af0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af4:	4718      	bx	r3
    model->bind(newPresenter);
 8003af6:	462b      	mov	r3, r5
 8003af8:	e7e1      	b.n	8003abe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003afa:	bf00      	nop
 8003afc:	0802cb2c 	.word	0x0802cb2c
 8003b00:	0802cbba 	.word	0x0802cbba
 8003b04:	0802ccc8 	.word	0x0802ccc8
 8003b08:	0802cd0f 	.word	0x0802cd0f
 8003b0c:	0802cdb2 	.word	0x0802cdb2
 8003b10:	0802e1d0 	.word	0x0802e1d0
 8003b14:	2001300c 	.word	0x2001300c
 8003b18:	20013008 	.word	0x20013008

08003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003b1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003b1e:	4604      	mov	r4, r0
        animationCounter++;
 8003b20:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003b22:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003b24:	3001      	adds	r0, #1
 8003b26:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003b28:	4298      	cmp	r0, r3
        animationCounter++;
 8003b2a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003b2c:	d905      	bls.n	8003b3a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003b2e:	2301      	movs	r3, #1
 8003b30:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003b32:	2300      	movs	r3, #0
 8003b34:	72a3      	strb	r3, [r4, #10]
    }
 8003b36:	b003      	add	sp, #12
 8003b38:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003b3a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003b3e:	2100      	movs	r1, #0
 8003b40:	f013 ffda 	bl	8017af8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003b44:	f010 0201 	ands.w	r2, r0, #1
 8003b48:	b283      	uxth	r3, r0
 8003b4a:	d128      	bne.n	8003b9e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003b4c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b4e:	4b18      	ldr	r3, [pc, #96]	; (8003bb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003b50:	4818      	ldr	r0, [pc, #96]	; (8003bb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b52:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003b54:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b56:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003b58:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003b5c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b60:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003b62:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003b64:	442b      	add	r3, r5
 8003b66:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003b68:	b212      	sxth	r2, r2
 8003b6a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003b6e:	6803      	ldr	r3, [r0, #0]
 8003b70:	8322      	strh	r2, [r4, #24]
 8003b72:	f8ad 2000 	strh.w	r2, [sp]
 8003b76:	2200      	movs	r2, #0
 8003b78:	691b      	ldr	r3, [r3, #16]
 8003b7a:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003b7e:	4669      	mov	r1, sp
 8003b80:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003b82:	7aa3      	ldrb	r3, [r4, #10]
 8003b84:	2b01      	cmp	r3, #1
 8003b86:	d1d6      	bne.n	8003b36 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003b88:	4b0b      	ldr	r3, [pc, #44]	; (8003bb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8003b8a:	781b      	ldrb	r3, [r3, #0]
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d0d2      	beq.n	8003b36 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003b90:	f012 f942 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003b94:	b003      	add	sp, #12
 8003b96:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003b9a:	f012 b943 	b.w	8015e24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003b9e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003ba2:	2800      	cmp	r0, #0
 8003ba4:	bfd8      	it	le
 8003ba6:	460a      	movle	r2, r1
 8003ba8:	4413      	add	r3, r2
 8003baa:	81e3      	strh	r3, [r4, #14]
 8003bac:	e7cf      	b.n	8003b4e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8003bae:	bf00      	nop
 8003bb0:	20012fb8 	.word	0x20012fb8
 8003bb4:	20012fba 	.word	0x20012fba
 8003bb8:	20012fc2 	.word	0x20012fc2

08003bbc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8003bbc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bc0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003bc4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003bc6:	68a8      	ldr	r0, [r5, #8]
 8003bc8:	6803      	ldr	r3, [r0, #0]
 8003bca:	6a1b      	ldr	r3, [r3, #32]
 8003bcc:	4798      	blx	r3
 8003bce:	f241 137b 	movw	r3, #4475	; 0x117b
 8003bd2:	4298      	cmp	r0, r3
 8003bd4:	d805      	bhi.n	8003be2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8003bd6:	4b46      	ldr	r3, [pc, #280]	; (8003cf0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8003bd8:	4a46      	ldr	r2, [pc, #280]	; (8003cf4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003bda:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bdc:	4846      	ldr	r0, [pc, #280]	; (8003cf8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8003bde:	f026 ffe3 	bl	802aba8 <__assert_func>
 8003be2:	6868      	ldr	r0, [r5, #4]
 8003be4:	6803      	ldr	r3, [r0, #0]
 8003be6:	6a1b      	ldr	r3, [r3, #32]
 8003be8:	4798      	blx	r3
 8003bea:	280f      	cmp	r0, #15
 8003bec:	d803      	bhi.n	8003bf6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003bee:	4b43      	ldr	r3, [pc, #268]	; (8003cfc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003bf0:	4a40      	ldr	r2, [pc, #256]	; (8003cf4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003bf2:	21a4      	movs	r1, #164	; 0xa4
 8003bf4:	e7f2      	b.n	8003bdc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bf6:	68e8      	ldr	r0, [r5, #12]
 8003bf8:	6803      	ldr	r3, [r0, #0]
 8003bfa:	6a1b      	ldr	r3, [r3, #32]
 8003bfc:	4798      	blx	r3
 8003bfe:	280b      	cmp	r0, #11
 8003c00:	d803      	bhi.n	8003c0a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003c02:	4b3f      	ldr	r3, [pc, #252]	; (8003d00 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003c04:	4a3b      	ldr	r2, [pc, #236]	; (8003cf4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003c06:	21a5      	movs	r1, #165	; 0xa5
 8003c08:	e7e8      	b.n	8003bdc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003c0a:	f012 f905 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c0e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003d08 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003c12:	3004      	adds	r0, #4
 8003c14:	f012 f966 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c18:	f8d9 0000 	ldr.w	r0, [r9]
 8003c1c:	b110      	cbz	r0, 8003c24 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003c1e:	6803      	ldr	r3, [r0, #0]
 8003c20:	68db      	ldr	r3, [r3, #12]
 8003c22:	4798      	blx	r3
    if (*currentTrans)
 8003c24:	f8d9 0000 	ldr.w	r0, [r9]
 8003c28:	b110      	cbz	r0, 8003c30 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003c2a:	6803      	ldr	r3, [r0, #0]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	4798      	blx	r3
    if (*currentScreen)
 8003c30:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003d0c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003c34:	f8d8 0000 	ldr.w	r0, [r8]
 8003c38:	b110      	cbz	r0, 8003c40 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003c3a:	6803      	ldr	r3, [r0, #0]
 8003c3c:	695b      	ldr	r3, [r3, #20]
 8003c3e:	4798      	blx	r3
    if (*currentPresenter)
 8003c40:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c44:	b110      	cbz	r0, 8003c4c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003c46:	6803      	ldr	r3, [r0, #0]
 8003c48:	685b      	ldr	r3, [r3, #4]
 8003c4a:	4798      	blx	r3
    if (*currentScreen)
 8003c4c:	f8d8 0000 	ldr.w	r0, [r8]
 8003c50:	b110      	cbz	r0, 8003c58 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003c52:	6803      	ldr	r3, [r0, #0]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	4798      	blx	r3
    if (*currentPresenter)
 8003c58:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c5c:	b110      	cbz	r0, 8003c64 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003c5e:	6803      	ldr	r3, [r0, #0]
 8003c60:	689b      	ldr	r3, [r3, #8]
 8003c62:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c64:	68e8      	ldr	r0, [r5, #12]
 8003c66:	6803      	ldr	r3, [r0, #0]
 8003c68:	2100      	movs	r1, #0
 8003c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c6c:	4798      	blx	r3
 8003c6e:	f04f 0b00 	mov.w	fp, #0
 8003c72:	4b24      	ldr	r3, [pc, #144]	; (8003d04 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003c74:	6003      	str	r3, [r0, #0]
 8003c76:	4604      	mov	r4, r0
 8003c78:	f8c0 b004 	str.w	fp, [r0, #4]
 8003c7c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c80:	68a8      	ldr	r0, [r5, #8]
 8003c82:	6803      	ldr	r3, [r0, #0]
 8003c84:	4659      	mov	r1, fp
 8003c86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c88:	4798      	blx	r3
 8003c8a:	4606      	mov	r6, r0
 8003c8c:	f004 fc5a 	bl	8008544 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c90:	6868      	ldr	r0, [r5, #4]
 8003c92:	6803      	ldr	r3, [r0, #0]
 8003c94:	4659      	mov	r1, fp
 8003c96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c98:	4798      	blx	r3
 8003c9a:	4631      	mov	r1, r6
 8003c9c:	4605      	mov	r5, r0
 8003c9e:	f004 fc2b 	bl	80084f8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003ca2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ca6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003caa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003cae:	b1e5      	cbz	r5, 8003cea <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003cb0:	1d2b      	adds	r3, r5, #4
 8003cb2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cb6:	6833      	ldr	r3, [r6, #0]
 8003cb8:	f8c5 a008 	str.w	sl, [r5, #8]
 8003cbc:	4630      	mov	r0, r6
 8003cbe:	68db      	ldr	r3, [r3, #12]
 8003cc0:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003cc2:	4798      	blx	r3
    newPresenter->activate();
 8003cc4:	682b      	ldr	r3, [r5, #0]
 8003cc6:	4628      	mov	r0, r5
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ccc:	4621      	mov	r1, r4
 8003cce:	4630      	mov	r0, r6
 8003cd0:	f013 fece 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003cd4:	6823      	ldr	r3, [r4, #0]
 8003cd6:	4620      	mov	r0, r4
 8003cd8:	691b      	ldr	r3, [r3, #16]
 8003cda:	4798      	blx	r3
    newTransition->invalidate();
 8003cdc:	6823      	ldr	r3, [r4, #0]
 8003cde:	695b      	ldr	r3, [r3, #20]
 8003ce0:	4620      	mov	r0, r4
}
 8003ce2:	b001      	add	sp, #4
 8003ce4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ce8:	4718      	bx	r3
    model->bind(newPresenter);
 8003cea:	462b      	mov	r3, r5
 8003cec:	e7e1      	b.n	8003cb2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003cee:	bf00      	nop
 8003cf0:	0802cb2c 	.word	0x0802cb2c
 8003cf4:	0802ce55 	.word	0x0802ce55
 8003cf8:	0802ccc8 	.word	0x0802ccc8
 8003cfc:	0802cd0f 	.word	0x0802cd0f
 8003d00:	0802cdb2 	.word	0x0802cdb2
 8003d04:	0802e1d0 	.word	0x0802e1d0
 8003d08:	2001300c 	.word	0x2001300c
 8003d0c:	20013008 	.word	0x20013008

08003d10 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003d10:	4b04      	ldr	r3, [pc, #16]	; (8003d24 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003d18:	b10a      	cbz	r2, 8003d1e <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003d1a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d1c:	b900      	cbnz	r0, 8003d20 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003d1e:	6898      	ldr	r0, [r3, #8]
    }
 8003d20:	4770      	bx	lr
 8003d22:	bf00      	nop
 8003d24:	20012fc4 	.word	0x20012fc4

08003d28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d2a:	4604      	mov	r4, r0
 8003d2c:	4617      	mov	r7, r2
 8003d2e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003d30:	f012 f9a6 	bl	8016080 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003d34:	4b10      	ldr	r3, [pc, #64]	; (8003d78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003d36:	601c      	str	r4, [r3, #0]
      model(m)
 8003d38:	4b10      	ldr	r3, [pc, #64]	; (8003d7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003d3a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003d3c:	4b10      	ldr	r3, [pc, #64]	; (8003d80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003d3e:	2500      	movs	r5, #0
 8003d40:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003d44:	4b0f      	ldr	r3, [pc, #60]	; (8003d84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003d46:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003d4a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003d4c:	6803      	ldr	r3, [r0, #0]
 8003d4e:	2101      	movs	r1, #1
 8003d50:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003d52:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003d56:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003d5a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003d5c:	4628      	mov	r0, r5
 8003d5e:	f004 fa31 	bl	80081c4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003d62:	f7ff ffd5 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 8003d66:	f01b fd8e 	bl	801f886 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003d6a:	f7ff ffd1 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 8003d6e:	f01b fe05 	bl	801f97c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003d72:	4620      	mov	r0, r4
 8003d74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d76:	bf00      	nop
 8003d78:	20013018 	.word	0x20013018
 8003d7c:	0802e17c 	.word	0x0802e17c
 8003d80:	0802e164 	.word	0x0802e164
 8003d84:	20012fc4 	.word	0x20012fc4

08003d88 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003d88:	4b06      	ldr	r3, [pc, #24]	; (8003da4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003d8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d8e:	2300      	movs	r3, #0
 8003d90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003da0:	4770      	bx	lr
 8003da2:	bf00      	nop
 8003da4:	08003bbd 	.word	0x08003bbd

08003da8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003da8:	4b06      	ldr	r3, [pc, #24]	; (8003dc4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003daa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003dae:	2300      	movs	r3, #0
 8003db0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003db4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003db8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003dbc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003dc0:	4770      	bx	lr
 8003dc2:	bf00      	nop
 8003dc4:	080043cd 	.word	0x080043cd

08003dc8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003dc8:	4b06      	ldr	r3, [pc, #24]	; (8003de4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003dca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003dce:	2300      	movs	r3, #0
 8003dd0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003dd4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003dd8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ddc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003de0:	4770      	bx	lr
 8003de2:	bf00      	nop
 8003de4:	080051f1 	.word	0x080051f1

08003de8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003de8:	4b06      	ldr	r3, [pc, #24]	; (8003e04 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003dea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003dee:	2300      	movs	r3, #0
 8003df0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003df4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003df8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003dfc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e00:	4770      	bx	lr
 8003e02:	bf00      	nop
 8003e04:	0800428d 	.word	0x0800428d

08003e08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003e08:	4b06      	ldr	r3, [pc, #24]	; (8003e24 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003e0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e0e:	2300      	movs	r3, #0
 8003e10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e20:	4770      	bx	lr
 8003e22:	bf00      	nop
 8003e24:	080050b1 	.word	0x080050b1

08003e28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003e28:	4b06      	ldr	r3, [pc, #24]	; (8003e44 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003e2a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e2e:	2300      	movs	r3, #0
 8003e30:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e38:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e40:	4770      	bx	lr
 8003e42:	bf00      	nop
 8003e44:	08004f71 	.word	0x08004f71

08003e48 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003e48:	4b06      	ldr	r3, [pc, #24]	; (8003e64 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003e4a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e4e:	2300      	movs	r3, #0
 8003e50:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e54:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e58:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e5c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e60:	4770      	bx	lr
 8003e62:	bf00      	nop
 8003e64:	08004e31 	.word	0x08004e31

08003e68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003e68:	4b06      	ldr	r3, [pc, #24]	; (8003e84 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003e6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e6e:	2300      	movs	r3, #0
 8003e70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003e80:	4770      	bx	lr
 8003e82:	bf00      	nop
 8003e84:	08004cf1 	.word	0x08004cf1

08003e88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003e88:	4b06      	ldr	r3, [pc, #24]	; (8003ea4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003e8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e8e:	2300      	movs	r3, #0
 8003e90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003e94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ea0:	4770      	bx	lr
 8003ea2:	bf00      	nop
 8003ea4:	0800414d 	.word	0x0800414d

08003ea8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003ea8:	4b06      	ldr	r3, [pc, #24]	; (8003ec4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003eaa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003eae:	2300      	movs	r3, #0
 8003eb0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003eb4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003eb8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ebc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ec0:	4770      	bx	lr
 8003ec2:	bf00      	nop
 8003ec4:	08004bb1 	.word	0x08004bb1

08003ec8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003ec8:	4b06      	ldr	r3, [pc, #24]	; (8003ee4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003eca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ece:	2300      	movs	r3, #0
 8003ed0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ed4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ed8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003edc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ee0:	4770      	bx	lr
 8003ee2:	bf00      	nop
 8003ee4:	08004a71 	.word	0x08004a71

08003ee8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003ee8:	4b06      	ldr	r3, [pc, #24]	; (8003f04 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003eea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003eee:	2300      	movs	r3, #0
 8003ef0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ef4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ef8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003efc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f00:	4770      	bx	lr
 8003f02:	bf00      	nop
 8003f04:	08004931 	.word	0x08004931

08003f08 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003f08:	4b06      	ldr	r3, [pc, #24]	; (8003f24 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003f0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f0e:	2300      	movs	r3, #0
 8003f10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f20:	4770      	bx	lr
 8003f22:	bf00      	nop
 8003f24:	0800400d 	.word	0x0800400d

08003f28 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003f28:	4b06      	ldr	r3, [pc, #24]	; (8003f44 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003f2a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f2e:	2300      	movs	r3, #0
 8003f30:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f38:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f40:	4770      	bx	lr
 8003f42:	bf00      	nop
 8003f44:	080047f1 	.word	0x080047f1

08003f48 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003f48:	4b06      	ldr	r3, [pc, #24]	; (8003f64 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003f4a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f4e:	2300      	movs	r3, #0
 8003f50:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f54:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f58:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f5c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f60:	4770      	bx	lr
 8003f62:	bf00      	nop
 8003f64:	080046b1 	.word	0x080046b1

08003f68 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003f68:	4b06      	ldr	r3, [pc, #24]	; (8003f84 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003f6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f6e:	2300      	movs	r3, #0
 8003f70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003f80:	4770      	bx	lr
 8003f82:	bf00      	nop
 8003f84:	08004571 	.word	0x08004571

08003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003f88:	4b06      	ldr	r3, [pc, #24]	; (8003fa4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003f8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003f8e:	2300      	movs	r3, #0
 8003f90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003f94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003f98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003f9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003fa0:	4770      	bx	lr
 8003fa2:	bf00      	nop
 8003fa4:	080039cd 	.word	0x080039cd

08003fa8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003fa8:	6803      	ldr	r3, [r0, #0]
 8003faa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fac:	4718      	bx	r3
	...

08003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003fb0:	4b12      	ldr	r3, [pc, #72]	; (8003ffc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003fb2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003fb4:	6003      	str	r3, [r0, #0]
 8003fb6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003fba:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003fbc:	4b10      	ldr	r3, [pc, #64]	; (8004000 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003fbe:	7241      	strb	r1, [r0, #9]
 8003fc0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fc2:	4910      	ldr	r1, [pc, #64]	; (8004004 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003fc4:	4b10      	ldr	r3, [pc, #64]	; (8004008 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fc6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003fca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003fce:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003fd0:	2200      	movs	r2, #0
 8003fd2:	6042      	str	r2, [r0, #4]
 8003fd4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003fd6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003fd8:	81c2      	strh	r2, [r0, #14]
          solid()
 8003fda:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003fde:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003fe2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003fe6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003fea:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003fec:	9100      	str	r1, [sp, #0]
 8003fee:	3010      	adds	r0, #16
 8003ff0:	4611      	mov	r1, r2
 8003ff2:	f7fe fbbf 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003ff6:	4620      	mov	r0, r4
 8003ff8:	b002      	add	sp, #8
 8003ffa:	bd10      	pop	{r4, pc}
 8003ffc:	0802e218 	.word	0x0802e218
 8004000:	0802e0fc 	.word	0x0802e0fc
 8004004:	20012fba 	.word	0x20012fba
 8004008:	20012fb8 	.word	0x20012fb8

0800400c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 800400c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004010:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004014:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004016:	68a0      	ldr	r0, [r4, #8]
 8004018:	6803      	ldr	r3, [r0, #0]
 800401a:	6a1b      	ldr	r3, [r3, #32]
 800401c:	4798      	blx	r3
 800401e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004022:	d205      	bcs.n	8004030 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004024:	4b42      	ldr	r3, [pc, #264]	; (8004130 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8004026:	4a43      	ldr	r2, [pc, #268]	; (8004134 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004028:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800402a:	4843      	ldr	r0, [pc, #268]	; (8004138 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 800402c:	f026 fdbc 	bl	802aba8 <__assert_func>
 8004030:	6860      	ldr	r0, [r4, #4]
 8004032:	6803      	ldr	r3, [r0, #0]
 8004034:	6a1b      	ldr	r3, [r3, #32]
 8004036:	4798      	blx	r3
 8004038:	280f      	cmp	r0, #15
 800403a:	d803      	bhi.n	8004044 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 800403c:	4b3f      	ldr	r3, [pc, #252]	; (800413c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 800403e:	4a3d      	ldr	r2, [pc, #244]	; (8004134 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004040:	21a4      	movs	r1, #164	; 0xa4
 8004042:	e7f2      	b.n	800402a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004044:	68e0      	ldr	r0, [r4, #12]
 8004046:	6803      	ldr	r3, [r0, #0]
 8004048:	6a1b      	ldr	r3, [r3, #32]
 800404a:	4798      	blx	r3
 800404c:	2837      	cmp	r0, #55	; 0x37
 800404e:	d803      	bhi.n	8004058 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8004050:	4b3b      	ldr	r3, [pc, #236]	; (8004140 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8004052:	4a38      	ldr	r2, [pc, #224]	; (8004134 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004054:	21a5      	movs	r1, #165	; 0xa5
 8004056:	e7e8      	b.n	800402a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004058:	f011 fede 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800405c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004144 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004060:	3004      	adds	r0, #4
 8004062:	f011 ff3f 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004066:	f8d9 0000 	ldr.w	r0, [r9]
 800406a:	b110      	cbz	r0, 8004072 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 800406c:	6803      	ldr	r3, [r0, #0]
 800406e:	68db      	ldr	r3, [r3, #12]
 8004070:	4798      	blx	r3
    if (*currentTrans)
 8004072:	f8d9 0000 	ldr.w	r0, [r9]
 8004076:	b110      	cbz	r0, 800407e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004078:	6803      	ldr	r3, [r0, #0]
 800407a:	681b      	ldr	r3, [r3, #0]
 800407c:	4798      	blx	r3
    if (*currentScreen)
 800407e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004148 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004082:	f8d8 0000 	ldr.w	r0, [r8]
 8004086:	b110      	cbz	r0, 800408e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004088:	6803      	ldr	r3, [r0, #0]
 800408a:	695b      	ldr	r3, [r3, #20]
 800408c:	4798      	blx	r3
    if (*currentPresenter)
 800408e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004092:	b110      	cbz	r0, 800409a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004094:	6803      	ldr	r3, [r0, #0]
 8004096:	685b      	ldr	r3, [r3, #4]
 8004098:	4798      	blx	r3
    if (*currentScreen)
 800409a:	f8d8 0000 	ldr.w	r0, [r8]
 800409e:	b110      	cbz	r0, 80040a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80040a0:	6803      	ldr	r3, [r0, #0]
 80040a2:	681b      	ldr	r3, [r3, #0]
 80040a4:	4798      	blx	r3
    if (*currentPresenter)
 80040a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80040aa:	b110      	cbz	r0, 80040b2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80040ac:	6803      	ldr	r3, [r0, #0]
 80040ae:	689b      	ldr	r3, [r3, #8]
 80040b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80040b2:	68e0      	ldr	r0, [r4, #12]
 80040b4:	2100      	movs	r1, #0
 80040b6:	f7ff ff77 	bl	8003fa8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80040ba:	2114      	movs	r1, #20
 80040bc:	4605      	mov	r5, r0
 80040be:	f7ff ff77 	bl	8003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040c2:	68a0      	ldr	r0, [r4, #8]
 80040c4:	6803      	ldr	r3, [r0, #0]
 80040c6:	2100      	movs	r1, #0
 80040c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ca:	4798      	blx	r3
 80040cc:	4606      	mov	r6, r0
 80040ce:	f004 f917 	bl	8008300 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040d2:	6860      	ldr	r0, [r4, #4]
 80040d4:	6803      	ldr	r3, [r0, #0]
 80040d6:	2100      	movs	r1, #0
 80040d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040da:	4798      	blx	r3
 80040dc:	4631      	mov	r1, r6
 80040de:	4604      	mov	r4, r0
 80040e0:	f004 f8e8 	bl	80082b4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80040e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040f0:	b1dc      	cbz	r4, 800412a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 80040f2:	1d23      	adds	r3, r4, #4
 80040f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040f8:	6833      	ldr	r3, [r6, #0]
 80040fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80040fe:	4630      	mov	r0, r6
 8004100:	68db      	ldr	r3, [r3, #12]
 8004102:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004104:	4798      	blx	r3
    newPresenter->activate();
 8004106:	6823      	ldr	r3, [r4, #0]
 8004108:	4620      	mov	r0, r4
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800410e:	4629      	mov	r1, r5
 8004110:	4630      	mov	r0, r6
 8004112:	f013 fcad 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004116:	682b      	ldr	r3, [r5, #0]
 8004118:	4628      	mov	r0, r5
 800411a:	691b      	ldr	r3, [r3, #16]
 800411c:	4798      	blx	r3
    newTransition->invalidate();
 800411e:	682b      	ldr	r3, [r5, #0]
 8004120:	4628      	mov	r0, r5
 8004122:	695b      	ldr	r3, [r3, #20]
}
 8004124:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004128:	4718      	bx	r3
    model->bind(newPresenter);
 800412a:	4623      	mov	r3, r4
 800412c:	e7e2      	b.n	80040f4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 800412e:	bf00      	nop
 8004130:	0802cb2c 	.word	0x0802cb2c
 8004134:	0802cf5d 	.word	0x0802cf5d
 8004138:	0802ccc8 	.word	0x0802ccc8
 800413c:	0802cd0f 	.word	0x0802cd0f
 8004140:	0802cdb2 	.word	0x0802cdb2
 8004144:	2001300c 	.word	0x2001300c
 8004148:	20013008 	.word	0x20013008

0800414c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 800414c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004150:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004154:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004156:	68a0      	ldr	r0, [r4, #8]
 8004158:	6803      	ldr	r3, [r0, #0]
 800415a:	6a1b      	ldr	r3, [r3, #32]
 800415c:	4798      	blx	r3
 800415e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004162:	d205      	bcs.n	8004170 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004164:	4b42      	ldr	r3, [pc, #264]	; (8004270 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004166:	4a43      	ldr	r2, [pc, #268]	; (8004274 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004168:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800416a:	4843      	ldr	r0, [pc, #268]	; (8004278 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 800416c:	f026 fd1c 	bl	802aba8 <__assert_func>
 8004170:	6860      	ldr	r0, [r4, #4]
 8004172:	6803      	ldr	r3, [r0, #0]
 8004174:	6a1b      	ldr	r3, [r3, #32]
 8004176:	4798      	blx	r3
 8004178:	280f      	cmp	r0, #15
 800417a:	d803      	bhi.n	8004184 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 800417c:	4b3f      	ldr	r3, [pc, #252]	; (800427c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 800417e:	4a3d      	ldr	r2, [pc, #244]	; (8004274 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004180:	21a4      	movs	r1, #164	; 0xa4
 8004182:	e7f2      	b.n	800416a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004184:	68e0      	ldr	r0, [r4, #12]
 8004186:	6803      	ldr	r3, [r0, #0]
 8004188:	6a1b      	ldr	r3, [r3, #32]
 800418a:	4798      	blx	r3
 800418c:	2837      	cmp	r0, #55	; 0x37
 800418e:	d803      	bhi.n	8004198 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004190:	4b3b      	ldr	r3, [pc, #236]	; (8004280 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004192:	4a38      	ldr	r2, [pc, #224]	; (8004274 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004194:	21a5      	movs	r1, #165	; 0xa5
 8004196:	e7e8      	b.n	800416a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004198:	f011 fe3e 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800419c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004284 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80041a0:	3004      	adds	r0, #4
 80041a2:	f011 fe9f 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041a6:	f8d9 0000 	ldr.w	r0, [r9]
 80041aa:	b110      	cbz	r0, 80041b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80041ac:	6803      	ldr	r3, [r0, #0]
 80041ae:	68db      	ldr	r3, [r3, #12]
 80041b0:	4798      	blx	r3
    if (*currentTrans)
 80041b2:	f8d9 0000 	ldr.w	r0, [r9]
 80041b6:	b110      	cbz	r0, 80041be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80041b8:	6803      	ldr	r3, [r0, #0]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	4798      	blx	r3
    if (*currentScreen)
 80041be:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004288 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80041c2:	f8d8 0000 	ldr.w	r0, [r8]
 80041c6:	b110      	cbz	r0, 80041ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80041c8:	6803      	ldr	r3, [r0, #0]
 80041ca:	695b      	ldr	r3, [r3, #20]
 80041cc:	4798      	blx	r3
    if (*currentPresenter)
 80041ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041d2:	b110      	cbz	r0, 80041da <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80041d4:	6803      	ldr	r3, [r0, #0]
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	4798      	blx	r3
    if (*currentScreen)
 80041da:	f8d8 0000 	ldr.w	r0, [r8]
 80041de:	b110      	cbz	r0, 80041e6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80041e0:	6803      	ldr	r3, [r0, #0]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	4798      	blx	r3
    if (*currentPresenter)
 80041e6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041ea:	b110      	cbz	r0, 80041f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80041ec:	6803      	ldr	r3, [r0, #0]
 80041ee:	689b      	ldr	r3, [r3, #8]
 80041f0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041f2:	68e0      	ldr	r0, [r4, #12]
 80041f4:	2100      	movs	r1, #0
 80041f6:	f7ff fed7 	bl	8003fa8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80041fa:	2114      	movs	r1, #20
 80041fc:	4605      	mov	r5, r0
 80041fe:	f7ff fed7 	bl	8003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004202:	68a0      	ldr	r0, [r4, #8]
 8004204:	6803      	ldr	r3, [r0, #0]
 8004206:	2100      	movs	r1, #0
 8004208:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800420a:	4798      	blx	r3
 800420c:	4606      	mov	r6, r0
 800420e:	f004 fa59 	bl	80086c4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004212:	6860      	ldr	r0, [r4, #4]
 8004214:	6803      	ldr	r3, [r0, #0]
 8004216:	2100      	movs	r1, #0
 8004218:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800421a:	4798      	blx	r3
 800421c:	4631      	mov	r1, r6
 800421e:	4604      	mov	r4, r0
 8004220:	f004 fa2a 	bl	8008678 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004224:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004228:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800422c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004230:	b1dc      	cbz	r4, 800426a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004232:	1d23      	adds	r3, r4, #4
 8004234:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004238:	6833      	ldr	r3, [r6, #0]
 800423a:	f8c4 a008 	str.w	sl, [r4, #8]
 800423e:	4630      	mov	r0, r6
 8004240:	68db      	ldr	r3, [r3, #12]
 8004242:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004244:	4798      	blx	r3
    newPresenter->activate();
 8004246:	6823      	ldr	r3, [r4, #0]
 8004248:	4620      	mov	r0, r4
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800424e:	4629      	mov	r1, r5
 8004250:	4630      	mov	r0, r6
 8004252:	f013 fc0d 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004256:	682b      	ldr	r3, [r5, #0]
 8004258:	4628      	mov	r0, r5
 800425a:	691b      	ldr	r3, [r3, #16]
 800425c:	4798      	blx	r3
    newTransition->invalidate();
 800425e:	682b      	ldr	r3, [r5, #0]
 8004260:	4628      	mov	r0, r5
 8004262:	695b      	ldr	r3, [r3, #20]
}
 8004264:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004268:	4718      	bx	r3
    model->bind(newPresenter);
 800426a:	4623      	mov	r3, r4
 800426c:	e7e2      	b.n	8004234 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800426e:	bf00      	nop
 8004270:	0802cb2c 	.word	0x0802cb2c
 8004274:	0802d07b 	.word	0x0802d07b
 8004278:	0802ccc8 	.word	0x0802ccc8
 800427c:	0802cd0f 	.word	0x0802cd0f
 8004280:	0802cdb2 	.word	0x0802cdb2
 8004284:	2001300c 	.word	0x2001300c
 8004288:	20013008 	.word	0x20013008

0800428c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 800428c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004290:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004294:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004296:	68a0      	ldr	r0, [r4, #8]
 8004298:	6803      	ldr	r3, [r0, #0]
 800429a:	6a1b      	ldr	r3, [r3, #32]
 800429c:	4798      	blx	r3
 800429e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80042a2:	d205      	bcs.n	80042b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80042a4:	4b42      	ldr	r3, [pc, #264]	; (80043b0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80042a6:	4a43      	ldr	r2, [pc, #268]	; (80043b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80042a8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042aa:	4843      	ldr	r0, [pc, #268]	; (80043b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80042ac:	f026 fc7c 	bl	802aba8 <__assert_func>
 80042b0:	6860      	ldr	r0, [r4, #4]
 80042b2:	6803      	ldr	r3, [r0, #0]
 80042b4:	6a1b      	ldr	r3, [r3, #32]
 80042b6:	4798      	blx	r3
 80042b8:	280f      	cmp	r0, #15
 80042ba:	d803      	bhi.n	80042c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80042bc:	4b3f      	ldr	r3, [pc, #252]	; (80043bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80042be:	4a3d      	ldr	r2, [pc, #244]	; (80043b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80042c0:	21a4      	movs	r1, #164	; 0xa4
 80042c2:	e7f2      	b.n	80042aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042c4:	68e0      	ldr	r0, [r4, #12]
 80042c6:	6803      	ldr	r3, [r0, #0]
 80042c8:	6a1b      	ldr	r3, [r3, #32]
 80042ca:	4798      	blx	r3
 80042cc:	2837      	cmp	r0, #55	; 0x37
 80042ce:	d803      	bhi.n	80042d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80042d0:	4b3b      	ldr	r3, [pc, #236]	; (80043c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80042d2:	4a38      	ldr	r2, [pc, #224]	; (80043b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80042d4:	21a5      	movs	r1, #165	; 0xa5
 80042d6:	e7e8      	b.n	80042aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80042d8:	f011 fd9e 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80042dc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80043c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80042e0:	3004      	adds	r0, #4
 80042e2:	f011 fdff 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80042e6:	f8d9 0000 	ldr.w	r0, [r9]
 80042ea:	b110      	cbz	r0, 80042f2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80042ec:	6803      	ldr	r3, [r0, #0]
 80042ee:	68db      	ldr	r3, [r3, #12]
 80042f0:	4798      	blx	r3
    if (*currentTrans)
 80042f2:	f8d9 0000 	ldr.w	r0, [r9]
 80042f6:	b110      	cbz	r0, 80042fe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80042f8:	6803      	ldr	r3, [r0, #0]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	4798      	blx	r3
    if (*currentScreen)
 80042fe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80043c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004302:	f8d8 0000 	ldr.w	r0, [r8]
 8004306:	b110      	cbz	r0, 800430e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004308:	6803      	ldr	r3, [r0, #0]
 800430a:	695b      	ldr	r3, [r3, #20]
 800430c:	4798      	blx	r3
    if (*currentPresenter)
 800430e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004312:	b110      	cbz	r0, 800431a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004314:	6803      	ldr	r3, [r0, #0]
 8004316:	685b      	ldr	r3, [r3, #4]
 8004318:	4798      	blx	r3
    if (*currentScreen)
 800431a:	f8d8 0000 	ldr.w	r0, [r8]
 800431e:	b110      	cbz	r0, 8004326 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004320:	6803      	ldr	r3, [r0, #0]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	4798      	blx	r3
    if (*currentPresenter)
 8004326:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800432a:	b110      	cbz	r0, 8004332 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	689b      	ldr	r3, [r3, #8]
 8004330:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004332:	68e0      	ldr	r0, [r4, #12]
 8004334:	2100      	movs	r1, #0
 8004336:	f7ff fe37 	bl	8003fa8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800433a:	2114      	movs	r1, #20
 800433c:	4605      	mov	r5, r0
 800433e:	f7ff fe37 	bl	8003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004342:	68a0      	ldr	r0, [r4, #8]
 8004344:	6803      	ldr	r3, [r0, #0]
 8004346:	2100      	movs	r1, #0
 8004348:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800434a:	4798      	blx	r3
 800434c:	4606      	mov	r6, r0
 800434e:	f004 f959 	bl	8008604 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004352:	6860      	ldr	r0, [r4, #4]
 8004354:	6803      	ldr	r3, [r0, #0]
 8004356:	2100      	movs	r1, #0
 8004358:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800435a:	4798      	blx	r3
 800435c:	4631      	mov	r1, r6
 800435e:	4604      	mov	r4, r0
 8004360:	f004 f92a 	bl	80085b8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004364:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004368:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800436c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004370:	b1dc      	cbz	r4, 80043aa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004372:	1d23      	adds	r3, r4, #4
 8004374:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004378:	6833      	ldr	r3, [r6, #0]
 800437a:	f8c4 a008 	str.w	sl, [r4, #8]
 800437e:	4630      	mov	r0, r6
 8004380:	68db      	ldr	r3, [r3, #12]
 8004382:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004384:	4798      	blx	r3
    newPresenter->activate();
 8004386:	6823      	ldr	r3, [r4, #0]
 8004388:	4620      	mov	r0, r4
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800438e:	4629      	mov	r1, r5
 8004390:	4630      	mov	r0, r6
 8004392:	f013 fb6d 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004396:	682b      	ldr	r3, [r5, #0]
 8004398:	4628      	mov	r0, r5
 800439a:	691b      	ldr	r3, [r3, #16]
 800439c:	4798      	blx	r3
    newTransition->invalidate();
 800439e:	682b      	ldr	r3, [r5, #0]
 80043a0:	4628      	mov	r0, r5
 80043a2:	695b      	ldr	r3, [r3, #20]
}
 80043a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043a8:	4718      	bx	r3
    model->bind(newPresenter);
 80043aa:	4623      	mov	r3, r4
 80043ac:	e7e2      	b.n	8004374 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80043ae:	bf00      	nop
 80043b0:	0802cb2c 	.word	0x0802cb2c
 80043b4:	0802d1ab 	.word	0x0802d1ab
 80043b8:	0802ccc8 	.word	0x0802ccc8
 80043bc:	0802cd0f 	.word	0x0802cd0f
 80043c0:	0802cdb2 	.word	0x0802cdb2
 80043c4:	2001300c 	.word	0x2001300c
 80043c8:	20013008 	.word	0x20013008

080043cc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80043cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80043d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80043d6:	68a0      	ldr	r0, [r4, #8]
 80043d8:	6803      	ldr	r3, [r0, #0]
 80043da:	6a1b      	ldr	r3, [r3, #32]
 80043dc:	4798      	blx	r3
 80043de:	f241 137b 	movw	r3, #4475	; 0x117b
 80043e2:	4298      	cmp	r0, r3
 80043e4:	d805      	bhi.n	80043f2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 80043e6:	4b42      	ldr	r3, [pc, #264]	; (80044f0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 80043e8:	4a42      	ldr	r2, [pc, #264]	; (80044f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80043ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043ec:	4842      	ldr	r0, [pc, #264]	; (80044f8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 80043ee:	f026 fbdb 	bl	802aba8 <__assert_func>
 80043f2:	6860      	ldr	r0, [r4, #4]
 80043f4:	6803      	ldr	r3, [r0, #0]
 80043f6:	6a1b      	ldr	r3, [r3, #32]
 80043f8:	4798      	blx	r3
 80043fa:	280f      	cmp	r0, #15
 80043fc:	d803      	bhi.n	8004406 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 80043fe:	4b3f      	ldr	r3, [pc, #252]	; (80044fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004400:	4a3c      	ldr	r2, [pc, #240]	; (80044f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004402:	21a4      	movs	r1, #164	; 0xa4
 8004404:	e7f2      	b.n	80043ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004406:	68e0      	ldr	r0, [r4, #12]
 8004408:	6803      	ldr	r3, [r0, #0]
 800440a:	6a1b      	ldr	r3, [r3, #32]
 800440c:	4798      	blx	r3
 800440e:	2837      	cmp	r0, #55	; 0x37
 8004410:	d803      	bhi.n	800441a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004412:	4b3b      	ldr	r3, [pc, #236]	; (8004500 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004414:	4a37      	ldr	r2, [pc, #220]	; (80044f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004416:	21a5      	movs	r1, #165	; 0xa5
 8004418:	e7e8      	b.n	80043ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800441a:	f011 fcfd 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800441e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004504 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004422:	3004      	adds	r0, #4
 8004424:	f011 fd5e 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004428:	f8d9 0000 	ldr.w	r0, [r9]
 800442c:	b110      	cbz	r0, 8004434 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800442e:	6803      	ldr	r3, [r0, #0]
 8004430:	68db      	ldr	r3, [r3, #12]
 8004432:	4798      	blx	r3
    if (*currentTrans)
 8004434:	f8d9 0000 	ldr.w	r0, [r9]
 8004438:	b110      	cbz	r0, 8004440 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	4798      	blx	r3
    if (*currentScreen)
 8004440:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004508 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004444:	f8d8 0000 	ldr.w	r0, [r8]
 8004448:	b110      	cbz	r0, 8004450 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	695b      	ldr	r3, [r3, #20]
 800444e:	4798      	blx	r3
    if (*currentPresenter)
 8004450:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004454:	b110      	cbz	r0, 800445c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004456:	6803      	ldr	r3, [r0, #0]
 8004458:	685b      	ldr	r3, [r3, #4]
 800445a:	4798      	blx	r3
    if (*currentScreen)
 800445c:	f8d8 0000 	ldr.w	r0, [r8]
 8004460:	b110      	cbz	r0, 8004468 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004462:	6803      	ldr	r3, [r0, #0]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	4798      	blx	r3
    if (*currentPresenter)
 8004468:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800446c:	b110      	cbz	r0, 8004474 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800446e:	6803      	ldr	r3, [r0, #0]
 8004470:	689b      	ldr	r3, [r3, #8]
 8004472:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004474:	68e0      	ldr	r0, [r4, #12]
 8004476:	2100      	movs	r1, #0
 8004478:	f7ff fd96 	bl	8003fa8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800447c:	2114      	movs	r1, #20
 800447e:	4605      	mov	r5, r0
 8004480:	f7ff fd96 	bl	8003fb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004484:	68a0      	ldr	r0, [r4, #8]
 8004486:	6803      	ldr	r3, [r0, #0]
 8004488:	2100      	movs	r1, #0
 800448a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800448c:	4798      	blx	r3
 800448e:	4606      	mov	r6, r0
 8004490:	f004 f858 	bl	8008544 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004494:	6860      	ldr	r0, [r4, #4]
 8004496:	6803      	ldr	r3, [r0, #0]
 8004498:	2100      	movs	r1, #0
 800449a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800449c:	4798      	blx	r3
 800449e:	4631      	mov	r1, r6
 80044a0:	4604      	mov	r4, r0
 80044a2:	f004 f829 	bl	80084f8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80044a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80044aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044b2:	b1dc      	cbz	r4, 80044ec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80044b4:	1d23      	adds	r3, r4, #4
 80044b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044ba:	6833      	ldr	r3, [r6, #0]
 80044bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80044c0:	4630      	mov	r0, r6
 80044c2:	68db      	ldr	r3, [r3, #12]
 80044c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80044c6:	4798      	blx	r3
    newPresenter->activate();
 80044c8:	6823      	ldr	r3, [r4, #0]
 80044ca:	4620      	mov	r0, r4
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80044d0:	4629      	mov	r1, r5
 80044d2:	4630      	mov	r0, r6
 80044d4:	f013 facc 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80044d8:	682b      	ldr	r3, [r5, #0]
 80044da:	4628      	mov	r0, r5
 80044dc:	691b      	ldr	r3, [r3, #16]
 80044de:	4798      	blx	r3
    newTransition->invalidate();
 80044e0:	682b      	ldr	r3, [r5, #0]
 80044e2:	4628      	mov	r0, r5
 80044e4:	695b      	ldr	r3, [r3, #20]
}
 80044e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044ea:	4718      	bx	r3
    model->bind(newPresenter);
 80044ec:	4623      	mov	r3, r4
 80044ee:	e7e2      	b.n	80044b6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 80044f0:	0802cb2c 	.word	0x0802cb2c
 80044f4:	0802d2c9 	.word	0x0802d2c9
 80044f8:	0802ccc8 	.word	0x0802ccc8
 80044fc:	0802cd0f 	.word	0x0802cd0f
 8004500:	0802cdb2 	.word	0x0802cdb2
 8004504:	2001300c 	.word	0x2001300c
 8004508:	20013008 	.word	0x20013008

0800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 800450c:	6803      	ldr	r3, [r0, #0]
 800450e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004510:	4718      	bx	r3
	...

08004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004514:	4b12      	ldr	r3, [pc, #72]	; (8004560 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004516:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004518:	6003      	str	r3, [r0, #0]
 800451a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800451e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004520:	4b10      	ldr	r3, [pc, #64]	; (8004564 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004522:	7241      	strb	r1, [r0, #9]
 8004524:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004526:	4910      	ldr	r1, [pc, #64]	; (8004568 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004528:	4b10      	ldr	r3, [pc, #64]	; (800456c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800452a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800452e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004532:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004534:	2200      	movs	r2, #0
 8004536:	6042      	str	r2, [r0, #4]
 8004538:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800453a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800453c:	81c2      	strh	r2, [r0, #14]
          solid()
 800453e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004542:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004546:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800454a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800454e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004550:	9100      	str	r1, [sp, #0]
 8004552:	3010      	adds	r0, #16
 8004554:	4611      	mov	r1, r2
 8004556:	f7fe f90d 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800455a:	4620      	mov	r0, r4
 800455c:	b002      	add	sp, #8
 800455e:	bd10      	pop	{r4, pc}
 8004560:	0802e1f4 	.word	0x0802e1f4
 8004564:	0802e0fc 	.word	0x0802e0fc
 8004568:	20012fba 	.word	0x20012fba
 800456c:	20012fb8 	.word	0x20012fb8

08004570 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004570:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004574:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004578:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800457a:	68a0      	ldr	r0, [r4, #8]
 800457c:	6803      	ldr	r3, [r0, #0]
 800457e:	6a1b      	ldr	r3, [r3, #32]
 8004580:	4798      	blx	r3
 8004582:	f241 03af 	movw	r3, #4271	; 0x10af
 8004586:	4298      	cmp	r0, r3
 8004588:	d805      	bhi.n	8004596 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800458a:	4b42      	ldr	r3, [pc, #264]	; (8004694 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 800458c:	4a42      	ldr	r2, [pc, #264]	; (8004698 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800458e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004590:	4842      	ldr	r0, [pc, #264]	; (800469c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004592:	f026 fb09 	bl	802aba8 <__assert_func>
 8004596:	6860      	ldr	r0, [r4, #4]
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	6a1b      	ldr	r3, [r3, #32]
 800459c:	4798      	blx	r3
 800459e:	280f      	cmp	r0, #15
 80045a0:	d803      	bhi.n	80045aa <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80045a2:	4b3f      	ldr	r3, [pc, #252]	; (80046a0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80045a4:	4a3c      	ldr	r2, [pc, #240]	; (8004698 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80045a6:	21a4      	movs	r1, #164	; 0xa4
 80045a8:	e7f2      	b.n	8004590 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045aa:	68e0      	ldr	r0, [r4, #12]
 80045ac:	6803      	ldr	r3, [r0, #0]
 80045ae:	6a1b      	ldr	r3, [r3, #32]
 80045b0:	4798      	blx	r3
 80045b2:	2837      	cmp	r0, #55	; 0x37
 80045b4:	d803      	bhi.n	80045be <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80045b6:	4b3b      	ldr	r3, [pc, #236]	; (80046a4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80045b8:	4a37      	ldr	r2, [pc, #220]	; (8004698 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80045ba:	21a5      	movs	r1, #165	; 0xa5
 80045bc:	e7e8      	b.n	8004590 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80045be:	f011 fc2b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045c2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80046a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80045c6:	3004      	adds	r0, #4
 80045c8:	f011 fc8c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045cc:	f8d9 0000 	ldr.w	r0, [r9]
 80045d0:	b110      	cbz	r0, 80045d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80045d2:	6803      	ldr	r3, [r0, #0]
 80045d4:	68db      	ldr	r3, [r3, #12]
 80045d6:	4798      	blx	r3
    if (*currentTrans)
 80045d8:	f8d9 0000 	ldr.w	r0, [r9]
 80045dc:	b110      	cbz	r0, 80045e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80045de:	6803      	ldr	r3, [r0, #0]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	4798      	blx	r3
    if (*currentScreen)
 80045e4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80046ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80045e8:	f8d8 0000 	ldr.w	r0, [r8]
 80045ec:	b110      	cbz	r0, 80045f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045ee:	6803      	ldr	r3, [r0, #0]
 80045f0:	695b      	ldr	r3, [r3, #20]
 80045f2:	4798      	blx	r3
    if (*currentPresenter)
 80045f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045f8:	b110      	cbz	r0, 8004600 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045fa:	6803      	ldr	r3, [r0, #0]
 80045fc:	685b      	ldr	r3, [r3, #4]
 80045fe:	4798      	blx	r3
    if (*currentScreen)
 8004600:	f8d8 0000 	ldr.w	r0, [r8]
 8004604:	b110      	cbz	r0, 800460c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004606:	6803      	ldr	r3, [r0, #0]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	4798      	blx	r3
    if (*currentPresenter)
 800460c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004610:	b110      	cbz	r0, 8004618 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004612:	6803      	ldr	r3, [r0, #0]
 8004614:	689b      	ldr	r3, [r3, #8]
 8004616:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004618:	68e0      	ldr	r0, [r4, #12]
 800461a:	2100      	movs	r1, #0
 800461c:	f7ff ff76 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004620:	2114      	movs	r1, #20
 8004622:	4605      	mov	r5, r0
 8004624:	f7ff ff76 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004628:	68a0      	ldr	r0, [r4, #8]
 800462a:	6803      	ldr	r3, [r0, #0]
 800462c:	2100      	movs	r1, #0
 800462e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004630:	4798      	blx	r3
 8004632:	4606      	mov	r6, r0
 8004634:	f004 fa8a 	bl	8008b4c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004638:	6860      	ldr	r0, [r4, #4]
 800463a:	6803      	ldr	r3, [r0, #0]
 800463c:	2100      	movs	r1, #0
 800463e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004640:	4798      	blx	r3
 8004642:	4631      	mov	r1, r6
 8004644:	4604      	mov	r4, r0
 8004646:	f004 fa5b 	bl	8008b00 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800464a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800464e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004652:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004656:	b1dc      	cbz	r4, 8004690 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004658:	1d23      	adds	r3, r4, #4
 800465a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800465e:	6833      	ldr	r3, [r6, #0]
 8004660:	f8c4 a008 	str.w	sl, [r4, #8]
 8004664:	4630      	mov	r0, r6
 8004666:	68db      	ldr	r3, [r3, #12]
 8004668:	63f4      	str	r4, [r6, #60]	; 0x3c
 800466a:	4798      	blx	r3
    newPresenter->activate();
 800466c:	6823      	ldr	r3, [r4, #0]
 800466e:	4620      	mov	r0, r4
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004674:	4629      	mov	r1, r5
 8004676:	4630      	mov	r0, r6
 8004678:	f013 f9fa 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800467c:	682b      	ldr	r3, [r5, #0]
 800467e:	4628      	mov	r0, r5
 8004680:	691b      	ldr	r3, [r3, #16]
 8004682:	4798      	blx	r3
    newTransition->invalidate();
 8004684:	682b      	ldr	r3, [r5, #0]
 8004686:	4628      	mov	r0, r5
 8004688:	695b      	ldr	r3, [r3, #20]
}
 800468a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800468e:	4718      	bx	r3
    model->bind(newPresenter);
 8004690:	4623      	mov	r3, r4
 8004692:	e7e2      	b.n	800465a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004694:	0802cb2c 	.word	0x0802cb2c
 8004698:	0802d3e3 	.word	0x0802d3e3
 800469c:	0802ccc8 	.word	0x0802ccc8
 80046a0:	0802cd0f 	.word	0x0802cd0f
 80046a4:	0802cdb2 	.word	0x0802cdb2
 80046a8:	2001300c 	.word	0x2001300c
 80046ac:	20013008 	.word	0x20013008

080046b0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 80046b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80046b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046ba:	68a0      	ldr	r0, [r4, #8]
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	6a1b      	ldr	r3, [r3, #32]
 80046c0:	4798      	blx	r3
 80046c2:	f5b0 5f87 	cmp.w	r0, #4320	; 0x10e0
 80046c6:	d205      	bcs.n	80046d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 80046c8:	4b42      	ldr	r3, [pc, #264]	; (80047d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 80046ca:	4a43      	ldr	r2, [pc, #268]	; (80047d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80046cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046ce:	4843      	ldr	r0, [pc, #268]	; (80047dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80046d0:	f026 fa6a 	bl	802aba8 <__assert_func>
 80046d4:	6860      	ldr	r0, [r4, #4]
 80046d6:	6803      	ldr	r3, [r0, #0]
 80046d8:	6a1b      	ldr	r3, [r3, #32]
 80046da:	4798      	blx	r3
 80046dc:	280f      	cmp	r0, #15
 80046de:	d803      	bhi.n	80046e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 80046e0:	4b3f      	ldr	r3, [pc, #252]	; (80047e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80046e2:	4a3d      	ldr	r2, [pc, #244]	; (80047d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80046e4:	21a4      	movs	r1, #164	; 0xa4
 80046e6:	e7f2      	b.n	80046ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046e8:	68e0      	ldr	r0, [r4, #12]
 80046ea:	6803      	ldr	r3, [r0, #0]
 80046ec:	6a1b      	ldr	r3, [r3, #32]
 80046ee:	4798      	blx	r3
 80046f0:	2837      	cmp	r0, #55	; 0x37
 80046f2:	d803      	bhi.n	80046fc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 80046f4:	4b3b      	ldr	r3, [pc, #236]	; (80047e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80046f6:	4a38      	ldr	r2, [pc, #224]	; (80047d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80046f8:	21a5      	movs	r1, #165	; 0xa5
 80046fa:	e7e8      	b.n	80046ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80046fc:	f011 fb8c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004700:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80047e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004704:	3004      	adds	r0, #4
 8004706:	f011 fbed 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800470a:	f8d9 0000 	ldr.w	r0, [r9]
 800470e:	b110      	cbz	r0, 8004716 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004710:	6803      	ldr	r3, [r0, #0]
 8004712:	68db      	ldr	r3, [r3, #12]
 8004714:	4798      	blx	r3
    if (*currentTrans)
 8004716:	f8d9 0000 	ldr.w	r0, [r9]
 800471a:	b110      	cbz	r0, 8004722 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800471c:	6803      	ldr	r3, [r0, #0]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4798      	blx	r3
    if (*currentScreen)
 8004722:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80047ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004726:	f8d8 0000 	ldr.w	r0, [r8]
 800472a:	b110      	cbz	r0, 8004732 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800472c:	6803      	ldr	r3, [r0, #0]
 800472e:	695b      	ldr	r3, [r3, #20]
 8004730:	4798      	blx	r3
    if (*currentPresenter)
 8004732:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004736:	b110      	cbz	r0, 800473e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004738:	6803      	ldr	r3, [r0, #0]
 800473a:	685b      	ldr	r3, [r3, #4]
 800473c:	4798      	blx	r3
    if (*currentScreen)
 800473e:	f8d8 0000 	ldr.w	r0, [r8]
 8004742:	b110      	cbz	r0, 800474a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004744:	6803      	ldr	r3, [r0, #0]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4798      	blx	r3
    if (*currentPresenter)
 800474a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800474e:	b110      	cbz	r0, 8004756 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004750:	6803      	ldr	r3, [r0, #0]
 8004752:	689b      	ldr	r3, [r3, #8]
 8004754:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004756:	68e0      	ldr	r0, [r4, #12]
 8004758:	2100      	movs	r1, #0
 800475a:	f7ff fed7 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800475e:	2114      	movs	r1, #20
 8004760:	4605      	mov	r5, r0
 8004762:	f7ff fed7 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004766:	68a0      	ldr	r0, [r4, #8]
 8004768:	6803      	ldr	r3, [r0, #0]
 800476a:	2100      	movs	r1, #0
 800476c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800476e:	4798      	blx	r3
 8004770:	4606      	mov	r6, r0
 8004772:	f003 fe1f 	bl	80083b4 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004776:	6860      	ldr	r0, [r4, #4]
 8004778:	6803      	ldr	r3, [r0, #0]
 800477a:	2100      	movs	r1, #0
 800477c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800477e:	4798      	blx	r3
 8004780:	4631      	mov	r1, r6
 8004782:	4604      	mov	r4, r0
 8004784:	f003 fdf0 	bl	8008368 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8004788:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800478c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004790:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004794:	b1dc      	cbz	r4, 80047ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 8004796:	1d23      	adds	r3, r4, #4
 8004798:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800479c:	6833      	ldr	r3, [r6, #0]
 800479e:	f8c4 a008 	str.w	sl, [r4, #8]
 80047a2:	4630      	mov	r0, r6
 80047a4:	68db      	ldr	r3, [r3, #12]
 80047a6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80047a8:	4798      	blx	r3
    newPresenter->activate();
 80047aa:	6823      	ldr	r3, [r4, #0]
 80047ac:	4620      	mov	r0, r4
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047b2:	4629      	mov	r1, r5
 80047b4:	4630      	mov	r0, r6
 80047b6:	f013 f95b 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047ba:	682b      	ldr	r3, [r5, #0]
 80047bc:	4628      	mov	r0, r5
 80047be:	691b      	ldr	r3, [r3, #16]
 80047c0:	4798      	blx	r3
    newTransition->invalidate();
 80047c2:	682b      	ldr	r3, [r5, #0]
 80047c4:	4628      	mov	r0, r5
 80047c6:	695b      	ldr	r3, [r3, #20]
}
 80047c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047cc:	4718      	bx	r3
    model->bind(newPresenter);
 80047ce:	4623      	mov	r3, r4
 80047d0:	e7e2      	b.n	8004798 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 80047d2:	bf00      	nop
 80047d4:	0802cb2c 	.word	0x0802cb2c
 80047d8:	0802d503 	.word	0x0802d503
 80047dc:	0802ccc8 	.word	0x0802ccc8
 80047e0:	0802cd0f 	.word	0x0802cd0f
 80047e4:	0802cdb2 	.word	0x0802cdb2
 80047e8:	2001300c 	.word	0x2001300c
 80047ec:	20013008 	.word	0x20013008

080047f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80047f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047fa:	68a0      	ldr	r0, [r4, #8]
 80047fc:	6803      	ldr	r3, [r0, #0]
 80047fe:	6a1b      	ldr	r3, [r3, #32]
 8004800:	4798      	blx	r3
 8004802:	f241 533b 	movw	r3, #5435	; 0x153b
 8004806:	4298      	cmp	r0, r3
 8004808:	d805      	bhi.n	8004816 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800480a:	4b42      	ldr	r3, [pc, #264]	; (8004914 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800480c:	4a42      	ldr	r2, [pc, #264]	; (8004918 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800480e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004810:	4842      	ldr	r0, [pc, #264]	; (800491c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004812:	f026 f9c9 	bl	802aba8 <__assert_func>
 8004816:	6860      	ldr	r0, [r4, #4]
 8004818:	6803      	ldr	r3, [r0, #0]
 800481a:	6a1b      	ldr	r3, [r3, #32]
 800481c:	4798      	blx	r3
 800481e:	280f      	cmp	r0, #15
 8004820:	d803      	bhi.n	800482a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004822:	4b3f      	ldr	r3, [pc, #252]	; (8004920 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004824:	4a3c      	ldr	r2, [pc, #240]	; (8004918 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004826:	21a4      	movs	r1, #164	; 0xa4
 8004828:	e7f2      	b.n	8004810 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800482a:	68e0      	ldr	r0, [r4, #12]
 800482c:	6803      	ldr	r3, [r0, #0]
 800482e:	6a1b      	ldr	r3, [r3, #32]
 8004830:	4798      	blx	r3
 8004832:	2837      	cmp	r0, #55	; 0x37
 8004834:	d803      	bhi.n	800483e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004836:	4b3b      	ldr	r3, [pc, #236]	; (8004924 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004838:	4a37      	ldr	r2, [pc, #220]	; (8004918 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800483a:	21a5      	movs	r1, #165	; 0xa5
 800483c:	e7e8      	b.n	8004810 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800483e:	f011 faeb 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004842:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004928 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004846:	3004      	adds	r0, #4
 8004848:	f011 fb4c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800484c:	f8d9 0000 	ldr.w	r0, [r9]
 8004850:	b110      	cbz	r0, 8004858 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	68db      	ldr	r3, [r3, #12]
 8004856:	4798      	blx	r3
    if (*currentTrans)
 8004858:	f8d9 0000 	ldr.w	r0, [r9]
 800485c:	b110      	cbz	r0, 8004864 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800485e:	6803      	ldr	r3, [r0, #0]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	4798      	blx	r3
    if (*currentScreen)
 8004864:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800492c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004868:	f8d8 0000 	ldr.w	r0, [r8]
 800486c:	b110      	cbz	r0, 8004874 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	695b      	ldr	r3, [r3, #20]
 8004872:	4798      	blx	r3
    if (*currentPresenter)
 8004874:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004878:	b110      	cbz	r0, 8004880 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800487a:	6803      	ldr	r3, [r0, #0]
 800487c:	685b      	ldr	r3, [r3, #4]
 800487e:	4798      	blx	r3
    if (*currentScreen)
 8004880:	f8d8 0000 	ldr.w	r0, [r8]
 8004884:	b110      	cbz	r0, 800488c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004886:	6803      	ldr	r3, [r0, #0]
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	4798      	blx	r3
    if (*currentPresenter)
 800488c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004890:	b110      	cbz	r0, 8004898 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004892:	6803      	ldr	r3, [r0, #0]
 8004894:	689b      	ldr	r3, [r3, #8]
 8004896:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004898:	68e0      	ldr	r0, [r4, #12]
 800489a:	2100      	movs	r1, #0
 800489c:	f7ff fe36 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80048a0:	2114      	movs	r1, #20
 80048a2:	4605      	mov	r5, r0
 80048a4:	f7ff fe36 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80048a8:	68a0      	ldr	r0, [r4, #8]
 80048aa:	6803      	ldr	r3, [r0, #0]
 80048ac:	2100      	movs	r1, #0
 80048ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048b0:	4798      	blx	r3
 80048b2:	4606      	mov	r6, r0
 80048b4:	f003 fdc0 	bl	8008438 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048b8:	6860      	ldr	r0, [r4, #4]
 80048ba:	6803      	ldr	r3, [r0, #0]
 80048bc:	2100      	movs	r1, #0
 80048be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048c0:	4798      	blx	r3
 80048c2:	4631      	mov	r1, r6
 80048c4:	4604      	mov	r4, r0
 80048c6:	f003 fd91 	bl	80083ec <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80048ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048d6:	b1dc      	cbz	r4, 8004910 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80048d8:	1d23      	adds	r3, r4, #4
 80048da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048de:	6833      	ldr	r3, [r6, #0]
 80048e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80048e4:	4630      	mov	r0, r6
 80048e6:	68db      	ldr	r3, [r3, #12]
 80048e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048ea:	4798      	blx	r3
    newPresenter->activate();
 80048ec:	6823      	ldr	r3, [r4, #0]
 80048ee:	4620      	mov	r0, r4
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048f4:	4629      	mov	r1, r5
 80048f6:	4630      	mov	r0, r6
 80048f8:	f013 f8ba 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048fc:	682b      	ldr	r3, [r5, #0]
 80048fe:	4628      	mov	r0, r5
 8004900:	691b      	ldr	r3, [r3, #16]
 8004902:	4798      	blx	r3
    newTransition->invalidate();
 8004904:	682b      	ldr	r3, [r5, #0]
 8004906:	4628      	mov	r0, r5
 8004908:	695b      	ldr	r3, [r3, #20]
}
 800490a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800490e:	4718      	bx	r3
    model->bind(newPresenter);
 8004910:	4623      	mov	r3, r4
 8004912:	e7e2      	b.n	80048da <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004914:	0802cb2c 	.word	0x0802cb2c
 8004918:	0802d62b 	.word	0x0802d62b
 800491c:	0802ccc8 	.word	0x0802ccc8
 8004920:	0802cd0f 	.word	0x0802cd0f
 8004924:	0802cdb2 	.word	0x0802cdb2
 8004928:	2001300c 	.word	0x2001300c
 800492c:	20013008 	.word	0x20013008

08004930 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004934:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004938:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800493a:	68a0      	ldr	r0, [r4, #8]
 800493c:	6803      	ldr	r3, [r0, #0]
 800493e:	6a1b      	ldr	r3, [r3, #32]
 8004940:	4798      	blx	r3
 8004942:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004946:	d205      	bcs.n	8004954 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004948:	4b42      	ldr	r3, [pc, #264]	; (8004a54 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800494a:	4a43      	ldr	r2, [pc, #268]	; (8004a58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800494c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800494e:	4843      	ldr	r0, [pc, #268]	; (8004a5c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004950:	f026 f92a 	bl	802aba8 <__assert_func>
 8004954:	6860      	ldr	r0, [r4, #4]
 8004956:	6803      	ldr	r3, [r0, #0]
 8004958:	6a1b      	ldr	r3, [r3, #32]
 800495a:	4798      	blx	r3
 800495c:	280f      	cmp	r0, #15
 800495e:	d803      	bhi.n	8004968 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004960:	4b3f      	ldr	r3, [pc, #252]	; (8004a60 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004962:	4a3d      	ldr	r2, [pc, #244]	; (8004a58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004964:	21a4      	movs	r1, #164	; 0xa4
 8004966:	e7f2      	b.n	800494e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004968:	68e0      	ldr	r0, [r4, #12]
 800496a:	6803      	ldr	r3, [r0, #0]
 800496c:	6a1b      	ldr	r3, [r3, #32]
 800496e:	4798      	blx	r3
 8004970:	2837      	cmp	r0, #55	; 0x37
 8004972:	d803      	bhi.n	800497c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004974:	4b3b      	ldr	r3, [pc, #236]	; (8004a64 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004976:	4a38      	ldr	r2, [pc, #224]	; (8004a58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004978:	21a5      	movs	r1, #165	; 0xa5
 800497a:	e7e8      	b.n	800494e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800497c:	f011 fa4c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004980:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a68 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004984:	3004      	adds	r0, #4
 8004986:	f011 faad 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800498a:	f8d9 0000 	ldr.w	r0, [r9]
 800498e:	b110      	cbz	r0, 8004996 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004990:	6803      	ldr	r3, [r0, #0]
 8004992:	68db      	ldr	r3, [r3, #12]
 8004994:	4798      	blx	r3
    if (*currentTrans)
 8004996:	f8d9 0000 	ldr.w	r0, [r9]
 800499a:	b110      	cbz	r0, 80049a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800499c:	6803      	ldr	r3, [r0, #0]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	4798      	blx	r3
    if (*currentScreen)
 80049a2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a6c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80049a6:	f8d8 0000 	ldr.w	r0, [r8]
 80049aa:	b110      	cbz	r0, 80049b2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049ac:	6803      	ldr	r3, [r0, #0]
 80049ae:	695b      	ldr	r3, [r3, #20]
 80049b0:	4798      	blx	r3
    if (*currentPresenter)
 80049b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049b6:	b110      	cbz	r0, 80049be <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049b8:	6803      	ldr	r3, [r0, #0]
 80049ba:	685b      	ldr	r3, [r3, #4]
 80049bc:	4798      	blx	r3
    if (*currentScreen)
 80049be:	f8d8 0000 	ldr.w	r0, [r8]
 80049c2:	b110      	cbz	r0, 80049ca <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	4798      	blx	r3
    if (*currentPresenter)
 80049ca:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049ce:	b110      	cbz	r0, 80049d6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80049d0:	6803      	ldr	r3, [r0, #0]
 80049d2:	689b      	ldr	r3, [r3, #8]
 80049d4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049d6:	68e0      	ldr	r0, [r4, #12]
 80049d8:	2100      	movs	r1, #0
 80049da:	f7ff fd97 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049de:	2114      	movs	r1, #20
 80049e0:	4605      	mov	r5, r0
 80049e2:	f7ff fd97 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049e6:	68a0      	ldr	r0, [r4, #8]
 80049e8:	6803      	ldr	r3, [r0, #0]
 80049ea:	2100      	movs	r1, #0
 80049ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049ee:	4798      	blx	r3
 80049f0:	4606      	mov	r6, r0
 80049f2:	f003 fc85 	bl	8008300 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049f6:	6860      	ldr	r0, [r4, #4]
 80049f8:	6803      	ldr	r3, [r0, #0]
 80049fa:	2100      	movs	r1, #0
 80049fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049fe:	4798      	blx	r3
 8004a00:	4631      	mov	r1, r6
 8004a02:	4604      	mov	r4, r0
 8004a04:	f003 fc56 	bl	80082b4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004a08:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a0c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a10:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a14:	b1dc      	cbz	r4, 8004a4e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004a16:	1d23      	adds	r3, r4, #4
 8004a18:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a1c:	6833      	ldr	r3, [r6, #0]
 8004a1e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a22:	4630      	mov	r0, r6
 8004a24:	68db      	ldr	r3, [r3, #12]
 8004a26:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a28:	4798      	blx	r3
    newPresenter->activate();
 8004a2a:	6823      	ldr	r3, [r4, #0]
 8004a2c:	4620      	mov	r0, r4
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a32:	4629      	mov	r1, r5
 8004a34:	4630      	mov	r0, r6
 8004a36:	f013 f81b 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a3a:	682b      	ldr	r3, [r5, #0]
 8004a3c:	4628      	mov	r0, r5
 8004a3e:	691b      	ldr	r3, [r3, #16]
 8004a40:	4798      	blx	r3
    newTransition->invalidate();
 8004a42:	682b      	ldr	r3, [r5, #0]
 8004a44:	4628      	mov	r0, r5
 8004a46:	695b      	ldr	r3, [r3, #20]
}
 8004a48:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a4c:	4718      	bx	r3
    model->bind(newPresenter);
 8004a4e:	4623      	mov	r3, r4
 8004a50:	e7e2      	b.n	8004a18 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004a52:	bf00      	nop
 8004a54:	0802cb2c 	.word	0x0802cb2c
 8004a58:	0802d751 	.word	0x0802d751
 8004a5c:	0802ccc8 	.word	0x0802ccc8
 8004a60:	0802cd0f 	.word	0x0802cd0f
 8004a64:	0802cdb2 	.word	0x0802cdb2
 8004a68:	2001300c 	.word	0x2001300c
 8004a6c:	20013008 	.word	0x20013008

08004a70 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004a70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a7a:	68a0      	ldr	r0, [r4, #8]
 8004a7c:	6803      	ldr	r3, [r0, #0]
 8004a7e:	6a1b      	ldr	r3, [r3, #32]
 8004a80:	4798      	blx	r3
 8004a82:	f241 035b 	movw	r3, #4187	; 0x105b
 8004a86:	4298      	cmp	r0, r3
 8004a88:	d805      	bhi.n	8004a96 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8004a8a:	4b42      	ldr	r3, [pc, #264]	; (8004b94 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004a8c:	4a42      	ldr	r2, [pc, #264]	; (8004b98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004a8e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a90:	4842      	ldr	r0, [pc, #264]	; (8004b9c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004a92:	f026 f889 	bl	802aba8 <__assert_func>
 8004a96:	6860      	ldr	r0, [r4, #4]
 8004a98:	6803      	ldr	r3, [r0, #0]
 8004a9a:	6a1b      	ldr	r3, [r3, #32]
 8004a9c:	4798      	blx	r3
 8004a9e:	280f      	cmp	r0, #15
 8004aa0:	d803      	bhi.n	8004aaa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004aa2:	4b3f      	ldr	r3, [pc, #252]	; (8004ba0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004aa4:	4a3c      	ldr	r2, [pc, #240]	; (8004b98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004aa6:	21a4      	movs	r1, #164	; 0xa4
 8004aa8:	e7f2      	b.n	8004a90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004aaa:	68e0      	ldr	r0, [r4, #12]
 8004aac:	6803      	ldr	r3, [r0, #0]
 8004aae:	6a1b      	ldr	r3, [r3, #32]
 8004ab0:	4798      	blx	r3
 8004ab2:	2837      	cmp	r0, #55	; 0x37
 8004ab4:	d803      	bhi.n	8004abe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004ab6:	4b3b      	ldr	r3, [pc, #236]	; (8004ba4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004ab8:	4a37      	ldr	r2, [pc, #220]	; (8004b98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004aba:	21a5      	movs	r1, #165	; 0xa5
 8004abc:	e7e8      	b.n	8004a90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004abe:	f011 f9ab 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ac2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ba8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004ac6:	3004      	adds	r0, #4
 8004ac8:	f011 fa0c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004acc:	f8d9 0000 	ldr.w	r0, [r9]
 8004ad0:	b110      	cbz	r0, 8004ad8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ad2:	6803      	ldr	r3, [r0, #0]
 8004ad4:	68db      	ldr	r3, [r3, #12]
 8004ad6:	4798      	blx	r3
    if (*currentTrans)
 8004ad8:	f8d9 0000 	ldr.w	r0, [r9]
 8004adc:	b110      	cbz	r0, 8004ae4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004ade:	6803      	ldr	r3, [r0, #0]
 8004ae0:	681b      	ldr	r3, [r3, #0]
 8004ae2:	4798      	blx	r3
    if (*currentScreen)
 8004ae4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004bac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004ae8:	f8d8 0000 	ldr.w	r0, [r8]
 8004aec:	b110      	cbz	r0, 8004af4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004aee:	6803      	ldr	r3, [r0, #0]
 8004af0:	695b      	ldr	r3, [r3, #20]
 8004af2:	4798      	blx	r3
    if (*currentPresenter)
 8004af4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004af8:	b110      	cbz	r0, 8004b00 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004afa:	6803      	ldr	r3, [r0, #0]
 8004afc:	685b      	ldr	r3, [r3, #4]
 8004afe:	4798      	blx	r3
    if (*currentScreen)
 8004b00:	f8d8 0000 	ldr.w	r0, [r8]
 8004b04:	b110      	cbz	r0, 8004b0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b06:	6803      	ldr	r3, [r0, #0]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	4798      	blx	r3
    if (*currentPresenter)
 8004b0c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b10:	b110      	cbz	r0, 8004b18 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b12:	6803      	ldr	r3, [r0, #0]
 8004b14:	689b      	ldr	r3, [r3, #8]
 8004b16:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b18:	68e0      	ldr	r0, [r4, #12]
 8004b1a:	2100      	movs	r1, #0
 8004b1c:	f7ff fcf6 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b20:	2114      	movs	r1, #20
 8004b22:	4605      	mov	r5, r0
 8004b24:	f7ff fcf6 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b28:	68a0      	ldr	r0, [r4, #8]
 8004b2a:	6803      	ldr	r3, [r0, #0]
 8004b2c:	2100      	movs	r1, #0
 8004b2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b30:	4798      	blx	r3
 8004b32:	4606      	mov	r6, r0
 8004b34:	f003 fe62 	bl	80087fc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b38:	6860      	ldr	r0, [r4, #4]
 8004b3a:	6803      	ldr	r3, [r0, #0]
 8004b3c:	2100      	movs	r1, #0
 8004b3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b40:	4798      	blx	r3
 8004b42:	4631      	mov	r1, r6
 8004b44:	4604      	mov	r4, r0
 8004b46:	f003 fe33 	bl	80087b0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8004b4a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b4e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b52:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b56:	b1dc      	cbz	r4, 8004b90 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004b58:	1d23      	adds	r3, r4, #4
 8004b5a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b5e:	6833      	ldr	r3, [r6, #0]
 8004b60:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b64:	4630      	mov	r0, r6
 8004b66:	68db      	ldr	r3, [r3, #12]
 8004b68:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b6a:	4798      	blx	r3
    newPresenter->activate();
 8004b6c:	6823      	ldr	r3, [r4, #0]
 8004b6e:	4620      	mov	r0, r4
 8004b70:	681b      	ldr	r3, [r3, #0]
 8004b72:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b74:	4629      	mov	r1, r5
 8004b76:	4630      	mov	r0, r6
 8004b78:	f012 ff7a 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b7c:	682b      	ldr	r3, [r5, #0]
 8004b7e:	4628      	mov	r0, r5
 8004b80:	691b      	ldr	r3, [r3, #16]
 8004b82:	4798      	blx	r3
    newTransition->invalidate();
 8004b84:	682b      	ldr	r3, [r5, #0]
 8004b86:	4628      	mov	r0, r5
 8004b88:	695b      	ldr	r3, [r3, #20]
}
 8004b8a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b8e:	4718      	bx	r3
    model->bind(newPresenter);
 8004b90:	4623      	mov	r3, r4
 8004b92:	e7e2      	b.n	8004b5a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004b94:	0802cb2c 	.word	0x0802cb2c
 8004b98:	0802d86f 	.word	0x0802d86f
 8004b9c:	0802ccc8 	.word	0x0802ccc8
 8004ba0:	0802cd0f 	.word	0x0802cd0f
 8004ba4:	0802cdb2 	.word	0x0802cdb2
 8004ba8:	2001300c 	.word	0x2001300c
 8004bac:	20013008 	.word	0x20013008

08004bb0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bb4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bb8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bba:	68a0      	ldr	r0, [r4, #8]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	6a1b      	ldr	r3, [r3, #32]
 8004bc0:	4798      	blx	r3
 8004bc2:	f241 035b 	movw	r3, #4187	; 0x105b
 8004bc6:	4298      	cmp	r0, r3
 8004bc8:	d805      	bhi.n	8004bd6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004bca:	4b42      	ldr	r3, [pc, #264]	; (8004cd4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004bcc:	4a42      	ldr	r2, [pc, #264]	; (8004cd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004bce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bd0:	4842      	ldr	r0, [pc, #264]	; (8004cdc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8004bd2:	f025 ffe9 	bl	802aba8 <__assert_func>
 8004bd6:	6860      	ldr	r0, [r4, #4]
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	6a1b      	ldr	r3, [r3, #32]
 8004bdc:	4798      	blx	r3
 8004bde:	280f      	cmp	r0, #15
 8004be0:	d803      	bhi.n	8004bea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8004be2:	4b3f      	ldr	r3, [pc, #252]	; (8004ce0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004be4:	4a3c      	ldr	r2, [pc, #240]	; (8004cd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004be6:	21a4      	movs	r1, #164	; 0xa4
 8004be8:	e7f2      	b.n	8004bd0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bea:	68e0      	ldr	r0, [r4, #12]
 8004bec:	6803      	ldr	r3, [r0, #0]
 8004bee:	6a1b      	ldr	r3, [r3, #32]
 8004bf0:	4798      	blx	r3
 8004bf2:	2837      	cmp	r0, #55	; 0x37
 8004bf4:	d803      	bhi.n	8004bfe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004bf6:	4b3b      	ldr	r3, [pc, #236]	; (8004ce4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004bf8:	4a37      	ldr	r2, [pc, #220]	; (8004cd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004bfa:	21a5      	movs	r1, #165	; 0xa5
 8004bfc:	e7e8      	b.n	8004bd0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bfe:	f011 f90b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c02:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ce8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004c06:	3004      	adds	r0, #4
 8004c08:	f011 f96c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c0c:	f8d9 0000 	ldr.w	r0, [r9]
 8004c10:	b110      	cbz	r0, 8004c18 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c12:	6803      	ldr	r3, [r0, #0]
 8004c14:	68db      	ldr	r3, [r3, #12]
 8004c16:	4798      	blx	r3
    if (*currentTrans)
 8004c18:	f8d9 0000 	ldr.w	r0, [r9]
 8004c1c:	b110      	cbz	r0, 8004c24 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c1e:	6803      	ldr	r3, [r0, #0]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	4798      	blx	r3
    if (*currentScreen)
 8004c24:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004cec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004c28:	f8d8 0000 	ldr.w	r0, [r8]
 8004c2c:	b110      	cbz	r0, 8004c34 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c2e:	6803      	ldr	r3, [r0, #0]
 8004c30:	695b      	ldr	r3, [r3, #20]
 8004c32:	4798      	blx	r3
    if (*currentPresenter)
 8004c34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c38:	b110      	cbz	r0, 8004c40 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c3a:	6803      	ldr	r3, [r0, #0]
 8004c3c:	685b      	ldr	r3, [r3, #4]
 8004c3e:	4798      	blx	r3
    if (*currentScreen)
 8004c40:	f8d8 0000 	ldr.w	r0, [r8]
 8004c44:	b110      	cbz	r0, 8004c4c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c46:	6803      	ldr	r3, [r0, #0]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4798      	blx	r3
    if (*currentPresenter)
 8004c4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c50:	b110      	cbz	r0, 8004c58 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c52:	6803      	ldr	r3, [r0, #0]
 8004c54:	689b      	ldr	r3, [r3, #8]
 8004c56:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c58:	68e0      	ldr	r0, [r4, #12]
 8004c5a:	2100      	movs	r1, #0
 8004c5c:	f7ff fc56 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c60:	2114      	movs	r1, #20
 8004c62:	4605      	mov	r5, r0
 8004c64:	f7ff fc56 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c68:	68a0      	ldr	r0, [r4, #8]
 8004c6a:	6803      	ldr	r3, [r0, #0]
 8004c6c:	2100      	movs	r1, #0
 8004c6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c70:	4798      	blx	r3
 8004c72:	4606      	mov	r6, r0
 8004c74:	f003 fd80 	bl	8008778 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c78:	6860      	ldr	r0, [r4, #4]
 8004c7a:	6803      	ldr	r3, [r0, #0]
 8004c7c:	2100      	movs	r1, #0
 8004c7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c80:	4798      	blx	r3
 8004c82:	4631      	mov	r1, r6
 8004c84:	4604      	mov	r4, r0
 8004c86:	f003 fd51 	bl	800872c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8004c8a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c8e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c92:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c96:	b1dc      	cbz	r4, 8004cd0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004c98:	1d23      	adds	r3, r4, #4
 8004c9a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c9e:	6833      	ldr	r3, [r6, #0]
 8004ca0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ca4:	4630      	mov	r0, r6
 8004ca6:	68db      	ldr	r3, [r3, #12]
 8004ca8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004caa:	4798      	blx	r3
    newPresenter->activate();
 8004cac:	6823      	ldr	r3, [r4, #0]
 8004cae:	4620      	mov	r0, r4
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cb4:	4629      	mov	r1, r5
 8004cb6:	4630      	mov	r0, r6
 8004cb8:	f012 feda 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cbc:	682b      	ldr	r3, [r5, #0]
 8004cbe:	4628      	mov	r0, r5
 8004cc0:	691b      	ldr	r3, [r3, #16]
 8004cc2:	4798      	blx	r3
    newTransition->invalidate();
 8004cc4:	682b      	ldr	r3, [r5, #0]
 8004cc6:	4628      	mov	r0, r5
 8004cc8:	695b      	ldr	r3, [r3, #20]
}
 8004cca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cce:	4718      	bx	r3
    model->bind(newPresenter);
 8004cd0:	4623      	mov	r3, r4
 8004cd2:	e7e2      	b.n	8004c9a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004cd4:	0802cb2c 	.word	0x0802cb2c
 8004cd8:	0802d9b3 	.word	0x0802d9b3
 8004cdc:	0802ccc8 	.word	0x0802ccc8
 8004ce0:	0802cd0f 	.word	0x0802cd0f
 8004ce4:	0802cdb2 	.word	0x0802cdb2
 8004ce8:	2001300c 	.word	0x2001300c
 8004cec:	20013008 	.word	0x20013008

08004cf0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8004cf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cf4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cf8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cfa:	68a0      	ldr	r0, [r4, #8]
 8004cfc:	6803      	ldr	r3, [r0, #0]
 8004cfe:	6a1b      	ldr	r3, [r3, #32]
 8004d00:	4798      	blx	r3
 8004d02:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d06:	d205      	bcs.n	8004d14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004d08:	4b42      	ldr	r3, [pc, #264]	; (8004e14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004d0a:	4a43      	ldr	r2, [pc, #268]	; (8004e18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004d0c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d0e:	4843      	ldr	r0, [pc, #268]	; (8004e1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8004d10:	f025 ff4a 	bl	802aba8 <__assert_func>
 8004d14:	6860      	ldr	r0, [r4, #4]
 8004d16:	6803      	ldr	r3, [r0, #0]
 8004d18:	6a1b      	ldr	r3, [r3, #32]
 8004d1a:	4798      	blx	r3
 8004d1c:	280f      	cmp	r0, #15
 8004d1e:	d803      	bhi.n	8004d28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8004d20:	4b3f      	ldr	r3, [pc, #252]	; (8004e20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8004d22:	4a3d      	ldr	r2, [pc, #244]	; (8004e18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004d24:	21a4      	movs	r1, #164	; 0xa4
 8004d26:	e7f2      	b.n	8004d0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d28:	68e0      	ldr	r0, [r4, #12]
 8004d2a:	6803      	ldr	r3, [r0, #0]
 8004d2c:	6a1b      	ldr	r3, [r3, #32]
 8004d2e:	4798      	blx	r3
 8004d30:	2837      	cmp	r0, #55	; 0x37
 8004d32:	d803      	bhi.n	8004d3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004d34:	4b3b      	ldr	r3, [pc, #236]	; (8004e24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004d36:	4a38      	ldr	r2, [pc, #224]	; (8004e18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004d38:	21a5      	movs	r1, #165	; 0xa5
 8004d3a:	e7e8      	b.n	8004d0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d3c:	f011 f86c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d40:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004d44:	3004      	adds	r0, #4
 8004d46:	f011 f8cd 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d4a:	f8d9 0000 	ldr.w	r0, [r9]
 8004d4e:	b110      	cbz	r0, 8004d56 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d50:	6803      	ldr	r3, [r0, #0]
 8004d52:	68db      	ldr	r3, [r3, #12]
 8004d54:	4798      	blx	r3
    if (*currentTrans)
 8004d56:	f8d9 0000 	ldr.w	r0, [r9]
 8004d5a:	b110      	cbz	r0, 8004d62 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	4798      	blx	r3
    if (*currentScreen)
 8004d62:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e2c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004d66:	f8d8 0000 	ldr.w	r0, [r8]
 8004d6a:	b110      	cbz	r0, 8004d72 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d6c:	6803      	ldr	r3, [r0, #0]
 8004d6e:	695b      	ldr	r3, [r3, #20]
 8004d70:	4798      	blx	r3
    if (*currentPresenter)
 8004d72:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d76:	b110      	cbz	r0, 8004d7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d78:	6803      	ldr	r3, [r0, #0]
 8004d7a:	685b      	ldr	r3, [r3, #4]
 8004d7c:	4798      	blx	r3
    if (*currentScreen)
 8004d7e:	f8d8 0000 	ldr.w	r0, [r8]
 8004d82:	b110      	cbz	r0, 8004d8a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d84:	6803      	ldr	r3, [r0, #0]
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	4798      	blx	r3
    if (*currentPresenter)
 8004d8a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d8e:	b110      	cbz	r0, 8004d96 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d90:	6803      	ldr	r3, [r0, #0]
 8004d92:	689b      	ldr	r3, [r3, #8]
 8004d94:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d96:	68e0      	ldr	r0, [r4, #12]
 8004d98:	2100      	movs	r1, #0
 8004d9a:	f7ff fbb7 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d9e:	2114      	movs	r1, #20
 8004da0:	4605      	mov	r5, r0
 8004da2:	f7ff fbb7 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004da6:	68a0      	ldr	r0, [r4, #8]
 8004da8:	6803      	ldr	r3, [r0, #0]
 8004daa:	2100      	movs	r1, #0
 8004dac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dae:	4798      	blx	r3
 8004db0:	4606      	mov	r6, r0
 8004db2:	f003 fc87 	bl	80086c4 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004db6:	6860      	ldr	r0, [r4, #4]
 8004db8:	6803      	ldr	r3, [r0, #0]
 8004dba:	2100      	movs	r1, #0
 8004dbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dbe:	4798      	blx	r3
 8004dc0:	4631      	mov	r1, r6
 8004dc2:	4604      	mov	r4, r0
 8004dc4:	f003 fc58 	bl	8008678 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004dc8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dcc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dd0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dd4:	b1dc      	cbz	r4, 8004e0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004dd6:	1d23      	adds	r3, r4, #4
 8004dd8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ddc:	6833      	ldr	r3, [r6, #0]
 8004dde:	f8c4 a008 	str.w	sl, [r4, #8]
 8004de2:	4630      	mov	r0, r6
 8004de4:	68db      	ldr	r3, [r3, #12]
 8004de6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004de8:	4798      	blx	r3
    newPresenter->activate();
 8004dea:	6823      	ldr	r3, [r4, #0]
 8004dec:	4620      	mov	r0, r4
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004df2:	4629      	mov	r1, r5
 8004df4:	4630      	mov	r0, r6
 8004df6:	f012 fe3b 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004dfa:	682b      	ldr	r3, [r5, #0]
 8004dfc:	4628      	mov	r0, r5
 8004dfe:	691b      	ldr	r3, [r3, #16]
 8004e00:	4798      	blx	r3
    newTransition->invalidate();
 8004e02:	682b      	ldr	r3, [r5, #0]
 8004e04:	4628      	mov	r0, r5
 8004e06:	695b      	ldr	r3, [r3, #20]
}
 8004e08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e0c:	4718      	bx	r3
    model->bind(newPresenter);
 8004e0e:	4623      	mov	r3, r4
 8004e10:	e7e2      	b.n	8004dd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004e12:	bf00      	nop
 8004e14:	0802cb2c 	.word	0x0802cb2c
 8004e18:	0802daf3 	.word	0x0802daf3
 8004e1c:	0802ccc8 	.word	0x0802ccc8
 8004e20:	0802cd0f 	.word	0x0802cd0f
 8004e24:	0802cdb2 	.word	0x0802cdb2
 8004e28:	2001300c 	.word	0x2001300c
 8004e2c:	20013008 	.word	0x20013008

08004e30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e34:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e3a:	68a0      	ldr	r0, [r4, #8]
 8004e3c:	6803      	ldr	r3, [r0, #0]
 8004e3e:	6a1b      	ldr	r3, [r3, #32]
 8004e40:	4798      	blx	r3
 8004e42:	f241 035b 	movw	r3, #4187	; 0x105b
 8004e46:	4298      	cmp	r0, r3
 8004e48:	d805      	bhi.n	8004e56 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004e4a:	4b42      	ldr	r3, [pc, #264]	; (8004f54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004e4c:	4a42      	ldr	r2, [pc, #264]	; (8004f58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004e4e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e50:	4842      	ldr	r0, [pc, #264]	; (8004f5c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004e52:	f025 fea9 	bl	802aba8 <__assert_func>
 8004e56:	6860      	ldr	r0, [r4, #4]
 8004e58:	6803      	ldr	r3, [r0, #0]
 8004e5a:	6a1b      	ldr	r3, [r3, #32]
 8004e5c:	4798      	blx	r3
 8004e5e:	280f      	cmp	r0, #15
 8004e60:	d803      	bhi.n	8004e6a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004e62:	4b3f      	ldr	r3, [pc, #252]	; (8004f60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004e64:	4a3c      	ldr	r2, [pc, #240]	; (8004f58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004e66:	21a4      	movs	r1, #164	; 0xa4
 8004e68:	e7f2      	b.n	8004e50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e6a:	68e0      	ldr	r0, [r4, #12]
 8004e6c:	6803      	ldr	r3, [r0, #0]
 8004e6e:	6a1b      	ldr	r3, [r3, #32]
 8004e70:	4798      	blx	r3
 8004e72:	2837      	cmp	r0, #55	; 0x37
 8004e74:	d803      	bhi.n	8004e7e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004e76:	4b3b      	ldr	r3, [pc, #236]	; (8004f64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004e78:	4a37      	ldr	r2, [pc, #220]	; (8004f58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004e7a:	21a5      	movs	r1, #165	; 0xa5
 8004e7c:	e7e8      	b.n	8004e50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e7e:	f010 ffcb 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e82:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004e86:	3004      	adds	r0, #4
 8004e88:	f011 f82c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e8c:	f8d9 0000 	ldr.w	r0, [r9]
 8004e90:	b110      	cbz	r0, 8004e98 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e92:	6803      	ldr	r3, [r0, #0]
 8004e94:	68db      	ldr	r3, [r3, #12]
 8004e96:	4798      	blx	r3
    if (*currentTrans)
 8004e98:	f8d9 0000 	ldr.w	r0, [r9]
 8004e9c:	b110      	cbz	r0, 8004ea4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004e9e:	6803      	ldr	r3, [r0, #0]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	4798      	blx	r3
    if (*currentScreen)
 8004ea4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004ea8:	f8d8 0000 	ldr.w	r0, [r8]
 8004eac:	b110      	cbz	r0, 8004eb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004eae:	6803      	ldr	r3, [r0, #0]
 8004eb0:	695b      	ldr	r3, [r3, #20]
 8004eb2:	4798      	blx	r3
    if (*currentPresenter)
 8004eb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eb8:	b110      	cbz	r0, 8004ec0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004eba:	6803      	ldr	r3, [r0, #0]
 8004ebc:	685b      	ldr	r3, [r3, #4]
 8004ebe:	4798      	blx	r3
    if (*currentScreen)
 8004ec0:	f8d8 0000 	ldr.w	r0, [r8]
 8004ec4:	b110      	cbz	r0, 8004ecc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ec6:	6803      	ldr	r3, [r0, #0]
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	4798      	blx	r3
    if (*currentPresenter)
 8004ecc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ed0:	b110      	cbz	r0, 8004ed8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ed2:	6803      	ldr	r3, [r0, #0]
 8004ed4:	689b      	ldr	r3, [r3, #8]
 8004ed6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ed8:	68e0      	ldr	r0, [r4, #12]
 8004eda:	2100      	movs	r1, #0
 8004edc:	f7ff fb16 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ee0:	2114      	movs	r1, #20
 8004ee2:	4605      	mov	r5, r0
 8004ee4:	f7ff fb16 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ee8:	68a0      	ldr	r0, [r4, #8]
 8004eea:	6803      	ldr	r3, [r0, #0]
 8004eec:	2100      	movs	r1, #0
 8004eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ef0:	4798      	blx	r3
 8004ef2:	4606      	mov	r6, r0
 8004ef4:	f003 fdc4 	bl	8008a80 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ef8:	6860      	ldr	r0, [r4, #4]
 8004efa:	6803      	ldr	r3, [r0, #0]
 8004efc:	2100      	movs	r1, #0
 8004efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f00:	4798      	blx	r3
 8004f02:	4631      	mov	r1, r6
 8004f04:	4604      	mov	r4, r0
 8004f06:	f003 fd95 	bl	8008a34 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004f0a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f0e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f12:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f16:	b1dc      	cbz	r4, 8004f50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004f18:	1d23      	adds	r3, r4, #4
 8004f1a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f1e:	6833      	ldr	r3, [r6, #0]
 8004f20:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f24:	4630      	mov	r0, r6
 8004f26:	68db      	ldr	r3, [r3, #12]
 8004f28:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f2a:	4798      	blx	r3
    newPresenter->activate();
 8004f2c:	6823      	ldr	r3, [r4, #0]
 8004f2e:	4620      	mov	r0, r4
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f34:	4629      	mov	r1, r5
 8004f36:	4630      	mov	r0, r6
 8004f38:	f012 fd9a 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f3c:	682b      	ldr	r3, [r5, #0]
 8004f3e:	4628      	mov	r0, r5
 8004f40:	691b      	ldr	r3, [r3, #16]
 8004f42:	4798      	blx	r3
    newTransition->invalidate();
 8004f44:	682b      	ldr	r3, [r5, #0]
 8004f46:	4628      	mov	r0, r5
 8004f48:	695b      	ldr	r3, [r3, #20]
}
 8004f4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f4e:	4718      	bx	r3
    model->bind(newPresenter);
 8004f50:	4623      	mov	r3, r4
 8004f52:	e7e2      	b.n	8004f1a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004f54:	0802cb2c 	.word	0x0802cb2c
 8004f58:	0802dc23 	.word	0x0802dc23
 8004f5c:	0802ccc8 	.word	0x0802ccc8
 8004f60:	0802cd0f 	.word	0x0802cd0f
 8004f64:	0802cdb2 	.word	0x0802cdb2
 8004f68:	2001300c 	.word	0x2001300c
 8004f6c:	20013008 	.word	0x20013008

08004f70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f74:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f7a:	68a0      	ldr	r0, [r4, #8]
 8004f7c:	6803      	ldr	r3, [r0, #0]
 8004f7e:	6a1b      	ldr	r3, [r3, #32]
 8004f80:	4798      	blx	r3
 8004f82:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004f86:	4298      	cmp	r0, r3
 8004f88:	d805      	bhi.n	8004f96 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004f8a:	4b42      	ldr	r3, [pc, #264]	; (8005094 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004f8c:	4a42      	ldr	r2, [pc, #264]	; (8005098 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004f8e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f90:	4842      	ldr	r0, [pc, #264]	; (800509c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004f92:	f025 fe09 	bl	802aba8 <__assert_func>
 8004f96:	6860      	ldr	r0, [r4, #4]
 8004f98:	6803      	ldr	r3, [r0, #0]
 8004f9a:	6a1b      	ldr	r3, [r3, #32]
 8004f9c:	4798      	blx	r3
 8004f9e:	280f      	cmp	r0, #15
 8004fa0:	d803      	bhi.n	8004faa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004fa2:	4b3f      	ldr	r3, [pc, #252]	; (80050a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004fa4:	4a3c      	ldr	r2, [pc, #240]	; (8005098 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004fa6:	21a4      	movs	r1, #164	; 0xa4
 8004fa8:	e7f2      	b.n	8004f90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004faa:	68e0      	ldr	r0, [r4, #12]
 8004fac:	6803      	ldr	r3, [r0, #0]
 8004fae:	6a1b      	ldr	r3, [r3, #32]
 8004fb0:	4798      	blx	r3
 8004fb2:	2837      	cmp	r0, #55	; 0x37
 8004fb4:	d803      	bhi.n	8004fbe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004fb6:	4b3b      	ldr	r3, [pc, #236]	; (80050a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004fb8:	4a37      	ldr	r2, [pc, #220]	; (8005098 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004fba:	21a5      	movs	r1, #165	; 0xa5
 8004fbc:	e7e8      	b.n	8004f90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004fbe:	f010 ff2b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004fc2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80050a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004fc6:	3004      	adds	r0, #4
 8004fc8:	f010 ff8c 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8004fd0:	b110      	cbz	r0, 8004fd8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004fd2:	6803      	ldr	r3, [r0, #0]
 8004fd4:	68db      	ldr	r3, [r3, #12]
 8004fd6:	4798      	blx	r3
    if (*currentTrans)
 8004fd8:	f8d9 0000 	ldr.w	r0, [r9]
 8004fdc:	b110      	cbz	r0, 8004fe4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004fde:	6803      	ldr	r3, [r0, #0]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	4798      	blx	r3
    if (*currentScreen)
 8004fe4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80050ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8004fec:	b110      	cbz	r0, 8004ff4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004fee:	6803      	ldr	r3, [r0, #0]
 8004ff0:	695b      	ldr	r3, [r3, #20]
 8004ff2:	4798      	blx	r3
    if (*currentPresenter)
 8004ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ff8:	b110      	cbz	r0, 8005000 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004ffa:	6803      	ldr	r3, [r0, #0]
 8004ffc:	685b      	ldr	r3, [r3, #4]
 8004ffe:	4798      	blx	r3
    if (*currentScreen)
 8005000:	f8d8 0000 	ldr.w	r0, [r8]
 8005004:	b110      	cbz	r0, 800500c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005006:	6803      	ldr	r3, [r0, #0]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	4798      	blx	r3
    if (*currentPresenter)
 800500c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005010:	b110      	cbz	r0, 8005018 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005012:	6803      	ldr	r3, [r0, #0]
 8005014:	689b      	ldr	r3, [r3, #8]
 8005016:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005018:	68e0      	ldr	r0, [r4, #12]
 800501a:	2100      	movs	r1, #0
 800501c:	f7ff fa76 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005020:	2114      	movs	r1, #20
 8005022:	4605      	mov	r5, r0
 8005024:	f7ff fa76 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005028:	68a0      	ldr	r0, [r4, #8]
 800502a:	6803      	ldr	r3, [r0, #0]
 800502c:	2100      	movs	r1, #0
 800502e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005030:	4798      	blx	r3
 8005032:	4606      	mov	r6, r0
 8005034:	f003 fc84 	bl	8008940 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005038:	6860      	ldr	r0, [r4, #4]
 800503a:	6803      	ldr	r3, [r0, #0]
 800503c:	2100      	movs	r1, #0
 800503e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005040:	4798      	blx	r3
 8005042:	4631      	mov	r1, r6
 8005044:	4604      	mov	r4, r0
 8005046:	f003 fc55 	bl	80088f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800504a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800504e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005052:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005056:	b1dc      	cbz	r4, 8005090 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005058:	1d23      	adds	r3, r4, #4
 800505a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800505e:	6833      	ldr	r3, [r6, #0]
 8005060:	f8c4 a008 	str.w	sl, [r4, #8]
 8005064:	4630      	mov	r0, r6
 8005066:	68db      	ldr	r3, [r3, #12]
 8005068:	63f4      	str	r4, [r6, #60]	; 0x3c
 800506a:	4798      	blx	r3
    newPresenter->activate();
 800506c:	6823      	ldr	r3, [r4, #0]
 800506e:	4620      	mov	r0, r4
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005074:	4629      	mov	r1, r5
 8005076:	4630      	mov	r0, r6
 8005078:	f012 fcfa 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800507c:	682b      	ldr	r3, [r5, #0]
 800507e:	4628      	mov	r0, r5
 8005080:	691b      	ldr	r3, [r3, #16]
 8005082:	4798      	blx	r3
    newTransition->invalidate();
 8005084:	682b      	ldr	r3, [r5, #0]
 8005086:	4628      	mov	r0, r5
 8005088:	695b      	ldr	r3, [r3, #20]
}
 800508a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800508e:	4718      	bx	r3
    model->bind(newPresenter);
 8005090:	4623      	mov	r3, r4
 8005092:	e7e2      	b.n	800505a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005094:	0802cb2c 	.word	0x0802cb2c
 8005098:	0802dd65 	.word	0x0802dd65
 800509c:	0802ccc8 	.word	0x0802ccc8
 80050a0:	0802cd0f 	.word	0x0802cd0f
 80050a4:	0802cdb2 	.word	0x0802cdb2
 80050a8:	2001300c 	.word	0x2001300c
 80050ac:	20013008 	.word	0x20013008

080050b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80050b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80050b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80050ba:	68a0      	ldr	r0, [r4, #8]
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	6a1b      	ldr	r3, [r3, #32]
 80050c0:	4798      	blx	r3
 80050c2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80050c6:	d205      	bcs.n	80050d4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80050c8:	4b42      	ldr	r3, [pc, #264]	; (80051d4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80050ca:	4a43      	ldr	r2, [pc, #268]	; (80051d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80050cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050ce:	4843      	ldr	r0, [pc, #268]	; (80051dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80050d0:	f025 fd6a 	bl	802aba8 <__assert_func>
 80050d4:	6860      	ldr	r0, [r4, #4]
 80050d6:	6803      	ldr	r3, [r0, #0]
 80050d8:	6a1b      	ldr	r3, [r3, #32]
 80050da:	4798      	blx	r3
 80050dc:	280f      	cmp	r0, #15
 80050de:	d803      	bhi.n	80050e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80050e0:	4b3f      	ldr	r3, [pc, #252]	; (80051e0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80050e2:	4a3d      	ldr	r2, [pc, #244]	; (80051d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80050e4:	21a4      	movs	r1, #164	; 0xa4
 80050e6:	e7f2      	b.n	80050ce <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050e8:	68e0      	ldr	r0, [r4, #12]
 80050ea:	6803      	ldr	r3, [r0, #0]
 80050ec:	6a1b      	ldr	r3, [r3, #32]
 80050ee:	4798      	blx	r3
 80050f0:	2837      	cmp	r0, #55	; 0x37
 80050f2:	d803      	bhi.n	80050fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80050f4:	4b3b      	ldr	r3, [pc, #236]	; (80051e4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80050f6:	4a38      	ldr	r2, [pc, #224]	; (80051d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80050f8:	21a5      	movs	r1, #165	; 0xa5
 80050fa:	e7e8      	b.n	80050ce <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80050fc:	f010 fe8c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005100:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005104:	3004      	adds	r0, #4
 8005106:	f010 feed 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800510a:	f8d9 0000 	ldr.w	r0, [r9]
 800510e:	b110      	cbz	r0, 8005116 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005110:	6803      	ldr	r3, [r0, #0]
 8005112:	68db      	ldr	r3, [r3, #12]
 8005114:	4798      	blx	r3
    if (*currentTrans)
 8005116:	f8d9 0000 	ldr.w	r0, [r9]
 800511a:	b110      	cbz	r0, 8005122 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800511c:	6803      	ldr	r3, [r0, #0]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	4798      	blx	r3
    if (*currentScreen)
 8005122:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80051ec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005126:	f8d8 0000 	ldr.w	r0, [r8]
 800512a:	b110      	cbz	r0, 8005132 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800512c:	6803      	ldr	r3, [r0, #0]
 800512e:	695b      	ldr	r3, [r3, #20]
 8005130:	4798      	blx	r3
    if (*currentPresenter)
 8005132:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005136:	b110      	cbz	r0, 800513e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005138:	6803      	ldr	r3, [r0, #0]
 800513a:	685b      	ldr	r3, [r3, #4]
 800513c:	4798      	blx	r3
    if (*currentScreen)
 800513e:	f8d8 0000 	ldr.w	r0, [r8]
 8005142:	b110      	cbz	r0, 800514a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005144:	6803      	ldr	r3, [r0, #0]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	4798      	blx	r3
    if (*currentPresenter)
 800514a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800514e:	b110      	cbz	r0, 8005156 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005150:	6803      	ldr	r3, [r0, #0]
 8005152:	689b      	ldr	r3, [r3, #8]
 8005154:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005156:	68e0      	ldr	r0, [r4, #12]
 8005158:	2100      	movs	r1, #0
 800515a:	f7ff f9d7 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800515e:	2114      	movs	r1, #20
 8005160:	4605      	mov	r5, r0
 8005162:	f7ff f9d7 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005166:	68a0      	ldr	r0, [r4, #8]
 8005168:	6803      	ldr	r3, [r0, #0]
 800516a:	2100      	movs	r1, #0
 800516c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800516e:	4798      	blx	r3
 8005170:	4606      	mov	r6, r0
 8005172:	f003 fb8b 	bl	800888c <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005176:	6860      	ldr	r0, [r4, #4]
 8005178:	6803      	ldr	r3, [r0, #0]
 800517a:	2100      	movs	r1, #0
 800517c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800517e:	4798      	blx	r3
 8005180:	4631      	mov	r1, r6
 8005182:	4604      	mov	r4, r0
 8005184:	f003 fb5c 	bl	8008840 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005188:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800518c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005190:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005194:	b1dc      	cbz	r4, 80051ce <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005196:	1d23      	adds	r3, r4, #4
 8005198:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800519c:	6833      	ldr	r3, [r6, #0]
 800519e:	f8c4 a008 	str.w	sl, [r4, #8]
 80051a2:	4630      	mov	r0, r6
 80051a4:	68db      	ldr	r3, [r3, #12]
 80051a6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051a8:	4798      	blx	r3
    newPresenter->activate();
 80051aa:	6823      	ldr	r3, [r4, #0]
 80051ac:	4620      	mov	r0, r4
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051b2:	4629      	mov	r1, r5
 80051b4:	4630      	mov	r0, r6
 80051b6:	f012 fc5b 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80051ba:	682b      	ldr	r3, [r5, #0]
 80051bc:	4628      	mov	r0, r5
 80051be:	691b      	ldr	r3, [r3, #16]
 80051c0:	4798      	blx	r3
    newTransition->invalidate();
 80051c2:	682b      	ldr	r3, [r5, #0]
 80051c4:	4628      	mov	r0, r5
 80051c6:	695b      	ldr	r3, [r3, #20]
}
 80051c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051cc:	4718      	bx	r3
    model->bind(newPresenter);
 80051ce:	4623      	mov	r3, r4
 80051d0:	e7e2      	b.n	8005198 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80051d2:	bf00      	nop
 80051d4:	0802cb2c 	.word	0x0802cb2c
 80051d8:	0802dea7 	.word	0x0802dea7
 80051dc:	0802ccc8 	.word	0x0802ccc8
 80051e0:	0802cd0f 	.word	0x0802cd0f
 80051e4:	0802cdb2 	.word	0x0802cdb2
 80051e8:	2001300c 	.word	0x2001300c
 80051ec:	20013008 	.word	0x20013008

080051f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80051f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051fa:	68a0      	ldr	r0, [r4, #8]
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	6a1b      	ldr	r3, [r3, #32]
 8005200:	4798      	blx	r3
 8005202:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005206:	d205      	bcs.n	8005214 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005208:	4b42      	ldr	r3, [pc, #264]	; (8005314 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 800520a:	4a43      	ldr	r2, [pc, #268]	; (8005318 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800520c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800520e:	4843      	ldr	r0, [pc, #268]	; (800531c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005210:	f025 fcca 	bl	802aba8 <__assert_func>
 8005214:	6860      	ldr	r0, [r4, #4]
 8005216:	6803      	ldr	r3, [r0, #0]
 8005218:	6a1b      	ldr	r3, [r3, #32]
 800521a:	4798      	blx	r3
 800521c:	280f      	cmp	r0, #15
 800521e:	d803      	bhi.n	8005228 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005220:	4b3f      	ldr	r3, [pc, #252]	; (8005320 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005222:	4a3d      	ldr	r2, [pc, #244]	; (8005318 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005224:	21a4      	movs	r1, #164	; 0xa4
 8005226:	e7f2      	b.n	800520e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005228:	68e0      	ldr	r0, [r4, #12]
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	6a1b      	ldr	r3, [r3, #32]
 800522e:	4798      	blx	r3
 8005230:	2837      	cmp	r0, #55	; 0x37
 8005232:	d803      	bhi.n	800523c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005234:	4b3b      	ldr	r3, [pc, #236]	; (8005324 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005236:	4a38      	ldr	r2, [pc, #224]	; (8005318 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005238:	21a5      	movs	r1, #165	; 0xa5
 800523a:	e7e8      	b.n	800520e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800523c:	f010 fdec 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005240:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005328 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005244:	3004      	adds	r0, #4
 8005246:	f010 fe4d 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800524a:	f8d9 0000 	ldr.w	r0, [r9]
 800524e:	b110      	cbz	r0, 8005256 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005250:	6803      	ldr	r3, [r0, #0]
 8005252:	68db      	ldr	r3, [r3, #12]
 8005254:	4798      	blx	r3
    if (*currentTrans)
 8005256:	f8d9 0000 	ldr.w	r0, [r9]
 800525a:	b110      	cbz	r0, 8005262 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800525c:	6803      	ldr	r3, [r0, #0]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	4798      	blx	r3
    if (*currentScreen)
 8005262:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800532c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005266:	f8d8 0000 	ldr.w	r0, [r8]
 800526a:	b110      	cbz	r0, 8005272 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800526c:	6803      	ldr	r3, [r0, #0]
 800526e:	695b      	ldr	r3, [r3, #20]
 8005270:	4798      	blx	r3
    if (*currentPresenter)
 8005272:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005276:	b110      	cbz	r0, 800527e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005278:	6803      	ldr	r3, [r0, #0]
 800527a:	685b      	ldr	r3, [r3, #4]
 800527c:	4798      	blx	r3
    if (*currentScreen)
 800527e:	f8d8 0000 	ldr.w	r0, [r8]
 8005282:	b110      	cbz	r0, 800528a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005284:	6803      	ldr	r3, [r0, #0]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	4798      	blx	r3
    if (*currentPresenter)
 800528a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800528e:	b110      	cbz	r0, 8005296 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005290:	6803      	ldr	r3, [r0, #0]
 8005292:	689b      	ldr	r3, [r3, #8]
 8005294:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005296:	68e0      	ldr	r0, [r4, #12]
 8005298:	2100      	movs	r1, #0
 800529a:	f7ff f937 	bl	800450c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800529e:	2114      	movs	r1, #20
 80052a0:	4605      	mov	r5, r0
 80052a2:	f7ff f937 	bl	8004514 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052a6:	68a0      	ldr	r0, [r4, #8]
 80052a8:	6803      	ldr	r3, [r0, #0]
 80052aa:	2100      	movs	r1, #0
 80052ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052ae:	4798      	blx	r3
 80052b0:	4606      	mov	r6, r0
 80052b2:	f003 f9a7 	bl	8008604 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052b6:	6860      	ldr	r0, [r4, #4]
 80052b8:	6803      	ldr	r3, [r0, #0]
 80052ba:	2100      	movs	r1, #0
 80052bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052be:	4798      	blx	r3
 80052c0:	4631      	mov	r1, r6
 80052c2:	4604      	mov	r4, r0
 80052c4:	f003 f978 	bl	80085b8 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80052c8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052cc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052d0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052d4:	b1dc      	cbz	r4, 800530e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 80052d6:	1d23      	adds	r3, r4, #4
 80052d8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052dc:	6833      	ldr	r3, [r6, #0]
 80052de:	f8c4 a008 	str.w	sl, [r4, #8]
 80052e2:	4630      	mov	r0, r6
 80052e4:	68db      	ldr	r3, [r3, #12]
 80052e6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052e8:	4798      	blx	r3
    newPresenter->activate();
 80052ea:	6823      	ldr	r3, [r4, #0]
 80052ec:	4620      	mov	r0, r4
 80052ee:	681b      	ldr	r3, [r3, #0]
 80052f0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052f2:	4629      	mov	r1, r5
 80052f4:	4630      	mov	r0, r6
 80052f6:	f012 fbbb 	bl	8017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052fa:	682b      	ldr	r3, [r5, #0]
 80052fc:	4628      	mov	r0, r5
 80052fe:	691b      	ldr	r3, [r3, #16]
 8005300:	4798      	blx	r3
    newTransition->invalidate();
 8005302:	682b      	ldr	r3, [r5, #0]
 8005304:	4628      	mov	r0, r5
 8005306:	695b      	ldr	r3, [r3, #20]
}
 8005308:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800530c:	4718      	bx	r3
    model->bind(newPresenter);
 800530e:	4623      	mov	r3, r4
 8005310:	e7e2      	b.n	80052d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005312:	bf00      	nop
 8005314:	0802cb2c 	.word	0x0802cb2c
 8005318:	0802dfd3 	.word	0x0802dfd3
 800531c:	0802ccc8 	.word	0x0802ccc8
 8005320:	0802cd0f 	.word	0x0802cd0f
 8005324:	0802cdb2 	.word	0x0802cdb2
 8005328:	2001300c 	.word	0x2001300c
 800532c:	20013008 	.word	0x20013008

08005330 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005330:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005332:	4770      	bx	lr

08005334 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005334:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005336:	4770      	bx	lr

08005338 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005338:	4770      	bx	lr

0800533a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800533a:	888b      	ldrh	r3, [r1, #4]
 800533c:	69c0      	ldr	r0, [r0, #28]
 800533e:	680a      	ldr	r2, [r1, #0]
 8005340:	0adb      	lsrs	r3, r3, #11
 8005342:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005346:	4410      	add	r0, r2
 8005348:	4770      	bx	lr

0800534a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800534a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800534c:	b1c2      	cbz	r2, 8005380 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800534e:	7b13      	ldrb	r3, [r2, #12]
 8005350:	b1b3      	cbz	r3, 8005380 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005352:	7b54      	ldrb	r4, [r2, #13]
 8005354:	7ad2      	ldrb	r2, [r2, #11]
 8005356:	0224      	lsls	r4, r4, #8
 8005358:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800535c:	4314      	orrs	r4, r2
 800535e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005360:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005362:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005366:	8813      	ldrh	r3, [r2, #0]
 8005368:	428b      	cmp	r3, r1
 800536a:	d102      	bne.n	8005372 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800536c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005370:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005372:	d805      	bhi.n	8005380 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005374:	3801      	subs	r0, #1
 8005376:	b280      	uxth	r0, r0
 8005378:	3204      	adds	r2, #4
 800537a:	2800      	cmp	r0, #0
 800537c:	d1f3      	bne.n	8005366 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800537e:	e7f7      	b.n	8005370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005380:	2000      	movs	r0, #0
 8005382:	e7f5      	b.n	8005370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005384 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005384:	b510      	push	{r4, lr}
 8005386:	212c      	movs	r1, #44	; 0x2c
 8005388:	4604      	mov	r4, r0
 800538a:	f024 fdfa 	bl	8029f82 <_ZdlPvj>
 800538e:	4620      	mov	r0, r4
 8005390:	bd10      	pop	{r4, pc}
	...

08005394 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005394:	b530      	push	{r4, r5, lr}
 8005396:	b08b      	sub	sp, #44	; 0x2c
 8005398:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800539a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800539e:	9508      	str	r5, [sp, #32]
 80053a0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80053a4:	9507      	str	r5, [sp, #28]
 80053a6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80053aa:	9506      	str	r5, [sp, #24]
 80053ac:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80053b0:	9505      	str	r5, [sp, #20]
 80053b2:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80053b6:	9504      	str	r5, [sp, #16]
 80053b8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80053bc:	9503      	str	r5, [sp, #12]
 80053be:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80053c2:	9502      	str	r5, [sp, #8]
 80053c4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80053c8:	9501      	str	r5, [sp, #4]
 80053ca:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80053ce:	9500      	str	r5, [sp, #0]
 80053d0:	f011 feb8 	bl	8017144 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80053d4:	4b06      	ldr	r3, [pc, #24]	; (80053f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80053d6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80053d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80053da:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80053dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80053de:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80053e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80053e2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80053e4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80053e6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80053e8:	4620      	mov	r0, r4
 80053ea:	b00b      	add	sp, #44	; 0x2c
 80053ec:	bd30      	pop	{r4, r5, pc}
 80053ee:	bf00      	nop
 80053f0:	0802e23c 	.word	0x0802e23c

080053f4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80053f4:	4770      	bx	lr

080053f6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80053f6:	4770      	bx	lr

080053f8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80053f8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80053fa:	68c2      	ldr	r2, [r0, #12]
 80053fc:	6844      	ldr	r4, [r0, #4]
 80053fe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005400:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005402:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005406:	07d2      	lsls	r2, r2, #31
 8005408:	bf48      	it	mi
 800540a:	5962      	ldrmi	r2, [r4, r5]
 800540c:	689b      	ldr	r3, [r3, #8]
    }
 800540e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005410:	bf48      	it	mi
 8005412:	58d3      	ldrmi	r3, [r2, r3]
 8005414:	4718      	bx	r3

08005416 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005416:	6843      	ldr	r3, [r0, #4]
 8005418:	b12b      	cbz	r3, 8005426 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800541a:	6883      	ldr	r3, [r0, #8]
 800541c:	b92b      	cbnz	r3, 800542a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800541e:	68c0      	ldr	r0, [r0, #12]
 8005420:	f000 0001 	and.w	r0, r0, #1
 8005424:	4770      	bx	lr
 8005426:	4618      	mov	r0, r3
 8005428:	4770      	bx	lr
 800542a:	2001      	movs	r0, #1
    }
 800542c:	4770      	bx	lr

0800542e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800542e:	b510      	push	{r4, lr}
 8005430:	2110      	movs	r1, #16
 8005432:	4604      	mov	r4, r0
 8005434:	f024 fda5 	bl	8029f82 <_ZdlPvj>
 8005438:	4620      	mov	r0, r4
 800543a:	bd10      	pop	{r4, pc}

0800543c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 800543c:	b510      	push	{r4, lr}
 800543e:	4b03      	ldr	r3, [pc, #12]	; (800544c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005440:	6003      	str	r3, [r0, #0]
 8005442:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005444:	f00e ffe6 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005448:	4620      	mov	r0, r4
 800544a:	bd10      	pop	{r4, pc}
 800544c:	0802e2b4 	.word	0x0802e2b4

08005450 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005450:	b507      	push	{r0, r1, r2, lr}
 8005452:	4b07      	ldr	r3, [pc, #28]	; (8005470 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005454:	6003      	str	r3, [r0, #0]
 8005456:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005458:	f00e ffdc 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800545c:	9801      	ldr	r0, [sp, #4]
 800545e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005462:	f024 fd8e 	bl	8029f82 <_ZdlPvj>
 8005466:	9801      	ldr	r0, [sp, #4]
 8005468:	b003      	add	sp, #12
 800546a:	f85d fb04 	ldr.w	pc, [sp], #4
 800546e:	bf00      	nop
 8005470:	0802e2b4 	.word	0x0802e2b4

08005474 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005474:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005476:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800547a:	4299      	cmp	r1, r3
{
 800547c:	4604      	mov	r4, r0
 800547e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005480:	d103      	bne.n	800548a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005482:	f010 fcc9 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005486:	f7fe fc9f 	bl	8003dc8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800548a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800548e:	429d      	cmp	r5, r3
 8005490:	d103      	bne.n	800549a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005492:	f010 fcc1 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005496:	f7fe fd27 	bl	8003ee8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800549a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800549e:	429d      	cmp	r5, r3
 80054a0:	d103      	bne.n	80054aa <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80054a2:	f010 fcb9 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80054a6:	f7fe fd5f 	bl	8003f68 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80054aa:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80054ae:	42a5      	cmp	r5, r4
 80054b0:	d10a      	bne.n	80054c8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80054b2:	4806      	ldr	r0, [pc, #24]	; (80054cc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80054b4:	2200      	movs	r2, #0
 80054b6:	2120      	movs	r1, #32
 80054b8:	f004 f846 	bl	8009548 <HAL_GPIO_WritePin>
 80054bc:	f010 fcac 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80054c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80054c4:	f7fe bd60 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80054c8:	bd38      	pop	{r3, r4, r5, pc}
 80054ca:	bf00      	nop
 80054cc:	40021000 	.word	0x40021000

080054d0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80054d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054d4:	ed2d 8b06 	vpush	{d8-d10}
 80054d8:	4604      	mov	r4, r0
 80054da:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80054dc:	46a3      	mov	fp, r4
        : presenter(0)
 80054de:	2500      	movs	r5, #0
 80054e0:	f012 f91a 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 80054e4:	4b6a      	ldr	r3, [pc, #424]	; (8005690 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80054e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80054e8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80054ec:	2226      	movs	r2, #38	; 0x26
 80054ee:	4629      	mov	r1, r5
 80054f0:	4658      	mov	r0, fp
 80054f2:	f025 fd5e 	bl	802afb2 <memset>
 80054f6:	4658      	mov	r0, fp
 80054f8:	f7fd f950 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80054fc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005500:	26ff      	movs	r6, #255	; 0xff
 8005502:	4b64      	ldr	r3, [pc, #400]	; (8005694 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005504:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005506:	2226      	movs	r2, #38	; 0x26
 8005508:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800550c:	4629      	mov	r1, r5
 800550e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005512:	4650      	mov	r0, sl
        : color(col)
 8005514:	66a5      	str	r5, [r4, #104]	; 0x68
 8005516:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800551a:	f025 fd4a 	bl	802afb2 <memset>
 800551e:	4650      	mov	r0, sl
 8005520:	f7fd f93c 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8005524:	4b5c      	ldr	r3, [pc, #368]	; (8005698 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005526:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005528:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800552c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005530:	a90c      	add	r1, sp, #48	; 0x30
 8005532:	4650      	mov	r0, sl
 8005534:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005538:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800553c:	f00d ff63 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005540:	4648      	mov	r0, r9
 8005542:	f7fd f93d 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005546:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800554a:	4b54      	ldr	r3, [pc, #336]	; (800569c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 800554c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005550:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005554:	4638      	mov	r0, r7
 8005556:	f00c fe1f 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 800555a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800555e:	4618      	mov	r0, r3
 8005560:	9303      	str	r3, [sp, #12]
 8005562:	f7fb fd71 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005566:	4b4e      	ldr	r3, [pc, #312]	; (80056a0 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005568:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800556c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005570:	3324      	adds	r3, #36	; 0x24
 8005572:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005576:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800557a:	4640      	mov	r0, r8
 800557c:	f7fd f920 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005580:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005584:	4618      	mov	r0, r3
 8005586:	ee08 3a10 	vmov	s16, r3
 800558a:	f7fd f919 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800558e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005592:	4618      	mov	r0, r3
 8005594:	ee08 3a90 	vmov	s17, r3
 8005598:	f7fd f912 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800559c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80055a0:	4618      	mov	r0, r3
 80055a2:	ee09 3a10 	vmov	s18, r3
 80055a6:	f00e f86f 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80055aa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80055ae:	4618      	mov	r0, r3
 80055b0:	ee09 3a90 	vmov	s19, r3
 80055b4:	f00e f868 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80055b8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80055bc:	4618      	mov	r0, r3
 80055be:	ee0a 3a10 	vmov	s20, r3
 80055c2:	f00e f861 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80055c6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80055ca:	4618      	mov	r0, r3
 80055cc:	ee0a 3a90 	vmov	s21, r3
 80055d0:	f00d fef2 	bl	80133b8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80055d4:	4a33      	ldr	r2, [pc, #204]	; (80056a4 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80055d6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80055da:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80055de:	4a32      	ldr	r2, [pc, #200]	; (80056a8 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80055e0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80055e4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80055e8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80055ec:	f00e ff08 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80055f0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80055f4:	462a      	mov	r2, r5
 80055f6:	4658      	mov	r0, fp
 80055f8:	9300      	str	r3, [sp, #0]
 80055fa:	4629      	mov	r1, r5
 80055fc:	23f0      	movs	r3, #240	; 0xf0
 80055fe:	f7fd f8b9 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005602:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005604:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005608:	66a3      	str	r3, [r4, #104]	; 0x68
 800560a:	4659      	mov	r1, fp
 800560c:	4630      	mov	r0, r6
 800560e:	f00b f96a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005612:	462a      	mov	r2, r5
 8005614:	4650      	mov	r0, sl
 8005616:	4629      	mov	r1, r5
 8005618:	f7fd f89f 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800561c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800561e:	4650      	mov	r0, sl
 8005620:	a90c      	add	r1, sp, #48	; 0x30
 8005622:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005626:	f00d feee 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800562a:	4651      	mov	r1, sl
 800562c:	4630      	mov	r0, r6
 800562e:	f00b f95a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005632:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005636:	2156      	movs	r1, #86	; 0x56
 8005638:	4648      	mov	r0, r9
 800563a:	f7fd f88e 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800563e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005642:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005646:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800564a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800564e:	4650      	mov	r0, sl
 8005650:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005654:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005658:	4649      	mov	r1, r9
 800565a:	4798      	blx	r3
 800565c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005660:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005664:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005668:	4b10      	ldr	r3, [pc, #64]	; (80056ac <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800566a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 800566c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005670:	b92b      	cbnz	r3, 800567e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005672:	4b0f      	ldr	r3, [pc, #60]	; (80056b0 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005674:	4a0f      	ldr	r2, [pc, #60]	; (80056b4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005676:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005678:	480f      	ldr	r0, [pc, #60]	; (80056b8 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800567a:	f025 fa95 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800567e:	4b0f      	ldr	r3, [pc, #60]	; (80056bc <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005680:	881b      	ldrh	r3, [r3, #0]
 8005682:	2b2b      	cmp	r3, #43	; 0x2b
 8005684:	d81e      	bhi.n	80056c4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005686:	4b0e      	ldr	r3, [pc, #56]	; (80056c0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005688:	4a0a      	ldr	r2, [pc, #40]	; (80056b4 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800568a:	2161      	movs	r1, #97	; 0x61
 800568c:	e7f4      	b.n	8005678 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 800568e:	bf00      	nop
 8005690:	0802e2b4 	.word	0x0802e2b4
 8005694:	0802f4d4 	.word	0x0802f4d4
 8005698:	0802f69c 	.word	0x0802f69c
 800569c:	0802c770 	.word	0x0802c770
 80056a0:	0802f208 	.word	0x0802f208
 80056a4:	0802e29c 	.word	0x0802e29c
 80056a8:	08005475 	.word	0x08005475
 80056ac:	2001301c 	.word	0x2001301c
 80056b0:	0802c5b0 	.word	0x0802c5b0
 80056b4:	0802c6b2 	.word	0x0802c6b2
 80056b8:	0802c62d 	.word	0x0802c62d
 80056bc:	20013020 	.word	0x20013020
 80056c0:	0802c674 	.word	0x0802c674
        return texts->getText(typedTextId);
 80056c4:	4ba5      	ldr	r3, [pc, #660]	; (800595c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80056c6:	212b      	movs	r1, #43	; 0x2b
 80056c8:	6818      	ldr	r0, [r3, #0]
 80056ca:	f002 fdb7 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 80056ce:	4aa4      	ldr	r2, [pc, #656]	; (8005960 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80056d0:	4603      	mov	r3, r0
 80056d2:	2104      	movs	r1, #4
 80056d4:	4650      	mov	r0, sl
 80056d6:	f013 fd4d 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80056da:	4648      	mov	r0, r9
        wc1 = value;
 80056dc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80056e0:	f00d fa96 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80056e4:	4b9f      	ldr	r3, [pc, #636]	; (8005964 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80056e6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80056e8:	a90c      	add	r1, sp, #48	; 0x30
 80056ea:	232c      	movs	r3, #44	; 0x2c
 80056ec:	4648      	mov	r0, r9
 80056ee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056f2:	f00d faad 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80056f6:	4649      	mov	r1, r9
 80056f8:	4630      	mov	r0, r6
 80056fa:	f00b f8f4 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80056fe:	230a      	movs	r3, #10
 8005700:	9300      	str	r3, [sp, #0]
 8005702:	2232      	movs	r2, #50	; 0x32
 8005704:	23f0      	movs	r3, #240	; 0xf0
 8005706:	4629      	mov	r1, r5
 8005708:	4638      	mov	r0, r7
 800570a:	f7fd f833 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 800570e:	9b03      	ldr	r3, [sp, #12]
 8005710:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005714:	22a0      	movs	r2, #160	; 0xa0
 8005716:	4611      	mov	r1, r2
 8005718:	4638      	mov	r0, r7
 800571a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800571e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005722:	f00c fe4f 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005726:	22a0      	movs	r2, #160	; 0xa0
 8005728:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800572c:	4638      	mov	r0, r7
 800572e:	f00c fe54 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005732:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005736:	2b20      	cmp	r3, #32
 8005738:	d005      	beq.n	8005746 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800573a:	2320      	movs	r3, #32
 800573c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005740:	4638      	mov	r0, r7
 8005742:	f00c fd49 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005746:	4638      	mov	r0, r7
 8005748:	2101      	movs	r1, #1
 800574a:	f00c fe51 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800574e:	4639      	mov	r1, r7
 8005750:	4630      	mov	r0, r6
 8005752:	ad04      	add	r5, sp, #16
        color = newColor;
 8005754:	f04f 37ff 	mov.w	r7, #4294967295
 8005758:	f00b f8c5 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800575c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005760:	2223      	movs	r2, #35	; 0x23
 8005762:	4640      	mov	r0, r8
 8005764:	2145      	movs	r1, #69	; 0x45
 8005766:	f7fc fff8 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800576a:	4641      	mov	r1, r8
 800576c:	4628      	mov	r0, r5
        color = newColor;
 800576e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005772:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005776:	f00c ffd1 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800577a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800577e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005782:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005786:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800578a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005964 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800578e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005792:	234b      	movs	r3, #75	; 0x4b
 8005794:	4649      	mov	r1, r9
 8005796:	4640      	mov	r0, r8
 8005798:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800579c:	f00d fa58 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80057a0:	4641      	mov	r1, r8
 80057a2:	4630      	mov	r0, r6
 80057a4:	f00b f89f 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80057a8:	ee18 0a10 	vmov	r0, s16
 80057ac:	220c      	movs	r2, #12
 80057ae:	2136      	movs	r1, #54	; 0x36
 80057b0:	f7fc ffd3 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80057b4:	ee18 1a10 	vmov	r1, s16
 80057b8:	4628      	mov	r0, r5
        color = newColor;
 80057ba:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80057be:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80057c2:	f00c ffab 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80057c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80057ca:	ee18 3a10 	vmov	r3, s16
 80057ce:	333c      	adds	r3, #60	; 0x3c
 80057d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80057d4:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80057d6:	ee18 0a10 	vmov	r0, s16
 80057da:	4649      	mov	r1, r9
 80057dc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80057e0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80057e4:	f00d fa34 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80057e8:	ee18 1a10 	vmov	r1, s16
 80057ec:	4630      	mov	r0, r6
 80057ee:	f00b f87a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80057f2:	ee18 0a90 	vmov	r0, s17
 80057f6:	223c      	movs	r2, #60	; 0x3c
 80057f8:	2158      	movs	r1, #88	; 0x58
 80057fa:	f7fc ffae 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80057fe:	ee18 1a90 	vmov	r1, s17
 8005802:	4628      	mov	r0, r5
        color = newColor;
 8005804:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005808:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800580c:	f00c ff86 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005810:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005814:	ee18 3a90 	vmov	r3, s17
 8005818:	333c      	adds	r3, #60	; 0x3c
 800581a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800581e:	231b      	movs	r3, #27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005820:	ee18 0a90 	vmov	r0, s17
 8005824:	4649      	mov	r1, r9
 8005826:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800582a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800582e:	f00d fa0f 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005832:	ee18 1a90 	vmov	r1, s17
 8005836:	4630      	mov	r0, r6
 8005838:	f00b f855 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800583c:	ee19 0a10 	vmov	r0, s18
 8005840:	22f0      	movs	r2, #240	; 0xf0
 8005842:	2121      	movs	r1, #33	; 0x21
 8005844:	f7fc ff89 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8005848:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800584c:	464a      	mov	r2, r9
 800584e:	f04f 0802 	mov.w	r8, #2
 8005852:	a90b      	add	r1, sp, #44	; 0x2c
 8005854:	ee19 0a10 	vmov	r0, s18
 8005858:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800585c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005860:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005864:	f00d fbd9 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005868:	234d      	movs	r3, #77	; 0x4d
 800586a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800586e:	350c      	adds	r5, #12
        updateTextPosition();
 8005870:	ee19 0a10 	vmov	r0, s18
 8005874:	f7fc ffc6 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005878:	ee19 1a10 	vmov	r1, s18
 800587c:	4630      	mov	r0, r6
        colorPressed = col;
 800587e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005882:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005886:	f00b f82e 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800588a:	ee19 0a90 	vmov	r0, s19
 800588e:	22aa      	movs	r2, #170	; 0xaa
 8005890:	2121      	movs	r1, #33	; 0x21
 8005892:	f7fc ff62 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005896:	464a      	mov	r2, r9
 8005898:	a90b      	add	r1, sp, #44	; 0x2c
 800589a:	ee19 0a90 	vmov	r0, s19
 800589e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80058a2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80058a6:	f00d fbb8 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80058aa:	234e      	movs	r3, #78	; 0x4e
 80058ac:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80058b0:	ee19 0a90 	vmov	r0, s19
 80058b4:	f7fc ffa6 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80058b8:	ee19 1a90 	vmov	r1, s19
 80058bc:	4630      	mov	r0, r6
        colorPressed = col;
 80058be:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80058c2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80058c6:	f00b f80e 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80058ca:	ee1a 0a10 	vmov	r0, s20
 80058ce:	2264      	movs	r2, #100	; 0x64
 80058d0:	2121      	movs	r1, #33	; 0x21
 80058d2:	f7fc ff42 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80058d6:	464a      	mov	r2, r9
 80058d8:	a90b      	add	r1, sp, #44	; 0x2c
 80058da:	ee1a 0a10 	vmov	r0, s20
 80058de:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80058e2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80058e6:	f00d fb98 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80058ea:	234f      	movs	r3, #79	; 0x4f
 80058ec:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80058f0:	ee1a 0a10 	vmov	r0, s20
 80058f4:	f7fc ff86 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80058f8:	ee1a 1a10 	vmov	r1, s20
 80058fc:	4630      	mov	r0, r6
        colorPressed = col;
 80058fe:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005902:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005906:	f00a ffee 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 800590a:	ee1a 0a90 	vmov	r0, s21
 800590e:	2205      	movs	r2, #5
 8005910:	21c6      	movs	r1, #198	; 0xc6
 8005912:	f7fc ff22 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8005916:	2301      	movs	r3, #1
 8005918:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800591c:	230b      	movs	r3, #11
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800591e:	ee1a 0a90 	vmov	r0, s21
 8005922:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005926:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800592a:	aa0a      	add	r2, sp, #40	; 0x28
 800592c:	ab0b      	add	r3, sp, #44	; 0x2c
 800592e:	a909      	add	r1, sp, #36	; 0x24
 8005930:	f8cd 9000 	str.w	r9, [sp]
 8005934:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005938:	f00d fca9 	bl	801328e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800593c:	4630      	mov	r0, r6
 800593e:	ee1a 1a90 	vmov	r1, s21
 8005942:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005946:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800594a:	f00a ffcc 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800594e:	4620      	mov	r0, r4
 8005950:	b00f      	add	sp, #60	; 0x3c
 8005952:	ecbd 8b06 	vpop	{d8-d10}
 8005956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800595a:	bf00      	nop
 800595c:	20013028 	.word	0x20013028
 8005960:	0802c6ea 	.word	0x0802c6ea
 8005964:	0802c760 	.word	0x0802c760

08005968 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005968:	4770      	bx	lr

0800596a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800596a:	4770      	bx	lr

0800596c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800596c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800596e:	68c2      	ldr	r2, [r0, #12]
 8005970:	6844      	ldr	r4, [r0, #4]
 8005972:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005974:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005976:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800597a:	07d2      	lsls	r2, r2, #31
 800597c:	bf48      	it	mi
 800597e:	5962      	ldrmi	r2, [r4, r5]
 8005980:	689b      	ldr	r3, [r3, #8]
    }
 8005982:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005984:	bf48      	it	mi
 8005986:	58d3      	ldrmi	r3, [r2, r3]
 8005988:	4718      	bx	r3

0800598a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800598a:	6843      	ldr	r3, [r0, #4]
 800598c:	b12b      	cbz	r3, 800599a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800598e:	6883      	ldr	r3, [r0, #8]
 8005990:	b92b      	cbnz	r3, 800599e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005992:	68c0      	ldr	r0, [r0, #12]
 8005994:	f000 0001 	and.w	r0, r0, #1
 8005998:	4770      	bx	lr
 800599a:	4618      	mov	r0, r3
 800599c:	4770      	bx	lr
 800599e:	2001      	movs	r0, #1
    }
 80059a0:	4770      	bx	lr

080059a2 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80059a2:	b510      	push	{r4, lr}
 80059a4:	2110      	movs	r1, #16
 80059a6:	4604      	mov	r4, r0
 80059a8:	f024 faeb 	bl	8029f82 <_ZdlPvj>
 80059ac:	4620      	mov	r0, r4
 80059ae:	bd10      	pop	{r4, pc}

080059b0 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80059b0:	b510      	push	{r4, lr}
 80059b2:	4b03      	ldr	r3, [pc, #12]	; (80059c0 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80059b4:	6003      	str	r3, [r0, #0]
 80059b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80059b8:	f00e fd2c 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80059bc:	4620      	mov	r0, r4
 80059be:	bd10      	pop	{r4, pc}
 80059c0:	0802e300 	.word	0x0802e300

080059c4 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80059c4:	b507      	push	{r0, r1, r2, lr}
 80059c6:	4b07      	ldr	r3, [pc, #28]	; (80059e4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80059c8:	6003      	str	r3, [r0, #0]
 80059ca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80059cc:	f00e fd22 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80059d0:	9801      	ldr	r0, [sp, #4]
 80059d2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80059d6:	f024 fad4 	bl	8029f82 <_ZdlPvj>
 80059da:	9801      	ldr	r0, [sp, #4]
 80059dc:	b003      	add	sp, #12
 80059de:	f85d fb04 	ldr.w	pc, [sp], #4
 80059e2:	bf00      	nop
 80059e4:	0802e300 	.word	0x0802e300

080059e8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80059e8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80059ea:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80059ee:	4299      	cmp	r1, r3
{
 80059f0:	4604      	mov	r4, r0
 80059f2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80059f4:	d103      	bne.n	80059fe <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80059f6:	f010 fa0f 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80059fa:	f7fe f9d5 	bl	8003da8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80059fe:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005a02:	429d      	cmp	r5, r3
 8005a04:	d103      	bne.n	8005a0e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005a06:	f010 fa07 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005a0a:	f7fe f9fd 	bl	8003e08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005a0e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005a12:	42a5      	cmp	r5, r4
 8005a14:	d105      	bne.n	8005a22 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005a16:	f010 f9ff 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005a1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005a1e:	f7fe ba23 	b.w	8003e68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005a22:	bd38      	pop	{r3, r4, r5, pc}

08005a24 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a28:	ed2d 8b06 	vpush	{d8-d10}
 8005a2c:	4604      	mov	r4, r0
 8005a2e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005a30:	46a3      	mov	fp, r4
 8005a32:	2500      	movs	r5, #0
 8005a34:	f011 fe70 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8005a38:	4b66      	ldr	r3, [pc, #408]	; (8005bd4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005a3a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005a3c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005a40:	2226      	movs	r2, #38	; 0x26
 8005a42:	4629      	mov	r1, r5
 8005a44:	4658      	mov	r0, fp
 8005a46:	f025 fab4 	bl	802afb2 <memset>
 8005a4a:	4658      	mov	r0, fp
 8005a4c:	f7fc fea6 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8005a50:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005a54:	26ff      	movs	r6, #255	; 0xff
 8005a56:	4b60      	ldr	r3, [pc, #384]	; (8005bd8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005a58:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005a5a:	2226      	movs	r2, #38	; 0x26
 8005a5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005a60:	4629      	mov	r1, r5
 8005a62:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005a66:	4650      	mov	r0, sl
 8005a68:	66a5      	str	r5, [r4, #104]	; 0x68
 8005a6a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a6e:	f025 faa0 	bl	802afb2 <memset>
 8005a72:	4650      	mov	r0, sl
 8005a74:	f7fc fe92 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8005a78:	4b58      	ldr	r3, [pc, #352]	; (8005bdc <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005a7a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005a7c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005a80:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005a84:	a90a      	add	r1, sp, #40	; 0x28
 8005a86:	4650      	mov	r0, sl
 8005a88:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005a8c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005a90:	f00d fcb9 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005a94:	4648      	mov	r0, r9
 8005a96:	f7fc fe93 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005a9a:	4b51      	ldr	r3, [pc, #324]	; (8005be0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005a9c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005aa0:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005aa4:	4618      	mov	r0, r3
 8005aa6:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005aaa:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005aae:	ee08 3a90 	vmov	s17, r3
 8005ab2:	f7fc fe85 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ab6:	4638      	mov	r0, r7
 8005ab8:	f00c fb6e 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8005abc:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005ac0:	4618      	mov	r0, r3
 8005ac2:	9303      	str	r3, [sp, #12]
 8005ac4:	f7fb fac0 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005ac8:	4b46      	ldr	r3, [pc, #280]	; (8005be4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005aca:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005ace:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005ad2:	3324      	adds	r3, #36	; 0x24
 8005ad4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005ad8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005adc:	4640      	mov	r0, r8
 8005ade:	f7fc fe6f 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ae2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005ae6:	4618      	mov	r0, r3
 8005ae8:	ee08 3a10 	vmov	s16, r3
 8005aec:	f7fc fe68 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005af0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005af4:	4618      	mov	r0, r3
 8005af6:	ee09 3a10 	vmov	s18, r3
 8005afa:	f00d fdc5 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005afe:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b02:	4618      	mov	r0, r3
 8005b04:	ee09 3a90 	vmov	s19, r3
 8005b08:	f00d fdbe 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005b0c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005b10:	4618      	mov	r0, r3
 8005b12:	ee0a 3a10 	vmov	s20, r3
 8005b16:	f00d fdb7 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005b1a:	4a33      	ldr	r2, [pc, #204]	; (8005be8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005b1c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005b20:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005b24:	4a31      	ldr	r2, [pc, #196]	; (8005bec <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005b26:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005b2a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005b2e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005b32:	f00e fc65 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005b36:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005b3a:	462a      	mov	r2, r5
 8005b3c:	4658      	mov	r0, fp
 8005b3e:	9300      	str	r3, [sp, #0]
 8005b40:	4629      	mov	r1, r5
 8005b42:	23f0      	movs	r3, #240	; 0xf0
 8005b44:	f7fc fe16 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b48:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005b4a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005b4e:	66a3      	str	r3, [r4, #104]	; 0x68
 8005b50:	4659      	mov	r1, fp
 8005b52:	4630      	mov	r0, r6
 8005b54:	f00a fec7 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005b58:	462a      	mov	r2, r5
 8005b5a:	4650      	mov	r0, sl
 8005b5c:	4629      	mov	r1, r5
 8005b5e:	f7fc fdfc 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8005b62:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005b64:	4650      	mov	r0, sl
 8005b66:	a90a      	add	r1, sp, #40	; 0x28
 8005b68:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b6c:	f00d fc4b 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b70:	4651      	mov	r1, sl
 8005b72:	4630      	mov	r0, r6
 8005b74:	f00a feb7 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005b78:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005b7c:	2156      	movs	r1, #86	; 0x56
 8005b7e:	4648      	mov	r0, r9
 8005b80:	f7fc fdeb 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005b84:	f04f 33ff 	mov.w	r3, #4294967295
 8005b88:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005b8c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005b90:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005b94:	f10d 0b10 	add.w	fp, sp, #16
 8005b98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005b9c:	4649      	mov	r1, r9
 8005b9e:	4658      	mov	r0, fp
 8005ba0:	4798      	blx	r3
 8005ba2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005ba6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005baa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005bae:	4b10      	ldr	r3, [pc, #64]	; (8005bf0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005bb0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005bb2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005bb6:	b92b      	cbnz	r3, 8005bc4 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005bb8:	4b0e      	ldr	r3, [pc, #56]	; (8005bf4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005bba:	4a0f      	ldr	r2, [pc, #60]	; (8005bf8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005bbc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005bbe:	480f      	ldr	r0, [pc, #60]	; (8005bfc <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005bc0:	f024 fff2 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005bc4:	4b0e      	ldr	r3, [pc, #56]	; (8005c00 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005bc6:	881b      	ldrh	r3, [r3, #0]
 8005bc8:	2b1c      	cmp	r3, #28
 8005bca:	d81d      	bhi.n	8005c08 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005bcc:	4b0d      	ldr	r3, [pc, #52]	; (8005c04 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005bce:	4a0a      	ldr	r2, [pc, #40]	; (8005bf8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005bd0:	2161      	movs	r1, #97	; 0x61
 8005bd2:	e7f4      	b.n	8005bbe <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005bd4:	0802e300 	.word	0x0802e300
 8005bd8:	0802f4d4 	.word	0x0802f4d4
 8005bdc:	0802f69c 	.word	0x0802f69c
 8005be0:	0802c770 	.word	0x0802c770
 8005be4:	0802f208 	.word	0x0802f208
 8005be8:	0802e2e8 	.word	0x0802e2e8
 8005bec:	080059e9 	.word	0x080059e9
 8005bf0:	2001301c 	.word	0x2001301c
 8005bf4:	0802c5b0 	.word	0x0802c5b0
 8005bf8:	0802c6b2 	.word	0x0802c6b2
 8005bfc:	0802c62d 	.word	0x0802c62d
 8005c00:	20013020 	.word	0x20013020
 8005c04:	0802c674 	.word	0x0802c674
        return texts->getText(typedTextId);
 8005c08:	4b95      	ldr	r3, [pc, #596]	; (8005e60 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005c0a:	211c      	movs	r1, #28
 8005c0c:	6818      	ldr	r0, [r3, #0]
 8005c0e:	f002 fb15 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8005c12:	4a94      	ldr	r2, [pc, #592]	; (8005e64 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005c14:	4603      	mov	r3, r0
 8005c16:	2104      	movs	r1, #4
 8005c18:	4650      	mov	r0, sl
 8005c1a:	f013 faab 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005c1e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005c22:	4648      	mov	r0, r9
 8005c24:	f00c fff4 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005c28:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005e68 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005c2c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005c30:	231d      	movs	r3, #29
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005c32:	a90a      	add	r1, sp, #40	; 0x28
 8005c34:	4648      	mov	r0, r9
 8005c36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c3a:	f00d f809 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c3e:	4649      	mov	r1, r9
 8005c40:	4630      	mov	r0, r6
 8005c42:	f00a fe50 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005c46:	223c      	movs	r2, #60	; 0x3c
 8005c48:	ee18 0a90 	vmov	r0, s17
 8005c4c:	213d      	movs	r1, #61	; 0x3d
 8005c4e:	f7fc fd84 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005c52:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005c56:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005c5a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005c5e:	4658      	mov	r0, fp
        linespace = space;
 8005c60:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005c64:	f00c fd5a 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c68:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005c6c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005c70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c74:	232a      	movs	r3, #42	; 0x2a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005c76:	ee18 0a90 	vmov	r0, s17
 8005c7a:	a90a      	add	r1, sp, #40	; 0x28
 8005c7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c80:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005c84:	f00c ffe4 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c88:	ee18 1a90 	vmov	r1, s17
 8005c8c:	4630      	mov	r0, r6
 8005c8e:	f00a fe2a 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005c92:	230a      	movs	r3, #10
 8005c94:	9300      	str	r3, [sp, #0]
 8005c96:	2232      	movs	r2, #50	; 0x32
 8005c98:	23f0      	movs	r3, #240	; 0xf0
 8005c9a:	4629      	mov	r1, r5
 8005c9c:	4638      	mov	r0, r7
 8005c9e:	f7fc fd69 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ca2:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005ca6:	22a0      	movs	r2, #160	; 0xa0
 8005ca8:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005cac:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005cb0:	9b03      	ldr	r3, [sp, #12]
 8005cb2:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005cb6:	4611      	mov	r1, r2
 8005cb8:	4638      	mov	r0, r7
 8005cba:	f00c fb83 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005cbe:	22a0      	movs	r2, #160	; 0xa0
 8005cc0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005cc4:	4638      	mov	r0, r7
 8005cc6:	f00c fb88 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005cca:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005cce:	2b20      	cmp	r3, #32
 8005cd0:	d005      	beq.n	8005cde <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005cd2:	2320      	movs	r3, #32
 8005cd4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005cd8:	4638      	mov	r0, r7
 8005cda:	f00c fa7d 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005cde:	4638      	mov	r0, r7
 8005ce0:	2101      	movs	r1, #1
 8005ce2:	f00c fb85 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005ce6:	4639      	mov	r1, r7
 8005ce8:	4630      	mov	r0, r6
 8005cea:	f00a fdfc 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005cee:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005cf2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005cf4:	2223      	movs	r2, #35	; 0x23
 8005cf6:	4640      	mov	r0, r8
        linespace = space;
 8005cf8:	f04f 0a00 	mov.w	sl, #0
 8005cfc:	2145      	movs	r1, #69	; 0x45
 8005cfe:	f7fc fd2c 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005d02:	4641      	mov	r1, r8
 8005d04:	4638      	mov	r0, r7
        color = newColor;
 8005d06:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005d0a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005d0e:	f00c fd05 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d12:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005d16:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005d1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d1e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005e68 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005d22:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005d26:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005d28:	a90a      	add	r1, sp, #40	; 0x28
 8005d2a:	4640      	mov	r0, r8
 8005d2c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d30:	f00c ff8e 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d34:	4641      	mov	r1, r8
 8005d36:	4630      	mov	r0, r6
 8005d38:	f00a fdd5 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005d3c:	ee18 0a10 	vmov	r0, s16
 8005d40:	220c      	movs	r2, #12
 8005d42:	2136      	movs	r1, #54	; 0x36
 8005d44:	f7fc fd09 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8005d48:	ee18 1a10 	vmov	r1, s16
 8005d4c:	4638      	mov	r0, r7
        color = newColor;
 8005d4e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005d52:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005d56:	f00c fce1 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d5a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005d5e:	ee18 3a10 	vmov	r3, s16
 8005d62:	333c      	adds	r3, #60	; 0x3c
 8005d64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d68:	234a      	movs	r3, #74	; 0x4a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005d6a:	ee18 0a10 	vmov	r0, s16
 8005d6e:	a90a      	add	r1, sp, #40	; 0x28
 8005d70:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d74:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005d78:	f00c ff6a 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d7c:	ee18 1a10 	vmov	r1, s16
 8005d80:	4630      	mov	r0, r6
 8005d82:	f00a fdb0 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005d86:	ee19 0a10 	vmov	r0, s18
 8005d8a:	22f0      	movs	r2, #240	; 0xf0
 8005d8c:	2121      	movs	r1, #33	; 0x21
 8005d8e:	f7fc fce4 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8005d92:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d96:	aa0a      	add	r2, sp, #40	; 0x28
 8005d98:	f04f 0802 	mov.w	r8, #2
 8005d9c:	a909      	add	r1, sp, #36	; 0x24
 8005d9e:	ee19 0a10 	vmov	r0, s18
 8005da2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005da6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005daa:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005dae:	f00d f934 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005db2:	2348      	movs	r3, #72	; 0x48
 8005db4:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005db8:	3710      	adds	r7, #16
        updateTextPosition();
 8005dba:	ee19 0a10 	vmov	r0, s18
 8005dbe:	f7fc fd21 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005dc2:	ee19 1a10 	vmov	r1, s18
 8005dc6:	4630      	mov	r0, r6
        colorPressed = col;
 8005dc8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005dcc:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005dd0:	f00a fd89 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005dd4:	ee19 0a90 	vmov	r0, s19
 8005dd8:	22aa      	movs	r2, #170	; 0xaa
 8005dda:	2121      	movs	r1, #33	; 0x21
 8005ddc:	f7fc fcbd 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005de0:	aa0a      	add	r2, sp, #40	; 0x28
 8005de2:	a909      	add	r1, sp, #36	; 0x24
 8005de4:	ee19 0a90 	vmov	r0, s19
 8005de8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005dec:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005df0:	f00d f913 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005df4:	2347      	movs	r3, #71	; 0x47
 8005df6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005dfa:	ee19 0a90 	vmov	r0, s19
 8005dfe:	f7fc fd01 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e02:	ee19 1a90 	vmov	r1, s19
 8005e06:	4630      	mov	r0, r6
        colorPressed = col;
 8005e08:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005e0c:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005e10:	f00a fd69 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005e14:	ee1a 0a10 	vmov	r0, s20
 8005e18:	2264      	movs	r2, #100	; 0x64
 8005e1a:	2121      	movs	r1, #33	; 0x21
 8005e1c:	f7fc fc9d 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005e20:	aa0a      	add	r2, sp, #40	; 0x28
 8005e22:	a909      	add	r1, sp, #36	; 0x24
 8005e24:	ee1a 0a10 	vmov	r0, s20
 8005e28:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005e2c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005e30:	f00d f8f3 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005e34:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8005e36:	ee1a 0a10 	vmov	r0, s20
 8005e3a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005e3e:	f7fc fce1 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e42:	4630      	mov	r0, r6
        colorPressed = col;
 8005e44:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005e48:	ee1a 1a10 	vmov	r1, s20
 8005e4c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005e50:	f00a fd49 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005e54:	4620      	mov	r0, r4
 8005e56:	b00d      	add	sp, #52	; 0x34
 8005e58:	ecbd 8b06 	vpop	{d8-d10}
 8005e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e60:	20013028 	.word	0x20013028
 8005e64:	0802c6ea 	.word	0x0802c6ea
 8005e68:	0802c760 	.word	0x0802c760

08005e6c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005e6c:	4770      	bx	lr

08005e6e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e6e:	4770      	bx	lr

08005e70 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005e70:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e72:	68c2      	ldr	r2, [r0, #12]
 8005e74:	6844      	ldr	r4, [r0, #4]
 8005e76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005e78:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005e7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005e7e:	07d2      	lsls	r2, r2, #31
 8005e80:	bf48      	it	mi
 8005e82:	5962      	ldrmi	r2, [r4, r5]
 8005e84:	689b      	ldr	r3, [r3, #8]
    }
 8005e86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e88:	bf48      	it	mi
 8005e8a:	58d3      	ldrmi	r3, [r2, r3]
 8005e8c:	4718      	bx	r3

08005e8e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005e8e:	6843      	ldr	r3, [r0, #4]
 8005e90:	b12b      	cbz	r3, 8005e9e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005e92:	6883      	ldr	r3, [r0, #8]
 8005e94:	b92b      	cbnz	r3, 8005ea2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005e96:	68c0      	ldr	r0, [r0, #12]
 8005e98:	f000 0001 	and.w	r0, r0, #1
 8005e9c:	4770      	bx	lr
 8005e9e:	4618      	mov	r0, r3
 8005ea0:	4770      	bx	lr
 8005ea2:	2001      	movs	r0, #1
    }
 8005ea4:	4770      	bx	lr

08005ea6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ea6:	b510      	push	{r4, lr}
 8005ea8:	2110      	movs	r1, #16
 8005eaa:	4604      	mov	r4, r0
 8005eac:	f024 f869 	bl	8029f82 <_ZdlPvj>
 8005eb0:	4620      	mov	r0, r4
 8005eb2:	bd10      	pop	{r4, pc}

08005eb4 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005eb4:	b510      	push	{r4, lr}
 8005eb6:	4b03      	ldr	r3, [pc, #12]	; (8005ec4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005eb8:	6003      	str	r3, [r0, #0]
 8005eba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ebc:	f00e faaa 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	bd10      	pop	{r4, pc}
 8005ec4:	0802e34c 	.word	0x0802e34c

08005ec8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ec8:	b507      	push	{r0, r1, r2, lr}
 8005eca:	4b07      	ldr	r3, [pc, #28]	; (8005ee8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ecc:	6003      	str	r3, [r0, #0]
 8005ece:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ed0:	f00e faa0 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ed4:	9801      	ldr	r0, [sp, #4]
 8005ed6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005eda:	f024 f852 	bl	8029f82 <_ZdlPvj>
 8005ede:	9801      	ldr	r0, [sp, #4]
 8005ee0:	b003      	add	sp, #12
 8005ee2:	f85d fb04 	ldr.w	pc, [sp], #4
 8005ee6:	bf00      	nop
 8005ee8:	0802e34c 	.word	0x0802e34c

08005eec <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005eec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005eee:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005ef2:	4299      	cmp	r1, r3
{
 8005ef4:	4604      	mov	r4, r0
 8005ef6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005ef8:	d103      	bne.n	8005f02 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005efa:	f00f ff8d 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005efe:	f7fd ff73 	bl	8003de8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005f02:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005f06:	429d      	cmp	r5, r3
 8005f08:	d103      	bne.n	8005f12 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005f0a:	f00f ff85 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005f0e:	f7fd ffdb 	bl	8003ec8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005f12:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005f16:	42a5      	cmp	r5, r4
 8005f18:	d105      	bne.n	8005f26 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005f1a:	f00f ff7d 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005f1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005f22:	f7fd bfc1 	b.w	8003ea8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005f26:	bd38      	pop	{r3, r4, r5, pc}

08005f28 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f2c:	ed2d 8b06 	vpush	{d8-d10}
 8005f30:	4604      	mov	r4, r0
 8005f32:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005f34:	46a3      	mov	fp, r4
 8005f36:	2500      	movs	r5, #0
 8005f38:	f011 fbee 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8005f3c:	4b66      	ldr	r3, [pc, #408]	; (80060d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005f3e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005f40:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005f44:	2226      	movs	r2, #38	; 0x26
 8005f46:	4629      	mov	r1, r5
 8005f48:	4658      	mov	r0, fp
 8005f4a:	f025 f832 	bl	802afb2 <memset>
 8005f4e:	4658      	mov	r0, fp
 8005f50:	f7fc fc24 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8005f54:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005f58:	26ff      	movs	r6, #255	; 0xff
 8005f5a:	4b60      	ldr	r3, [pc, #384]	; (80060dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005f5c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005f5e:	2226      	movs	r2, #38	; 0x26
 8005f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005f64:	4629      	mov	r1, r5
 8005f66:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005f6a:	4650      	mov	r0, sl
 8005f6c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005f6e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f72:	f025 f81e 	bl	802afb2 <memset>
 8005f76:	4650      	mov	r0, sl
 8005f78:	f7fc fc10 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8005f7c:	4b58      	ldr	r3, [pc, #352]	; (80060e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005f7e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005f80:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005f84:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005f88:	a90a      	add	r1, sp, #40	; 0x28
 8005f8a:	4650      	mov	r0, sl
 8005f8c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005f90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005f94:	f00d fa37 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005f98:	4648      	mov	r0, r9
 8005f9a:	f7fc fc11 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005f9e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005fa2:	4b50      	ldr	r3, [pc, #320]	; (80060e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005fa4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005fa8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005fac:	4638      	mov	r0, r7
 8005fae:	f00c f8f3 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8005fb2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	9303      	str	r3, [sp, #12]
 8005fba:	f7fb f845 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005fbe:	4b4a      	ldr	r3, [pc, #296]	; (80060e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005fc0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005fc4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005fc8:	3324      	adds	r3, #36	; 0x24
 8005fca:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005fce:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005fd2:	4640      	mov	r0, r8
 8005fd4:	f7fc fbf4 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005fd8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005fdc:	4618      	mov	r0, r3
 8005fde:	ee08 3a10 	vmov	s16, r3
 8005fe2:	f7fc fbed 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005fe6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005fea:	4618      	mov	r0, r3
 8005fec:	ee08 3a90 	vmov	s17, r3
 8005ff0:	f7fc fbe6 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ff4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005ff8:	4618      	mov	r0, r3
 8005ffa:	ee09 3a10 	vmov	s18, r3
 8005ffe:	f00d fb43 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006002:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006006:	4618      	mov	r0, r3
 8006008:	ee09 3a90 	vmov	s19, r3
 800600c:	f00d fb3c 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006010:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006014:	4618      	mov	r0, r3
 8006016:	ee0a 3a10 	vmov	s20, r3
 800601a:	f00d fb35 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800601e:	4a33      	ldr	r2, [pc, #204]	; (80060ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006020:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006024:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006028:	4a31      	ldr	r2, [pc, #196]	; (80060f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800602a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800602e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006032:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006036:	f00e f9e3 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800603a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800603e:	462a      	mov	r2, r5
 8006040:	4658      	mov	r0, fp
 8006042:	9300      	str	r3, [sp, #0]
 8006044:	4629      	mov	r1, r5
 8006046:	23f0      	movs	r3, #240	; 0xf0
 8006048:	f7fc fb94 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 800604c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800604e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006052:	66a3      	str	r3, [r4, #104]	; 0x68
 8006054:	4659      	mov	r1, fp
 8006056:	4630      	mov	r0, r6
 8006058:	f00a fc45 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800605c:	462a      	mov	r2, r5
 800605e:	4650      	mov	r0, sl
 8006060:	4629      	mov	r1, r5
 8006062:	f7fc fb7a 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006066:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006068:	4650      	mov	r0, sl
 800606a:	a90a      	add	r1, sp, #40	; 0x28
 800606c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006070:	f00d f9c9 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006074:	4651      	mov	r1, sl
 8006076:	4630      	mov	r0, r6
 8006078:	f00a fc35 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800607c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006080:	2156      	movs	r1, #86	; 0x56
 8006082:	4648      	mov	r0, r9
 8006084:	f7fc fb69 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006088:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800608c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006090:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006094:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006098:	4650      	mov	r0, sl
 800609a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800609e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80060a2:	4649      	mov	r1, r9
 80060a4:	4798      	blx	r3
 80060a6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80060aa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80060ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060b2:	4b10      	ldr	r3, [pc, #64]	; (80060f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80060b4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80060b6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80060ba:	b92b      	cbnz	r3, 80060c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80060bc:	4b0e      	ldr	r3, [pc, #56]	; (80060f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80060be:	4a0f      	ldr	r2, [pc, #60]	; (80060fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80060c0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060c2:	480f      	ldr	r0, [pc, #60]	; (8006100 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80060c4:	f024 fd70 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80060c8:	4b0e      	ldr	r3, [pc, #56]	; (8006104 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060ca:	881b      	ldrh	r3, [r3, #0]
 80060cc:	2b17      	cmp	r3, #23
 80060ce:	d81d      	bhi.n	800610c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80060d0:	4b0d      	ldr	r3, [pc, #52]	; (8006108 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80060d2:	4a0a      	ldr	r2, [pc, #40]	; (80060fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80060d4:	2161      	movs	r1, #97	; 0x61
 80060d6:	e7f4      	b.n	80060c2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80060d8:	0802e34c 	.word	0x0802e34c
 80060dc:	0802f4d4 	.word	0x0802f4d4
 80060e0:	0802f69c 	.word	0x0802f69c
 80060e4:	0802c770 	.word	0x0802c770
 80060e8:	0802f208 	.word	0x0802f208
 80060ec:	0802e334 	.word	0x0802e334
 80060f0:	08005eed 	.word	0x08005eed
 80060f4:	2001301c 	.word	0x2001301c
 80060f8:	0802c5b0 	.word	0x0802c5b0
 80060fc:	0802c6b2 	.word	0x0802c6b2
 8006100:	0802c62d 	.word	0x0802c62d
 8006104:	20013020 	.word	0x20013020
 8006108:	0802c674 	.word	0x0802c674
        return texts->getText(typedTextId);
 800610c:	4b93      	ldr	r3, [pc, #588]	; (800635c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 800610e:	2117      	movs	r1, #23
 8006110:	6818      	ldr	r0, [r3, #0]
 8006112:	f002 f893 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8006116:	4a92      	ldr	r2, [pc, #584]	; (8006360 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006118:	4603      	mov	r3, r0
 800611a:	2104      	movs	r1, #4
 800611c:	4650      	mov	r0, sl
 800611e:	f013 f829 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006122:	4648      	mov	r0, r9
        wc1 = value;
 8006124:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006128:	f00c fd72 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800612c:	4b8d      	ldr	r3, [pc, #564]	; (8006364 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800612e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006130:	a90a      	add	r1, sp, #40	; 0x28
 8006132:	2318      	movs	r3, #24
 8006134:	4648      	mov	r0, r9
 8006136:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800613a:	f00c fd89 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800613e:	4649      	mov	r1, r9
 8006140:	4630      	mov	r0, r6
 8006142:	f00a fbd0 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006146:	230a      	movs	r3, #10
 8006148:	9300      	str	r3, [sp, #0]
 800614a:	2232      	movs	r2, #50	; 0x32
 800614c:	23f0      	movs	r3, #240	; 0xf0
 800614e:	4629      	mov	r1, r5
 8006150:	4638      	mov	r0, r7
 8006152:	f7fc fb0f 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006156:	9b03      	ldr	r3, [sp, #12]
 8006158:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800615c:	22a0      	movs	r2, #160	; 0xa0
 800615e:	4611      	mov	r1, r2
 8006160:	4638      	mov	r0, r7
 8006162:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006166:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800616a:	f00c f92b 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800616e:	22a0      	movs	r2, #160	; 0xa0
 8006170:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006174:	4638      	mov	r0, r7
 8006176:	f00c f930 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800617a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800617e:	2b20      	cmp	r3, #32
 8006180:	d005      	beq.n	800618e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006182:	2320      	movs	r3, #32
 8006184:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006188:	4638      	mov	r0, r7
 800618a:	f00c f825 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800618e:	4638      	mov	r0, r7
 8006190:	2101      	movs	r1, #1
 8006192:	f00c f92d 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006196:	4639      	mov	r1, r7
 8006198:	4630      	mov	r0, r6
 800619a:	ad04      	add	r5, sp, #16
        color = newColor;
 800619c:	f04f 37ff 	mov.w	r7, #4294967295
 80061a0:	f00a fba1 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80061a4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80061a8:	2223      	movs	r2, #35	; 0x23
 80061aa:	4640      	mov	r0, r8
 80061ac:	2145      	movs	r1, #69	; 0x45
 80061ae:	f7fc fad4 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80061b2:	4641      	mov	r1, r8
 80061b4:	4628      	mov	r0, r5
        color = newColor;
 80061b6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80061ba:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80061be:	f00c faad 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80061c6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80061ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061ce:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006364 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80061d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80061d6:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80061d8:	a90a      	add	r1, sp, #40	; 0x28
 80061da:	4640      	mov	r0, r8
 80061dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061e0:	f00c fd36 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061e4:	4641      	mov	r1, r8
 80061e6:	4630      	mov	r0, r6
 80061e8:	f00a fb7d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80061ec:	ee18 0a10 	vmov	r0, s16
 80061f0:	220c      	movs	r2, #12
 80061f2:	2136      	movs	r1, #54	; 0x36
 80061f4:	f7fc fab1 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80061f8:	ee18 1a10 	vmov	r1, s16
 80061fc:	4628      	mov	r0, r5
        color = newColor;
 80061fe:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006202:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006206:	f00c fa89 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800620a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800620e:	ee18 3a10 	vmov	r3, s16
 8006212:	333c      	adds	r3, #60	; 0x3c
 8006214:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006218:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800621a:	ee18 0a10 	vmov	r0, s16
 800621e:	a90a      	add	r1, sp, #40	; 0x28
 8006220:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006224:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006228:	f00c fd12 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800622c:	ee18 1a10 	vmov	r1, s16
 8006230:	4630      	mov	r0, r6
 8006232:	f00a fb58 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006236:	ee18 0a90 	vmov	r0, s17
 800623a:	223c      	movs	r2, #60	; 0x3c
 800623c:	2121      	movs	r1, #33	; 0x21
 800623e:	f7fc fa8c 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006242:	ee18 1a90 	vmov	r1, s17
 8006246:	4628      	mov	r0, r5
        color = newColor;
 8006248:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800624c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006250:	f00c fa64 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006254:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006258:	ee18 3a90 	vmov	r3, s17
 800625c:	333c      	adds	r3, #60	; 0x3c
 800625e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006262:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006264:	ee18 0a90 	vmov	r0, s17
 8006268:	a90a      	add	r1, sp, #40	; 0x28
 800626a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800626e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006272:	f00c fced 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006276:	ee18 1a90 	vmov	r1, s17
 800627a:	4630      	mov	r0, r6
 800627c:	f00a fb33 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006280:	ee19 0a10 	vmov	r0, s18
 8006284:	22f0      	movs	r2, #240	; 0xf0
 8006286:	2121      	movs	r1, #33	; 0x21
 8006288:	f7fc fa67 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800628c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006290:	aa0a      	add	r2, sp, #40	; 0x28
 8006292:	f04f 0802 	mov.w	r8, #2
 8006296:	a909      	add	r1, sp, #36	; 0x24
 8006298:	ee19 0a10 	vmov	r0, s18
 800629c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80062a0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80062a4:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062a8:	f00c feb7 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80062ac:	2335      	movs	r3, #53	; 0x35
 80062ae:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80062b2:	3510      	adds	r5, #16
        updateTextPosition();
 80062b4:	ee19 0a10 	vmov	r0, s18
 80062b8:	f7fc faa4 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80062bc:	ee19 1a10 	vmov	r1, s18
 80062c0:	4630      	mov	r0, r6
        colorPressed = col;
 80062c2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80062c6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80062ca:	f00a fb0c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80062ce:	ee19 0a90 	vmov	r0, s19
 80062d2:	22aa      	movs	r2, #170	; 0xaa
 80062d4:	2121      	movs	r1, #33	; 0x21
 80062d6:	f7fc fa40 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062da:	aa0a      	add	r2, sp, #40	; 0x28
 80062dc:	a909      	add	r1, sp, #36	; 0x24
 80062de:	ee19 0a90 	vmov	r0, s19
 80062e2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80062e6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80062ea:	f00c fe96 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80062ee:	2334      	movs	r3, #52	; 0x34
 80062f0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80062f4:	ee19 0a90 	vmov	r0, s19
 80062f8:	f7fc fa84 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80062fc:	ee19 1a90 	vmov	r1, s19
 8006300:	4630      	mov	r0, r6
        colorPressed = col;
 8006302:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006306:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800630a:	f00a faec 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800630e:	ee1a 0a10 	vmov	r0, s20
 8006312:	2264      	movs	r2, #100	; 0x64
 8006314:	2121      	movs	r1, #33	; 0x21
 8006316:	f7fc fa20 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800631a:	aa0a      	add	r2, sp, #40	; 0x28
 800631c:	a909      	add	r1, sp, #36	; 0x24
 800631e:	ee1a 0a10 	vmov	r0, s20
 8006322:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006326:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800632a:	f00c fe76 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800632e:	2333      	movs	r3, #51	; 0x33
        updateTextPosition();
 8006330:	ee1a 0a10 	vmov	r0, s20
 8006334:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006338:	f7fc fa64 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800633c:	4630      	mov	r0, r6
        colorPressed = col;
 800633e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006342:	ee1a 1a10 	vmov	r1, s20
 8006346:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800634a:	f00a facc 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800634e:	4620      	mov	r0, r4
 8006350:	b00d      	add	sp, #52	; 0x34
 8006352:	ecbd 8b06 	vpop	{d8-d10}
 8006356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800635a:	bf00      	nop
 800635c:	20013028 	.word	0x20013028
 8006360:	0802c6ea 	.word	0x0802c6ea
 8006364:	0802c760 	.word	0x0802c760

08006368 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006368:	4770      	bx	lr

0800636a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800636a:	4770      	bx	lr

0800636c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800636c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800636e:	68c2      	ldr	r2, [r0, #12]
 8006370:	6844      	ldr	r4, [r0, #4]
 8006372:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006374:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006376:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800637a:	07d2      	lsls	r2, r2, #31
 800637c:	bf48      	it	mi
 800637e:	5962      	ldrmi	r2, [r4, r5]
 8006380:	689b      	ldr	r3, [r3, #8]
    }
 8006382:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006384:	bf48      	it	mi
 8006386:	58d3      	ldrmi	r3, [r2, r3]
 8006388:	4718      	bx	r3

0800638a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800638a:	6843      	ldr	r3, [r0, #4]
 800638c:	b12b      	cbz	r3, 800639a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800638e:	6883      	ldr	r3, [r0, #8]
 8006390:	b92b      	cbnz	r3, 800639e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006392:	68c0      	ldr	r0, [r0, #12]
 8006394:	f000 0001 	and.w	r0, r0, #1
 8006398:	4770      	bx	lr
 800639a:	4618      	mov	r0, r3
 800639c:	4770      	bx	lr
 800639e:	2001      	movs	r0, #1
    }
 80063a0:	4770      	bx	lr

080063a2 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80063a2:	b510      	push	{r4, lr}
 80063a4:	2110      	movs	r1, #16
 80063a6:	4604      	mov	r4, r0
 80063a8:	f023 fdeb 	bl	8029f82 <_ZdlPvj>
 80063ac:	4620      	mov	r0, r4
 80063ae:	bd10      	pop	{r4, pc}

080063b0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80063b0:	b510      	push	{r4, lr}
 80063b2:	4b03      	ldr	r3, [pc, #12]	; (80063c0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 80063b4:	6003      	str	r3, [r0, #0]
 80063b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063b8:	f00e f82c 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063bc:	4620      	mov	r0, r4
 80063be:	bd10      	pop	{r4, pc}
 80063c0:	0802e398 	.word	0x0802e398

080063c4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80063c4:	b507      	push	{r0, r1, r2, lr}
 80063c6:	4b07      	ldr	r3, [pc, #28]	; (80063e4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 80063c8:	6003      	str	r3, [r0, #0]
 80063ca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063cc:	f00e f822 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80063d0:	9801      	ldr	r0, [sp, #4]
 80063d2:	f241 015c 	movw	r1, #4188	; 0x105c
 80063d6:	f023 fdd4 	bl	8029f82 <_ZdlPvj>
 80063da:	9801      	ldr	r0, [sp, #4]
 80063dc:	b003      	add	sp, #12
 80063de:	f85d fb04 	ldr.w	pc, [sp], #4
 80063e2:	bf00      	nop
 80063e4:	0802e398 	.word	0x0802e398

080063e8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80063e8:	3098      	adds	r0, #152	; 0x98
 80063ea:	4288      	cmp	r0, r1
{
 80063ec:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80063ee:	d105      	bne.n	80063fc <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80063f0:	f00f fd12 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80063f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80063f8:	f7fd bd46 	b.w	8003e88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80063fc:	bd08      	pop	{r3, pc}
	...

08006400 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006404:	ed2d 8b02 	vpush	{d8}
 8006408:	4604      	mov	r4, r0
 800640a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 800640c:	46a1      	mov	r9, r4
 800640e:	2500      	movs	r5, #0
 8006410:	f011 f982 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8006414:	4ba5      	ldr	r3, [pc, #660]	; (80066ac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006416:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006418:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800641c:	2226      	movs	r2, #38	; 0x26
 800641e:	4629      	mov	r1, r5
 8006420:	4648      	mov	r0, r9
 8006422:	f024 fdc6 	bl	802afb2 <memset>
 8006426:	4648      	mov	r0, r9
 8006428:	f7fc f9b8 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 800642c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006430:	26ff      	movs	r6, #255	; 0xff
 8006432:	4b9f      	ldr	r3, [pc, #636]	; (80066b0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006434:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006436:	2226      	movs	r2, #38	; 0x26
 8006438:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800643c:	4629      	mov	r1, r5
 800643e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006442:	4640      	mov	r0, r8
 8006444:	66a5      	str	r5, [r4, #104]	; 0x68
 8006446:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800644a:	f024 fdb2 	bl	802afb2 <memset>
 800644e:	4640      	mov	r0, r8
 8006450:	f7fc f9a4 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8006454:	4b97      	ldr	r3, [pc, #604]	; (80066b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006456:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006458:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800645c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006460:	a90a      	add	r1, sp, #40	; 0x28
 8006462:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006466:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006468:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800646c:	f00c ffcb 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006470:	4658      	mov	r0, fp
 8006472:	f00d f909 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006476:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800647a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800647e:	4618      	mov	r0, r3
 8006480:	ee08 3a90 	vmov	s17, r3
 8006484:	f7fc f99c 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006488:	4638      	mov	r0, r7
 800648a:	f00b fe85 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 800648e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006492:	4618      	mov	r0, r3
 8006494:	9303      	str	r3, [sp, #12]
 8006496:	f7fa fdd7 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800649a:	4b87      	ldr	r3, [pc, #540]	; (80066b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 800649c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80064a0:	3324      	adds	r3, #36	; 0x24
 80064a2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80064a6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80064aa:	4618      	mov	r0, r3
 80064ac:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80064b0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80064b4:	ee08 3a10 	vmov	s16, r3
 80064b8:	f7fc f982 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80064bc:	4650      	mov	r0, sl
 80064be:	f7fc f97f 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80064c2:	4a7e      	ldr	r2, [pc, #504]	; (80066bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 80064c4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80064c8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80064cc:	4a7c      	ldr	r2, [pc, #496]	; (80066c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80064ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80064d2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80064d6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80064da:	f00d ff91 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80064de:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80064e2:	462a      	mov	r2, r5
 80064e4:	4648      	mov	r0, r9
 80064e6:	9300      	str	r3, [sp, #0]
 80064e8:	4629      	mov	r1, r5
 80064ea:	23f0      	movs	r3, #240	; 0xf0
 80064ec:	f7fc f942 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064f0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80064f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80064f6:	66a3      	str	r3, [r4, #104]	; 0x68
 80064f8:	4649      	mov	r1, r9
 80064fa:	4630      	mov	r0, r6
 80064fc:	f00a f9f3 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006500:	462a      	mov	r2, r5
 8006502:	4640      	mov	r0, r8
 8006504:	4629      	mov	r1, r5
 8006506:	f7fc f928 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800650a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800650c:	4640      	mov	r0, r8
 800650e:	a90a      	add	r1, sp, #40	; 0x28
 8006510:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006514:	f00c ff77 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006518:	4641      	mov	r1, r8
 800651a:	4630      	mov	r0, r6
 800651c:	f00a f9e3 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006520:	4658      	mov	r0, fp
 8006522:	f240 1201 	movw	r2, #257	; 0x101
 8006526:	2121      	movs	r1, #33	; 0x21
 8006528:	f7fc f917 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800652c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800652e:	aa0a      	add	r2, sp, #40	; 0x28
 8006530:	a909      	add	r1, sp, #36	; 0x24
 8006532:	4658      	mov	r0, fp
 8006534:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006538:	2302      	movs	r3, #2
 800653a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800653e:	f00c fd6c 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006542:	2322      	movs	r3, #34	; 0x22
        updateTextPosition();
 8006544:	4658      	mov	r0, fp
 8006546:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800654a:	f7fc f95b 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800654e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006552:	330c      	adds	r3, #12
        color = col;
 8006554:	f04f 39ff 	mov.w	r9, #4294967295
 8006558:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800655c:	4659      	mov	r1, fp
 800655e:	4630      	mov	r0, r6
        colorPressed = col;
 8006560:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006564:	f00a f9bf 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006568:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800656c:	223c      	movs	r2, #60	; 0x3c
 800656e:	ee18 0a90 	vmov	r0, s17
 8006572:	2117      	movs	r1, #23
 8006574:	f7fc f8f1 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006578:	ee18 1a90 	vmov	r1, s17
 800657c:	4640      	mov	r0, r8
        color = newColor;
 800657e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006582:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006586:	f00c f8c9 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800658a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800658e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006592:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006596:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80066c4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 800659a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800659e:	2323      	movs	r3, #35	; 0x23
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80065a0:	ee18 0a90 	vmov	r0, s17
 80065a4:	a90a      	add	r1, sp, #40	; 0x28
 80065a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065aa:	f00c fb51 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065ae:	ee18 1a90 	vmov	r1, s17
 80065b2:	4630      	mov	r0, r6
 80065b4:	f00a f997 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80065b8:	230a      	movs	r3, #10
 80065ba:	9300      	str	r3, [sp, #0]
 80065bc:	2232      	movs	r2, #50	; 0x32
 80065be:	23f0      	movs	r3, #240	; 0xf0
 80065c0:	4629      	mov	r1, r5
 80065c2:	4638      	mov	r0, r7
 80065c4:	f7fc f8d6 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065c8:	9b03      	ldr	r3, [sp, #12]
 80065ca:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065ce:	22a0      	movs	r2, #160	; 0xa0
 80065d0:	4611      	mov	r1, r2
 80065d2:	4638      	mov	r0, r7
 80065d4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065d8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80065dc:	f00b fef2 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065e0:	22a0      	movs	r2, #160	; 0xa0
 80065e2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065e6:	4638      	mov	r0, r7
 80065e8:	f00b fef7 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065ec:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80065f0:	2b20      	cmp	r3, #32
 80065f2:	d005      	beq.n	8006600 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80065f4:	2320      	movs	r3, #32
 80065f6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80065fa:	4638      	mov	r0, r7
 80065fc:	f00b fdec 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006600:	4638      	mov	r0, r7
 8006602:	2101      	movs	r1, #1
 8006604:	f00b fef4 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006608:	4639      	mov	r1, r7
 800660a:	4630      	mov	r0, r6
 800660c:	f00a f96b 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006610:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006614:	ee18 0a10 	vmov	r0, s16
 8006618:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800661a:	2500      	movs	r5, #0
 800661c:	2145      	movs	r1, #69	; 0x45
 800661e:	f7fc f89c 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006622:	ee18 1a10 	vmov	r1, s16
 8006626:	4640      	mov	r0, r8
        color = newColor;
 8006628:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800662c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006630:	f00c f874 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006634:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006638:	ee18 3a10 	vmov	r3, s16
 800663c:	333c      	adds	r3, #60	; 0x3c
 800663e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006642:	2324      	movs	r3, #36	; 0x24
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006644:	ee18 0a10 	vmov	r0, s16
 8006648:	a90a      	add	r1, sp, #40	; 0x28
 800664a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800664e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006652:	f00c fafd 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006656:	ee18 1a10 	vmov	r1, s16
 800665a:	4630      	mov	r0, r6
 800665c:	f00a f943 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006660:	220c      	movs	r2, #12
 8006662:	4650      	mov	r0, sl
 8006664:	2136      	movs	r1, #54	; 0x36
 8006666:	f7fc f878 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800666a:	4651      	mov	r1, sl
 800666c:	4640      	mov	r0, r8
        color = newColor;
 800666e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006672:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006676:	f00c f851 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800667a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800667e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006682:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006686:	2325      	movs	r3, #37	; 0x25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006688:	a90a      	add	r1, sp, #40	; 0x28
 800668a:	4650      	mov	r0, sl
 800668c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006690:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006694:	f00c fadc 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006698:	4630      	mov	r0, r6
 800669a:	4651      	mov	r1, sl
 800669c:	f00a f923 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80066a0:	4620      	mov	r0, r4
 80066a2:	b00d      	add	sp, #52	; 0x34
 80066a4:	ecbd 8b02 	vpop	{d8}
 80066a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066ac:	0802e398 	.word	0x0802e398
 80066b0:	0802f4d4 	.word	0x0802f4d4
 80066b4:	0802f69c 	.word	0x0802f69c
 80066b8:	0802f208 	.word	0x0802f208
 80066bc:	0802e380 	.word	0x0802e380
 80066c0:	080063e9 	.word	0x080063e9
 80066c4:	0802c760 	.word	0x0802c760

080066c8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 80066c8:	4770      	bx	lr

080066ca <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ca:	4770      	bx	lr

080066cc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80066cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066ce:	68c2      	ldr	r2, [r0, #12]
 80066d0:	6844      	ldr	r4, [r0, #4]
 80066d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80066d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80066d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066da:	07d2      	lsls	r2, r2, #31
 80066dc:	bf48      	it	mi
 80066de:	5962      	ldrmi	r2, [r4, r5]
 80066e0:	689b      	ldr	r3, [r3, #8]
    }
 80066e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066e4:	bf48      	it	mi
 80066e6:	58d3      	ldrmi	r3, [r2, r3]
 80066e8:	4718      	bx	r3

080066ea <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066ea:	6843      	ldr	r3, [r0, #4]
 80066ec:	b12b      	cbz	r3, 80066fa <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066ee:	6883      	ldr	r3, [r0, #8]
 80066f0:	b92b      	cbnz	r3, 80066fe <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066f2:	68c0      	ldr	r0, [r0, #12]
 80066f4:	f000 0001 	and.w	r0, r0, #1
 80066f8:	4770      	bx	lr
 80066fa:	4618      	mov	r0, r3
 80066fc:	4770      	bx	lr
 80066fe:	2001      	movs	r0, #1
    }
 8006700:	4770      	bx	lr

08006702 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006702:	b510      	push	{r4, lr}
 8006704:	2110      	movs	r1, #16
 8006706:	4604      	mov	r4, r0
 8006708:	f023 fc3b 	bl	8029f82 <_ZdlPvj>
 800670c:	4620      	mov	r0, r4
 800670e:	bd10      	pop	{r4, pc}

08006710 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006710:	b510      	push	{r4, lr}
 8006712:	4b03      	ldr	r3, [pc, #12]	; (8006720 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006714:	6003      	str	r3, [r0, #0]
 8006716:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006718:	f00d fe7c 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800671c:	4620      	mov	r0, r4
 800671e:	bd10      	pop	{r4, pc}
 8006720:	0802e3e4 	.word	0x0802e3e4

08006724 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006724:	b507      	push	{r0, r1, r2, lr}
 8006726:	4b07      	ldr	r3, [pc, #28]	; (8006744 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006728:	6003      	str	r3, [r0, #0]
 800672a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800672c:	f00d fe72 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006730:	9801      	ldr	r0, [sp, #4]
 8006732:	f241 015c 	movw	r1, #4188	; 0x105c
 8006736:	f023 fc24 	bl	8029f82 <_ZdlPvj>
 800673a:	9801      	ldr	r0, [sp, #4]
 800673c:	b003      	add	sp, #12
 800673e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006742:	bf00      	nop
 8006744:	0802e3e4 	.word	0x0802e3e4

08006748 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006748:	3098      	adds	r0, #152	; 0x98
 800674a:	4288      	cmp	r0, r1
{
 800674c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800674e:	d105      	bne.n	800675c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006750:	f00f fb62 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006754:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006758:	f7fd bb96 	b.w	8003e88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800675c:	bd08      	pop	{r3, pc}
	...

08006760 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006764:	ed2d 8b02 	vpush	{d8}
 8006768:	4604      	mov	r4, r0
 800676a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 800676c:	46a1      	mov	r9, r4
 800676e:	2500      	movs	r5, #0
 8006770:	f010 ffd2 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8006774:	4ba5      	ldr	r3, [pc, #660]	; (8006a0c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006776:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006778:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800677c:	2226      	movs	r2, #38	; 0x26
 800677e:	4629      	mov	r1, r5
 8006780:	4648      	mov	r0, r9
 8006782:	f024 fc16 	bl	802afb2 <memset>
 8006786:	4648      	mov	r0, r9
 8006788:	f7fc f808 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 800678c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006790:	26ff      	movs	r6, #255	; 0xff
 8006792:	4b9f      	ldr	r3, [pc, #636]	; (8006a10 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006794:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006796:	2226      	movs	r2, #38	; 0x26
 8006798:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800679c:	4629      	mov	r1, r5
 800679e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80067a2:	4640      	mov	r0, r8
 80067a4:	66a5      	str	r5, [r4, #104]	; 0x68
 80067a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067aa:	f024 fc02 	bl	802afb2 <memset>
 80067ae:	4640      	mov	r0, r8
 80067b0:	f7fb fff4 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 80067b4:	4b97      	ldr	r3, [pc, #604]	; (8006a14 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 80067b6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067bc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067c0:	a90a      	add	r1, sp, #40	; 0x28
 80067c2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80067c6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80067c8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067cc:	f00c fe1b 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80067d0:	4658      	mov	r0, fp
 80067d2:	f00c ff59 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067d6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80067da:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80067de:	4618      	mov	r0, r3
 80067e0:	ee08 3a90 	vmov	s17, r3
 80067e4:	f7fb ffec 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80067e8:	4638      	mov	r0, r7
 80067ea:	f00b fcd5 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 80067ee:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067f2:	4618      	mov	r0, r3
 80067f4:	9303      	str	r3, [sp, #12]
 80067f6:	f7fa fc27 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067fa:	4b87      	ldr	r3, [pc, #540]	; (8006a18 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 80067fc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006800:	3324      	adds	r3, #36	; 0x24
 8006802:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006806:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800680a:	4618      	mov	r0, r3
 800680c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006810:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006814:	ee08 3a10 	vmov	s16, r3
 8006818:	f7fb ffd2 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800681c:	4650      	mov	r0, sl
 800681e:	f7fb ffcf 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006822:	4a7e      	ldr	r2, [pc, #504]	; (8006a1c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006824:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006828:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800682c:	4a7c      	ldr	r2, [pc, #496]	; (8006a20 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800682e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006832:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006836:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800683a:	f00d fde1 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800683e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006842:	462a      	mov	r2, r5
 8006844:	4648      	mov	r0, r9
 8006846:	9300      	str	r3, [sp, #0]
 8006848:	4629      	mov	r1, r5
 800684a:	23f0      	movs	r3, #240	; 0xf0
 800684c:	f7fb ff92 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006850:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006852:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006856:	66a3      	str	r3, [r4, #104]	; 0x68
 8006858:	4649      	mov	r1, r9
 800685a:	4630      	mov	r0, r6
 800685c:	f00a f843 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006860:	462a      	mov	r2, r5
 8006862:	4640      	mov	r0, r8
 8006864:	4629      	mov	r1, r5
 8006866:	f7fb ff78 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800686a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800686c:	4640      	mov	r0, r8
 800686e:	a90a      	add	r1, sp, #40	; 0x28
 8006870:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006874:	f00c fdc7 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006878:	4641      	mov	r1, r8
 800687a:	4630      	mov	r0, r6
 800687c:	f00a f833 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006880:	4658      	mov	r0, fp
 8006882:	f240 1201 	movw	r2, #257	; 0x101
 8006886:	2121      	movs	r1, #33	; 0x21
 8006888:	f7fb ff67 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800688c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800688e:	aa0a      	add	r2, sp, #40	; 0x28
 8006890:	a909      	add	r1, sp, #36	; 0x24
 8006892:	4658      	mov	r0, fp
 8006894:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006898:	2302      	movs	r3, #2
 800689a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800689e:	f00c fbbc 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80068a2:	231e      	movs	r3, #30
        updateTextPosition();
 80068a4:	4658      	mov	r0, fp
 80068a6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80068aa:	f7fb ffab 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80068ae:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80068b2:	330c      	adds	r3, #12
        color = col;
 80068b4:	f04f 39ff 	mov.w	r9, #4294967295
 80068b8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80068bc:	4659      	mov	r1, fp
 80068be:	4630      	mov	r0, r6
        colorPressed = col;
 80068c0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80068c4:	f00a f80f 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80068c8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80068cc:	223c      	movs	r2, #60	; 0x3c
 80068ce:	ee18 0a90 	vmov	r0, s17
 80068d2:	2117      	movs	r1, #23
 80068d4:	f7fb ff41 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80068d8:	ee18 1a90 	vmov	r1, s17
 80068dc:	4640      	mov	r0, r8
        color = newColor;
 80068de:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80068e2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80068e6:	f00b ff19 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80068ee:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80068f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80068f6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006a24 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80068fa:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80068fe:	231f      	movs	r3, #31
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006900:	ee18 0a90 	vmov	r0, s17
 8006904:	a90a      	add	r1, sp, #40	; 0x28
 8006906:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800690a:	f00c f9a1 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800690e:	ee18 1a90 	vmov	r1, s17
 8006912:	4630      	mov	r0, r6
 8006914:	f009 ffe7 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006918:	230a      	movs	r3, #10
 800691a:	9300      	str	r3, [sp, #0]
 800691c:	2232      	movs	r2, #50	; 0x32
 800691e:	23f0      	movs	r3, #240	; 0xf0
 8006920:	4629      	mov	r1, r5
 8006922:	4638      	mov	r0, r7
 8006924:	f7fb ff26 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006928:	9b03      	ldr	r3, [sp, #12]
 800692a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800692e:	22a0      	movs	r2, #160	; 0xa0
 8006930:	4611      	mov	r1, r2
 8006932:	4638      	mov	r0, r7
 8006934:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006938:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800693c:	f00b fd42 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006940:	22a0      	movs	r2, #160	; 0xa0
 8006942:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006946:	4638      	mov	r0, r7
 8006948:	f00b fd47 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800694c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006950:	2b20      	cmp	r3, #32
 8006952:	d005      	beq.n	8006960 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006954:	2320      	movs	r3, #32
 8006956:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800695a:	4638      	mov	r0, r7
 800695c:	f00b fc3c 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006960:	4638      	mov	r0, r7
 8006962:	2101      	movs	r1, #1
 8006964:	f00b fd44 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006968:	4639      	mov	r1, r7
 800696a:	4630      	mov	r0, r6
 800696c:	f009 ffbb 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006970:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006974:	ee18 0a10 	vmov	r0, s16
 8006978:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800697a:	2500      	movs	r5, #0
 800697c:	2145      	movs	r1, #69	; 0x45
 800697e:	f7fb feec 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006982:	ee18 1a10 	vmov	r1, s16
 8006986:	4640      	mov	r0, r8
        color = newColor;
 8006988:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800698c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006990:	f00b fec4 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006994:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006998:	ee18 3a10 	vmov	r3, s16
 800699c:	333c      	adds	r3, #60	; 0x3c
 800699e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069a2:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80069a4:	ee18 0a10 	vmov	r0, s16
 80069a8:	a90a      	add	r1, sp, #40	; 0x28
 80069aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069ae:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80069b2:	f00c f94d 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069b6:	ee18 1a10 	vmov	r1, s16
 80069ba:	4630      	mov	r0, r6
 80069bc:	f009 ff93 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069c0:	220c      	movs	r2, #12
 80069c2:	4650      	mov	r0, sl
 80069c4:	2136      	movs	r1, #54	; 0x36
 80069c6:	f7fb fec8 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80069ca:	4651      	mov	r1, sl
 80069cc:	4640      	mov	r0, r8
        color = newColor;
 80069ce:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80069d2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80069d6:	f00b fea1 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069da:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069de:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80069e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069e6:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80069e8:	a90a      	add	r1, sp, #40	; 0x28
 80069ea:	4650      	mov	r0, sl
 80069ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069f0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80069f4:	f00c f92c 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069f8:	4630      	mov	r0, r6
 80069fa:	4651      	mov	r1, sl
 80069fc:	f009 ff73 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a00:	4620      	mov	r0, r4
 8006a02:	b00d      	add	sp, #52	; 0x34
 8006a04:	ecbd 8b02 	vpop	{d8}
 8006a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a0c:	0802e3e4 	.word	0x0802e3e4
 8006a10:	0802f4d4 	.word	0x0802f4d4
 8006a14:	0802f69c 	.word	0x0802f69c
 8006a18:	0802f208 	.word	0x0802f208
 8006a1c:	0802e3cc 	.word	0x0802e3cc
 8006a20:	08006749 	.word	0x08006749
 8006a24:	0802c760 	.word	0x0802c760

08006a28 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006a28:	4770      	bx	lr

08006a2a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a2a:	4770      	bx	lr

08006a2c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a2c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a2e:	68c2      	ldr	r2, [r0, #12]
 8006a30:	6844      	ldr	r4, [r0, #4]
 8006a32:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a34:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a36:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a3a:	07d2      	lsls	r2, r2, #31
 8006a3c:	bf48      	it	mi
 8006a3e:	5962      	ldrmi	r2, [r4, r5]
 8006a40:	689b      	ldr	r3, [r3, #8]
    }
 8006a42:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a44:	bf48      	it	mi
 8006a46:	58d3      	ldrmi	r3, [r2, r3]
 8006a48:	4718      	bx	r3

08006a4a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006a4a:	6843      	ldr	r3, [r0, #4]
 8006a4c:	b12b      	cbz	r3, 8006a5a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006a4e:	6883      	ldr	r3, [r0, #8]
 8006a50:	b92b      	cbnz	r3, 8006a5e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a52:	68c0      	ldr	r0, [r0, #12]
 8006a54:	f000 0001 	and.w	r0, r0, #1
 8006a58:	4770      	bx	lr
 8006a5a:	4618      	mov	r0, r3
 8006a5c:	4770      	bx	lr
 8006a5e:	2001      	movs	r0, #1
    }
 8006a60:	4770      	bx	lr

08006a62 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a62:	b510      	push	{r4, lr}
 8006a64:	2110      	movs	r1, #16
 8006a66:	4604      	mov	r4, r0
 8006a68:	f023 fa8b 	bl	8029f82 <_ZdlPvj>
 8006a6c:	4620      	mov	r0, r4
 8006a6e:	bd10      	pop	{r4, pc}

08006a70 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006a70:	b510      	push	{r4, lr}
 8006a72:	4b03      	ldr	r3, [pc, #12]	; (8006a80 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006a74:	6003      	str	r3, [r0, #0]
 8006a76:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a78:	f00d fccc 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a7c:	4620      	mov	r0, r4
 8006a7e:	bd10      	pop	{r4, pc}
 8006a80:	0802e430 	.word	0x0802e430

08006a84 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006a84:	b507      	push	{r0, r1, r2, lr}
 8006a86:	4b07      	ldr	r3, [pc, #28]	; (8006aa4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006a88:	6003      	str	r3, [r0, #0]
 8006a8a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a8c:	f00d fcc2 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006a90:	9801      	ldr	r0, [sp, #4]
 8006a92:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006a96:	f023 fa74 	bl	8029f82 <_ZdlPvj>
 8006a9a:	9801      	ldr	r0, [sp, #4]
 8006a9c:	b003      	add	sp, #12
 8006a9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006aa2:	bf00      	nop
 8006aa4:	0802e430 	.word	0x0802e430

08006aa8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006aa8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006aaa:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006aae:	4299      	cmp	r1, r3
{
 8006ab0:	4604      	mov	r4, r0
 8006ab2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006ab4:	d103      	bne.n	8006abe <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006ab6:	f00f f9af 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006aba:	f7fd f995 	bl	8003de8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006abe:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006ac2:	429d      	cmp	r5, r3
 8006ac4:	d103      	bne.n	8006ace <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006ac6:	f00f f9a7 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006aca:	f7fd f9ad 	bl	8003e28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006ace:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006ad2:	42a5      	cmp	r5, r4
 8006ad4:	d105      	bne.n	8006ae2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006ad6:	f00f f99f 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006ada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006ade:	f7fd b9b3 	b.w	8003e48 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006ae2:	bd38      	pop	{r3, r4, r5, pc}

08006ae4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ae8:	ed2d 8b06 	vpush	{d8-d10}
 8006aec:	4604      	mov	r4, r0
 8006aee:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006af0:	46a3      	mov	fp, r4
 8006af2:	2500      	movs	r5, #0
 8006af4:	f010 fe10 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8006af8:	4b66      	ldr	r3, [pc, #408]	; (8006c94 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006afa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006afc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006b00:	2226      	movs	r2, #38	; 0x26
 8006b02:	4629      	mov	r1, r5
 8006b04:	4658      	mov	r0, fp
 8006b06:	f024 fa54 	bl	802afb2 <memset>
 8006b0a:	4658      	mov	r0, fp
 8006b0c:	f7fb fe46 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8006b10:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006b14:	26ff      	movs	r6, #255	; 0xff
 8006b16:	4b60      	ldr	r3, [pc, #384]	; (8006c98 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006b18:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b1a:	2226      	movs	r2, #38	; 0x26
 8006b1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b20:	4629      	mov	r1, r5
 8006b22:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b26:	4650      	mov	r0, sl
 8006b28:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b2a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b2e:	f024 fa40 	bl	802afb2 <memset>
 8006b32:	4650      	mov	r0, sl
 8006b34:	f7fb fe32 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8006b38:	4b58      	ldr	r3, [pc, #352]	; (8006c9c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006b3a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b3c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b40:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b44:	a90a      	add	r1, sp, #40	; 0x28
 8006b46:	4650      	mov	r0, sl
 8006b48:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006b4c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b50:	f00c fc59 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006b54:	4648      	mov	r0, r9
 8006b56:	f7fb fe33 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006b5a:	4b51      	ldr	r3, [pc, #324]	; (8006ca0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006b5c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006b60:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006b64:	4618      	mov	r0, r3
 8006b66:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006b6a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006b6e:	ee08 3a90 	vmov	s17, r3
 8006b72:	f7fb fe25 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006b76:	4638      	mov	r0, r7
 8006b78:	f00b fb0e 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8006b7c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006b80:	4618      	mov	r0, r3
 8006b82:	9303      	str	r3, [sp, #12]
 8006b84:	f7fa fa60 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006b88:	4b46      	ldr	r3, [pc, #280]	; (8006ca4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006b8a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006b8e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006b92:	3324      	adds	r3, #36	; 0x24
 8006b94:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006b98:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006b9c:	4640      	mov	r0, r8
 8006b9e:	f7fb fe0f 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006ba2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006ba6:	4618      	mov	r0, r3
 8006ba8:	ee08 3a10 	vmov	s16, r3
 8006bac:	f7fb fe08 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006bb0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006bb4:	4618      	mov	r0, r3
 8006bb6:	ee09 3a10 	vmov	s18, r3
 8006bba:	f00c fd65 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bbe:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006bc2:	4618      	mov	r0, r3
 8006bc4:	ee09 3a90 	vmov	s19, r3
 8006bc8:	f00c fd5e 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bcc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006bd0:	4618      	mov	r0, r3
 8006bd2:	ee0a 3a10 	vmov	s20, r3
 8006bd6:	f00c fd57 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bda:	4a33      	ldr	r2, [pc, #204]	; (8006ca8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006bdc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006be0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006be4:	4a31      	ldr	r2, [pc, #196]	; (8006cac <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006be6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006bea:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006bee:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006bf2:	f00d fc05 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006bf6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006bfa:	462a      	mov	r2, r5
 8006bfc:	4658      	mov	r0, fp
 8006bfe:	9300      	str	r3, [sp, #0]
 8006c00:	4629      	mov	r1, r5
 8006c02:	23f0      	movs	r3, #240	; 0xf0
 8006c04:	f7fb fdb6 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c08:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006c0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c0e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c10:	4659      	mov	r1, fp
 8006c12:	4630      	mov	r0, r6
 8006c14:	f009 fe67 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006c18:	462a      	mov	r2, r5
 8006c1a:	4650      	mov	r0, sl
 8006c1c:	4629      	mov	r1, r5
 8006c1e:	f7fb fd9c 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006c22:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006c24:	4650      	mov	r0, sl
 8006c26:	a90a      	add	r1, sp, #40	; 0x28
 8006c28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c2c:	f00c fbeb 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c30:	4651      	mov	r1, sl
 8006c32:	4630      	mov	r0, r6
 8006c34:	f009 fe57 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006c38:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006c3c:	2156      	movs	r1, #86	; 0x56
 8006c3e:	4648      	mov	r0, r9
 8006c40:	f7fb fd8b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006c44:	f04f 33ff 	mov.w	r3, #4294967295
 8006c48:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006c4c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006c50:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006c54:	f10d 0b10 	add.w	fp, sp, #16
 8006c58:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006c5c:	4649      	mov	r1, r9
 8006c5e:	4658      	mov	r0, fp
 8006c60:	4798      	blx	r3
 8006c62:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006c66:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006c6a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006c6e:	4b10      	ldr	r3, [pc, #64]	; (8006cb0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006c70:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006c72:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006c76:	b92b      	cbnz	r3, 8006c84 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006c78:	4b0e      	ldr	r3, [pc, #56]	; (8006cb4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006c7a:	4a0f      	ldr	r2, [pc, #60]	; (8006cb8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006c7c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c7e:	480f      	ldr	r0, [pc, #60]	; (8006cbc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006c80:	f023 ff92 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006c84:	4b0e      	ldr	r3, [pc, #56]	; (8006cc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c86:	881b      	ldrh	r3, [r3, #0]
 8006c88:	2b19      	cmp	r3, #25
 8006c8a:	d81d      	bhi.n	8006cc8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006c8c:	4b0d      	ldr	r3, [pc, #52]	; (8006cc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006c8e:	4a0a      	ldr	r2, [pc, #40]	; (8006cb8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006c90:	2161      	movs	r1, #97	; 0x61
 8006c92:	e7f4      	b.n	8006c7e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006c94:	0802e430 	.word	0x0802e430
 8006c98:	0802f4d4 	.word	0x0802f4d4
 8006c9c:	0802f69c 	.word	0x0802f69c
 8006ca0:	0802c770 	.word	0x0802c770
 8006ca4:	0802f208 	.word	0x0802f208
 8006ca8:	0802e418 	.word	0x0802e418
 8006cac:	08006aa9 	.word	0x08006aa9
 8006cb0:	2001301c 	.word	0x2001301c
 8006cb4:	0802c5b0 	.word	0x0802c5b0
 8006cb8:	0802c6b2 	.word	0x0802c6b2
 8006cbc:	0802c62d 	.word	0x0802c62d
 8006cc0:	20013020 	.word	0x20013020
 8006cc4:	0802c674 	.word	0x0802c674
        return texts->getText(typedTextId);
 8006cc8:	4b95      	ldr	r3, [pc, #596]	; (8006f20 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8006cca:	2119      	movs	r1, #25
 8006ccc:	6818      	ldr	r0, [r3, #0]
 8006cce:	f001 fab5 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8006cd2:	4a94      	ldr	r2, [pc, #592]	; (8006f24 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006cd4:	4603      	mov	r3, r0
 8006cd6:	2104      	movs	r1, #4
 8006cd8:	4650      	mov	r0, sl
 8006cda:	f012 fa4b 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006cde:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006ce2:	4648      	mov	r0, r9
 8006ce4:	f00b ff94 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ce8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006f28 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006cec:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006cf0:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006cf2:	a90a      	add	r1, sp, #40	; 0x28
 8006cf4:	4648      	mov	r0, r9
 8006cf6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cfa:	f00b ffa9 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cfe:	4649      	mov	r1, r9
 8006d00:	4630      	mov	r0, r6
 8006d02:	f009 fdf0 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006d06:	223c      	movs	r2, #60	; 0x3c
 8006d08:	ee18 0a90 	vmov	r0, s17
 8006d0c:	2129      	movs	r1, #41	; 0x29
 8006d0e:	f7fb fd24 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006d12:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006d16:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006d1a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d1e:	4658      	mov	r0, fp
        linespace = space;
 8006d20:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006d24:	f00b fcfa 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d28:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006d2c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006d30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d34:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006d36:	ee18 0a90 	vmov	r0, s17
 8006d3a:	a90a      	add	r1, sp, #40	; 0x28
 8006d3c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d40:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006d44:	f00b ff84 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d48:	ee18 1a90 	vmov	r1, s17
 8006d4c:	4630      	mov	r0, r6
 8006d4e:	f009 fdca 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d52:	230a      	movs	r3, #10
 8006d54:	9300      	str	r3, [sp, #0]
 8006d56:	2232      	movs	r2, #50	; 0x32
 8006d58:	23f0      	movs	r3, #240	; 0xf0
 8006d5a:	4629      	mov	r1, r5
 8006d5c:	4638      	mov	r0, r7
 8006d5e:	f7fb fd09 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d62:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d66:	22a0      	movs	r2, #160	; 0xa0
 8006d68:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006d6c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006d70:	9b03      	ldr	r3, [sp, #12]
 8006d72:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006d76:	4611      	mov	r1, r2
 8006d78:	4638      	mov	r0, r7
 8006d7a:	f00b fb23 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d7e:	22a0      	movs	r2, #160	; 0xa0
 8006d80:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d84:	4638      	mov	r0, r7
 8006d86:	f00b fb28 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d8a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006d8e:	2b20      	cmp	r3, #32
 8006d90:	d005      	beq.n	8006d9e <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006d92:	2320      	movs	r3, #32
 8006d94:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006d98:	4638      	mov	r0, r7
 8006d9a:	f00b fa1d 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d9e:	4638      	mov	r0, r7
 8006da0:	2101      	movs	r1, #1
 8006da2:	f00b fb25 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006da6:	4639      	mov	r1, r7
 8006da8:	4630      	mov	r0, r6
 8006daa:	f009 fd9c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006dae:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006db2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006db4:	2223      	movs	r2, #35	; 0x23
 8006db6:	4640      	mov	r0, r8
        linespace = space;
 8006db8:	f04f 0a00 	mov.w	sl, #0
 8006dbc:	2145      	movs	r1, #69	; 0x45
 8006dbe:	f7fb fccc 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006dc2:	4641      	mov	r1, r8
 8006dc4:	4638      	mov	r0, r7
        color = newColor;
 8006dc6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006dca:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006dce:	f00b fca5 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dd2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006dd6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006dda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dde:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006f28 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006de2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006de6:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006de8:	a90a      	add	r1, sp, #40	; 0x28
 8006dea:	4640      	mov	r0, r8
 8006dec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006df0:	f00b ff2e 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006df4:	4641      	mov	r1, r8
 8006df6:	4630      	mov	r0, r6
 8006df8:	f009 fd75 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006dfc:	ee18 0a10 	vmov	r0, s16
 8006e00:	220c      	movs	r2, #12
 8006e02:	2136      	movs	r1, #54	; 0x36
 8006e04:	f7fb fca9 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006e08:	ee18 1a10 	vmov	r1, s16
 8006e0c:	4638      	mov	r0, r7
        color = newColor;
 8006e0e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006e12:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006e16:	f00b fc81 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e1a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006e1e:	ee18 3a10 	vmov	r3, s16
 8006e22:	333c      	adds	r3, #60	; 0x3c
 8006e24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e28:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006e2a:	ee18 0a10 	vmov	r0, s16
 8006e2e:	a90a      	add	r1, sp, #40	; 0x28
 8006e30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e34:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e38:	f00b ff0a 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e3c:	ee18 1a10 	vmov	r1, s16
 8006e40:	4630      	mov	r0, r6
 8006e42:	f009 fd50 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006e46:	ee19 0a10 	vmov	r0, s18
 8006e4a:	22f0      	movs	r2, #240	; 0xf0
 8006e4c:	2121      	movs	r1, #33	; 0x21
 8006e4e:	f7fb fc84 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8006e52:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e56:	aa0a      	add	r2, sp, #40	; 0x28
 8006e58:	f04f 0802 	mov.w	r8, #2
 8006e5c:	a909      	add	r1, sp, #36	; 0x24
 8006e5e:	ee19 0a10 	vmov	r0, s18
 8006e62:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e66:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006e6a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e6e:	f00c f8d4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006e72:	233a      	movs	r3, #58	; 0x3a
 8006e74:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006e78:	3710      	adds	r7, #16
        updateTextPosition();
 8006e7a:	ee19 0a10 	vmov	r0, s18
 8006e7e:	f7fb fcc1 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006e82:	ee19 1a10 	vmov	r1, s18
 8006e86:	4630      	mov	r0, r6
        colorPressed = col;
 8006e88:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006e8c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006e90:	f009 fd29 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006e94:	ee19 0a90 	vmov	r0, s19
 8006e98:	22aa      	movs	r2, #170	; 0xaa
 8006e9a:	2121      	movs	r1, #33	; 0x21
 8006e9c:	f7fb fc5d 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ea0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ea2:	a909      	add	r1, sp, #36	; 0x24
 8006ea4:	ee19 0a90 	vmov	r0, s19
 8006ea8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006eac:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006eb0:	f00c f8b3 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006eb4:	2339      	movs	r3, #57	; 0x39
 8006eb6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006eba:	ee19 0a90 	vmov	r0, s19
 8006ebe:	f7fb fca1 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ec2:	ee19 1a90 	vmov	r1, s19
 8006ec6:	4630      	mov	r0, r6
        colorPressed = col;
 8006ec8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006ecc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006ed0:	f009 fd09 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006ed4:	ee1a 0a10 	vmov	r0, s20
 8006ed8:	2264      	movs	r2, #100	; 0x64
 8006eda:	2121      	movs	r1, #33	; 0x21
 8006edc:	f7fb fc3d 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ee0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ee2:	a909      	add	r1, sp, #36	; 0x24
 8006ee4:	ee1a 0a10 	vmov	r0, s20
 8006ee8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006eec:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ef0:	f00c f893 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ef4:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006ef6:	ee1a 0a10 	vmov	r0, s20
 8006efa:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006efe:	f7fb fc81 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f02:	4630      	mov	r0, r6
        colorPressed = col;
 8006f04:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006f08:	ee1a 1a10 	vmov	r1, s20
 8006f0c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006f10:	f009 fce9 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f14:	4620      	mov	r0, r4
 8006f16:	b00d      	add	sp, #52	; 0x34
 8006f18:	ecbd 8b06 	vpop	{d8-d10}
 8006f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f20:	20013028 	.word	0x20013028
 8006f24:	0802c6ea 	.word	0x0802c6ea
 8006f28:	0802c760 	.word	0x0802c760

08006f2c <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006f2c:	4770      	bx	lr

08006f2e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006f2e:	4770      	bx	lr

08006f30 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f30:	4770      	bx	lr

08006f32 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f32:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f34:	68c2      	ldr	r2, [r0, #12]
 8006f36:	6844      	ldr	r4, [r0, #4]
 8006f38:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f3a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f3c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f40:	07d2      	lsls	r2, r2, #31
 8006f42:	bf48      	it	mi
 8006f44:	5962      	ldrmi	r2, [r4, r5]
 8006f46:	689b      	ldr	r3, [r3, #8]
    }
 8006f48:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f4a:	bf48      	it	mi
 8006f4c:	58d3      	ldrmi	r3, [r2, r3]
 8006f4e:	4718      	bx	r3

08006f50 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f50:	6843      	ldr	r3, [r0, #4]
 8006f52:	b12b      	cbz	r3, 8006f60 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f54:	6883      	ldr	r3, [r0, #8]
 8006f56:	b92b      	cbnz	r3, 8006f64 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f58:	68c0      	ldr	r0, [r0, #12]
 8006f5a:	f000 0001 	and.w	r0, r0, #1
 8006f5e:	4770      	bx	lr
 8006f60:	4618      	mov	r0, r3
 8006f62:	4770      	bx	lr
 8006f64:	2001      	movs	r0, #1
    }
 8006f66:	4770      	bx	lr

08006f68 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f68:	b510      	push	{r4, lr}
 8006f6a:	2110      	movs	r1, #16
 8006f6c:	4604      	mov	r4, r0
 8006f6e:	f023 f808 	bl	8029f82 <_ZdlPvj>
 8006f72:	4620      	mov	r0, r4
 8006f74:	bd10      	pop	{r4, pc}
	...

08006f78 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006f78:	b510      	push	{r4, lr}
 8006f7a:	4b03      	ldr	r3, [pc, #12]	; (8006f88 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006f7c:	6003      	str	r3, [r0, #0]
 8006f7e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f80:	f00d fa48 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f84:	4620      	mov	r0, r4
 8006f86:	bd10      	pop	{r4, pc}
 8006f88:	0802e47c 	.word	0x0802e47c

08006f8c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006f8c:	b507      	push	{r0, r1, r2, lr}
 8006f8e:	4b07      	ldr	r3, [pc, #28]	; (8006fac <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006f90:	6003      	str	r3, [r0, #0]
 8006f92:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f94:	f00d fa3e 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f98:	9801      	ldr	r0, [sp, #4]
 8006f9a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006f9e:	f022 fff0 	bl	8029f82 <_ZdlPvj>
 8006fa2:	9801      	ldr	r0, [sp, #4]
 8006fa4:	b003      	add	sp, #12
 8006fa6:	f85d fb04 	ldr.w	pc, [sp], #4
 8006faa:	bf00      	nop
 8006fac:	0802e47c 	.word	0x0802e47c

08006fb0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006fb0:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006fb2:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006fb6:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006fba:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006fbc:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8006fbe:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006fc2:	d105      	bne.n	8006fd0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006fc4:	6803      	ldr	r3, [r0, #0]
 8006fc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006fc8:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006fca:	2300      	movs	r3, #0
 8006fcc:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006fd0:	bd10      	pop	{r4, pc}

08006fd2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006fd2:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006fd6:	4288      	cmp	r0, r1
{
 8006fd8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006fda:	d105      	bne.n	8006fe8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006fdc:	f00e ff1c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006fe0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006fe4:	f7fc bf10 	b.w	8003e08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006fe8:	bd08      	pop	{r3, pc}
	...

08006fec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ff0:	ed2d 8b0a 	vpush	{d8-d12}
 8006ff4:	4604      	mov	r4, r0
 8006ff6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006ff8:	46a1      	mov	r9, r4
 8006ffa:	2500      	movs	r5, #0
 8006ffc:	f010 fb8c 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8007000:	4bab      	ldr	r3, [pc, #684]	; (80072b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007002:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007004:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007008:	2226      	movs	r2, #38	; 0x26
 800700a:	4629      	mov	r1, r5
 800700c:	4648      	mov	r0, r9
 800700e:	f023 ffd0 	bl	802afb2 <memset>
 8007012:	4648      	mov	r0, r9
 8007014:	f7fb fbc2 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007018:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800701c:	26ff      	movs	r6, #255	; 0xff
 800701e:	4ba5      	ldr	r3, [pc, #660]	; (80072b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007020:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007022:	2226      	movs	r2, #38	; 0x26
 8007024:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007028:	4629      	mov	r1, r5
 800702a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800702e:	4640      	mov	r0, r8
 8007030:	66a5      	str	r5, [r4, #104]	; 0x68
 8007032:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007036:	f023 ffbc 	bl	802afb2 <memset>
 800703a:	4640      	mov	r0, r8
 800703c:	f7fb fbae 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007040:	4b9d      	ldr	r3, [pc, #628]	; (80072b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007042:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007044:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007048:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800704c:	a90a      	add	r1, sp, #40	; 0x28
 800704e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007052:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007054:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007058:	f00c f9d5 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800705c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007060:	4658      	mov	r0, fp
 8007062:	f7fb fbad 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007066:	4638      	mov	r0, r7
 8007068:	f00b fe90 	bl	8012d8c <_ZN8touchgfx5GaugeC1Ev>
 800706c:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007070:	4618      	mov	r0, r3
 8007072:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007076:	4e91      	ldr	r6, [pc, #580]	; (80072bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
        : TextArea()
 8007078:	f7fb fba2 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800707c:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007080:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007084:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007086:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800708a:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 800708e:	f7fb fb97 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007092:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007096:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 800709a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800709c:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80070a0:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 80070a4:	f7fb fb8c 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80070a8:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80070ac:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 80070b0:	4618      	mov	r0, r3
 80070b2:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80070b6:	ee0a 3a90 	vmov	s21, r3
 80070ba:	f7fb fb81 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80070be:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80070c2:	4618      	mov	r0, r3
 80070c4:	ee0b 3a10 	vmov	s22, r3
 80070c8:	f7fb fb7a 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80070cc:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80070d0:	4618      	mov	r0, r3
 80070d2:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80070d6:	ee0b 3a90 	vmov	s23, r3
 80070da:	f7fb fb71 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80070de:	4650      	mov	r0, sl
 80070e0:	f00b f85a 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 80070e4:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80070e8:	4618      	mov	r0, r3
 80070ea:	9303      	str	r3, [sp, #12]
 80070ec:	f7f9 ffac 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80070f0:	4b73      	ldr	r3, [pc, #460]	; (80072c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80070f2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80070f6:	3324      	adds	r3, #36	; 0x24
 80070f8:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80070fc:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007100:	4618      	mov	r0, r3
 8007102:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007106:	ee08 3a10 	vmov	s16, r3
 800710a:	f7fb fb59 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800710e:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007112:	4618      	mov	r0, r3
 8007114:	ee08 3a90 	vmov	s17, r3
 8007118:	f7fb fb52 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 800711c:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007120:	4618      	mov	r0, r3
 8007122:	ee0c 3a10 	vmov	s24, r3
 8007126:	f00c faaf 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800712a:	4a66      	ldr	r2, [pc, #408]	; (80072c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 800712c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007130:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007134:	4a64      	ldr	r2, [pc, #400]	; (80072c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007136:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800713a:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800713e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007142:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007146:	f00d f95b 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800714a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800714e:	462a      	mov	r2, r5
 8007150:	4648      	mov	r0, r9
 8007152:	9300      	str	r3, [sp, #0]
 8007154:	4629      	mov	r1, r5
 8007156:	23f0      	movs	r3, #240	; 0xf0
 8007158:	f7fb fb0c 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 800715c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800715e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007162:	66a3      	str	r3, [r4, #104]	; 0x68
 8007164:	4649      	mov	r1, r9
 8007166:	4630      	mov	r0, r6
 8007168:	f009 fbbd 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800716c:	462a      	mov	r2, r5
 800716e:	4640      	mov	r0, r8
 8007170:	4629      	mov	r1, r5
 8007172:	f7fb faf2 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007176:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800717a:	4640      	mov	r0, r8
 800717c:	a90a      	add	r1, sp, #40	; 0x28
 800717e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007182:	f00c f940 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007186:	4641      	mov	r1, r8
 8007188:	4630      	mov	r0, r6
 800718a:	f009 fbac 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800718e:	223c      	movs	r2, #60	; 0x3c
 8007190:	211f      	movs	r1, #31
 8007192:	4658      	mov	r0, fp
 8007194:	f7fb fae1 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007198:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 800719c:	f04f 33ff 	mov.w	r3, #4294967295
 80071a0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80071a4:	4659      	mov	r1, fp
 80071a6:	4640      	mov	r0, r8
        linespace = space;
 80071a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80071ac:	f00b fab6 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071b0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071b4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80071b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80071bc:	4b43      	ldr	r3, [pc, #268]	; (80072cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80071be:	930a      	str	r3, [sp, #40]	; 0x28
 80071c0:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80071c2:	eb0d 0103 	add.w	r1, sp, r3
 80071c6:	4658      	mov	r0, fp
 80071c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071cc:	f00b fd40 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071d0:	4659      	mov	r1, fp
 80071d2:	4630      	mov	r0, r6
 80071d4:	f009 fb87 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80071d8:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80071dc:	4638      	mov	r0, r7
 80071de:	a90a      	add	r1, sp, #40	; 0x28
 80071e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071e4:	f008 fc26 	bl	800fa34 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80071e8:	236a      	movs	r3, #106	; 0x6a
 80071ea:	4638      	mov	r0, r7
 80071ec:	9300      	str	r3, [sp, #0]
 80071ee:	225e      	movs	r2, #94	; 0x5e
 80071f0:	23b8      	movs	r3, #184	; 0xb8
 80071f2:	211c      	movs	r1, #28
 80071f4:	f7fb fabe 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80071f8:	225c      	movs	r2, #92	; 0x5c
 80071fa:	4611      	mov	r1, r2
 80071fc:	4638      	mov	r0, r7
 80071fe:	f00b fe70 	bl	8012ee2 <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007202:	4638      	mov	r0, r7
 8007204:	225a      	movs	r2, #90	; 0x5a
 8007206:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800720a:	f00b feef 	bl	8012fec <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800720e:	462b      	mov	r3, r5
 8007210:	225a      	movs	r2, #90	; 0x5a
 8007212:	4638      	mov	r0, r7
 8007214:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007218:	9500      	str	r5, [sp, #0]
 800721a:	f008 fab8 	bl	800f78e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800721e:	4638      	mov	r0, r7
 8007220:	4629      	mov	r1, r5
 8007222:	f00b fe8d 	bl	8012f40 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007226:	2335      	movs	r3, #53	; 0x35
 8007228:	2208      	movs	r2, #8
 800722a:	4638      	mov	r0, r7
 800722c:	2105      	movs	r1, #5
 800722e:	f00b fe43 	bl	8012eb8 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007232:	4638      	mov	r0, r7
 8007234:	2101      	movs	r1, #1
 8007236:	f00b fde1 	bl	8012dfc <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800723a:	4638      	mov	r0, r7
 800723c:	2101      	movs	r1, #1
 800723e:	f00b fde0 	bl	8012e02 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007242:	4639      	mov	r1, r7
 8007244:	4630      	mov	r0, r6
 8007246:	f009 fb4e 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800724a:	230f      	movs	r3, #15
 800724c:	22e6      	movs	r2, #230	; 0xe6
 800724e:	ee19 0a10 	vmov	r0, s18
 8007252:	9300      	str	r3, [sp, #0]
 8007254:	4629      	mov	r1, r5
 8007256:	23f0      	movs	r3, #240	; 0xf0
 8007258:	f7fb fa8c 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800725c:	f04f 33ff 	mov.w	r3, #4294967295
 8007260:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007264:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007268:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800726c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007270:	4f17      	ldr	r7, [pc, #92]	; (80072d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007272:	ee19 1a10 	vmov	r1, s18
 8007276:	4640      	mov	r0, r8
 8007278:	4798      	blx	r3
 800727a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800727e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007282:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007286:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007288:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 800728c:	b92b      	cbnz	r3, 800729a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ae>
 800728e:	4b11      	ldr	r3, [pc, #68]	; (80072d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007290:	4a11      	ldr	r2, [pc, #68]	; (80072d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007292:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007294:	4811      	ldr	r0, [pc, #68]	; (80072dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007296:	f023 fc87 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800729a:	f8df b048 	ldr.w	fp, [pc, #72]	; 80072e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800729e:	f8bb 3000 	ldrh.w	r3, [fp]
 80072a2:	2b01      	cmp	r3, #1
 80072a4:	d820      	bhi.n	80072e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2fc>
 80072a6:	4b0e      	ldr	r3, [pc, #56]	; (80072e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>)
 80072a8:	4a0b      	ldr	r2, [pc, #44]	; (80072d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80072aa:	2161      	movs	r1, #97	; 0x61
 80072ac:	e7f2      	b.n	8007294 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 80072ae:	bf00      	nop
 80072b0:	0802e47c 	.word	0x0802e47c
 80072b4:	0802f4d4 	.word	0x0802f4d4
 80072b8:	0802f69c 	.word	0x0802f69c
 80072bc:	0802c770 	.word	0x0802c770
 80072c0:	0802f208 	.word	0x0802f208
 80072c4:	0802e464 	.word	0x0802e464
 80072c8:	08006fd3 	.word	0x08006fd3
 80072cc:	0802c760 	.word	0x0802c760
 80072d0:	2001301c 	.word	0x2001301c
 80072d4:	0802c5b0 	.word	0x0802c5b0
 80072d8:	0802c6b2 	.word	0x0802c6b2
 80072dc:	0802c62d 	.word	0x0802c62d
 80072e0:	0802c674 	.word	0x0802c674
 80072e4:	20013020 	.word	0x20013020
        return texts->getText(typedTextId);
 80072e8:	4bdf      	ldr	r3, [pc, #892]	; (8007668 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 80072ea:	2101      	movs	r1, #1
 80072ec:	6818      	ldr	r0, [r3, #0]
 80072ee:	f000 ffa5 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 80072f2:	4ade      	ldr	r2, [pc, #888]	; (800766c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 80072f4:	4603      	mov	r3, r0
 80072f6:	210a      	movs	r1, #10
 80072f8:	4648      	mov	r0, r9
 80072fa:	f011 ff3b 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80072fe:	f04f 0104 	mov.w	r1, #4
 8007302:	4bdb      	ldr	r3, [pc, #876]	; (8007670 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
        wc1 = value;
 8007304:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007308:	ee19 0a10 	vmov	r0, s18
 800730c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007310:	a90a      	add	r1, sp, #40	; 0x28
 8007312:	930a      	str	r3, [sp, #40]	; 0x28
 8007314:	f00b fc9c 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007318:	ee19 1a10 	vmov	r1, s18
 800731c:	4630      	mov	r0, r6
 800731e:	f009 fae2 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007322:	210f      	movs	r1, #15
 8007324:	22d7      	movs	r2, #215	; 0xd7
 8007326:	ee19 0a90 	vmov	r0, s19
 800732a:	9100      	str	r1, [sp, #0]
 800732c:	23f0      	movs	r3, #240	; 0xf0
 800732e:	4629      	mov	r1, r5
 8007330:	f7fb fa20 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007334:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007338:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 800733c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007340:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007344:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007348:	4640      	mov	r0, r8
 800734a:	ee19 1a90 	vmov	r1, s19
 800734e:	4798      	blx	r3
 8007350:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007354:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007358:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800735c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 800735e:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007362:	2b00      	cmp	r3, #0
 8007364:	d093      	beq.n	800728e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007366:	f8bb 3000 	ldrh.w	r3, [fp]
 800736a:	2b02      	cmp	r3, #2
 800736c:	d99b      	bls.n	80072a6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ba>
        return texts->getText(typedTextId);
 800736e:	4abe      	ldr	r2, [pc, #760]	; (8007668 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007370:	2102      	movs	r1, #2
 8007372:	6810      	ldr	r0, [r2, #0]
 8007374:	f000 ff62 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8007378:	4abc      	ldr	r2, [pc, #752]	; (800766c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 800737a:	4603      	mov	r3, r0
 800737c:	210a      	movs	r1, #10
 800737e:	4648      	mov	r0, r9
 8007380:	f011 fef8 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007384:	4bba      	ldr	r3, [pc, #744]	; (8007670 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
 8007386:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800738a:	ee19 0a90 	vmov	r0, s19
 800738e:	930a      	str	r3, [sp, #40]	; 0x28
 8007390:	a90a      	add	r1, sp, #40	; 0x28
 8007392:	2305      	movs	r3, #5
 8007394:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007398:	f00b fc5a 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800739c:	ee19 1a90 	vmov	r1, s19
 80073a0:	4630      	mov	r0, r6
 80073a2:	f009 faa0 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80073a6:	210f      	movs	r1, #15
 80073a8:	22c8      	movs	r2, #200	; 0xc8
 80073aa:	ee1a 0a10 	vmov	r0, s20
 80073ae:	9100      	str	r1, [sp, #0]
 80073b0:	23f0      	movs	r3, #240	; 0xf0
 80073b2:	4629      	mov	r1, r5
 80073b4:	f7fb f9de 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073b8:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80073bc:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80073c0:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80073c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80073c8:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80073cc:	4640      	mov	r0, r8
 80073ce:	ee1a 1a10 	vmov	r1, s20
 80073d2:	4798      	blx	r3
 80073d4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073d8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80073dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073e0:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80073e2:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	f43f af51 	beq.w	800728e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073ec:	f8bb 3000 	ldrh.w	r3, [fp]
 80073f0:	2b03      	cmp	r3, #3
 80073f2:	f67f af58 	bls.w	80072a6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ba>
        return texts->getText(typedTextId);
 80073f6:	4a9c      	ldr	r2, [pc, #624]	; (8007668 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        : typedTextId(id)
 80073f8:	4f9d      	ldr	r7, [pc, #628]	; (8007670 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>)
        return texts->getText(typedTextId);
 80073fa:	6810      	ldr	r0, [r2, #0]
 80073fc:	2103      	movs	r1, #3
 80073fe:	f000 ff1d 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8007402:	4a9a      	ldr	r2, [pc, #616]	; (800766c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x680>)
 8007404:	4603      	mov	r3, r0
 8007406:	210a      	movs	r1, #10
 8007408:	4648      	mov	r0, r9
 800740a:	f011 feb3 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800740e:	2306      	movs	r3, #6
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007410:	ee1a 0a10 	vmov	r0, s20
 8007414:	a90a      	add	r1, sp, #40	; 0x28
 8007416:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 800741a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800741e:	970a      	str	r7, [sp, #40]	; 0x28
 8007420:	f00b fc16 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007424:	ee1a 1a10 	vmov	r1, s20
 8007428:	4630      	mov	r0, r6
 800742a:	f009 fa5c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800742e:	224c      	movs	r2, #76	; 0x4c
 8007430:	ee1a 0a90 	vmov	r0, s21
 8007434:	2171      	movs	r1, #113	; 0x71
 8007436:	f7fb f990 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800743a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800743e:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8007442:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007446:	4640      	mov	r0, r8
        linespace = space;
 8007448:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800744c:	f00b f966 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007450:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007454:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007458:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800745c:	2307      	movs	r3, #7
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800745e:	ee1a 0a90 	vmov	r0, s21
 8007462:	a90a      	add	r1, sp, #40	; 0x28
 8007464:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007468:	970a      	str	r7, [sp, #40]	; 0x28
 800746a:	f00b fbf1 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800746e:	ee1a 1a90 	vmov	r1, s21
 8007472:	4630      	mov	r0, r6
 8007474:	f009 fa37 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007478:	22b9      	movs	r2, #185	; 0xb9
 800747a:	ee1b 0a10 	vmov	r0, s22
 800747e:	4629      	mov	r1, r5
 8007480:	f7fb f96b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007484:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007488:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800748c:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8007490:	4640      	mov	r0, r8
        linespace = space;
 8007492:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007496:	f00b f941 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800749a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800749e:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80074a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074a6:	2308      	movs	r3, #8
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80074a8:	ee1b 0a10 	vmov	r0, s22
 80074ac:	a90a      	add	r1, sp, #40	; 0x28
 80074ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074b2:	970a      	str	r7, [sp, #40]	; 0x28
 80074b4:	f00b fbcc 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074b8:	ee1b 1a10 	vmov	r1, s22
 80074bc:	4630      	mov	r0, r6
 80074be:	f009 fa12 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80074c2:	22b9      	movs	r2, #185	; 0xb9
 80074c4:	ee1b 0a90 	vmov	r0, s23
 80074c8:	21d9      	movs	r1, #217	; 0xd9
 80074ca:	f7fb f946 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074ce:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074d2:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80074d6:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80074da:	4640      	mov	r0, r8
        linespace = space;
 80074dc:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80074e0:	f00b f91c 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074e4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80074e8:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80074ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074f0:	f04f 0309 	mov.w	r3, #9
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80074f4:	ee1b 0a90 	vmov	r0, s23
 80074f8:	a90a      	add	r1, sp, #40	; 0x28
 80074fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074fe:	970a      	str	r7, [sp, #40]	; 0x28
 8007500:	f00b fba6 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007504:	ee1b 1a90 	vmov	r1, s23
 8007508:	4630      	mov	r0, r6
 800750a:	f009 f9ec 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800750e:	230a      	movs	r3, #10
 8007510:	9300      	str	r3, [sp, #0]
 8007512:	2232      	movs	r2, #50	; 0x32
 8007514:	23f0      	movs	r3, #240	; 0xf0
 8007516:	4629      	mov	r1, r5
 8007518:	4650      	mov	r0, sl
 800751a:	f7fb f92b 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 800751e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007522:	22a0      	movs	r2, #160	; 0xa0
 8007524:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007528:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 800752c:	9b03      	ldr	r3, [sp, #12]
 800752e:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007532:	4611      	mov	r1, r2
 8007534:	4650      	mov	r0, sl
 8007536:	f00a ff45 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800753a:	22a0      	movs	r2, #160	; 0xa0
 800753c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007540:	4650      	mov	r0, sl
 8007542:	f00a ff4a 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007546:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800754a:	2b20      	cmp	r3, #32
 800754c:	d005      	beq.n	800755a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x56e>
        lineWidthQ5 = widthQ5;
 800754e:	2320      	movs	r3, #32
 8007550:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007554:	4650      	mov	r0, sl
 8007556:	f00a fe3f 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800755a:	4650      	mov	r0, sl
 800755c:	2101      	movs	r1, #1
 800755e:	f00a ff47 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007562:	4651      	mov	r1, sl
 8007564:	4630      	mov	r0, r6
 8007566:	f009 f9be 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800756a:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800756e:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007570:	ee18 0a10 	vmov	r0, s16
 8007574:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007576:	f04f 0900 	mov.w	r9, #0
 800757a:	2145      	movs	r1, #69	; 0x45
 800757c:	f7fb f8ed 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007580:	ee18 1a10 	vmov	r1, s16
 8007584:	4628      	mov	r0, r5
        color = newColor;
 8007586:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 800758a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800758e:	f00b f8c5 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007592:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007596:	ee18 3a10 	vmov	r3, s16
 800759a:	333c      	adds	r3, #60	; 0x3c
 800759c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075a0:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8007670 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x684>
 80075a4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80075a8:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80075aa:	ee18 0a10 	vmov	r0, s16
 80075ae:	a90a      	add	r1, sp, #40	; 0x28
 80075b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075b4:	f00b fb4c 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075b8:	ee18 1a10 	vmov	r1, s16
 80075bc:	4630      	mov	r0, r6
 80075be:	f009 f992 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075c2:	ee18 0a90 	vmov	r0, s17
 80075c6:	220c      	movs	r2, #12
 80075c8:	2136      	movs	r1, #54	; 0x36
 80075ca:	f7fb f8c6 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80075ce:	ee18 1a90 	vmov	r1, s17
 80075d2:	4628      	mov	r0, r5
        color = newColor;
 80075d4:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80075d8:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80075dc:	f00b f89e 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075e4:	ee18 3a90 	vmov	r3, s17
 80075e8:	333c      	adds	r3, #60	; 0x3c
 80075ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075ee:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80075f0:	ee18 0a90 	vmov	r0, s17
 80075f4:	a90a      	add	r1, sp, #40	; 0x28
 80075f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075fa:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80075fe:	f00b fb27 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007602:	ee18 1a90 	vmov	r1, s17
 8007606:	4630      	mov	r0, r6
 8007608:	f009 f96d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800760c:	ee1c 0a10 	vmov	r0, s24
 8007610:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007614:	2121      	movs	r1, #33	; 0x21
 8007616:	f7fb f8a0 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800761a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800761c:	aa0a      	add	r2, sp, #40	; 0x28
 800761e:	a909      	add	r1, sp, #36	; 0x24
 8007620:	ee1c 0a10 	vmov	r0, s24
 8007624:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007628:	2302      	movs	r3, #2
 800762a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800762e:	f00b fcf4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007632:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 8007634:	ee1c 0a10 	vmov	r0, s24
 8007638:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 800763c:	f7fb f8e2 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007640:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007644:	3304      	adds	r3, #4
 8007646:	4630      	mov	r0, r6
 8007648:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800764c:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007650:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007654:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007658:	f009 f945 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800765c:	4620      	mov	r0, r4
 800765e:	b00d      	add	sp, #52	; 0x34
 8007660:	ecbd 8b0a 	vpop	{d8-d12}
 8007664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007668:	20013028 	.word	0x20013028
 800766c:	0802c6ea 	.word	0x0802c6ea
 8007670:	0802c760 	.word	0x0802c760

08007674 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007674:	4770      	bx	lr

08007676 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007676:	4770      	bx	lr

08007678 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007678:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800767a:	68c2      	ldr	r2, [r0, #12]
 800767c:	6844      	ldr	r4, [r0, #4]
 800767e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007680:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007682:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007686:	07d2      	lsls	r2, r2, #31
 8007688:	bf48      	it	mi
 800768a:	5962      	ldrmi	r2, [r4, r5]
 800768c:	689b      	ldr	r3, [r3, #8]
    }
 800768e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007690:	bf48      	it	mi
 8007692:	58d3      	ldrmi	r3, [r2, r3]
 8007694:	4718      	bx	r3

08007696 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007696:	6843      	ldr	r3, [r0, #4]
 8007698:	b12b      	cbz	r3, 80076a6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800769a:	6883      	ldr	r3, [r0, #8]
 800769c:	b92b      	cbnz	r3, 80076aa <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800769e:	68c0      	ldr	r0, [r0, #12]
 80076a0:	f000 0001 	and.w	r0, r0, #1
 80076a4:	4770      	bx	lr
 80076a6:	4618      	mov	r0, r3
 80076a8:	4770      	bx	lr
 80076aa:	2001      	movs	r0, #1
    }
 80076ac:	4770      	bx	lr

080076ae <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076ae:	b510      	push	{r4, lr}
 80076b0:	2110      	movs	r1, #16
 80076b2:	4604      	mov	r4, r0
 80076b4:	f022 fc65 	bl	8029f82 <_ZdlPvj>
 80076b8:	4620      	mov	r0, r4
 80076ba:	bd10      	pop	{r4, pc}

080076bc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80076bc:	b510      	push	{r4, lr}
 80076be:	4b03      	ldr	r3, [pc, #12]	; (80076cc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80076c0:	6003      	str	r3, [r0, #0]
 80076c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80076c4:	f00c fea6 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076c8:	4620      	mov	r0, r4
 80076ca:	bd10      	pop	{r4, pc}
 80076cc:	0802e4cc 	.word	0x0802e4cc

080076d0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80076d0:	b507      	push	{r0, r1, r2, lr}
 80076d2:	4b07      	ldr	r3, [pc, #28]	; (80076f0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80076d4:	6003      	str	r3, [r0, #0]
 80076d6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80076d8:	f00c fe9c 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076dc:	9801      	ldr	r0, [sp, #4]
 80076de:	f241 015c 	movw	r1, #4188	; 0x105c
 80076e2:	f022 fc4e 	bl	8029f82 <_ZdlPvj>
 80076e6:	9801      	ldr	r0, [sp, #4]
 80076e8:	b003      	add	sp, #12
 80076ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80076ee:	bf00      	nop
 80076f0:	0802e4cc 	.word	0x0802e4cc

080076f4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80076f4:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80076f8:	4288      	cmp	r0, r1
{
 80076fa:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80076fc:	d105      	bne.n	800770a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80076fe:	f00e fb8b 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007702:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007706:	f7fc bb7f 	b.w	8003e08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 800770a:	bd08      	pop	{r3, pc}

0800770c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800770c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007710:	ed2d 8b02 	vpush	{d8}
 8007714:	4604      	mov	r4, r0
 8007716:	b08d      	sub	sp, #52	; 0x34
 8007718:	f00f fffe 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 800771c:	4622      	mov	r2, r4
 800771e:	2500      	movs	r5, #0
 8007720:	4ba4      	ldr	r3, [pc, #656]	; (80079b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007722:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007724:	f842 3b40 	str.w	r3, [r2], #64
 8007728:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 800772c:	4629      	mov	r1, r5
 800772e:	2226      	movs	r2, #38	; 0x26
 8007730:	ee18 0a10 	vmov	r0, s16
 8007734:	f023 fc3d 	bl	802afb2 <memset>
 8007738:	ee18 0a10 	vmov	r0, s16
 800773c:	f7fb f82e 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007740:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007744:	26ff      	movs	r6, #255	; 0xff
 8007746:	4b9c      	ldr	r3, [pc, #624]	; (80079b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007748:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800774a:	2226      	movs	r2, #38	; 0x26
 800774c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007750:	4629      	mov	r1, r5
 8007752:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007756:	66a5      	str	r5, [r4, #104]	; 0x68
 8007758:	4658      	mov	r0, fp
 800775a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800775e:	f023 fc28 	bl	802afb2 <memset>
 8007762:	4658      	mov	r0, fp
 8007764:	f7fb f81a 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007768:	4b94      	ldr	r3, [pc, #592]	; (80079bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 800776a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800776c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007770:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007774:	a90a      	add	r1, sp, #40	; 0x28
 8007776:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800777a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800777e:	4658      	mov	r0, fp
 8007780:	f00b fe41 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007784:	4638      	mov	r0, r7
 8007786:	f00a fd07 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 800778a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800778e:	4618      	mov	r0, r3
 8007790:	9303      	str	r3, [sp, #12]
 8007792:	f7f9 fc59 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007796:	4b8a      	ldr	r3, [pc, #552]	; (80079c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007798:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800779c:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 80077a0:	3324      	adds	r3, #36	; 0x24
 80077a2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80077a6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80077aa:	4650      	mov	r0, sl
 80077ac:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 80077b0:	f7fb f806 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80077b4:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 80077b8:	4648      	mov	r0, r9
 80077ba:	f7fb f801 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80077be:	4640      	mov	r0, r8
 80077c0:	f7fa fffe 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 80077c4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80077c8:	4618      	mov	r0, r3
 80077ca:	ee08 3a90 	vmov	s17, r3
 80077ce:	f00b ff5b 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80077d2:	4a7c      	ldr	r2, [pc, #496]	; (80079c4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 80077d4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80077d8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80077dc:	4a7a      	ldr	r2, [pc, #488]	; (80079c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80077de:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80077e2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80077e6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80077ea:	f00c fe09 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80077ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80077f2:	462a      	mov	r2, r5
 80077f4:	ee18 0a10 	vmov	r0, s16
 80077f8:	9300      	str	r3, [sp, #0]
 80077fa:	4629      	mov	r1, r5
 80077fc:	23f0      	movs	r3, #240	; 0xf0
 80077fe:	f7fa ffb9 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007802:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007804:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007808:	66a3      	str	r3, [r4, #104]	; 0x68
 800780a:	ee18 1a10 	vmov	r1, s16
 800780e:	4630      	mov	r0, r6
 8007810:	f009 f869 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007814:	462a      	mov	r2, r5
 8007816:	4629      	mov	r1, r5
 8007818:	4658      	mov	r0, fp
 800781a:	f7fa ff9e 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 800781e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007820:	a90a      	add	r1, sp, #40	; 0x28
 8007822:	4658      	mov	r0, fp
 8007824:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007828:	f00b fded 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800782c:	4659      	mov	r1, fp
 800782e:	4630      	mov	r0, r6
 8007830:	f009 f859 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007834:	230a      	movs	r3, #10
 8007836:	9300      	str	r3, [sp, #0]
 8007838:	2232      	movs	r2, #50	; 0x32
 800783a:	23f0      	movs	r3, #240	; 0xf0
 800783c:	4629      	mov	r1, r5
 800783e:	4638      	mov	r0, r7
 8007840:	f7fa ff98 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007844:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007848:	22a0      	movs	r2, #160	; 0xa0
 800784a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800784e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007852:	9b03      	ldr	r3, [sp, #12]
 8007854:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007858:	4611      	mov	r1, r2
 800785a:	4638      	mov	r0, r7
 800785c:	f00a fdb2 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007860:	22a0      	movs	r2, #160	; 0xa0
 8007862:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007866:	4638      	mov	r0, r7
 8007868:	f00a fdb7 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800786c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007870:	2b20      	cmp	r3, #32
 8007872:	d005      	beq.n	8007880 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007874:	2320      	movs	r3, #32
 8007876:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800787a:	4638      	mov	r0, r7
 800787c:	f00a fcac 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007880:	4638      	mov	r0, r7
 8007882:	2101      	movs	r1, #1
 8007884:	f00a fdb4 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007888:	4639      	mov	r1, r7
 800788a:	4630      	mov	r0, r6
 800788c:	f009 f82b 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007890:	ad04      	add	r5, sp, #16
        color = newColor;
 8007892:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007896:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 800789a:	2223      	movs	r2, #35	; 0x23
 800789c:	4650      	mov	r0, sl
 800789e:	2145      	movs	r1, #69	; 0x45
 80078a0:	f7fa ff5b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80078a4:	4651      	mov	r1, sl
 80078a6:	4628      	mov	r0, r5
        color = newColor;
 80078a8:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80078ac:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80078b0:	f00a ff34 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078b8:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80078bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80078c0:	4b42      	ldr	r3, [pc, #264]	; (80079cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80078c2:	930a      	str	r3, [sp, #40]	; 0x28
 80078c4:	2232      	movs	r2, #50	; 0x32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80078c6:	a90a      	add	r1, sp, #40	; 0x28
 80078c8:	4650      	mov	r0, sl
 80078ca:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80078ce:	f00b f9bf 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078d2:	4651      	mov	r1, sl
 80078d4:	4630      	mov	r0, r6
 80078d6:	f009 f806 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80078da:	223c      	movs	r2, #60	; 0x3c
 80078dc:	4648      	mov	r0, r9
 80078de:	211f      	movs	r1, #31
 80078e0:	f7fa ff3b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80078e4:	4649      	mov	r1, r9
 80078e6:	4628      	mov	r0, r5
        color = newColor;
 80078e8:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80078ec:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80078f0:	f00a ff14 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078f8:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80078fc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007900:	4b32      	ldr	r3, [pc, #200]	; (80079cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007902:	930a      	str	r3, [sp, #40]	; 0x28
 8007904:	2227      	movs	r2, #39	; 0x27
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007906:	a90a      	add	r1, sp, #40	; 0x28
 8007908:	4648      	mov	r0, r9
 800790a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800790e:	f00b f99f 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007912:	4649      	mov	r1, r9
 8007914:	4630      	mov	r0, r6
 8007916:	f008 ffe6 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800791a:	220c      	movs	r2, #12
 800791c:	4640      	mov	r0, r8
 800791e:	2136      	movs	r1, #54	; 0x36
 8007920:	f7fa ff1b 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007924:	4641      	mov	r1, r8
 8007926:	4628      	mov	r0, r5
        color = newColor;
 8007928:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800792c:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007930:	f00a fef4 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007934:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007938:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 800793c:	4b23      	ldr	r3, [pc, #140]	; (80079cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800793e:	930a      	str	r3, [sp, #40]	; 0x28
 8007940:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8007944:	2331      	movs	r3, #49	; 0x31
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007946:	a90a      	add	r1, sp, #40	; 0x28
 8007948:	4640      	mov	r0, r8
 800794a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800794e:	f00b f97f 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007952:	4641      	mov	r1, r8
 8007954:	4630      	mov	r0, r6
 8007956:	f008 ffc6 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800795a:	ee18 0a90 	vmov	r0, s17
 800795e:	f240 1201 	movw	r2, #257	; 0x101
 8007962:	2121      	movs	r1, #33	; 0x21
 8007964:	f7fa fef9 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007968:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800796a:	aa0a      	add	r2, sp, #40	; 0x28
 800796c:	a909      	add	r1, sp, #36	; 0x24
 800796e:	ee18 0a90 	vmov	r0, s17
 8007972:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007976:	2302      	movs	r3, #2
 8007978:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800797c:	f00b fb4d 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007980:	2330      	movs	r3, #48	; 0x30
        updateTextPosition();
 8007982:	ee18 0a90 	vmov	r0, s17
 8007986:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800798a:	f7fa ff3b 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800798e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007992:	330c      	adds	r3, #12
 8007994:	4630      	mov	r0, r6
        colorPressed = col;
 8007996:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800799a:	ee18 1a90 	vmov	r1, s17
 800799e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80079a2:	f008 ffa0 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079a6:	4620      	mov	r0, r4
 80079a8:	b00d      	add	sp, #52	; 0x34
 80079aa:	ecbd 8b02 	vpop	{d8}
 80079ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079b2:	bf00      	nop
 80079b4:	0802e4cc 	.word	0x0802e4cc
 80079b8:	0802f4d4 	.word	0x0802f4d4
 80079bc:	0802f69c 	.word	0x0802f69c
 80079c0:	0802f208 	.word	0x0802f208
 80079c4:	0802e4b4 	.word	0x0802e4b4
 80079c8:	080076f5 	.word	0x080076f5
 80079cc:	0802c760 	.word	0x0802c760

080079d0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80079d0:	4770      	bx	lr

080079d2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80079d2:	4770      	bx	lr

080079d4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80079d4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80079d6:	68c2      	ldr	r2, [r0, #12]
 80079d8:	6844      	ldr	r4, [r0, #4]
 80079da:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80079dc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80079de:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80079e2:	07d2      	lsls	r2, r2, #31
 80079e4:	bf48      	it	mi
 80079e6:	5962      	ldrmi	r2, [r4, r5]
 80079e8:	689b      	ldr	r3, [r3, #8]
    }
 80079ea:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80079ec:	bf48      	it	mi
 80079ee:	58d3      	ldrmi	r3, [r2, r3]
 80079f0:	4718      	bx	r3

080079f2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80079f2:	6843      	ldr	r3, [r0, #4]
 80079f4:	b12b      	cbz	r3, 8007a02 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80079f6:	6883      	ldr	r3, [r0, #8]
 80079f8:	b92b      	cbnz	r3, 8007a06 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80079fa:	68c0      	ldr	r0, [r0, #12]
 80079fc:	f000 0001 	and.w	r0, r0, #1
 8007a00:	4770      	bx	lr
 8007a02:	4618      	mov	r0, r3
 8007a04:	4770      	bx	lr
 8007a06:	2001      	movs	r0, #1
    }
 8007a08:	4770      	bx	lr

08007a0a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a0a:	b510      	push	{r4, lr}
 8007a0c:	2110      	movs	r1, #16
 8007a0e:	4604      	mov	r4, r0
 8007a10:	f022 fab7 	bl	8029f82 <_ZdlPvj>
 8007a14:	4620      	mov	r0, r4
 8007a16:	bd10      	pop	{r4, pc}

08007a18 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007a18:	b510      	push	{r4, lr}
 8007a1a:	4b03      	ldr	r3, [pc, #12]	; (8007a28 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007a1c:	6003      	str	r3, [r0, #0]
 8007a1e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a20:	f00c fcf8 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a24:	4620      	mov	r0, r4
 8007a26:	bd10      	pop	{r4, pc}
 8007a28:	0802e518 	.word	0x0802e518

08007a2c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007a2c:	b507      	push	{r0, r1, r2, lr}
 8007a2e:	4b07      	ldr	r3, [pc, #28]	; (8007a4c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007a30:	6003      	str	r3, [r0, #0]
 8007a32:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a34:	f00c fcee 	bl	8014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a38:	9801      	ldr	r0, [sp, #4]
 8007a3a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007a3e:	f022 faa0 	bl	8029f82 <_ZdlPvj>
 8007a42:	9801      	ldr	r0, [sp, #4]
 8007a44:	b003      	add	sp, #12
 8007a46:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a4a:	bf00      	nop
 8007a4c:	0802e518 	.word	0x0802e518

08007a50 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007a50:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007a54:	4288      	cmp	r0, r1
{
 8007a56:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007a58:	d105      	bne.n	8007a66 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a5a:	f00e f9dd 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007a5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007a62:	f7fc b9a1 	b.w	8003da8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007a66:	bd08      	pop	{r3, pc}

08007a68 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a6c:	ed2d 8b04 	vpush	{d8-d9}
 8007a70:	4604      	mov	r4, r0
 8007a72:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007a74:	46a3      	mov	fp, r4
 8007a76:	2500      	movs	r5, #0
 8007a78:	f00f fe4e 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8007a7c:	4bd1      	ldr	r3, [pc, #836]	; (8007dc4 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007a7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a80:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007a84:	2226      	movs	r2, #38	; 0x26
 8007a86:	4629      	mov	r1, r5
 8007a88:	4658      	mov	r0, fp
 8007a8a:	f023 fa92 	bl	802afb2 <memset>
 8007a8e:	4658      	mov	r0, fp
 8007a90:	f7fa fe84 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007a94:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007a98:	26ff      	movs	r6, #255	; 0xff
 8007a9a:	4bcb      	ldr	r3, [pc, #812]	; (8007dc8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007a9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007a9e:	2226      	movs	r2, #38	; 0x26
 8007aa0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007aa4:	4629      	mov	r1, r5
 8007aa6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007aaa:	4650      	mov	r0, sl
 8007aac:	66a5      	str	r5, [r4, #104]	; 0x68
 8007aae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ab2:	f023 fa7e 	bl	802afb2 <memset>
 8007ab6:	4650      	mov	r0, sl
 8007ab8:	f7fa fe70 	bl	800279c <_ZN8touchgfx6WidgetC1Ev>
 8007abc:	4bc3      	ldr	r3, [pc, #780]	; (8007dcc <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007abe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007ac0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007ac4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007ac8:	a90a      	add	r1, sp, #40	; 0x28
 8007aca:	4650      	mov	r0, sl
 8007acc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007ad0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007ad4:	f00b fc97 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007ad8:	4648      	mov	r0, r9
 8007ada:	f7fa fe71 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007ade:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007ae2:	4bbb      	ldr	r3, [pc, #748]	; (8007dd0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007ae4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007ae8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007aec:	4638      	mov	r0, r7
 8007aee:	f00a fb53 	bl	8012198 <_ZN8touchgfx4LineC1Ev>
 8007af2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007af6:	4618      	mov	r0, r3
 8007af8:	9303      	str	r3, [sp, #12]
 8007afa:	f7f9 faa5 	bl	8001048 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007afe:	4bb5      	ldr	r3, [pc, #724]	; (8007dd4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007b00:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007b04:	3324      	adds	r3, #36	; 0x24
 8007b06:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007b0a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007b0e:	4618      	mov	r0, r3
 8007b10:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007b14:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007b18:	ee09 3a10 	vmov	s18, r3
 8007b1c:	f00b fdb4 	bl	8013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b20:	4640      	mov	r0, r8
 8007b22:	f7fa fe4d 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b26:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007b2a:	4618      	mov	r0, r3
 8007b2c:	ee08 3a10 	vmov	s16, r3
 8007b30:	f7fa fe46 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b34:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007b38:	4618      	mov	r0, r3
 8007b3a:	ee08 3a90 	vmov	s17, r3
 8007b3e:	f7fa fe3f 	bl	80027c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b42:	4aa5      	ldr	r2, [pc, #660]	; (8007dd8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007b44:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007b48:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007b4c:	4aa3      	ldr	r2, [pc, #652]	; (8007ddc <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007b4e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007b52:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007b56:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007b5a:	f00c fc51 	bl	8014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007b5e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007b62:	462a      	mov	r2, r5
 8007b64:	4658      	mov	r0, fp
 8007b66:	9300      	str	r3, [sp, #0]
 8007b68:	4629      	mov	r1, r5
 8007b6a:	23f0      	movs	r3, #240	; 0xf0
 8007b6c:	f7fa fe02 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b70:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b72:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b76:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b78:	4659      	mov	r1, fp
 8007b7a:	4630      	mov	r0, r6
 8007b7c:	f008 feb3 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007b80:	462a      	mov	r2, r5
 8007b82:	4650      	mov	r0, sl
 8007b84:	4629      	mov	r1, r5
 8007b86:	f7fa fde8 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007b8a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b8c:	4650      	mov	r0, sl
 8007b8e:	a90a      	add	r1, sp, #40	; 0x28
 8007b90:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b94:	f00b fc37 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b98:	4651      	mov	r1, sl
 8007b9a:	4630      	mov	r0, r6
 8007b9c:	f008 fea3 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007ba0:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007ba4:	2156      	movs	r1, #86	; 0x56
 8007ba6:	4648      	mov	r0, r9
 8007ba8:	f7fa fdd7 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007bac:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007bb0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007bb4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007bb8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007bbc:	4650      	mov	r0, sl
 8007bbe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007bc2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007bc6:	4649      	mov	r1, r9
 8007bc8:	4798      	blx	r3
 8007bca:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007bce:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007bd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bd6:	4b82      	ldr	r3, [pc, #520]	; (8007de0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007bd8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007bda:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007bde:	b92b      	cbnz	r3, 8007bec <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007be0:	4b80      	ldr	r3, [pc, #512]	; (8007de4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007be2:	4a81      	ldr	r2, [pc, #516]	; (8007de8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007be4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007be6:	4881      	ldr	r0, [pc, #516]	; (8007dec <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007be8:	f022 ffde 	bl	802aba8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007bec:	4b80      	ldr	r3, [pc, #512]	; (8007df0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bee:	881b      	ldrh	r3, [r3, #0]
 8007bf0:	2b13      	cmp	r3, #19
 8007bf2:	d803      	bhi.n	8007bfc <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007bf4:	4b7f      	ldr	r3, [pc, #508]	; (8007df4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007bf6:	4a7c      	ldr	r2, [pc, #496]	; (8007de8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007bf8:	2161      	movs	r1, #97	; 0x61
 8007bfa:	e7f4      	b.n	8007be6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007bfc:	4b7e      	ldr	r3, [pc, #504]	; (8007df8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007bfe:	2113      	movs	r1, #19
 8007c00:	6818      	ldr	r0, [r3, #0]
 8007c02:	f000 fb1b 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8007c06:	4a7d      	ldr	r2, [pc, #500]	; (8007dfc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007c08:	4603      	mov	r3, r0
 8007c0a:	2104      	movs	r1, #4
 8007c0c:	4650      	mov	r0, sl
 8007c0e:	f011 fab1 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007c12:	4648      	mov	r0, r9
        wc1 = value;
 8007c14:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007c18:	f00a fffa 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007c1c:	4b78      	ldr	r3, [pc, #480]	; (8007e00 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007c1e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007c20:	a90a      	add	r1, sp, #40	; 0x28
 8007c22:	2314      	movs	r3, #20
 8007c24:	4648      	mov	r0, r9
 8007c26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c2a:	f00b f811 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c2e:	4649      	mov	r1, r9
 8007c30:	4630      	mov	r0, r6
 8007c32:	f008 fe58 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c36:	230a      	movs	r3, #10
 8007c38:	9300      	str	r3, [sp, #0]
 8007c3a:	2232      	movs	r2, #50	; 0x32
 8007c3c:	23f0      	movs	r3, #240	; 0xf0
 8007c3e:	4629      	mov	r1, r5
 8007c40:	4638      	mov	r0, r7
 8007c42:	f7fa fd97 	bl	8002774 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c46:	9b03      	ldr	r3, [sp, #12]
 8007c48:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c4c:	22a0      	movs	r2, #160	; 0xa0
 8007c4e:	4611      	mov	r1, r2
 8007c50:	4638      	mov	r0, r7
 8007c52:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007c56:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007c5a:	f00a fbb3 	bl	80123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c5e:	22a0      	movs	r2, #160	; 0xa0
 8007c60:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007c64:	4638      	mov	r0, r7
 8007c66:	f00a fbb8 	bl	80123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c6a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007c6e:	2b20      	cmp	r3, #32
 8007c70:	d005      	beq.n	8007c7e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007c72:	2320      	movs	r3, #32
 8007c74:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007c78:	4638      	mov	r0, r7
 8007c7a:	f00a faad 	bl	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c7e:	4638      	mov	r0, r7
 8007c80:	2101      	movs	r1, #1
 8007c82:	f00a fbb5 	bl	80123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c86:	4639      	mov	r1, r7
 8007c88:	4630      	mov	r0, r6
 8007c8a:	f008 fe2c 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007c8e:	ee19 0a10 	vmov	r0, s18
 8007c92:	22f0      	movs	r2, #240	; 0xf0
 8007c94:	2121      	movs	r1, #33	; 0x21
 8007c96:	f7fa fd60 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007c9a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c9c:	aa0a      	add	r2, sp, #40	; 0x28
 8007c9e:	a909      	add	r1, sp, #36	; 0x24
 8007ca0:	ee19 0a10 	vmov	r0, s18
 8007ca4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007ca8:	2302      	movs	r3, #2
 8007caa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007cae:	f00b f9b4 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007cb2:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8007cb4:	ee19 0a10 	vmov	r0, s18
 8007cb8:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007cbc:	f7fa fda2 	bl	8002804 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007cc0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007cc4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007cc8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007ccc:	ee19 1a10 	vmov	r1, s18
 8007cd0:	4630      	mov	r0, r6
        colorPressed = col;
 8007cd2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007cd6:	ad04      	add	r5, sp, #16
 8007cd8:	f008 fe05 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007cdc:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007ce0:	225b      	movs	r2, #91	; 0x5b
 8007ce2:	4640      	mov	r0, r8
 8007ce4:	2105      	movs	r1, #5
 8007ce6:	f7fa fd38 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007cea:	4641      	mov	r1, r8
 8007cec:	4628      	mov	r0, r5
        color = newColor;
 8007cee:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007cf2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007cf6:	f00a fd11 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cfa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cfe:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007d02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007d06:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007e00 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007d0a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d0e:	233e      	movs	r3, #62	; 0x3e
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007d10:	a90a      	add	r1, sp, #40	; 0x28
 8007d12:	4640      	mov	r0, r8
 8007d14:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d18:	f00a ff9a 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d1c:	4641      	mov	r1, r8
 8007d1e:	4630      	mov	r0, r6
 8007d20:	f008 fde1 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007d24:	ee18 0a10 	vmov	r0, s16
 8007d28:	2223      	movs	r2, #35	; 0x23
 8007d2a:	2145      	movs	r1, #69	; 0x45
 8007d2c:	f7fa fd15 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007d30:	ee18 1a10 	vmov	r1, s16
 8007d34:	4628      	mov	r0, r5
        color = newColor;
 8007d36:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007d3a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007d3e:	f00a fced 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d46:	ee18 3a10 	vmov	r3, s16
 8007d4a:	333c      	adds	r3, #60	; 0x3c
 8007d4c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d50:	2340      	movs	r3, #64	; 0x40
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007d52:	ee18 0a10 	vmov	r0, s16
 8007d56:	a90a      	add	r1, sp, #40	; 0x28
 8007d58:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d5c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d60:	f00a ff76 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d64:	ee18 1a10 	vmov	r1, s16
 8007d68:	4630      	mov	r0, r6
 8007d6a:	f008 fdbc 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d6e:	ee18 0a90 	vmov	r0, s17
 8007d72:	220c      	movs	r2, #12
 8007d74:	2136      	movs	r1, #54	; 0x36
 8007d76:	f7fa fcf0 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007d7a:	ee18 1a90 	vmov	r1, s17
 8007d7e:	4628      	mov	r0, r5
        color = newColor;
 8007d80:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007d84:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007d88:	f00a fcc8 	bl	801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d90:	ee18 3a90 	vmov	r3, s17
 8007d94:	333c      	adds	r3, #60	; 0x3c
 8007d96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d9a:	233f      	movs	r3, #63	; 0x3f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007d9c:	ee18 0a90 	vmov	r0, s17
 8007da0:	a90a      	add	r1, sp, #40	; 0x28
 8007da2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007da6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007daa:	f00a ff51 	bl	8012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dae:	4630      	mov	r0, r6
 8007db0:	ee18 1a90 	vmov	r1, s17
 8007db4:	f008 fd97 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007db8:	4620      	mov	r0, r4
 8007dba:	b00d      	add	sp, #52	; 0x34
 8007dbc:	ecbd 8b04 	vpop	{d8-d9}
 8007dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007dc4:	0802e518 	.word	0x0802e518
 8007dc8:	0802f4d4 	.word	0x0802f4d4
 8007dcc:	0802f69c 	.word	0x0802f69c
 8007dd0:	0802c770 	.word	0x0802c770
 8007dd4:	0802f208 	.word	0x0802f208
 8007dd8:	0802e500 	.word	0x0802e500
 8007ddc:	08007a51 	.word	0x08007a51
 8007de0:	2001301c 	.word	0x2001301c
 8007de4:	0802c5b0 	.word	0x0802c5b0
 8007de8:	0802c6b2 	.word	0x0802c6b2
 8007dec:	0802c62d 	.word	0x0802c62d
 8007df0:	20013020 	.word	0x20013020
 8007df4:	0802c674 	.word	0x0802c674
 8007df8:	20013028 	.word	0x20013028
 8007dfc:	0802c6ea 	.word	0x0802c6ea
 8007e00:	0802c760 	.word	0x0802c760

08007e04 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007e04:	4770      	bx	lr

08007e06 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007e06:	4770      	bx	lr

08007e08 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007e08:	b510      	push	{r4, lr}
}
 8007e0a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007e0c:	4604      	mov	r4, r0
}
 8007e0e:	f022 f8b8 	bl	8029f82 <_ZdlPvj>
 8007e12:	4620      	mov	r0, r4
 8007e14:	bd10      	pop	{r4, pc}
	...

08007e18 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007e18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007e1c:	4604      	mov	r4, r0
 8007e1e:	4626      	mov	r6, r4
 8007e20:	f00f fc7a 	bl	8017718 <_ZN8touchgfx6ScreenC1Ev>
 8007e24:	2500      	movs	r5, #0
 8007e26:	4b2e      	ldr	r3, [pc, #184]	; (8007ee0 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007e28:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e2a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007e2e:	4b2d      	ldr	r3, [pc, #180]	; (8007ee4 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007e30:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007e32:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007e36:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007e3a:	23ff      	movs	r3, #255	; 0xff
 8007e3c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007e40:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007e44:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007e48:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007e4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007e50:	4a25      	ldr	r2, [pc, #148]	; (8007ee8 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007e52:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007e56:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007e5a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007e5c:	a901      	add	r1, sp, #4
 8007e5e:	4638      	mov	r0, r7
 8007e60:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007e64:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007e68:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007e6c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007e70:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007e74:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007e78:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007e7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e7e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007e82:	f00b fac0 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007e86:	462a      	mov	r2, r5
 8007e88:	4629      	mov	r1, r5
 8007e8a:	4630      	mov	r0, r6
 8007e8c:	f7fa fc65 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007e90:	4630      	mov	r0, r6
 8007e92:	21f0      	movs	r1, #240	; 0xf0
 8007e94:	f7f9 f824 	bl	8000ee0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007e98:	4630      	mov	r0, r6
 8007e9a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007e9e:	f7f9 f821 	bl	8000ee4 <_ZN8touchgfx8Drawable9setHeightEs>
 8007ea2:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007ea6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007eaa:	66a3      	str	r3, [r4, #104]	; 0x68
 8007eac:	4631      	mov	r1, r6
 8007eae:	4640      	mov	r0, r8
 8007eb0:	f008 fd19 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007eb4:	462a      	mov	r2, r5
 8007eb6:	4638      	mov	r0, r7
 8007eb8:	f06f 0102 	mvn.w	r1, #2
 8007ebc:	f7fa fc4d 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8007ec0:	230c      	movs	r3, #12
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007ec2:	a901      	add	r1, sp, #4
 8007ec4:	4638      	mov	r0, r7
 8007ec6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007eca:	f00b fa9c 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007ece:	4640      	mov	r0, r8
 8007ed0:	4639      	mov	r1, r7
 8007ed2:	f008 fd08 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007ed6:	4620      	mov	r0, r4
 8007ed8:	b002      	add	sp, #8
 8007eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ede:	bf00      	nop
 8007ee0:	0802e54c 	.word	0x0802e54c
 8007ee4:	0802f4d4 	.word	0x0802f4d4
 8007ee8:	0802f69c 	.word	0x0802f69c

08007eec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007eec:	4770      	bx	lr
	...

08007ef0 <_Z23getFont_verdana_10_4bppv>:
{
 8007ef0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007ef2:	4d17      	ldr	r5, [pc, #92]	; (8007f50 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007ef4:	682c      	ldr	r4, [r5, #0]
 8007ef6:	f3bf 8f5b 	dmb	ish
 8007efa:	f014 0401 	ands.w	r4, r4, #1
{
 8007efe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007f00:	d122      	bne.n	8007f48 <_Z23getFont_verdana_10_4bppv+0x58>
 8007f02:	4628      	mov	r0, r5
 8007f04:	f022 f83f 	bl	8029f86 <__cxa_guard_acquire>
 8007f08:	b1f0      	cbz	r0, 8007f48 <_Z23getFont_verdana_10_4bppv+0x58>
 8007f0a:	233f      	movs	r3, #63	; 0x3f
 8007f0c:	9309      	str	r3, [sp, #36]	; 0x24
 8007f0e:	4b11      	ldr	r3, [pc, #68]	; (8007f54 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007f10:	9308      	str	r3, [sp, #32]
 8007f12:	4b11      	ldr	r3, [pc, #68]	; (8007f58 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007f14:	9307      	str	r3, [sp, #28]
 8007f16:	2301      	movs	r3, #1
 8007f18:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f1c:	9304      	str	r3, [sp, #16]
 8007f1e:	2304      	movs	r3, #4
 8007f20:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f24:	230a      	movs	r3, #10
 8007f26:	490d      	ldr	r1, [pc, #52]	; (8007f5c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007f28:	9300      	str	r3, [sp, #0]
 8007f2a:	225f      	movs	r2, #95	; 0x5f
 8007f2c:	230c      	movs	r3, #12
 8007f2e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f32:	480b      	ldr	r0, [pc, #44]	; (8007f60 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007f34:	940a      	str	r4, [sp, #40]	; 0x28
 8007f36:	9401      	str	r4, [sp, #4]
 8007f38:	f7fd fa2c 	bl	8005394 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f3c:	4809      	ldr	r0, [pc, #36]	; (8007f64 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007f3e:	f022 fe51 	bl	802abe4 <atexit>
 8007f42:	4628      	mov	r0, r5
 8007f44:	f022 f82b 	bl	8029f9e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007f48:	4805      	ldr	r0, [pc, #20]	; (8007f60 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007f4a:	b00f      	add	sp, #60	; 0x3c
 8007f4c:	bd30      	pop	{r4, r5, pc}
 8007f4e:	bf00      	nop
 8007f50:	200020e0 	.word	0x200020e0
 8007f54:	08047320 	.word	0x08047320
 8007f58:	0804755c 	.word	0x0804755c
 8007f5c:	08046368 	.word	0x08046368
 8007f60:	200020e4 	.word	0x200020e4
 8007f64:	08007eed 	.word	0x08007eed

08007f68 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f68:	4770      	bx	lr
	...

08007f6c <_Z23getFont_verdana_12_4bppv>:
{
 8007f6c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f6e:	4d17      	ldr	r5, [pc, #92]	; (8007fcc <_Z23getFont_verdana_12_4bppv+0x60>)
 8007f70:	682c      	ldr	r4, [r5, #0]
 8007f72:	f3bf 8f5b 	dmb	ish
 8007f76:	f014 0401 	ands.w	r4, r4, #1
{
 8007f7a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007f7c:	d122      	bne.n	8007fc4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007f7e:	4628      	mov	r0, r5
 8007f80:	f022 f801 	bl	8029f86 <__cxa_guard_acquire>
 8007f84:	b1f0      	cbz	r0, 8007fc4 <_Z23getFont_verdana_12_4bppv+0x58>
 8007f86:	233f      	movs	r3, #63	; 0x3f
 8007f88:	9309      	str	r3, [sp, #36]	; 0x24
 8007f8a:	4b11      	ldr	r3, [pc, #68]	; (8007fd0 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007f8c:	9308      	str	r3, [sp, #32]
 8007f8e:	4b11      	ldr	r3, [pc, #68]	; (8007fd4 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007f90:	9307      	str	r3, [sp, #28]
 8007f92:	2301      	movs	r3, #1
 8007f94:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f98:	9304      	str	r3, [sp, #16]
 8007f9a:	2304      	movs	r3, #4
 8007f9c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007fa0:	230c      	movs	r3, #12
 8007fa2:	490d      	ldr	r1, [pc, #52]	; (8007fd8 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007fa4:	9300      	str	r3, [sp, #0]
 8007fa6:	2260      	movs	r2, #96	; 0x60
 8007fa8:	230f      	movs	r3, #15
 8007faa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007fae:	480b      	ldr	r0, [pc, #44]	; (8007fdc <_Z23getFont_verdana_12_4bppv+0x70>)
 8007fb0:	940a      	str	r4, [sp, #40]	; 0x28
 8007fb2:	9401      	str	r4, [sp, #4]
 8007fb4:	f7fd f9ee 	bl	8005394 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fb8:	4809      	ldr	r0, [pc, #36]	; (8007fe0 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007fba:	f022 fe13 	bl	802abe4 <atexit>
 8007fbe:	4628      	mov	r0, r5
 8007fc0:	f021 ffed 	bl	8029f9e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007fc4:	4805      	ldr	r0, [pc, #20]	; (8007fdc <_Z23getFont_verdana_12_4bppv+0x70>)
 8007fc6:	b00f      	add	sp, #60	; 0x3c
 8007fc8:	bd30      	pop	{r4, r5, pc}
 8007fca:	bf00      	nop
 8007fcc:	20002110 	.word	0x20002110
 8007fd0:	08047354 	.word	0x08047354
 8007fd4:	08047560 	.word	0x08047560
 8007fd8:	0804689c 	.word	0x0804689c
 8007fdc:	20002114 	.word	0x20002114
 8007fe0:	08007f69 	.word	0x08007f69

08007fe4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007fe4:	4770      	bx	lr
	...

08007fe8 <_Z23getFont_verdana_19_4bppv>:
{
 8007fe8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007fea:	4d17      	ldr	r5, [pc, #92]	; (8008048 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007fec:	682c      	ldr	r4, [r5, #0]
 8007fee:	f3bf 8f5b 	dmb	ish
 8007ff2:	f014 0401 	ands.w	r4, r4, #1
{
 8007ff6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ff8:	d122      	bne.n	8008040 <_Z23getFont_verdana_19_4bppv+0x58>
 8007ffa:	4628      	mov	r0, r5
 8007ffc:	f021 ffc3 	bl	8029f86 <__cxa_guard_acquire>
 8008000:	b1f0      	cbz	r0, 8008040 <_Z23getFont_verdana_19_4bppv+0x58>
 8008002:	233f      	movs	r3, #63	; 0x3f
 8008004:	9309      	str	r3, [sp, #36]	; 0x24
 8008006:	4b11      	ldr	r3, [pc, #68]	; (800804c <_Z23getFont_verdana_19_4bppv+0x64>)
 8008008:	9308      	str	r3, [sp, #32]
 800800a:	4b11      	ldr	r3, [pc, #68]	; (8008050 <_Z23getFont_verdana_19_4bppv+0x68>)
 800800c:	9307      	str	r3, [sp, #28]
 800800e:	2301      	movs	r3, #1
 8008010:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008014:	9304      	str	r3, [sp, #16]
 8008016:	2304      	movs	r3, #4
 8008018:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800801c:	2313      	movs	r3, #19
 800801e:	490d      	ldr	r1, [pc, #52]	; (8008054 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008020:	9300      	str	r3, [sp, #0]
 8008022:	225f      	movs	r2, #95	; 0x5f
 8008024:	2317      	movs	r3, #23
 8008026:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800802a:	480b      	ldr	r0, [pc, #44]	; (8008058 <_Z23getFont_verdana_19_4bppv+0x70>)
 800802c:	940a      	str	r4, [sp, #40]	; 0x28
 800802e:	9401      	str	r4, [sp, #4]
 8008030:	f7fd f9b0 	bl	8005394 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008034:	4809      	ldr	r0, [pc, #36]	; (800805c <_Z23getFont_verdana_19_4bppv+0x74>)
 8008036:	f022 fdd5 	bl	802abe4 <atexit>
 800803a:	4628      	mov	r0, r5
 800803c:	f021 ffaf 	bl	8029f9e <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008040:	4805      	ldr	r0, [pc, #20]	; (8008058 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008042:	b00f      	add	sp, #60	; 0x3c
 8008044:	bd30      	pop	{r4, r5, pc}
 8008046:	bf00      	nop
 8008048:	20002140 	.word	0x20002140
 800804c:	080473d8 	.word	0x080473d8
 8008050:	08047564 	.word	0x08047564
 8008054:	08046ddc 	.word	0x08046ddc
 8008058:	20002144 	.word	0x20002144
 800805c:	08007fe5 	.word	0x08007fe5

08008060 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008060:	4770      	bx	lr
	...

08008064 <_Z23getFont_verdana_40_4bppv>:
{
 8008064:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008066:	4d16      	ldr	r5, [pc, #88]	; (80080c0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008068:	682c      	ldr	r4, [r5, #0]
 800806a:	f3bf 8f5b 	dmb	ish
 800806e:	f014 0401 	ands.w	r4, r4, #1
{
 8008072:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008074:	d120      	bne.n	80080b8 <_Z23getFont_verdana_40_4bppv+0x54>
 8008076:	4628      	mov	r0, r5
 8008078:	f021 ff85 	bl	8029f86 <__cxa_guard_acquire>
 800807c:	b1e0      	cbz	r0, 80080b8 <_Z23getFont_verdana_40_4bppv+0x54>
 800807e:	233f      	movs	r3, #63	; 0x3f
 8008080:	9309      	str	r3, [sp, #36]	; 0x24
 8008082:	4b10      	ldr	r3, [pc, #64]	; (80080c4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008084:	9308      	str	r3, [sp, #32]
 8008086:	4b10      	ldr	r3, [pc, #64]	; (80080c8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008088:	4910      	ldr	r1, [pc, #64]	; (80080cc <_Z23getFont_verdana_40_4bppv+0x68>)
 800808a:	4811      	ldr	r0, [pc, #68]	; (80080d0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800808c:	940a      	str	r4, [sp, #40]	; 0x28
 800808e:	2201      	movs	r2, #1
 8008090:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008094:	2304      	movs	r3, #4
 8008096:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800809a:	2328      	movs	r3, #40	; 0x28
 800809c:	9300      	str	r3, [sp, #0]
 800809e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80080a2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80080a6:	9405      	str	r4, [sp, #20]
 80080a8:	f7fd f974 	bl	8005394 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80080ac:	4809      	ldr	r0, [pc, #36]	; (80080d4 <_Z23getFont_verdana_40_4bppv+0x70>)
 80080ae:	f022 fd99 	bl	802abe4 <atexit>
 80080b2:	4628      	mov	r0, r5
 80080b4:	f021 ff73 	bl	8029f9e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80080b8:	4805      	ldr	r0, [pc, #20]	; (80080d0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80080ba:	b00f      	add	sp, #60	; 0x3c
 80080bc:	bd30      	pop	{r4, r5, pc}
 80080be:	bf00      	nop
 80080c0:	20002170 	.word	0x20002170
 80080c4:	08047558 	.word	0x08047558
 80080c8:	08047568 	.word	0x08047568
 80080cc:	08047310 	.word	0x08047310
 80080d0:	20002174 	.word	0x20002174
 80080d4:	08008061 	.word	0x08008061

080080d8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80080d8:	2000      	movs	r0, #0
 80080da:	4770      	bx	lr

080080dc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80080dc:	2000      	movs	r0, #0
 80080de:	4770      	bx	lr

080080e0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80080e0:	b40e      	push	{r1, r2, r3}
 80080e2:	b503      	push	{r0, r1, lr}
 80080e4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80080e6:	2100      	movs	r1, #0
{
 80080e8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80080ec:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80080ee:	f00e fe51 	bl	8016d94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80080f2:	b002      	add	sp, #8
 80080f4:	f85d eb04 	ldr.w	lr, [sp], #4
 80080f8:	b003      	add	sp, #12
 80080fa:	4770      	bx	lr

080080fc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80080fc:	b40c      	push	{r2, r3}
 80080fe:	b507      	push	{r0, r1, r2, lr}
 8008100:	ab04      	add	r3, sp, #16
 8008102:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008106:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008108:	f00e fe44 	bl	8016d94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800810c:	b003      	add	sp, #12
 800810e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008112:	b002      	add	sp, #8
 8008114:	4770      	bx	lr
	...

08008118 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008118:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800811a:	b510      	push	{r4, lr}
 800811c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800811e:	b373      	cbz	r3, 800817e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008120:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008122:	b92b      	cbnz	r3, 8008130 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008124:	4b18      	ldr	r3, [pc, #96]	; (8008188 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008126:	4a19      	ldr	r2, [pc, #100]	; (800818c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008128:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800812a:	4819      	ldr	r0, [pc, #100]	; (8008190 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800812c:	f022 fd3c 	bl	802aba8 <__assert_func>
            return buffer[pos];
 8008130:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008132:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008136:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008138:	b30b      	cbz	r3, 800817e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800813a:	f010 fa66 	bl	801860a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800813e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008140:	2b01      	cmp	r3, #1
 8008142:	d803      	bhi.n	800814c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008144:	4b13      	ldr	r3, [pc, #76]	; (8008194 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008146:	4a14      	ldr	r2, [pc, #80]	; (8008198 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008148:	21cb      	movs	r1, #203	; 0xcb
 800814a:	e7ee      	b.n	800812a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800814c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800814e:	1c53      	adds	r3, r2, #1
 8008150:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008152:	2b09      	cmp	r3, #9
 8008154:	4619      	mov	r1, r3
 8008156:	bf88      	it	hi
 8008158:	f1a3 010a 	subhi.w	r1, r3, #10
 800815c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008160:	f640 103f 	movw	r0, #2367	; 0x93f
 8008164:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008166:	4281      	cmp	r1, r0
 8008168:	d109      	bne.n	800817e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800816a:	2b0a      	cmp	r3, #10
 800816c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008170:	bf28      	it	cs
 8008172:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008174:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008178:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800817a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800817c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800817e:	4620      	mov	r0, r4
}
 8008180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008184:	f010 b944 	b.w	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008188:	0802e578 	.word	0x0802e578
 800818c:	0802e581 	.word	0x0802e581
 8008190:	0802e62c 	.word	0x0802e62c
 8008194:	0802e676 	.word	0x0802e676
 8008198:	0802e684 	.word	0x0802e684

0800819c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800819c:	f010 b8ff 	b.w	801839e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080081a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80081a0:	b510      	push	{r4, lr}
 80081a2:	b086      	sub	sp, #24
 80081a4:	ac02      	add	r4, sp, #8
 80081a6:	e884 0006 	stmia.w	r4, {r1, r2}
 80081aa:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80081ac:	ab0a      	add	r3, sp, #40	; 0x28
 80081ae:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80081b0:	9301      	str	r3, [sp, #4]
 80081b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80081b4:	9300      	str	r3, [sp, #0]
 80081b6:	4621      	mov	r1, r4
 80081b8:	9b08      	ldr	r3, [sp, #32]
 80081ba:	f00d f9af 	bl	801551c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80081be:	b006      	add	sp, #24
 80081c0:	bd10      	pop	{r4, pc}
	...

080081c4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80081c4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80081c6:	bb18      	cbnz	r0, 8008210 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80081c8:	4b12      	ldr	r3, [pc, #72]	; (8008214 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80081ca:	4813      	ldr	r0, [pc, #76]	; (8008218 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80081cc:	681c      	ldr	r4, [r3, #0]
 80081ce:	4913      	ldr	r1, [pc, #76]	; (800821c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80081d0:	b1b4      	cbz	r4, 8008200 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80081d2:	6822      	ldr	r2, [r4, #0]
 80081d4:	4422      	add	r2, r4
 80081d6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80081d8:	6862      	ldr	r2, [r4, #4]
 80081da:	4422      	add	r2, r4
 80081dc:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80081de:	68a2      	ldr	r2, [r4, #8]
 80081e0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80081e2:	4b0f      	ldr	r3, [pc, #60]	; (8008220 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80081e4:	2200      	movs	r2, #0
 80081e6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80081e8:	f000 f838 	bl	800825c <_ZN17TypedTextDatabase8getFontsEv>
 80081ec:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80081ee:	f000 f833 	bl	8008258 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80081f2:	4b0c      	ldr	r3, [pc, #48]	; (8008224 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80081f4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80081f6:	4b0c      	ldr	r3, [pc, #48]	; (8008228 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80081f8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80081fa:	4b0c      	ldr	r3, [pc, #48]	; (800822c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80081fc:	8018      	strh	r0, [r3, #0]
    }
}
 80081fe:	e007      	b.n	8008210 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008200:	4b0b      	ldr	r3, [pc, #44]	; (8008230 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008202:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008204:	4b0b      	ldr	r3, [pc, #44]	; (8008234 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008206:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008208:	4b0b      	ldr	r3, [pc, #44]	; (8008238 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800820a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800820c:	2c00      	cmp	r4, #0
 800820e:	d1e8      	bne.n	80081e2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008210:	bd38      	pop	{r3, r4, r5, pc}
 8008212:	bf00      	nop
 8008214:	200021a0 	.word	0x200021a0
 8008218:	200021a4 	.word	0x200021a4
 800821c:	200021a8 	.word	0x200021a8
 8008220:	200021ac 	.word	0x200021ac
 8008224:	2001301c 	.word	0x2001301c
 8008228:	20013024 	.word	0x20013024
 800822c:	20013020 	.word	0x20013020
 8008230:	080476ac 	.word	0x080476ac
 8008234:	0804756c 	.word	0x0804756c
 8008238:	08047bb4 	.word	0x08047bb4

0800823c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800823c:	4b04      	ldr	r3, [pc, #16]	; (8008250 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008244:	4b03      	ldr	r3, [pc, #12]	; (8008254 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008246:	681b      	ldr	r3, [r3, #0]
}
 8008248:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800824c:	4770      	bx	lr
 800824e:	bf00      	nop
 8008250:	200021a8 	.word	0x200021a8
 8008254:	200021a4 	.word	0x200021a4

08008258 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008258:	2050      	movs	r0, #80	; 0x50
 800825a:	4770      	bx	lr

0800825c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800825c:	4800      	ldr	r0, [pc, #0]	; (8008260 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800825e:	4770      	bx	lr
 8008260:	200021b0 	.word	0x200021b0

08008264 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008264:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008266:	f7ff febf 	bl	8007fe8 <_Z23getFont_verdana_19_4bppv>
};
 800826a:	4c06      	ldr	r4, [pc, #24]	; (8008284 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800826c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800826e:	f7ff fef9 	bl	8008064 <_Z23getFont_verdana_40_4bppv>
};
 8008272:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008274:	f7ff fe3c 	bl	8007ef0 <_Z23getFont_verdana_10_4bppv>
};
 8008278:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800827a:	f7ff fe77 	bl	8007f6c <_Z23getFont_verdana_12_4bppv>
};
 800827e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008280:	bd10      	pop	{r4, pc}
 8008282:	bf00      	nop
 8008284:	200021b0 	.word	0x200021b0

08008288 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008288:	4770      	bx	lr

0800828a <_ZThn4_N20CalibrationPresenterD1Ev>:
 800828a:	3804      	subs	r0, #4
 800828c:	4770      	bx	lr

0800828e <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 800828e:	4770      	bx	lr

08008290 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008290:	68c0      	ldr	r0, [r0, #12]
 8008292:	6803      	ldr	r3, [r0, #0]
 8008294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008296:	4718      	bx	r3

08008298 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008298:	f1a0 0004 	sub.w	r0, r0, #4
 800829c:	f7ff bff8 	b.w	8008290 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080082a0 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80082a0:	b510      	push	{r4, lr}
 80082a2:	2110      	movs	r1, #16
 80082a4:	4604      	mov	r4, r0
 80082a6:	f021 fe6c 	bl	8029f82 <_ZdlPvj>
 80082aa:	4620      	mov	r0, r4
 80082ac:	bd10      	pop	{r4, pc}

080082ae <_ZThn4_N20CalibrationPresenterD0Ev>:
 80082ae:	f1a0 0004 	sub.w	r0, r0, #4
 80082b2:	e7f5      	b.n	80082a0 <_ZN20CalibrationPresenterD0Ev>

080082b4 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 80082b4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80082b6:	2200      	movs	r2, #0
 80082b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80082ba:	4a04      	ldr	r2, [pc, #16]	; (80082cc <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 80082bc:	60c1      	str	r1, [r0, #12]
 80082be:	f102 0408 	add.w	r4, r2, #8
 80082c2:	3224      	adds	r2, #36	; 0x24
 80082c4:	6004      	str	r4, [r0, #0]
 80082c6:	6042      	str	r2, [r0, #4]
}
 80082c8:	bd10      	pop	{r4, pc}
 80082ca:	bf00      	nop
 80082cc:	0802e758 	.word	0x0802e758

080082d0 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 80082d0:	4770      	bx	lr
	...

080082d4 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 80082d4:	b510      	push	{r4, lr}
 80082d6:	4b03      	ldr	r3, [pc, #12]	; (80082e4 <_ZN15CalibrationViewD1Ev+0x10>)
 80082d8:	6003      	str	r3, [r0, #0]
 80082da:	4604      	mov	r4, r0
 80082dc:	f7fa f9c2 	bl	8002664 <_ZN19CalibrationViewBaseD1Ev>
 80082e0:	4620      	mov	r0, r4
 80082e2:	bd10      	pop	{r4, pc}
 80082e4:	0802e794 	.word	0x0802e794

080082e8 <_ZN15CalibrationViewD0Ev>:
 80082e8:	b510      	push	{r4, lr}
 80082ea:	4604      	mov	r4, r0
 80082ec:	f7ff fff2 	bl	80082d4 <_ZN15CalibrationViewD1Ev>
 80082f0:	4620      	mov	r0, r4
 80082f2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80082f6:	f021 fe44 	bl	8029f82 <_ZdlPvj>
 80082fa:	4620      	mov	r0, r4
 80082fc:	bd10      	pop	{r4, pc}
	...

08008300 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008300:	b510      	push	{r4, lr}
 8008302:	4604      	mov	r4, r0
 8008304:	f7fa fac2 	bl	800288c <_ZN19CalibrationViewBaseC1Ev>
 8008308:	4b01      	ldr	r3, [pc, #4]	; (8008310 <_ZN15CalibrationViewC1Ev+0x10>)
 800830a:	6023      	str	r3, [r4, #0]
}
 800830c:	4620      	mov	r0, r4
 800830e:	bd10      	pop	{r4, pc}
 8008310:	0802e794 	.word	0x0802e794

08008314 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008314:	f7fa b973 	b.w	80025fe <_ZN19CalibrationViewBase11setupScreenEv>

08008318 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008318:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800831a:	4a0a      	ldr	r2, [pc, #40]	; (8008344 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 800831c:	4605      	mov	r5, r0
 800831e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008320:	460b      	mov	r3, r1
 8008322:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008326:	2104      	movs	r1, #4
 8008328:	f010 ff24 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800832c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008330:	f00e fe5a 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008334:	b92c      	cbnz	r4, 8008342 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8008336:	f00d fd6f 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800833a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800833e:	f7fb be23 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008342:	bd38      	pop	{r3, r4, r5, pc}
 8008344:	0802e788 	.word	0x0802e788

08008348 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8008348:	4770      	bx	lr

0800834a <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800834a:	3804      	subs	r0, #4
 800834c:	4770      	bx	lr

0800834e <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 800834e:	4770      	bx	lr

08008350 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008350:	4770      	bx	lr

08008352 <_ZN25Calibration_HallPresenterD0Ev>:
 8008352:	b510      	push	{r4, lr}
 8008354:	2110      	movs	r1, #16
 8008356:	4604      	mov	r4, r0
 8008358:	f021 fe13 	bl	8029f82 <_ZdlPvj>
 800835c:	4620      	mov	r0, r4
 800835e:	bd10      	pop	{r4, pc}

08008360 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008360:	f1a0 0004 	sub.w	r0, r0, #4
 8008364:	e7f5      	b.n	8008352 <_ZN25Calibration_HallPresenterD0Ev>

08008366 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8008366:	4770      	bx	lr

08008368 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8008368:	b510      	push	{r4, lr}
 800836a:	2200      	movs	r2, #0
 800836c:	6082      	str	r2, [r0, #8]
    : view(v)
 800836e:	4a04      	ldr	r2, [pc, #16]	; (8008380 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008370:	60c1      	str	r1, [r0, #12]
 8008372:	f102 0408 	add.w	r4, r2, #8
 8008376:	3224      	adds	r2, #36	; 0x24
 8008378:	6004      	str	r4, [r0, #0]
 800837a:	6042      	str	r2, [r0, #4]
}
 800837c:	bd10      	pop	{r4, pc}
 800837e:	bf00      	nop
 8008380:	0802e7c4 	.word	0x0802e7c4

08008384 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8008384:	4770      	bx	lr

08008386 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8008386:	4770      	bx	lr

08008388 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8008388:	b510      	push	{r4, lr}
 800838a:	4b03      	ldr	r3, [pc, #12]	; (8008398 <_ZN20Calibration_HallViewD1Ev+0x10>)
 800838c:	6003      	str	r3, [r0, #0]
 800838e:	4604      	mov	r4, r0
 8008390:	f7fa fcc0 	bl	8002d14 <_ZN24Calibration_HallViewBaseD1Ev>
 8008394:	4620      	mov	r0, r4
 8008396:	bd10      	pop	{r4, pc}
 8008398:	0802e7fc 	.word	0x0802e7fc

0800839c <_ZN20Calibration_HallViewD0Ev>:
 800839c:	b510      	push	{r4, lr}
 800839e:	4604      	mov	r4, r0
 80083a0:	f7ff fff2 	bl	8008388 <_ZN20Calibration_HallViewD1Ev>
 80083a4:	4620      	mov	r0, r4
 80083a6:	f44f 5187 	mov.w	r1, #4320	; 0x10e0
 80083aa:	f021 fdea 	bl	8029f82 <_ZdlPvj>
 80083ae:	4620      	mov	r0, r4
 80083b0:	bd10      	pop	{r4, pc}
	...

080083b4 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80083b4:	b510      	push	{r4, lr}
 80083b6:	4604      	mov	r4, r0
 80083b8:	f7fa fcd4 	bl	8002d64 <_ZN24Calibration_HallViewBaseC1Ev>
 80083bc:	4b01      	ldr	r3, [pc, #4]	; (80083c4 <_ZN20Calibration_HallViewC1Ev+0x10>)
 80083be:	6023      	str	r3, [r4, #0]
}
 80083c0:	4620      	mov	r0, r4
 80083c2:	bd10      	pop	{r4, pc}
 80083c4:	0802e7fc 	.word	0x0802e7fc

080083c8 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80083c8:	f7fa bc80 	b.w	8002ccc <_ZN24Calibration_HallViewBase11setupScreenEv>

080083cc <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80083cc:	4770      	bx	lr

080083ce <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80083ce:	3804      	subs	r0, #4
 80083d0:	4770      	bx	lr

080083d2 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 80083d2:	4770      	bx	lr

080083d4 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 80083d4:	4770      	bx	lr

080083d6 <_ZN24Calibration_PadPresenterD0Ev>:
 80083d6:	b510      	push	{r4, lr}
 80083d8:	2110      	movs	r1, #16
 80083da:	4604      	mov	r4, r0
 80083dc:	f021 fdd1 	bl	8029f82 <_ZdlPvj>
 80083e0:	4620      	mov	r0, r4
 80083e2:	bd10      	pop	{r4, pc}

080083e4 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80083e4:	f1a0 0004 	sub.w	r0, r0, #4
 80083e8:	e7f5      	b.n	80083d6 <_ZN24Calibration_PadPresenterD0Ev>

080083ea <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80083ea:	4770      	bx	lr

080083ec <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80083ec:	b510      	push	{r4, lr}
 80083ee:	2200      	movs	r2, #0
 80083f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80083f2:	4a04      	ldr	r2, [pc, #16]	; (8008404 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80083f4:	60c1      	str	r1, [r0, #12]
 80083f6:	f102 0408 	add.w	r4, r2, #8
 80083fa:	3224      	adds	r2, #36	; 0x24
 80083fc:	6004      	str	r4, [r0, #0]
 80083fe:	6042      	str	r2, [r0, #4]
}
 8008400:	bd10      	pop	{r4, pc}
 8008402:	bf00      	nop
 8008404:	0802e82c 	.word	0x0802e82c

08008408 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008408:	4770      	bx	lr

0800840a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800840a:	4770      	bx	lr

0800840c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800840c:	b510      	push	{r4, lr}
 800840e:	4b03      	ldr	r3, [pc, #12]	; (800841c <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008410:	6003      	str	r3, [r0, #0]
 8008412:	4604      	mov	r4, r0
 8008414:	f7fa feb8 	bl	8003188 <_ZN23Calibration_PadViewBaseD1Ev>
 8008418:	4620      	mov	r0, r4
 800841a:	bd10      	pop	{r4, pc}
 800841c:	0802e864 	.word	0x0802e864

08008420 <_ZN19Calibration_PadViewD0Ev>:
 8008420:	b510      	push	{r4, lr}
 8008422:	4604      	mov	r4, r0
 8008424:	f7ff fff2 	bl	800840c <_ZN19Calibration_PadViewD1Ev>
 8008428:	4620      	mov	r0, r4
 800842a:	f241 513c 	movw	r1, #5436	; 0x153c
 800842e:	f021 fda8 	bl	8029f82 <_ZdlPvj>
 8008432:	4620      	mov	r0, r4
 8008434:	bd10      	pop	{r4, pc}
	...

08008438 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008438:	b510      	push	{r4, lr}
 800843a:	4604      	mov	r4, r0
 800843c:	f7fa ff12 	bl	8003264 <_ZN23Calibration_PadViewBaseC1Ev>
 8008440:	4b01      	ldr	r3, [pc, #4]	; (8008448 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008442:	6023      	str	r3, [r4, #0]
}
 8008444:	4620      	mov	r0, r4
 8008446:	bd10      	pop	{r4, pc}
 8008448:	0802e864 	.word	0x0802e864

0800844c <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800844c:	f7fa beb5 	b.w	80031ba <_ZN23Calibration_PadViewBase11setupScreenEv>

08008450 <_ZN23Configuration_ContainerD1Ev>:

class Configuration_Container : public Configuration_ContainerBase
{
public:
    Configuration_Container();
    virtual ~Configuration_Container() {}
 8008450:	b510      	push	{r4, lr}
 8008452:	4b03      	ldr	r3, [pc, #12]	; (8008460 <_ZN23Configuration_ContainerD1Ev+0x10>)
 8008454:	6003      	str	r3, [r0, #0]
 8008456:	4604      	mov	r4, r0
 8008458:	f7fb f924 	bl	80036a4 <_ZN27Configuration_ContainerBaseD1Ev>
 800845c:	4620      	mov	r0, r4
 800845e:	bd10      	pop	{r4, pc}
 8008460:	0802e8a0 	.word	0x0802e8a0

08008464 <_ZN23Configuration_ContainerD0Ev>:
 8008464:	b510      	push	{r4, lr}
 8008466:	4604      	mov	r4, r0
 8008468:	f7ff fff2 	bl	8008450 <_ZN23Configuration_ContainerD1Ev>
 800846c:	4620      	mov	r0, r4
 800846e:	21b4      	movs	r1, #180	; 0xb4
 8008470:	f021 fd87 	bl	8029f82 <_ZdlPvj>
 8008474:	4620      	mov	r0, r4
 8008476:	bd10      	pop	{r4, pc}

08008478 <_ZN23Configuration_ContainerC1Ev>:
#include <gui/containers/Configuration_Container.hpp>

Configuration_Container::Configuration_Container()
 8008478:	b510      	push	{r4, lr}
 800847a:	4604      	mov	r4, r0
 800847c:	f7fb f91c 	bl	80036b8 <_ZN27Configuration_ContainerBaseC1Ev>
 8008480:	4b01      	ldr	r3, [pc, #4]	; (8008488 <_ZN23Configuration_ContainerC1Ev+0x10>)
 8008482:	6023      	str	r3, [r4, #0]
{

}
 8008484:	4620      	mov	r0, r4
 8008486:	bd10      	pop	{r4, pc}
 8008488:	0802e8a0 	.word	0x0802e8a0

0800848c <_ZN23Configuration_Container10initializeEv>:

void Configuration_Container::initialize()
{
    Configuration_ContainerBase::initialize();
 800848c:	f7fb b90b 	b.w	80036a6 <_ZN27Configuration_ContainerBase10initializeEv>

08008490 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008490:	4770      	bx	lr

08008492 <_ZN19FrontendApplicationD0Ev>:
 8008492:	b510      	push	{r4, lr}
 8008494:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008498:	4604      	mov	r4, r0
 800849a:	f021 fd72 	bl	8029f82 <_ZdlPvj>
 800849e:	4620      	mov	r0, r4
 80084a0:	bd10      	pop	{r4, pc}

080084a2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80084a2:	b510      	push	{r4, lr}
 80084a4:	4604      	mov	r4, r0
    {
        model.tick();
 80084a6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80084aa:	f000 fafb 	bl	8008aa4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80084ae:	4620      	mov	r0, r4
    }
 80084b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80084b4:	f00d bd74 	b.w	8015fa0 <_ZN8touchgfx11Application15handleTickEventEv>

080084b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80084b8:	b510      	push	{r4, lr}
 80084ba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80084bc:	f7fb fc34 	bl	8003d28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80084c0:	4b01      	ldr	r3, [pc, #4]	; (80084c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80084c2:	6023      	str	r3, [r4, #0]
{

}
 80084c4:	4620      	mov	r0, r4
 80084c6:	bd10      	pop	{r4, pc}
 80084c8:	0802e934 	.word	0x0802e934

080084cc <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80084cc:	4770      	bx	lr

080084ce <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80084ce:	3804      	subs	r0, #4
 80084d0:	4770      	bx	lr

080084d2 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80084d2:	4770      	bx	lr

080084d4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80084d4:	68c0      	ldr	r0, [r0, #12]
 80084d6:	6803      	ldr	r3, [r0, #0]
 80084d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084da:	4718      	bx	r3

080084dc <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80084dc:	f1a0 0004 	sub.w	r0, r0, #4
 80084e0:	f7ff bff8 	b.w	80084d4 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080084e4 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80084e4:	b510      	push	{r4, lr}
 80084e6:	2110      	movs	r1, #16
 80084e8:	4604      	mov	r4, r0
 80084ea:	f021 fd4a 	bl	8029f82 <_ZdlPvj>
 80084ee:	4620      	mov	r0, r4
 80084f0:	bd10      	pop	{r4, pc}

080084f2 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80084f2:	f1a0 0004 	sub.w	r0, r0, #4
 80084f6:	e7f5      	b.n	80084e4 <_ZN18Main_MenuPresenterD0Ev>

080084f8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80084f8:	b510      	push	{r4, lr}
 80084fa:	2200      	movs	r2, #0
 80084fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80084fe:	4a04      	ldr	r2, [pc, #16]	; (8008510 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008500:	60c1      	str	r1, [r0, #12]
 8008502:	f102 0408 	add.w	r4, r2, #8
 8008506:	3224      	adds	r2, #36	; 0x24
 8008508:	6004      	str	r4, [r0, #0]
 800850a:	6042      	str	r2, [r0, #4]
}
 800850c:	bd10      	pop	{r4, pc}
 800850e:	bf00      	nop
 8008510:	0802e980 	.word	0x0802e980

08008514 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008514:	4770      	bx	lr
	...

08008518 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008518:	b510      	push	{r4, lr}
 800851a:	4b03      	ldr	r3, [pc, #12]	; (8008528 <_ZN13Main_MenuViewD1Ev+0x10>)
 800851c:	6003      	str	r3, [r0, #0]
 800851e:	4604      	mov	r4, r0
 8008520:	f7fc ff8c 	bl	800543c <_ZN17Main_MenuViewBaseD1Ev>
 8008524:	4620      	mov	r0, r4
 8008526:	bd10      	pop	{r4, pc}
 8008528:	0802e9b8 	.word	0x0802e9b8

0800852c <_ZN13Main_MenuViewD0Ev>:
 800852c:	b510      	push	{r4, lr}
 800852e:	4604      	mov	r4, r0
 8008530:	f7ff fff2 	bl	8008518 <_ZN13Main_MenuViewD1Ev>
 8008534:	4620      	mov	r0, r4
 8008536:	f241 117c 	movw	r1, #4476	; 0x117c
 800853a:	f021 fd22 	bl	8029f82 <_ZdlPvj>
 800853e:	4620      	mov	r0, r4
 8008540:	bd10      	pop	{r4, pc}
	...

08008544 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008544:	b510      	push	{r4, lr}
 8008546:	4604      	mov	r4, r0
 8008548:	f7fc ffc2 	bl	80054d0 <_ZN17Main_MenuViewBaseC1Ev>
 800854c:	4b01      	ldr	r3, [pc, #4]	; (8008554 <_ZN13Main_MenuViewC1Ev+0x10>)
 800854e:	6023      	str	r3, [r4, #0]
}
 8008550:	4620      	mov	r0, r4
 8008552:	bd10      	pop	{r4, pc}
 8008554:	0802e9b8 	.word	0x0802e9b8

08008558 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008558:	f7fc bf4c 	b.w	80053f4 <_ZN17Main_MenuViewBase11setupScreenEv>

0800855c <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800855c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800855e:	4a0a      	ldr	r2, [pc, #40]	; (8008588 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008560:	4605      	mov	r5, r0
 8008562:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008564:	460b      	mov	r3, r1
 8008566:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800856a:	2104      	movs	r1, #4
 800856c:	f010 fe02 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008570:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008574:	f00e fd38 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008578:	b92c      	cbnz	r4, 8008586 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800857a:	f00d fc4d 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800857e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008582:	f7fb bd01 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008586:	bd38      	pop	{r3, r4, r5, pc}
 8008588:	0802e788 	.word	0x0802e788

0800858c <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800858c:	4770      	bx	lr

0800858e <_ZThn4_N20MeasurementPresenterD1Ev>:
 800858e:	3804      	subs	r0, #4
 8008590:	4770      	bx	lr

08008592 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008592:	4770      	bx	lr

08008594 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008594:	68c0      	ldr	r0, [r0, #12]
 8008596:	6803      	ldr	r3, [r0, #0]
 8008598:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800859a:	4718      	bx	r3

0800859c <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800859c:	f1a0 0004 	sub.w	r0, r0, #4
 80085a0:	f7ff bff8 	b.w	8008594 <_ZN20MeasurementPresenter15setTimeoutValueEi>

080085a4 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80085a4:	b510      	push	{r4, lr}
 80085a6:	2110      	movs	r1, #16
 80085a8:	4604      	mov	r4, r0
 80085aa:	f021 fcea 	bl	8029f82 <_ZdlPvj>
 80085ae:	4620      	mov	r0, r4
 80085b0:	bd10      	pop	{r4, pc}

080085b2 <_ZThn4_N20MeasurementPresenterD0Ev>:
 80085b2:	f1a0 0004 	sub.w	r0, r0, #4
 80085b6:	e7f5      	b.n	80085a4 <_ZN20MeasurementPresenterD0Ev>

080085b8 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80085b8:	b510      	push	{r4, lr}
 80085ba:	2200      	movs	r2, #0
 80085bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80085be:	4a04      	ldr	r2, [pc, #16]	; (80085d0 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80085c0:	60c1      	str	r1, [r0, #12]
 80085c2:	f102 0408 	add.w	r4, r2, #8
 80085c6:	3224      	adds	r2, #36	; 0x24
 80085c8:	6004      	str	r4, [r0, #0]
 80085ca:	6042      	str	r2, [r0, #4]
}
 80085cc:	bd10      	pop	{r4, pc}
 80085ce:	bf00      	nop
 80085d0:	0802e9e8 	.word	0x0802e9e8

080085d4 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80085d4:	4770      	bx	lr
	...

080085d8 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80085d8:	b510      	push	{r4, lr}
 80085da:	4b03      	ldr	r3, [pc, #12]	; (80085e8 <_ZN15MeasurementViewD1Ev+0x10>)
 80085dc:	6003      	str	r3, [r0, #0]
 80085de:	4604      	mov	r4, r0
 80085e0:	f7fd f9e6 	bl	80059b0 <_ZN19MeasurementViewBaseD1Ev>
 80085e4:	4620      	mov	r0, r4
 80085e6:	bd10      	pop	{r4, pc}
 80085e8:	0802ea20 	.word	0x0802ea20

080085ec <_ZN15MeasurementViewD0Ev>:
 80085ec:	b510      	push	{r4, lr}
 80085ee:	4604      	mov	r4, r0
 80085f0:	f7ff fff2 	bl	80085d8 <_ZN15MeasurementViewD1Ev>
 80085f4:	4620      	mov	r0, r4
 80085f6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80085fa:	f021 fcc2 	bl	8029f82 <_ZdlPvj>
 80085fe:	4620      	mov	r0, r4
 8008600:	bd10      	pop	{r4, pc}
	...

08008604 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008604:	b510      	push	{r4, lr}
 8008606:	4604      	mov	r4, r0
 8008608:	f7fd fa0c 	bl	8005a24 <_ZN19MeasurementViewBaseC1Ev>
 800860c:	4b01      	ldr	r3, [pc, #4]	; (8008614 <_ZN15MeasurementViewC1Ev+0x10>)
 800860e:	6023      	str	r3, [r4, #0]
}
 8008610:	4620      	mov	r0, r4
 8008612:	bd10      	pop	{r4, pc}
 8008614:	0802ea20 	.word	0x0802ea20

08008618 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008618:	f7fd b9a6 	b.w	8005968 <_ZN19MeasurementViewBase11setupScreenEv>

0800861c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800861c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800861e:	4a0a      	ldr	r2, [pc, #40]	; (8008648 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008620:	4605      	mov	r5, r0
 8008622:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008624:	460b      	mov	r3, r1
 8008626:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800862a:	2104      	movs	r1, #4
 800862c:	f010 fda2 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008630:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008634:	f00e fcd8 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008638:	b92c      	cbnz	r4, 8008646 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800863a:	f00d fbed 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800863e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008642:	f7fb bca1 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008646:	bd38      	pop	{r3, r4, r5, pc}
 8008648:	0802e788 	.word	0x0802e788

0800864c <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800864c:	4770      	bx	lr

0800864e <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800864e:	3804      	subs	r0, #4
 8008650:	4770      	bx	lr

08008652 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008652:	4770      	bx	lr

08008654 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008654:	68c0      	ldr	r0, [r0, #12]
 8008656:	6803      	ldr	r3, [r0, #0]
 8008658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800865a:	4718      	bx	r3

0800865c <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800865c:	f1a0 0004 	sub.w	r0, r0, #4
 8008660:	f7ff bff8 	b.w	8008654 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008664 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008664:	b510      	push	{r4, lr}
 8008666:	2110      	movs	r1, #16
 8008668:	4604      	mov	r4, r0
 800866a:	f021 fc8a 	bl	8029f82 <_ZdlPvj>
 800866e:	4620      	mov	r0, r4
 8008670:	bd10      	pop	{r4, pc}

08008672 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008672:	f1a0 0004 	sub.w	r0, r0, #4
 8008676:	e7f5      	b.n	8008664 <_ZN29Measurement_AccuratePresenterD0Ev>

08008678 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008678:	b510      	push	{r4, lr}
 800867a:	2200      	movs	r2, #0
 800867c:	6082      	str	r2, [r0, #8]
    : view(v)
 800867e:	4a04      	ldr	r2, [pc, #16]	; (8008690 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008680:	60c1      	str	r1, [r0, #12]
 8008682:	f102 0408 	add.w	r4, r2, #8
 8008686:	3224      	adds	r2, #36	; 0x24
 8008688:	6004      	str	r4, [r0, #0]
 800868a:	6042      	str	r2, [r0, #4]
}
 800868c:	bd10      	pop	{r4, pc}
 800868e:	bf00      	nop
 8008690:	0802ea50 	.word	0x0802ea50

08008694 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008694:	4770      	bx	lr
	...

08008698 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008698:	b510      	push	{r4, lr}
 800869a:	4b03      	ldr	r3, [pc, #12]	; (80086a8 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800869c:	6003      	str	r3, [r0, #0]
 800869e:	4604      	mov	r4, r0
 80086a0:	f7fd fc08 	bl	8005eb4 <_ZN28Measurement_AccurateViewBaseD1Ev>
 80086a4:	4620      	mov	r0, r4
 80086a6:	bd10      	pop	{r4, pc}
 80086a8:	0802ea88 	.word	0x0802ea88

080086ac <_ZN24Measurement_AccurateViewD0Ev>:
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
 80086b0:	f7ff fff2 	bl	8008698 <_ZN24Measurement_AccurateViewD1Ev>
 80086b4:	4620      	mov	r0, r4
 80086b6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80086ba:	f021 fc62 	bl	8029f82 <_ZdlPvj>
 80086be:	4620      	mov	r0, r4
 80086c0:	bd10      	pop	{r4, pc}
	...

080086c4 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80086c4:	b510      	push	{r4, lr}
 80086c6:	4604      	mov	r4, r0
 80086c8:	f7fd fc2e 	bl	8005f28 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80086cc:	4b01      	ldr	r3, [pc, #4]	; (80086d4 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80086ce:	6023      	str	r3, [r4, #0]
}
 80086d0:	4620      	mov	r0, r4
 80086d2:	bd10      	pop	{r4, pc}
 80086d4:	0802ea88 	.word	0x0802ea88

080086d8 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80086d8:	f7fd bbc8 	b.w	8005e6c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080086dc <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80086dc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086de:	4a0a      	ldr	r2, [pc, #40]	; (8008708 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80086e0:	4605      	mov	r5, r0
 80086e2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80086e4:	460b      	mov	r3, r1
 80086e6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80086ea:	2104      	movs	r1, #4
 80086ec:	f010 fd42 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80086f0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80086f4:	f00e fc78 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80086f8:	b92c      	cbnz	r4, 8008706 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80086fa:	f00d fb8d 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80086fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008702:	f7fb bc41 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008706:	bd38      	pop	{r3, r4, r5, pc}
 8008708:	0802e788 	.word	0x0802e788

0800870c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800870c:	4770      	bx	lr

0800870e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800870e:	3804      	subs	r0, #4
 8008710:	4770      	bx	lr

08008712 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008712:	4770      	bx	lr

08008714 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008714:	4770      	bx	lr

08008716 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008716:	b510      	push	{r4, lr}
 8008718:	2110      	movs	r1, #16
 800871a:	4604      	mov	r4, r0
 800871c:	f021 fc31 	bl	8029f82 <_ZdlPvj>
 8008720:	4620      	mov	r0, r4
 8008722:	bd10      	pop	{r4, pc}

08008724 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008724:	f1a0 0004 	sub.w	r0, r0, #4
 8008728:	e7f5      	b.n	8008716 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800872a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800872a:	4770      	bx	lr

0800872c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800872c:	b510      	push	{r4, lr}
 800872e:	2200      	movs	r2, #0
 8008730:	6082      	str	r2, [r0, #8]
    : view(v)
 8008732:	4a04      	ldr	r2, [pc, #16]	; (8008744 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008734:	60c1      	str	r1, [r0, #12]
 8008736:	f102 0408 	add.w	r4, r2, #8
 800873a:	3224      	adds	r2, #36	; 0x24
 800873c:	6004      	str	r4, [r0, #0]
 800873e:	6042      	str	r2, [r0, #4]
}
 8008740:	bd10      	pop	{r4, pc}
 8008742:	bf00      	nop
 8008744:	0802eab8 	.word	0x0802eab8

08008748 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008748:	4770      	bx	lr
	...

0800874c <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800874c:	b510      	push	{r4, lr}
 800874e:	4b03      	ldr	r3, [pc, #12]	; (800875c <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008750:	6003      	str	r3, [r0, #0]
 8008752:	4604      	mov	r4, r0
 8008754:	f7fd fe2c 	bl	80063b0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008758:	4620      	mov	r0, r4
 800875a:	bd10      	pop	{r4, pc}
 800875c:	0802eaf0 	.word	0x0802eaf0

08008760 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008760:	b510      	push	{r4, lr}
 8008762:	4604      	mov	r4, r0
 8008764:	f7ff fff2 	bl	800874c <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008768:	4620      	mov	r0, r4
 800876a:	f241 015c 	movw	r1, #4188	; 0x105c
 800876e:	f021 fc08 	bl	8029f82 <_ZdlPvj>
 8008772:	4620      	mov	r0, r4
 8008774:	bd10      	pop	{r4, pc}
	...

08008778 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008778:	b510      	push	{r4, lr}
 800877a:	4604      	mov	r4, r0
 800877c:	f7fd fe40 	bl	8006400 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008780:	4b01      	ldr	r3, [pc, #4]	; (8008788 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008782:	6023      	str	r3, [r4, #0]
}
 8008784:	4620      	mov	r0, r4
 8008786:	bd10      	pop	{r4, pc}
 8008788:	0802eaf0 	.word	0x0802eaf0

0800878c <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800878c:	f7fd bdec 	b.w	8006368 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008790 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008790:	4770      	bx	lr

08008792 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008792:	3804      	subs	r0, #4
 8008794:	4770      	bx	lr

08008796 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008796:	4770      	bx	lr

08008798 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008798:	4770      	bx	lr

0800879a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800879a:	b510      	push	{r4, lr}
 800879c:	2110      	movs	r1, #16
 800879e:	4604      	mov	r4, r0
 80087a0:	f021 fbef 	bl	8029f82 <_ZdlPvj>
 80087a4:	4620      	mov	r0, r4
 80087a6:	bd10      	pop	{r4, pc}

080087a8 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80087a8:	f1a0 0004 	sub.w	r0, r0, #4
 80087ac:	e7f5      	b.n	800879a <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080087ae <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80087ae:	4770      	bx	lr

080087b0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80087b0:	b510      	push	{r4, lr}
 80087b2:	2200      	movs	r2, #0
 80087b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80087b6:	4a04      	ldr	r2, [pc, #16]	; (80087c8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80087b8:	60c1      	str	r1, [r0, #12]
 80087ba:	f102 0408 	add.w	r4, r2, #8
 80087be:	3224      	adds	r2, #36	; 0x24
 80087c0:	6004      	str	r4, [r0, #0]
 80087c2:	6042      	str	r2, [r0, #4]
}
 80087c4:	bd10      	pop	{r4, pc}
 80087c6:	bf00      	nop
 80087c8:	0802eb1c 	.word	0x0802eb1c

080087cc <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80087cc:	4770      	bx	lr
	...

080087d0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80087d0:	b510      	push	{r4, lr}
 80087d2:	4b03      	ldr	r3, [pc, #12]	; (80087e0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80087d4:	6003      	str	r3, [r0, #0]
 80087d6:	4604      	mov	r4, r0
 80087d8:	f7fd ff9a 	bl	8006710 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80087dc:	4620      	mov	r0, r4
 80087de:	bd10      	pop	{r4, pc}
 80087e0:	0802eb54 	.word	0x0802eb54

080087e4 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80087e4:	b510      	push	{r4, lr}
 80087e6:	4604      	mov	r4, r0
 80087e8:	f7ff fff2 	bl	80087d0 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80087ec:	4620      	mov	r0, r4
 80087ee:	f241 015c 	movw	r1, #4188	; 0x105c
 80087f2:	f021 fbc6 	bl	8029f82 <_ZdlPvj>
 80087f6:	4620      	mov	r0, r4
 80087f8:	bd10      	pop	{r4, pc}
	...

080087fc <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80087fc:	b510      	push	{r4, lr}
 80087fe:	4604      	mov	r4, r0
 8008800:	f7fd ffae 	bl	8006760 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008804:	4b01      	ldr	r3, [pc, #4]	; (800880c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008806:	6023      	str	r3, [r4, #0]
}
 8008808:	4620      	mov	r0, r4
 800880a:	bd10      	pop	{r4, pc}
 800880c:	0802eb54 	.word	0x0802eb54

08008810 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008810:	f7fd bf5a 	b.w	80066c8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008814 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008814:	4770      	bx	lr

08008816 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008816:	3804      	subs	r0, #4
 8008818:	4770      	bx	lr

0800881a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800881a:	4770      	bx	lr

0800881c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800881c:	68c0      	ldr	r0, [r0, #12]
 800881e:	6803      	ldr	r3, [r0, #0]
 8008820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008822:	4718      	bx	r3

08008824 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008824:	f1a0 0004 	sub.w	r0, r0, #4
 8008828:	f7ff bff8 	b.w	800881c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800882c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800882c:	b510      	push	{r4, lr}
 800882e:	2110      	movs	r1, #16
 8008830:	4604      	mov	r4, r0
 8008832:	f021 fba6 	bl	8029f82 <_ZdlPvj>
 8008836:	4620      	mov	r0, r4
 8008838:	bd10      	pop	{r4, pc}

0800883a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800883a:	f1a0 0004 	sub.w	r0, r0, #4
 800883e:	e7f5      	b.n	800882c <_ZN27Measurement_SinglePresenterD0Ev>

08008840 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008840:	b510      	push	{r4, lr}
 8008842:	2200      	movs	r2, #0
 8008844:	6082      	str	r2, [r0, #8]
    : view(v)
 8008846:	4a04      	ldr	r2, [pc, #16]	; (8008858 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008848:	60c1      	str	r1, [r0, #12]
 800884a:	f102 0408 	add.w	r4, r2, #8
 800884e:	3224      	adds	r2, #36	; 0x24
 8008850:	6004      	str	r4, [r0, #0]
 8008852:	6042      	str	r2, [r0, #4]
}
 8008854:	bd10      	pop	{r4, pc}
 8008856:	bf00      	nop
 8008858:	0802eb80 	.word	0x0802eb80

0800885c <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800885c:	4770      	bx	lr
	...

08008860 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008860:	b510      	push	{r4, lr}
 8008862:	4b03      	ldr	r3, [pc, #12]	; (8008870 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008864:	6003      	str	r3, [r0, #0]
 8008866:	4604      	mov	r4, r0
 8008868:	f7fe f902 	bl	8006a70 <_ZN26Measurement_SingleViewBaseD1Ev>
 800886c:	4620      	mov	r0, r4
 800886e:	bd10      	pop	{r4, pc}
 8008870:	0802ebb8 	.word	0x0802ebb8

08008874 <_ZN22Measurement_SingleViewD0Ev>:
 8008874:	b510      	push	{r4, lr}
 8008876:	4604      	mov	r4, r0
 8008878:	f7ff fff2 	bl	8008860 <_ZN22Measurement_SingleViewD1Ev>
 800887c:	4620      	mov	r0, r4
 800887e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008882:	f021 fb7e 	bl	8029f82 <_ZdlPvj>
 8008886:	4620      	mov	r0, r4
 8008888:	bd10      	pop	{r4, pc}
	...

0800888c <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800888c:	b510      	push	{r4, lr}
 800888e:	4604      	mov	r4, r0
 8008890:	f7fe f928 	bl	8006ae4 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008894:	4b01      	ldr	r3, [pc, #4]	; (800889c <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008896:	6023      	str	r3, [r4, #0]
}
 8008898:	4620      	mov	r0, r4
 800889a:	bd10      	pop	{r4, pc}
 800889c:	0802ebb8 	.word	0x0802ebb8

080088a0 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80088a0:	f7fe b8c2 	b.w	8006a28 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080088a4 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80088a4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80088a6:	4a0a      	ldr	r2, [pc, #40]	; (80088d0 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80088a8:	4605      	mov	r5, r0
 80088aa:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80088ac:	460b      	mov	r3, r1
 80088ae:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80088b2:	2104      	movs	r1, #4
 80088b4:	f010 fc5e 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80088b8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80088bc:	f00e fb94 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80088c0:	b92c      	cbnz	r4, 80088ce <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80088c2:	f00d faa9 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80088c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80088ca:	f7fb bb5d 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80088ce:	bd38      	pop	{r3, r4, r5, pc}
 80088d0:	0802e788 	.word	0x0802e788

080088d4 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80088d4:	4770      	bx	lr

080088d6 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80088d6:	3804      	subs	r0, #4
 80088d8:	4770      	bx	lr

080088da <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80088da:	4770      	bx	lr

080088dc <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80088dc:	4770      	bx	lr

080088de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80088de:	b510      	push	{r4, lr}
 80088e0:	2110      	movs	r1, #16
 80088e2:	4604      	mov	r4, r0
 80088e4:	f021 fb4d 	bl	8029f82 <_ZdlPvj>
 80088e8:	4620      	mov	r0, r4
 80088ea:	bd10      	pop	{r4, pc}

080088ec <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80088ec:	f1a0 0004 	sub.w	r0, r0, #4
 80088f0:	e7f5      	b.n	80088de <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080088f2 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80088f2:	4770      	bx	lr

080088f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80088f4:	b510      	push	{r4, lr}
 80088f6:	2200      	movs	r2, #0
 80088f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80088fa:	4a04      	ldr	r2, [pc, #16]	; (800890c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80088fc:	60c1      	str	r1, [r0, #12]
 80088fe:	f102 0408 	add.w	r4, r2, #8
 8008902:	3224      	adds	r2, #36	; 0x24
 8008904:	6004      	str	r4, [r0, #0]
 8008906:	6042      	str	r2, [r0, #4]
}
 8008908:	bd10      	pop	{r4, pc}
 800890a:	bf00      	nop
 800890c:	0802ebe8 	.word	0x0802ebe8

08008910 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008910:	4770      	bx	lr
	...

08008914 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008914:	b510      	push	{r4, lr}
 8008916:	4b03      	ldr	r3, [pc, #12]	; (8008924 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008918:	6003      	str	r3, [r0, #0]
 800891a:	4604      	mov	r4, r0
 800891c:	f7fe fb2c 	bl	8006f78 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008920:	4620      	mov	r0, r4
 8008922:	bd10      	pop	{r4, pc}
 8008924:	0802ec28 	.word	0x0802ec28

08008928 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008928:	b510      	push	{r4, lr}
 800892a:	4604      	mov	r4, r0
 800892c:	f7ff fff2 	bl	8008914 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008930:	4620      	mov	r0, r4
 8008932:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008936:	f021 fb24 	bl	8029f82 <_ZdlPvj>
 800893a:	4620      	mov	r0, r4
 800893c:	bd10      	pop	{r4, pc}
	...

08008940 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008940:	b510      	push	{r4, lr}
 8008942:	4604      	mov	r4, r0
 8008944:	f7fe fb52 	bl	8006fec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008948:	4b01      	ldr	r3, [pc, #4]	; (8008950 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800894a:	6023      	str	r3, [r4, #0]
}
 800894c:	4620      	mov	r0, r4
 800894e:	bd10      	pop	{r4, pc}
 8008950:	0802ec28 	.word	0x0802ec28

08008954 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008954:	f7fe baeb 	b.w	8006f2e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008958 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800895a:	4e2a      	ldr	r6, [pc, #168]	; (8008a04 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800895c:	4f2a      	ldr	r7, [pc, #168]	; (8008a08 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 800895e:	4604      	mov	r4, r0
 8008960:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008962:	6803      	ldr	r3, [r0, #0]
{
 8008964:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 8008966:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008968:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800896a:	2201      	movs	r2, #1
 800896c:	2180      	movs	r1, #128	; 0x80
 800896e:	4638      	mov	r0, r7
 8008970:	f000 fdea 	bl	8009548 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8008974:	f7f8 fcc2 	bl	80012fc <updateGUI_test>
 8008978:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800897a:	f7f9 fa25 	bl	8001dc8 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800897e:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008980:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008982:	2001      	movs	r0, #1
 8008984:	f7f8 fc06 	bl	8001194 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008988:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800898c:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800898e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8008992:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 8008996:	9001      	str	r0, [sp, #4]
 8008998:	f00a fad2 	bl	8012f40 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 800899c:	9801      	ldr	r0, [sp, #4]
 800899e:	f00e fb23 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80089a2:	462b      	mov	r3, r5
 80089a4:	4a19      	ldr	r2, [pc, #100]	; (8008a0c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 80089a6:	210a      	movs	r1, #10
 80089a8:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80089ac:	f010 fbe2 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80089b0:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80089b4:	f00e fb18 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80089b8:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80089ba:	4a15      	ldr	r2, [pc, #84]	; (8008a10 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80089bc:	9303      	str	r3, [sp, #12]
 80089be:	210a      	movs	r1, #10
 80089c0:	ab03      	add	r3, sp, #12
 80089c2:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80089c6:	f010 fdc1 	bl	801954c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80089ca:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80089ce:	f00e fb0b 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80089d2:	9b05      	ldr	r3, [sp, #20]
 80089d4:	4a0e      	ldr	r2, [pc, #56]	; (8008a10 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80089d6:	9303      	str	r3, [sp, #12]
 80089d8:	210a      	movs	r1, #10
 80089da:	ab03      	add	r3, sp, #12
 80089dc:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80089e0:	f010 fdb4 	bl	801954c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80089e4:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80089e8:	f00e fafe 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80089ec:	4638      	mov	r0, r7
 80089ee:	2200      	movs	r2, #0
 80089f0:	2180      	movs	r1, #128	; 0x80
 80089f2:	f000 fda9 	bl	8009548 <HAL_GPIO_WritePin>
 80089f6:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80089f8:	6803      	ldr	r3, [r0, #0]
 80089fa:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80089fc:	b007      	add	sp, #28
 80089fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8008a02:	4718      	bx	r3
 8008a04:	20012fc4 	.word	0x20012fc4
 8008a08:	40020000 	.word	0x40020000
 8008a0c:	0802e788 	.word	0x0802e788
 8008a10:	0802ec18 	.word	0x0802ec18

08008a14 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008a14:	4770      	bx	lr

08008a16 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008a16:	3804      	subs	r0, #4
 8008a18:	4770      	bx	lr

08008a1a <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008a1a:	4770      	bx	lr

08008a1c <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008a1c:	4770      	bx	lr

08008a1e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008a1e:	b510      	push	{r4, lr}
 8008a20:	2110      	movs	r1, #16
 8008a22:	4604      	mov	r4, r0
 8008a24:	f021 faad 	bl	8029f82 <_ZdlPvj>
 8008a28:	4620      	mov	r0, r4
 8008a2a:	bd10      	pop	{r4, pc}

08008a2c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008a2c:	f1a0 0004 	sub.w	r0, r0, #4
 8008a30:	e7f5      	b.n	8008a1e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008a32 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008a32:	4770      	bx	lr

08008a34 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008a34:	b510      	push	{r4, lr}
 8008a36:	2200      	movs	r2, #0
 8008a38:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a3a:	4a04      	ldr	r2, [pc, #16]	; (8008a4c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008a3c:	60c1      	str	r1, [r0, #12]
 8008a3e:	f102 0408 	add.w	r4, r2, #8
 8008a42:	3224      	adds	r2, #36	; 0x24
 8008a44:	6004      	str	r4, [r0, #0]
 8008a46:	6042      	str	r2, [r0, #4]
}
 8008a48:	bd10      	pop	{r4, pc}
 8008a4a:	bf00      	nop
 8008a4c:	0802ec58 	.word	0x0802ec58

08008a50 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008a50:	4770      	bx	lr
	...

08008a54 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008a54:	b510      	push	{r4, lr}
 8008a56:	4b03      	ldr	r3, [pc, #12]	; (8008a64 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008a58:	6003      	str	r3, [r0, #0]
 8008a5a:	4604      	mov	r4, r0
 8008a5c:	f7fe fe2e 	bl	80076bc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008a60:	4620      	mov	r0, r4
 8008a62:	bd10      	pop	{r4, pc}
 8008a64:	0802ec90 	.word	0x0802ec90

08008a68 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008a68:	b510      	push	{r4, lr}
 8008a6a:	4604      	mov	r4, r0
 8008a6c:	f7ff fff2 	bl	8008a54 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008a70:	4620      	mov	r0, r4
 8008a72:	f241 015c 	movw	r1, #4188	; 0x105c
 8008a76:	f021 fa84 	bl	8029f82 <_ZdlPvj>
 8008a7a:	4620      	mov	r0, r4
 8008a7c:	bd10      	pop	{r4, pc}
	...

08008a80 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008a80:	b510      	push	{r4, lr}
 8008a82:	4604      	mov	r4, r0
 8008a84:	f7fe fe42 	bl	800770c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008a88:	4b01      	ldr	r3, [pc, #4]	; (8008a90 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008a8a:	6023      	str	r3, [r4, #0]
}
 8008a8c:	4620      	mov	r0, r4
 8008a8e:	bd10      	pop	{r4, pc}
 8008a90:	0802ec90 	.word	0x0802ec90

08008a94 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008a94:	f7fe bdee 	b.w	8007674 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008a98 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008a98:	2100      	movs	r1, #0
 8008a9a:	223c      	movs	r2, #60	; 0x3c
 8008a9c:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008aa0:	4770      	bx	lr
	...

08008aa4 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008aa4:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008aa6:	4d0a      	ldr	r5, [pc, #40]	; (8008ad0 <_ZN5Model4tickEv+0x2c>)
{
 8008aa8:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008aaa:	6828      	ldr	r0, [r5, #0]
 8008aac:	f004 fa28 	bl	800cf00 <osMessageQueueGetCount>
 8008ab0:	b168      	cbz	r0, 8008ace <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008ab2:	2300      	movs	r3, #0
 8008ab4:	6828      	ldr	r0, [r5, #0]
 8008ab6:	461a      	mov	r2, r3
 8008ab8:	1d21      	adds	r1, r4, #4
 8008aba:	f004 f9ed 	bl	800ce98 <osMessageQueueGet>
 8008abe:	b930      	cbnz	r0, 8008ace <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008ac0:	6820      	ldr	r0, [r4, #0]
 8008ac2:	6861      	ldr	r1, [r4, #4]
 8008ac4:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008ac6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008aca:	689b      	ldr	r3, [r3, #8]
 8008acc:	4718      	bx	r3
}
 8008ace:	bd70      	pop	{r4, r5, r6, pc}
 8008ad0:	20001a1c 	.word	0x20001a1c

08008ad4 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008ad4:	4770      	bx	lr

08008ad6 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008ad6:	3804      	subs	r0, #4
 8008ad8:	4770      	bx	lr

08008ada <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008ada:	4770      	bx	lr

08008adc <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008adc:	68c0      	ldr	r0, [r0, #12]
 8008ade:	6803      	ldr	r3, [r0, #0]
 8008ae0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ae2:	4718      	bx	r3

08008ae4 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008ae4:	f1a0 0004 	sub.w	r0, r0, #4
 8008ae8:	f7ff bff8 	b.w	8008adc <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008aec <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008aec:	b510      	push	{r4, lr}
 8008aee:	2110      	movs	r1, #16
 8008af0:	4604      	mov	r4, r0
 8008af2:	f021 fa46 	bl	8029f82 <_ZdlPvj>
 8008af6:	4620      	mov	r0, r4
 8008af8:	bd10      	pop	{r4, pc}

08008afa <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008afa:	f1a0 0004 	sub.w	r0, r0, #4
 8008afe:	e7f5      	b.n	8008aec <_ZN21Project_InfoPresenterD0Ev>

08008b00 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008b00:	b510      	push	{r4, lr}
 8008b02:	2200      	movs	r2, #0
 8008b04:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b06:	4a04      	ldr	r2, [pc, #16]	; (8008b18 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008b08:	60c1      	str	r1, [r0, #12]
 8008b0a:	f102 0408 	add.w	r4, r2, #8
 8008b0e:	3224      	adds	r2, #36	; 0x24
 8008b10:	6004      	str	r4, [r0, #0]
 8008b12:	6042      	str	r2, [r0, #4]
}
 8008b14:	bd10      	pop	{r4, pc}
 8008b16:	bf00      	nop
 8008b18:	0802ecbc 	.word	0x0802ecbc

08008b1c <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008b1c:	4770      	bx	lr
	...

08008b20 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008b20:	b510      	push	{r4, lr}
 8008b22:	4b03      	ldr	r3, [pc, #12]	; (8008b30 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008b24:	6003      	str	r3, [r0, #0]
 8008b26:	4604      	mov	r4, r0
 8008b28:	f7fe ff76 	bl	8007a18 <_ZN20Project_InfoViewBaseD1Ev>
 8008b2c:	4620      	mov	r0, r4
 8008b2e:	bd10      	pop	{r4, pc}
 8008b30:	0802ecf4 	.word	0x0802ecf4

08008b34 <_ZN16Project_InfoViewD0Ev>:
 8008b34:	b510      	push	{r4, lr}
 8008b36:	4604      	mov	r4, r0
 8008b38:	f7ff fff2 	bl	8008b20 <_ZN16Project_InfoViewD1Ev>
 8008b3c:	4620      	mov	r0, r4
 8008b3e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008b42:	f021 fa1e 	bl	8029f82 <_ZdlPvj>
 8008b46:	4620      	mov	r0, r4
 8008b48:	bd10      	pop	{r4, pc}
	...

08008b4c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008b4c:	b510      	push	{r4, lr}
 8008b4e:	4604      	mov	r4, r0
 8008b50:	f7fe ff8a 	bl	8007a68 <_ZN20Project_InfoViewBaseC1Ev>
 8008b54:	4b01      	ldr	r3, [pc, #4]	; (8008b5c <_ZN16Project_InfoViewC1Ev+0x10>)
 8008b56:	6023      	str	r3, [r4, #0]
}
 8008b58:	4620      	mov	r0, r4
 8008b5a:	bd10      	pop	{r4, pc}
 8008b5c:	0802ecf4 	.word	0x0802ecf4

08008b60 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008b60:	f7fe bf36 	b.w	80079d0 <_ZN20Project_InfoViewBase11setupScreenEv>

08008b64 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008b64:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b66:	4a0a      	ldr	r2, [pc, #40]	; (8008b90 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008b68:	4605      	mov	r5, r0
 8008b6a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008b6c:	460b      	mov	r3, r1
 8008b6e:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008b72:	2104      	movs	r1, #4
 8008b74:	f010 fafe 	bl	8019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008b78:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008b7c:	f00e fa34 	bl	8016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008b80:	b92c      	cbnz	r4, 8008b8e <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008b82:	f00d f949 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008b86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008b8a:	f7fb b9fd 	b.w	8003f88 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008b8e:	bd38      	pop	{r3, r4, r5, pc}
 8008b90:	0802e788 	.word	0x0802e788

08008b94 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008b94:	4770      	bx	lr

08008b96 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008b96:	3804      	subs	r0, #4
 8008b98:	4770      	bx	lr

08008b9a <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008b9a:	4770      	bx	lr

08008b9c <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008b9c:	4770      	bx	lr

08008b9e <_ZN21Shutting_OffPresenterD0Ev>:
 8008b9e:	b510      	push	{r4, lr}
 8008ba0:	2110      	movs	r1, #16
 8008ba2:	4604      	mov	r4, r0
 8008ba4:	f021 f9ed 	bl	8029f82 <_ZdlPvj>
 8008ba8:	4620      	mov	r0, r4
 8008baa:	bd10      	pop	{r4, pc}

08008bac <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008bac:	f1a0 0004 	sub.w	r0, r0, #4
 8008bb0:	e7f5      	b.n	8008b9e <_ZN21Shutting_OffPresenterD0Ev>

08008bb2 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008bb2:	4770      	bx	lr

08008bb4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008bb4:	b510      	push	{r4, lr}
 8008bb6:	2200      	movs	r2, #0
 8008bb8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008bba:	4a04      	ldr	r2, [pc, #16]	; (8008bcc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008bbc:	60c1      	str	r1, [r0, #12]
 8008bbe:	f102 0408 	add.w	r4, r2, #8
 8008bc2:	3224      	adds	r2, #36	; 0x24
 8008bc4:	6004      	str	r4, [r0, #0]
 8008bc6:	6042      	str	r2, [r0, #4]
}
 8008bc8:	bd10      	pop	{r4, pc}
 8008bca:	bf00      	nop
 8008bcc:	0802ed24 	.word	0x0802ed24

08008bd0 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008bd0:	4770      	bx	lr
	...

08008bd4 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008bd4:	b510      	push	{r4, lr}
 8008bd6:	4b03      	ldr	r3, [pc, #12]	; (8008be4 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008bd8:	6003      	str	r3, [r0, #0]
 8008bda:	4604      	mov	r4, r0
 8008bdc:	f7ff f912 	bl	8007e04 <_ZN20Shutting_OffViewBaseD1Ev>
 8008be0:	4620      	mov	r0, r4
 8008be2:	bd10      	pop	{r4, pc}
 8008be4:	0802ed5c 	.word	0x0802ed5c

08008be8 <_ZN16Shutting_OffViewD0Ev>:
 8008be8:	b510      	push	{r4, lr}
 8008bea:	4604      	mov	r4, r0
 8008bec:	f7ff fff2 	bl	8008bd4 <_ZN16Shutting_OffViewD1Ev>
 8008bf0:	4620      	mov	r0, r4
 8008bf2:	2198      	movs	r1, #152	; 0x98
 8008bf4:	f021 f9c5 	bl	8029f82 <_ZdlPvj>
 8008bf8:	4620      	mov	r0, r4
 8008bfa:	bd10      	pop	{r4, pc}

08008bfc <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008bfc:	b510      	push	{r4, lr}
 8008bfe:	4604      	mov	r4, r0
 8008c00:	f7ff f90a 	bl	8007e18 <_ZN20Shutting_OffViewBaseC1Ev>
 8008c04:	4b01      	ldr	r3, [pc, #4]	; (8008c0c <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008c06:	6023      	str	r3, [r4, #0]
}
 8008c08:	4620      	mov	r0, r4
 8008c0a:	bd10      	pop	{r4, pc}
 8008c0c:	0802ed5c 	.word	0x0802ed5c

08008c10 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008c10:	f7ff b8f9 	b.w	8007e06 <_ZN20Shutting_OffViewBase11setupScreenEv>

08008c14 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008c14:	20f0      	movs	r0, #240	; 0xf0
 8008c16:	4770      	bx	lr

08008c18 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008c18:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008c1c:	4770      	bx	lr
 8008c1e:	bf00      	nop

08008c20 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008c20:	2029      	movs	r0, #41	; 0x29
 8008c22:	f7f8 bf49 	b.w	8001ab8 <LCD_IO_WriteReg>
 8008c26:	bf00      	nop

08008c28 <ili9341_DisplayOff>:
 8008c28:	2028      	movs	r0, #40	; 0x28
 8008c2a:	f7f8 bf45 	b.w	8001ab8 <LCD_IO_WriteReg>
 8008c2e:	bf00      	nop

08008c30 <ili9341_Init>:
{
 8008c30:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008c32:	f7f8 ff07 	bl	8001a44 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008c36:	20ca      	movs	r0, #202	; 0xca
 8008c38:	f7f8 ff3e 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c3c:	20c3      	movs	r0, #195	; 0xc3
 8008c3e:	f7f8 ff11 	bl	8001a64 <LCD_IO_WriteData>
 8008c42:	2008      	movs	r0, #8
 8008c44:	f7f8 ff0e 	bl	8001a64 <LCD_IO_WriteData>
 8008c48:	2050      	movs	r0, #80	; 0x50
 8008c4a:	f7f8 ff0b 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c4e:	20cf      	movs	r0, #207	; 0xcf
 8008c50:	f7f8 ff32 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c54:	2000      	movs	r0, #0
 8008c56:	f7f8 ff05 	bl	8001a64 <LCD_IO_WriteData>
 8008c5a:	20c1      	movs	r0, #193	; 0xc1
 8008c5c:	f7f8 ff02 	bl	8001a64 <LCD_IO_WriteData>
 8008c60:	2030      	movs	r0, #48	; 0x30
 8008c62:	f7f8 feff 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c66:	20ed      	movs	r0, #237	; 0xed
 8008c68:	f7f8 ff26 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c6c:	2064      	movs	r0, #100	; 0x64
 8008c6e:	f7f8 fef9 	bl	8001a64 <LCD_IO_WriteData>
 8008c72:	2003      	movs	r0, #3
 8008c74:	f7f8 fef6 	bl	8001a64 <LCD_IO_WriteData>
 8008c78:	2012      	movs	r0, #18
 8008c7a:	f7f8 fef3 	bl	8001a64 <LCD_IO_WriteData>
 8008c7e:	2081      	movs	r0, #129	; 0x81
 8008c80:	f7f8 fef0 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c84:	20e8      	movs	r0, #232	; 0xe8
 8008c86:	f7f8 ff17 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c8a:	2085      	movs	r0, #133	; 0x85
 8008c8c:	f7f8 feea 	bl	8001a64 <LCD_IO_WriteData>
 8008c90:	2000      	movs	r0, #0
 8008c92:	f7f8 fee7 	bl	8001a64 <LCD_IO_WriteData>
 8008c96:	2078      	movs	r0, #120	; 0x78
 8008c98:	f7f8 fee4 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c9c:	20cb      	movs	r0, #203	; 0xcb
 8008c9e:	f7f8 ff0b 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ca2:	2039      	movs	r0, #57	; 0x39
 8008ca4:	f7f8 fede 	bl	8001a64 <LCD_IO_WriteData>
 8008ca8:	202c      	movs	r0, #44	; 0x2c
 8008caa:	f7f8 fedb 	bl	8001a64 <LCD_IO_WriteData>
 8008cae:	2000      	movs	r0, #0
 8008cb0:	f7f8 fed8 	bl	8001a64 <LCD_IO_WriteData>
 8008cb4:	2034      	movs	r0, #52	; 0x34
 8008cb6:	f7f8 fed5 	bl	8001a64 <LCD_IO_WriteData>
 8008cba:	2002      	movs	r0, #2
 8008cbc:	f7f8 fed2 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cc0:	20f7      	movs	r0, #247	; 0xf7
 8008cc2:	f7f8 fef9 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cc6:	2020      	movs	r0, #32
 8008cc8:	f7f8 fecc 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ccc:	20ea      	movs	r0, #234	; 0xea
 8008cce:	f7f8 fef3 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cd2:	2000      	movs	r0, #0
 8008cd4:	f7f8 fec6 	bl	8001a64 <LCD_IO_WriteData>
 8008cd8:	2000      	movs	r0, #0
 8008cda:	f7f8 fec3 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cde:	20b1      	movs	r0, #177	; 0xb1
 8008ce0:	f7f8 feea 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ce4:	2000      	movs	r0, #0
 8008ce6:	f7f8 febd 	bl	8001a64 <LCD_IO_WriteData>
 8008cea:	201b      	movs	r0, #27
 8008cec:	f7f8 feba 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cf0:	20b6      	movs	r0, #182	; 0xb6
 8008cf2:	f7f8 fee1 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cf6:	200a      	movs	r0, #10
 8008cf8:	f7f8 feb4 	bl	8001a64 <LCD_IO_WriteData>
 8008cfc:	20a2      	movs	r0, #162	; 0xa2
 8008cfe:	f7f8 feb1 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d02:	20c0      	movs	r0, #192	; 0xc0
 8008d04:	f7f8 fed8 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d08:	2010      	movs	r0, #16
 8008d0a:	f7f8 feab 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d0e:	20c1      	movs	r0, #193	; 0xc1
 8008d10:	f7f8 fed2 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d14:	2010      	movs	r0, #16
 8008d16:	f7f8 fea5 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d1a:	20c5      	movs	r0, #197	; 0xc5
 8008d1c:	f7f8 fecc 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d20:	2045      	movs	r0, #69	; 0x45
 8008d22:	f7f8 fe9f 	bl	8001a64 <LCD_IO_WriteData>
 8008d26:	2015      	movs	r0, #21
 8008d28:	f7f8 fe9c 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d2c:	20c7      	movs	r0, #199	; 0xc7
 8008d2e:	f7f8 fec3 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d32:	2090      	movs	r0, #144	; 0x90
 8008d34:	f7f8 fe96 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d38:	2036      	movs	r0, #54	; 0x36
 8008d3a:	f7f8 febd 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d3e:	20c8      	movs	r0, #200	; 0xc8
 8008d40:	f7f8 fe90 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d44:	20f2      	movs	r0, #242	; 0xf2
 8008d46:	f7f8 feb7 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d4a:	2000      	movs	r0, #0
 8008d4c:	f7f8 fe8a 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d50:	20b0      	movs	r0, #176	; 0xb0
 8008d52:	f7f8 feb1 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d56:	20c2      	movs	r0, #194	; 0xc2
 8008d58:	f7f8 fe84 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d5c:	20b6      	movs	r0, #182	; 0xb6
 8008d5e:	f7f8 feab 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d62:	200a      	movs	r0, #10
 8008d64:	f7f8 fe7e 	bl	8001a64 <LCD_IO_WriteData>
 8008d68:	20a7      	movs	r0, #167	; 0xa7
 8008d6a:	f7f8 fe7b 	bl	8001a64 <LCD_IO_WriteData>
 8008d6e:	2027      	movs	r0, #39	; 0x27
 8008d70:	f7f8 fe78 	bl	8001a64 <LCD_IO_WriteData>
 8008d74:	2004      	movs	r0, #4
 8008d76:	f7f8 fe75 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d7a:	202a      	movs	r0, #42	; 0x2a
 8008d7c:	f7f8 fe9c 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d80:	2000      	movs	r0, #0
 8008d82:	f7f8 fe6f 	bl	8001a64 <LCD_IO_WriteData>
 8008d86:	2000      	movs	r0, #0
 8008d88:	f7f8 fe6c 	bl	8001a64 <LCD_IO_WriteData>
 8008d8c:	2000      	movs	r0, #0
 8008d8e:	f7f8 fe69 	bl	8001a64 <LCD_IO_WriteData>
 8008d92:	20ef      	movs	r0, #239	; 0xef
 8008d94:	f7f8 fe66 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d98:	202b      	movs	r0, #43	; 0x2b
 8008d9a:	f7f8 fe8d 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d9e:	2000      	movs	r0, #0
 8008da0:	f7f8 fe60 	bl	8001a64 <LCD_IO_WriteData>
 8008da4:	2000      	movs	r0, #0
 8008da6:	f7f8 fe5d 	bl	8001a64 <LCD_IO_WriteData>
 8008daa:	2001      	movs	r0, #1
 8008dac:	f7f8 fe5a 	bl	8001a64 <LCD_IO_WriteData>
 8008db0:	203f      	movs	r0, #63	; 0x3f
 8008db2:	f7f8 fe57 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008db6:	20f6      	movs	r0, #246	; 0xf6
 8008db8:	f7f8 fe7e 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dbc:	2001      	movs	r0, #1
 8008dbe:	f7f8 fe51 	bl	8001a64 <LCD_IO_WriteData>
 8008dc2:	2000      	movs	r0, #0
 8008dc4:	f7f8 fe4e 	bl	8001a64 <LCD_IO_WriteData>
 8008dc8:	2006      	movs	r0, #6
 8008dca:	f7f8 fe4b 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008dce:	202c      	movs	r0, #44	; 0x2c
 8008dd0:	f7f8 fe72 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008dd4:	20c8      	movs	r0, #200	; 0xc8
 8008dd6:	f7f8 fed7 	bl	8001b88 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008dda:	2026      	movs	r0, #38	; 0x26
 8008ddc:	f7f8 fe6c 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008de0:	2001      	movs	r0, #1
 8008de2:	f7f8 fe3f 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008de6:	20e0      	movs	r0, #224	; 0xe0
 8008de8:	f7f8 fe66 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dec:	200f      	movs	r0, #15
 8008dee:	f7f8 fe39 	bl	8001a64 <LCD_IO_WriteData>
 8008df2:	2029      	movs	r0, #41	; 0x29
 8008df4:	f7f8 fe36 	bl	8001a64 <LCD_IO_WriteData>
 8008df8:	2024      	movs	r0, #36	; 0x24
 8008dfa:	f7f8 fe33 	bl	8001a64 <LCD_IO_WriteData>
 8008dfe:	200c      	movs	r0, #12
 8008e00:	f7f8 fe30 	bl	8001a64 <LCD_IO_WriteData>
 8008e04:	200e      	movs	r0, #14
 8008e06:	f7f8 fe2d 	bl	8001a64 <LCD_IO_WriteData>
 8008e0a:	2009      	movs	r0, #9
 8008e0c:	f7f8 fe2a 	bl	8001a64 <LCD_IO_WriteData>
 8008e10:	204e      	movs	r0, #78	; 0x4e
 8008e12:	f7f8 fe27 	bl	8001a64 <LCD_IO_WriteData>
 8008e16:	2078      	movs	r0, #120	; 0x78
 8008e18:	f7f8 fe24 	bl	8001a64 <LCD_IO_WriteData>
 8008e1c:	203c      	movs	r0, #60	; 0x3c
 8008e1e:	f7f8 fe21 	bl	8001a64 <LCD_IO_WriteData>
 8008e22:	2009      	movs	r0, #9
 8008e24:	f7f8 fe1e 	bl	8001a64 <LCD_IO_WriteData>
 8008e28:	2013      	movs	r0, #19
 8008e2a:	f7f8 fe1b 	bl	8001a64 <LCD_IO_WriteData>
 8008e2e:	2005      	movs	r0, #5
 8008e30:	f7f8 fe18 	bl	8001a64 <LCD_IO_WriteData>
 8008e34:	2017      	movs	r0, #23
 8008e36:	f7f8 fe15 	bl	8001a64 <LCD_IO_WriteData>
 8008e3a:	2011      	movs	r0, #17
 8008e3c:	f7f8 fe12 	bl	8001a64 <LCD_IO_WriteData>
 8008e40:	2000      	movs	r0, #0
 8008e42:	f7f8 fe0f 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e46:	20e1      	movs	r0, #225	; 0xe1
 8008e48:	f7f8 fe36 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e4c:	2000      	movs	r0, #0
 8008e4e:	f7f8 fe09 	bl	8001a64 <LCD_IO_WriteData>
 8008e52:	2016      	movs	r0, #22
 8008e54:	f7f8 fe06 	bl	8001a64 <LCD_IO_WriteData>
 8008e58:	201b      	movs	r0, #27
 8008e5a:	f7f8 fe03 	bl	8001a64 <LCD_IO_WriteData>
 8008e5e:	2004      	movs	r0, #4
 8008e60:	f7f8 fe00 	bl	8001a64 <LCD_IO_WriteData>
 8008e64:	2011      	movs	r0, #17
 8008e66:	f7f8 fdfd 	bl	8001a64 <LCD_IO_WriteData>
 8008e6a:	2007      	movs	r0, #7
 8008e6c:	f7f8 fdfa 	bl	8001a64 <LCD_IO_WriteData>
 8008e70:	2031      	movs	r0, #49	; 0x31
 8008e72:	f7f8 fdf7 	bl	8001a64 <LCD_IO_WriteData>
 8008e76:	2033      	movs	r0, #51	; 0x33
 8008e78:	f7f8 fdf4 	bl	8001a64 <LCD_IO_WriteData>
 8008e7c:	2042      	movs	r0, #66	; 0x42
 8008e7e:	f7f8 fdf1 	bl	8001a64 <LCD_IO_WriteData>
 8008e82:	2005      	movs	r0, #5
 8008e84:	f7f8 fdee 	bl	8001a64 <LCD_IO_WriteData>
 8008e88:	200c      	movs	r0, #12
 8008e8a:	f7f8 fdeb 	bl	8001a64 <LCD_IO_WriteData>
 8008e8e:	200a      	movs	r0, #10
 8008e90:	f7f8 fde8 	bl	8001a64 <LCD_IO_WriteData>
 8008e94:	2028      	movs	r0, #40	; 0x28
 8008e96:	f7f8 fde5 	bl	8001a64 <LCD_IO_WriteData>
 8008e9a:	202f      	movs	r0, #47	; 0x2f
 8008e9c:	f7f8 fde2 	bl	8001a64 <LCD_IO_WriteData>
 8008ea0:	200f      	movs	r0, #15
 8008ea2:	f7f8 fddf 	bl	8001a64 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ea6:	2011      	movs	r0, #17
 8008ea8:	f7f8 fe06 	bl	8001ab8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008eac:	20c8      	movs	r0, #200	; 0xc8
 8008eae:	f7f8 fe6b 	bl	8001b88 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008eb2:	2029      	movs	r0, #41	; 0x29
 8008eb4:	f7f8 fe00 	bl	8001ab8 <LCD_IO_WriteReg>
}
 8008eb8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008ebc:	202c      	movs	r0, #44	; 0x2c
 8008ebe:	f7f8 bdfb 	b.w	8001ab8 <LCD_IO_WriteReg>
 8008ec2:	bf00      	nop

08008ec4 <ili9341_ReadID>:
{
 8008ec4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008ec6:	f7f8 fdbd 	bl	8001a44 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008eca:	2103      	movs	r1, #3
 8008ecc:	20d3      	movs	r0, #211	; 0xd3
 8008ece:	f7f8 fe1d 	bl	8001b0c <LCD_IO_ReadData>
}
 8008ed2:	b280      	uxth	r0, r0
 8008ed4:	bd08      	pop	{r3, pc}
 8008ed6:	bf00      	nop

08008ed8 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008ed8:	221f      	movs	r2, #31
 8008eda:	210b      	movs	r1, #11
 8008edc:	b2c0      	uxtb	r0, r0
 8008ede:	f7f8 bd63 	b.w	80019a8 <IOE_Write>
 8008ee2:	bf00      	nop

08008ee4 <stmpe811_Reset>:
{
 8008ee4:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008ee6:	b2c4      	uxtb	r4, r0
 8008ee8:	2202      	movs	r2, #2
 8008eea:	2103      	movs	r1, #3
 8008eec:	4620      	mov	r0, r4
 8008eee:	f7f8 fd5b 	bl	80019a8 <IOE_Write>
  IOE_Delay(10); 
 8008ef2:	200a      	movs	r0, #10
 8008ef4:	f7f8 fda4 	bl	8001a40 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008ef8:	4620      	mov	r0, r4
 8008efa:	2200      	movs	r2, #0
 8008efc:	2103      	movs	r1, #3
 8008efe:	f7f8 fd53 	bl	80019a8 <IOE_Write>
}
 8008f02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008f06:	2002      	movs	r0, #2
 8008f08:	f7f8 bd9a 	b.w	8001a40 <IOE_Delay>

08008f0c <stmpe811_ReadID>:
{
 8008f0c:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f0e:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008f10:	f7f8 fd46 	bl	80019a0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f14:	2100      	movs	r1, #0
 8008f16:	4620      	mov	r0, r4
 8008f18:	f7f8 fd5e 	bl	80019d8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f1c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f1e:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f20:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f22:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f24:	f7f8 fd58 	bl	80019d8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f28:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008f2c:	b280      	uxth	r0, r0
 8008f2e:	bd10      	pop	{r4, pc}

08008f30 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008f30:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008f32:	b2c4      	uxtb	r4, r0
 8008f34:	2140      	movs	r1, #64	; 0x40
 8008f36:	4620      	mov	r0, r4
 8008f38:	f7f8 fd4e 	bl	80019d8 <IOE_Read>
  
  if(state > 0)
 8008f3c:	0603      	lsls	r3, r0, #24
 8008f3e:	d40b      	bmi.n	8008f58 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f40:	4620      	mov	r0, r4
 8008f42:	2201      	movs	r2, #1
 8008f44:	214b      	movs	r1, #75	; 0x4b
 8008f46:	f7f8 fd2f 	bl	80019a8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f4a:	4620      	mov	r0, r4
 8008f4c:	2200      	movs	r2, #0
 8008f4e:	214b      	movs	r1, #75	; 0x4b
 8008f50:	f7f8 fd2a 	bl	80019a8 <IOE_Write>
  uint8_t ret = 0;
 8008f54:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008f56:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008f58:	214c      	movs	r1, #76	; 0x4c
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	f7f8 fd3c 	bl	80019d8 <IOE_Read>
      ret = 1;
 8008f60:	3800      	subs	r0, #0
 8008f62:	bf18      	it	ne
 8008f64:	2001      	movne	r0, #1
}
 8008f66:	bd10      	pop	{r4, pc}

08008f68 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008f68:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008f6a:	210b      	movs	r1, #11
 8008f6c:	b2c0      	uxtb	r0, r0
 8008f6e:	f7f8 fd33 	bl	80019d8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008f72:	f000 001f 	and.w	r0, r0, #31
 8008f76:	bd08      	pop	{r3, pc}

08008f78 <stmpe811_TS_GetXY>:
{
 8008f78:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f7a:	2304      	movs	r3, #4
{
 8008f7c:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f7e:	b2c4      	uxtb	r4, r0
{
 8008f80:	4615      	mov	r5, r2
 8008f82:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008f84:	eb0d 0203 	add.w	r2, sp, r3
 8008f88:	21d7      	movs	r1, #215	; 0xd7
 8008f8a:	4620      	mov	r0, r4
 8008f8c:	f7f8 fd40 	bl	8001a10 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008f90:	9b01      	ldr	r3, [sp, #4]
 8008f92:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008f94:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008f96:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008f9a:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f9c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008f9e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008fa0:	2201      	movs	r2, #1
 8008fa2:	214b      	movs	r1, #75	; 0x4b
 8008fa4:	f7f8 fd00 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008fa8:	2200      	movs	r2, #0
 8008faa:	214b      	movs	r1, #75	; 0x4b
 8008fac:	4620      	mov	r0, r4
 8008fae:	f7f8 fcfb 	bl	80019a8 <IOE_Write>
}
 8008fb2:	b002      	add	sp, #8
 8008fb4:	bd70      	pop	{r4, r5, r6, pc}
 8008fb6:	bf00      	nop

08008fb8 <stmpe811_TS_Start>:
{
 8008fb8:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008fba:	b2c4      	uxtb	r4, r0
 8008fbc:	2104      	movs	r1, #4
 8008fbe:	4620      	mov	r0, r4
 8008fc0:	f7f8 fd0a 	bl	80019d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008fc4:	2104      	movs	r1, #4
 8008fc6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008fca:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008fcc:	4620      	mov	r0, r4
 8008fce:	f7f8 fceb 	bl	80019a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008fd2:	2117      	movs	r1, #23
 8008fd4:	4620      	mov	r0, r4
 8008fd6:	f7f8 fcff 	bl	80019d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008fda:	2117      	movs	r1, #23
 8008fdc:	f000 020f 	and.w	r2, r0, #15
 8008fe0:	4620      	mov	r0, r4
 8008fe2:	f7f8 fce1 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008fe6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008fea:	4620      	mov	r0, r4
 8008fec:	2104      	movs	r1, #4
 8008fee:	f7f8 fcdb 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008ff2:	2249      	movs	r2, #73	; 0x49
 8008ff4:	2120      	movs	r1, #32
 8008ff6:	4620      	mov	r0, r4
 8008ff8:	f7f8 fcd6 	bl	80019a8 <IOE_Write>
  IOE_Delay(2); 
 8008ffc:	2002      	movs	r0, #2
 8008ffe:	f7f8 fd1f 	bl	8001a40 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009002:	4620      	mov	r0, r4
 8009004:	2201      	movs	r2, #1
 8009006:	2121      	movs	r1, #33	; 0x21
 8009008:	f7f8 fcce 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800900c:	4620      	mov	r0, r4
 800900e:	229a      	movs	r2, #154	; 0x9a
 8009010:	2141      	movs	r1, #65	; 0x41
 8009012:	f7f8 fcc9 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009016:	4620      	mov	r0, r4
 8009018:	2201      	movs	r2, #1
 800901a:	214a      	movs	r1, #74	; 0x4a
 800901c:	f7f8 fcc4 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009020:	4620      	mov	r0, r4
 8009022:	2201      	movs	r2, #1
 8009024:	214b      	movs	r1, #75	; 0x4b
 8009026:	f7f8 fcbf 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800902a:	4620      	mov	r0, r4
 800902c:	2200      	movs	r2, #0
 800902e:	214b      	movs	r1, #75	; 0x4b
 8009030:	f7f8 fcba 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009034:	4620      	mov	r0, r4
 8009036:	2201      	movs	r2, #1
 8009038:	2156      	movs	r1, #86	; 0x56
 800903a:	f7f8 fcb5 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800903e:	4620      	mov	r0, r4
 8009040:	2201      	movs	r2, #1
 8009042:	2158      	movs	r1, #88	; 0x58
 8009044:	f7f8 fcb0 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009048:	4620      	mov	r0, r4
 800904a:	2201      	movs	r2, #1
 800904c:	2140      	movs	r1, #64	; 0x40
 800904e:	f7f8 fcab 	bl	80019a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009052:	4620      	mov	r0, r4
 8009054:	22ff      	movs	r2, #255	; 0xff
 8009056:	210b      	movs	r1, #11
 8009058:	f7f8 fca6 	bl	80019a8 <IOE_Write>
}
 800905c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009060:	2002      	movs	r0, #2
 8009062:	f7f8 bced 	b.w	8001a40 <IOE_Delay>
 8009066:	bf00      	nop

08009068 <stmpe811_TS_DisableIT>:
{
 8009068:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800906a:	b2c4      	uxtb	r4, r0
 800906c:	2109      	movs	r1, #9
 800906e:	4620      	mov	r0, r4
 8009070:	f7f8 fcb2 	bl	80019d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009074:	2109      	movs	r1, #9
 8009076:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800907a:	4620      	mov	r0, r4
 800907c:	f7f8 fc94 	bl	80019a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009080:	210a      	movs	r1, #10
 8009082:	4620      	mov	r0, r4
 8009084:	f7f8 fca8 	bl	80019d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009088:	210a      	movs	r1, #10
 800908a:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800908e:	4620      	mov	r0, r4
}
 8009090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009094:	f7f8 bc88 	b.w	80019a8 <IOE_Write>

08009098 <stmpe811_TS_EnableIT>:
{
 8009098:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800909a:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800909c:	f7f8 fc82 	bl	80019a4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80090a0:	210a      	movs	r1, #10
 80090a2:	4620      	mov	r0, r4
 80090a4:	f7f8 fc98 	bl	80019d8 <IOE_Read>
  tmp |= Source; 
 80090a8:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80090ac:	b2c2      	uxtb	r2, r0
 80090ae:	210a      	movs	r1, #10
 80090b0:	4620      	mov	r0, r4
 80090b2:	f7f8 fc79 	bl	80019a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80090b6:	2109      	movs	r1, #9
 80090b8:	4620      	mov	r0, r4
 80090ba:	f7f8 fc8d 	bl	80019d8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80090be:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80090c2:	b2c2      	uxtb	r2, r0
 80090c4:	2109      	movs	r1, #9
 80090c6:	4620      	mov	r0, r4
}
 80090c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80090cc:	f7f8 bc6c 	b.w	80019a8 <IOE_Write>

080090d0 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80090d0:	4a10      	ldr	r2, [pc, #64]	; (8009114 <stmpe811_Init+0x44>)
 80090d2:	7813      	ldrb	r3, [r2, #0]
 80090d4:	4298      	cmp	r0, r3
 80090d6:	d004      	beq.n	80090e2 <stmpe811_Init+0x12>
 80090d8:	7851      	ldrb	r1, [r2, #1]
 80090da:	4288      	cmp	r0, r1
 80090dc:	d001      	beq.n	80090e2 <stmpe811_Init+0x12>
 80090de:	b113      	cbz	r3, 80090e6 <stmpe811_Init+0x16>
 80090e0:	b101      	cbz	r1, 80090e4 <stmpe811_Init+0x14>
 80090e2:	4770      	bx	lr
 80090e4:	2301      	movs	r3, #1
{
 80090e6:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80090e8:	b2c4      	uxtb	r4, r0
 80090ea:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80090ec:	f7f8 fc58 	bl	80019a0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80090f0:	2202      	movs	r2, #2
 80090f2:	2103      	movs	r1, #3
 80090f4:	4620      	mov	r0, r4
 80090f6:	f7f8 fc57 	bl	80019a8 <IOE_Write>
  IOE_Delay(10); 
 80090fa:	200a      	movs	r0, #10
 80090fc:	f7f8 fca0 	bl	8001a40 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009100:	4620      	mov	r0, r4
 8009102:	2200      	movs	r2, #0
 8009104:	2103      	movs	r1, #3
 8009106:	f7f8 fc4f 	bl	80019a8 <IOE_Write>
}
 800910a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800910e:	2002      	movs	r0, #2
 8009110:	f7f8 bc96 	b.w	8001a40 <IOE_Delay>
 8009114:	200021c0 	.word	0x200021c0

08009118 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009118:	4b05      	ldr	r3, [pc, #20]	; (8009130 <SystemInit+0x18>)
 800911a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800911e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009122:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009126:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800912a:	6099      	str	r1, [r3, #8]
#endif
}
 800912c:	4770      	bx	lr
 800912e:	bf00      	nop
 8009130:	e000ed00 	.word	0xe000ed00

08009134 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009134:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009136:	4b0b      	ldr	r3, [pc, #44]	; (8009164 <HAL_Init+0x30>)
 8009138:	681a      	ldr	r2, [r3, #0]
 800913a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800913e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009140:	681a      	ldr	r2, [r3, #0]
 8009142:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009146:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009148:	681a      	ldr	r2, [r3, #0]
 800914a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800914e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009150:	2003      	movs	r0, #3
 8009152:	f000 f82d 	bl	80091b0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009156:	200f      	movs	r0, #15
 8009158:	f7f9 f8e8 	bl	800232c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800915c:	f7f8 fe68 	bl	8001e30 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009160:	2000      	movs	r0, #0
 8009162:	bd08      	pop	{r3, pc}
 8009164:	40023c00 	.word	0x40023c00

08009168 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009168:	4a03      	ldr	r2, [pc, #12]	; (8009178 <HAL_IncTick+0x10>)
 800916a:	4b04      	ldr	r3, [pc, #16]	; (800917c <HAL_IncTick+0x14>)
 800916c:	6811      	ldr	r1, [r2, #0]
 800916e:	781b      	ldrb	r3, [r3, #0]
 8009170:	440b      	add	r3, r1
 8009172:	6013      	str	r3, [r2, #0]
}
 8009174:	4770      	bx	lr
 8009176:	bf00      	nop
 8009178:	200021c4 	.word	0x200021c4
 800917c:	2000007c 	.word	0x2000007c

08009180 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009180:	4b01      	ldr	r3, [pc, #4]	; (8009188 <HAL_GetTick+0x8>)
 8009182:	6818      	ldr	r0, [r3, #0]
}
 8009184:	4770      	bx	lr
 8009186:	bf00      	nop
 8009188:	200021c4 	.word	0x200021c4

0800918c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800918c:	b538      	push	{r3, r4, r5, lr}
 800918e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009190:	f7ff fff6 	bl	8009180 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009194:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009196:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009198:	d002      	beq.n	80091a0 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800919a:	4b04      	ldr	r3, [pc, #16]	; (80091ac <HAL_Delay+0x20>)
 800919c:	781b      	ldrb	r3, [r3, #0]
 800919e:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80091a0:	f7ff ffee 	bl	8009180 <HAL_GetTick>
 80091a4:	1b43      	subs	r3, r0, r5
 80091a6:	42a3      	cmp	r3, r4
 80091a8:	d3fa      	bcc.n	80091a0 <HAL_Delay+0x14>
  {
  }
}
 80091aa:	bd38      	pop	{r3, r4, r5, pc}
 80091ac:	2000007c 	.word	0x2000007c

080091b0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80091b0:	4907      	ldr	r1, [pc, #28]	; (80091d0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80091b2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80091b4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80091b6:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80091ba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80091be:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80091c0:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80091c2:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80091c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80091ca:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80091cc:	4770      	bx	lr
 80091ce:	bf00      	nop
 80091d0:	e000ed00 	.word	0xe000ed00

080091d4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80091d4:	4b1c      	ldr	r3, [pc, #112]	; (8009248 <HAL_NVIC_SetPriority+0x74>)
 80091d6:	68db      	ldr	r3, [r3, #12]
 80091d8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80091dc:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80091de:	f1c3 0e07 	rsb	lr, r3, #7
 80091e2:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80091e6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80091ea:	bf28      	it	cs
 80091ec:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80091f0:	f1bc 0f06 	cmp.w	ip, #6
 80091f4:	d91b      	bls.n	800922e <HAL_NVIC_SetPriority+0x5a>
 80091f6:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80091f8:	f04f 3cff 	mov.w	ip, #4294967295
 80091fc:	fa0c fc03 	lsl.w	ip, ip, r3
 8009200:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009204:	f04f 3cff 	mov.w	ip, #4294967295
 8009208:	fa0c fc0e 	lsl.w	ip, ip, lr
 800920c:	ea21 010c 	bic.w	r1, r1, ip
 8009210:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009212:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009214:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009218:	db0c      	blt.n	8009234 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800921a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800921e:	0109      	lsls	r1, r1, #4
 8009220:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009224:	b2c9      	uxtb	r1, r1
 8009226:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800922a:	f85d fb04 	ldr.w	pc, [sp], #4
 800922e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009230:	4613      	mov	r3, r2
 8009232:	e7e7      	b.n	8009204 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009234:	4b05      	ldr	r3, [pc, #20]	; (800924c <HAL_NVIC_SetPriority+0x78>)
 8009236:	f000 000f 	and.w	r0, r0, #15
 800923a:	0109      	lsls	r1, r1, #4
 800923c:	4403      	add	r3, r0
 800923e:	b2c9      	uxtb	r1, r1
 8009240:	7619      	strb	r1, [r3, #24]
 8009242:	f85d fb04 	ldr.w	pc, [sp], #4
 8009246:	bf00      	nop
 8009248:	e000ed00 	.word	0xe000ed00
 800924c:	e000ecfc 	.word	0xe000ecfc

08009250 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009250:	2800      	cmp	r0, #0
 8009252:	db07      	blt.n	8009264 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009254:	0941      	lsrs	r1, r0, #5
 8009256:	4a04      	ldr	r2, [pc, #16]	; (8009268 <HAL_NVIC_EnableIRQ+0x18>)
 8009258:	f000 001f 	and.w	r0, r0, #31
 800925c:	2301      	movs	r3, #1
 800925e:	4083      	lsls	r3, r0
 8009260:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009264:	4770      	bx	lr
 8009266:	bf00      	nop
 8009268:	e000e100 	.word	0xe000e100

0800926c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800926c:	b180      	cbz	r0, 8009290 <HAL_CRC_Init+0x24>
{
 800926e:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009270:	7943      	ldrb	r3, [r0, #5]
 8009272:	4604      	mov	r4, r0
 8009274:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009278:	b11b      	cbz	r3, 8009282 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800927a:	2301      	movs	r3, #1
 800927c:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800927e:	2000      	movs	r0, #0
}
 8009280:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009282:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009284:	f7f8 fdf4 	bl	8001e70 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009288:	2301      	movs	r3, #1
 800928a:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800928c:	2000      	movs	r0, #0
}
 800928e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009290:	2001      	movs	r0, #1
}
 8009292:	4770      	bx	lr

08009294 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009294:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009298:	2b02      	cmp	r3, #2
 800929a:	d003      	beq.n	80092a4 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800929c:	2380      	movs	r3, #128	; 0x80
 800929e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80092a0:	2001      	movs	r0, #1
 80092a2:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80092a4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80092a6:	2305      	movs	r3, #5
 80092a8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80092ac:	6813      	ldr	r3, [r2, #0]
 80092ae:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80092b2:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80092b4:	6013      	str	r3, [r2, #0]
}
 80092b6:	4770      	bx	lr

080092b8 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80092b8:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80092bc:	4770      	bx	lr
 80092be:	bf00      	nop

080092c0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80092c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80092c4:	2200      	movs	r2, #0
 80092c6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80092c8:	f8df a260 	ldr.w	sl, [pc, #608]	; 800952c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80092cc:	4e90      	ldr	r6, [pc, #576]	; (8009510 <HAL_GPIO_Init+0x250>)
{
 80092ce:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092d0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80092d2:	4689      	mov	r9, r1
 80092d4:	e005      	b.n	80092e2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092d6:	3301      	adds	r3, #1
 80092d8:	2b10      	cmp	r3, #16
 80092da:	f102 0202 	add.w	r2, r2, #2
 80092de:	f000 8095 	beq.w	800940c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80092e2:	2101      	movs	r1, #1
 80092e4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80092e6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80092ea:	43a1      	bics	r1, r4
 80092ec:	d1f3      	bne.n	80092d6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092ee:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80092f2:	f00c 0103 	and.w	r1, ip, #3
 80092f6:	1e4d      	subs	r5, r1, #1
 80092f8:	2d01      	cmp	r5, #1
 80092fa:	f240 808a 	bls.w	8009412 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80092fe:	2903      	cmp	r1, #3
 8009300:	f040 80ca 	bne.w	8009498 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009304:	4091      	lsls	r1, r2
 8009306:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009308:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800930a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800930c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800930e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009312:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009314:	d0df      	beq.n	80092d6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009316:	2100      	movs	r1, #0
 8009318:	9103      	str	r1, [sp, #12]
 800931a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800931e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009322:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009326:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800932a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800932e:	9103      	str	r1, [sp, #12]
 8009330:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009332:	f023 0103 	bic.w	r1, r3, #3
 8009336:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800933a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800933e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009342:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009344:	00bf      	lsls	r7, r7, #2
 8009346:	f04f 0e0f 	mov.w	lr, #15
 800934a:	fa0e fe07 	lsl.w	lr, lr, r7
 800934e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009352:	4d70      	ldr	r5, [pc, #448]	; (8009514 <HAL_GPIO_Init+0x254>)
 8009354:	42a8      	cmp	r0, r5
 8009356:	d02e      	beq.n	80093b6 <HAL_GPIO_Init+0xf6>
 8009358:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800935c:	42a8      	cmp	r0, r5
 800935e:	f000 809f 	beq.w	80094a0 <HAL_GPIO_Init+0x1e0>
 8009362:	4d6d      	ldr	r5, [pc, #436]	; (8009518 <HAL_GPIO_Init+0x258>)
 8009364:	42a8      	cmp	r0, r5
 8009366:	f000 80a2 	beq.w	80094ae <HAL_GPIO_Init+0x1ee>
 800936a:	4d6c      	ldr	r5, [pc, #432]	; (800951c <HAL_GPIO_Init+0x25c>)
 800936c:	42a8      	cmp	r0, r5
 800936e:	f000 80a5 	beq.w	80094bc <HAL_GPIO_Init+0x1fc>
 8009372:	4d6b      	ldr	r5, [pc, #428]	; (8009520 <HAL_GPIO_Init+0x260>)
 8009374:	42a8      	cmp	r0, r5
 8009376:	f000 80a8 	beq.w	80094ca <HAL_GPIO_Init+0x20a>
 800937a:	4d6a      	ldr	r5, [pc, #424]	; (8009524 <HAL_GPIO_Init+0x264>)
 800937c:	42a8      	cmp	r0, r5
 800937e:	f000 80b2 	beq.w	80094e6 <HAL_GPIO_Init+0x226>
 8009382:	4d69      	ldr	r5, [pc, #420]	; (8009528 <HAL_GPIO_Init+0x268>)
 8009384:	42a8      	cmp	r0, r5
 8009386:	f000 80b5 	beq.w	80094f4 <HAL_GPIO_Init+0x234>
 800938a:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009530 <HAL_GPIO_Init+0x270>
 800938e:	4570      	cmp	r0, lr
 8009390:	f000 80a2 	beq.w	80094d8 <HAL_GPIO_Init+0x218>
 8009394:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009534 <HAL_GPIO_Init+0x274>
 8009398:	4570      	cmp	r0, lr
 800939a:	f000 80b2 	beq.w	8009502 <HAL_GPIO_Init+0x242>
 800939e:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009538 <HAL_GPIO_Init+0x278>
 80093a2:	4570      	cmp	r0, lr
 80093a4:	bf0c      	ite	eq
 80093a6:	f04f 0e09 	moveq.w	lr, #9
 80093aa:	f04f 0e0a 	movne.w	lr, #10
 80093ae:	fa0e f707 	lsl.w	r7, lr, r7
 80093b2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80093b6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80093ba:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80093bc:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80093c0:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80093c4:	bf0c      	ite	eq
 80093c6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093c8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80093cc:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80093ce:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80093d0:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80093d4:	bf0c      	ite	eq
 80093d6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093d8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80093dc:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80093de:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80093e0:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80093e4:	bf0c      	ite	eq
 80093e6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093e8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80093ec:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80093ee:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80093f0:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80093f4:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80093f8:	bf0c      	ite	eq
 80093fa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80093fc:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009400:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009402:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009404:	f102 0202 	add.w	r2, r2, #2
 8009408:	f47f af6b 	bne.w	80092e2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800940c:	b005      	add	sp, #20
 800940e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009412:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009416:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800941a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800941e:	2503      	movs	r5, #3
 8009420:	fa05 f802 	lsl.w	r8, r5, r2
 8009424:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009428:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800942c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800942e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009430:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009434:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009438:	409f      	lsls	r7, r3
 800943a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800943e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009442:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009444:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009446:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800944a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800944e:	4097      	lsls	r7, r2
 8009450:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009454:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009456:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009458:	fa01 f102 	lsl.w	r1, r1, r2
 800945c:	f47f af54 	bne.w	8009308 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009460:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009464:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009468:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800946c:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009470:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009472:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009476:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800947a:	fa07 f708 	lsl.w	r7, r7, r8
 800947e:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009480:	270f      	movs	r7, #15
 8009482:	fa07 f808 	lsl.w	r8, r7, r8
 8009486:	9f00      	ldr	r7, [sp, #0]
 8009488:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800948c:	9f01      	ldr	r7, [sp, #4]
 800948e:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009492:	f8ce 7020 	str.w	r7, [lr, #32]
 8009496:	e737      	b.n	8009308 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009498:	2503      	movs	r5, #3
 800949a:	4095      	lsls	r5, r2
 800949c:	43ed      	mvns	r5, r5
 800949e:	e7d1      	b.n	8009444 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80094a0:	f04f 0e01 	mov.w	lr, #1
 80094a4:	fa0e f707 	lsl.w	r7, lr, r7
 80094a8:	ea48 0807 	orr.w	r8, r8, r7
 80094ac:	e783      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094ae:	f04f 0e02 	mov.w	lr, #2
 80094b2:	fa0e f707 	lsl.w	r7, lr, r7
 80094b6:	ea48 0807 	orr.w	r8, r8, r7
 80094ba:	e77c      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094bc:	f04f 0e03 	mov.w	lr, #3
 80094c0:	fa0e f707 	lsl.w	r7, lr, r7
 80094c4:	ea48 0807 	orr.w	r8, r8, r7
 80094c8:	e775      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094ca:	f04f 0e04 	mov.w	lr, #4
 80094ce:	fa0e f707 	lsl.w	r7, lr, r7
 80094d2:	ea48 0807 	orr.w	r8, r8, r7
 80094d6:	e76e      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094d8:	f04f 0e07 	mov.w	lr, #7
 80094dc:	fa0e f707 	lsl.w	r7, lr, r7
 80094e0:	ea48 0807 	orr.w	r8, r8, r7
 80094e4:	e767      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094e6:	f04f 0e05 	mov.w	lr, #5
 80094ea:	fa0e f707 	lsl.w	r7, lr, r7
 80094ee:	ea48 0807 	orr.w	r8, r8, r7
 80094f2:	e760      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 80094f4:	f04f 0e06 	mov.w	lr, #6
 80094f8:	fa0e f707 	lsl.w	r7, lr, r7
 80094fc:	ea48 0807 	orr.w	r8, r8, r7
 8009500:	e759      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 8009502:	f04f 0e08 	mov.w	lr, #8
 8009506:	fa0e f707 	lsl.w	r7, lr, r7
 800950a:	ea48 0807 	orr.w	r8, r8, r7
 800950e:	e752      	b.n	80093b6 <HAL_GPIO_Init+0xf6>
 8009510:	40013c00 	.word	0x40013c00
 8009514:	40020000 	.word	0x40020000
 8009518:	40020800 	.word	0x40020800
 800951c:	40020c00 	.word	0x40020c00
 8009520:	40021000 	.word	0x40021000
 8009524:	40021400 	.word	0x40021400
 8009528:	40021800 	.word	0x40021800
 800952c:	40023800 	.word	0x40023800
 8009530:	40021c00 	.word	0x40021c00
 8009534:	40022000 	.word	0x40022000
 8009538:	40022400 	.word	0x40022400

0800953c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800953c:	6903      	ldr	r3, [r0, #16]
 800953e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009540:	bf14      	ite	ne
 8009542:	2001      	movne	r0, #1
 8009544:	2000      	moveq	r0, #0
 8009546:	4770      	bx	lr

08009548 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009548:	b902      	cbnz	r2, 800954c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800954a:	0409      	lsls	r1, r1, #16
 800954c:	6181      	str	r1, [r0, #24]
  }
}
 800954e:	4770      	bx	lr

08009550 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009550:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009552:	ea01 0203 	and.w	r2, r1, r3
 8009556:	ea21 0103 	bic.w	r1, r1, r3
 800955a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800955e:	6181      	str	r1, [r0, #24]
}
 8009560:	4770      	bx	lr
 8009562:	bf00      	nop

08009564 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8009564:	4770      	bx	lr
 8009566:	bf00      	nop

08009568 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009568:	4a04      	ldr	r2, [pc, #16]	; (800957c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800956a:	6951      	ldr	r1, [r2, #20]
 800956c:	4201      	tst	r1, r0
 800956e:	d100      	bne.n	8009572 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009570:	4770      	bx	lr
{
 8009572:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8009574:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8009576:	f7ff fff5 	bl	8009564 <HAL_GPIO_EXTI_Callback>
}
 800957a:	bd08      	pop	{r3, pc}
 800957c:	40013c00 	.word	0x40013c00

08009580 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009584:	6804      	ldr	r4, [r0, #0]
{
 8009586:	b083      	sub	sp, #12
 8009588:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800958a:	6823      	ldr	r3, [r4, #0]
{
 800958c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009590:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009594:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009598:	4606      	mov	r6, r0
 800959a:	468a      	mov	sl, r1
 800959c:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800959e:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80095a0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095a4:	d136      	bne.n	8009614 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80095a6:	6965      	ldr	r5, [r4, #20]
 80095a8:	07e8      	lsls	r0, r5, #31
 80095aa:	d5fc      	bpl.n	80095a6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80095ac:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80095b0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80095b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095b6:	d003      	beq.n	80095c0 <I2C_RequestMemoryWrite+0x40>
 80095b8:	e04f      	b.n	800965a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095ba:	6961      	ldr	r1, [r4, #20]
 80095bc:	054d      	lsls	r5, r1, #21
 80095be:	d45d      	bmi.n	800967c <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80095c0:	6961      	ldr	r1, [r4, #20]
 80095c2:	078b      	lsls	r3, r1, #30
 80095c4:	d5f9      	bpl.n	80095ba <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80095c6:	2300      	movs	r3, #0
 80095c8:	9301      	str	r3, [sp, #4]
 80095ca:	6963      	ldr	r3, [r4, #20]
 80095cc:	9301      	str	r3, [sp, #4]
 80095ce:	69a3      	ldr	r3, [r4, #24]
 80095d0:	9301      	str	r3, [sp, #4]
 80095d2:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095d4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095d8:	f040 8088 	bne.w	80096ec <I2C_RequestMemoryWrite+0x16c>
 80095dc:	6963      	ldr	r3, [r4, #20]
 80095de:	061a      	lsls	r2, r3, #24
 80095e0:	d464      	bmi.n	80096ac <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095e2:	6963      	ldr	r3, [r4, #20]
 80095e4:	055b      	lsls	r3, r3, #21
 80095e6:	d5f9      	bpl.n	80095dc <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80095e8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80095ea:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80095ee:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80095f0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80095f2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80095f4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095f8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80095fc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80095fe:	f043 0304 	orr.w	r3, r3, #4
 8009602:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009604:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009606:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009608:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800960a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800960e:	d066      	beq.n	80096de <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009610:	2001      	movs	r0, #1
 8009612:	e01f      	b.n	8009654 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009614:	6963      	ldr	r3, [r4, #20]
 8009616:	07d9      	lsls	r1, r3, #31
 8009618:	d4c8      	bmi.n	80095ac <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800961a:	f7ff fdb1 	bl	8009180 <HAL_GetTick>
 800961e:	eba0 000b 	sub.w	r0, r0, fp
 8009622:	4581      	cmp	r9, r0
 8009624:	d304      	bcc.n	8009630 <I2C_RequestMemoryWrite+0xb0>
 8009626:	f1b9 0f00 	cmp.w	r9, #0
 800962a:	d001      	beq.n	8009630 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800962c:	6834      	ldr	r4, [r6, #0]
 800962e:	e7b7      	b.n	80095a0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009630:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009632:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009634:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009636:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800963a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800963e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009640:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009642:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009646:	f042 0220 	orr.w	r2, r2, #32
 800964a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800964c:	680b      	ldr	r3, [r1, #0]
 800964e:	05dc      	lsls	r4, r3, #23
 8009650:	d435      	bmi.n	80096be <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009652:	2003      	movs	r0, #3
}
 8009654:	b003      	add	sp, #12
 8009656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800965a:	6963      	ldr	r3, [r4, #20]
 800965c:	0798      	lsls	r0, r3, #30
 800965e:	d4b2      	bmi.n	80095c6 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009660:	6963      	ldr	r3, [r4, #20]
 8009662:	055a      	lsls	r2, r3, #21
 8009664:	d40a      	bmi.n	800967c <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009666:	f7ff fd8b 	bl	8009180 <HAL_GetTick>
 800966a:	eba0 000b 	sub.w	r0, r0, fp
 800966e:	4581      	cmp	r9, r0
 8009670:	d34e      	bcc.n	8009710 <I2C_RequestMemoryWrite+0x190>
 8009672:	f1b9 0f00 	cmp.w	r9, #0
 8009676:	d04b      	beq.n	8009710 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009678:	6834      	ldr	r4, [r6, #0]
 800967a:	e79a      	b.n	80095b2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800967c:	6823      	ldr	r3, [r4, #0]
 800967e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009682:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009684:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009686:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800968a:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800968c:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800968e:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009690:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009694:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009698:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800969a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800969e:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80096a2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096a4:	6433      	str	r3, [r6, #64]	; 0x40
}
 80096a6:	b003      	add	sp, #12
 80096a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80096ac:	f1b8 0f01 	cmp.w	r8, #1
 80096b0:	d109      	bne.n	80096c6 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80096b2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80096b4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80096b6:	6127      	str	r7, [r4, #16]
}
 80096b8:	b003      	add	sp, #12
 80096ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80096be:	f44f 7300 	mov.w	r3, #512	; 0x200
 80096c2:	6433      	str	r3, [r6, #64]	; 0x40
 80096c4:	e7c5      	b.n	8009652 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80096c6:	0a3b      	lsrs	r3, r7, #8
 80096c8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096ca:	f1b9 3fff 	cmp.w	r9, #4294967295
 80096ce:	d12e      	bne.n	800972e <I2C_RequestMemoryWrite+0x1ae>
 80096d0:	6963      	ldr	r3, [r4, #20]
 80096d2:	0619      	lsls	r1, r3, #24
 80096d4:	d4ed      	bmi.n	80096b2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096d6:	6963      	ldr	r3, [r4, #20]
 80096d8:	055a      	lsls	r2, r3, #21
 80096da:	d5f9      	bpl.n	80096d0 <I2C_RequestMemoryWrite+0x150>
 80096dc:	e784      	b.n	80095e8 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096de:	6832      	ldr	r2, [r6, #0]
 80096e0:	6813      	ldr	r3, [r2, #0]
 80096e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80096e6:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096e8:	6013      	str	r3, [r2, #0]
 80096ea:	e7b3      	b.n	8009654 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096ec:	6963      	ldr	r3, [r4, #20]
 80096ee:	061d      	lsls	r5, r3, #24
 80096f0:	d4dc      	bmi.n	80096ac <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096f2:	6963      	ldr	r3, [r4, #20]
 80096f4:	0559      	lsls	r1, r3, #21
 80096f6:	f53f af77 	bmi.w	80095e8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096fa:	f7ff fd41 	bl	8009180 <HAL_GetTick>
 80096fe:	eba0 000b 	sub.w	r0, r0, fp
 8009702:	4581      	cmp	r9, r0
 8009704:	d325      	bcc.n	8009752 <I2C_RequestMemoryWrite+0x1d2>
 8009706:	f1b9 0f00 	cmp.w	r9, #0
 800970a:	d022      	beq.n	8009752 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800970c:	6834      	ldr	r4, [r6, #0]
 800970e:	e761      	b.n	80095d4 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009710:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009712:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009714:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009716:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800971a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800971e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009720:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009724:	f043 0320 	orr.w	r3, r3, #32
 8009728:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800972a:	2001      	movs	r0, #1
 800972c:	e792      	b.n	8009654 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800972e:	6963      	ldr	r3, [r4, #20]
 8009730:	061b      	lsls	r3, r3, #24
 8009732:	d4be      	bmi.n	80096b2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009734:	6963      	ldr	r3, [r4, #20]
 8009736:	0558      	lsls	r0, r3, #21
 8009738:	f53f af56 	bmi.w	80095e8 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800973c:	f7ff fd20 	bl	8009180 <HAL_GetTick>
 8009740:	eba0 000b 	sub.w	r0, r0, fp
 8009744:	4581      	cmp	r9, r0
 8009746:	d304      	bcc.n	8009752 <I2C_RequestMemoryWrite+0x1d2>
 8009748:	f1b9 0f00 	cmp.w	r9, #0
 800974c:	d001      	beq.n	8009752 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800974e:	6834      	ldr	r4, [r6, #0]
 8009750:	e7bb      	b.n	80096ca <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009752:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009754:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009756:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009758:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800975c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009760:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009762:	4313      	orrs	r3, r2
 8009764:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009766:	e74d      	b.n	8009604 <I2C_RequestMemoryWrite+0x84>

08009768 <I2C_RequestMemoryRead>:
{
 8009768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800976c:	6804      	ldr	r4, [r0, #0]
{
 800976e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009770:	6823      	ldr	r3, [r4, #0]
 8009772:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009776:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009778:	6823      	ldr	r3, [r4, #0]
{
 800977a:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800977c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009780:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009784:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009788:	6023      	str	r3, [r4, #0]
{
 800978a:	4606      	mov	r6, r0
 800978c:	468b      	mov	fp, r1
 800978e:	4617      	mov	r7, r2
 8009790:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009794:	d13a      	bne.n	800980c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009796:	6965      	ldr	r5, [r4, #20]
 8009798:	07eb      	lsls	r3, r5, #31
 800979a:	d5fc      	bpl.n	8009796 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800979c:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80097a0:	6123      	str	r3, [r4, #16]
 80097a2:	fa5f fb8b 	uxtb.w	fp, fp
 80097a6:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097aa:	d003      	beq.n	80097b4 <I2C_RequestMemoryRead+0x4c>
 80097ac:	e069      	b.n	8009882 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ae:	6965      	ldr	r5, [r4, #20]
 80097b0:	056a      	lsls	r2, r5, #21
 80097b2:	d44e      	bmi.n	8009852 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097b4:	6965      	ldr	r5, [r4, #20]
 80097b6:	07a9      	lsls	r1, r5, #30
 80097b8:	d5f9      	bpl.n	80097ae <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80097ba:	2300      	movs	r3, #0
 80097bc:	9301      	str	r3, [sp, #4]
 80097be:	6963      	ldr	r3, [r4, #20]
 80097c0:	9301      	str	r3, [sp, #4]
 80097c2:	69a3      	ldr	r3, [r4, #24]
 80097c4:	9301      	str	r3, [sp, #4]
 80097c6:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097c8:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097cc:	f040 80bd 	bne.w	800994a <I2C_RequestMemoryRead+0x1e2>
 80097d0:	6963      	ldr	r3, [r4, #20]
 80097d2:	0618      	lsls	r0, r3, #24
 80097d4:	d468      	bmi.n	80098a8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097d6:	6963      	ldr	r3, [r4, #20]
 80097d8:	0559      	lsls	r1, r3, #21
 80097da:	d5f9      	bpl.n	80097d0 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80097dc:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80097de:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80097e2:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80097e4:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80097e6:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80097e8:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80097ec:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80097f0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80097f2:	f043 0304 	orr.w	r3, r3, #4
 80097f6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80097f8:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80097fa:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80097fc:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80097fe:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009802:	d070      	beq.n	80098e6 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009804:	2001      	movs	r0, #1
}
 8009806:	b003      	add	sp, #12
 8009808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800980c:	6963      	ldr	r3, [r4, #20]
 800980e:	07dd      	lsls	r5, r3, #31
 8009810:	d4c4      	bmi.n	800979c <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009812:	f7ff fcb5 	bl	8009180 <HAL_GetTick>
 8009816:	eba0 0009 	sub.w	r0, r0, r9
 800981a:	4582      	cmp	sl, r0
 800981c:	d304      	bcc.n	8009828 <I2C_RequestMemoryRead+0xc0>
 800981e:	f1ba 0f00 	cmp.w	sl, #0
 8009822:	d001      	beq.n	8009828 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009824:	6834      	ldr	r4, [r6, #0]
 8009826:	e7b3      	b.n	8009790 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009828:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800982a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800982c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800982e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009832:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009836:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009838:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800983a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800983e:	f042 0220 	orr.w	r2, r2, #32
 8009842:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009844:	680b      	ldr	r3, [r1, #0]
 8009846:	05dc      	lsls	r4, r3, #23
 8009848:	d43d      	bmi.n	80098c6 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800984a:	2003      	movs	r0, #3
}
 800984c:	b003      	add	sp, #12
 800984e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009852:	6823      	ldr	r3, [r4, #0]
 8009854:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009858:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800985a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800985c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009860:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009862:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009864:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009866:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800986a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800986e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009870:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009874:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009878:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800987a:	6433      	str	r3, [r6, #64]	; 0x40
}
 800987c:	b003      	add	sp, #12
 800987e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009882:	6963      	ldr	r3, [r4, #20]
 8009884:	079b      	lsls	r3, r3, #30
 8009886:	d498      	bmi.n	80097ba <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009888:	6963      	ldr	r3, [r4, #20]
 800988a:	0558      	lsls	r0, r3, #21
 800988c:	d4e1      	bmi.n	8009852 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800988e:	f7ff fc77 	bl	8009180 <HAL_GetTick>
 8009892:	eba0 0009 	sub.w	r0, r0, r9
 8009896:	4582      	cmp	sl, r0
 8009898:	f0c0 808f 	bcc.w	80099ba <I2C_RequestMemoryRead+0x252>
 800989c:	f1ba 0f00 	cmp.w	sl, #0
 80098a0:	f000 808b 	beq.w	80099ba <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098a4:	6834      	ldr	r4, [r6, #0]
 80098a6:	e77e      	b.n	80097a6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80098a8:	f1b8 0f01 	cmp.w	r8, #1
 80098ac:	d10f      	bne.n	80098ce <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80098ae:	b2ff      	uxtb	r7, r7
 80098b0:	6127      	str	r7, [r4, #16]
 80098b2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80098b6:	d16e      	bne.n	8009996 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098b8:	6963      	ldr	r3, [r4, #20]
 80098ba:	061b      	lsls	r3, r3, #24
 80098bc:	d41a      	bmi.n	80098f4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098be:	6963      	ldr	r3, [r4, #20]
 80098c0:	055f      	lsls	r7, r3, #21
 80098c2:	d5f9      	bpl.n	80098b8 <I2C_RequestMemoryRead+0x150>
 80098c4:	e78a      	b.n	80097dc <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80098c6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80098ca:	6433      	str	r3, [r6, #64]	; 0x40
 80098cc:	e7bd      	b.n	800984a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80098ce:	0a3b      	lsrs	r3, r7, #8
 80098d0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098d2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80098d6:	d17e      	bne.n	80099d6 <I2C_RequestMemoryRead+0x26e>
 80098d8:	6963      	ldr	r3, [r4, #20]
 80098da:	061d      	lsls	r5, r3, #24
 80098dc:	d4e7      	bmi.n	80098ae <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098de:	6963      	ldr	r3, [r4, #20]
 80098e0:	0558      	lsls	r0, r3, #21
 80098e2:	d5f9      	bpl.n	80098d8 <I2C_RequestMemoryRead+0x170>
 80098e4:	e77a      	b.n	80097dc <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098e6:	6832      	ldr	r2, [r6, #0]
 80098e8:	6813      	ldr	r3, [r2, #0]
 80098ea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80098ee:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098f0:	6013      	str	r3, [r2, #0]
 80098f2:	e7ab      	b.n	800984c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80098f4:	6823      	ldr	r3, [r4, #0]
 80098f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80098fa:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80098fc:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009900:	d113      	bne.n	800992a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009902:	6963      	ldr	r3, [r4, #20]
 8009904:	07d8      	lsls	r0, r3, #31
 8009906:	d5fc      	bpl.n	8009902 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009908:	f04b 0301 	orr.w	r3, fp, #1
 800990c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800990e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009912:	d003      	beq.n	800991c <I2C_RequestMemoryRead+0x1b4>
 8009914:	e02b      	b.n	800996e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009916:	6963      	ldr	r3, [r4, #20]
 8009918:	055b      	lsls	r3, r3, #21
 800991a:	d49a      	bmi.n	8009852 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800991c:	6963      	ldr	r3, [r4, #20]
 800991e:	43db      	mvns	r3, r3
 8009920:	f013 0302 	ands.w	r3, r3, #2
 8009924:	d1f7      	bne.n	8009916 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009926:	4618      	mov	r0, r3
 8009928:	e790      	b.n	800984c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800992a:	6963      	ldr	r3, [r4, #20]
 800992c:	07d9      	lsls	r1, r3, #31
 800992e:	d4eb      	bmi.n	8009908 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009930:	f7ff fc26 	bl	8009180 <HAL_GetTick>
 8009934:	eba0 0009 	sub.w	r0, r0, r9
 8009938:	4582      	cmp	sl, r0
 800993a:	f4ff af75 	bcc.w	8009828 <I2C_RequestMemoryRead+0xc0>
 800993e:	f1ba 0f00 	cmp.w	sl, #0
 8009942:	f43f af71 	beq.w	8009828 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009946:	6834      	ldr	r4, [r6, #0]
 8009948:	e7d8      	b.n	80098fc <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800994a:	6963      	ldr	r3, [r4, #20]
 800994c:	061a      	lsls	r2, r3, #24
 800994e:	d4ab      	bmi.n	80098a8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009950:	6963      	ldr	r3, [r4, #20]
 8009952:	055d      	lsls	r5, r3, #21
 8009954:	f53f af42 	bmi.w	80097dc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009958:	f7ff fc12 	bl	8009180 <HAL_GetTick>
 800995c:	eba0 0009 	sub.w	r0, r0, r9
 8009960:	4582      	cmp	sl, r0
 8009962:	d34b      	bcc.n	80099fc <I2C_RequestMemoryRead+0x294>
 8009964:	f1ba 0f00 	cmp.w	sl, #0
 8009968:	d048      	beq.n	80099fc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800996a:	6834      	ldr	r4, [r6, #0]
 800996c:	e72c      	b.n	80097c8 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800996e:	6963      	ldr	r3, [r4, #20]
 8009970:	43db      	mvns	r3, r3
 8009972:	f013 0302 	ands.w	r3, r3, #2
 8009976:	d0d6      	beq.n	8009926 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009978:	6963      	ldr	r3, [r4, #20]
 800997a:	055a      	lsls	r2, r3, #21
 800997c:	f53f af69 	bmi.w	8009852 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009980:	f7ff fbfe 	bl	8009180 <HAL_GetTick>
 8009984:	eba0 0009 	sub.w	r0, r0, r9
 8009988:	4582      	cmp	sl, r0
 800998a:	d316      	bcc.n	80099ba <I2C_RequestMemoryRead+0x252>
 800998c:	f1ba 0f00 	cmp.w	sl, #0
 8009990:	d013      	beq.n	80099ba <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009992:	6834      	ldr	r4, [r6, #0]
 8009994:	e7bb      	b.n	800990e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009996:	6963      	ldr	r3, [r4, #20]
 8009998:	061d      	lsls	r5, r3, #24
 800999a:	d4ab      	bmi.n	80098f4 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800999c:	6963      	ldr	r3, [r4, #20]
 800999e:	055a      	lsls	r2, r3, #21
 80099a0:	f53f af1c 	bmi.w	80097dc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099a4:	f7ff fbec 	bl	8009180 <HAL_GetTick>
 80099a8:	eba0 0009 	sub.w	r0, r0, r9
 80099ac:	4582      	cmp	sl, r0
 80099ae:	d325      	bcc.n	80099fc <I2C_RequestMemoryRead+0x294>
 80099b0:	f1ba 0f00 	cmp.w	sl, #0
 80099b4:	d022      	beq.n	80099fc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099b6:	6834      	ldr	r4, [r6, #0]
 80099b8:	e77b      	b.n	80098b2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80099ba:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80099bc:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80099be:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80099c0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80099c4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80099c8:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80099ca:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80099ce:	f043 0320 	orr.w	r3, r3, #32
 80099d2:	6433      	str	r3, [r6, #64]	; 0x40
 80099d4:	e716      	b.n	8009804 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099d6:	6963      	ldr	r3, [r4, #20]
 80099d8:	0619      	lsls	r1, r3, #24
 80099da:	f53f af68 	bmi.w	80098ae <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099de:	6963      	ldr	r3, [r4, #20]
 80099e0:	055b      	lsls	r3, r3, #21
 80099e2:	f53f aefb 	bmi.w	80097dc <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099e6:	f7ff fbcb 	bl	8009180 <HAL_GetTick>
 80099ea:	eba0 0009 	sub.w	r0, r0, r9
 80099ee:	4582      	cmp	sl, r0
 80099f0:	d304      	bcc.n	80099fc <I2C_RequestMemoryRead+0x294>
 80099f2:	f1ba 0f00 	cmp.w	sl, #0
 80099f6:	d001      	beq.n	80099fc <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80099f8:	6834      	ldr	r4, [r6, #0]
 80099fa:	e76a      	b.n	80098d2 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099fc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80099fe:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a00:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a02:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a06:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a0a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a0c:	4313      	orrs	r3, r2
 8009a0e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009a10:	e6f2      	b.n	80097f8 <I2C_RequestMemoryRead+0x90>
 8009a12:	bf00      	nop

08009a14 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009a14:	2800      	cmp	r0, #0
 8009a16:	f000 80b9 	beq.w	8009b8c <HAL_I2C_Init+0x178>
{
 8009a1a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009a1c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009a20:	4604      	mov	r4, r0
 8009a22:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a26:	2b00      	cmp	r3, #0
 8009a28:	f000 8098 	beq.w	8009b5c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009a2c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009a2e:	2224      	movs	r2, #36	; 0x24
 8009a30:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009a34:	681a      	ldr	r2, [r3, #0]
 8009a36:	f022 0201 	bic.w	r2, r2, #1
 8009a3a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009a3c:	681a      	ldr	r2, [r3, #0]
 8009a3e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009a42:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009a44:	681a      	ldr	r2, [r3, #0]
 8009a46:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009a4a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009a4c:	f001 fe70 	bl	800b730 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009a50:	6865      	ldr	r5, [r4, #4]
 8009a52:	4b4f      	ldr	r3, [pc, #316]	; (8009b90 <HAL_I2C_Init+0x17c>)
 8009a54:	429d      	cmp	r5, r3
 8009a56:	d84f      	bhi.n	8009af8 <HAL_I2C_Init+0xe4>
 8009a58:	4b4e      	ldr	r3, [pc, #312]	; (8009b94 <HAL_I2C_Init+0x180>)
 8009a5a:	4298      	cmp	r0, r3
 8009a5c:	d97c      	bls.n	8009b58 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009a5e:	4b4e      	ldr	r3, [pc, #312]	; (8009b98 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a60:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009a62:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a66:	1e43      	subs	r3, r0, #1
 8009a68:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a6c:	6822      	ldr	r2, [r4, #0]
 8009a6e:	6851      	ldr	r1, [r2, #4]
 8009a70:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a74:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009a78:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a7a:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009a7c:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a80:	f10c 0c01 	add.w	ip, ip, #1
 8009a84:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a88:	ea41 010c 	orr.w	r1, r1, ip
 8009a8c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a8e:	69d1      	ldr	r1, [r2, #28]
 8009a90:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009a94:	3301      	adds	r3, #1
 8009a96:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009a9a:	4203      	tst	r3, r0
 8009a9c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009aa0:	d161      	bne.n	8009b66 <HAL_I2C_Init+0x152>
 8009aa2:	2304      	movs	r3, #4
 8009aa4:	430b      	orrs	r3, r1
 8009aa6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009aa8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009aac:	6811      	ldr	r1, [r2, #0]
 8009aae:	4303      	orrs	r3, r0
 8009ab0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009ab4:	430b      	orrs	r3, r1
 8009ab6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009ab8:	6891      	ldr	r1, [r2, #8]
 8009aba:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009abe:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009ac2:	4303      	orrs	r3, r0
 8009ac4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009ac8:	430b      	orrs	r3, r1
 8009aca:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009acc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009ad0:	68d1      	ldr	r1, [r2, #12]
 8009ad2:	4303      	orrs	r3, r0
 8009ad4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009ad8:	430b      	orrs	r3, r1
 8009ada:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009adc:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009ade:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009ae0:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009ae4:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009ae6:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009ae8:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009aea:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009aee:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009af0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009af4:	4618      	mov	r0, r3
}
 8009af6:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009af8:	4b28      	ldr	r3, [pc, #160]	; (8009b9c <HAL_I2C_Init+0x188>)
 8009afa:	4298      	cmp	r0, r3
 8009afc:	d92c      	bls.n	8009b58 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009afe:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009b00:	4b25      	ldr	r3, [pc, #148]	; (8009b98 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009b02:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009b04:	4e26      	ldr	r6, [pc, #152]	; (8009ba0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009b06:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009b0a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009b0e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009b12:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009b14:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009b18:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009b1c:	fb01 f303 	mul.w	r3, r1, r3
 8009b20:	fba6 6303 	umull	r6, r3, r6, r3
 8009b24:	6a11      	ldr	r1, [r2, #32]
 8009b26:	099b      	lsrs	r3, r3, #6
 8009b28:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009b2c:	3301      	adds	r3, #1
 8009b2e:	430b      	orrs	r3, r1
 8009b30:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b32:	69d1      	ldr	r1, [r2, #28]
 8009b34:	68a3      	ldr	r3, [r4, #8]
 8009b36:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009b3a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009b3e:	b9ab      	cbnz	r3, 8009b6c <HAL_I2C_Init+0x158>
 8009b40:	1e43      	subs	r3, r0, #1
 8009b42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009b46:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b4a:	3301      	adds	r3, #1
 8009b4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b50:	b1d3      	cbz	r3, 8009b88 <HAL_I2C_Init+0x174>
 8009b52:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009b56:	e7a5      	b.n	8009aa4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009b58:	2001      	movs	r0, #1
}
 8009b5a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009b5c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009b60:	f7f8 f9a0 	bl	8001ea4 <HAL_I2C_MspInit>
 8009b64:	e762      	b.n	8009a2c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009b66:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b6a:	e79b      	b.n	8009aa4 <HAL_I2C_Init+0x90>
 8009b6c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009b70:	1e43      	subs	r3, r0, #1
 8009b72:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009b76:	fbb3 f3f5 	udiv	r3, r3, r5
 8009b7a:	3301      	adds	r3, #1
 8009b7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009b80:	b113      	cbz	r3, 8009b88 <HAL_I2C_Init+0x174>
 8009b82:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009b86:	e78d      	b.n	8009aa4 <HAL_I2C_Init+0x90>
 8009b88:	2301      	movs	r3, #1
 8009b8a:	e78b      	b.n	8009aa4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009b8c:	2001      	movs	r0, #1
}
 8009b8e:	4770      	bx	lr
 8009b90:	000186a0 	.word	0x000186a0
 8009b94:	001e847f 	.word	0x001e847f
 8009b98:	431bde83 	.word	0x431bde83
 8009b9c:	003d08ff 	.word	0x003d08ff
 8009ba0:	10624dd3 	.word	0x10624dd3

08009ba4 <HAL_I2C_Mem_Write>:
{
 8009ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ba8:	4604      	mov	r4, r0
 8009baa:	b083      	sub	sp, #12
 8009bac:	4699      	mov	r9, r3
 8009bae:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009bb2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009bb4:	460f      	mov	r7, r1
 8009bb6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009bb8:	f7ff fae2 	bl	8009180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009bbc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009bc0:	2b20      	cmp	r3, #32
 8009bc2:	d004      	beq.n	8009bce <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009bc4:	2702      	movs	r7, #2
}
 8009bc6:	4638      	mov	r0, r7
 8009bc8:	b003      	add	sp, #12
 8009bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009bce:	4605      	mov	r5, r0
 8009bd0:	e005      	b.n	8009bde <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bd2:	f7ff fad5 	bl	8009180 <HAL_GetTick>
 8009bd6:	1b40      	subs	r0, r0, r5
 8009bd8:	2819      	cmp	r0, #25
 8009bda:	f200 80a8 	bhi.w	8009d2e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009bde:	6820      	ldr	r0, [r4, #0]
 8009be0:	6983      	ldr	r3, [r0, #24]
 8009be2:	ea6f 0c03 	mvn.w	ip, r3
 8009be6:	f01c 0b02 	ands.w	fp, ip, #2
 8009bea:	d0f2      	beq.n	8009bd2 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009bec:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009bf0:	2b01      	cmp	r3, #1
 8009bf2:	d0e7      	beq.n	8009bc4 <HAL_I2C_Mem_Write+0x20>
 8009bf4:	2301      	movs	r3, #1
 8009bf6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009bfa:	6803      	ldr	r3, [r0, #0]
 8009bfc:	07db      	lsls	r3, r3, #31
 8009bfe:	d572      	bpl.n	8009ce6 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c00:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c02:	6807      	ldr	r7, [r0, #0]
 8009c04:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009c08:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009c0a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009c0c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009c0e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c10:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009c14:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009c18:	2040      	movs	r0, #64	; 0x40
 8009c1a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009c1e:	2000      	movs	r0, #0
 8009c20:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009c22:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009c26:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009c28:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009c2a:	4856      	ldr	r0, [pc, #344]	; (8009d84 <HAL_I2C_Mem_Write+0x1e0>)
 8009c2c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c2e:	464b      	mov	r3, r9
 8009c30:	4642      	mov	r2, r8
 8009c32:	4620      	mov	r0, r4
 8009c34:	f7ff fca4 	bl	8009580 <I2C_RequestMemoryWrite>
 8009c38:	4607      	mov	r7, r0
 8009c3a:	bb00      	cbnz	r0, 8009c7e <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009c3c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009c3e:	2b00      	cmp	r3, #0
 8009c40:	f000 809e 	beq.w	8009d80 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c44:	6823      	ldr	r3, [r4, #0]
 8009c46:	1c72      	adds	r2, r6, #1
 8009c48:	d159      	bne.n	8009cfe <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c4a:	695a      	ldr	r2, [r3, #20]
 8009c4c:	0610      	lsls	r0, r2, #24
 8009c4e:	d41b      	bmi.n	8009c88 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c50:	695a      	ldr	r2, [r3, #20]
 8009c52:	0551      	lsls	r1, r2, #21
 8009c54:	d5f9      	bpl.n	8009c4a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c56:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c58:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c5c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c5e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c60:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c62:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c66:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009c6a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009c6c:	f043 0304 	orr.w	r3, r3, #4
 8009c70:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c72:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009c74:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c76:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009c78:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c7c:	d038      	beq.n	8009cf0 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009c7e:	2701      	movs	r7, #1
}
 8009c80:	4638      	mov	r0, r7
 8009c82:	b003      	add	sp, #12
 8009c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c88:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009c8c:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c90:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009c92:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c96:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009c9a:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009c9c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009c9e:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009ca0:	3a01      	subs	r2, #1
 8009ca2:	b292      	uxth	r2, r2
 8009ca4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009ca6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ca8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009caa:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009cac:	0740      	lsls	r0, r0, #29
 8009cae:	d517      	bpl.n	8009ce0 <HAL_I2C_Mem_Write+0x13c>
 8009cb0:	b942      	cbnz	r2, 8009cc4 <HAL_I2C_Mem_Write+0x120>
 8009cb2:	1c72      	adds	r2, r6, #1
 8009cb4:	d156      	bne.n	8009d64 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009cb6:	695a      	ldr	r2, [r3, #20]
 8009cb8:	0750      	lsls	r0, r2, #29
 8009cba:	d446      	bmi.n	8009d4a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009cbc:	695a      	ldr	r2, [r3, #20]
 8009cbe:	0551      	lsls	r1, r2, #21
 8009cc0:	d5f9      	bpl.n	8009cb6 <HAL_I2C_Mem_Write+0x112>
 8009cc2:	e7c8      	b.n	8009c56 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009cc4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009cc8:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009cca:	f10c 0102 	add.w	r1, ip, #2
 8009cce:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009cd0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009cd2:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009cd6:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009cd8:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009cda:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009cdc:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009cde:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009ce0:	2a00      	cmp	r2, #0
 8009ce2:	d1b0      	bne.n	8009c46 <HAL_I2C_Mem_Write+0xa2>
 8009ce4:	e7e5      	b.n	8009cb2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009ce6:	6803      	ldr	r3, [r0, #0]
 8009ce8:	f043 0301 	orr.w	r3, r3, #1
 8009cec:	6003      	str	r3, [r0, #0]
 8009cee:	e787      	b.n	8009c00 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009cf0:	6822      	ldr	r2, [r4, #0]
 8009cf2:	6813      	ldr	r3, [r2, #0]
 8009cf4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009cf8:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009cfa:	6013      	str	r3, [r2, #0]
 8009cfc:	e763      	b.n	8009bc6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cfe:	695a      	ldr	r2, [r3, #20]
 8009d00:	0612      	lsls	r2, r2, #24
 8009d02:	d4c1      	bmi.n	8009c88 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d04:	695a      	ldr	r2, [r3, #20]
 8009d06:	0551      	lsls	r1, r2, #21
 8009d08:	d4a5      	bmi.n	8009c56 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d0a:	f7ff fa39 	bl	8009180 <HAL_GetTick>
 8009d0e:	1b40      	subs	r0, r0, r5
 8009d10:	4286      	cmp	r6, r0
 8009d12:	d301      	bcc.n	8009d18 <HAL_I2C_Mem_Write+0x174>
 8009d14:	2e00      	cmp	r6, #0
 8009d16:	d195      	bne.n	8009c44 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d18:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d1a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d1c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d1e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009d22:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d26:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009d28:	4313      	orrs	r3, r2
 8009d2a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009d2c:	e7a1      	b.n	8009c72 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d2e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009d30:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009d34:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009d38:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d3c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009d3e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009d42:	f043 0320 	orr.w	r3, r3, #32
 8009d46:	6423      	str	r3, [r4, #64]	; 0x40
 8009d48:	e73c      	b.n	8009bc4 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d4a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d4c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d4e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009d52:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d54:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009d56:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009d5a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d5e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009d62:	e730      	b.n	8009bc6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009d64:	695a      	ldr	r2, [r3, #20]
 8009d66:	0752      	lsls	r2, r2, #29
 8009d68:	d4ef      	bmi.n	8009d4a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d6a:	695a      	ldr	r2, [r3, #20]
 8009d6c:	0551      	lsls	r1, r2, #21
 8009d6e:	f53f af72 	bmi.w	8009c56 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d72:	f7ff fa05 	bl	8009180 <HAL_GetTick>
 8009d76:	1b40      	subs	r0, r0, r5
 8009d78:	4286      	cmp	r6, r0
 8009d7a:	d3cd      	bcc.n	8009d18 <HAL_I2C_Mem_Write+0x174>
 8009d7c:	2e00      	cmp	r6, #0
 8009d7e:	d0cb      	beq.n	8009d18 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009d80:	6823      	ldr	r3, [r4, #0]
 8009d82:	e796      	b.n	8009cb2 <HAL_I2C_Mem_Write+0x10e>
 8009d84:	ffff0000 	.word	0xffff0000

08009d88 <HAL_I2C_Mem_Read>:
{
 8009d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d8c:	4604      	mov	r4, r0
 8009d8e:	b087      	sub	sp, #28
 8009d90:	4699      	mov	r9, r3
 8009d92:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009d96:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009d98:	460f      	mov	r7, r1
 8009d9a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009d9c:	f7ff f9f0 	bl	8009180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009da0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009da4:	2b20      	cmp	r3, #32
 8009da6:	d004      	beq.n	8009db2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009da8:	2702      	movs	r7, #2
}
 8009daa:	4638      	mov	r0, r7
 8009dac:	b007      	add	sp, #28
 8009dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009db2:	4606      	mov	r6, r0
 8009db4:	e005      	b.n	8009dc2 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009db6:	f7ff f9e3 	bl	8009180 <HAL_GetTick>
 8009dba:	1b80      	subs	r0, r0, r6
 8009dbc:	2819      	cmp	r0, #25
 8009dbe:	f200 80d2 	bhi.w	8009f66 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009dc2:	f8d4 c000 	ldr.w	ip, [r4]
 8009dc6:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009dca:	43c0      	mvns	r0, r0
 8009dcc:	f010 0b02 	ands.w	fp, r0, #2
 8009dd0:	d0f1      	beq.n	8009db6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009dd2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009dd6:	2b01      	cmp	r3, #1
 8009dd8:	d0e6      	beq.n	8009da8 <HAL_I2C_Mem_Read+0x20>
 8009dda:	2301      	movs	r3, #1
 8009ddc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009de0:	f8dc 3000 	ldr.w	r3, [ip]
 8009de4:	07d9      	lsls	r1, r3, #31
 8009de6:	d537      	bpl.n	8009e58 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009de8:	f8dc 0000 	ldr.w	r0, [ip]
 8009dec:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009df0:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009df4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009df6:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009df8:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009dfa:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009dfe:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009e02:	2040      	movs	r0, #64	; 0x40
 8009e04:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e08:	2000      	movs	r0, #0
 8009e0a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009e0c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009e10:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009e12:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009e14:	4893      	ldr	r0, [pc, #588]	; (800a064 <HAL_I2C_Mem_Read+0x2dc>)
 8009e16:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e18:	4639      	mov	r1, r7
 8009e1a:	464b      	mov	r3, r9
 8009e1c:	4642      	mov	r2, r8
 8009e1e:	4620      	mov	r0, r4
 8009e20:	f7ff fca2 	bl	8009768 <I2C_RequestMemoryRead>
 8009e24:	4607      	mov	r7, r0
 8009e26:	2800      	cmp	r0, #0
 8009e28:	f040 80ab 	bne.w	8009f82 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009e2c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009e2e:	b9d2      	cbnz	r2, 8009e66 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e30:	6823      	ldr	r3, [r4, #0]
 8009e32:	9002      	str	r0, [sp, #8]
 8009e34:	695a      	ldr	r2, [r3, #20]
 8009e36:	9202      	str	r2, [sp, #8]
 8009e38:	699a      	ldr	r2, [r3, #24]
 8009e3a:	9202      	str	r2, [sp, #8]
 8009e3c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e3e:	681a      	ldr	r2, [r3, #0]
 8009e40:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e44:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009e46:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009e48:	2220      	movs	r2, #32
 8009e4a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009e4e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009e52:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009e56:	e7a8      	b.n	8009daa <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009e58:	f8dc 3000 	ldr.w	r3, [ip]
 8009e5c:	f043 0301 	orr.w	r3, r3, #1
 8009e60:	f8cc 3000 	str.w	r3, [ip]
 8009e64:	e7c0      	b.n	8009de8 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009e66:	2a01      	cmp	r2, #1
 8009e68:	f000 812c 	beq.w	800a0c4 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009e6c:	2a02      	cmp	r2, #2
 8009e6e:	f000 80bd 	beq.w	8009fec <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e72:	6823      	ldr	r3, [r4, #0]
 8009e74:	9005      	str	r0, [sp, #20]
 8009e76:	6959      	ldr	r1, [r3, #20]
 8009e78:	9105      	str	r1, [sp, #20]
 8009e7a:	6999      	ldr	r1, [r3, #24]
 8009e7c:	9105      	str	r1, [sp, #20]
 8009e7e:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009e80:	2a03      	cmp	r2, #3
 8009e82:	d849      	bhi.n	8009f18 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009e84:	2a01      	cmp	r2, #1
 8009e86:	f000 80eb 	beq.w	800a060 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009e8a:	2a02      	cmp	r2, #2
 8009e8c:	f000 8089 	beq.w	8009fa2 <HAL_I2C_Mem_Read+0x21a>
 8009e90:	1c69      	adds	r1, r5, #1
 8009e92:	f040 80bb 	bne.w	800a00c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e96:	695a      	ldr	r2, [r3, #20]
 8009e98:	0752      	lsls	r2, r2, #29
 8009e9a:	d5fc      	bpl.n	8009e96 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e9c:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e9e:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ea0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009ea4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ea6:	691b      	ldr	r3, [r3, #16]
 8009ea8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009eaa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009eac:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009eae:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009eb0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009eb2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009eb4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009eb6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009eb8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009eba:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009ebc:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009ebe:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ec0:	6822      	ldr	r2, [r4, #0]
 8009ec2:	f040 80af 	bne.w	800a024 <HAL_I2C_Mem_Read+0x29c>
 8009ec6:	6953      	ldr	r3, [r2, #20]
 8009ec8:	075b      	lsls	r3, r3, #29
 8009eca:	d5fc      	bpl.n	8009ec6 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ecc:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ece:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ed0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009ed4:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ed6:	6913      	ldr	r3, [r2, #16]
 8009ed8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009eda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009edc:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ede:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ee0:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009ee2:	3b01      	subs	r3, #1
 8009ee4:	b29b      	uxth	r3, r3
 8009ee6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ee8:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009eea:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009eec:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009ef0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ef2:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ef6:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009ef8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009efa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009efc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009efe:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009f00:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009f02:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009f04:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009f06:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009f08:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009f0a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009f0c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009f0e:	2a00      	cmp	r2, #0
 8009f10:	d099      	beq.n	8009e46 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009f12:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f14:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009f16:	d9b5      	bls.n	8009e84 <HAL_I2C_Mem_Read+0xfc>
 8009f18:	b95d      	cbnz	r5, 8009f32 <HAL_I2C_Mem_Read+0x1aa>
 8009f1a:	e0c5      	b.n	800a0a8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f1c:	695a      	ldr	r2, [r3, #20]
 8009f1e:	06d0      	lsls	r0, r2, #27
 8009f20:	f100 80b2 	bmi.w	800a088 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f24:	f7ff f92c 	bl	8009180 <HAL_GetTick>
 8009f28:	1b80      	subs	r0, r0, r6
 8009f2a:	4285      	cmp	r5, r0
 8009f2c:	f0c0 8086 	bcc.w	800a03c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f30:	6823      	ldr	r3, [r4, #0]
 8009f32:	695a      	ldr	r2, [r3, #20]
 8009f34:	0652      	lsls	r2, r2, #25
 8009f36:	d5f1      	bpl.n	8009f1c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f38:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009f3a:	691b      	ldr	r3, [r3, #16]
 8009f3c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009f3e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f40:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009f42:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009f44:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009f46:	3b01      	subs	r3, #1
 8009f48:	b29b      	uxth	r3, r3
 8009f4a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f4c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009f4e:	3a01      	subs	r2, #1
 8009f50:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009f52:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f56:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009f58:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009f5a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009f5e:	d5d6      	bpl.n	8009f0e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f60:	6903      	ldr	r3, [r0, #16]
 8009f62:	704b      	strb	r3, [r1, #1]
 8009f64:	e036      	b.n	8009fd4 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f66:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f68:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f6c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f70:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f74:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f76:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f7a:	f043 0320 	orr.w	r3, r3, #32
 8009f7e:	6423      	str	r3, [r4, #64]	; 0x40
 8009f80:	e712      	b.n	8009da8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009f82:	2701      	movs	r7, #1
}
 8009f84:	4638      	mov	r0, r7
 8009f86:	b007      	add	sp, #28
 8009f88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f8c:	695a      	ldr	r2, [r3, #20]
 8009f8e:	0750      	lsls	r0, r2, #29
 8009f90:	d40c      	bmi.n	8009fac <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f92:	f7ff f8f5 	bl	8009180 <HAL_GetTick>
 8009f96:	1b80      	subs	r0, r0, r6
 8009f98:	4285      	cmp	r5, r0
 8009f9a:	d34f      	bcc.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
 8009f9c:	2d00      	cmp	r5, #0
 8009f9e:	d04d      	beq.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009fa0:	6823      	ldr	r3, [r4, #0]
 8009fa2:	1c69      	adds	r1, r5, #1
 8009fa4:	d1f2      	bne.n	8009f8c <HAL_I2C_Mem_Read+0x204>
 8009fa6:	695a      	ldr	r2, [r3, #20]
 8009fa8:	0752      	lsls	r2, r2, #29
 8009faa:	d5fc      	bpl.n	8009fa6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fac:	681a      	ldr	r2, [r3, #0]
 8009fae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009fb2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fb4:	691a      	ldr	r2, [r3, #16]
 8009fb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009fb8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009fba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009fbc:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009fbe:	3b01      	subs	r3, #1
 8009fc0:	b29b      	uxth	r3, r3
 8009fc2:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009fc4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009fc6:	3b01      	subs	r3, #1
 8009fc8:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fca:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009fcc:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fce:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009fd0:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fd2:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009fd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009fd6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009fd8:	3301      	adds	r3, #1
 8009fda:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009fdc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009fde:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009fe0:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009fe2:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009fe4:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009fe6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009fe8:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009fea:	e790      	b.n	8009f0e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fec:	6823      	ldr	r3, [r4, #0]
 8009fee:	6819      	ldr	r1, [r3, #0]
 8009ff0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009ff4:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009ff6:	6819      	ldr	r1, [r3, #0]
 8009ff8:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009ffc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009ffe:	9004      	str	r0, [sp, #16]
 800a000:	6959      	ldr	r1, [r3, #20]
 800a002:	9104      	str	r1, [sp, #16]
 800a004:	6999      	ldr	r1, [r3, #24]
 800a006:	9104      	str	r1, [sp, #16]
 800a008:	9904      	ldr	r1, [sp, #16]
 800a00a:	e739      	b.n	8009e80 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a00c:	695a      	ldr	r2, [r3, #20]
 800a00e:	0750      	lsls	r0, r2, #29
 800a010:	f53f af44 	bmi.w	8009e9c <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a014:	f7ff f8b4 	bl	8009180 <HAL_GetTick>
 800a018:	1b80      	subs	r0, r0, r6
 800a01a:	4285      	cmp	r5, r0
 800a01c:	d30e      	bcc.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
 800a01e:	b16d      	cbz	r5, 800a03c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a020:	6823      	ldr	r3, [r4, #0]
 800a022:	e735      	b.n	8009e90 <HAL_I2C_Mem_Read+0x108>
 800a024:	6953      	ldr	r3, [r2, #20]
 800a026:	0758      	lsls	r0, r3, #29
 800a028:	f53f af50 	bmi.w	8009ecc <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a02c:	f7ff f8a8 	bl	8009180 <HAL_GetTick>
 800a030:	1b80      	subs	r0, r0, r6
 800a032:	4285      	cmp	r5, r0
 800a034:	d302      	bcc.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
 800a036:	2d00      	cmp	r5, #0
 800a038:	f47f af41 	bne.w	8009ebe <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a03c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a03e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a040:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a042:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a046:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a04a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a04c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a050:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a052:	f043 0320 	orr.w	r3, r3, #32
}
 800a056:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a058:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a05a:	b007      	add	sp, #28
 800a05c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a060:	b95d      	cbnz	r5, 800a07a <HAL_I2C_Mem_Read+0x2f2>
 800a062:	e02b      	b.n	800a0bc <HAL_I2C_Mem_Read+0x334>
 800a064:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a068:	695a      	ldr	r2, [r3, #20]
 800a06a:	06d2      	lsls	r2, r2, #27
 800a06c:	d40c      	bmi.n	800a088 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a06e:	f7ff f887 	bl	8009180 <HAL_GetTick>
 800a072:	1b80      	subs	r0, r0, r6
 800a074:	4285      	cmp	r5, r0
 800a076:	d3e1      	bcc.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a078:	6823      	ldr	r3, [r4, #0]
 800a07a:	695a      	ldr	r2, [r3, #20]
 800a07c:	0651      	lsls	r1, r2, #25
 800a07e:	d5f3      	bpl.n	800a068 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a080:	691a      	ldr	r2, [r3, #16]
 800a082:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a084:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a086:	e7a5      	b.n	8009fd4 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a088:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a08a:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a08e:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a090:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a092:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a094:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a098:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a09c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a09e:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a0a0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a0a4:	2701      	movs	r7, #1
 800a0a6:	e680      	b.n	8009daa <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a0a8:	695a      	ldr	r2, [r3, #20]
 800a0aa:	0652      	lsls	r2, r2, #25
 800a0ac:	f53f af44 	bmi.w	8009f38 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a0b0:	695a      	ldr	r2, [r3, #20]
 800a0b2:	06d1      	lsls	r1, r2, #27
 800a0b4:	d4e8      	bmi.n	800a088 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a0b6:	f7ff f863 	bl	8009180 <HAL_GetTick>
 800a0ba:	e7bf      	b.n	800a03c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a0bc:	695a      	ldr	r2, [r3, #20]
 800a0be:	0650      	lsls	r0, r2, #25
 800a0c0:	d5f6      	bpl.n	800a0b0 <HAL_I2C_Mem_Read+0x328>
 800a0c2:	e7dd      	b.n	800a080 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0c4:	6823      	ldr	r3, [r4, #0]
 800a0c6:	6819      	ldr	r1, [r3, #0]
 800a0c8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a0cc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0ce:	9003      	str	r0, [sp, #12]
 800a0d0:	6959      	ldr	r1, [r3, #20]
 800a0d2:	9103      	str	r1, [sp, #12]
 800a0d4:	6999      	ldr	r1, [r3, #24]
 800a0d6:	9103      	str	r1, [sp, #12]
 800a0d8:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a0da:	6819      	ldr	r1, [r3, #0]
 800a0dc:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a0e0:	6019      	str	r1, [r3, #0]
 800a0e2:	e6cd      	b.n	8009e80 <HAL_I2C_Mem_Read+0xf8>

0800a0e4 <HAL_I2C_MasterTxCpltCallback>:
 800a0e4:	4770      	bx	lr
 800a0e6:	bf00      	nop

0800a0e8 <HAL_I2C_MasterRxCpltCallback>:
 800a0e8:	4770      	bx	lr
 800a0ea:	bf00      	nop

0800a0ec <HAL_I2C_SlaveTxCpltCallback>:
 800a0ec:	4770      	bx	lr
 800a0ee:	bf00      	nop

0800a0f0 <HAL_I2C_SlaveRxCpltCallback>:
 800a0f0:	4770      	bx	lr
 800a0f2:	bf00      	nop

0800a0f4 <HAL_I2C_AddrCallback>:
}
 800a0f4:	4770      	bx	lr
 800a0f6:	bf00      	nop

0800a0f8 <HAL_I2C_ListenCpltCallback>:
 800a0f8:	4770      	bx	lr
 800a0fa:	bf00      	nop

0800a0fc <HAL_I2C_MemTxCpltCallback>:
 800a0fc:	4770      	bx	lr
 800a0fe:	bf00      	nop

0800a100 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a100:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a104:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a106:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a108:	b959      	cbnz	r1, 800a122 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a10a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a10c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a10e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a110:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a112:	d00d      	beq.n	800a130 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a114:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a118:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a11a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a11c:	3201      	adds	r2, #1
 800a11e:	6502      	str	r2, [r0, #80]	; 0x50
 800a120:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a122:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a124:	2901      	cmp	r1, #1
 800a126:	d009      	beq.n	800a13c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a128:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a12a:	2902      	cmp	r1, #2
 800a12c:	d00e      	beq.n	800a14c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a12e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a130:	b2d2      	uxtb	r2, r2
 800a132:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a134:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a136:	3202      	adds	r2, #2
 800a138:	6502      	str	r2, [r0, #80]	; 0x50
 800a13a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a13c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a13e:	6801      	ldr	r1, [r0, #0]
 800a140:	b2d2      	uxtb	r2, r2
 800a142:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a144:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a146:	3201      	adds	r2, #1
 800a148:	6502      	str	r2, [r0, #80]	; 0x50
 800a14a:	4770      	bx	lr
 800a14c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a14e:	2a22      	cmp	r2, #34	; 0x22
 800a150:	d01f      	beq.n	800a192 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a152:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a154:	b289      	uxth	r1, r1
 800a156:	b9c1      	cbnz	r1, 800a18a <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a158:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a15a:	b289      	uxth	r1, r1
 800a15c:	2900      	cmp	r1, #0
 800a15e:	d1e6      	bne.n	800a12e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a160:	2a21      	cmp	r2, #33	; 0x21
 800a162:	d1e4      	bne.n	800a12e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a164:	6802      	ldr	r2, [r0, #0]
{
 800a166:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a168:	6854      	ldr	r4, [r2, #4]
 800a16a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a16e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a170:	6814      	ldr	r4, [r2, #0]
 800a172:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a176:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a178:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a17a:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a17c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a180:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a184:	f7ff ffba 	bl	800a0fc <HAL_I2C_MemTxCpltCallback>
}
 800a188:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a18a:	2a21      	cmp	r2, #33	; 0x21
 800a18c:	d00a      	beq.n	800a1a4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a18e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a190:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a192:	6801      	ldr	r1, [r0, #0]
 800a194:	680a      	ldr	r2, [r1, #0]
 800a196:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a19a:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a19c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a19e:	3201      	adds	r2, #1
 800a1a0:	6502      	str	r2, [r0, #80]	; 0x50
 800a1a2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a1a4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a1a6:	6802      	ldr	r2, [r0, #0]
 800a1a8:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a1ac:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a1ae:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a1b0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a1b2:	3a01      	subs	r2, #1
 800a1b4:	b292      	uxth	r2, r2
 800a1b6:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a1b8:	4770      	bx	lr
 800a1ba:	bf00      	nop

0800a1bc <HAL_I2C_MemRxCpltCallback>:
 800a1bc:	4770      	bx	lr
 800a1be:	bf00      	nop

0800a1c0 <HAL_I2C_ErrorCallback>:
 800a1c0:	4770      	bx	lr
 800a1c2:	bf00      	nop

0800a1c4 <HAL_I2C_AbortCpltCallback>:
 800a1c4:	4770      	bx	lr
 800a1c6:	bf00      	nop

0800a1c8 <I2C_DMAAbort>:
{
 800a1c8:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1ca:	4b3a      	ldr	r3, [pc, #232]	; (800a2b4 <I2C_DMAAbort+0xec>)
 800a1cc:	4a3a      	ldr	r2, [pc, #232]	; (800a2b8 <I2C_DMAAbort+0xf0>)
 800a1ce:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a1d0:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a1d2:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1d4:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a1d6:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1d8:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a1dc:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1de:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1e0:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a1e4:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1e6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a1ea:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1ee:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a1f0:	9301      	str	r3, [sp, #4]
 800a1f2:	e005      	b.n	800a200 <I2C_DMAAbort+0x38>
    count--;
 800a1f4:	9b01      	ldr	r3, [sp, #4]
 800a1f6:	3b01      	subs	r3, #1
 800a1f8:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a1fa:	6813      	ldr	r3, [r2, #0]
 800a1fc:	059b      	lsls	r3, r3, #22
 800a1fe:	d506      	bpl.n	800a20e <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a200:	9b01      	ldr	r3, [sp, #4]
 800a202:	2b00      	cmp	r3, #0
 800a204:	d1f6      	bne.n	800a1f4 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a206:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a208:	f043 0320 	orr.w	r3, r3, #32
 800a20c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a20e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a210:	b34c      	cbz	r4, 800a266 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a212:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a214:	2500      	movs	r5, #0
 800a216:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a218:	b1f3      	cbz	r3, 800a258 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a21a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a21c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a21e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a222:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a224:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a226:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a228:	2400      	movs	r4, #0
 800a22a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a22c:	6813      	ldr	r3, [r2, #0]
 800a22e:	f023 0301 	bic.w	r3, r3, #1
 800a232:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a234:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a238:	2b60      	cmp	r3, #96	; 0x60
 800a23a:	d02a      	beq.n	800a292 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a23c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a240:	2928      	cmp	r1, #40	; 0x28
 800a242:	d019      	beq.n	800a278 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a244:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a246:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a248:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a24c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a250:	f7ff ffb6 	bl	800a1c0 <HAL_I2C_ErrorCallback>
}
 800a254:	b002      	add	sp, #8
 800a256:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a258:	6815      	ldr	r5, [r2, #0]
 800a25a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a25e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a260:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a262:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a264:	e7e2      	b.n	800a22c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a266:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a268:	b1f3      	cbz	r3, 800a2a8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a26a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a26c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a26e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a272:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a274:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a276:	e7d7      	b.n	800a228 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a278:	6813      	ldr	r3, [r2, #0]
 800a27a:	f043 0301 	orr.w	r3, r3, #1
 800a27e:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a280:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a282:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a284:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a288:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a28a:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a28c:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a290:	e7de      	b.n	800a250 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a292:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a294:	2220      	movs	r2, #32
 800a296:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a29a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a29e:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a2a0:	f7ff ff90 	bl	800a1c4 <HAL_I2C_AbortCpltCallback>
}
 800a2a4:	b002      	add	sp, #8
 800a2a6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2a8:	6814      	ldr	r4, [r2, #0]
 800a2aa:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a2ae:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a2b0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a2b2:	e7bb      	b.n	800a22c <I2C_DMAAbort+0x64>
 800a2b4:	20000078 	.word	0x20000078
 800a2b8:	14f8b589 	.word	0x14f8b589

0800a2bc <I2C_ITError>:
{
 800a2bc:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a2be:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a2c2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a2c6:	2b10      	cmp	r3, #16
{
 800a2c8:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a2ca:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a2cc:	d039      	beq.n	800a342 <I2C_ITError+0x86>
 800a2ce:	b2d9      	uxtb	r1, r3
 800a2d0:	2940      	cmp	r1, #64	; 0x40
 800a2d2:	d036      	beq.n	800a342 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a2d4:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a2d8:	2928      	cmp	r1, #40	; 0x28
 800a2da:	d03d      	beq.n	800a358 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a2dc:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a2de:	6859      	ldr	r1, [r3, #4]
 800a2e0:	0508      	lsls	r0, r1, #20
 800a2e2:	d407      	bmi.n	800a2f4 <I2C_ITError+0x38>
 800a2e4:	2a60      	cmp	r2, #96	; 0x60
 800a2e6:	d005      	beq.n	800a2f4 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a2e8:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2ea:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a2ec:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a2f0:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a2f4:	2200      	movs	r2, #0
 800a2f6:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a2f8:	685a      	ldr	r2, [r3, #4]
 800a2fa:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a2fe:	d134      	bne.n	800a36a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a300:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a304:	2960      	cmp	r1, #96	; 0x60
 800a306:	d075      	beq.n	800a3f4 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a308:	695a      	ldr	r2, [r3, #20]
 800a30a:	0650      	lsls	r0, r2, #25
 800a30c:	d505      	bpl.n	800a31a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a30e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a310:	691b      	ldr	r3, [r3, #16]
 800a312:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a314:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a316:	3301      	adds	r3, #1
 800a318:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a31a:	4620      	mov	r0, r4
 800a31c:	f7ff ff50 	bl	800a1c0 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a320:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a322:	0719      	lsls	r1, r3, #28
 800a324:	d004      	beq.n	800a330 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a326:	6822      	ldr	r2, [r4, #0]
 800a328:	6853      	ldr	r3, [r2, #4]
 800a32a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a32e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a330:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a334:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a336:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a338:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a33a:	d501      	bpl.n	800a340 <I2C_ITError+0x84>
 800a33c:	2b28      	cmp	r3, #40	; 0x28
 800a33e:	d02f      	beq.n	800a3a0 <I2C_ITError+0xe4>
}
 800a340:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a342:	2a22      	cmp	r2, #34	; 0x22
 800a344:	d1c6      	bne.n	800a2d4 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a346:	6823      	ldr	r3, [r4, #0]
 800a348:	681a      	ldr	r2, [r3, #0]
 800a34a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a34e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a350:	685a      	ldr	r2, [r3, #4]
 800a352:	0512      	lsls	r2, r2, #20
 800a354:	d5c8      	bpl.n	800a2e8 <I2C_ITError+0x2c>
 800a356:	e7cd      	b.n	800a2f4 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a358:	2300      	movs	r3, #0
 800a35a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a35c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a35e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a362:	685a      	ldr	r2, [r3, #4]
 800a364:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a368:	d0ca      	beq.n	800a300 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a36a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a36c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a36e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a372:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a374:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a378:	2b01      	cmp	r3, #1
 800a37a:	d01e      	beq.n	800a3ba <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a37c:	4b28      	ldr	r3, [pc, #160]	; (800a420 <I2C_ITError+0x164>)
 800a37e:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a380:	f7fe ff88 	bl	8009294 <HAL_DMA_Abort_IT>
 800a384:	2800      	cmp	r0, #0
 800a386:	d0cb      	beq.n	800a320 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a388:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a38a:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a38c:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a38e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a390:	f023 0301 	bic.w	r3, r3, #1
 800a394:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a396:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a39a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a39c:	4798      	blx	r3
 800a39e:	e7bf      	b.n	800a320 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a3a0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a3a2:	4920      	ldr	r1, [pc, #128]	; (800a424 <I2C_ITError+0x168>)
 800a3a4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a3a6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a3a8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a3aa:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a3ac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a3b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a3b4:	f7ff fea0 	bl	800a0f8 <HAL_I2C_ListenCpltCallback>
}
 800a3b8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a3ba:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3bc:	4b18      	ldr	r3, [pc, #96]	; (800a420 <I2C_ITError+0x164>)
 800a3be:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a3c0:	f7fe ff68 	bl	8009294 <HAL_DMA_Abort_IT>
 800a3c4:	2800      	cmp	r0, #0
 800a3c6:	d0ab      	beq.n	800a320 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a3c8:	6823      	ldr	r3, [r4, #0]
 800a3ca:	695a      	ldr	r2, [r3, #20]
 800a3cc:	0651      	lsls	r1, r2, #25
 800a3ce:	d506      	bpl.n	800a3de <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a3d2:	691b      	ldr	r3, [r3, #16]
 800a3d4:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a3d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a3d8:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a3da:	3201      	adds	r2, #1
 800a3dc:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a3de:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3e0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a3e2:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a3e6:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a3e8:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a3ea:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3ee:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a3f0:	4798      	blx	r3
 800a3f2:	e795      	b.n	800a320 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a3f4:	2120      	movs	r1, #32
 800a3f6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a3fa:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a3fc:	695a      	ldr	r2, [r3, #20]
 800a3fe:	0652      	lsls	r2, r2, #25
 800a400:	d506      	bpl.n	800a410 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a402:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a404:	691b      	ldr	r3, [r3, #16]
 800a406:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a408:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a40a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a40c:	3201      	adds	r2, #1
 800a40e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a410:	681a      	ldr	r2, [r3, #0]
 800a412:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a416:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a418:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a41a:	f7ff fed3 	bl	800a1c4 <HAL_I2C_AbortCpltCallback>
 800a41e:	e77f      	b.n	800a320 <I2C_ITError+0x64>
 800a420:	0800a1c9 	.word	0x0800a1c9
 800a424:	ffff0000 	.word	0xffff0000

0800a428 <HAL_I2C_EV_IRQHandler>:
{
 800a428:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a42a:	6803      	ldr	r3, [r0, #0]
{
 800a42c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a42e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a430:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a432:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a436:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a43a:	2910      	cmp	r1, #16
{
 800a43c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a43e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a440:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a444:	d022      	beq.n	800a48c <HAL_I2C_EV_IRQHandler+0x64>
 800a446:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a44a:	d01f      	beq.n	800a48c <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a44c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a44e:	2900      	cmp	r1, #0
 800a450:	f000 8094 	beq.w	800a57c <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a454:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a456:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a458:	f011 0602 	ands.w	r6, r1, #2
 800a45c:	d059      	beq.n	800a512 <HAL_I2C_EV_IRQHandler+0xea>
 800a45e:	0586      	lsls	r6, r0, #22
 800a460:	d559      	bpl.n	800a516 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a462:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a464:	b102      	cbz	r2, 800a468 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a466:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a468:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a46c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a470:	2a28      	cmp	r2, #40	; 0x28
 800a472:	f000 821e 	beq.w	800a8b2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a476:	2200      	movs	r2, #0
 800a478:	920c      	str	r2, [sp, #48]	; 0x30
 800a47a:	6959      	ldr	r1, [r3, #20]
 800a47c:	910c      	str	r1, [sp, #48]	; 0x30
 800a47e:	699b      	ldr	r3, [r3, #24]
 800a480:	930c      	str	r3, [sp, #48]	; 0x30
 800a482:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a484:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a488:	b00e      	add	sp, #56	; 0x38
 800a48a:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a48c:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a48e:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a490:	f011 0f01 	tst.w	r1, #1
 800a494:	d11a      	bne.n	800a4cc <HAL_I2C_EV_IRQHandler+0xa4>
 800a496:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a49a:	d0f5      	beq.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a49c:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a4a0:	d0f2      	beq.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4a2:	070d      	lsls	r5, r1, #28
 800a4a4:	d56d      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0x15a>
 800a4a6:	0585      	lsls	r5, r0, #22
 800a4a8:	f140 8083 	bpl.w	800a5b2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a4ac:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a4ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a4b0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a4b2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a4b4:	2900      	cmp	r1, #0
 800a4b6:	f000 81e3 	beq.w	800a880 <HAL_I2C_EV_IRQHandler+0x458>
 800a4ba:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a4bc:	2a00      	cmp	r2, #0
 800a4be:	f000 81df 	beq.w	800a880 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a4c2:	685a      	ldr	r2, [r3, #4]
 800a4c4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a4c8:	605a      	str	r2, [r3, #4]
 800a4ca:	e7dd      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4cc:	0585      	lsls	r5, r0, #22
 800a4ce:	d56e      	bpl.n	800a5ae <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a4d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a4d2:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a4d6:	f000 81e9 	beq.w	800a8ac <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a4da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a4dc:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a4e0:	bf04      	itt	eq
 800a4e2:	2208      	moveq	r2, #8
 800a4e4:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a4e6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a4ea:	2a40      	cmp	r2, #64	; 0x40
 800a4ec:	f000 81d7 	beq.w	800a89e <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a4f0:	6922      	ldr	r2, [r4, #16]
 800a4f2:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a4f6:	f000 81b2 	beq.w	800a85e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a4fa:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a4fc:	2a00      	cmp	r2, #0
 800a4fe:	f040 81ef 	bne.w	800a8e0 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a502:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a504:	11d2      	asrs	r2, r2, #7
 800a506:	f002 0206 	and.w	r2, r2, #6
 800a50a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a50e:	611a      	str	r2, [r3, #16]
 800a510:	e7ba      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a512:	06cd      	lsls	r5, r1, #27
 800a514:	d47c      	bmi.n	800a610 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a516:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a51a:	2a21      	cmp	r2, #33	; 0x21
 800a51c:	f000 80f5 	beq.w	800a70a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a520:	064e      	lsls	r6, r1, #25
 800a522:	f140 8132 	bpl.w	800a78a <HAL_I2C_EV_IRQHandler+0x362>
 800a526:	0545      	lsls	r5, r0, #21
 800a528:	f140 812f 	bpl.w	800a78a <HAL_I2C_EV_IRQHandler+0x362>
 800a52c:	0749      	lsls	r1, r1, #29
 800a52e:	f100 812f 	bmi.w	800a790 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a532:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a536:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a538:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a53a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a53c:	2a00      	cmp	r2, #0
 800a53e:	d0a3      	beq.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a540:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a542:	691b      	ldr	r3, [r3, #16]
 800a544:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a546:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a548:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a54a:	3b01      	subs	r3, #1
 800a54c:	b29b      	uxth	r3, r3
 800a54e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a550:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a552:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a554:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a556:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a558:	2b00      	cmp	r3, #0
 800a55a:	d195      	bne.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a55c:	292a      	cmp	r1, #42	; 0x2a
 800a55e:	d193      	bne.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a560:	6822      	ldr	r2, [r4, #0]
 800a562:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a564:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a566:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a568:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a56c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a56e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a570:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a572:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a576:	f7ff fdbb 	bl	800a0f0 <HAL_I2C_SlaveRxCpltCallback>
 800a57a:	e785      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a57c:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a57e:	6959      	ldr	r1, [r3, #20]
 800a580:	e76a      	b.n	800a458 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a582:	078d      	lsls	r5, r1, #30
 800a584:	d515      	bpl.n	800a5b2 <HAL_I2C_EV_IRQHandler+0x18a>
 800a586:	0585      	lsls	r5, r0, #22
 800a588:	d513      	bpl.n	800a5b2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a58a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a58e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a590:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a592:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a596:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a598:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a59a:	f000 81b3 	beq.w	800a904 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a59e:	2200      	movs	r2, #0
 800a5a0:	920a      	str	r2, [sp, #40]	; 0x28
 800a5a2:	695a      	ldr	r2, [r3, #20]
 800a5a4:	920a      	str	r2, [sp, #40]	; 0x28
 800a5a6:	699b      	ldr	r3, [r3, #24]
 800a5a8:	930a      	str	r3, [sp, #40]	; 0x28
 800a5aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a5ac:	e76c      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5ae:	070d      	lsls	r5, r1, #28
 800a5b0:	d5e7      	bpl.n	800a582 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a5b2:	0776      	lsls	r6, r6, #29
 800a5b4:	f140 80f5 	bpl.w	800a7a2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a5b8:	685d      	ldr	r5, [r3, #4]
 800a5ba:	052d      	lsls	r5, r5, #20
 800a5bc:	f53f af64 	bmi.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a5c0:	060e      	lsls	r6, r1, #24
 800a5c2:	f140 8115 	bpl.w	800a7f0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a5c6:	0545      	lsls	r5, r0, #21
 800a5c8:	f140 8112 	bpl.w	800a7f0 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a5cc:	074e      	lsls	r6, r1, #29
 800a5ce:	f100 8112 	bmi.w	800a7f6 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5d2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5d6:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a5d8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a5dc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a5de:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a5e0:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5e2:	2800      	cmp	r0, #0
 800a5e4:	f040 8235 	bne.w	800aa52 <HAL_I2C_EV_IRQHandler+0x62a>
 800a5e8:	2a21      	cmp	r2, #33	; 0x21
 800a5ea:	f000 8347 	beq.w	800ac7c <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a5ee:	2940      	cmp	r1, #64	; 0x40
 800a5f0:	f47f af4a 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a5f4:	2a22      	cmp	r2, #34	; 0x22
 800a5f6:	f47f af47 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a5fa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5fc:	b292      	uxth	r2, r2
 800a5fe:	2a00      	cmp	r2, #0
 800a600:	f000 8268 	beq.w	800aad4 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a604:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a608:	2a40      	cmp	r2, #64	; 0x40
 800a60a:	f040 80b4 	bne.w	800a776 <HAL_I2C_EV_IRQHandler+0x34e>
 800a60e:	e0fc      	b.n	800a80a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a610:	0585      	lsls	r5, r0, #22
 800a612:	d580      	bpl.n	800a516 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a614:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a618:	685a      	ldr	r2, [r3, #4]
 800a61a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a61e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a620:	960d      	str	r6, [sp, #52]	; 0x34
 800a622:	695a      	ldr	r2, [r3, #20]
 800a624:	920d      	str	r2, [sp, #52]	; 0x34
 800a626:	681a      	ldr	r2, [r3, #0]
 800a628:	f042 0201 	orr.w	r2, r2, #1
 800a62c:	601a      	str	r2, [r3, #0]
 800a62e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a630:	681a      	ldr	r2, [r3, #0]
 800a632:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a636:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a638:	685a      	ldr	r2, [r3, #4]
 800a63a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a63c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a63e:	d521      	bpl.n	800a684 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a640:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a644:	2a22      	cmp	r2, #34	; 0x22
 800a646:	f000 817a 	beq.w	800a93e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a64a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a64c:	6802      	ldr	r2, [r0, #0]
 800a64e:	6852      	ldr	r2, [r2, #4]
 800a650:	b292      	uxth	r2, r2
 800a652:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a654:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a656:	b292      	uxth	r2, r2
 800a658:	b11a      	cbz	r2, 800a662 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a65a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a65c:	f042 0204 	orr.w	r2, r2, #4
 800a660:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a662:	685a      	ldr	r2, [r3, #4]
 800a664:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a668:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a66a:	f7fe fe25 	bl	80092b8 <HAL_DMA_GetState>
 800a66e:	2801      	cmp	r0, #1
 800a670:	d008      	beq.n	800a684 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a672:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a674:	4b99      	ldr	r3, [pc, #612]	; (800a8dc <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a676:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a678:	f7fe fe0c 	bl	8009294 <HAL_DMA_Abort_IT>
 800a67c:	b110      	cbz	r0, 800a684 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a67e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a680:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a682:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a684:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a686:	b29b      	uxth	r3, r3
 800a688:	b313      	cbz	r3, 800a6d0 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a68a:	6823      	ldr	r3, [r4, #0]
 800a68c:	695a      	ldr	r2, [r3, #20]
 800a68e:	0752      	lsls	r2, r2, #29
 800a690:	d50a      	bpl.n	800a6a8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a692:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a694:	691b      	ldr	r3, [r3, #16]
 800a696:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a698:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a69a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a69c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a69e:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a6a0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a6a2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a6a4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a6a6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a6a8:	695a      	ldr	r2, [r3, #20]
 800a6aa:	0656      	lsls	r6, r2, #25
 800a6ac:	d509      	bpl.n	800a6c2 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6b0:	691b      	ldr	r3, [r3, #16]
 800a6b2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a6b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a6b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a6b8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a6ba:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a6bc:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a6be:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a6c0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a6c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a6c4:	b29b      	uxth	r3, r3
 800a6c6:	b11b      	cbz	r3, 800a6d0 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a6c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a6ca:	f043 0304 	orr.w	r3, r3, #4
 800a6ce:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a6d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a6d2:	2b00      	cmp	r3, #0
 800a6d4:	f040 80dd 	bne.w	800a892 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a6d8:	2d2a      	cmp	r5, #42	; 0x2a
 800a6da:	f000 8151 	beq.w	800a980 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a6de:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a6e2:	2b28      	cmp	r3, #40	; 0x28
 800a6e4:	f000 8154 	beq.w	800a990 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a6e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a6ea:	2b22      	cmp	r3, #34	; 0x22
 800a6ec:	d002      	beq.n	800a6f4 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a6ee:	2d22      	cmp	r5, #34	; 0x22
 800a6f0:	f47f aeca 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a6f4:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a6f6:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a6f8:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a6fa:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a6fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a700:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a704:	f7ff fcf4 	bl	800a0f0 <HAL_I2C_SlaveRxCpltCallback>
 800a708:	e6be      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a70a:	060d      	lsls	r5, r1, #24
 800a70c:	d528      	bpl.n	800a760 <HAL_I2C_EV_IRQHandler+0x338>
 800a70e:	0546      	lsls	r6, r0, #21
 800a710:	d526      	bpl.n	800a760 <HAL_I2C_EV_IRQHandler+0x338>
 800a712:	074d      	lsls	r5, r1, #29
 800a714:	d427      	bmi.n	800a766 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a716:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a71a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a71c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a71e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a720:	2900      	cmp	r1, #0
 800a722:	f43f aeb1 	beq.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a726:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a728:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a72c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a72e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a730:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a732:	3901      	subs	r1, #1
 800a734:	b289      	uxth	r1, r1
 800a736:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a738:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a73a:	b289      	uxth	r1, r1
 800a73c:	2900      	cmp	r1, #0
 800a73e:	f47f aea3 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a742:	2829      	cmp	r0, #41	; 0x29
 800a744:	f47f aea0 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a748:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a74a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a74c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a750:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a752:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a754:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a756:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a75a:	f7ff fcc7 	bl	800a0ec <HAL_I2C_SlaveTxCpltCallback>
 800a75e:	e693      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a760:	0749      	lsls	r1, r1, #29
 800a762:	f57f ae91 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a766:	0582      	lsls	r2, r0, #22
 800a768:	f57f ae8e 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a76c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a76e:	b292      	uxth	r2, r2
 800a770:	2a00      	cmp	r2, #0
 800a772:	f43f ae89 	beq.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a776:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a778:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a77c:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a77e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a780:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a782:	3b01      	subs	r3, #1
 800a784:	b29b      	uxth	r3, r3
 800a786:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a788:	e67e      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a78a:	074a      	lsls	r2, r1, #29
 800a78c:	f57f ae7c 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a790:	0586      	lsls	r6, r0, #22
 800a792:	f57f ae79 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a796:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a798:	b292      	uxth	r2, r2
 800a79a:	2a00      	cmp	r2, #0
 800a79c:	f43f ae74 	beq.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a7a0:	e01b      	b.n	800a7da <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a7a2:	685a      	ldr	r2, [r3, #4]
 800a7a4:	0512      	lsls	r2, r2, #20
 800a7a6:	f53f ae6f 	bmi.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a7aa:	064e      	lsls	r6, r1, #25
 800a7ac:	d433      	bmi.n	800a816 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7ae:	0749      	lsls	r1, r1, #29
 800a7b0:	f57f ae6a 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a7b4:	0582      	lsls	r2, r0, #22
 800a7b6:	f57f ae67 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a7ba:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a7bc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7be:	b292      	uxth	r2, r2
 800a7c0:	2a04      	cmp	r2, #4
 800a7c2:	f000 8113 	beq.w	800a9ec <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a7c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7c8:	b292      	uxth	r2, r2
 800a7ca:	2a03      	cmp	r2, #3
 800a7cc:	f000 8153 	beq.w	800aa76 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a7d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a7d2:	b292      	uxth	r2, r2
 800a7d4:	2a02      	cmp	r2, #2
 800a7d6:	f000 8182 	beq.w	800aade <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7da:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a7dc:	691b      	ldr	r3, [r3, #16]
 800a7de:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a7e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a7e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a7e4:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a7e6:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a7e8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a7ea:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a7ec:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a7ee:	e64b      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7f0:	074d      	lsls	r5, r1, #29
 800a7f2:	f57f ae49 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a7f6:	0581      	lsls	r1, r0, #22
 800a7f8:	f57f ae46 	bpl.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a7fc:	2a21      	cmp	r2, #33	; 0x21
 800a7fe:	f000 80fd 	beq.w	800a9fc <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a802:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a806:	f47f ae3f 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a80a:	4620      	mov	r0, r4
}
 800a80c:	b00e      	add	sp, #56	; 0x38
 800a80e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a812:	f7ff bc75 	b.w	800a100 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a816:	0545      	lsls	r5, r0, #21
 800a818:	d5c9      	bpl.n	800a7ae <HAL_I2C_EV_IRQHandler+0x386>
 800a81a:	f011 0104 	ands.w	r1, r1, #4
 800a81e:	d1c9      	bne.n	800a7b4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a820:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a824:	2a22      	cmp	r2, #34	; 0x22
 800a826:	f47f ae2f 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a82a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a82c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a82e:	2a03      	cmp	r2, #3
 800a830:	f240 81ec 	bls.w	800ac0c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a834:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a836:	691b      	ldr	r3, [r3, #16]
 800a838:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a83a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a83c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a83e:	3b01      	subs	r3, #1
 800a840:	b29b      	uxth	r3, r3
 800a842:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a844:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a846:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a848:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a84a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a84c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a84e:	f47f ae1b 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a852:	6822      	ldr	r2, [r4, #0]
 800a854:	6853      	ldr	r3, [r2, #4]
 800a856:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a85a:	6053      	str	r3, [r2, #4]
 800a85c:	e614      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a85e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a862:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a864:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a866:	bf16      	itet	ne
 800a868:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a86c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a870:	b2d2      	uxtbne	r2, r2
 800a872:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a874:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a876:	b11a      	cbz	r2, 800a880 <HAL_I2C_EV_IRQHandler+0x458>
 800a878:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a87a:	2a00      	cmp	r2, #0
 800a87c:	f47f ae21 	bne.w	800a4c2 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a880:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a882:	2a00      	cmp	r2, #0
 800a884:	f43f ae00 	beq.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a888:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a88a:	2a00      	cmp	r2, #0
 800a88c:	f47f ae19 	bne.w	800a4c2 <HAL_I2C_EV_IRQHandler+0x9a>
 800a890:	e5fa      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a892:	4620      	mov	r0, r4
}
 800a894:	b00e      	add	sp, #56	; 0x38
 800a896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a89a:	f7ff bd0f 	b.w	800a2bc <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a89e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a8a0:	bb52      	cbnz	r2, 800a8f8 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a8a2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a8a4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a8a8:	611a      	str	r2, [r3, #16]
 800a8aa:	e5ed      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a8ac:	2201      	movs	r2, #1
 800a8ae:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a8b0:	e619      	b.n	800a4e6 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a8b2:	685a      	ldr	r2, [r3, #4]
 800a8b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8b8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a8ba:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a8bc:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a8c0:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a8c4:	bf54      	ite	pl
 800a8c6:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a8c8:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a8ca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a8ce:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a8d2:	4620      	mov	r0, r4
 800a8d4:	f7ff fc0e 	bl	800a0f4 <HAL_I2C_AddrCallback>
 800a8d8:	e5d6      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800a8da:	bf00      	nop
 800a8dc:	0800a1c9 	.word	0x0800a1c9
      else if (hi2c->EventCount == 1U)
 800a8e0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a8e2:	2a01      	cmp	r2, #1
 800a8e4:	f47f add0 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a8e8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a8ea:	11d2      	asrs	r2, r2, #7
 800a8ec:	f002 0206 	and.w	r2, r2, #6
 800a8f0:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a8f4:	611a      	str	r2, [r3, #16]
 800a8f6:	e5c7      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a8f8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a8fa:	f042 0201 	orr.w	r2, r2, #1
 800a8fe:	b2d2      	uxtb	r2, r2
 800a900:	611a      	str	r2, [r3, #16]
 800a902:	e5c1      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a904:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a906:	b911      	cbnz	r1, 800a90e <HAL_I2C_EV_IRQHandler+0x4e6>
 800a908:	2a40      	cmp	r2, #64	; 0x40
 800a90a:	f000 809b 	beq.w	800aa44 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a90e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a910:	b922      	cbnz	r2, 800a91c <HAL_I2C_EV_IRQHandler+0x4f4>
 800a912:	6921      	ldr	r1, [r4, #16]
 800a914:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a918:	f000 809f 	beq.w	800aa5a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a91c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a91e:	b292      	uxth	r2, r2
 800a920:	2a00      	cmp	r2, #0
 800a922:	d142      	bne.n	800a9aa <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a924:	9203      	str	r2, [sp, #12]
 800a926:	695a      	ldr	r2, [r3, #20]
 800a928:	9203      	str	r2, [sp, #12]
 800a92a:	699a      	ldr	r2, [r3, #24]
 800a92c:	9203      	str	r2, [sp, #12]
 800a92e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a930:	681a      	ldr	r2, [r3, #0]
 800a932:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a936:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a938:	2300      	movs	r3, #0
 800a93a:	6523      	str	r3, [r4, #80]	; 0x50
 800a93c:	e5a4      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a93e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a940:	6802      	ldr	r2, [r0, #0]
 800a942:	6852      	ldr	r2, [r2, #4]
 800a944:	b292      	uxth	r2, r2
 800a946:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a948:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a94a:	b292      	uxth	r2, r2
 800a94c:	b11a      	cbz	r2, 800a956 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a94e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a950:	f042 0204 	orr.w	r2, r2, #4
 800a954:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a956:	685a      	ldr	r2, [r3, #4]
 800a958:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a95c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a95e:	f7fe fcab 	bl	80092b8 <HAL_DMA_GetState>
 800a962:	2801      	cmp	r0, #1
 800a964:	f43f ae8e 	beq.w	800a684 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a968:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a96a:	4b98      	ldr	r3, [pc, #608]	; (800abcc <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a96c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a96e:	f7fe fc91 	bl	8009294 <HAL_DMA_Abort_IT>
 800a972:	2800      	cmp	r0, #0
 800a974:	f43f ae86 	beq.w	800a684 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a978:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a97a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a97c:	4798      	blx	r3
 800a97e:	e681      	b.n	800a684 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a980:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a982:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a984:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a986:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a98a:	f7ff fbb1 	bl	800a0f0 <HAL_I2C_SlaveRxCpltCallback>
 800a98e:	e6a6      	b.n	800a6de <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a990:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a992:	498f      	ldr	r1, [pc, #572]	; (800abd0 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a994:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a996:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a998:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a99a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a99c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a9a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a9a4:	f7ff fba8 	bl	800a0f8 <HAL_I2C_ListenCpltCallback>
 800a9a8:	e56e      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a9aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9ac:	b292      	uxth	r2, r2
 800a9ae:	2a01      	cmp	r2, #1
 800a9b0:	d070      	beq.n	800aa94 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a9b2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9b4:	b292      	uxth	r2, r2
 800a9b6:	2a02      	cmp	r2, #2
 800a9b8:	f000 80d6 	beq.w	800ab68 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9bc:	681a      	ldr	r2, [r3, #0]
 800a9be:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a9c2:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a9c4:	685a      	ldr	r2, [r3, #4]
 800a9c6:	0511      	lsls	r1, r2, #20
 800a9c8:	d508      	bpl.n	800a9dc <HAL_I2C_EV_IRQHandler+0x5b4>
 800a9ca:	2820      	cmp	r0, #32
 800a9cc:	f200 80f8 	bhi.w	800abc0 <HAL_I2C_EV_IRQHandler+0x798>
 800a9d0:	2807      	cmp	r0, #7
 800a9d2:	f200 80ea 	bhi.w	800abaa <HAL_I2C_EV_IRQHandler+0x782>
 800a9d6:	2801      	cmp	r0, #1
 800a9d8:	f000 80ed 	beq.w	800abb6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9dc:	2200      	movs	r2, #0
 800a9de:	9209      	str	r2, [sp, #36]	; 0x24
 800a9e0:	695a      	ldr	r2, [r3, #20]
 800a9e2:	9209      	str	r2, [sp, #36]	; 0x24
 800a9e4:	699b      	ldr	r3, [r3, #24]
 800a9e6:	9309      	str	r3, [sp, #36]	; 0x24
 800a9e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9ea:	e7a5      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9ec:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9ee:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9f4:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9f6:	691b      	ldr	r3, [r3, #16]
 800a9f8:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a9fa:	e6f1      	b.n	800a7e0 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a9fc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a9fe:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aa02:	2a21      	cmp	r2, #33	; 0x21
 800aa04:	f47f ad40 	bne.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800aa08:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa0a:	b292      	uxth	r2, r2
 800aa0c:	2a00      	cmp	r2, #0
 800aa0e:	f47f aeb2 	bne.w	800a776 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aa12:	2908      	cmp	r1, #8
 800aa14:	f000 80e2 	beq.w	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
 800aa18:	2920      	cmp	r1, #32
 800aa1a:	f000 80df 	beq.w	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
 800aa1e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800aa22:	f000 80db 	beq.w	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa26:	6859      	ldr	r1, [r3, #4]
 800aa28:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aa2c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aa2e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800aa30:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aa32:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa34:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aa38:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800aa3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800aa3e:	f7ff fb51 	bl	800a0e4 <HAL_I2C_MasterTxCpltCallback>
 800aa42:	e521      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa44:	9101      	str	r1, [sp, #4]
 800aa46:	695a      	ldr	r2, [r3, #20]
 800aa48:	9201      	str	r2, [sp, #4]
 800aa4a:	699b      	ldr	r3, [r3, #24]
 800aa4c:	9301      	str	r3, [sp, #4]
 800aa4e:	9b01      	ldr	r3, [sp, #4]
 800aa50:	e51a      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aa52:	2a21      	cmp	r2, #33	; 0x21
 800aa54:	f43f add1 	beq.w	800a5fa <HAL_I2C_EV_IRQHandler+0x1d2>
 800aa58:	e5c9      	b.n	800a5ee <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa5a:	9202      	str	r2, [sp, #8]
 800aa5c:	695a      	ldr	r2, [r3, #20]
 800aa5e:	9202      	str	r2, [sp, #8]
 800aa60:	699a      	ldr	r2, [r3, #24]
 800aa62:	9202      	str	r2, [sp, #8]
 800aa64:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aa66:	681a      	ldr	r2, [r3, #0]
 800aa68:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aa6c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800aa6e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aa70:	3301      	adds	r3, #1
 800aa72:	6523      	str	r3, [r4, #80]	; 0x50
 800aa74:	e508      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa76:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aa78:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa7a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa7e:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aa80:	f43f aeab 	beq.w	800a7da <HAL_I2C_EV_IRQHandler+0x3b2>
 800aa84:	2902      	cmp	r1, #2
 800aa86:	f43f aea8 	beq.w	800a7da <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa8a:	681a      	ldr	r2, [r3, #0]
 800aa8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa90:	601a      	str	r2, [r3, #0]
 800aa92:	e6a2      	b.n	800a7da <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800aa94:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa98:	f000 811b 	beq.w	800acd2 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800aa9c:	2808      	cmp	r0, #8
 800aa9e:	f000 8108 	beq.w	800acb2 <HAL_I2C_EV_IRQHandler+0x88a>
 800aaa2:	2820      	cmp	r0, #32
 800aaa4:	f000 8105 	beq.w	800acb2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aaa8:	2d12      	cmp	r5, #18
 800aaaa:	f000 80ff 	beq.w	800acac <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aaae:	2810      	cmp	r0, #16
 800aab0:	d804      	bhi.n	800aabc <HAL_I2C_EV_IRQHandler+0x694>
 800aab2:	4a48      	ldr	r2, [pc, #288]	; (800abd4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aab4:	40c2      	lsrs	r2, r0
 800aab6:	07d1      	lsls	r1, r2, #31
 800aab8:	f100 814c 	bmi.w	800ad54 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aabc:	681a      	ldr	r2, [r3, #0]
 800aabe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aac2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aac4:	2200      	movs	r2, #0
 800aac6:	9206      	str	r2, [sp, #24]
 800aac8:	695a      	ldr	r2, [r3, #20]
 800aaca:	9206      	str	r2, [sp, #24]
 800aacc:	699b      	ldr	r3, [r3, #24]
 800aace:	9306      	str	r3, [sp, #24]
 800aad0:	9b06      	ldr	r3, [sp, #24]
 800aad2:	e731      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aad4:	685a      	ldr	r2, [r3, #4]
 800aad6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aada:	605a      	str	r2, [r3, #4]
 800aadc:	e4d4      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800aade:	3901      	subs	r1, #1
 800aae0:	290f      	cmp	r1, #15
 800aae2:	d809      	bhi.n	800aaf8 <HAL_I2C_EV_IRQHandler+0x6d0>
 800aae4:	e8df f001 	tbb	[pc, r1]
 800aae8:	3608363b 	.word	0x3608363b
 800aaec:	08080808 	.word	0x08080808
 800aaf0:	08080808 	.word	0x08080808
 800aaf4:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aaf8:	681a      	ldr	r2, [r3, #0]
 800aafa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aafe:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab00:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab02:	691b      	ldr	r3, [r3, #16]
 800ab04:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ab06:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ab08:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab0a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ab0c:	3b01      	subs	r3, #1
 800ab0e:	b29b      	uxth	r3, r3
 800ab10:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab12:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ab14:	1c51      	adds	r1, r2, #1
 800ab16:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab18:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ab1a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab1c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ab1e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab20:	3b01      	subs	r3, #1
 800ab22:	b29b      	uxth	r3, r3
 800ab24:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab26:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ab28:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab2a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ab2e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ab30:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ab32:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ab34:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ab38:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ab3c:	2b40      	cmp	r3, #64	; 0x40
 800ab3e:	f000 80f5 	beq.w	800ad2c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab42:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ab44:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab46:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ab4a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ab4c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ab4e:	f7ff facb 	bl	800a0e8 <HAL_I2C_MasterRxCpltCallback>
 800ab52:	e499      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab54:	681a      	ldr	r2, [r3, #0]
 800ab56:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ab5a:	601a      	str	r2, [r3, #0]
 800ab5c:	e7d0      	b.n	800ab00 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab5e:	681a      	ldr	r2, [r3, #0]
 800ab60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab64:	601a      	str	r2, [r3, #0]
 800ab66:	e7cb      	b.n	800ab00 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ab68:	2810      	cmp	r0, #16
 800ab6a:	d804      	bhi.n	800ab76 <HAL_I2C_EV_IRQHandler+0x74e>
 800ab6c:	4a19      	ldr	r2, [pc, #100]	; (800abd4 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800ab6e:	40c2      	lsrs	r2, r0
 800ab70:	07d2      	lsls	r2, r2, #31
 800ab72:	f100 80c2 	bmi.w	800acfa <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab76:	681a      	ldr	r2, [r3, #0]
 800ab78:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab7c:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ab7e:	681a      	ldr	r2, [r3, #0]
 800ab80:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ab84:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ab86:	685a      	ldr	r2, [r3, #4]
 800ab88:	0516      	lsls	r6, r2, #20
 800ab8a:	d506      	bpl.n	800ab9a <HAL_I2C_EV_IRQHandler+0x772>
 800ab8c:	2820      	cmp	r0, #32
 800ab8e:	f240 80bc 	bls.w	800ad0a <HAL_I2C_EV_IRQHandler+0x8e2>
 800ab92:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ab96:	f000 80bd 	beq.w	800ad14 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab9a:	2200      	movs	r2, #0
 800ab9c:	9208      	str	r2, [sp, #32]
 800ab9e:	695a      	ldr	r2, [r3, #20]
 800aba0:	9208      	str	r2, [sp, #32]
 800aba2:	699b      	ldr	r3, [r3, #24]
 800aba4:	9308      	str	r3, [sp, #32]
 800aba6:	9b08      	ldr	r3, [sp, #32]
 800aba8:	e6c6      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
 800abaa:	4a0b      	ldr	r2, [pc, #44]	; (800abd8 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800abac:	3808      	subs	r0, #8
 800abae:	40c2      	lsrs	r2, r0
 800abb0:	07d2      	lsls	r2, r2, #31
 800abb2:	f57f af13 	bpl.w	800a9dc <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800abb6:	685a      	ldr	r2, [r3, #4]
 800abb8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800abbc:	605a      	str	r2, [r3, #4]
 800abbe:	e70d      	b.n	800a9dc <HAL_I2C_EV_IRQHandler+0x5b4>
 800abc0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800abc4:	f47f af0a 	bne.w	800a9dc <HAL_I2C_EV_IRQHandler+0x5b4>
 800abc8:	e7f5      	b.n	800abb6 <HAL_I2C_EV_IRQHandler+0x78e>
 800abca:	bf00      	nop
 800abcc:	0800a1c9 	.word	0x0800a1c9
 800abd0:	ffff0000 	.word	0xffff0000
 800abd4:	00010014 	.word	0x00010014
 800abd8:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800abdc:	6859      	ldr	r1, [r3, #4]
 800abde:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800abe2:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abe4:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800abe6:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800abe8:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abea:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800abee:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800abf0:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800abf2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abf6:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800abfa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abfe:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ac00:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac02:	f47f af1c 	bne.w	800aa3e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ac06:	f7ff fa79 	bl	800a0fc <HAL_I2C_MemTxCpltCallback>
 800ac0a:	e43d      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ac0c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ac0e:	2802      	cmp	r0, #2
 800ac10:	f43f af60 	beq.w	800aad4 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ac14:	2a01      	cmp	r2, #1
 800ac16:	f63f af5d 	bhi.w	800aad4 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ac1a:	4a62      	ldr	r2, [pc, #392]	; (800ada4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ac1c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ac1e:	6812      	ldr	r2, [r2, #0]
 800ac20:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ac24:	fbb2 f2f0 	udiv	r2, r2, r0
 800ac28:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ac2c:	920b      	str	r2, [sp, #44]	; 0x2c
 800ac2e:	e004      	b.n	800ac3a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ac30:	681a      	ldr	r2, [r3, #0]
 800ac32:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ac36:	f000 8092 	beq.w	800ad5e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ac3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ac3c:	3a01      	subs	r2, #1
 800ac3e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ac40:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac42:	2900      	cmp	r1, #0
 800ac44:	d1f4      	bne.n	800ac30 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac46:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac48:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ac4a:	f042 0220 	orr.w	r2, r2, #32
 800ac4e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac50:	685a      	ldr	r2, [r3, #4]
 800ac52:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ac56:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac58:	691b      	ldr	r3, [r3, #16]
 800ac5a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ac5c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ac5e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ac60:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ac62:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ac64:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ac66:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ac68:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ac6a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ac6c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ac70:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac72:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ac76:	f7ff faa3 	bl	800a1c0 <HAL_I2C_ErrorCallback>
 800ac7a:	e405      	b.n	800a488 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ac7c:	2d08      	cmp	r5, #8
 800ac7e:	d0ad      	beq.n	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac80:	2d20      	cmp	r5, #32
 800ac82:	d0ab      	beq.n	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac84:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ac88:	d0a8      	beq.n	800abdc <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac8a:	685a      	ldr	r2, [r3, #4]
 800ac8c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ac90:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac92:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac94:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ac96:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac98:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac9a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac9e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aca0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aca4:	f7ff fa1e 	bl	800a0e4 <HAL_I2C_MasterTxCpltCallback>
 800aca8:	f7ff bbee 	b.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800acac:	2801      	cmp	r0, #1
 800acae:	f43f af05 	beq.w	800aabc <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acb2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acb4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acb6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acba:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acbc:	9107      	str	r1, [sp, #28]
 800acbe:	695a      	ldr	r2, [r3, #20]
 800acc0:	9207      	str	r2, [sp, #28]
 800acc2:	699a      	ldr	r2, [r3, #24]
 800acc4:	9207      	str	r2, [sp, #28]
 800acc6:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acc8:	681a      	ldr	r2, [r3, #0]
 800acca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800acce:	601a      	str	r2, [r3, #0]
 800acd0:	e632      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acd2:	681a      	ldr	r2, [r3, #0]
 800acd4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acd8:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800acda:	685a      	ldr	r2, [r3, #4]
 800acdc:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ace0:	d02d      	beq.n	800ad3e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ace2:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ace4:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ace6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acea:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acec:	9104      	str	r1, [sp, #16]
 800acee:	695a      	ldr	r2, [r3, #20]
 800acf0:	9204      	str	r2, [sp, #16]
 800acf2:	699b      	ldr	r3, [r3, #24]
 800acf4:	9304      	str	r3, [sp, #16]
 800acf6:	9b04      	ldr	r3, [sp, #16]
 800acf8:	e61e      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acfa:	681a      	ldr	r2, [r3, #0]
 800acfc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad00:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ad02:	685a      	ldr	r2, [r3, #4]
 800ad04:	0515      	lsls	r5, r2, #20
 800ad06:	f57f af48 	bpl.w	800ab9a <HAL_I2C_EV_IRQHandler+0x772>
 800ad0a:	2807      	cmp	r0, #7
 800ad0c:	d807      	bhi.n	800ad1e <HAL_I2C_EV_IRQHandler+0x8f6>
 800ad0e:	2801      	cmp	r0, #1
 800ad10:	f47f af43 	bne.w	800ab9a <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ad14:	685a      	ldr	r2, [r3, #4]
 800ad16:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ad1a:	605a      	str	r2, [r3, #4]
 800ad1c:	e73d      	b.n	800ab9a <HAL_I2C_EV_IRQHandler+0x772>
 800ad1e:	4a22      	ldr	r2, [pc, #136]	; (800ada8 <HAL_I2C_EV_IRQHandler+0x980>)
 800ad20:	3808      	subs	r0, #8
 800ad22:	40c2      	lsrs	r2, r0
 800ad24:	07d0      	lsls	r0, r2, #31
 800ad26:	f57f af38 	bpl.w	800ab9a <HAL_I2C_EV_IRQHandler+0x772>
 800ad2a:	e7f3      	b.n	800ad14 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad2c:	2300      	movs	r3, #0
 800ad2e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ad32:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad34:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ad36:	f7ff fa41 	bl	800a1bc <HAL_I2C_MemRxCpltCallback>
 800ad3a:	f7ff bba5 	b.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad3e:	9205      	str	r2, [sp, #20]
 800ad40:	695a      	ldr	r2, [r3, #20]
 800ad42:	9205      	str	r2, [sp, #20]
 800ad44:	699a      	ldr	r2, [r3, #24]
 800ad46:	9205      	str	r2, [sp, #20]
 800ad48:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad4a:	681a      	ldr	r2, [r3, #0]
 800ad4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad50:	601a      	str	r2, [r3, #0]
 800ad52:	e5f1      	b.n	800a938 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad54:	681a      	ldr	r2, [r3, #0]
 800ad56:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad5a:	601a      	str	r2, [r3, #0]
 800ad5c:	e6b2      	b.n	800aac4 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad5e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad60:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad62:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ad66:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad68:	6859      	ldr	r1, [r3, #4]
 800ad6a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ad6e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad70:	691b      	ldr	r3, [r3, #16]
 800ad72:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ad74:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ad76:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ad78:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ad7a:	b29b      	uxth	r3, r3
 800ad7c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ad7e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ad82:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad84:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ad88:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad8a:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ad8c:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad8e:	f47f aed9 	bne.w	800ab44 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad92:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ad96:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ad98:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ad9a:	f7ff fa0f 	bl	800a1bc <HAL_I2C_MemRxCpltCallback>
 800ad9e:	f7ff bb73 	b.w	800a488 <HAL_I2C_EV_IRQHandler+0x60>
 800ada2:	bf00      	nop
 800ada4:	20000078 	.word	0x20000078
 800ada8:	01000101 	.word	0x01000101

0800adac <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800adac:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800adb0:	2a20      	cmp	r2, #32
{
 800adb2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800adb4:	fa5f fc82 	uxtb.w	ip, r2
 800adb8:	d001      	beq.n	800adbe <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800adba:	2002      	movs	r0, #2
  }
}
 800adbc:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800adbe:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800adc0:	2024      	movs	r0, #36	; 0x24
 800adc2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800adc6:	6810      	ldr	r0, [r2, #0]
 800adc8:	f020 0001 	bic.w	r0, r0, #1
 800adcc:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800adce:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800add0:	f020 0010 	bic.w	r0, r0, #16
 800add4:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800add6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800add8:	4301      	orrs	r1, r0
 800adda:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800addc:	6811      	ldr	r1, [r2, #0]
 800adde:	f041 0101 	orr.w	r1, r1, #1
 800ade2:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800ade4:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ade6:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800adea:	4770      	bx	lr

0800adec <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800adec:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800adf0:	2a20      	cmp	r2, #32
 800adf2:	d001      	beq.n	800adf8 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800adf4:	2002      	movs	r0, #2
  }
}
 800adf6:	4770      	bx	lr
{
 800adf8:	b410      	push	{r4}
 800adfa:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800adfe:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ae00:	2224      	movs	r2, #36	; 0x24
 800ae02:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ae06:	6822      	ldr	r2, [r4, #0]
 800ae08:	f022 0201 	bic.w	r2, r2, #1
 800ae0c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ae0e:	4603      	mov	r3, r0
 800ae10:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ae12:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ae16:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ae18:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ae1a:	b289      	uxth	r1, r1
 800ae1c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ae1e:	6822      	ldr	r2, [r4, #0]
 800ae20:	f042 0201 	orr.w	r2, r2, #1
 800ae24:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ae26:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ae2a:	2000      	movs	r0, #0
}
 800ae2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ae30:	4770      	bx	lr
 800ae32:	bf00      	nop

0800ae34 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ae34:	2800      	cmp	r0, #0
 800ae36:	d069      	beq.n	800af0c <HAL_LTDC_Init+0xd8>
{
 800ae38:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ae3a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ae3e:	4604      	mov	r4, r0
 800ae40:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ae44:	2b00      	cmp	r3, #0
 800ae46:	d05c      	beq.n	800af02 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae48:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae4a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae4c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae50:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae54:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae56:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ae58:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ae5c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ae60:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae62:	6999      	ldr	r1, [r3, #24]
 800ae64:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ae66:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ae68:	430a      	orrs	r2, r1
 800ae6a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ae6c:	689a      	ldr	r2, [r3, #8]
 800ae6e:	4928      	ldr	r1, [pc, #160]	; (800af10 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ae70:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ae72:	400a      	ands	r2, r1
 800ae74:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ae76:	689a      	ldr	r2, [r3, #8]
 800ae78:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae7c:	69a0      	ldr	r0, [r4, #24]
 800ae7e:	4302      	orrs	r2, r0
 800ae80:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ae82:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ae84:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ae86:	400a      	ands	r2, r1
 800ae88:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ae8a:	68da      	ldr	r2, [r3, #12]
 800ae8c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ae90:	6a20      	ldr	r0, [r4, #32]
 800ae92:	4302      	orrs	r2, r0
 800ae94:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ae96:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ae98:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ae9a:	400a      	ands	r2, r1
 800ae9c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ae9e:	691a      	ldr	r2, [r3, #16]
 800aea0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800aea4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800aea6:	4302      	orrs	r2, r0
 800aea8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800aeaa:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800aeac:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800aeae:	400a      	ands	r2, r1
 800aeb0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800aeb2:	695a      	ldr	r2, [r3, #20]
 800aeb4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800aeb6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800aeba:	430a      	orrs	r2, r1
 800aebc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800aebe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800aec0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800aec4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800aec8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800aecc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800aece:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800aed0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800aed4:	432a      	orrs	r2, r5
 800aed6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800aeda:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800aede:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800aee0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aee2:	f042 0206 	orr.w	r2, r2, #6
 800aee6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800aee8:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800aeea:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800aeee:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800aef0:	ea42 020c 	orr.w	r2, r2, ip
 800aef4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800aef6:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800aefa:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800aefe:	4608      	mov	r0, r1
}
 800af00:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800af02:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800af06:	f7f7 f835 	bl	8001f74 <HAL_LTDC_MspInit>
 800af0a:	e79d      	b.n	800ae48 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800af0c:	2001      	movs	r0, #1
}
 800af0e:	4770      	bx	lr
 800af10:	f000f800 	.word	0xf000f800

0800af14 <HAL_LTDC_ErrorCallback>:
 800af14:	4770      	bx	lr
 800af16:	bf00      	nop

0800af18 <HAL_LTDC_ReloadEventCallback>:
 800af18:	4770      	bx	lr
 800af1a:	bf00      	nop

0800af1c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800af1c:	6803      	ldr	r3, [r0, #0]
{
 800af1e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800af20:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800af22:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800af24:	076a      	lsls	r2, r5, #29
{
 800af26:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800af28:	d501      	bpl.n	800af2e <HAL_LTDC_IRQHandler+0x12>
 800af2a:	0771      	lsls	r1, r6, #29
 800af2c:	d41d      	bmi.n	800af6a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800af2e:	07aa      	lsls	r2, r5, #30
 800af30:	d501      	bpl.n	800af36 <HAL_LTDC_IRQHandler+0x1a>
 800af32:	07b3      	lsls	r3, r6, #30
 800af34:	d42d      	bmi.n	800af92 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800af36:	07e8      	lsls	r0, r5, #31
 800af38:	d501      	bpl.n	800af3e <HAL_LTDC_IRQHandler+0x22>
 800af3a:	07f1      	lsls	r1, r6, #31
 800af3c:	d440      	bmi.n	800afc0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800af3e:	072a      	lsls	r2, r5, #28
 800af40:	d501      	bpl.n	800af46 <HAL_LTDC_IRQHandler+0x2a>
 800af42:	0733      	lsls	r3, r6, #28
 800af44:	d400      	bmi.n	800af48 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800af46:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800af48:	6823      	ldr	r3, [r4, #0]
 800af4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800af4c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800af4e:	f022 0208 	bic.w	r2, r2, #8
 800af52:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800af54:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800af56:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800af58:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800af5a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800af5e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800af62:	4620      	mov	r0, r4
 800af64:	f7ff ffd8 	bl	800af18 <HAL_LTDC_ReloadEventCallback>
}
 800af68:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800af6a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af6c:	f022 0204 	bic.w	r2, r2, #4
 800af70:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800af72:	2204      	movs	r2, #4
 800af74:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800af76:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800af7a:	f043 0301 	orr.w	r3, r3, #1
 800af7e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800af82:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800af84:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800af88:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800af8c:	f7ff ffc2 	bl	800af14 <HAL_LTDC_ErrorCallback>
 800af90:	e7cd      	b.n	800af2e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800af92:	6823      	ldr	r3, [r4, #0]
 800af94:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800af96:	f022 0202 	bic.w	r2, r2, #2
 800af9a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800af9c:	2202      	movs	r2, #2
 800af9e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800afa0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800afa4:	f043 0302 	orr.w	r3, r3, #2
 800afa8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800afac:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800afae:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800afb0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800afb4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800afb8:	4620      	mov	r0, r4
 800afba:	f7ff ffab 	bl	800af14 <HAL_LTDC_ErrorCallback>
 800afbe:	e7ba      	b.n	800af36 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afc0:	6823      	ldr	r3, [r4, #0]
 800afc2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800afc4:	f022 0201 	bic.w	r2, r2, #1
 800afc8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800afca:	2201      	movs	r2, #1
 800afcc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800afce:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800afd0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800afd4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800afd8:	4620      	mov	r0, r4
 800afda:	f7f6 f8a9 	bl	8001130 <HAL_LTDC_LineEventCallback>
 800afde:	e7ae      	b.n	800af3e <HAL_LTDC_IRQHandler+0x22>

0800afe0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800afe0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800afe4:	2b01      	cmp	r3, #1
 800afe6:	f000 80c2 	beq.w	800b16e <HAL_LTDC_ConfigLayer+0x18e>
{
 800afea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800afee:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aff2:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aff6:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800affa:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800affc:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800affe:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b002:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b006:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b00a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b00e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b012:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b016:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b018:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b01c:	460c      	mov	r4, r1
 800b01e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b020:	9301      	str	r3, [sp, #4]
 800b022:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b024:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b026:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b02a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b02e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b030:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b032:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b036:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b038:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b03c:	6823      	ldr	r3, [r4, #0]
 800b03e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b042:	9b01      	ldr	r3, [sp, #4]
 800b044:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b048:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b04c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b04e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b050:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b054:	1c51      	adds	r1, r2, #1
 800b056:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b05a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b05c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b05e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b062:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b066:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b06a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b06e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b072:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b076:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b07a:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b07c:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b07e:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b082:	3301      	adds	r3, #1
 800b084:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b088:	4403      	add	r3, r0
 800b08a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b08e:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b092:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b096:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b098:	f023 0307 	bic.w	r3, r3, #7
 800b09c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b0a0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b0a4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b0a8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b0ac:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b0b0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b0b4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b0b8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b0bc:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b0c0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b0c4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b0c8:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b0cc:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b0d0:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b0d4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b0d8:	696b      	ldr	r3, [r5, #20]
 800b0da:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b0de:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b0e2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b0e6:	f023 0307 	bic.w	r3, r3, #7
 800b0ea:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b0ee:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b0f2:	4303      	orrs	r3, r0
 800b0f4:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b0f8:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b0fc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b0fe:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b102:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b106:	bb69      	cbnz	r1, 800b164 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b108:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b10a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b10c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b10e:	fb03 f707 	mul.w	r7, r3, r7
 800b112:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b114:	fb02 f303 	mul.w	r3, r2, r3
 800b118:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b11c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b120:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b122:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b126:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b12a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b12e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b132:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b136:	f023 0307 	bic.w	r3, r3, #7
 800b13a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b13e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b142:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b146:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b148:	4313      	orrs	r3, r2
 800b14a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b14e:	2300      	movs	r3, #0
  return HAL_OK;
 800b150:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b152:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b156:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b15a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b15e:	b003      	add	sp, #12
 800b160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b164:	3901      	subs	r1, #1
 800b166:	2906      	cmp	r1, #6
 800b168:	d903      	bls.n	800b172 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b16a:	2301      	movs	r3, #1
 800b16c:	e7cd      	b.n	800b10a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b16e:	2002      	movs	r0, #2
}
 800b170:	4770      	bx	lr
 800b172:	4b02      	ldr	r3, [pc, #8]	; (800b17c <HAL_LTDC_ConfigLayer+0x19c>)
 800b174:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b178:	e7c7      	b.n	800b10a <HAL_LTDC_ConfigLayer+0x12a>
 800b17a:	bf00      	nop
 800b17c:	0802eda0 	.word	0x0802eda0

0800b180 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b180:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b184:	2b01      	cmp	r3, #1
 800b186:	d019      	beq.n	800b1bc <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b188:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b18a:	2302      	movs	r3, #2
{
 800b18c:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b18e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b192:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b194:	4c0a      	ldr	r4, [pc, #40]	; (800b1c0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b196:	f023 0301 	bic.w	r3, r3, #1
 800b19a:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b19c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b19e:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b1a0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b1a2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b1a6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b1aa:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b1ac:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b1b0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b1b4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b1b8:	4618      	mov	r0, r3
}
 800b1ba:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b1bc:	2002      	movs	r0, #2
}
 800b1be:	4770      	bx	lr
 800b1c0:	40016800 	.word	0x40016800

0800b1c4 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b1c4:	2800      	cmp	r0, #0
 800b1c6:	f000 81a2 	beq.w	800b50e <HAL_RCC_OscConfig+0x34a>
{
 800b1ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b1ce:	6803      	ldr	r3, [r0, #0]
 800b1d0:	07dd      	lsls	r5, r3, #31
{
 800b1d2:	b082      	sub	sp, #8
 800b1d4:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b1d6:	d52f      	bpl.n	800b238 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b1d8:	499e      	ldr	r1, [pc, #632]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b1da:	688a      	ldr	r2, [r1, #8]
 800b1dc:	f002 020c 	and.w	r2, r2, #12
 800b1e0:	2a04      	cmp	r2, #4
 800b1e2:	f000 80ed 	beq.w	800b3c0 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b1e6:	688a      	ldr	r2, [r1, #8]
 800b1e8:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b1ec:	2a08      	cmp	r2, #8
 800b1ee:	f000 80e3 	beq.w	800b3b8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b1f2:	6863      	ldr	r3, [r4, #4]
 800b1f4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b1f8:	f000 80ec 	beq.w	800b3d4 <HAL_RCC_OscConfig+0x210>
 800b1fc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b200:	f000 8175 	beq.w	800b4ee <HAL_RCC_OscConfig+0x32a>
 800b204:	4d93      	ldr	r5, [pc, #588]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b206:	682a      	ldr	r2, [r5, #0]
 800b208:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b20c:	602a      	str	r2, [r5, #0]
 800b20e:	682a      	ldr	r2, [r5, #0]
 800b210:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b214:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b216:	2b00      	cmp	r3, #0
 800b218:	f040 80e1 	bne.w	800b3de <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b21c:	f7fd ffb0 	bl	8009180 <HAL_GetTick>
 800b220:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b222:	e005      	b.n	800b230 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b224:	f7fd ffac 	bl	8009180 <HAL_GetTick>
 800b228:	1b80      	subs	r0, r0, r6
 800b22a:	2864      	cmp	r0, #100	; 0x64
 800b22c:	f200 8101 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b230:	682b      	ldr	r3, [r5, #0]
 800b232:	039b      	lsls	r3, r3, #14
 800b234:	d4f6      	bmi.n	800b224 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b236:	6823      	ldr	r3, [r4, #0]
 800b238:	079f      	lsls	r7, r3, #30
 800b23a:	d528      	bpl.n	800b28e <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b23c:	4a85      	ldr	r2, [pc, #532]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b23e:	6891      	ldr	r1, [r2, #8]
 800b240:	f011 0f0c 	tst.w	r1, #12
 800b244:	f000 8090 	beq.w	800b368 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b248:	6891      	ldr	r1, [r2, #8]
 800b24a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b24e:	2908      	cmp	r1, #8
 800b250:	f000 8086 	beq.w	800b360 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b254:	68e3      	ldr	r3, [r4, #12]
 800b256:	2b00      	cmp	r3, #0
 800b258:	f000 810e 	beq.w	800b478 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b25c:	4b7e      	ldr	r3, [pc, #504]	; (800b458 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b25e:	4e7d      	ldr	r6, [pc, #500]	; (800b454 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b260:	2201      	movs	r2, #1
 800b262:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b264:	f7fd ff8c 	bl	8009180 <HAL_GetTick>
 800b268:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b26a:	e005      	b.n	800b278 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b26c:	f7fd ff88 	bl	8009180 <HAL_GetTick>
 800b270:	1b40      	subs	r0, r0, r5
 800b272:	2802      	cmp	r0, #2
 800b274:	f200 80dd 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b278:	6833      	ldr	r3, [r6, #0]
 800b27a:	0798      	lsls	r0, r3, #30
 800b27c:	d5f6      	bpl.n	800b26c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b27e:	6833      	ldr	r3, [r6, #0]
 800b280:	6922      	ldr	r2, [r4, #16]
 800b282:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b286:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b28a:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b28c:	6823      	ldr	r3, [r4, #0]
 800b28e:	071a      	lsls	r2, r3, #28
 800b290:	d451      	bmi.n	800b336 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b292:	0758      	lsls	r0, r3, #29
 800b294:	d52f      	bpl.n	800b2f6 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b296:	4a6f      	ldr	r2, [pc, #444]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b298:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b29a:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b29e:	d07f      	beq.n	800b3a0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b2a0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b2a2:	4e6e      	ldr	r6, [pc, #440]	; (800b45c <HAL_RCC_OscConfig+0x298>)
 800b2a4:	6833      	ldr	r3, [r6, #0]
 800b2a6:	05d9      	lsls	r1, r3, #23
 800b2a8:	f140 80b3 	bpl.w	800b412 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b2ac:	68a3      	ldr	r3, [r4, #8]
 800b2ae:	2b01      	cmp	r3, #1
 800b2b0:	f000 80c3 	beq.w	800b43a <HAL_RCC_OscConfig+0x276>
 800b2b4:	2b05      	cmp	r3, #5
 800b2b6:	f000 812c 	beq.w	800b512 <HAL_RCC_OscConfig+0x34e>
 800b2ba:	4e66      	ldr	r6, [pc, #408]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b2bc:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b2be:	f022 0201 	bic.w	r2, r2, #1
 800b2c2:	6732      	str	r2, [r6, #112]	; 0x70
 800b2c4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b2c6:	f022 0204 	bic.w	r2, r2, #4
 800b2ca:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b2cc:	2b00      	cmp	r3, #0
 800b2ce:	f040 80b9 	bne.w	800b444 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b2d2:	f7fd ff55 	bl	8009180 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2d6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b2da:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b2dc:	e005      	b.n	800b2ea <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2de:	f7fd ff4f 	bl	8009180 <HAL_GetTick>
 800b2e2:	1bc0      	subs	r0, r0, r7
 800b2e4:	4540      	cmp	r0, r8
 800b2e6:	f200 80a4 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b2ea:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b2ec:	0798      	lsls	r0, r3, #30
 800b2ee:	d4f6      	bmi.n	800b2de <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b2f0:	2d00      	cmp	r5, #0
 800b2f2:	f040 8106 	bne.w	800b502 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b2f6:	69a0      	ldr	r0, [r4, #24]
 800b2f8:	b1c8      	cbz	r0, 800b32e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b2fa:	4d56      	ldr	r5, [pc, #344]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b2fc:	68ab      	ldr	r3, [r5, #8]
 800b2fe:	f003 030c 	and.w	r3, r3, #12
 800b302:	2b08      	cmp	r3, #8
 800b304:	f000 80c9 	beq.w	800b49a <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b308:	4b53      	ldr	r3, [pc, #332]	; (800b458 <HAL_RCC_OscConfig+0x294>)
 800b30a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b30c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b30e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b310:	f000 8109 	beq.w	800b526 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b314:	f7fd ff34 	bl	8009180 <HAL_GetTick>
 800b318:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b31a:	e005      	b.n	800b328 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b31c:	f7fd ff30 	bl	8009180 <HAL_GetTick>
 800b320:	1b00      	subs	r0, r0, r4
 800b322:	2802      	cmp	r0, #2
 800b324:	f200 8085 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b328:	682b      	ldr	r3, [r5, #0]
 800b32a:	019b      	lsls	r3, r3, #6
 800b32c:	d4f6      	bmi.n	800b31c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b32e:	2000      	movs	r0, #0
}
 800b330:	b002      	add	sp, #8
 800b332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b336:	6963      	ldr	r3, [r4, #20]
 800b338:	b30b      	cbz	r3, 800b37e <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b33a:	4b47      	ldr	r3, [pc, #284]	; (800b458 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b33c:	4e45      	ldr	r6, [pc, #276]	; (800b454 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b33e:	2201      	movs	r2, #1
 800b340:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b344:	f7fd ff1c 	bl	8009180 <HAL_GetTick>
 800b348:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b34a:	e004      	b.n	800b356 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b34c:	f7fd ff18 	bl	8009180 <HAL_GetTick>
 800b350:	1b40      	subs	r0, r0, r5
 800b352:	2802      	cmp	r0, #2
 800b354:	d86d      	bhi.n	800b432 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b356:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b358:	079b      	lsls	r3, r3, #30
 800b35a:	d5f7      	bpl.n	800b34c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b35c:	6823      	ldr	r3, [r4, #0]
 800b35e:	e798      	b.n	800b292 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b360:	6852      	ldr	r2, [r2, #4]
 800b362:	0256      	lsls	r6, r2, #9
 800b364:	f53f af76 	bmi.w	800b254 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b368:	4a3a      	ldr	r2, [pc, #232]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b36a:	6812      	ldr	r2, [r2, #0]
 800b36c:	0795      	lsls	r5, r2, #30
 800b36e:	d544      	bpl.n	800b3fa <HAL_RCC_OscConfig+0x236>
 800b370:	68e2      	ldr	r2, [r4, #12]
 800b372:	2a01      	cmp	r2, #1
 800b374:	d041      	beq.n	800b3fa <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b376:	2001      	movs	r0, #1
}
 800b378:	b002      	add	sp, #8
 800b37a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b37e:	4a36      	ldr	r2, [pc, #216]	; (800b458 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b380:	4e34      	ldr	r6, [pc, #208]	; (800b454 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b382:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b386:	f7fd fefb 	bl	8009180 <HAL_GetTick>
 800b38a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b38c:	e004      	b.n	800b398 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b38e:	f7fd fef7 	bl	8009180 <HAL_GetTick>
 800b392:	1b40      	subs	r0, r0, r5
 800b394:	2802      	cmp	r0, #2
 800b396:	d84c      	bhi.n	800b432 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b398:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b39a:	079f      	lsls	r7, r3, #30
 800b39c:	d4f7      	bmi.n	800b38e <HAL_RCC_OscConfig+0x1ca>
 800b39e:	e7dd      	b.n	800b35c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b3a0:	9301      	str	r3, [sp, #4]
 800b3a2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b3a4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b3a8:	6413      	str	r3, [r2, #64]	; 0x40
 800b3aa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b3ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b3b0:	9301      	str	r3, [sp, #4]
 800b3b2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b3b4:	2501      	movs	r5, #1
 800b3b6:	e774      	b.n	800b2a2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b3b8:	684a      	ldr	r2, [r1, #4]
 800b3ba:	0250      	lsls	r0, r2, #9
 800b3bc:	f57f af19 	bpl.w	800b1f2 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b3c0:	4a24      	ldr	r2, [pc, #144]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b3c2:	6812      	ldr	r2, [r2, #0]
 800b3c4:	0391      	lsls	r1, r2, #14
 800b3c6:	f57f af37 	bpl.w	800b238 <HAL_RCC_OscConfig+0x74>
 800b3ca:	6862      	ldr	r2, [r4, #4]
 800b3cc:	2a00      	cmp	r2, #0
 800b3ce:	f47f af33 	bne.w	800b238 <HAL_RCC_OscConfig+0x74>
 800b3d2:	e7d0      	b.n	800b376 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b3d4:	4a1f      	ldr	r2, [pc, #124]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b3d6:	6813      	ldr	r3, [r2, #0]
 800b3d8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b3dc:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b3de:	f7fd fecf 	bl	8009180 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3e2:	4e1c      	ldr	r6, [pc, #112]	; (800b454 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b3e4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3e6:	e004      	b.n	800b3f2 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b3e8:	f7fd feca 	bl	8009180 <HAL_GetTick>
 800b3ec:	1b40      	subs	r0, r0, r5
 800b3ee:	2864      	cmp	r0, #100	; 0x64
 800b3f0:	d81f      	bhi.n	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b3f2:	6833      	ldr	r3, [r6, #0]
 800b3f4:	039a      	lsls	r2, r3, #14
 800b3f6:	d5f7      	bpl.n	800b3e8 <HAL_RCC_OscConfig+0x224>
 800b3f8:	e71d      	b.n	800b236 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b3fa:	4916      	ldr	r1, [pc, #88]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b3fc:	6920      	ldr	r0, [r4, #16]
 800b3fe:	680a      	ldr	r2, [r1, #0]
 800b400:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b404:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b408:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b40a:	071a      	lsls	r2, r3, #28
 800b40c:	f57f af41 	bpl.w	800b292 <HAL_RCC_OscConfig+0xce>
 800b410:	e791      	b.n	800b336 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b412:	6833      	ldr	r3, [r6, #0]
 800b414:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b418:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b41a:	f7fd feb1 	bl	8009180 <HAL_GetTick>
 800b41e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b420:	6833      	ldr	r3, [r6, #0]
 800b422:	05da      	lsls	r2, r3, #23
 800b424:	f53f af42 	bmi.w	800b2ac <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b428:	f7fd feaa 	bl	8009180 <HAL_GetTick>
 800b42c:	1bc0      	subs	r0, r0, r7
 800b42e:	2802      	cmp	r0, #2
 800b430:	d9f6      	bls.n	800b420 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b432:	2003      	movs	r0, #3
}
 800b434:	b002      	add	sp, #8
 800b436:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b43a:	4a06      	ldr	r2, [pc, #24]	; (800b454 <HAL_RCC_OscConfig+0x290>)
 800b43c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b43e:	f043 0301 	orr.w	r3, r3, #1
 800b442:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b444:	f7fd fe9c 	bl	8009180 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b448:	4f02      	ldr	r7, [pc, #8]	; (800b454 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b44a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b44c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b450:	e00b      	b.n	800b46a <HAL_RCC_OscConfig+0x2a6>
 800b452:	bf00      	nop
 800b454:	40023800 	.word	0x40023800
 800b458:	42470000 	.word	0x42470000
 800b45c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b460:	f7fd fe8e 	bl	8009180 <HAL_GetTick>
 800b464:	1b80      	subs	r0, r0, r6
 800b466:	4540      	cmp	r0, r8
 800b468:	d8e3      	bhi.n	800b432 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b46a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b46c:	079b      	lsls	r3, r3, #30
 800b46e:	d5f7      	bpl.n	800b460 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b470:	2d00      	cmp	r5, #0
 800b472:	f43f af40 	beq.w	800b2f6 <HAL_RCC_OscConfig+0x132>
 800b476:	e044      	b.n	800b502 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b478:	4a42      	ldr	r2, [pc, #264]	; (800b584 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b47a:	4e43      	ldr	r6, [pc, #268]	; (800b588 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b47c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b47e:	f7fd fe7f 	bl	8009180 <HAL_GetTick>
 800b482:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b484:	e004      	b.n	800b490 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b486:	f7fd fe7b 	bl	8009180 <HAL_GetTick>
 800b48a:	1b40      	subs	r0, r0, r5
 800b48c:	2802      	cmp	r0, #2
 800b48e:	d8d0      	bhi.n	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b490:	6833      	ldr	r3, [r6, #0]
 800b492:	0799      	lsls	r1, r3, #30
 800b494:	d4f7      	bmi.n	800b486 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b496:	6823      	ldr	r3, [r4, #0]
 800b498:	e6f9      	b.n	800b28e <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b49a:	2801      	cmp	r0, #1
 800b49c:	f43f af48 	beq.w	800b330 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b4a0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b4a2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b4a4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b4a8:	4291      	cmp	r1, r2
 800b4aa:	f47f af64 	bne.w	800b376 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b4ae:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b4b0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b4b4:	4291      	cmp	r1, r2
 800b4b6:	f47f af5e 	bne.w	800b376 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b4ba:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b4bc:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b4c0:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b4c2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b4c6:	f47f af56 	bne.w	800b376 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b4ca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b4cc:	0852      	lsrs	r2, r2, #1
 800b4ce:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b4d2:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b4d4:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b4d8:	f47f af4d 	bne.w	800b376 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b4dc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b4de:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b4e2:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b4e6:	bf14      	ite	ne
 800b4e8:	2001      	movne	r0, #1
 800b4ea:	2000      	moveq	r0, #0
 800b4ec:	e720      	b.n	800b330 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b4ee:	4b26      	ldr	r3, [pc, #152]	; (800b588 <HAL_RCC_OscConfig+0x3c4>)
 800b4f0:	681a      	ldr	r2, [r3, #0]
 800b4f2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b4f6:	601a      	str	r2, [r3, #0]
 800b4f8:	681a      	ldr	r2, [r3, #0]
 800b4fa:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b4fe:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b500:	e76d      	b.n	800b3de <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b502:	4a21      	ldr	r2, [pc, #132]	; (800b588 <HAL_RCC_OscConfig+0x3c4>)
 800b504:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b506:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b50a:	6413      	str	r3, [r2, #64]	; 0x40
 800b50c:	e6f3      	b.n	800b2f6 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b50e:	2001      	movs	r0, #1
}
 800b510:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b512:	4b1d      	ldr	r3, [pc, #116]	; (800b588 <HAL_RCC_OscConfig+0x3c4>)
 800b514:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b516:	f042 0204 	orr.w	r2, r2, #4
 800b51a:	671a      	str	r2, [r3, #112]	; 0x70
 800b51c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b51e:	f042 0201 	orr.w	r2, r2, #1
 800b522:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b524:	e78e      	b.n	800b444 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b526:	f7fd fe2b 	bl	8009180 <HAL_GetTick>
 800b52a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b52c:	e005      	b.n	800b53a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b52e:	f7fd fe27 	bl	8009180 <HAL_GetTick>
 800b532:	1b80      	subs	r0, r0, r6
 800b534:	2802      	cmp	r0, #2
 800b536:	f63f af7c 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b53a:	682b      	ldr	r3, [r5, #0]
 800b53c:	0199      	lsls	r1, r3, #6
 800b53e:	d4f6      	bmi.n	800b52e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b540:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b544:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b546:	430b      	orrs	r3, r1
 800b548:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b54c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b550:	0852      	lsrs	r2, r2, #1
 800b552:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b556:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b558:	490a      	ldr	r1, [pc, #40]	; (800b584 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b55a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b55e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b560:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b562:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b564:	f7fd fe0c 	bl	8009180 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b568:	4d07      	ldr	r5, [pc, #28]	; (800b588 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b56a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b56c:	e005      	b.n	800b57a <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b56e:	f7fd fe07 	bl	8009180 <HAL_GetTick>
 800b572:	1b00      	subs	r0, r0, r4
 800b574:	2802      	cmp	r0, #2
 800b576:	f63f af5c 	bhi.w	800b432 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b57a:	682b      	ldr	r3, [r5, #0]
 800b57c:	019a      	lsls	r2, r3, #6
 800b57e:	d5f6      	bpl.n	800b56e <HAL_RCC_OscConfig+0x3aa>
 800b580:	e6d5      	b.n	800b32e <HAL_RCC_OscConfig+0x16a>
 800b582:	bf00      	nop
 800b584:	42470000 	.word	0x42470000
 800b588:	40023800 	.word	0x40023800

0800b58c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b58c:	4916      	ldr	r1, [pc, #88]	; (800b5e8 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b58e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b590:	688b      	ldr	r3, [r1, #8]
 800b592:	f003 030c 	and.w	r3, r3, #12
 800b596:	2b04      	cmp	r3, #4
 800b598:	d01b      	beq.n	800b5d2 <HAL_RCC_GetSysClockFreq+0x46>
 800b59a:	2b08      	cmp	r3, #8
 800b59c:	d117      	bne.n	800b5ce <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b59e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b5a0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b5a2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b5a4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b5a8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b5ac:	d113      	bne.n	800b5d6 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b5ae:	480f      	ldr	r0, [pc, #60]	; (800b5ec <HAL_RCC_GetSysClockFreq+0x60>)
 800b5b0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b5b4:	fba1 0100 	umull	r0, r1, r1, r0
 800b5b8:	f7f4 feca 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b5bc:	4b0a      	ldr	r3, [pc, #40]	; (800b5e8 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b5be:	685b      	ldr	r3, [r3, #4]
 800b5c0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b5c4:	3301      	adds	r3, #1
 800b5c6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b5c8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b5cc:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b5ce:	4807      	ldr	r0, [pc, #28]	; (800b5ec <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b5d0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b5d2:	4807      	ldr	r0, [pc, #28]	; (800b5f0 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b5d4:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b5d6:	4806      	ldr	r0, [pc, #24]	; (800b5f0 <HAL_RCC_GetSysClockFreq+0x64>)
 800b5d8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b5dc:	2300      	movs	r3, #0
 800b5de:	fba1 0100 	umull	r0, r1, r1, r0
 800b5e2:	f7f4 feb5 	bl	8000350 <__aeabi_uldivmod>
 800b5e6:	e7e9      	b.n	800b5bc <HAL_RCC_GetSysClockFreq+0x30>
 800b5e8:	40023800 	.word	0x40023800
 800b5ec:	00f42400 	.word	0x00f42400
 800b5f0:	007a1200 	.word	0x007a1200

0800b5f4 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b5f4:	2800      	cmp	r0, #0
 800b5f6:	f000 8087 	beq.w	800b708 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b5fa:	4a48      	ldr	r2, [pc, #288]	; (800b71c <HAL_RCC_ClockConfig+0x128>)
 800b5fc:	6813      	ldr	r3, [r2, #0]
 800b5fe:	f003 030f 	and.w	r3, r3, #15
 800b602:	428b      	cmp	r3, r1
{
 800b604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b608:	460d      	mov	r5, r1
 800b60a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b60c:	d209      	bcs.n	800b622 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b60e:	b2cb      	uxtb	r3, r1
 800b610:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b612:	6813      	ldr	r3, [r2, #0]
 800b614:	f003 030f 	and.w	r3, r3, #15
 800b618:	428b      	cmp	r3, r1
 800b61a:	d002      	beq.n	800b622 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b61c:	2001      	movs	r0, #1
}
 800b61e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b622:	6823      	ldr	r3, [r4, #0]
 800b624:	0798      	lsls	r0, r3, #30
 800b626:	d514      	bpl.n	800b652 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b628:	0759      	lsls	r1, r3, #29
 800b62a:	d504      	bpl.n	800b636 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b62c:	493c      	ldr	r1, [pc, #240]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b62e:	688a      	ldr	r2, [r1, #8]
 800b630:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b634:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b636:	071a      	lsls	r2, r3, #28
 800b638:	d504      	bpl.n	800b644 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b63a:	4939      	ldr	r1, [pc, #228]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b63c:	688a      	ldr	r2, [r1, #8]
 800b63e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b642:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b644:	4936      	ldr	r1, [pc, #216]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b646:	68a0      	ldr	r0, [r4, #8]
 800b648:	688a      	ldr	r2, [r1, #8]
 800b64a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b64e:	4302      	orrs	r2, r0
 800b650:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b652:	07df      	lsls	r7, r3, #31
 800b654:	d521      	bpl.n	800b69a <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b656:	6862      	ldr	r2, [r4, #4]
 800b658:	2a01      	cmp	r2, #1
 800b65a:	d057      	beq.n	800b70c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b65c:	1e93      	subs	r3, r2, #2
 800b65e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b660:	4b2f      	ldr	r3, [pc, #188]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b662:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b664:	d94d      	bls.n	800b702 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b666:	0799      	lsls	r1, r3, #30
 800b668:	d5d8      	bpl.n	800b61c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b66a:	4e2d      	ldr	r6, [pc, #180]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b66c:	68b3      	ldr	r3, [r6, #8]
 800b66e:	f023 0303 	bic.w	r3, r3, #3
 800b672:	4313      	orrs	r3, r2
 800b674:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b676:	f7fd fd83 	bl	8009180 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b67a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b67e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b680:	e004      	b.n	800b68c <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b682:	f7fd fd7d 	bl	8009180 <HAL_GetTick>
 800b686:	1bc0      	subs	r0, r0, r7
 800b688:	4540      	cmp	r0, r8
 800b68a:	d844      	bhi.n	800b716 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b68c:	68b3      	ldr	r3, [r6, #8]
 800b68e:	6862      	ldr	r2, [r4, #4]
 800b690:	f003 030c 	and.w	r3, r3, #12
 800b694:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b698:	d1f3      	bne.n	800b682 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b69a:	4a20      	ldr	r2, [pc, #128]	; (800b71c <HAL_RCC_ClockConfig+0x128>)
 800b69c:	6813      	ldr	r3, [r2, #0]
 800b69e:	f003 030f 	and.w	r3, r3, #15
 800b6a2:	42ab      	cmp	r3, r5
 800b6a4:	d906      	bls.n	800b6b4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b6a6:	b2eb      	uxtb	r3, r5
 800b6a8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b6aa:	6813      	ldr	r3, [r2, #0]
 800b6ac:	f003 030f 	and.w	r3, r3, #15
 800b6b0:	42ab      	cmp	r3, r5
 800b6b2:	d1b3      	bne.n	800b61c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b6b4:	6823      	ldr	r3, [r4, #0]
 800b6b6:	075a      	lsls	r2, r3, #29
 800b6b8:	d506      	bpl.n	800b6c8 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b6ba:	4919      	ldr	r1, [pc, #100]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b6bc:	68e0      	ldr	r0, [r4, #12]
 800b6be:	688a      	ldr	r2, [r1, #8]
 800b6c0:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b6c4:	4302      	orrs	r2, r0
 800b6c6:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b6c8:	071b      	lsls	r3, r3, #28
 800b6ca:	d507      	bpl.n	800b6dc <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b6cc:	4a14      	ldr	r2, [pc, #80]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b6ce:	6921      	ldr	r1, [r4, #16]
 800b6d0:	6893      	ldr	r3, [r2, #8]
 800b6d2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b6d6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b6da:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6dc:	f7ff ff56 	bl	800b58c <HAL_RCC_GetSysClockFreq>
 800b6e0:	4a0f      	ldr	r2, [pc, #60]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b6e2:	4c10      	ldr	r4, [pc, #64]	; (800b724 <HAL_RCC_ClockConfig+0x130>)
 800b6e4:	6892      	ldr	r2, [r2, #8]
 800b6e6:	4910      	ldr	r1, [pc, #64]	; (800b728 <HAL_RCC_ClockConfig+0x134>)
 800b6e8:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b6ec:	4603      	mov	r3, r0
 800b6ee:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b6f0:	480e      	ldr	r0, [pc, #56]	; (800b72c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6f2:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b6f4:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b6f6:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b6f8:	f7f6 fe18 	bl	800232c <HAL_InitTick>
  return HAL_OK;
 800b6fc:	2000      	movs	r0, #0
}
 800b6fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b702:	0198      	lsls	r0, r3, #6
 800b704:	d4b1      	bmi.n	800b66a <HAL_RCC_ClockConfig+0x76>
 800b706:	e789      	b.n	800b61c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b708:	2001      	movs	r0, #1
}
 800b70a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b70c:	4b04      	ldr	r3, [pc, #16]	; (800b720 <HAL_RCC_ClockConfig+0x12c>)
 800b70e:	681b      	ldr	r3, [r3, #0]
 800b710:	039e      	lsls	r6, r3, #14
 800b712:	d4aa      	bmi.n	800b66a <HAL_RCC_ClockConfig+0x76>
 800b714:	e782      	b.n	800b61c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b716:	2003      	movs	r0, #3
 800b718:	e781      	b.n	800b61e <HAL_RCC_ClockConfig+0x2a>
 800b71a:	bf00      	nop
 800b71c:	40023c00 	.word	0x40023c00
 800b720:	40023800 	.word	0x40023800
 800b724:	0802ed88 	.word	0x0802ed88
 800b728:	20000078 	.word	0x20000078
 800b72c:	20000080 	.word	0x20000080

0800b730 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b730:	4b04      	ldr	r3, [pc, #16]	; (800b744 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b732:	4905      	ldr	r1, [pc, #20]	; (800b748 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b734:	689b      	ldr	r3, [r3, #8]
 800b736:	4a05      	ldr	r2, [pc, #20]	; (800b74c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b738:	6808      	ldr	r0, [r1, #0]
 800b73a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b73e:	5cd3      	ldrb	r3, [r2, r3]
}
 800b740:	40d8      	lsrs	r0, r3
 800b742:	4770      	bx	lr
 800b744:	40023800 	.word	0x40023800
 800b748:	20000078 	.word	0x20000078
 800b74c:	0802ed98 	.word	0x0802ed98

0800b750 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b750:	4b0e      	ldr	r3, [pc, #56]	; (800b78c <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b752:	220f      	movs	r2, #15
 800b754:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b756:	689a      	ldr	r2, [r3, #8]
 800b758:	f002 0203 	and.w	r2, r2, #3
 800b75c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b75e:	689a      	ldr	r2, [r3, #8]
 800b760:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b764:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b766:	689a      	ldr	r2, [r3, #8]
 800b768:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b76c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b76e:	689b      	ldr	r3, [r3, #8]
 800b770:	08db      	lsrs	r3, r3, #3
{
 800b772:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b774:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b778:	4c05      	ldr	r4, [pc, #20]	; (800b790 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b77a:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b77c:	6823      	ldr	r3, [r4, #0]
}
 800b77e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b782:	f003 030f 	and.w	r3, r3, #15
 800b786:	600b      	str	r3, [r1, #0]
}
 800b788:	4770      	bx	lr
 800b78a:	bf00      	nop
 800b78c:	40023800 	.word	0x40023800
 800b790:	40023c00 	.word	0x40023c00

0800b794 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b794:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b796:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b798:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b79c:	b083      	sub	sp, #12
 800b79e:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b7a0:	d111      	bne.n	800b7c6 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b7a2:	f013 0f0c 	tst.w	r3, #12
 800b7a6:	d16f      	bne.n	800b888 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b7a8:	0698      	lsls	r0, r3, #26
 800b7aa:	f100 80c2 	bmi.w	800b932 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b7ae:	f013 0310 	ands.w	r3, r3, #16
 800b7b2:	f000 80bb 	beq.w	800b92c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b7b6:	4b89      	ldr	r3, [pc, #548]	; (800b9dc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b7b8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b7bc:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b7c0:	2000      	movs	r0, #0
}
 800b7c2:	b003      	add	sp, #12
 800b7c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b7c6:	4b86      	ldr	r3, [pc, #536]	; (800b9e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b7c8:	4e86      	ldr	r6, [pc, #536]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b7ca:	2200      	movs	r2, #0
 800b7cc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b7ce:	f7fd fcd7 	bl	8009180 <HAL_GetTick>
 800b7d2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b7d4:	e004      	b.n	800b7e0 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b7d6:	f7fd fcd3 	bl	8009180 <HAL_GetTick>
 800b7da:	1b43      	subs	r3, r0, r5
 800b7dc:	2b02      	cmp	r3, #2
 800b7de:	d850      	bhi.n	800b882 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b7e0:	6833      	ldr	r3, [r6, #0]
 800b7e2:	0118      	lsls	r0, r3, #4
 800b7e4:	d4f7      	bmi.n	800b7d6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b7e6:	6823      	ldr	r3, [r4, #0]
 800b7e8:	07d9      	lsls	r1, r3, #31
 800b7ea:	d506      	bpl.n	800b7fa <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b7ec:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b7f0:	0712      	lsls	r2, r2, #28
 800b7f2:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b7f6:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b7fa:	079a      	lsls	r2, r3, #30
 800b7fc:	d515      	bpl.n	800b82a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b7fe:	4979      	ldr	r1, [pc, #484]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b800:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b802:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b806:	6865      	ldr	r5, [r4, #4]
 800b808:	0612      	lsls	r2, r2, #24
 800b80a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b80e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b812:	4302      	orrs	r2, r0
 800b814:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b818:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b81c:	69e2      	ldr	r2, [r4, #28]
 800b81e:	f020 001f 	bic.w	r0, r0, #31
 800b822:	3a01      	subs	r2, #1
 800b824:	4302      	orrs	r2, r0
 800b826:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b82a:	065b      	lsls	r3, r3, #25
 800b82c:	d509      	bpl.n	800b842 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b82e:	1d20      	adds	r0, r4, #4
 800b830:	c80b      	ldmia	r0, {r0, r1, r3}
 800b832:	061b      	lsls	r3, r3, #24
 800b834:	4a6b      	ldr	r2, [pc, #428]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b836:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b83a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b83e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b842:	4b67      	ldr	r3, [pc, #412]	; (800b9e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b844:	4e67      	ldr	r6, [pc, #412]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b846:	2201      	movs	r2, #1
 800b848:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b84a:	f7fd fc99 	bl	8009180 <HAL_GetTick>
 800b84e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b850:	e004      	b.n	800b85c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b852:	f7fd fc95 	bl	8009180 <HAL_GetTick>
 800b856:	1b40      	subs	r0, r0, r5
 800b858:	2802      	cmp	r0, #2
 800b85a:	d812      	bhi.n	800b882 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b85c:	6833      	ldr	r3, [r6, #0]
 800b85e:	011f      	lsls	r7, r3, #4
 800b860:	d5f7      	bpl.n	800b852 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b862:	6823      	ldr	r3, [r4, #0]
 800b864:	e79d      	b.n	800b7a2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b866:	f7fd fc8b 	bl	8009180 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b86a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b86e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b870:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b872:	079b      	lsls	r3, r3, #30
 800b874:	f100 80a5 	bmi.w	800b9c2 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b878:	f7fd fc82 	bl	8009180 <HAL_GetTick>
 800b87c:	1b80      	subs	r0, r0, r6
 800b87e:	42b8      	cmp	r0, r7
 800b880:	d9f6      	bls.n	800b870 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b882:	2003      	movs	r0, #3
}
 800b884:	b003      	add	sp, #12
 800b886:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b888:	4b55      	ldr	r3, [pc, #340]	; (800b9e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b88a:	4e56      	ldr	r6, [pc, #344]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b88c:	2200      	movs	r2, #0
 800b88e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b890:	f7fd fc76 	bl	8009180 <HAL_GetTick>
 800b894:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b896:	e004      	b.n	800b8a2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b898:	f7fd fc72 	bl	8009180 <HAL_GetTick>
 800b89c:	1b43      	subs	r3, r0, r5
 800b89e:	2b02      	cmp	r3, #2
 800b8a0:	d8ef      	bhi.n	800b882 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b8a2:	6833      	ldr	r3, [r6, #0]
 800b8a4:	0098      	lsls	r0, r3, #2
 800b8a6:	d4f7      	bmi.n	800b898 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b8a8:	6822      	ldr	r2, [r4, #0]
 800b8aa:	0751      	lsls	r1, r2, #29
 800b8ac:	d515      	bpl.n	800b8da <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b8ae:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b8b0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b8b4:	6920      	ldr	r0, [r4, #16]
 800b8b6:	061b      	lsls	r3, r3, #24
 800b8b8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b8bc:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b8c0:	430b      	orrs	r3, r1
 800b8c2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b8c6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b8ca:	6a21      	ldr	r1, [r4, #32]
 800b8cc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b8d0:	3901      	subs	r1, #1
 800b8d2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b8d6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b8da:	0713      	lsls	r3, r2, #28
 800b8dc:	d514      	bpl.n	800b908 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b8de:	4a41      	ldr	r2, [pc, #260]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b8e0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b8e2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b8e6:	6920      	ldr	r0, [r4, #16]
 800b8e8:	071b      	lsls	r3, r3, #28
 800b8ea:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b8ee:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b8f2:	430b      	orrs	r3, r1
 800b8f4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b8f8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b8fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b8fe:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b902:	430b      	orrs	r3, r1
 800b904:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b908:	4b35      	ldr	r3, [pc, #212]	; (800b9e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b90a:	4e36      	ldr	r6, [pc, #216]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b90c:	2201      	movs	r2, #1
 800b90e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b910:	f7fd fc36 	bl	8009180 <HAL_GetTick>
 800b914:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b916:	e004      	b.n	800b922 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b918:	f7fd fc32 	bl	8009180 <HAL_GetTick>
 800b91c:	1b40      	subs	r0, r0, r5
 800b91e:	2802      	cmp	r0, #2
 800b920:	d8af      	bhi.n	800b882 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b922:	6833      	ldr	r3, [r6, #0]
 800b924:	009f      	lsls	r7, r3, #2
 800b926:	d5f7      	bpl.n	800b918 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b928:	6823      	ldr	r3, [r4, #0]
 800b92a:	e73d      	b.n	800b7a8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b92c:	4618      	mov	r0, r3
}
 800b92e:	b003      	add	sp, #12
 800b930:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b932:	4b2c      	ldr	r3, [pc, #176]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b934:	4d2c      	ldr	r5, [pc, #176]	; (800b9e8 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b936:	2200      	movs	r2, #0
 800b938:	9201      	str	r2, [sp, #4]
 800b93a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b93c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b940:	641a      	str	r2, [r3, #64]	; 0x40
 800b942:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b944:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b948:	9301      	str	r3, [sp, #4]
 800b94a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b94c:	682b      	ldr	r3, [r5, #0]
 800b94e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b952:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b954:	f7fd fc14 	bl	8009180 <HAL_GetTick>
 800b958:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b95a:	e004      	b.n	800b966 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b95c:	f7fd fc10 	bl	8009180 <HAL_GetTick>
 800b960:	1b83      	subs	r3, r0, r6
 800b962:	2b02      	cmp	r3, #2
 800b964:	d88d      	bhi.n	800b882 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b966:	682b      	ldr	r3, [r5, #0]
 800b968:	05d9      	lsls	r1, r3, #23
 800b96a:	d5f7      	bpl.n	800b95c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b96c:	4d1d      	ldr	r5, [pc, #116]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b96e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b970:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b972:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b976:	d111      	bne.n	800b99c <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b978:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b97c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b980:	d021      	beq.n	800b9c6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b982:	4918      	ldr	r1, [pc, #96]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b984:	688a      	ldr	r2, [r1, #8]
 800b986:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b98a:	608a      	str	r2, [r1, #8]
 800b98c:	4a15      	ldr	r2, [pc, #84]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b98e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b990:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b994:	430b      	orrs	r3, r1
 800b996:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b998:	6823      	ldr	r3, [r4, #0]
 800b99a:	e708      	b.n	800b7ae <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b99c:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b9a0:	4291      	cmp	r1, r2
 800b9a2:	d0eb      	beq.n	800b97c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b9a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b9a6:	4a0e      	ldr	r2, [pc, #56]	; (800b9e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b9a8:	2101      	movs	r1, #1
 800b9aa:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b9ae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b9b2:	2100      	movs	r1, #0
 800b9b4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b9b8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b9ba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b9bc:	07da      	lsls	r2, r3, #31
 800b9be:	f53f af52 	bmi.w	800b866 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b9c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b9c4:	e7d8      	b.n	800b978 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b9c6:	4807      	ldr	r0, [pc, #28]	; (800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b9c8:	6882      	ldr	r2, [r0, #8]
 800b9ca:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b9ce:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b9d2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b9d6:	430a      	orrs	r2, r1
 800b9d8:	6082      	str	r2, [r0, #8]
 800b9da:	e7d7      	b.n	800b98c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b9dc:	42471000 	.word	0x42471000
 800b9e0:	42470000 	.word	0x42470000
 800b9e4:	40023800 	.word	0x40023800
 800b9e8:	40007000 	.word	0x40007000

0800b9ec <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b9ec:	b1f0      	cbz	r0, 800ba2c <HAL_SDRAM_Init+0x40>
{
 800b9ee:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b9f0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b9f4:	460d      	mov	r5, r1
 800b9f6:	4604      	mov	r4, r0
 800b9f8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b9fc:	b18b      	cbz	r3, 800ba22 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b9fe:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba00:	2302      	movs	r3, #2
 800ba02:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800ba06:	f851 0b04 	ldr.w	r0, [r1], #4
 800ba0a:	f000 ffcd 	bl	800c9a8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800ba0e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800ba12:	4629      	mov	r1, r5
 800ba14:	f001 f806 	bl	800ca24 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800ba18:	2301      	movs	r3, #1
 800ba1a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800ba1e:	2000      	movs	r0, #0
}
 800ba20:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800ba22:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800ba26:	f7f6 fc19 	bl	800225c <HAL_SDRAM_MspInit>
 800ba2a:	e7e8      	b.n	800b9fe <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800ba2c:	2001      	movs	r0, #1
}
 800ba2e:	4770      	bx	lr

0800ba30 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800ba30:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ba32:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800ba36:	2b02      	cmp	r3, #2
{
 800ba38:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800ba3a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800ba3c:	d004      	beq.n	800ba48 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800ba3e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800ba42:	2c01      	cmp	r4, #1
 800ba44:	d001      	beq.n	800ba4a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800ba46:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ba48:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba4a:	460e      	mov	r6, r1
 800ba4c:	2302      	movs	r3, #2
 800ba4e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800ba52:	6828      	ldr	r0, [r5, #0]
 800ba54:	f001 f832 	bl	800cabc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ba58:	6833      	ldr	r3, [r6, #0]
 800ba5a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ba5c:	bf06      	itte	eq
 800ba5e:	2305      	moveq	r3, #5
 800ba60:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800ba64:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800ba68:	2000      	movs	r0, #0
}
 800ba6a:	bd70      	pop	{r4, r5, r6, pc}

0800ba6c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800ba6c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ba6e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ba72:	2b02      	cmp	r3, #2
{
 800ba74:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ba76:	b2d8      	uxtb	r0, r3
 800ba78:	d005      	beq.n	800ba86 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800ba7a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ba7e:	2b01      	cmp	r3, #1
 800ba80:	b2dd      	uxtb	r5, r3
 800ba82:	d001      	beq.n	800ba88 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800ba84:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800ba86:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba88:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ba8a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ba8c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ba90:	f001 f83e 	bl	800cb10 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ba94:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800ba98:	2000      	movs	r0, #0
}
 800ba9a:	bd38      	pop	{r3, r4, r5, pc}

0800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800ba9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baa0:	b082      	sub	sp, #8
 800baa2:	461d      	mov	r5, r3
 800baa4:	4616      	mov	r6, r2
 800baa6:	460c      	mov	r4, r1
 800baa8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800baaa:	f7fd fb69 	bl	8009180 <HAL_GetTick>
 800baae:	4435      	add	r5, r6
 800bab0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bab2:	f7fd fb65 	bl	8009180 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bab6:	4b27      	ldr	r3, [pc, #156]	; (800bb54 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800babe:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bac2:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bac4:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bac6:	1c73      	adds	r3, r6, #1
 800bac8:	6839      	ldr	r1, [r7, #0]
 800baca:	d107      	bne.n	800badc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bacc:	688b      	ldr	r3, [r1, #8]
 800bace:	ea34 0303 	bics.w	r3, r4, r3
 800bad2:	d0fb      	beq.n	800bacc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bad4:	2000      	movs	r0, #0
}
 800bad6:	b002      	add	sp, #8
 800bad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800badc:	688b      	ldr	r3, [r1, #8]
 800bade:	ea34 0303 	bics.w	r3, r4, r3
 800bae2:	d1f7      	bne.n	800bad4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bae4:	f7fd fb4c 	bl	8009180 <HAL_GetTick>
 800bae8:	eba0 0008 	sub.w	r0, r0, r8
 800baec:	42a8      	cmp	r0, r5
 800baee:	d208      	bcs.n	800bb02 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800baf0:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800baf2:	2b00      	cmp	r3, #0
      count--;
 800baf4:	9b01      	ldr	r3, [sp, #4]
 800baf6:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bafa:	bf08      	it	eq
 800bafc:	2500      	moveq	r5, #0
      count--;
 800bafe:	9301      	str	r3, [sp, #4]
 800bb00:	e7e1      	b.n	800bac6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb02:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bb06:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb08:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bb0c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bb10:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb12:	d013      	beq.n	800bb3c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bb14:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bb16:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bb1a:	d107      	bne.n	800bb2c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bb1c:	681a      	ldr	r2, [r3, #0]
 800bb1e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bb22:	601a      	str	r2, [r3, #0]
 800bb24:	681a      	ldr	r2, [r3, #0]
 800bb26:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bb2a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bb2c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bb2e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bb30:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bb34:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bb38:	2003      	movs	r0, #3
 800bb3a:	e7cc      	b.n	800bad6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb3c:	68ba      	ldr	r2, [r7, #8]
 800bb3e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bb42:	d002      	beq.n	800bb4a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bb44:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bb48:	d1e4      	bne.n	800bb14 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bb4a:	681a      	ldr	r2, [r3, #0]
 800bb4c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bb50:	601a      	str	r2, [r3, #0]
 800bb52:	e7df      	b.n	800bb14 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bb54:	20000078 	.word	0x20000078

0800bb58 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bb58:	b538      	push	{r3, r4, r5, lr}
 800bb5a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb5c:	6842      	ldr	r2, [r0, #4]
 800bb5e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bb62:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb64:	d006      	beq.n	800bb74 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bb66:	460a      	mov	r2, r1
 800bb68:	2101      	movs	r1, #1
 800bb6a:	f7ff ff97 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb6e:	b978      	cbnz	r0, 800bb90 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bb70:	2000      	movs	r0, #0
}
 800bb72:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb74:	6882      	ldr	r2, [r0, #8]
 800bb76:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bb7a:	d01c      	beq.n	800bbb6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bb7c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bb80:	d00c      	beq.n	800bb9c <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bb82:	460a      	mov	r2, r1
 800bb84:	4620      	mov	r0, r4
 800bb86:	2180      	movs	r1, #128	; 0x80
 800bb88:	f7ff ff88 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bb8c:	2800      	cmp	r0, #0
 800bb8e:	d0ef      	beq.n	800bb70 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bb90:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bb92:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bb96:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bb98:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bb9a:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bb9c:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bb9e:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bba0:	6829      	ldr	r1, [r5, #0]
 800bba2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bba6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bba8:	2101      	movs	r1, #1
 800bbaa:	f7ff ff77 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bbae:	2800      	cmp	r0, #0
 800bbb0:	d1ee      	bne.n	800bb90 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bbb2:	2000      	movs	r0, #0
 800bbb4:	e7dd      	b.n	800bb72 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bbb6:	6800      	ldr	r0, [r0, #0]
 800bbb8:	6802      	ldr	r2, [r0, #0]
 800bbba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bbbe:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bbc0:	460a      	mov	r2, r1
 800bbc2:	4620      	mov	r0, r4
 800bbc4:	2180      	movs	r1, #128	; 0x80
 800bbc6:	f7ff ff69 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bbca:	2800      	cmp	r0, #0
 800bbcc:	d0d0      	beq.n	800bb70 <SPI_EndRxTransaction+0x18>
 800bbce:	e7df      	b.n	800bb90 <SPI_EndRxTransaction+0x38>

0800bbd0 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bbd0:	2800      	cmp	r0, #0
 800bbd2:	d05c      	beq.n	800bc8e <HAL_SPI_Init+0xbe>
{
 800bbd4:	b570      	push	{r4, r5, r6, lr}
 800bbd6:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bbd8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bbda:	2800      	cmp	r0, #0
 800bbdc:	d047      	beq.n	800bc6e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bbde:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bbe0:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bbe4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bbe8:	2200      	movs	r2, #0
 800bbea:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bbec:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bbf0:	2b00      	cmp	r3, #0
 800bbf2:	d042      	beq.n	800bc7a <HAL_SPI_Init+0xaa>
 800bbf4:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800bbf6:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bbf8:	68a5      	ldr	r5, [r4, #8]
 800bbfa:	69a2      	ldr	r2, [r4, #24]
 800bbfc:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800bbfe:	2302      	movs	r3, #2
 800bc00:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bc04:	680b      	ldr	r3, [r1, #0]
 800bc06:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc0a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc0c:	6863      	ldr	r3, [r4, #4]
 800bc0e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bc12:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bc16:	432b      	orrs	r3, r5
 800bc18:	68e5      	ldr	r5, [r4, #12]
 800bc1a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bc1e:	432b      	orrs	r3, r5
 800bc20:	6925      	ldr	r5, [r4, #16]
 800bc22:	f005 0502 	and.w	r5, r5, #2
 800bc26:	432b      	orrs	r3, r5
 800bc28:	6965      	ldr	r5, [r4, #20]
 800bc2a:	f005 0501 	and.w	r5, r5, #1
 800bc2e:	432b      	orrs	r3, r5
 800bc30:	69e5      	ldr	r5, [r4, #28]
 800bc32:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bc36:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bc3a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bc3e:	4333      	orrs	r3, r6
 800bc40:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc42:	0c12      	lsrs	r2, r2, #16
 800bc44:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc48:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc4c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc50:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc54:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc56:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc58:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc5a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bc5c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc5e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bc62:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bc64:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bc66:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bc68:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bc6c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc6e:	6863      	ldr	r3, [r4, #4]
 800bc70:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bc74:	d0b6      	beq.n	800bbe4 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bc76:	61e0      	str	r0, [r4, #28]
 800bc78:	e7b4      	b.n	800bbe4 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bc7a:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bc7c:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bc80:	f7f6 fa66 	bl	8002150 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bc84:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bc88:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bc8c:	e7b3      	b.n	800bbf6 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bc8e:	2001      	movs	r0, #1
}
 800bc90:	4770      	bx	lr
 800bc92:	bf00      	nop

0800bc94 <HAL_SPI_Transmit>:
{
 800bc94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc98:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bc9a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bc9e:	2801      	cmp	r0, #1
{
 800bca0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bca2:	f000 8085 	beq.w	800bdb0 <HAL_SPI_Transmit+0x11c>
 800bca6:	461d      	mov	r5, r3
 800bca8:	2301      	movs	r3, #1
 800bcaa:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bcae:	4688      	mov	r8, r1
 800bcb0:	4617      	mov	r7, r2
 800bcb2:	f7fd fa65 	bl	8009180 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bcb6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bcba:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bcbc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bcbe:	b2d8      	uxtb	r0, r3
 800bcc0:	d009      	beq.n	800bcd6 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bcc2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bcc4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bcc6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bcc8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bccc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bcd0:	b002      	add	sp, #8
 800bcd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bcd6:	f1b8 0f00 	cmp.w	r8, #0
 800bcda:	d0f3      	beq.n	800bcc4 <HAL_SPI_Transmit+0x30>
 800bcdc:	2f00      	cmp	r7, #0
 800bcde:	d0f1      	beq.n	800bcc4 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bce0:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bce2:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bce4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bce8:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bcea:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcec:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bcf0:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bcf4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcf8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bcfa:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bcfc:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bcfe:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bd00:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bd02:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd04:	f000 8085 	beq.w	800be12 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bd08:	6803      	ldr	r3, [r0, #0]
 800bd0a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bd0c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bd0e:	d403      	bmi.n	800bd18 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bd10:	6803      	ldr	r3, [r0, #0]
 800bd12:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bd16:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bd18:	68e3      	ldr	r3, [r4, #12]
 800bd1a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bd1e:	d04b      	beq.n	800bdb8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bd20:	6863      	ldr	r3, [r4, #4]
 800bd22:	2b00      	cmp	r3, #0
 800bd24:	f000 8097 	beq.w	800be56 <HAL_SPI_Transmit+0x1c2>
 800bd28:	2f01      	cmp	r7, #1
 800bd2a:	f000 8094 	beq.w	800be56 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bd2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd30:	b29b      	uxth	r3, r3
 800bd32:	b1ab      	cbz	r3, 800bd60 <HAL_SPI_Transmit+0xcc>
 800bd34:	1c68      	adds	r0, r5, #1
 800bd36:	f040 8083 	bne.w	800be40 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd3a:	6823      	ldr	r3, [r4, #0]
 800bd3c:	689a      	ldr	r2, [r3, #8]
 800bd3e:	0791      	lsls	r1, r2, #30
 800bd40:	f140 8094 	bpl.w	800be6c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd44:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bd46:	7812      	ldrb	r2, [r2, #0]
 800bd48:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bd4a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd4e:	3901      	subs	r1, #1
 800bd50:	b289      	uxth	r1, r1
 800bd52:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd54:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd56:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bd58:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd5a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bd5c:	2900      	cmp	r1, #0
 800bd5e:	d1ec      	bne.n	800bd3a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd60:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bd62:	4b5b      	ldr	r3, [pc, #364]	; (800bed0 <HAL_SPI_Transmit+0x23c>)
 800bd64:	4a5b      	ldr	r2, [pc, #364]	; (800bed4 <HAL_SPI_Transmit+0x240>)
 800bd66:	681b      	ldr	r3, [r3, #0]
 800bd68:	fba2 2303 	umull	r2, r3, r2, r3
 800bd6c:	0d5b      	lsrs	r3, r3, #21
 800bd6e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bd72:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd76:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bd7a:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bd7c:	d107      	bne.n	800bd8e <HAL_SPI_Transmit+0xfa>
 800bd7e:	e098      	b.n	800beb2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bd80:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bd82:	6822      	ldr	r2, [r4, #0]
      count--;
 800bd84:	3b01      	subs	r3, #1
 800bd86:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bd88:	6893      	ldr	r3, [r2, #8]
 800bd8a:	061b      	lsls	r3, r3, #24
 800bd8c:	d502      	bpl.n	800bd94 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bd8e:	9b01      	ldr	r3, [sp, #4]
 800bd90:	2b00      	cmp	r3, #0
 800bd92:	d1f5      	bne.n	800bd80 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bd94:	68a3      	ldr	r3, [r4, #8]
 800bd96:	b933      	cbnz	r3, 800bda6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bd98:	6822      	ldr	r2, [r4, #0]
 800bd9a:	9300      	str	r3, [sp, #0]
 800bd9c:	68d3      	ldr	r3, [r2, #12]
 800bd9e:	9300      	str	r3, [sp, #0]
 800bda0:	6893      	ldr	r3, [r2, #8]
 800bda2:	9300      	str	r3, [sp, #0]
 800bda4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bda6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bda8:	3800      	subs	r0, #0
 800bdaa:	bf18      	it	ne
 800bdac:	2001      	movne	r0, #1
error:
 800bdae:	e789      	b.n	800bcc4 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bdb0:	2002      	movs	r0, #2
}
 800bdb2:	b002      	add	sp, #8
 800bdb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bdb8:	6861      	ldr	r1, [r4, #4]
 800bdba:	2900      	cmp	r1, #0
 800bdbc:	d176      	bne.n	800beac <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bdbe:	4643      	mov	r3, r8
 800bdc0:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bdc4:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bdc6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bdc8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdca:	3b01      	subs	r3, #1
 800bdcc:	b29b      	uxth	r3, r3
 800bdce:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bdd0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdd2:	b29b      	uxth	r3, r3
 800bdd4:	2b00      	cmp	r3, #0
 800bdd6:	d0c4      	beq.n	800bd62 <HAL_SPI_Transmit+0xce>
 800bdd8:	1c6b      	adds	r3, r5, #1
 800bdda:	d15e      	bne.n	800be9a <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bddc:	6883      	ldr	r3, [r0, #8]
 800bdde:	079f      	lsls	r7, r3, #30
 800bde0:	d50f      	bpl.n	800be02 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bde2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bde4:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bde8:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bdea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bdec:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bdee:	3b01      	subs	r3, #1
 800bdf0:	b29b      	uxth	r3, r3
 800bdf2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bdf4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdf6:	b29b      	uxth	r3, r3
 800bdf8:	2b00      	cmp	r3, #0
 800bdfa:	d0b1      	beq.n	800bd60 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bdfc:	6883      	ldr	r3, [r0, #8]
 800bdfe:	079f      	lsls	r7, r3, #30
 800be00:	d4ef      	bmi.n	800bde2 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be02:	f7fd f9bd 	bl	8009180 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800be06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be08:	b29b      	uxth	r3, r3
 800be0a:	2b00      	cmp	r3, #0
 800be0c:	d0a8      	beq.n	800bd60 <HAL_SPI_Transmit+0xcc>
 800be0e:	6820      	ldr	r0, [r4, #0]
 800be10:	e7e4      	b.n	800bddc <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800be12:	6803      	ldr	r3, [r0, #0]
 800be14:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800be18:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800be1a:	6803      	ldr	r3, [r0, #0]
 800be1c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800be20:	6003      	str	r3, [r0, #0]
 800be22:	e771      	b.n	800bd08 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800be24:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800be26:	7812      	ldrb	r2, [r2, #0]
 800be28:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800be2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be2e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be30:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be32:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800be34:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be36:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be3a:	b29b      	uxth	r3, r3
 800be3c:	2b00      	cmp	r3, #0
 800be3e:	d08f      	beq.n	800bd60 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be40:	6823      	ldr	r3, [r4, #0]
 800be42:	689a      	ldr	r2, [r3, #8]
 800be44:	0792      	lsls	r2, r2, #30
 800be46:	d4ed      	bmi.n	800be24 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be48:	f7fd f99a 	bl	8009180 <HAL_GetTick>
 800be4c:	1b80      	subs	r0, r0, r6
 800be4e:	42a8      	cmp	r0, r5
 800be50:	d3f2      	bcc.n	800be38 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800be52:	2003      	movs	r0, #3
 800be54:	e736      	b.n	800bcc4 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800be56:	f898 3000 	ldrb.w	r3, [r8]
 800be5a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800be5c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800be60:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be62:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800be64:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800be66:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800be68:	86e3      	strh	r3, [r4, #54]	; 0x36
 800be6a:	e760      	b.n	800bd2e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be6c:	f7fd f988 	bl	8009180 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800be70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be72:	b29b      	uxth	r3, r3
 800be74:	2b00      	cmp	r3, #0
 800be76:	f47f af60 	bne.w	800bd3a <HAL_SPI_Transmit+0xa6>
 800be7a:	e771      	b.n	800bd60 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800be7c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800be7e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800be82:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800be84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800be86:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800be88:	3b01      	subs	r3, #1
 800be8a:	b29b      	uxth	r3, r3
 800be8c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800be8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be90:	b29b      	uxth	r3, r3
 800be92:	2b00      	cmp	r3, #0
 800be94:	f43f af64 	beq.w	800bd60 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800be98:	6822      	ldr	r2, [r4, #0]
 800be9a:	6893      	ldr	r3, [r2, #8]
 800be9c:	0799      	lsls	r1, r3, #30
 800be9e:	d4ed      	bmi.n	800be7c <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bea0:	f7fd f96e 	bl	8009180 <HAL_GetTick>
 800bea4:	1b80      	subs	r0, r0, r6
 800bea6:	42a8      	cmp	r0, r5
 800bea8:	d3f1      	bcc.n	800be8e <HAL_SPI_Transmit+0x1fa>
 800beaa:	e7d2      	b.n	800be52 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800beac:	2f01      	cmp	r7, #1
 800beae:	d18f      	bne.n	800bdd0 <HAL_SPI_Transmit+0x13c>
 800beb0:	e785      	b.n	800bdbe <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800beb2:	4633      	mov	r3, r6
 800beb4:	462a      	mov	r2, r5
 800beb6:	2180      	movs	r1, #128	; 0x80
 800beb8:	4620      	mov	r0, r4
 800beba:	f7ff fdef 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bebe:	2800      	cmp	r0, #0
 800bec0:	f43f af68 	beq.w	800bd94 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bec4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bec6:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bec8:	4313      	orrs	r3, r2
 800beca:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800becc:	6562      	str	r2, [r4, #84]	; 0x54
 800bece:	e761      	b.n	800bd94 <HAL_SPI_Transmit+0x100>
 800bed0:	20000078 	.word	0x20000078
 800bed4:	165e9f81 	.word	0x165e9f81

0800bed8 <HAL_SPI_TransmitReceive>:
{
 800bed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bedc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bede:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bee2:	2801      	cmp	r0, #1
{
 800bee4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bee6:	f000 80ac 	beq.w	800c042 <HAL_SPI_TransmitReceive+0x16a>
 800beea:	461e      	mov	r6, r3
 800beec:	2301      	movs	r3, #1
 800beee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bef2:	4690      	mov	r8, r2
 800bef4:	460f      	mov	r7, r1
 800bef6:	f7fd f943 	bl	8009180 <HAL_GetTick>
 800befa:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800befc:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bf00:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bf02:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bf04:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bf06:	d011      	beq.n	800bf2c <HAL_SPI_TransmitReceive+0x54>
 800bf08:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bf0c:	d009      	beq.n	800bf22 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bf0e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bf10:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bf12:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bf14:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bf18:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bf1c:	b002      	add	sp, #8
 800bf1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800bf22:	68a1      	ldr	r1, [r4, #8]
 800bf24:	2900      	cmp	r1, #0
 800bf26:	d1f2      	bne.n	800bf0e <HAL_SPI_TransmitReceive+0x36>
 800bf28:	2a04      	cmp	r2, #4
 800bf2a:	d1f0      	bne.n	800bf0e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800bf2c:	2f00      	cmp	r7, #0
 800bf2e:	f000 808c 	beq.w	800c04a <HAL_SPI_TransmitReceive+0x172>
 800bf32:	f1b8 0f00 	cmp.w	r8, #0
 800bf36:	f000 8088 	beq.w	800c04a <HAL_SPI_TransmitReceive+0x172>
 800bf3a:	2e00      	cmp	r6, #0
 800bf3c:	f000 8085 	beq.w	800c04a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bf40:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800bf44:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bf48:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800bf4a:	bf1c      	itt	ne
 800bf4c:	2205      	movne	r2, #5
 800bf4e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf52:	2200      	movs	r2, #0
 800bf54:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800bf56:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf5a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800bf5c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800bf5e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf60:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800bf62:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf64:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800bf66:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800bf68:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf6a:	d403      	bmi.n	800bf74 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800bf6c:	6811      	ldr	r1, [r2, #0]
 800bf6e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bf72:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bf74:	68e1      	ldr	r1, [r4, #12]
 800bf76:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800bf7a:	f000 809e 	beq.w	800c0ba <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf7e:	2b00      	cmp	r3, #0
 800bf80:	f000 8091 	beq.w	800c0a6 <HAL_SPI_TransmitReceive+0x1ce>
 800bf84:	2e01      	cmp	r6, #1
 800bf86:	f000 808e 	beq.w	800c0a6 <HAL_SPI_TransmitReceive+0x1ce>
 800bf8a:	9b08      	ldr	r3, [sp, #32]
 800bf8c:	3301      	adds	r3, #1
        txallowed = 1U;
 800bf8e:	f04f 0601 	mov.w	r6, #1
 800bf92:	d028      	beq.n	800bfe6 <HAL_SPI_TransmitReceive+0x10e>
 800bf94:	e05b      	b.n	800c04e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf96:	6821      	ldr	r1, [r4, #0]
 800bf98:	688b      	ldr	r3, [r1, #8]
 800bf9a:	0798      	lsls	r0, r3, #30
 800bf9c:	d50f      	bpl.n	800bfbe <HAL_SPI_TransmitReceive+0xe6>
 800bf9e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bfa0:	b29b      	uxth	r3, r3
 800bfa2:	b163      	cbz	r3, 800bfbe <HAL_SPI_TransmitReceive+0xe6>
 800bfa4:	b15e      	cbz	r6, 800bfbe <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bfa6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bfa8:	781b      	ldrb	r3, [r3, #0]
 800bfaa:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800bfac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bfae:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bfb0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800bfb2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bfb4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bfb6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800bfb8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bfba:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bfbc:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bfbe:	688a      	ldr	r2, [r1, #8]
 800bfc0:	f012 0201 	ands.w	r2, r2, #1
 800bfc4:	d00d      	beq.n	800bfe2 <HAL_SPI_TransmitReceive+0x10a>
 800bfc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bfc8:	b29b      	uxth	r3, r3
 800bfca:	b153      	cbz	r3, 800bfe2 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bfcc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bfce:	68c9      	ldr	r1, [r1, #12]
 800bfd0:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800bfd2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bfd4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfd6:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800bfd8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bfda:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800bfdc:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfde:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bfe0:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bfe2:	f7fd f8cd 	bl	8009180 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bfe6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bfe8:	b292      	uxth	r2, r2
 800bfea:	2a00      	cmp	r2, #0
 800bfec:	d1d3      	bne.n	800bf96 <HAL_SPI_TransmitReceive+0xbe>
 800bfee:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bff0:	b29b      	uxth	r3, r3
 800bff2:	2b00      	cmp	r3, #0
 800bff4:	d1cf      	bne.n	800bf96 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bff6:	4b79      	ldr	r3, [pc, #484]	; (800c1dc <HAL_SPI_TransmitReceive+0x304>)
 800bff8:	4a79      	ldr	r2, [pc, #484]	; (800c1e0 <HAL_SPI_TransmitReceive+0x308>)
 800bffa:	681b      	ldr	r3, [r3, #0]
 800bffc:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c000:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c002:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c006:	0d5b      	lsrs	r3, r3, #21
 800c008:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c00c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c010:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c012:	d107      	bne.n	800c024 <HAL_SPI_TransmitReceive+0x14c>
 800c014:	e0d2      	b.n	800c1bc <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c016:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c018:	6822      	ldr	r2, [r4, #0]
      count--;
 800c01a:	3b01      	subs	r3, #1
 800c01c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c01e:	6893      	ldr	r3, [r2, #8]
 800c020:	061b      	lsls	r3, r3, #24
 800c022:	d502      	bpl.n	800c02a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c024:	9b01      	ldr	r3, [sp, #4]
 800c026:	2b00      	cmp	r3, #0
 800c028:	d1f5      	bne.n	800c016 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c02a:	68a0      	ldr	r0, [r4, #8]
 800c02c:	2800      	cmp	r0, #0
 800c02e:	f040 8082 	bne.w	800c136 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c032:	6823      	ldr	r3, [r4, #0]
 800c034:	9000      	str	r0, [sp, #0]
 800c036:	68da      	ldr	r2, [r3, #12]
 800c038:	9200      	str	r2, [sp, #0]
 800c03a:	689b      	ldr	r3, [r3, #8]
 800c03c:	9300      	str	r3, [sp, #0]
 800c03e:	9b00      	ldr	r3, [sp, #0]
 800c040:	e766      	b.n	800bf10 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c042:	2002      	movs	r0, #2
}
 800c044:	b002      	add	sp, #8
 800c046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c04a:	2001      	movs	r0, #1
 800c04c:	e760      	b.n	800bf10 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c04e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c050:	b29b      	uxth	r3, r3
 800c052:	b91b      	cbnz	r3, 800c05c <HAL_SPI_TransmitReceive+0x184>
 800c054:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c056:	b29b      	uxth	r3, r3
 800c058:	2b00      	cmp	r3, #0
 800c05a:	d0cc      	beq.n	800bff6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c05c:	6822      	ldr	r2, [r4, #0]
 800c05e:	6893      	ldr	r3, [r2, #8]
 800c060:	0799      	lsls	r1, r3, #30
 800c062:	d50f      	bpl.n	800c084 <HAL_SPI_TransmitReceive+0x1ac>
 800c064:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c066:	b29b      	uxth	r3, r3
 800c068:	b163      	cbz	r3, 800c084 <HAL_SPI_TransmitReceive+0x1ac>
 800c06a:	b15e      	cbz	r6, 800c084 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c06c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c06e:	781b      	ldrb	r3, [r3, #0]
 800c070:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c072:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c074:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c076:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c078:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c07a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c07c:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c07e:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c080:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c082:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c084:	6893      	ldr	r3, [r2, #8]
 800c086:	f013 0301 	ands.w	r3, r3, #1
 800c08a:	d004      	beq.n	800c096 <HAL_SPI_TransmitReceive+0x1be>
 800c08c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c08e:	b289      	uxth	r1, r1
 800c090:	2900      	cmp	r1, #0
 800c092:	f040 8087 	bne.w	800c1a4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c096:	f7fd f873 	bl	8009180 <HAL_GetTick>
 800c09a:	9b08      	ldr	r3, [sp, #32]
 800c09c:	1b40      	subs	r0, r0, r5
 800c09e:	4298      	cmp	r0, r3
 800c0a0:	d3d5      	bcc.n	800c04e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c0a2:	2003      	movs	r0, #3
 800c0a4:	e734      	b.n	800bf10 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c0a6:	783b      	ldrb	r3, [r7, #0]
 800c0a8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c0aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0ae:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0b0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c0b2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0b4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0b6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c0b8:	e767      	b.n	800bf8a <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c0ba:	2b00      	cmp	r3, #0
 800c0bc:	d13d      	bne.n	800c13a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0be:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c0c2:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c0c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0c6:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0c8:	3b01      	subs	r3, #1
 800c0ca:	b29b      	uxth	r3, r3
 800c0cc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c0ce:	9b08      	ldr	r3, [sp, #32]
 800c0d0:	3301      	adds	r3, #1
{
 800c0d2:	f04f 0601 	mov.w	r6, #1
 800c0d6:	d025      	beq.n	800c124 <HAL_SPI_TransmitReceive+0x24c>
 800c0d8:	e032      	b.n	800c140 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c0da:	6823      	ldr	r3, [r4, #0]
 800c0dc:	689a      	ldr	r2, [r3, #8]
 800c0de:	0792      	lsls	r2, r2, #30
 800c0e0:	d50d      	bpl.n	800c0fe <HAL_SPI_TransmitReceive+0x226>
 800c0e2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c0e4:	b292      	uxth	r2, r2
 800c0e6:	b152      	cbz	r2, 800c0fe <HAL_SPI_TransmitReceive+0x226>
 800c0e8:	b14e      	cbz	r6, 800c0fe <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0ea:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c0ec:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c0f0:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c0f2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0f4:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0f6:	3a01      	subs	r2, #1
 800c0f8:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c0fa:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c0fc:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c0fe:	689a      	ldr	r2, [r3, #8]
 800c100:	f012 0201 	ands.w	r2, r2, #1
 800c104:	d00c      	beq.n	800c120 <HAL_SPI_TransmitReceive+0x248>
 800c106:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c108:	b289      	uxth	r1, r1
 800c10a:	b149      	cbz	r1, 800c120 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c10c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c10e:	68db      	ldr	r3, [r3, #12]
 800c110:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c114:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c116:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c118:	3b01      	subs	r3, #1
 800c11a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c11c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c11e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c120:	f7fd f82e 	bl	8009180 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c124:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c126:	b29b      	uxth	r3, r3
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d1d6      	bne.n	800c0da <HAL_SPI_TransmitReceive+0x202>
 800c12c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c12e:	b29b      	uxth	r3, r3
 800c130:	2b00      	cmp	r3, #0
 800c132:	d1d2      	bne.n	800c0da <HAL_SPI_TransmitReceive+0x202>
 800c134:	e75f      	b.n	800bff6 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c136:	2000      	movs	r0, #0
 800c138:	e6ea      	b.n	800bf10 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c13a:	2e01      	cmp	r6, #1
 800c13c:	d1c7      	bne.n	800c0ce <HAL_SPI_TransmitReceive+0x1f6>
 800c13e:	e7be      	b.n	800c0be <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c140:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c142:	b29b      	uxth	r3, r3
 800c144:	b923      	cbnz	r3, 800c150 <HAL_SPI_TransmitReceive+0x278>
 800c146:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c148:	b29b      	uxth	r3, r3
 800c14a:	2b00      	cmp	r3, #0
 800c14c:	f43f af53 	beq.w	800bff6 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c150:	6822      	ldr	r2, [r4, #0]
 800c152:	6893      	ldr	r3, [r2, #8]
 800c154:	079f      	lsls	r7, r3, #30
 800c156:	d50d      	bpl.n	800c174 <HAL_SPI_TransmitReceive+0x29c>
 800c158:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c15a:	b29b      	uxth	r3, r3
 800c15c:	b153      	cbz	r3, 800c174 <HAL_SPI_TransmitReceive+0x29c>
 800c15e:	b14e      	cbz	r6, 800c174 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c160:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c162:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c166:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c168:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c16a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c16c:	3b01      	subs	r3, #1
 800c16e:	b29b      	uxth	r3, r3
 800c170:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c172:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c174:	6893      	ldr	r3, [r2, #8]
 800c176:	f013 0301 	ands.w	r3, r3, #1
 800c17a:	d00c      	beq.n	800c196 <HAL_SPI_TransmitReceive+0x2be>
 800c17c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c17e:	b289      	uxth	r1, r1
 800c180:	b149      	cbz	r1, 800c196 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c182:	68d1      	ldr	r1, [r2, #12]
 800c184:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c186:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c18a:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c18c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c18e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c190:	3b01      	subs	r3, #1
 800c192:	b29b      	uxth	r3, r3
 800c194:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c196:	f7fc fff3 	bl	8009180 <HAL_GetTick>
 800c19a:	9b08      	ldr	r3, [sp, #32]
 800c19c:	1b40      	subs	r0, r0, r5
 800c19e:	4298      	cmp	r0, r3
 800c1a0:	d3ce      	bcc.n	800c140 <HAL_SPI_TransmitReceive+0x268>
 800c1a2:	e77e      	b.n	800c0a2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c1a4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c1a6:	68d2      	ldr	r2, [r2, #12]
 800c1a8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c1aa:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c1ac:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1ae:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c1b0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c1b2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c1b4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1b6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c1b8:	461e      	mov	r6, r3
 800c1ba:	e76c      	b.n	800c096 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c1bc:	9a08      	ldr	r2, [sp, #32]
 800c1be:	462b      	mov	r3, r5
 800c1c0:	2180      	movs	r1, #128	; 0x80
 800c1c2:	4620      	mov	r0, r4
 800c1c4:	f7ff fc6a 	bl	800ba9c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c1c8:	2800      	cmp	r0, #0
 800c1ca:	f43f af2e 	beq.w	800c02a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1d0:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c1d2:	4313      	orrs	r3, r2
 800c1d4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c1d6:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1d8:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c1da:	e699      	b.n	800bf10 <HAL_SPI_TransmitReceive+0x38>
 800c1dc:	20000078 	.word	0x20000078
 800c1e0:	165e9f81 	.word	0x165e9f81

0800c1e4 <HAL_SPI_Receive>:
{
 800c1e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1e8:	6846      	ldr	r6, [r0, #4]
 800c1ea:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c1ee:	b082      	sub	sp, #8
 800c1f0:	4604      	mov	r4, r0
 800c1f2:	4690      	mov	r8, r2
 800c1f4:	461d      	mov	r5, r3
 800c1f6:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1f8:	d06e      	beq.n	800c2d8 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c1fa:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c1fe:	2b01      	cmp	r3, #1
 800c200:	d076      	beq.n	800c2f0 <HAL_SPI_Receive+0x10c>
 800c202:	2301      	movs	r3, #1
 800c204:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c208:	f7fc ffba 	bl	8009180 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c20c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c210:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c214:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c216:	fa5f f08c 	uxtb.w	r0, ip
 800c21a:	d009      	beq.n	800c230 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c21c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c21e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c220:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c222:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c226:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c22a:	b002      	add	sp, #8
 800c22c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c230:	2f00      	cmp	r7, #0
 800c232:	d0f4      	beq.n	800c21e <HAL_SPI_Receive+0x3a>
 800c234:	f1b8 0f00 	cmp.w	r8, #0
 800c238:	d0f1      	beq.n	800c21e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c23a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c23c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c23e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c242:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c244:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c248:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c24c:	f04f 0104 	mov.w	r1, #4
 800c250:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c254:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c258:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c25a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c25c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c25e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c262:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c264:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c266:	d107      	bne.n	800c278 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c268:	6811      	ldr	r1, [r2, #0]
 800c26a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c26e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c270:	6811      	ldr	r1, [r2, #0]
 800c272:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c276:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c278:	6811      	ldr	r1, [r2, #0]
 800c27a:	0648      	lsls	r0, r1, #25
 800c27c:	d403      	bmi.n	800c286 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c27e:	6811      	ldr	r1, [r2, #0]
 800c280:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c284:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c286:	68e1      	ldr	r1, [r4, #12]
 800c288:	2900      	cmp	r1, #0
 800c28a:	d054      	beq.n	800c336 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c28c:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c28e:	b289      	uxth	r1, r1
 800c290:	b1a9      	cbz	r1, 800c2be <HAL_SPI_Receive+0xda>
 800c292:	1c69      	adds	r1, r5, #1
 800c294:	d13e      	bne.n	800c314 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c296:	6893      	ldr	r3, [r2, #8]
 800c298:	07db      	lsls	r3, r3, #31
 800c29a:	d544      	bpl.n	800c326 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c29c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c29e:	68d1      	ldr	r1, [r2, #12]
 800c2a0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c2a4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c2a8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c2aa:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c2ae:	fa1f fc8c 	uxth.w	ip, ip
 800c2b2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c2b6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c2b8:	b29b      	uxth	r3, r3
 800c2ba:	2b00      	cmp	r3, #0
 800c2bc:	d1eb      	bne.n	800c296 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c2be:	4632      	mov	r2, r6
 800c2c0:	4629      	mov	r1, r5
 800c2c2:	4620      	mov	r0, r4
 800c2c4:	f7ff fc48 	bl	800bb58 <SPI_EndRxTransaction>
 800c2c8:	b108      	cbz	r0, 800c2ce <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c2ca:	2320      	movs	r3, #32
 800c2cc:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c2ce:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c2d0:	3800      	subs	r0, #0
 800c2d2:	bf18      	it	ne
 800c2d4:	2001      	movne	r0, #1
error :
 800c2d6:	e7a2      	b.n	800c21e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c2d8:	6883      	ldr	r3, [r0, #8]
 800c2da:	2b00      	cmp	r3, #0
 800c2dc:	d18d      	bne.n	800c1fa <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2de:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c2e0:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2e2:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c2e4:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c2e8:	460a      	mov	r2, r1
 800c2ea:	f7ff fdf5 	bl	800bed8 <HAL_SPI_TransmitReceive>
 800c2ee:	e79c      	b.n	800c22a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c2f0:	2002      	movs	r0, #2
}
 800c2f2:	b002      	add	sp, #8
 800c2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c2f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c2fa:	68db      	ldr	r3, [r3, #12]
 800c2fc:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c300:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c302:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c304:	3b01      	subs	r3, #1
 800c306:	b29b      	uxth	r3, r3
 800c308:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c30a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c30c:	b29b      	uxth	r3, r3
 800c30e:	2b00      	cmp	r3, #0
 800c310:	d0d5      	beq.n	800c2be <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c312:	6823      	ldr	r3, [r4, #0]
 800c314:	689a      	ldr	r2, [r3, #8]
 800c316:	07d2      	lsls	r2, r2, #31
 800c318:	d4ee      	bmi.n	800c2f8 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c31a:	f7fc ff31 	bl	8009180 <HAL_GetTick>
 800c31e:	1b80      	subs	r0, r0, r6
 800c320:	42a8      	cmp	r0, r5
 800c322:	d243      	bcs.n	800c3ac <HAL_SPI_Receive+0x1c8>
 800c324:	e7f1      	b.n	800c30a <HAL_SPI_Receive+0x126>
 800c326:	f7fc ff2b 	bl	8009180 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c32a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c32c:	b29b      	uxth	r3, r3
 800c32e:	2b00      	cmp	r3, #0
 800c330:	d0c5      	beq.n	800c2be <HAL_SPI_Receive+0xda>
 800c332:	6822      	ldr	r2, [r4, #0]
 800c334:	e7af      	b.n	800c296 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c336:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c338:	b292      	uxth	r2, r2
 800c33a:	2a00      	cmp	r2, #0
 800c33c:	d0bf      	beq.n	800c2be <HAL_SPI_Receive+0xda>
 800c33e:	1c6f      	adds	r7, r5, #1
 800c340:	d013      	beq.n	800c36a <HAL_SPI_Receive+0x186>
 800c342:	e02b      	b.n	800c39c <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c344:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c346:	7b1b      	ldrb	r3, [r3, #12]
 800c348:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c34a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c34e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c350:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c354:	fa1f fc8c 	uxth.w	ip, ip
 800c358:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c35c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c35e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c360:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c362:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c364:	2b00      	cmp	r3, #0
 800c366:	d0aa      	beq.n	800c2be <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c368:	6823      	ldr	r3, [r4, #0]
 800c36a:	689a      	ldr	r2, [r3, #8]
 800c36c:	07d0      	lsls	r0, r2, #31
 800c36e:	d4e9      	bmi.n	800c344 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c370:	f7fc ff06 	bl	8009180 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c374:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c376:	b29b      	uxth	r3, r3
 800c378:	2b00      	cmp	r3, #0
 800c37a:	d1f5      	bne.n	800c368 <HAL_SPI_Receive+0x184>
 800c37c:	e79f      	b.n	800c2be <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c37e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c380:	7b1b      	ldrb	r3, [r3, #12]
 800c382:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c384:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c386:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c388:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c38a:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c38c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c38e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c390:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c392:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c394:	b29b      	uxth	r3, r3
 800c396:	2b00      	cmp	r3, #0
 800c398:	d091      	beq.n	800c2be <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c39a:	6823      	ldr	r3, [r4, #0]
 800c39c:	689a      	ldr	r2, [r3, #8]
 800c39e:	07d1      	lsls	r1, r2, #31
 800c3a0:	d4ed      	bmi.n	800c37e <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c3a2:	f7fc feed 	bl	8009180 <HAL_GetTick>
 800c3a6:	1b80      	subs	r0, r0, r6
 800c3a8:	42a8      	cmp	r0, r5
 800c3aa:	d3f2      	bcc.n	800c392 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c3ac:	2003      	movs	r0, #3
 800c3ae:	e736      	b.n	800c21e <HAL_SPI_Receive+0x3a>

0800c3b0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c3b0:	2800      	cmp	r0, #0
 800c3b2:	f000 8087 	beq.w	800c4c4 <HAL_TIM_Base_Init+0x114>
{
 800c3b6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c3b8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c3bc:	4604      	mov	r4, r0
 800c3be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	d079      	beq.n	800c4ba <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c3c6:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c3c8:	493f      	ldr	r1, [pc, #252]	; (800c4c8 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c3ca:	2302      	movs	r3, #2
 800c3cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c3d0:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c3d2:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c3d4:	d05d      	beq.n	800c492 <HAL_TIM_Base_Init+0xe2>
 800c3d6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c3da:	d031      	beq.n	800c440 <HAL_TIM_Base_Init+0x90>
 800c3dc:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c3e0:	428a      	cmp	r2, r1
 800c3e2:	d02d      	beq.n	800c440 <HAL_TIM_Base_Init+0x90>
 800c3e4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3e8:	428a      	cmp	r2, r1
 800c3ea:	d029      	beq.n	800c440 <HAL_TIM_Base_Init+0x90>
 800c3ec:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c3f0:	428a      	cmp	r2, r1
 800c3f2:	d025      	beq.n	800c440 <HAL_TIM_Base_Init+0x90>
 800c3f4:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c3f8:	428a      	cmp	r2, r1
 800c3fa:	d04a      	beq.n	800c492 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c3fc:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c400:	428a      	cmp	r2, r1
 800c402:	d021      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
 800c404:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c408:	428a      	cmp	r2, r1
 800c40a:	d01d      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
 800c40c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c410:	428a      	cmp	r2, r1
 800c412:	d019      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
 800c414:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c418:	428a      	cmp	r2, r1
 800c41a:	d015      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
 800c41c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c420:	428a      	cmp	r2, r1
 800c422:	d011      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
 800c424:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c428:	428a      	cmp	r2, r1
 800c42a:	d00d      	beq.n	800c448 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c42c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c42e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c430:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c434:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c436:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c438:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c43a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c43c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c43e:	e010      	b.n	800c462 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c440:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c442:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c446:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c448:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c44a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c44c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c450:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c452:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c456:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c458:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c45a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c45c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c45e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c460:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c462:	2301      	movs	r3, #1
 800c464:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c466:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c46a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c46e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c472:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c476:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c47a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c47e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c482:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c486:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c48a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c48e:	2000      	movs	r0, #0
}
 800c490:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c492:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c494:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c496:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c49a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c49c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c4a0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c4a2:	69a1      	ldr	r1, [r4, #24]
 800c4a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c4a8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c4aa:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c4ac:	68e3      	ldr	r3, [r4, #12]
 800c4ae:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c4b0:	6863      	ldr	r3, [r4, #4]
 800c4b2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c4b4:	6963      	ldr	r3, [r4, #20]
 800c4b6:	6313      	str	r3, [r2, #48]	; 0x30
 800c4b8:	e7d3      	b.n	800c462 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c4ba:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c4be:	f7f5 fe83 	bl	80021c8 <HAL_TIM_Base_MspInit>
 800c4c2:	e780      	b.n	800c3c6 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c4c4:	2001      	movs	r0, #1
}
 800c4c6:	4770      	bx	lr
 800c4c8:	40010000 	.word	0x40010000

0800c4cc <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c4cc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c4d0:	2b01      	cmp	r3, #1
 800c4d2:	d12f      	bne.n	800c534 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4d4:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4d6:	4919      	ldr	r1, [pc, #100]	; (800c53c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c4d8:	2202      	movs	r2, #2
 800c4da:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4de:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4e0:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c4e2:	f042 0201 	orr.w	r2, r2, #1
 800c4e6:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c4e8:	d019      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c4ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c4ee:	d016      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c4f0:	4a13      	ldr	r2, [pc, #76]	; (800c540 <HAL_TIM_Base_Start_IT+0x74>)
 800c4f2:	4293      	cmp	r3, r2
 800c4f4:	d013      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c4f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c4fa:	4293      	cmp	r3, r2
 800c4fc:	d00f      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c4fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c502:	4293      	cmp	r3, r2
 800c504:	d00b      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c506:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c50a:	4293      	cmp	r3, r2
 800c50c:	d007      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c50e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c512:	4293      	cmp	r3, r2
 800c514:	d003      	beq.n	800c51e <HAL_TIM_Base_Start_IT+0x52>
 800c516:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c51a:	4293      	cmp	r3, r2
 800c51c:	d104      	bne.n	800c528 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c51e:	689a      	ldr	r2, [r3, #8]
 800c520:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c524:	2a06      	cmp	r2, #6
 800c526:	d007      	beq.n	800c538 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c528:	681a      	ldr	r2, [r3, #0]
 800c52a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c52e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c530:	601a      	str	r2, [r3, #0]
 800c532:	4770      	bx	lr
    return HAL_ERROR;
 800c534:	2001      	movs	r0, #1
 800c536:	4770      	bx	lr
  return HAL_OK;
 800c538:	2000      	movs	r0, #0
}
 800c53a:	4770      	bx	lr
 800c53c:	40010000 	.word	0x40010000
 800c540:	40000400 	.word	0x40000400

0800c544 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c544:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c548:	2b01      	cmp	r3, #1
 800c54a:	d075      	beq.n	800c638 <HAL_TIM_ConfigClockSource+0xf4>
 800c54c:	4602      	mov	r2, r0
{
 800c54e:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c550:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c552:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c554:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c558:	2001      	movs	r0, #1
 800c55a:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c55e:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c560:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c564:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c568:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c56a:	680b      	ldr	r3, [r1, #0]
 800c56c:	2b60      	cmp	r3, #96	; 0x60
 800c56e:	d065      	beq.n	800c63c <HAL_TIM_ConfigClockSource+0xf8>
 800c570:	d824      	bhi.n	800c5bc <HAL_TIM_ConfigClockSource+0x78>
 800c572:	2b40      	cmp	r3, #64	; 0x40
 800c574:	d07c      	beq.n	800c670 <HAL_TIM_ConfigClockSource+0x12c>
 800c576:	d94b      	bls.n	800c610 <HAL_TIM_ConfigClockSource+0xcc>
 800c578:	2b50      	cmp	r3, #80	; 0x50
 800c57a:	d117      	bne.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c57c:	684b      	ldr	r3, [r1, #4]
 800c57e:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c580:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c582:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c586:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c588:	6a23      	ldr	r3, [r4, #32]
 800c58a:	f023 0301 	bic.w	r3, r3, #1
 800c58e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c590:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c592:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c596:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c59a:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c59c:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c59e:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c5a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c5a4:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c5a8:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c5aa:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c5ac:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c5ae:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c5b0:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c5b4:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c5b8:	bc30      	pop	{r4, r5}
 800c5ba:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c5bc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c5c0:	d038      	beq.n	800c634 <HAL_TIM_ConfigClockSource+0xf0>
 800c5c2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c5c6:	d110      	bne.n	800c5ea <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5c8:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c5cc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5ce:	432b      	orrs	r3, r5
 800c5d0:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5d2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5d6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c5da:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c5dc:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c5de:	68a3      	ldr	r3, [r4, #8]
 800c5e0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c5e4:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c5e6:	60a3      	str	r3, [r4, #8]
      break;
 800c5e8:	e7e0      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c5ea:	2b70      	cmp	r3, #112	; 0x70
 800c5ec:	d1de      	bne.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5ee:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c5f2:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5f4:	432b      	orrs	r3, r5
 800c5f6:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c5f8:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c5fc:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c600:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c602:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c604:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c606:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c60a:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c60c:	60a3      	str	r3, [r4, #8]
      break;
 800c60e:	e7cd      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c610:	2b20      	cmp	r3, #32
 800c612:	d002      	beq.n	800c61a <HAL_TIM_ConfigClockSource+0xd6>
 800c614:	d90a      	bls.n	800c62c <HAL_TIM_ConfigClockSource+0xe8>
 800c616:	2b30      	cmp	r3, #48	; 0x30
 800c618:	d1c8      	bne.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c61a:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c61c:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c620:	430b      	orrs	r3, r1
 800c622:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c626:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c628:	60a3      	str	r3, [r4, #8]
}
 800c62a:	e7bf      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c62c:	f033 0110 	bics.w	r1, r3, #16
 800c630:	d1bc      	bne.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
 800c632:	e7f2      	b.n	800c61a <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c634:	2000      	movs	r0, #0
 800c636:	e7b9      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c638:	2002      	movs	r0, #2
}
 800c63a:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c63c:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c63e:	6848      	ldr	r0, [r1, #4]
 800c640:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c642:	f023 0310 	bic.w	r3, r3, #16
 800c646:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c648:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c64a:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c64c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c650:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c654:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c658:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c65c:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c65e:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c660:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c662:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c666:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c66a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c66c:	60a3      	str	r3, [r4, #8]
}
 800c66e:	e79d      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c670:	684b      	ldr	r3, [r1, #4]
 800c672:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c674:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c676:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c67a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c67c:	6a23      	ldr	r3, [r4, #32]
 800c67e:	f023 0301 	bic.w	r3, r3, #1
 800c682:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c684:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c686:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c68a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c68e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c690:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c692:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c694:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c698:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c69c:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c69e:	60a3      	str	r3, [r4, #8]
}
 800c6a0:	e784      	b.n	800c5ac <HAL_TIM_ConfigClockSource+0x68>
 800c6a2:	bf00      	nop

0800c6a4 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c6a4:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c6a8:	2a01      	cmp	r2, #1
 800c6aa:	d050      	beq.n	800c74e <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c6ac:	4603      	mov	r3, r0
{
 800c6ae:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c6b0:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c6b2:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c6b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c6b8:	2001      	movs	r0, #1
 800c6ba:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c6be:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c6c0:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c6c2:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c6c4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c6c8:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c6ca:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c6ce:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c6d0:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c6d2:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c6d4:	d060      	beq.n	800c798 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c6d6:	d90f      	bls.n	800c6f8 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c6d8:	2860      	cmp	r0, #96	; 0x60
 800c6da:	d03a      	beq.n	800c752 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c6dc:	2870      	cmp	r0, #112	; 0x70
 800c6de:	d10e      	bne.n	800c6fe <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6e0:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c6e4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6e6:	432a      	orrs	r2, r5
 800c6e8:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c6ea:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c6ee:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c6f2:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c6f4:	60a2      	str	r2, [r4, #8]
 800c6f6:	e00f      	b.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c6f8:	2840      	cmp	r0, #64	; 0x40
 800c6fa:	d03d      	beq.n	800c778 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c6fc:	d907      	bls.n	800c70e <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c6fe:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c700:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c702:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c706:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c70a:	bc30      	pop	{r4, r5}
 800c70c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c70e:	2820      	cmp	r0, #32
 800c710:	d002      	beq.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c712:	d912      	bls.n	800c73a <HAL_TIM_SlaveConfigSynchro+0x96>
 800c714:	2830      	cmp	r0, #48	; 0x30
 800c716:	d1f2      	bne.n	800c6fe <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c718:	68e2      	ldr	r2, [r4, #12]
 800c71a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c71e:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c720:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c722:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c724:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c726:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c72a:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c72c:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c730:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c734:	4608      	mov	r0, r1
}
 800c736:	bc30      	pop	{r4, r5}
 800c738:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c73a:	f030 0210 	bics.w	r2, r0, #16
 800c73e:	d0eb      	beq.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c740:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c742:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c744:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c748:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c74c:	e7dd      	b.n	800c70a <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c74e:	2002      	movs	r0, #2
}
 800c750:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c752:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c754:	6888      	ldr	r0, [r1, #8]
 800c756:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c758:	f022 0210 	bic.w	r2, r2, #16
 800c75c:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c75e:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c760:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c762:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c766:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c76a:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c76e:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c772:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c774:	6222      	str	r2, [r4, #32]
 800c776:	e7cf      	b.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c778:	2d05      	cmp	r5, #5
 800c77a:	d0c0      	beq.n	800c6fe <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c77c:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c77e:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c780:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c782:	f022 0201 	bic.w	r2, r2, #1
 800c786:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c788:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c78a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c78e:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c792:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c794:	6220      	str	r0, [r4, #32]
      break;
 800c796:	e7bf      	b.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c798:	688a      	ldr	r2, [r1, #8]
 800c79a:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c79c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c79e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c7a2:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c7a4:	6a22      	ldr	r2, [r4, #32]
 800c7a6:	f022 0201 	bic.w	r2, r2, #1
 800c7aa:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c7ac:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c7ae:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c7b2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c7b6:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c7b8:	6221      	str	r1, [r4, #32]
 800c7ba:	e7ad      	b.n	800c718 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c7bc <HAL_TIM_OC_DelayElapsedCallback>:
 800c7bc:	4770      	bx	lr
 800c7be:	bf00      	nop

0800c7c0 <HAL_TIM_IC_CaptureCallback>:
 800c7c0:	4770      	bx	lr
 800c7c2:	bf00      	nop

0800c7c4 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c7c4:	4770      	bx	lr
 800c7c6:	bf00      	nop

0800c7c8 <HAL_TIM_TriggerCallback>:
 800c7c8:	4770      	bx	lr
 800c7ca:	bf00      	nop

0800c7cc <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c7cc:	6803      	ldr	r3, [r0, #0]
 800c7ce:	691a      	ldr	r2, [r3, #16]
 800c7d0:	0791      	lsls	r1, r2, #30
{
 800c7d2:	b510      	push	{r4, lr}
 800c7d4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c7d6:	d502      	bpl.n	800c7de <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c7d8:	68da      	ldr	r2, [r3, #12]
 800c7da:	0792      	lsls	r2, r2, #30
 800c7dc:	d45f      	bmi.n	800c89e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c7de:	691a      	ldr	r2, [r3, #16]
 800c7e0:	0750      	lsls	r0, r2, #29
 800c7e2:	d502      	bpl.n	800c7ea <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c7e4:	68da      	ldr	r2, [r3, #12]
 800c7e6:	0751      	lsls	r1, r2, #29
 800c7e8:	d446      	bmi.n	800c878 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c7ea:	691a      	ldr	r2, [r3, #16]
 800c7ec:	0712      	lsls	r2, r2, #28
 800c7ee:	d502      	bpl.n	800c7f6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c7f0:	68da      	ldr	r2, [r3, #12]
 800c7f2:	0710      	lsls	r0, r2, #28
 800c7f4:	d42e      	bmi.n	800c854 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c7f6:	691a      	ldr	r2, [r3, #16]
 800c7f8:	06d2      	lsls	r2, r2, #27
 800c7fa:	d502      	bpl.n	800c802 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c7fc:	68da      	ldr	r2, [r3, #12]
 800c7fe:	06d0      	lsls	r0, r2, #27
 800c800:	d418      	bmi.n	800c834 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c802:	691a      	ldr	r2, [r3, #16]
 800c804:	07d1      	lsls	r1, r2, #31
 800c806:	d502      	bpl.n	800c80e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c808:	68da      	ldr	r2, [r3, #12]
 800c80a:	07d2      	lsls	r2, r2, #31
 800c80c:	d45d      	bmi.n	800c8ca <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c80e:	691a      	ldr	r2, [r3, #16]
 800c810:	0610      	lsls	r0, r2, #24
 800c812:	d502      	bpl.n	800c81a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c814:	68da      	ldr	r2, [r3, #12]
 800c816:	0611      	lsls	r1, r2, #24
 800c818:	d45f      	bmi.n	800c8da <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c81a:	691a      	ldr	r2, [r3, #16]
 800c81c:	0652      	lsls	r2, r2, #25
 800c81e:	d502      	bpl.n	800c826 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c820:	68da      	ldr	r2, [r3, #12]
 800c822:	0650      	lsls	r0, r2, #25
 800c824:	d461      	bmi.n	800c8ea <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c826:	691a      	ldr	r2, [r3, #16]
 800c828:	0691      	lsls	r1, r2, #26
 800c82a:	d502      	bpl.n	800c832 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c82c:	68da      	ldr	r2, [r3, #12]
 800c82e:	0692      	lsls	r2, r2, #26
 800c830:	d443      	bmi.n	800c8ba <HAL_TIM_IRQHandler+0xee>
}
 800c832:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c834:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c838:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c83a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c83c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c83e:	69db      	ldr	r3, [r3, #28]
 800c840:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c844:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c846:	d064      	beq.n	800c912 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c848:	f7ff ffba 	bl	800c7c0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c84c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c84e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c850:	7722      	strb	r2, [r4, #28]
 800c852:	e7d6      	b.n	800c802 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c854:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c858:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c85a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c85c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c85e:	69db      	ldr	r3, [r3, #28]
 800c860:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c862:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c864:	d152      	bne.n	800c90c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c866:	f7ff ffa9 	bl	800c7bc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c86a:	4620      	mov	r0, r4
 800c86c:	f7ff ffaa 	bl	800c7c4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c870:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c872:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c874:	7722      	strb	r2, [r4, #28]
 800c876:	e7be      	b.n	800c7f6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c878:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c87c:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c87e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c880:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c882:	699b      	ldr	r3, [r3, #24]
 800c884:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c888:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c88a:	d13c      	bne.n	800c906 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c88c:	f7ff ff96 	bl	800c7bc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c890:	4620      	mov	r0, r4
 800c892:	f7ff ff97 	bl	800c7c4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c896:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c898:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c89a:	7722      	strb	r2, [r4, #28]
 800c89c:	e7a5      	b.n	800c7ea <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c89e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c8a2:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c8a4:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c8a6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c8a8:	699b      	ldr	r3, [r3, #24]
 800c8aa:	079b      	lsls	r3, r3, #30
 800c8ac:	d025      	beq.n	800c8fa <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c8ae:	f7ff ff87 	bl	800c7c0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8b2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c8b4:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8b6:	7722      	strb	r2, [r4, #28]
 800c8b8:	e791      	b.n	800c7de <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c8ba:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c8be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c8c0:	611a      	str	r2, [r3, #16]
}
 800c8c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c8c6:	f000 b86b 	b.w	800c9a0 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c8ca:	f06f 0201 	mvn.w	r2, #1
 800c8ce:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c8d0:	4620      	mov	r0, r4
 800c8d2:	f7f5 f95b 	bl	8001b8c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c8d6:	6823      	ldr	r3, [r4, #0]
 800c8d8:	e799      	b.n	800c80e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c8da:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c8de:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c8e0:	4620      	mov	r0, r4
 800c8e2:	f000 f85f 	bl	800c9a4 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c8e6:	6823      	ldr	r3, [r4, #0]
 800c8e8:	e797      	b.n	800c81a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c8ea:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c8ee:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c8f0:	4620      	mov	r0, r4
 800c8f2:	f7ff ff69 	bl	800c7c8 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c8f6:	6823      	ldr	r3, [r4, #0]
 800c8f8:	e795      	b.n	800c826 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c8fa:	f7ff ff5f 	bl	800c7bc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c8fe:	4620      	mov	r0, r4
 800c900:	f7ff ff60 	bl	800c7c4 <HAL_TIM_PWM_PulseFinishedCallback>
 800c904:	e7d5      	b.n	800c8b2 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c906:	f7ff ff5b 	bl	800c7c0 <HAL_TIM_IC_CaptureCallback>
 800c90a:	e7c4      	b.n	800c896 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c90c:	f7ff ff58 	bl	800c7c0 <HAL_TIM_IC_CaptureCallback>
 800c910:	e7ae      	b.n	800c870 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c912:	f7ff ff53 	bl	800c7bc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c916:	4620      	mov	r0, r4
 800c918:	f7ff ff54 	bl	800c7c4 <HAL_TIM_PWM_PulseFinishedCallback>
 800c91c:	e796      	b.n	800c84c <HAL_TIM_IRQHandler+0x80>
 800c91e:	bf00      	nop

0800c920 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c920:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c924:	2b01      	cmp	r3, #1
 800c926:	d037      	beq.n	800c998 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c928:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c92a:	2202      	movs	r2, #2
{
 800c92c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c92e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c932:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c934:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c936:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c938:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c93c:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c93e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c940:	4a16      	ldr	r2, [pc, #88]	; (800c99c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c942:	4293      	cmp	r3, r2
 800c944:	d01a      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c946:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c94a:	d017      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c94c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c950:	4293      	cmp	r3, r2
 800c952:	d013      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c954:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c958:	4293      	cmp	r3, r2
 800c95a:	d00f      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c95c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c960:	4293      	cmp	r3, r2
 800c962:	d00b      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c964:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c968:	4293      	cmp	r3, r2
 800c96a:	d007      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c96c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c970:	4293      	cmp	r3, r2
 800c972:	d003      	beq.n	800c97c <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c974:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c978:	4293      	cmp	r3, r2
 800c97a:	d104      	bne.n	800c986 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c97c:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c97e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c982:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c984:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c986:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c988:	2201      	movs	r2, #1
 800c98a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c98e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c992:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c994:	4618      	mov	r0, r3
}
 800c996:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c998:	2002      	movs	r0, #2
}
 800c99a:	4770      	bx	lr
 800c99c:	40010000 	.word	0x40010000

0800c9a0 <HAL_TIMEx_CommutCallback>:
 800c9a0:	4770      	bx	lr
 800c9a2:	bf00      	nop

0800c9a4 <HAL_TIMEx_BreakCallback>:
 800c9a4:	4770      	bx	lr
 800c9a6:	bf00      	nop

0800c9a8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c9a8:	680b      	ldr	r3, [r1, #0]
{
 800c9aa:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c9ac:	b9d3      	cbnz	r3, 800c9e4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c9ae:	6803      	ldr	r3, [r0, #0]
 800c9b0:	684c      	ldr	r4, [r1, #4]
 800c9b2:	688a      	ldr	r2, [r1, #8]
 800c9b4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c9b8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c9bc:	4323      	orrs	r3, r4
 800c9be:	4313      	orrs	r3, r2
 800c9c0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c9c4:	4323      	orrs	r3, r4
 800c9c6:	4313      	orrs	r3, r2
 800c9c8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c9cc:	4323      	orrs	r3, r4
 800c9ce:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c9d2:	4313      	orrs	r3, r2
 800c9d4:	432b      	orrs	r3, r5
 800c9d6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c9d8:	4323      	orrs	r3, r4
 800c9da:	4313      	orrs	r3, r2
 800c9dc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c9de:	bc30      	pop	{r4, r5}
 800c9e0:	2000      	movs	r0, #0
 800c9e2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c9e4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c9e8:	6803      	ldr	r3, [r0, #0]
 800c9ea:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c9ee:	4323      	orrs	r3, r4
 800c9f0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c9f2:	4313      	orrs	r3, r2
 800c9f4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c9f6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c9f8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c9fa:	6843      	ldr	r3, [r0, #4]
 800c9fc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800ca00:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ca04:	4313      	orrs	r3, r2
 800ca06:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ca0a:	4323      	orrs	r3, r4
 800ca0c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ca10:	4313      	orrs	r3, r2
 800ca12:	432b      	orrs	r3, r5
 800ca14:	698a      	ldr	r2, [r1, #24]
 800ca16:	4323      	orrs	r3, r4
 800ca18:	4313      	orrs	r3, r2
 800ca1a:	6043      	str	r3, [r0, #4]
}
 800ca1c:	bc30      	pop	{r4, r5}
 800ca1e:	2000      	movs	r0, #0
 800ca20:	4770      	bx	lr
 800ca22:	bf00      	nop

0800ca24 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800ca24:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca26:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800ca28:	bb02      	cbnz	r2, 800ca6c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca2a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ca2e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ca32:	3c01      	subs	r4, #1
 800ca34:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ca38:	3a01      	subs	r2, #1
 800ca3a:	4313      	orrs	r3, r2
 800ca3c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ca40:	3c01      	subs	r4, #1
 800ca42:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800ca46:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ca4a:	3a01      	subs	r2, #1
 800ca4c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800ca50:	698a      	ldr	r2, [r1, #24]
 800ca52:	1e69      	subs	r1, r5, #1
 800ca54:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ca58:	1e61      	subs	r1, r4, #1
 800ca5a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800ca5e:	3a01      	subs	r2, #1
 800ca60:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800ca64:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ca66:	bc30      	pop	{r4, r5}
 800ca68:	2000      	movs	r0, #0
 800ca6a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca6c:	68cc      	ldr	r4, [r1, #12]
 800ca6e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ca70:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ca72:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ca76:	3c01      	subs	r4, #1
 800ca78:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ca7c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800ca80:	3a01      	subs	r2, #1
 800ca82:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800ca86:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ca88:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ca8c:	68c3      	ldr	r3, [r0, #12]
 800ca8e:	3c01      	subs	r4, #1
 800ca90:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ca94:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ca98:	3a01      	subs	r2, #1
 800ca9a:	690c      	ldr	r4, [r1, #16]
 800ca9c:	4313      	orrs	r3, r2
 800ca9e:	698a      	ldr	r2, [r1, #24]
 800caa0:	1e69      	subs	r1, r5, #1
 800caa2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800caa6:	1e61      	subs	r1, r4, #1
 800caa8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800caac:	3a01      	subs	r2, #1
 800caae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cab2:	60c3      	str	r3, [r0, #12]
}
 800cab4:	bc30      	pop	{r4, r5}
 800cab6:	2000      	movs	r0, #0
 800cab8:	4770      	bx	lr
 800caba:	bf00      	nop

0800cabc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cabc:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cabe:	680b      	ldr	r3, [r1, #0]
{
 800cac0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cac2:	684a      	ldr	r2, [r1, #4]
{
 800cac4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cac6:	4313      	orrs	r3, r2
 800cac8:	6900      	ldr	r0, [r0, #16]
 800caca:	68ca      	ldr	r2, [r1, #12]
 800cacc:	0d80      	lsrs	r0, r0, #22
 800cace:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cad2:	688a      	ldr	r2, [r1, #8]
 800cad4:	0580      	lsls	r0, r0, #22
 800cad6:	4303      	orrs	r3, r0
 800cad8:	3a01      	subs	r2, #1
 800cada:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cade:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cae0:	f7fc fb4e 	bl	8009180 <HAL_GetTick>
 800cae4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cae6:	1c6b      	adds	r3, r5, #1
 800cae8:	d105      	bne.n	800caf6 <FMC_SDRAM_SendCommand+0x3a>
 800caea:	69a3      	ldr	r3, [r4, #24]
 800caec:	f013 0320 	ands.w	r3, r3, #32
 800caf0:	d1fb      	bne.n	800caea <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800caf2:	4618      	mov	r0, r3
}
 800caf4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800caf6:	69a3      	ldr	r3, [r4, #24]
 800caf8:	f013 0320 	ands.w	r3, r3, #32
 800cafc:	d0f9      	beq.n	800caf2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cafe:	b125      	cbz	r5, 800cb0a <FMC_SDRAM_SendCommand+0x4e>
 800cb00:	f7fc fb3e 	bl	8009180 <HAL_GetTick>
 800cb04:	1b80      	subs	r0, r0, r6
 800cb06:	42a8      	cmp	r0, r5
 800cb08:	d9ed      	bls.n	800cae6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cb0a:	2003      	movs	r0, #3
}
 800cb0c:	bd70      	pop	{r4, r5, r6, pc}
 800cb0e:	bf00      	nop

0800cb10 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb10:	6943      	ldr	r3, [r0, #20]
 800cb12:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cb16:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb18:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cb1c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cb20:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cb22:	6151      	str	r1, [r2, #20]
}
 800cb24:	4770      	bx	lr
 800cb26:	bf00      	nop

0800cb28 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cb28:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cb2a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cb2e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cb30:	f002 fb00 	bl	800f134 <xTaskGetSchedulerState>
 800cb34:	2801      	cmp	r0, #1
 800cb36:	d100      	bne.n	800cb3a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cb38:	bd08      	pop	{r3, pc}
 800cb3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cb3e:	f000 bc41 	b.w	800d3c4 <xPortSysTickHandler>
 800cb42:	bf00      	nop

0800cb44 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cb44:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb48:	b92b      	cbnz	r3, 800cb56 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cb4a:	4b06      	ldr	r3, [pc, #24]	; (800cb64 <osKernelInitialize+0x20>)
 800cb4c:	6818      	ldr	r0, [r3, #0]
 800cb4e:	b928      	cbnz	r0, 800cb5c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cb50:	2201      	movs	r2, #1
 800cb52:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cb54:	4770      	bx	lr
    stat = osErrorISR;
 800cb56:	f06f 0005 	mvn.w	r0, #5
 800cb5a:	4770      	bx	lr
    } else {
      stat = osError;
 800cb5c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cb60:	4770      	bx	lr
 800cb62:	bf00      	nop
 800cb64:	20002474 	.word	0x20002474

0800cb68 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cb68:	b510      	push	{r4, lr}
 800cb6a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cb6e:	b974      	cbnz	r4, 800cb8e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cb70:	4b08      	ldr	r3, [pc, #32]	; (800cb94 <osKernelStart+0x2c>)
 800cb72:	681a      	ldr	r2, [r3, #0]
 800cb74:	2a01      	cmp	r2, #1
 800cb76:	d107      	bne.n	800cb88 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cb78:	4907      	ldr	r1, [pc, #28]	; (800cb98 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cb7a:	2202      	movs	r2, #2
 800cb7c:	77cc      	strb	r4, [r1, #31]
 800cb7e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cb80:	f002 f8b2 	bl	800ece8 <vTaskStartScheduler>
      stat = osOK;
 800cb84:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cb86:	bd10      	pop	{r4, pc}
      stat = osError;
 800cb88:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cb8c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cb8e:	f06f 0005 	mvn.w	r0, #5
}
 800cb92:	bd10      	pop	{r4, pc}
 800cb94:	20002474 	.word	0x20002474
 800cb98:	e000ed00 	.word	0xe000ed00

0800cb9c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cb9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb9e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cba0:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cba2:	4615      	mov	r5, r2
  hTask = NULL;
 800cba4:	9405      	str	r4, [sp, #20]
 800cba6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cbaa:	b9ea      	cbnz	r2, 800cbe8 <osThreadNew+0x4c>
 800cbac:	b350      	cbz	r0, 800cc04 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cbae:	b1f5      	cbz	r5, 800cbee <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cbb0:	69ab      	ldr	r3, [r5, #24]
 800cbb2:	bb5b      	cbnz	r3, 800cc0c <osThreadNew+0x70>
 800cbb4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cbb6:	686a      	ldr	r2, [r5, #4]
 800cbb8:	07d2      	lsls	r2, r2, #31
 800cbba:	d423      	bmi.n	800cc04 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cbbc:	696e      	ldr	r6, [r5, #20]
 800cbbe:	b34e      	cbz	r6, 800cc14 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cbc0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cbc4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800cbc6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cbc8:	b34c      	cbz	r4, 800cc1e <osThreadNew+0x82>
 800cbca:	68ea      	ldr	r2, [r5, #12]
 800cbcc:	2aab      	cmp	r2, #171	; 0xab
 800cbce:	d919      	bls.n	800cc04 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cbd0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cbd2:	b1bd      	cbz	r5, 800cc04 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cbd4:	b1b6      	cbz	r6, 800cc04 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cbd6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800cbda:	9300      	str	r3, [sp, #0]
 800cbdc:	4662      	mov	r2, ip
 800cbde:	460b      	mov	r3, r1
 800cbe0:	4639      	mov	r1, r7
 800cbe2:	f001 ffbf 	bl	800eb64 <xTaskCreateStatic>
 800cbe6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800cbe8:	4620      	mov	r0, r4
 800cbea:	b007      	add	sp, #28
 800cbec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cbee:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800cbf0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cbf2:	ac05      	add	r4, sp, #20
 800cbf4:	9300      	str	r3, [sp, #0]
 800cbf6:	9401      	str	r4, [sp, #4]
 800cbf8:	460b      	mov	r3, r1
 800cbfa:	4629      	mov	r1, r5
 800cbfc:	f001 ffec 	bl	800ebd8 <xTaskCreate>
 800cc00:	2801      	cmp	r0, #1
 800cc02:	d00a      	beq.n	800cc1a <osThreadNew+0x7e>
        return (NULL);
 800cc04:	2400      	movs	r4, #0
}
 800cc06:	4620      	mov	r0, r4
 800cc08:	b007      	add	sp, #28
 800cc0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cc0c:	1e5c      	subs	r4, r3, #1
 800cc0e:	2c37      	cmp	r4, #55	; 0x37
 800cc10:	d9d1      	bls.n	800cbb6 <osThreadNew+0x1a>
 800cc12:	e7f7      	b.n	800cc04 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800cc14:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800cc18:	e7d4      	b.n	800cbc4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800cc1a:	9c05      	ldr	r4, [sp, #20]
 800cc1c:	e7e4      	b.n	800cbe8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cc1e:	68ee      	ldr	r6, [r5, #12]
 800cc20:	2e00      	cmp	r6, #0
 800cc22:	d1e1      	bne.n	800cbe8 <osThreadNew+0x4c>
 800cc24:	692d      	ldr	r5, [r5, #16]
 800cc26:	2d00      	cmp	r5, #0
 800cc28:	d1de      	bne.n	800cbe8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cc2a:	fa1f f28c 	uxth.w	r2, ip
 800cc2e:	463d      	mov	r5, r7
 800cc30:	e7df      	b.n	800cbf2 <osThreadNew+0x56>
 800cc32:	bf00      	nop

0800cc34 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cc34:	b510      	push	{r4, lr}
 800cc36:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc3a:	b92c      	cbnz	r4, 800cc48 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cc3c:	b900      	cbnz	r0, 800cc40 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800cc3e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800cc40:	f001 fffc 	bl	800ec3c <vTaskDelay>
    stat = osOK;
 800cc44:	4620      	mov	r0, r4
}
 800cc46:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cc48:	f06f 0005 	mvn.w	r0, #5
}
 800cc4c:	bd10      	pop	{r4, pc}
 800cc4e:	bf00      	nop

0800cc50 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cc50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc52:	b083      	sub	sp, #12
 800cc54:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cc58:	b9fe      	cbnz	r6, 800cc9a <osSemaphoreNew+0x4a>
 800cc5a:	b1f0      	cbz	r0, 800cc9a <osSemaphoreNew+0x4a>
 800cc5c:	4288      	cmp	r0, r1
 800cc5e:	460f      	mov	r7, r1
 800cc60:	d31b      	bcc.n	800cc9a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cc62:	4615      	mov	r5, r2
 800cc64:	b192      	cbz	r2, 800cc8c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cc66:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cc6a:	b1d2      	cbz	r2, 800cca2 <osSemaphoreNew+0x52>
 800cc6c:	2b4f      	cmp	r3, #79	; 0x4f
 800cc6e:	d914      	bls.n	800cc9a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cc70:	2801      	cmp	r0, #1
 800cc72:	d038      	beq.n	800cce6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cc74:	f000 fd8c 	bl	800d790 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cc78:	4604      	mov	r4, r0
 800cc7a:	b170      	cbz	r0, 800cc9a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cc7c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cc7e:	4620      	mov	r0, r4
 800cc80:	4629      	mov	r1, r5
 800cc82:	f001 fc37 	bl	800e4f4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cc86:	4620      	mov	r0, r4
 800cc88:	b003      	add	sp, #12
 800cc8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cc8c:	2801      	cmp	r0, #1
 800cc8e:	d012      	beq.n	800ccb6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cc90:	f000 fdde 	bl	800d850 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cc94:	4604      	mov	r4, r0
 800cc96:	2800      	cmp	r0, #0
 800cc98:	d1f1      	bne.n	800cc7e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800cc9a:	2400      	movs	r4, #0
}
 800cc9c:	4620      	mov	r0, r4
 800cc9e:	b003      	add	sp, #12
 800cca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cca2:	2b00      	cmp	r3, #0
 800cca4:	d1f9      	bne.n	800cc9a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cca6:	2801      	cmp	r0, #1
 800cca8:	d005      	beq.n	800ccb6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800ccaa:	f000 fdd1 	bl	800d850 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ccae:	4604      	mov	r4, r0
 800ccb0:	2800      	cmp	r0, #0
 800ccb2:	d1e3      	bne.n	800cc7c <osSemaphoreNew+0x2c>
 800ccb4:	e7f1      	b.n	800cc9a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800ccb6:	2203      	movs	r2, #3
 800ccb8:	2100      	movs	r1, #0
 800ccba:	2001      	movs	r0, #1
 800ccbc:	f000 fd26 	bl	800d70c <xQueueGenericCreate>
 800ccc0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800ccc2:	2c00      	cmp	r4, #0
 800ccc4:	d0e9      	beq.n	800cc9a <osSemaphoreNew+0x4a>
 800ccc6:	b917      	cbnz	r7, 800ccce <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800ccc8:	2d00      	cmp	r5, #0
 800ccca:	d1d7      	bne.n	800cc7c <osSemaphoreNew+0x2c>
 800cccc:	e7d7      	b.n	800cc7e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ccce:	2300      	movs	r3, #0
 800ccd0:	461a      	mov	r2, r3
 800ccd2:	4619      	mov	r1, r3
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	f000 fe01 	bl	800d8dc <xQueueGenericSend>
 800ccda:	2801      	cmp	r0, #1
 800ccdc:	d0f4      	beq.n	800ccc8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800ccde:	4620      	mov	r0, r4
 800cce0:	f001 fbc2 	bl	800e468 <vQueueDelete>
 800cce4:	e7d9      	b.n	800cc9a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cce6:	4613      	mov	r3, r2
 800cce8:	2203      	movs	r2, #3
 800ccea:	9200      	str	r2, [sp, #0]
 800ccec:	4631      	mov	r1, r6
 800ccee:	4632      	mov	r2, r6
 800ccf0:	f000 fc9e 	bl	800d630 <xQueueGenericCreateStatic>
 800ccf4:	4604      	mov	r4, r0
 800ccf6:	e7e4      	b.n	800ccc2 <osSemaphoreNew+0x72>

0800ccf8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ccf8:	b370      	cbz	r0, 800cd58 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ccfa:	b510      	push	{r4, lr}
 800ccfc:	460c      	mov	r4, r1
 800ccfe:	b082      	sub	sp, #8
 800cd00:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cd04:	b1c3      	cbz	r3, 800cd38 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cd06:	bb21      	cbnz	r1, 800cd52 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cd08:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd0a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cd0c:	f001 fb2a 	bl	800e364 <xQueueReceiveFromISR>
 800cd10:	2801      	cmp	r0, #1
 800cd12:	d11a      	bne.n	800cd4a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd14:	9b01      	ldr	r3, [sp, #4]
 800cd16:	b913      	cbnz	r3, 800cd1e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cd18:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cd1a:	b002      	add	sp, #8
 800cd1c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cd1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd2a:	f3bf 8f4f 	dsb	sy
 800cd2e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd32:	4620      	mov	r0, r4
}
 800cd34:	b002      	add	sp, #8
 800cd36:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cd38:	f001 f98a 	bl	800e050 <xQueueSemaphoreTake>
 800cd3c:	2801      	cmp	r0, #1
 800cd3e:	d0eb      	beq.n	800cd18 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cd40:	b11c      	cbz	r4, 800cd4a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cd42:	f06f 0001 	mvn.w	r0, #1
}
 800cd46:	b002      	add	sp, #8
 800cd48:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cd4a:	f06f 0002 	mvn.w	r0, #2
}
 800cd4e:	b002      	add	sp, #8
 800cd50:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cd52:	f06f 0003 	mvn.w	r0, #3
 800cd56:	e7e0      	b.n	800cd1a <osSemaphoreAcquire+0x22>
 800cd58:	f06f 0003 	mvn.w	r0, #3
}
 800cd5c:	4770      	bx	lr
 800cd5e:	bf00      	nop

0800cd60 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cd60:	b330      	cbz	r0, 800cdb0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cd62:	b510      	push	{r4, lr}
 800cd64:	b082      	sub	sp, #8
 800cd66:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cd6a:	b1ab      	cbz	r3, 800cd98 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cd6c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd6e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cd70:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cd72:	f000 ff97 	bl	800dca4 <xQueueGiveFromISR>
 800cd76:	2801      	cmp	r0, #1
 800cd78:	d117      	bne.n	800cdaa <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cd7a:	9b01      	ldr	r3, [sp, #4]
 800cd7c:	b193      	cbz	r3, 800cda4 <osSemaphoreRelease+0x44>
 800cd7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd8a:	f3bf 8f4f 	dsb	sy
 800cd8e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd92:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cd94:	b002      	add	sp, #8
 800cd96:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cd98:	461a      	mov	r2, r3
 800cd9a:	4619      	mov	r1, r3
 800cd9c:	f000 fd9e 	bl	800d8dc <xQueueGenericSend>
 800cda0:	2801      	cmp	r0, #1
 800cda2:	d102      	bne.n	800cdaa <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cda4:	2000      	movs	r0, #0
}
 800cda6:	b002      	add	sp, #8
 800cda8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cdaa:	f06f 0002 	mvn.w	r0, #2
 800cdae:	e7fa      	b.n	800cda6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cdb0:	f06f 0003 	mvn.w	r0, #3
}
 800cdb4:	4770      	bx	lr
 800cdb6:	bf00      	nop

0800cdb8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cdb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdba:	b085      	sub	sp, #20
 800cdbc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cdc0:	b987      	cbnz	r7, 800cde4 <osMessageQueueNew+0x2c>
 800cdc2:	4605      	mov	r5, r0
 800cdc4:	b170      	cbz	r0, 800cde4 <osMessageQueueNew+0x2c>
 800cdc6:	b169      	cbz	r1, 800cde4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800cdc8:	4614      	mov	r4, r2
 800cdca:	b1ea      	cbz	r2, 800ce08 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cdcc:	6893      	ldr	r3, [r2, #8]
 800cdce:	b163      	cbz	r3, 800cdea <osMessageQueueNew+0x32>
 800cdd0:	68d2      	ldr	r2, [r2, #12]
 800cdd2:	2a4f      	cmp	r2, #79	; 0x4f
 800cdd4:	d906      	bls.n	800cde4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cdd6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cdd8:	b122      	cbz	r2, 800cde4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cdda:	6966      	ldr	r6, [r4, #20]
 800cddc:	fb01 f505 	mul.w	r5, r1, r5
 800cde0:	42ae      	cmp	r6, r5
 800cde2:	d21c      	bcs.n	800ce1e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800cde4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cde6:	b005      	add	sp, #20
 800cde8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cdea:	68d3      	ldr	r3, [r2, #12]
 800cdec:	2b00      	cmp	r3, #0
 800cdee:	d1f9      	bne.n	800cde4 <osMessageQueueNew+0x2c>
 800cdf0:	6913      	ldr	r3, [r2, #16]
 800cdf2:	2b00      	cmp	r3, #0
 800cdf4:	d1f6      	bne.n	800cde4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cdf6:	6952      	ldr	r2, [r2, #20]
 800cdf8:	2a00      	cmp	r2, #0
 800cdfa:	d1f3      	bne.n	800cde4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cdfc:	f000 fc86 	bl	800d70c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ce00:	2800      	cmp	r0, #0
 800ce02:	d0ef      	beq.n	800cde4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800ce04:	6824      	ldr	r4, [r4, #0]
 800ce06:	e003      	b.n	800ce10 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ce08:	f000 fc80 	bl	800d70c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ce0c:	2800      	cmp	r0, #0
 800ce0e:	d0e9      	beq.n	800cde4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800ce10:	4621      	mov	r1, r4
 800ce12:	9003      	str	r0, [sp, #12]
 800ce14:	f001 fb6e 	bl	800e4f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800ce18:	9803      	ldr	r0, [sp, #12]
}
 800ce1a:	b005      	add	sp, #20
 800ce1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800ce1e:	9700      	str	r7, [sp, #0]
 800ce20:	f000 fc06 	bl	800d630 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800ce24:	2800      	cmp	r0, #0
 800ce26:	d1ed      	bne.n	800ce04 <osMessageQueueNew+0x4c>
 800ce28:	e7dc      	b.n	800cde4 <osMessageQueueNew+0x2c>
 800ce2a:	bf00      	nop

0800ce2c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800ce2c:	b570      	push	{r4, r5, r6, lr}
 800ce2e:	461c      	mov	r4, r3
 800ce30:	b082      	sub	sp, #8
 800ce32:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ce36:	b1be      	cbz	r6, 800ce68 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ce38:	b350      	cbz	r0, 800ce90 <osMessageQueuePut+0x64>
 800ce3a:	b349      	cbz	r1, 800ce90 <osMessageQueuePut+0x64>
 800ce3c:	bb43      	cbnz	r3, 800ce90 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce3e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce40:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ce42:	f000 fec9 	bl	800dbd8 <xQueueGenericSendFromISR>
 800ce46:	2801      	cmp	r0, #1
 800ce48:	d11e      	bne.n	800ce88 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce4a:	9b01      	ldr	r3, [sp, #4]
 800ce4c:	b1cb      	cbz	r3, 800ce82 <osMessageQueuePut+0x56>
 800ce4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce5a:	f3bf 8f4f 	dsb	sy
 800ce5e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ce62:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ce64:	b002      	add	sp, #8
 800ce66:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ce68:	b190      	cbz	r0, 800ce90 <osMessageQueuePut+0x64>
 800ce6a:	b189      	cbz	r1, 800ce90 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ce6c:	4633      	mov	r3, r6
 800ce6e:	4622      	mov	r2, r4
 800ce70:	f000 fd34 	bl	800d8dc <xQueueGenericSend>
 800ce74:	2801      	cmp	r0, #1
 800ce76:	d004      	beq.n	800ce82 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800ce78:	b134      	cbz	r4, 800ce88 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800ce7a:	f06f 0001 	mvn.w	r0, #1
}
 800ce7e:	b002      	add	sp, #8
 800ce80:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ce82:	2000      	movs	r0, #0
}
 800ce84:	b002      	add	sp, #8
 800ce86:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800ce88:	f06f 0002 	mvn.w	r0, #2
}
 800ce8c:	b002      	add	sp, #8
 800ce8e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800ce90:	f06f 0003 	mvn.w	r0, #3
 800ce94:	e7e6      	b.n	800ce64 <osMessageQueuePut+0x38>
 800ce96:	bf00      	nop

0800ce98 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ce98:	b530      	push	{r4, r5, lr}
 800ce9a:	461c      	mov	r4, r3
 800ce9c:	b083      	sub	sp, #12
 800ce9e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cea2:	b1bb      	cbz	r3, 800ced4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cea4:	b348      	cbz	r0, 800cefa <osMessageQueueGet+0x62>
 800cea6:	b341      	cbz	r1, 800cefa <osMessageQueueGet+0x62>
 800cea8:	bb3c      	cbnz	r4, 800cefa <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ceaa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ceac:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ceae:	f001 fa59 	bl	800e364 <xQueueReceiveFromISR>
 800ceb2:	2801      	cmp	r0, #1
 800ceb4:	d11d      	bne.n	800cef2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ceb6:	9b01      	ldr	r3, [sp, #4]
 800ceb8:	b1c3      	cbz	r3, 800ceec <osMessageQueueGet+0x54>
 800ceba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cebe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cec2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cec6:	f3bf 8f4f 	dsb	sy
 800ceca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cece:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ced0:	b003      	add	sp, #12
 800ced2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ced4:	b188      	cbz	r0, 800cefa <osMessageQueueGet+0x62>
 800ced6:	b181      	cbz	r1, 800cefa <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ced8:	4622      	mov	r2, r4
 800ceda:	f000 ff3b 	bl	800dd54 <xQueueReceive>
 800cede:	2801      	cmp	r0, #1
 800cee0:	d004      	beq.n	800ceec <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cee2:	b134      	cbz	r4, 800cef2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cee4:	f06f 0001 	mvn.w	r0, #1
}
 800cee8:	b003      	add	sp, #12
 800ceea:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800ceec:	2000      	movs	r0, #0
}
 800ceee:	b003      	add	sp, #12
 800cef0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800cef2:	f06f 0002 	mvn.w	r0, #2
}
 800cef6:	b003      	add	sp, #12
 800cef8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800cefa:	f06f 0003 	mvn.w	r0, #3
 800cefe:	e7e7      	b.n	800ced0 <osMessageQueueGet+0x38>

0800cf00 <osMessageQueueGetCount>:
 800cf00:	b130      	cbz	r0, 800cf10 <osMessageQueueGetCount+0x10>
 800cf02:	f3ef 8305 	mrs	r3, IPSR
 800cf06:	b10b      	cbz	r3, 800cf0c <osMessageQueueGetCount+0xc>
 800cf08:	f001 baa0 	b.w	800e44c <uxQueueMessagesWaitingFromISR>
 800cf0c:	f001 ba88 	b.w	800e420 <uxQueueMessagesWaiting>
 800cf10:	4770      	bx	lr
 800cf12:	bf00      	nop

0800cf14 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cf14:	4b04      	ldr	r3, [pc, #16]	; (800cf28 <vApplicationGetIdleTaskMemory+0x14>)
 800cf16:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cf18:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cf1a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cf1c:	4c03      	ldr	r4, [pc, #12]	; (800cf2c <vApplicationGetIdleTaskMemory+0x18>)
 800cf1e:	600c      	str	r4, [r1, #0]
}
 800cf20:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cf24:	6013      	str	r3, [r2, #0]
}
 800cf26:	4770      	bx	lr
 800cf28:	200023c8 	.word	0x200023c8
 800cf2c:	200021c8 	.word	0x200021c8

0800cf30 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800cf30:	4b05      	ldr	r3, [pc, #20]	; (800cf48 <vApplicationGetTimerTaskMemory+0x18>)
 800cf32:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800cf34:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cf36:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cf3a:	4c04      	ldr	r4, [pc, #16]	; (800cf4c <vApplicationGetTimerTaskMemory+0x1c>)
 800cf3c:	600c      	str	r4, [r1, #0]
}
 800cf3e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cf42:	6013      	str	r3, [r2, #0]
}
 800cf44:	4770      	bx	lr
 800cf46:	bf00      	nop
 800cf48:	20002878 	.word	0x20002878
 800cf4c:	20002478 	.word	0x20002478

0800cf50 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800cf50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf54:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800cf56:	f001 ff43 	bl	800ede0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cf5a:	4a54      	ldr	r2, [pc, #336]	; (800d0ac <pvPortMalloc+0x15c>)
 800cf5c:	6816      	ldr	r6, [r2, #0]
 800cf5e:	2e00      	cmp	r6, #0
 800cf60:	d06e      	beq.n	800d040 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cf62:	4b53      	ldr	r3, [pc, #332]	; (800d0b0 <pvPortMalloc+0x160>)
 800cf64:	681f      	ldr	r7, [r3, #0]
 800cf66:	423d      	tst	r5, r7
 800cf68:	d12e      	bne.n	800cfc8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cf6a:	b36d      	cbz	r5, 800cfc8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cf6c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cf70:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cf72:	bf1c      	itt	ne
 800cf74:	f024 0407 	bicne.w	r4, r4, #7
 800cf78:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cf7a:	b32c      	cbz	r4, 800cfc8 <pvPortMalloc+0x78>
 800cf7c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d0c4 <pvPortMalloc+0x174>
 800cf80:	f8dc 5000 	ldr.w	r5, [ip]
 800cf84:	42a5      	cmp	r5, r4
 800cf86:	d31f      	bcc.n	800cfc8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cf88:	484a      	ldr	r0, [pc, #296]	; (800d0b4 <pvPortMalloc+0x164>)
 800cf8a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cf8c:	e003      	b.n	800cf96 <pvPortMalloc+0x46>
 800cf8e:	681a      	ldr	r2, [r3, #0]
 800cf90:	b122      	cbz	r2, 800cf9c <pvPortMalloc+0x4c>
 800cf92:	4618      	mov	r0, r3
 800cf94:	4613      	mov	r3, r2
 800cf96:	6859      	ldr	r1, [r3, #4]
 800cf98:	42a1      	cmp	r1, r4
 800cf9a:	d3f8      	bcc.n	800cf8e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800cf9c:	42b3      	cmp	r3, r6
 800cf9e:	d013      	beq.n	800cfc8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cfa0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cfa2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cfa4:	f858 eb08 	ldr.w	lr, [r8], #8
 800cfa8:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cfac:	2a10      	cmp	r2, #16
 800cfae:	d929      	bls.n	800d004 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cfb0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cfb2:	0748      	lsls	r0, r1, #29
 800cfb4:	d00f      	beq.n	800cfd6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cfb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfba:	f383 8811 	msr	BASEPRI, r3
 800cfbe:	f3bf 8f6f 	isb	sy
 800cfc2:	f3bf 8f4f 	dsb	sy
 800cfc6:	e7fe      	b.n	800cfc6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800cfc8:	f001 ff12 	bl	800edf0 <xTaskResumeAll>
 800cfcc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800cfd0:	4640      	mov	r0, r8
 800cfd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cfd6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cfd8:	4a36      	ldr	r2, [pc, #216]	; (800d0b4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800cfda:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cfdc:	4614      	mov	r4, r2
 800cfde:	6812      	ldr	r2, [r2, #0]
 800cfe0:	4291      	cmp	r1, r2
 800cfe2:	d8fb      	bhi.n	800cfdc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cfe4:	6860      	ldr	r0, [r4, #4]
 800cfe6:	eb04 0e00 	add.w	lr, r4, r0
 800cfea:	4571      	cmp	r1, lr
 800cfec:	d04b      	beq.n	800d086 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfee:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cff2:	eb01 000e 	add.w	r0, r1, lr
 800cff6:	4282      	cmp	r2, r0
 800cff8:	d051      	beq.n	800d09e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cffa:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cffc:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cffe:	bf18      	it	ne
 800d000:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d002:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d004:	4a2c      	ldr	r2, [pc, #176]	; (800d0b8 <pvPortMalloc+0x168>)
 800d006:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d008:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d00a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d00c:	bf38      	it	cc
 800d00e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d010:	4a2a      	ldr	r2, [pc, #168]	; (800d0bc <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d012:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d016:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d018:	2000      	movs	r0, #0
 800d01a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d01e:	6813      	ldr	r3, [r2, #0]
 800d020:	3301      	adds	r3, #1
 800d022:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d024:	f001 fee4 	bl	800edf0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d028:	f018 0f07 	tst.w	r8, #7
 800d02c:	d0d0      	beq.n	800cfd0 <pvPortMalloc+0x80>
 800d02e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d032:	f383 8811 	msr	BASEPRI, r3
 800d036:	f3bf 8f6f 	isb	sy
 800d03a:	f3bf 8f4f 	dsb	sy
 800d03e:	e7fe      	b.n	800d03e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d040:	4b1f      	ldr	r3, [pc, #124]	; (800d0c0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d042:	075e      	lsls	r6, r3, #29
 800d044:	d118      	bne.n	800d078 <pvPortMalloc+0x128>
 800d046:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d04a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d04c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d04e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d052:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d054:	4a18      	ldr	r2, [pc, #96]	; (800d0b8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d056:	4817      	ldr	r0, [pc, #92]	; (800d0b4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d058:	4c15      	ldr	r4, [pc, #84]	; (800d0b0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d05a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d05c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d05e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d060:	4a18      	ldr	r2, [pc, #96]	; (800d0c4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d062:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d066:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d068:	2200      	movs	r2, #0
 800d06a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d06c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d06e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d072:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d076:	e776      	b.n	800cf66 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d078:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d07a:	f021 0107 	bic.w	r1, r1, #7
 800d07e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d082:	460b      	mov	r3, r1
 800d084:	e7e2      	b.n	800d04c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d086:	6849      	ldr	r1, [r1, #4]
 800d088:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d08c:	eb04 010e 	add.w	r1, r4, lr
 800d090:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d092:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d096:	d001      	beq.n	800d09c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d098:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d09a:	e7b2      	b.n	800d002 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d09c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d09e:	42b2      	cmp	r2, r6
 800d0a0:	d0ab      	beq.n	800cffa <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d0a2:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d0a4:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d0a6:	4470      	add	r0, lr
 800d0a8:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d0aa:	e7a6      	b.n	800cffa <pvPortMalloc+0xaa>
 800d0ac:	20002924 	.word	0x20002924
 800d0b0:	20012928 	.word	0x20012928
 800d0b4:	2001293c 	.word	0x2001293c
 800d0b8:	20012930 	.word	0x20012930
 800d0bc:	20012934 	.word	0x20012934
 800d0c0:	20002928 	.word	0x20002928
 800d0c4:	2001292c 	.word	0x2001292c

0800d0c8 <vPortFree>:
	if( pv != NULL )
 800d0c8:	b1d0      	cbz	r0, 800d100 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d0ca:	4a2c      	ldr	r2, [pc, #176]	; (800d17c <vPortFree+0xb4>)
 800d0cc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d0d0:	6812      	ldr	r2, [r2, #0]
 800d0d2:	4213      	tst	r3, r2
 800d0d4:	d00b      	beq.n	800d0ee <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d0d6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d0da:	b191      	cbz	r1, 800d102 <vPortFree+0x3a>
 800d0dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0e0:	f383 8811 	msr	BASEPRI, r3
 800d0e4:	f3bf 8f6f 	isb	sy
 800d0e8:	f3bf 8f4f 	dsb	sy
 800d0ec:	e7fe      	b.n	800d0ec <vPortFree+0x24>
 800d0ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0f2:	f383 8811 	msr	BASEPRI, r3
 800d0f6:	f3bf 8f6f 	isb	sy
 800d0fa:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d0fe:	e7fe      	b.n	800d0fe <vPortFree+0x36>
 800d100:	4770      	bx	lr
{
 800d102:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d104:	ea23 0302 	bic.w	r3, r3, r2
{
 800d108:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d10a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d10e:	4c1c      	ldr	r4, [pc, #112]	; (800d180 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d110:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d112:	f001 fe65 	bl	800ede0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d116:	9801      	ldr	r0, [sp, #4]
 800d118:	6822      	ldr	r2, [r4, #0]
 800d11a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d11e:	4b19      	ldr	r3, [pc, #100]	; (800d184 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d120:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d122:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d124:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d126:	461a      	mov	r2, r3
 800d128:	681b      	ldr	r3, [r3, #0]
 800d12a:	4298      	cmp	r0, r3
 800d12c:	d8fb      	bhi.n	800d126 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d12e:	6854      	ldr	r4, [r2, #4]
 800d130:	eb02 0e04 	add.w	lr, r2, r4
 800d134:	4570      	cmp	r0, lr
 800d136:	d010      	beq.n	800d15a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d138:	eb00 0c01 	add.w	ip, r0, r1
 800d13c:	4563      	cmp	r3, ip
 800d13e:	d014      	beq.n	800d16a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d140:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d142:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d144:	bf18      	it	ne
 800d146:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d148:	4a0f      	ldr	r2, [pc, #60]	; (800d188 <vPortFree+0xc0>)
 800d14a:	6813      	ldr	r3, [r2, #0]
 800d14c:	3301      	adds	r3, #1
 800d14e:	6013      	str	r3, [r2, #0]
}
 800d150:	b002      	add	sp, #8
 800d152:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d156:	f001 be4b 	b.w	800edf0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d15a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d15c:	1850      	adds	r0, r2, r1
 800d15e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d160:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d162:	d001      	beq.n	800d168 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d164:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d166:	e7ef      	b.n	800d148 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d168:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d16a:	4c08      	ldr	r4, [pc, #32]	; (800d18c <vPortFree+0xc4>)
 800d16c:	6824      	ldr	r4, [r4, #0]
 800d16e:	42a3      	cmp	r3, r4
 800d170:	d0e6      	beq.n	800d140 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d172:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d176:	4421      	add	r1, r4
 800d178:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d17a:	e7e1      	b.n	800d140 <vPortFree+0x78>
 800d17c:	20012928 	.word	0x20012928
 800d180:	2001292c 	.word	0x2001292c
 800d184:	2001293c 	.word	0x2001293c
 800d188:	20012938 	.word	0x20012938
 800d18c:	20002924 	.word	0x20002924

0800d190 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d190:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d194:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d198:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d19a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d19e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d1a2:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d1a4:	4770      	bx	lr
 800d1a6:	bf00      	nop

0800d1a8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d1a8:	2300      	movs	r3, #0
 800d1aa:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d1ac:	4770      	bx	lr
 800d1ae:	bf00      	nop

0800d1b0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d1b0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d1b2:	689a      	ldr	r2, [r3, #8]
 800d1b4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d1b6:	6802      	ldr	r2, [r0, #0]
{
 800d1b8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d1ba:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d1bc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d1be:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d1c0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d1c2:	6099      	str	r1, [r3, #8]
}
 800d1c4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d1c8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d1ca:	6002      	str	r2, [r0, #0]
}
 800d1cc:	4770      	bx	lr
 800d1ce:	bf00      	nop

0800d1d0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d1d0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d1d2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d1d4:	1c6b      	adds	r3, r5, #1
 800d1d6:	d010      	beq.n	800d1fa <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d1d8:	f100 0308 	add.w	r3, r0, #8
 800d1dc:	461c      	mov	r4, r3
 800d1de:	685b      	ldr	r3, [r3, #4]
 800d1e0:	681a      	ldr	r2, [r3, #0]
 800d1e2:	42aa      	cmp	r2, r5
 800d1e4:	d9fa      	bls.n	800d1dc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d1e6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d1e8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d1ea:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d1ec:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d1ee:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d1f0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d1f2:	6108      	str	r0, [r1, #16]
}
 800d1f4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d1f6:	6002      	str	r2, [r0, #0]
}
 800d1f8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d1fa:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d1fc:	6863      	ldr	r3, [r4, #4]
 800d1fe:	e7f2      	b.n	800d1e6 <vListInsert+0x16>

0800d200 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d200:	6903      	ldr	r3, [r0, #16]
{
 800d202:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d204:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d208:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d20a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d20c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d20e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d210:	bf08      	it	eq
 800d212:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d214:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d216:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d21a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d21c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d21e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d220:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d222:	6818      	ldr	r0, [r3, #0]
}
 800d224:	4770      	bx	lr
 800d226:	bf00      	nop

0800d228 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d228:	4808      	ldr	r0, [pc, #32]	; (800d24c <prvPortStartFirstTask+0x24>)
 800d22a:	6800      	ldr	r0, [r0, #0]
 800d22c:	6800      	ldr	r0, [r0, #0]
 800d22e:	f380 8808 	msr	MSP, r0
 800d232:	f04f 0000 	mov.w	r0, #0
 800d236:	f380 8814 	msr	CONTROL, r0
 800d23a:	b662      	cpsie	i
 800d23c:	b661      	cpsie	f
 800d23e:	f3bf 8f4f 	dsb	sy
 800d242:	f3bf 8f6f 	isb	sy
 800d246:	df00      	svc	0
 800d248:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d24a:	0000      	.short	0x0000
 800d24c:	e000ed08 	.word	0xe000ed08

0800d250 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d250:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d260 <vPortEnableVFP+0x10>
 800d254:	6801      	ldr	r1, [r0, #0]
 800d256:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d25a:	6001      	str	r1, [r0, #0]
 800d25c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d25e:	0000      	.short	0x0000
 800d260:	e000ed88 	.word	0xe000ed88

0800d264 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d264:	4b0e      	ldr	r3, [pc, #56]	; (800d2a0 <prvTaskExitError+0x3c>)
 800d266:	681b      	ldr	r3, [r3, #0]
{
 800d268:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d26a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d26c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d26e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d270:	d008      	beq.n	800d284 <prvTaskExitError+0x20>
 800d272:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d276:	f383 8811 	msr	BASEPRI, r3
 800d27a:	f3bf 8f6f 	isb	sy
 800d27e:	f3bf 8f4f 	dsb	sy
 800d282:	e7fe      	b.n	800d282 <prvTaskExitError+0x1e>
 800d284:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d288:	f383 8811 	msr	BASEPRI, r3
 800d28c:	f3bf 8f6f 	isb	sy
 800d290:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d294:	9b01      	ldr	r3, [sp, #4]
 800d296:	2b00      	cmp	r3, #0
 800d298:	d0fc      	beq.n	800d294 <prvTaskExitError+0x30>
}
 800d29a:	b002      	add	sp, #8
 800d29c:	4770      	bx	lr
 800d29e:	bf00      	nop
 800d2a0:	20000084 	.word	0x20000084

0800d2a4 <pxPortInitialiseStack>:
{
 800d2a4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d2a6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d2aa:	4c07      	ldr	r4, [pc, #28]	; (800d2c8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d2ac:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d2b0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d2b4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d2b8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d2bc:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d2c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d2c4:	3844      	subs	r0, #68	; 0x44
 800d2c6:	4770      	bx	lr
 800d2c8:	0800d265 	.word	0x0800d265
 800d2cc:	00000000 	.word	0x00000000

0800d2d0 <SVC_Handler>:
	__asm volatile (
 800d2d0:	4b07      	ldr	r3, [pc, #28]	; (800d2f0 <pxCurrentTCBConst2>)
 800d2d2:	6819      	ldr	r1, [r3, #0]
 800d2d4:	6808      	ldr	r0, [r1, #0]
 800d2d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2da:	f380 8809 	msr	PSP, r0
 800d2de:	f3bf 8f6f 	isb	sy
 800d2e2:	f04f 0000 	mov.w	r0, #0
 800d2e6:	f380 8811 	msr	BASEPRI, r0
 800d2ea:	4770      	bx	lr
 800d2ec:	f3af 8000 	nop.w

0800d2f0 <pxCurrentTCBConst2>:
 800d2f0:	20012990 	.word	0x20012990

0800d2f4 <vPortEnterCritical>:
 800d2f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f8:	f383 8811 	msr	BASEPRI, r3
 800d2fc:	f3bf 8f6f 	isb	sy
 800d300:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d304:	4a0b      	ldr	r2, [pc, #44]	; (800d334 <vPortEnterCritical+0x40>)
 800d306:	6813      	ldr	r3, [r2, #0]
 800d308:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d30a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d30c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d30e:	d000      	beq.n	800d312 <vPortEnterCritical+0x1e>
}
 800d310:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d312:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d316:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d31a:	b2db      	uxtb	r3, r3
 800d31c:	2b00      	cmp	r3, #0
 800d31e:	d0f7      	beq.n	800d310 <vPortEnterCritical+0x1c>
 800d320:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d324:	f383 8811 	msr	BASEPRI, r3
 800d328:	f3bf 8f6f 	isb	sy
 800d32c:	f3bf 8f4f 	dsb	sy
 800d330:	e7fe      	b.n	800d330 <vPortEnterCritical+0x3c>
 800d332:	bf00      	nop
 800d334:	20000084 	.word	0x20000084

0800d338 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d338:	4a08      	ldr	r2, [pc, #32]	; (800d35c <vPortExitCritical+0x24>)
 800d33a:	6813      	ldr	r3, [r2, #0]
 800d33c:	b943      	cbnz	r3, 800d350 <vPortExitCritical+0x18>
 800d33e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d342:	f383 8811 	msr	BASEPRI, r3
 800d346:	f3bf 8f6f 	isb	sy
 800d34a:	f3bf 8f4f 	dsb	sy
 800d34e:	e7fe      	b.n	800d34e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d350:	3b01      	subs	r3, #1
 800d352:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d354:	b90b      	cbnz	r3, 800d35a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d356:	f383 8811 	msr	BASEPRI, r3
}
 800d35a:	4770      	bx	lr
 800d35c:	20000084 	.word	0x20000084

0800d360 <PendSV_Handler>:
	__asm volatile
 800d360:	f3ef 8009 	mrs	r0, PSP
 800d364:	f3bf 8f6f 	isb	sy
 800d368:	4b15      	ldr	r3, [pc, #84]	; (800d3c0 <pxCurrentTCBConst>)
 800d36a:	681a      	ldr	r2, [r3, #0]
 800d36c:	f01e 0f10 	tst.w	lr, #16
 800d370:	bf08      	it	eq
 800d372:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d376:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d37a:	6010      	str	r0, [r2, #0]
 800d37c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d380:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d384:	f380 8811 	msr	BASEPRI, r0
 800d388:	f3bf 8f4f 	dsb	sy
 800d38c:	f3bf 8f6f 	isb	sy
 800d390:	f001 fd54 	bl	800ee3c <vTaskSwitchContext>
 800d394:	f04f 0000 	mov.w	r0, #0
 800d398:	f380 8811 	msr	BASEPRI, r0
 800d39c:	bc09      	pop	{r0, r3}
 800d39e:	6819      	ldr	r1, [r3, #0]
 800d3a0:	6808      	ldr	r0, [r1, #0]
 800d3a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3a6:	f01e 0f10 	tst.w	lr, #16
 800d3aa:	bf08      	it	eq
 800d3ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d3b0:	f380 8809 	msr	PSP, r0
 800d3b4:	f3bf 8f6f 	isb	sy
 800d3b8:	4770      	bx	lr
 800d3ba:	bf00      	nop
 800d3bc:	f3af 8000 	nop.w

0800d3c0 <pxCurrentTCBConst>:
 800d3c0:	20012990 	.word	0x20012990

0800d3c4 <xPortSysTickHandler>:
{
 800d3c4:	b508      	push	{r3, lr}
	__asm volatile
 800d3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3ca:	f383 8811 	msr	BASEPRI, r3
 800d3ce:	f3bf 8f6f 	isb	sy
 800d3d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d3d6:	f001 fd21 	bl	800ee1c <xTaskIncrementTick>
 800d3da:	b128      	cbz	r0, 800d3e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d3dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d3e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d3e8:	2300      	movs	r3, #0
 800d3ea:	f383 8811 	msr	BASEPRI, r3
}
 800d3ee:	bd08      	pop	{r3, pc}

0800d3f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d3f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d3f4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d3f6:	4906      	ldr	r1, [pc, #24]	; (800d410 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d3f8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d3fa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d3fc:	680b      	ldr	r3, [r1, #0]
 800d3fe:	4905      	ldr	r1, [pc, #20]	; (800d414 <vPortSetupTimerInterrupt+0x24>)
 800d400:	fba1 1303 	umull	r1, r3, r1, r3
 800d404:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d406:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d408:	3b01      	subs	r3, #1
 800d40a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d40c:	6110      	str	r0, [r2, #16]
}
 800d40e:	4770      	bx	lr
 800d410:	20000078 	.word	0x20000078
 800d414:	10624dd3 	.word	0x10624dd3

0800d418 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d418:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d41c:	4a49      	ldr	r2, [pc, #292]	; (800d544 <xPortStartScheduler+0x12c>)
 800d41e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d422:	4291      	cmp	r1, r2
 800d424:	d043      	beq.n	800d4ae <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d426:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d42a:	4b47      	ldr	r3, [pc, #284]	; (800d548 <xPortStartScheduler+0x130>)
 800d42c:	429a      	cmp	r2, r3
 800d42e:	d035      	beq.n	800d49c <xPortStartScheduler+0x84>
{
 800d430:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d432:	4b46      	ldr	r3, [pc, #280]	; (800d54c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d434:	4846      	ldr	r0, [pc, #280]	; (800d550 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d436:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d438:	4c46      	ldr	r4, [pc, #280]	; (800d554 <xPortStartScheduler+0x13c>)
{
 800d43a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d43c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d43e:	b2d2      	uxtb	r2, r2
 800d440:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d442:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d444:	781b      	ldrb	r3, [r3, #0]
 800d446:	b2db      	uxtb	r3, r3
 800d448:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d44c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d450:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d454:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d458:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d45a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d45c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d45e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d460:	bf48      	it	mi
 800d462:	2206      	movmi	r2, #6
 800d464:	d511      	bpl.n	800d48a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d466:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d46a:	005b      	lsls	r3, r3, #1
 800d46c:	b2db      	uxtb	r3, r3
 800d46e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d472:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d476:	0609      	lsls	r1, r1, #24
 800d478:	4610      	mov	r0, r2
 800d47a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d47e:	d4f2      	bmi.n	800d466 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d480:	2803      	cmp	r0, #3
 800d482:	6020      	str	r0, [r4, #0]
 800d484:	f88d 3007 	strb.w	r3, [sp, #7]
 800d488:	d01a      	beq.n	800d4c0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d48a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d48e:	f383 8811 	msr	BASEPRI, r3
 800d492:	f3bf 8f6f 	isb	sy
 800d496:	f3bf 8f4f 	dsb	sy
 800d49a:	e7fe      	b.n	800d49a <xPortStartScheduler+0x82>
 800d49c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4a0:	f383 8811 	msr	BASEPRI, r3
 800d4a4:	f3bf 8f6f 	isb	sy
 800d4a8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d4ac:	e7fe      	b.n	800d4ac <xPortStartScheduler+0x94>
 800d4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b2:	f383 8811 	msr	BASEPRI, r3
 800d4b6:	f3bf 8f6f 	isb	sy
 800d4ba:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d4be:	e7fe      	b.n	800d4be <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d4c0:	9b02      	ldr	r3, [sp, #8]
 800d4c2:	4a22      	ldr	r2, [pc, #136]	; (800d54c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d4c4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d4c8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d4cc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d4ce:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d4d0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d4d2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d4d6:	4c20      	ldr	r4, [pc, #128]	; (800d558 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d4d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d4dc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d4e0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d4e4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d4e8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d4ec:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d4ee:	f7ff ff7f 	bl	800d3f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d4f2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d4f4:	f7ff feac 	bl	800d250 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d4f8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d4fc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d500:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d504:	f7ff fe90 	bl	800d228 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d508:	f001 fc98 	bl	800ee3c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d50c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d50e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d510:	3301      	adds	r3, #1
 800d512:	d008      	beq.n	800d526 <xPortStartScheduler+0x10e>
 800d514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d518:	f383 8811 	msr	BASEPRI, r3
 800d51c:	f3bf 8f6f 	isb	sy
 800d520:	f3bf 8f4f 	dsb	sy
 800d524:	e7fe      	b.n	800d524 <xPortStartScheduler+0x10c>
 800d526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d52a:	f383 8811 	msr	BASEPRI, r3
 800d52e:	f3bf 8f6f 	isb	sy
 800d532:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d536:	9b03      	ldr	r3, [sp, #12]
 800d538:	2b00      	cmp	r3, #0
 800d53a:	d0fc      	beq.n	800d536 <xPortStartScheduler+0x11e>
}
 800d53c:	2000      	movs	r0, #0
 800d53e:	b004      	add	sp, #16
 800d540:	bd70      	pop	{r4, r5, r6, pc}
 800d542:	bf00      	nop
 800d544:	410fc271 	.word	0x410fc271
 800d548:	410fc270 	.word	0x410fc270
 800d54c:	e000e400 	.word	0xe000e400
 800d550:	20012944 	.word	0x20012944
 800d554:	20012948 	.word	0x20012948
 800d558:	20000084 	.word	0x20000084

0800d55c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d55c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d560:	2b0f      	cmp	r3, #15
 800d562:	d90e      	bls.n	800d582 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d564:	4911      	ldr	r1, [pc, #68]	; (800d5ac <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d566:	4a12      	ldr	r2, [pc, #72]	; (800d5b0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d568:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d56a:	7812      	ldrb	r2, [r2, #0]
 800d56c:	429a      	cmp	r2, r3
 800d56e:	d908      	bls.n	800d582 <vPortValidateInterruptPriority+0x26>
 800d570:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d574:	f383 8811 	msr	BASEPRI, r3
 800d578:	f3bf 8f6f 	isb	sy
 800d57c:	f3bf 8f4f 	dsb	sy
 800d580:	e7fe      	b.n	800d580 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d582:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d586:	4a0b      	ldr	r2, [pc, #44]	; (800d5b4 <vPortValidateInterruptPriority+0x58>)
 800d588:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d58c:	6812      	ldr	r2, [r2, #0]
 800d58e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d592:	4293      	cmp	r3, r2
 800d594:	d908      	bls.n	800d5a8 <vPortValidateInterruptPriority+0x4c>
 800d596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d59a:	f383 8811 	msr	BASEPRI, r3
 800d59e:	f3bf 8f6f 	isb	sy
 800d5a2:	f3bf 8f4f 	dsb	sy
 800d5a6:	e7fe      	b.n	800d5a6 <vPortValidateInterruptPriority+0x4a>
	}
 800d5a8:	4770      	bx	lr
 800d5aa:	bf00      	nop
 800d5ac:	e000e3f0 	.word	0xe000e3f0
 800d5b0:	20012944 	.word	0x20012944
 800d5b4:	20012948 	.word	0x20012948

0800d5b8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d5b8:	b570      	push	{r4, r5, r6, lr}
 800d5ba:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d5bc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d5be:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d5c0:	b920      	cbnz	r0, 800d5cc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d5c2:	6825      	ldr	r5, [r4, #0]
 800d5c4:	b34d      	cbz	r5, 800d61a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5c6:	3601      	adds	r6, #1
 800d5c8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d5ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d5cc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d5ce:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d5d0:	b97d      	cbnz	r5, 800d5f2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d5d2:	6860      	ldr	r0, [r4, #4]
 800d5d4:	f01d fe13 	bl	802b1fe <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d5d8:	6863      	ldr	r3, [r4, #4]
 800d5da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d5dc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5de:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d5e0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d5e2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d5e4:	bf24      	itt	cs
 800d5e6:	6823      	ldrcs	r3, [r4, #0]
 800d5e8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5ea:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d5ec:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d5ee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d5f0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d5f2:	68e0      	ldr	r0, [r4, #12]
 800d5f4:	f01d fe03 	bl	802b1fe <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d5f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d5fa:	68e3      	ldr	r3, [r4, #12]
 800d5fc:	4251      	negs	r1, r2
 800d5fe:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d600:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d602:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d604:	4293      	cmp	r3, r2
 800d606:	d202      	bcs.n	800d60e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d608:	68a3      	ldr	r3, [r4, #8]
 800d60a:	440b      	add	r3, r1
 800d60c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d60e:	2d02      	cmp	r5, #2
 800d610:	d008      	beq.n	800d624 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d612:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d614:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d616:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d618:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d61a:	68a0      	ldr	r0, [r4, #8]
 800d61c:	f001 fde0 	bl	800f1e0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d620:	60a5      	str	r5, [r4, #8]
 800d622:	e7d0      	b.n	800d5c6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d624:	2e01      	cmp	r6, #1
 800d626:	bf38      	it	cc
 800d628:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d62a:	2000      	movs	r0, #0
 800d62c:	e7cc      	b.n	800d5c8 <prvCopyDataToQueue+0x10>
 800d62e:	bf00      	nop

0800d630 <xQueueGenericCreateStatic>:
	{
 800d630:	b530      	push	{r4, r5, lr}
 800d632:	b083      	sub	sp, #12
 800d634:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d638:	b940      	cbnz	r0, 800d64c <xQueueGenericCreateStatic+0x1c>
 800d63a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d63e:	f383 8811 	msr	BASEPRI, r3
 800d642:	f3bf 8f6f 	isb	sy
 800d646:	f3bf 8f4f 	dsb	sy
 800d64a:	e7fe      	b.n	800d64a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d64c:	461d      	mov	r5, r3
 800d64e:	b17b      	cbz	r3, 800d670 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d650:	b302      	cbz	r2, 800d694 <xQueueGenericCreateStatic+0x64>
 800d652:	b1b1      	cbz	r1, 800d682 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d654:	2350      	movs	r3, #80	; 0x50
 800d656:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d658:	9b01      	ldr	r3, [sp, #4]
 800d65a:	2b50      	cmp	r3, #80	; 0x50
 800d65c:	d023      	beq.n	800d6a6 <xQueueGenericCreateStatic+0x76>
 800d65e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d662:	f383 8811 	msr	BASEPRI, r3
 800d666:	f3bf 8f6f 	isb	sy
 800d66a:	f3bf 8f4f 	dsb	sy
 800d66e:	e7fe      	b.n	800d66e <xQueueGenericCreateStatic+0x3e>
 800d670:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d674:	f383 8811 	msr	BASEPRI, r3
 800d678:	f3bf 8f6f 	isb	sy
 800d67c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d680:	e7fe      	b.n	800d680 <xQueueGenericCreateStatic+0x50>
 800d682:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d686:	f383 8811 	msr	BASEPRI, r3
 800d68a:	f3bf 8f6f 	isb	sy
 800d68e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d692:	e7fe      	b.n	800d692 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d694:	bb89      	cbnz	r1, 800d6fa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d696:	2250      	movs	r2, #80	; 0x50
 800d698:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d69a:	9a01      	ldr	r2, [sp, #4]
 800d69c:	2a50      	cmp	r2, #80	; 0x50
 800d69e:	d1de      	bne.n	800d65e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d6a0:	9a01      	ldr	r2, [sp, #4]
 800d6a2:	462a      	mov	r2, r5
 800d6a4:	e000      	b.n	800d6a8 <xQueueGenericCreateStatic+0x78>
 800d6a6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d6a8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6aa:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d6ac:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d6b0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d6b4:	f7ff fe1e 	bl	800d2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6b8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d6bc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d6be:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6c0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6c4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6c6:	4401      	add	r1, r0
 800d6c8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d6ca:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6cc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d6ce:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d6d0:	21ff      	movs	r1, #255	; 0xff
 800d6d2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6d6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d6d8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d6dc:	f105 0010 	add.w	r0, r5, #16
 800d6e0:	f7ff fd56 	bl	800d190 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d6e4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d6e8:	f7ff fd52 	bl	800d190 <vListInitialise>
	taskEXIT_CRITICAL();
 800d6ec:	f7ff fe24 	bl	800d338 <vPortExitCritical>
	}
 800d6f0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d6f2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d6f6:	b003      	add	sp, #12
 800d6f8:	bd30      	pop	{r4, r5, pc}
 800d6fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6fe:	f383 8811 	msr	BASEPRI, r3
 800d702:	f3bf 8f6f 	isb	sy
 800d706:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d70a:	e7fe      	b.n	800d70a <xQueueGenericCreateStatic+0xda>

0800d70c <xQueueGenericCreate>:
	{
 800d70c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d70e:	b940      	cbnz	r0, 800d722 <xQueueGenericCreate+0x16>
 800d710:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d714:	f383 8811 	msr	BASEPRI, r3
 800d718:	f3bf 8f6f 	isb	sy
 800d71c:	f3bf 8f4f 	dsb	sy
 800d720:	e7fe      	b.n	800d720 <xQueueGenericCreate+0x14>
 800d722:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d724:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d728:	3050      	adds	r0, #80	; 0x50
 800d72a:	460e      	mov	r6, r1
 800d72c:	4617      	mov	r7, r2
 800d72e:	f7ff fc0f 	bl	800cf50 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d732:	4604      	mov	r4, r0
 800d734:	b340      	cbz	r0, 800d788 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d736:	2300      	movs	r3, #0
 800d738:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d73c:	b336      	cbz	r6, 800d78c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d73e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d742:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d744:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d748:	f7ff fdd4 	bl	800d2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d74c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d750:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d752:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d754:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d758:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d75a:	440a      	add	r2, r1
 800d75c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d75e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d760:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d762:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d764:	22ff      	movs	r2, #255	; 0xff
 800d766:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d76a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d76c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d770:	f104 0010 	add.w	r0, r4, #16
 800d774:	f7ff fd0c 	bl	800d190 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d778:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d77c:	f7ff fd08 	bl	800d190 <vListInitialise>
	taskEXIT_CRITICAL();
 800d780:	f7ff fdda 	bl	800d338 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d784:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d788:	4620      	mov	r0, r4
 800d78a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d78c:	4603      	mov	r3, r0
 800d78e:	e7d8      	b.n	800d742 <xQueueGenericCreate+0x36>

0800d790 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d790:	b940      	cbnz	r0, 800d7a4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d792:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d796:	f383 8811 	msr	BASEPRI, r3
 800d79a:	f3bf 8f6f 	isb	sy
 800d79e:	f3bf 8f4f 	dsb	sy
 800d7a2:	e7fe      	b.n	800d7a2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d7a4:	4288      	cmp	r0, r1
 800d7a6:	d208      	bcs.n	800d7ba <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d7a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7ac:	f383 8811 	msr	BASEPRI, r3
 800d7b0:	f3bf 8f6f 	isb	sy
 800d7b4:	f3bf 8f4f 	dsb	sy
 800d7b8:	e7fe      	b.n	800d7b8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d7ba:	b530      	push	{r4, r5, lr}
 800d7bc:	4615      	mov	r5, r2
 800d7be:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d7c0:	2a00      	cmp	r2, #0
 800d7c2:	d03c      	beq.n	800d83e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d7c4:	2350      	movs	r3, #80	; 0x50
 800d7c6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d7c8:	9b03      	ldr	r3, [sp, #12]
 800d7ca:	2b50      	cmp	r3, #80	; 0x50
 800d7cc:	d008      	beq.n	800d7e0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d7ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7d2:	f383 8811 	msr	BASEPRI, r3
 800d7d6:	f3bf 8f6f 	isb	sy
 800d7da:	f3bf 8f4f 	dsb	sy
 800d7de:	e7fe      	b.n	800d7de <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d7e0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d7e2:	2301      	movs	r3, #1
 800d7e4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d7e8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d7ea:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d7ee:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d7f0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d7f2:	f7ff fd7f 	bl	800d2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7f6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d7fa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d7fc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d7fe:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d802:	1ac3      	subs	r3, r0, r3
 800d804:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d806:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d808:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d80c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d810:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d812:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d814:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d818:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d81a:	f105 0010 	add.w	r0, r5, #16
 800d81e:	f7ff fcb7 	bl	800d190 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d822:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d826:	f7ff fcb3 	bl	800d190 <vListInitialise>
	taskEXIT_CRITICAL();
 800d82a:	f7ff fd85 	bl	800d338 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d82e:	9901      	ldr	r1, [sp, #4]
 800d830:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d832:	2302      	movs	r3, #2
	}
 800d834:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d836:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d83a:	b005      	add	sp, #20
 800d83c:	bd30      	pop	{r4, r5, pc}
 800d83e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d842:	f383 8811 	msr	BASEPRI, r3
 800d846:	f3bf 8f6f 	isb	sy
 800d84a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d84e:	e7fe      	b.n	800d84e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d850 <xQueueCreateCountingSemaphore>:
	{
 800d850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d852:	b940      	cbnz	r0, 800d866 <xQueueCreateCountingSemaphore+0x16>
 800d854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d858:	f383 8811 	msr	BASEPRI, r3
 800d85c:	f3bf 8f6f 	isb	sy
 800d860:	f3bf 8f4f 	dsb	sy
 800d864:	e7fe      	b.n	800d864 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d866:	4288      	cmp	r0, r1
 800d868:	460e      	mov	r6, r1
 800d86a:	4604      	mov	r4, r0
 800d86c:	d208      	bcs.n	800d880 <xQueueCreateCountingSemaphore+0x30>
 800d86e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d872:	f383 8811 	msr	BASEPRI, r3
 800d876:	f3bf 8f6f 	isb	sy
 800d87a:	f3bf 8f4f 	dsb	sy
 800d87e:	e7fe      	b.n	800d87e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d880:	2050      	movs	r0, #80	; 0x50
 800d882:	f7ff fb65 	bl	800cf50 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d886:	4605      	mov	r5, r0
 800d888:	b330      	cbz	r0, 800d8d8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d88a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d88c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d890:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d894:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d896:	f7ff fd2d 	bl	800d2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d89a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d89e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d8a0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8a2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8a6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8a8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8aa:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8ac:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d8ae:	22ff      	movs	r2, #255	; 0xff
 800d8b0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8b4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8b6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d8b8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d8bc:	f105 0010 	add.w	r0, r5, #16
 800d8c0:	f7ff fc66 	bl	800d190 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d8c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d8c8:	f7ff fc62 	bl	800d190 <vListInitialise>
	taskEXIT_CRITICAL();
 800d8cc:	f7ff fd34 	bl	800d338 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d8d0:	2302      	movs	r3, #2
 800d8d2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d8d6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d8d8:	4628      	mov	r0, r5
 800d8da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d8dc <xQueueGenericSend>:
{
 800d8dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8e0:	b085      	sub	sp, #20
 800d8e2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d8e4:	2800      	cmp	r0, #0
 800d8e6:	f000 80a4 	beq.w	800da32 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8ea:	4688      	mov	r8, r1
 800d8ec:	461f      	mov	r7, r3
 800d8ee:	4604      	mov	r4, r0
 800d8f0:	2900      	cmp	r1, #0
 800d8f2:	f000 8091 	beq.w	800da18 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d8f6:	2f02      	cmp	r7, #2
 800d8f8:	d10b      	bne.n	800d912 <xQueueGenericSend+0x36>
 800d8fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d8fc:	2b01      	cmp	r3, #1
 800d8fe:	d008      	beq.n	800d912 <xQueueGenericSend+0x36>
 800d900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d904:	f383 8811 	msr	BASEPRI, r3
 800d908:	f3bf 8f6f 	isb	sy
 800d90c:	f3bf 8f4f 	dsb	sy
 800d910:	e7fe      	b.n	800d910 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d912:	f001 fc0f 	bl	800f134 <xTaskGetSchedulerState>
 800d916:	4605      	mov	r5, r0
 800d918:	2800      	cmp	r0, #0
 800d91a:	f000 8093 	beq.w	800da44 <xQueueGenericSend+0x168>
 800d91e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d920:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d924:	f7ff fce6 	bl	800d2f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d928:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d92a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d92c:	429a      	cmp	r2, r3
 800d92e:	f0c0 80ef 	bcc.w	800db10 <xQueueGenericSend+0x234>
 800d932:	2f02      	cmp	r7, #2
 800d934:	f000 80ec 	beq.w	800db10 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d938:	9801      	ldr	r0, [sp, #4]
 800d93a:	2800      	cmp	r0, #0
 800d93c:	f000 8101 	beq.w	800db42 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d940:	2d00      	cmp	r5, #0
 800d942:	f000 80e1 	beq.w	800db08 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d946:	f7ff fcf7 	bl	800d338 <vPortExitCritical>
		vTaskSuspendAll();
 800d94a:	f001 fa49 	bl	800ede0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d94e:	f7ff fcd1 	bl	800d2f4 <vPortEnterCritical>
 800d952:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d956:	2bff      	cmp	r3, #255	; 0xff
 800d958:	bf04      	itt	eq
 800d95a:	2300      	moveq	r3, #0
 800d95c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d960:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d964:	2bff      	cmp	r3, #255	; 0xff
 800d966:	bf04      	itt	eq
 800d968:	2300      	moveq	r3, #0
 800d96a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d96e:	f7ff fce3 	bl	800d338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d972:	a901      	add	r1, sp, #4
 800d974:	a802      	add	r0, sp, #8
 800d976:	f001 fb8f 	bl	800f098 <xTaskCheckForTimeOut>
 800d97a:	2800      	cmp	r0, #0
 800d97c:	f040 80e6 	bne.w	800db4c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d980:	f7ff fcb8 	bl	800d2f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d984:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d986:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d988:	429a      	cmp	r2, r3
 800d98a:	d068      	beq.n	800da5e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d98c:	f7ff fcd4 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d990:	f7ff fcb0 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d994:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d998:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d99a:	2d00      	cmp	r5, #0
 800d99c:	dc04      	bgt.n	800d9a8 <xQueueGenericSend+0xcc>
 800d99e:	e011      	b.n	800d9c4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d9a0:	1e6a      	subs	r2, r5, #1
 800d9a2:	b2d3      	uxtb	r3, r2
 800d9a4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9a6:	b16b      	cbz	r3, 800d9c4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9ac:	b153      	cbz	r3, 800d9c4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9ae:	f001 fb1f 	bl	800eff0 <xTaskRemoveFromEventList>
 800d9b2:	2800      	cmp	r0, #0
 800d9b4:	d0f4      	beq.n	800d9a0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d9b6:	f001 fbb7 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800d9ba:	1e6a      	subs	r2, r5, #1
 800d9bc:	b2d3      	uxtb	r3, r2
 800d9be:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9c0:	2b00      	cmp	r3, #0
 800d9c2:	d1f1      	bne.n	800d9a8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d9c4:	23ff      	movs	r3, #255	; 0xff
 800d9c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d9ca:	f7ff fcb5 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d9ce:	f7ff fc91 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d9d2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d9d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9d8:	2d00      	cmp	r5, #0
 800d9da:	dd14      	ble.n	800da06 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9dc:	f104 0910 	add.w	r9, r4, #16
 800d9e0:	e003      	b.n	800d9ea <xQueueGenericSend+0x10e>
				--cRxLock;
 800d9e2:	1e6a      	subs	r2, r5, #1
 800d9e4:	b2d3      	uxtb	r3, r2
 800d9e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9e8:	b16b      	cbz	r3, 800da06 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9ea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9ec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9ee:	b153      	cbz	r3, 800da06 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9f0:	f001 fafe 	bl	800eff0 <xTaskRemoveFromEventList>
 800d9f4:	2800      	cmp	r0, #0
 800d9f6:	d0f4      	beq.n	800d9e2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d9f8:	f001 fb96 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800d9fc:	1e6a      	subs	r2, r5, #1
 800d9fe:	b2d3      	uxtb	r3, r2
 800da00:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da02:	2b00      	cmp	r3, #0
 800da04:	d1f1      	bne.n	800d9ea <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800da06:	23ff      	movs	r3, #255	; 0xff
 800da08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da0c:	f7ff fc94 	bl	800d338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800da10:	f001 f9ee 	bl	800edf0 <xTaskResumeAll>
 800da14:	2501      	movs	r5, #1
 800da16:	e785      	b.n	800d924 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da18:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da1a:	2b00      	cmp	r3, #0
 800da1c:	f43f af6b 	beq.w	800d8f6 <xQueueGenericSend+0x1a>
 800da20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da24:	f383 8811 	msr	BASEPRI, r3
 800da28:	f3bf 8f6f 	isb	sy
 800da2c:	f3bf 8f4f 	dsb	sy
 800da30:	e7fe      	b.n	800da30 <xQueueGenericSend+0x154>
 800da32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da36:	f383 8811 	msr	BASEPRI, r3
 800da3a:	f3bf 8f6f 	isb	sy
 800da3e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800da42:	e7fe      	b.n	800da42 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da44:	9b01      	ldr	r3, [sp, #4]
 800da46:	2b00      	cmp	r3, #0
 800da48:	f43f af6a 	beq.w	800d920 <xQueueGenericSend+0x44>
 800da4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da50:	f383 8811 	msr	BASEPRI, r3
 800da54:	f3bf 8f6f 	isb	sy
 800da58:	f3bf 8f4f 	dsb	sy
 800da5c:	e7fe      	b.n	800da5c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800da5e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800da62:	f7ff fc69 	bl	800d338 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800da66:	9901      	ldr	r1, [sp, #4]
 800da68:	4648      	mov	r0, r9
 800da6a:	f001 fa33 	bl	800eed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800da6e:	f7ff fc41 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da72:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da76:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da78:	2d00      	cmp	r5, #0
 800da7a:	dc04      	bgt.n	800da86 <xQueueGenericSend+0x1aa>
 800da7c:	e011      	b.n	800daa2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800da7e:	1e6b      	subs	r3, r5, #1
 800da80:	b2da      	uxtb	r2, r3
 800da82:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da84:	b16a      	cbz	r2, 800daa2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da86:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da88:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da8a:	b153      	cbz	r3, 800daa2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da8c:	f001 fab0 	bl	800eff0 <xTaskRemoveFromEventList>
 800da90:	2800      	cmp	r0, #0
 800da92:	d0f4      	beq.n	800da7e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800da94:	f001 fb48 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800da98:	1e6b      	subs	r3, r5, #1
 800da9a:	b2da      	uxtb	r2, r3
 800da9c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da9e:	2a00      	cmp	r2, #0
 800daa0:	d1f1      	bne.n	800da86 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800daa2:	23ff      	movs	r3, #255	; 0xff
 800daa4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800daa8:	f7ff fc46 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800daac:	f7ff fc22 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dab0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dab4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dab6:	2d00      	cmp	r5, #0
 800dab8:	dc04      	bgt.n	800dac4 <xQueueGenericSend+0x1e8>
 800daba:	e011      	b.n	800dae0 <xQueueGenericSend+0x204>
				--cRxLock;
 800dabc:	1e6b      	subs	r3, r5, #1
 800dabe:	b2da      	uxtb	r2, r3
 800dac0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dac2:	b16a      	cbz	r2, 800dae0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dac4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dac6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dac8:	b153      	cbz	r3, 800dae0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daca:	f001 fa91 	bl	800eff0 <xTaskRemoveFromEventList>
 800dace:	2800      	cmp	r0, #0
 800dad0:	d0f4      	beq.n	800dabc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800dad2:	f001 fb29 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800dad6:	1e6b      	subs	r3, r5, #1
 800dad8:	b2da      	uxtb	r2, r3
 800dada:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dadc:	2a00      	cmp	r2, #0
 800dade:	d1f1      	bne.n	800dac4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800dae0:	23ff      	movs	r3, #255	; 0xff
 800dae2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dae6:	f7ff fc27 	bl	800d338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800daea:	f001 f981 	bl	800edf0 <xTaskResumeAll>
 800daee:	2800      	cmp	r0, #0
 800daf0:	d190      	bne.n	800da14 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800daf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800daf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dafa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dafe:	f3bf 8f4f 	dsb	sy
 800db02:	f3bf 8f6f 	isb	sy
 800db06:	e785      	b.n	800da14 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800db08:	a802      	add	r0, sp, #8
 800db0a:	f001 fab9 	bl	800f080 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800db0e:	e71a      	b.n	800d946 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800db10:	463a      	mov	r2, r7
 800db12:	4641      	mov	r1, r8
 800db14:	4620      	mov	r0, r4
 800db16:	f7ff fd4f 	bl	800d5b8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800db1c:	2b00      	cmp	r3, #0
 800db1e:	d153      	bne.n	800dbc8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800db20:	b148      	cbz	r0, 800db36 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800db22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800db2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800db2e:	f3bf 8f4f 	dsb	sy
 800db32:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800db36:	f7ff fbff 	bl	800d338 <vPortExitCritical>
				return pdPASS;
 800db3a:	2001      	movs	r0, #1
}
 800db3c:	b005      	add	sp, #20
 800db3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db42:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800db44:	f7ff fbf8 	bl	800d338 <vPortExitCritical>
					return errQUEUE_FULL;
 800db48:	9800      	ldr	r0, [sp, #0]
 800db4a:	e7f7      	b.n	800db3c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800db4c:	f7ff fbd2 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db50:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db56:	2d00      	cmp	r5, #0
 800db58:	dd10      	ble.n	800db7c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db5a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800db5e:	e003      	b.n	800db68 <xQueueGenericSend+0x28c>
			--cTxLock;
 800db60:	1e6b      	subs	r3, r5, #1
 800db62:	b2da      	uxtb	r2, r3
 800db64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db66:	b14a      	cbz	r2, 800db7c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db6c:	b133      	cbz	r3, 800db7c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db6e:	f001 fa3f 	bl	800eff0 <xTaskRemoveFromEventList>
 800db72:	2800      	cmp	r0, #0
 800db74:	d0f4      	beq.n	800db60 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800db76:	f001 fad7 	bl	800f128 <vTaskMissedYield>
 800db7a:	e7f1      	b.n	800db60 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800db7c:	23ff      	movs	r3, #255	; 0xff
 800db7e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800db82:	f7ff fbd9 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db86:	f7ff fbb5 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db90:	2d00      	cmp	r5, #0
 800db92:	dd10      	ble.n	800dbb6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db94:	f104 0610 	add.w	r6, r4, #16
 800db98:	e003      	b.n	800dba2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800db9a:	1e6b      	subs	r3, r5, #1
 800db9c:	b2da      	uxtb	r2, r3
 800db9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dba0:	b14a      	cbz	r2, 800dbb6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dba2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dba4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dba6:	b133      	cbz	r3, 800dbb6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dba8:	f001 fa22 	bl	800eff0 <xTaskRemoveFromEventList>
 800dbac:	2800      	cmp	r0, #0
 800dbae:	d0f4      	beq.n	800db9a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dbb0:	f001 faba 	bl	800f128 <vTaskMissedYield>
 800dbb4:	e7f1      	b.n	800db9a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dbb6:	23ff      	movs	r3, #255	; 0xff
 800dbb8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dbbc:	f7ff fbbc 	bl	800d338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dbc0:	f001 f916 	bl	800edf0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800dbc4:	2000      	movs	r0, #0
 800dbc6:	e7b9      	b.n	800db3c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbc8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dbcc:	f001 fa10 	bl	800eff0 <xTaskRemoveFromEventList>
 800dbd0:	2800      	cmp	r0, #0
 800dbd2:	d0b0      	beq.n	800db36 <xQueueGenericSend+0x25a>
 800dbd4:	e7a5      	b.n	800db22 <xQueueGenericSend+0x246>
 800dbd6:	bf00      	nop

0800dbd8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800dbd8:	2800      	cmp	r0, #0
 800dbda:	d04b      	beq.n	800dc74 <xQueueGenericSendFromISR+0x9c>
{
 800dbdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbe0:	460e      	mov	r6, r1
 800dbe2:	4617      	mov	r7, r2
 800dbe4:	461d      	mov	r5, r3
 800dbe6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbe8:	b321      	cbz	r1, 800dc34 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dbea:	2d02      	cmp	r5, #2
 800dbec:	d10b      	bne.n	800dc06 <xQueueGenericSendFromISR+0x2e>
 800dbee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbf0:	2b01      	cmp	r3, #1
 800dbf2:	d008      	beq.n	800dc06 <xQueueGenericSendFromISR+0x2e>
 800dbf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbf8:	f383 8811 	msr	BASEPRI, r3
 800dbfc:	f3bf 8f6f 	isb	sy
 800dc00:	f3bf 8f4f 	dsb	sy
 800dc04:	e7fe      	b.n	800dc04 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dc06:	f7ff fca9 	bl	800d55c <vPortValidateInterruptPriority>
	__asm volatile
 800dc0a:	f3ef 8811 	mrs	r8, BASEPRI
 800dc0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc12:	f383 8811 	msr	BASEPRI, r3
 800dc16:	f3bf 8f6f 	isb	sy
 800dc1a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dc1e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc20:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc22:	429a      	cmp	r2, r3
 800dc24:	d312      	bcc.n	800dc4c <xQueueGenericSendFromISR+0x74>
 800dc26:	2d02      	cmp	r5, #2
 800dc28:	d010      	beq.n	800dc4c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800dc2a:	2000      	movs	r0, #0
	__asm volatile
 800dc2c:	f388 8811 	msr	BASEPRI, r8
}
 800dc30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc34:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dc36:	2b00      	cmp	r3, #0
 800dc38:	d0d7      	beq.n	800dbea <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800dc3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc3e:	f383 8811 	msr	BASEPRI, r3
 800dc42:	f3bf 8f6f 	isb	sy
 800dc46:	f3bf 8f4f 	dsb	sy
 800dc4a:	e7fe      	b.n	800dc4a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc4c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800dc4e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dc52:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc54:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800dc56:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc58:	4620      	mov	r0, r4
 800dc5a:	f7ff fcad 	bl	800d5b8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dc5e:	1c6b      	adds	r3, r5, #1
 800dc60:	d011      	beq.n	800dc86 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dc62:	1c6b      	adds	r3, r5, #1
 800dc64:	b25b      	sxtb	r3, r3
 800dc66:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800dc6a:	2001      	movs	r0, #1
	__asm volatile
 800dc6c:	f388 8811 	msr	BASEPRI, r8
}
 800dc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dc74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc78:	f383 8811 	msr	BASEPRI, r3
 800dc7c:	f3bf 8f6f 	isb	sy
 800dc80:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dc84:	e7fe      	b.n	800dc84 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc88:	2b00      	cmp	r3, #0
 800dc8a:	d0ee      	beq.n	800dc6a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc8c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc90:	f001 f9ae 	bl	800eff0 <xTaskRemoveFromEventList>
 800dc94:	2800      	cmp	r0, #0
 800dc96:	d0e8      	beq.n	800dc6a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dc98:	2f00      	cmp	r7, #0
 800dc9a:	d0e6      	beq.n	800dc6a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dc9c:	2001      	movs	r0, #1
 800dc9e:	6038      	str	r0, [r7, #0]
 800dca0:	e7c4      	b.n	800dc2c <xQueueGenericSendFromISR+0x54>
 800dca2:	bf00      	nop

0800dca4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800dca4:	b370      	cbz	r0, 800dd04 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dca6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800dca8:	b570      	push	{r4, r5, r6, lr}
 800dcaa:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dcac:	b143      	cbz	r3, 800dcc0 <xQueueGiveFromISR+0x1c>
 800dcae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcb2:	f383 8811 	msr	BASEPRI, r3
 800dcb6:	f3bf 8f6f 	isb	sy
 800dcba:	f3bf 8f4f 	dsb	sy
 800dcbe:	e7fe      	b.n	800dcbe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dcc0:	6803      	ldr	r3, [r0, #0]
 800dcc2:	460c      	mov	r4, r1
 800dcc4:	b33b      	cbz	r3, 800dd16 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dcc6:	f7ff fc49 	bl	800d55c <vPortValidateInterruptPriority>
	__asm volatile
 800dcca:	f3ef 8511 	mrs	r5, BASEPRI
 800dcce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcd2:	f383 8811 	msr	BASEPRI, r3
 800dcd6:	f3bf 8f6f 	isb	sy
 800dcda:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dcde:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800dce0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800dce2:	429a      	cmp	r2, r3
 800dce4:	d923      	bls.n	800dd2e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dce6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dcea:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800dcec:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800dcee:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dcf0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800dcf2:	d020      	beq.n	800dd36 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dcf4:	3301      	adds	r3, #1
 800dcf6:	b25b      	sxtb	r3, r3
 800dcf8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800dcfc:	2001      	movs	r0, #1
	__asm volatile
 800dcfe:	f385 8811 	msr	BASEPRI, r5
}
 800dd02:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800dd04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd08:	f383 8811 	msr	BASEPRI, r3
 800dd0c:	f3bf 8f6f 	isb	sy
 800dd10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dd14:	e7fe      	b.n	800dd14 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800dd16:	6883      	ldr	r3, [r0, #8]
 800dd18:	2b00      	cmp	r3, #0
 800dd1a:	d0d4      	beq.n	800dcc6 <xQueueGiveFromISR+0x22>
 800dd1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd20:	f383 8811 	msr	BASEPRI, r3
 800dd24:	f3bf 8f6f 	isb	sy
 800dd28:	f3bf 8f4f 	dsb	sy
 800dd2c:	e7fe      	b.n	800dd2c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800dd2e:	2000      	movs	r0, #0
	__asm volatile
 800dd30:	f385 8811 	msr	BASEPRI, r5
}
 800dd34:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd36:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800dd38:	2b00      	cmp	r3, #0
 800dd3a:	d0df      	beq.n	800dcfc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd3c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800dd40:	f001 f956 	bl	800eff0 <xTaskRemoveFromEventList>
 800dd44:	2800      	cmp	r0, #0
 800dd46:	d0d9      	beq.n	800dcfc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800dd48:	2c00      	cmp	r4, #0
 800dd4a:	d0d7      	beq.n	800dcfc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dd4c:	2001      	movs	r0, #1
 800dd4e:	6020      	str	r0, [r4, #0]
 800dd50:	e7ee      	b.n	800dd30 <xQueueGiveFromISR+0x8c>
 800dd52:	bf00      	nop

0800dd54 <xQueueReceive>:
{
 800dd54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd58:	b085      	sub	sp, #20
 800dd5a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dd5c:	2800      	cmp	r0, #0
 800dd5e:	f000 815c 	beq.w	800e01a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd62:	460f      	mov	r7, r1
 800dd64:	4604      	mov	r4, r0
 800dd66:	2900      	cmp	r1, #0
 800dd68:	d079      	beq.n	800de5e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd6a:	f001 f9e3 	bl	800f134 <xTaskGetSchedulerState>
 800dd6e:	2800      	cmp	r0, #0
 800dd70:	f000 8081 	beq.w	800de76 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dd74:	f7ff fabe 	bl	800d2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd78:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dd7a:	2d00      	cmp	r5, #0
 800dd7c:	f040 8138 	bne.w	800dff0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dd80:	9b01      	ldr	r3, [sp, #4]
 800dd82:	2b00      	cmp	r3, #0
 800dd84:	f000 80d5 	beq.w	800df32 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dd88:	a802      	add	r0, sp, #8
 800dd8a:	f001 f979 	bl	800f080 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dd8e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dd94:	f7ff fad0 	bl	800d338 <vPortExitCritical>
		vTaskSuspendAll();
 800dd98:	f001 f822 	bl	800ede0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dd9c:	f7ff faaa 	bl	800d2f4 <vPortEnterCritical>
 800dda0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dda4:	2bff      	cmp	r3, #255	; 0xff
 800dda6:	bf08      	it	eq
 800dda8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800ddac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ddb0:	2bff      	cmp	r3, #255	; 0xff
 800ddb2:	bf08      	it	eq
 800ddb4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800ddb8:	f7ff fabe 	bl	800d338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ddbc:	a901      	add	r1, sp, #4
 800ddbe:	a802      	add	r0, sp, #8
 800ddc0:	f001 f96a 	bl	800f098 <xTaskCheckForTimeOut>
 800ddc4:	2800      	cmp	r0, #0
 800ddc6:	d163      	bne.n	800de90 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800ddc8:	f7ff fa94 	bl	800d2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ddcc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ddce:	2b00      	cmp	r3, #0
 800ddd0:	f000 80b5 	beq.w	800df3e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800ddd4:	f7ff fab0 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddd8:	f7ff fa8c 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dddc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dde0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dde2:	2d00      	cmp	r5, #0
 800dde4:	dc04      	bgt.n	800ddf0 <xQueueReceive+0x9c>
 800dde6:	e011      	b.n	800de0c <xQueueReceive+0xb8>
			--cTxLock;
 800dde8:	1e6b      	subs	r3, r5, #1
 800ddea:	b2da      	uxtb	r2, r3
 800ddec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddee:	b16a      	cbz	r2, 800de0c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddf0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddf2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddf4:	b153      	cbz	r3, 800de0c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddf6:	f001 f8fb 	bl	800eff0 <xTaskRemoveFromEventList>
 800ddfa:	2800      	cmp	r0, #0
 800ddfc:	d0f4      	beq.n	800dde8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800ddfe:	f001 f993 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800de02:	1e6b      	subs	r3, r5, #1
 800de04:	b2da      	uxtb	r2, r3
 800de06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de08:	2a00      	cmp	r2, #0
 800de0a:	d1f1      	bne.n	800ddf0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800de0c:	23ff      	movs	r3, #255	; 0xff
 800de0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de12:	f7ff fa91 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de16:	f7ff fa6d 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de1a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de20:	2d00      	cmp	r5, #0
 800de22:	dd14      	ble.n	800de4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de24:	f104 0910 	add.w	r9, r4, #16
 800de28:	e003      	b.n	800de32 <xQueueReceive+0xde>
				--cRxLock;
 800de2a:	1e6b      	subs	r3, r5, #1
 800de2c:	b2da      	uxtb	r2, r3
 800de2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de30:	b16a      	cbz	r2, 800de4e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de32:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de34:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de36:	b153      	cbz	r3, 800de4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de38:	f001 f8da 	bl	800eff0 <xTaskRemoveFromEventList>
 800de3c:	2800      	cmp	r0, #0
 800de3e:	d0f4      	beq.n	800de2a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800de40:	f001 f972 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800de44:	1e6b      	subs	r3, r5, #1
 800de46:	b2da      	uxtb	r2, r3
 800de48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de4a:	2a00      	cmp	r2, #0
 800de4c:	d1f1      	bne.n	800de32 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800de4e:	23ff      	movs	r3, #255	; 0xff
 800de50:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de54:	f7ff fa70 	bl	800d338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800de58:	f000 ffca 	bl	800edf0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800de5c:	e060      	b.n	800df20 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de5e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de60:	2b00      	cmp	r3, #0
 800de62:	d082      	beq.n	800dd6a <xQueueReceive+0x16>
	__asm volatile
 800de64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de68:	f383 8811 	msr	BASEPRI, r3
 800de6c:	f3bf 8f6f 	isb	sy
 800de70:	f3bf 8f4f 	dsb	sy
 800de74:	e7fe      	b.n	800de74 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de76:	9b01      	ldr	r3, [sp, #4]
 800de78:	2b00      	cmp	r3, #0
 800de7a:	f43f af7b 	beq.w	800dd74 <xQueueReceive+0x20>
 800de7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de82:	f383 8811 	msr	BASEPRI, r3
 800de86:	f3bf 8f6f 	isb	sy
 800de8a:	f3bf 8f4f 	dsb	sy
 800de8e:	e7fe      	b.n	800de8e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800de90:	f7ff fa30 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de94:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de98:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de9a:	2d00      	cmp	r5, #0
 800de9c:	dc04      	bgt.n	800dea8 <xQueueReceive+0x154>
 800de9e:	e011      	b.n	800dec4 <xQueueReceive+0x170>
			--cTxLock;
 800dea0:	1e6b      	subs	r3, r5, #1
 800dea2:	b2da      	uxtb	r2, r3
 800dea4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dea6:	b16a      	cbz	r2, 800dec4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dea8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deaa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800deac:	b153      	cbz	r3, 800dec4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800deae:	f001 f89f 	bl	800eff0 <xTaskRemoveFromEventList>
 800deb2:	2800      	cmp	r0, #0
 800deb4:	d0f4      	beq.n	800dea0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800deb6:	f001 f937 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800deba:	1e6b      	subs	r3, r5, #1
 800debc:	b2da      	uxtb	r2, r3
 800debe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dec0:	2a00      	cmp	r2, #0
 800dec2:	d1f1      	bne.n	800dea8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800dec4:	23ff      	movs	r3, #255	; 0xff
 800dec6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800deca:	f7ff fa35 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dece:	f7ff fa11 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ded2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ded6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ded8:	2d00      	cmp	r5, #0
 800deda:	dd14      	ble.n	800df06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dedc:	f104 0910 	add.w	r9, r4, #16
 800dee0:	e003      	b.n	800deea <xQueueReceive+0x196>
				--cRxLock;
 800dee2:	1e6b      	subs	r3, r5, #1
 800dee4:	b2da      	uxtb	r2, r3
 800dee6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dee8:	b16a      	cbz	r2, 800df06 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800deec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800deee:	b153      	cbz	r3, 800df06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800def0:	f001 f87e 	bl	800eff0 <xTaskRemoveFromEventList>
 800def4:	2800      	cmp	r0, #0
 800def6:	d0f4      	beq.n	800dee2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800def8:	f001 f916 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800defc:	1e6b      	subs	r3, r5, #1
 800defe:	b2da      	uxtb	r2, r3
 800df00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df02:	2a00      	cmp	r2, #0
 800df04:	d1f1      	bne.n	800deea <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800df06:	23ff      	movs	r3, #255	; 0xff
 800df08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df0c:	f7ff fa14 	bl	800d338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800df10:	f000 ff6e 	bl	800edf0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800df14:	f7ff f9ee 	bl	800d2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800df18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800df1a:	b153      	cbz	r3, 800df32 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800df1c:	f7ff fa0c 	bl	800d338 <vPortExitCritical>
		taskENTER_CRITICAL();
 800df20:	f7ff f9e8 	bl	800d2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df24:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df26:	2d00      	cmp	r5, #0
 800df28:	d162      	bne.n	800dff0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800df2a:	9b01      	ldr	r3, [sp, #4]
 800df2c:	2b00      	cmp	r3, #0
 800df2e:	f47f af31 	bne.w	800dd94 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800df32:	f7ff fa01 	bl	800d338 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800df36:	2000      	movs	r0, #0
}
 800df38:	b005      	add	sp, #20
 800df3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800df3e:	f7ff f9fb 	bl	800d338 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800df42:	9901      	ldr	r1, [sp, #4]
 800df44:	4630      	mov	r0, r6
 800df46:	f000 ffc5 	bl	800eed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800df4a:	f7ff f9d3 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df4e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df54:	2d00      	cmp	r5, #0
 800df56:	dc04      	bgt.n	800df62 <xQueueReceive+0x20e>
 800df58:	e011      	b.n	800df7e <xQueueReceive+0x22a>
			--cTxLock;
 800df5a:	1e6b      	subs	r3, r5, #1
 800df5c:	b2da      	uxtb	r2, r3
 800df5e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df60:	b16a      	cbz	r2, 800df7e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df62:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df64:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df66:	b153      	cbz	r3, 800df7e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df68:	f001 f842 	bl	800eff0 <xTaskRemoveFromEventList>
 800df6c:	2800      	cmp	r0, #0
 800df6e:	d0f4      	beq.n	800df5a <xQueueReceive+0x206>
						vTaskMissedYield();
 800df70:	f001 f8da 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800df74:	1e6b      	subs	r3, r5, #1
 800df76:	b2da      	uxtb	r2, r3
 800df78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df7a:	2a00      	cmp	r2, #0
 800df7c:	d1f1      	bne.n	800df62 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800df7e:	23ff      	movs	r3, #255	; 0xff
 800df80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800df84:	f7ff f9d8 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df88:	f7ff f9b4 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800df8c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df92:	2d00      	cmp	r5, #0
 800df94:	dd14      	ble.n	800dfc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df96:	f104 0910 	add.w	r9, r4, #16
 800df9a:	e003      	b.n	800dfa4 <xQueueReceive+0x250>
				--cRxLock;
 800df9c:	1e6b      	subs	r3, r5, #1
 800df9e:	b2da      	uxtb	r2, r3
 800dfa0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfa2:	b16a      	cbz	r2, 800dfc0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfa4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfa6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfa8:	b153      	cbz	r3, 800dfc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfaa:	f001 f821 	bl	800eff0 <xTaskRemoveFromEventList>
 800dfae:	2800      	cmp	r0, #0
 800dfb0:	d0f4      	beq.n	800df9c <xQueueReceive+0x248>
					vTaskMissedYield();
 800dfb2:	f001 f8b9 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800dfb6:	1e6b      	subs	r3, r5, #1
 800dfb8:	b2da      	uxtb	r2, r3
 800dfba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfbc:	2a00      	cmp	r2, #0
 800dfbe:	d1f1      	bne.n	800dfa4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800dfc0:	23ff      	movs	r3, #255	; 0xff
 800dfc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dfc6:	f7ff f9b7 	bl	800d338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dfca:	f000 ff11 	bl	800edf0 <xTaskResumeAll>
 800dfce:	2800      	cmp	r0, #0
 800dfd0:	d1a6      	bne.n	800df20 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800dfd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dfda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dfde:	f3bf 8f4f 	dsb	sy
 800dfe2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800dfe6:	f7ff f985 	bl	800d2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dfec:	2d00      	cmp	r5, #0
 800dfee:	d09c      	beq.n	800df2a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800dff0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800dff2:	b152      	cbz	r2, 800e00a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dff4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dff6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dff8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dffa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dffc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800dffe:	bf24      	itt	cs
 800e000:	6821      	ldrcs	r1, [r4, #0]
 800e002:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e004:	4638      	mov	r0, r7
 800e006:	f01d f8fa 	bl	802b1fe <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e00a:	3d01      	subs	r5, #1
 800e00c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e00e:	6923      	ldr	r3, [r4, #16]
 800e010:	b963      	cbnz	r3, 800e02c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e012:	f7ff f991 	bl	800d338 <vPortExitCritical>
				return pdPASS;
 800e016:	2001      	movs	r0, #1
 800e018:	e78e      	b.n	800df38 <xQueueReceive+0x1e4>
 800e01a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e01e:	f383 8811 	msr	BASEPRI, r3
 800e022:	f3bf 8f6f 	isb	sy
 800e026:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e02a:	e7fe      	b.n	800e02a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e02c:	f104 0010 	add.w	r0, r4, #16
 800e030:	f000 ffde 	bl	800eff0 <xTaskRemoveFromEventList>
 800e034:	2800      	cmp	r0, #0
 800e036:	d0ec      	beq.n	800e012 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e038:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e03c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e040:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e044:	f3bf 8f4f 	dsb	sy
 800e048:	f3bf 8f6f 	isb	sy
 800e04c:	e7e1      	b.n	800e012 <xQueueReceive+0x2be>
 800e04e:	bf00      	nop

0800e050 <xQueueSemaphoreTake>:
{
 800e050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e054:	b084      	sub	sp, #16
 800e056:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e058:	2800      	cmp	r0, #0
 800e05a:	d05c      	beq.n	800e116 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e05c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e05e:	4604      	mov	r4, r0
 800e060:	b147      	cbz	r7, 800e074 <xQueueSemaphoreTake+0x24>
 800e062:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e066:	f383 8811 	msr	BASEPRI, r3
 800e06a:	f3bf 8f6f 	isb	sy
 800e06e:	f3bf 8f4f 	dsb	sy
 800e072:	e7fe      	b.n	800e072 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e074:	f001 f85e 	bl	800f134 <xTaskGetSchedulerState>
 800e078:	4605      	mov	r5, r0
 800e07a:	2800      	cmp	r0, #0
 800e07c:	d054      	beq.n	800e128 <xQueueSemaphoreTake+0xd8>
 800e07e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e080:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e084:	f7ff f936 	bl	800d2f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e088:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e08a:	2b00      	cmp	r3, #0
 800e08c:	f040 8148 	bne.w	800e320 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e090:	9b01      	ldr	r3, [sp, #4]
 800e092:	2b00      	cmp	r3, #0
 800e094:	f000 813a 	beq.w	800e30c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e098:	2d00      	cmp	r5, #0
 800e09a:	f000 809d 	beq.w	800e1d8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e09e:	f7ff f94b 	bl	800d338 <vPortExitCritical>
		vTaskSuspendAll();
 800e0a2:	f000 fe9d 	bl	800ede0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e0a6:	f7ff f925 	bl	800d2f4 <vPortEnterCritical>
 800e0aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0ae:	2bff      	cmp	r3, #255	; 0xff
 800e0b0:	bf04      	itt	eq
 800e0b2:	2300      	moveq	r3, #0
 800e0b4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e0b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0bc:	2bff      	cmp	r3, #255	; 0xff
 800e0be:	bf04      	itt	eq
 800e0c0:	2300      	moveq	r3, #0
 800e0c2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e0c6:	f7ff f937 	bl	800d338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e0ca:	a901      	add	r1, sp, #4
 800e0cc:	a802      	add	r0, sp, #8
 800e0ce:	f000 ffe3 	bl	800f098 <xTaskCheckForTimeOut>
 800e0d2:	2800      	cmp	r0, #0
 800e0d4:	d135      	bne.n	800e142 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e0d6:	f7ff f90d 	bl	800d2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e0da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e0dc:	2b00      	cmp	r3, #0
 800e0de:	f000 80a4 	beq.w	800e22a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e0e2:	f7ff f929 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0e6:	f7ff f905 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0ea:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0f0:	2d00      	cmp	r5, #0
 800e0f2:	dc05      	bgt.n	800e100 <xQueueSemaphoreTake+0xb0>
 800e0f4:	e074      	b.n	800e1e0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e0f6:	1e6b      	subs	r3, r5, #1
 800e0f8:	b2da      	uxtb	r2, r3
 800e0fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0fc:	2a00      	cmp	r2, #0
 800e0fe:	d06f      	beq.n	800e1e0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e100:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e102:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e104:	2b00      	cmp	r3, #0
 800e106:	d06b      	beq.n	800e1e0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e108:	f000 ff72 	bl	800eff0 <xTaskRemoveFromEventList>
 800e10c:	2800      	cmp	r0, #0
 800e10e:	d0f2      	beq.n	800e0f6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e110:	f001 f80a 	bl	800f128 <vTaskMissedYield>
 800e114:	e7ef      	b.n	800e0f6 <xQueueSemaphoreTake+0xa6>
 800e116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e11a:	f383 8811 	msr	BASEPRI, r3
 800e11e:	f3bf 8f6f 	isb	sy
 800e122:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e126:	e7fe      	b.n	800e126 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e128:	9b01      	ldr	r3, [sp, #4]
 800e12a:	2b00      	cmp	r3, #0
 800e12c:	f000 80d4 	beq.w	800e2d8 <xQueueSemaphoreTake+0x288>
 800e130:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e134:	f383 8811 	msr	BASEPRI, r3
 800e138:	f3bf 8f6f 	isb	sy
 800e13c:	f3bf 8f4f 	dsb	sy
 800e140:	e7fe      	b.n	800e140 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e142:	f7ff f8d7 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e146:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e14a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e14c:	2d00      	cmp	r5, #0
 800e14e:	dc04      	bgt.n	800e15a <xQueueSemaphoreTake+0x10a>
 800e150:	e011      	b.n	800e176 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e152:	1e6b      	subs	r3, r5, #1
 800e154:	b2da      	uxtb	r2, r3
 800e156:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e158:	b16a      	cbz	r2, 800e176 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e15a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e15c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e15e:	b153      	cbz	r3, 800e176 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e160:	f000 ff46 	bl	800eff0 <xTaskRemoveFromEventList>
 800e164:	2800      	cmp	r0, #0
 800e166:	d0f4      	beq.n	800e152 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e168:	f000 ffde 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800e16c:	1e6b      	subs	r3, r5, #1
 800e16e:	b2da      	uxtb	r2, r3
 800e170:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e172:	2a00      	cmp	r2, #0
 800e174:	d1f1      	bne.n	800e15a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e176:	23ff      	movs	r3, #255	; 0xff
 800e178:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e17c:	f7ff f8dc 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e180:	f7ff f8b8 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e184:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e188:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e18a:	2d00      	cmp	r5, #0
 800e18c:	dd14      	ble.n	800e1b8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e18e:	f104 0810 	add.w	r8, r4, #16
 800e192:	e003      	b.n	800e19c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e194:	1e6b      	subs	r3, r5, #1
 800e196:	b2da      	uxtb	r2, r3
 800e198:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e19a:	b16a      	cbz	r2, 800e1b8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e19c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e19e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1a0:	b153      	cbz	r3, 800e1b8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1a2:	f000 ff25 	bl	800eff0 <xTaskRemoveFromEventList>
 800e1a6:	2800      	cmp	r0, #0
 800e1a8:	d0f4      	beq.n	800e194 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e1aa:	f000 ffbd 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800e1ae:	1e6b      	subs	r3, r5, #1
 800e1b0:	b2da      	uxtb	r2, r3
 800e1b2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1b4:	2a00      	cmp	r2, #0
 800e1b6:	d1f1      	bne.n	800e19c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1b8:	23ff      	movs	r3, #255	; 0xff
 800e1ba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e1be:	f7ff f8bb 	bl	800d338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e1c2:	f000 fe15 	bl	800edf0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e1c6:	f7ff f895 	bl	800d2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e1ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e1cc:	2b00      	cmp	r3, #0
 800e1ce:	d07c      	beq.n	800e2ca <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e1d0:	f7ff f8b2 	bl	800d338 <vPortExitCritical>
	return xReturn;
 800e1d4:	2501      	movs	r5, #1
 800e1d6:	e755      	b.n	800e084 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e1d8:	a802      	add	r0, sp, #8
 800e1da:	f000 ff51 	bl	800f080 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e1de:	e75e      	b.n	800e09e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1e0:	23ff      	movs	r3, #255	; 0xff
 800e1e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1e6:	f7ff f8a7 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1ea:	f7ff f883 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1ee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1f4:	2d00      	cmp	r5, #0
 800e1f6:	dd10      	ble.n	800e21a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1f8:	f104 0810 	add.w	r8, r4, #16
 800e1fc:	e003      	b.n	800e206 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e1fe:	1e6b      	subs	r3, r5, #1
 800e200:	b2da      	uxtb	r2, r3
 800e202:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e204:	b14a      	cbz	r2, 800e21a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e206:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e208:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e20a:	b133      	cbz	r3, 800e21a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e20c:	f000 fef0 	bl	800eff0 <xTaskRemoveFromEventList>
 800e210:	2800      	cmp	r0, #0
 800e212:	d0f4      	beq.n	800e1fe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e214:	f000 ff88 	bl	800f128 <vTaskMissedYield>
 800e218:	e7f1      	b.n	800e1fe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e21a:	23ff      	movs	r3, #255	; 0xff
 800e21c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e220:	f7ff f88a 	bl	800d338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e224:	f000 fde4 	bl	800edf0 <xTaskResumeAll>
 800e228:	e7d4      	b.n	800e1d4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e22a:	f7ff f885 	bl	800d338 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e22e:	6823      	ldr	r3, [r4, #0]
 800e230:	2b00      	cmp	r3, #0
 800e232:	d062      	beq.n	800e2fa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e234:	9901      	ldr	r1, [sp, #4]
 800e236:	4630      	mov	r0, r6
 800e238:	f000 fe4c 	bl	800eed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e23c:	f7ff f85a 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e240:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e244:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e246:	2d00      	cmp	r5, #0
 800e248:	dc04      	bgt.n	800e254 <xQueueSemaphoreTake+0x204>
 800e24a:	e00d      	b.n	800e268 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e24c:	1e6b      	subs	r3, r5, #1
 800e24e:	b2da      	uxtb	r2, r3
 800e250:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e252:	b14a      	cbz	r2, 800e268 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e254:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e256:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e258:	b133      	cbz	r3, 800e268 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e25a:	f000 fec9 	bl	800eff0 <xTaskRemoveFromEventList>
 800e25e:	2800      	cmp	r0, #0
 800e260:	d0f4      	beq.n	800e24c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e262:	f000 ff61 	bl	800f128 <vTaskMissedYield>
 800e266:	e7f1      	b.n	800e24c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e268:	23ff      	movs	r3, #255	; 0xff
 800e26a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e26e:	f7ff f863 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e272:	f7ff f83f 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e276:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e27a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e27c:	2d00      	cmp	r5, #0
 800e27e:	dd10      	ble.n	800e2a2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e280:	f104 0810 	add.w	r8, r4, #16
 800e284:	e003      	b.n	800e28e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e286:	1e6b      	subs	r3, r5, #1
 800e288:	b2da      	uxtb	r2, r3
 800e28a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e28c:	b14a      	cbz	r2, 800e2a2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e28e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e290:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e292:	b133      	cbz	r3, 800e2a2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e294:	f000 feac 	bl	800eff0 <xTaskRemoveFromEventList>
 800e298:	2800      	cmp	r0, #0
 800e29a:	d0f4      	beq.n	800e286 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e29c:	f000 ff44 	bl	800f128 <vTaskMissedYield>
 800e2a0:	e7f1      	b.n	800e286 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e2a2:	23ff      	movs	r3, #255	; 0xff
 800e2a4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e2a8:	f7ff f846 	bl	800d338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e2ac:	f000 fda0 	bl	800edf0 <xTaskResumeAll>
 800e2b0:	2800      	cmp	r0, #0
 800e2b2:	d18f      	bne.n	800e1d4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e2b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e2b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e2bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e2c0:	f3bf 8f4f 	dsb	sy
 800e2c4:	f3bf 8f6f 	isb	sy
 800e2c8:	e784      	b.n	800e1d4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e2ca:	f7ff f835 	bl	800d338 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e2ce:	b92f      	cbnz	r7, 800e2dc <xQueueSemaphoreTake+0x28c>
}
 800e2d0:	4638      	mov	r0, r7
 800e2d2:	b004      	add	sp, #16
 800e2d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2d8:	4607      	mov	r7, r0
 800e2da:	e6d1      	b.n	800e080 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e2dc:	f7ff f80a 	bl	800d2f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e2e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e2e2:	b119      	cbz	r1, 800e2ec <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e2e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e2e6:	6819      	ldr	r1, [r3, #0]
 800e2e8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e2ec:	68a0      	ldr	r0, [r4, #8]
 800e2ee:	f000 ffbd 	bl	800f26c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e2f2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e2f4:	f7ff f820 	bl	800d338 <vPortExitCritical>
 800e2f8:	e7ea      	b.n	800e2d0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e2fa:	f7fe fffb 	bl	800d2f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e2fe:	68a0      	ldr	r0, [r4, #8]
 800e300:	f000 ff28 	bl	800f154 <xTaskPriorityInherit>
 800e304:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e306:	f7ff f817 	bl	800d338 <vPortExitCritical>
 800e30a:	e793      	b.n	800e234 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e30c:	b197      	cbz	r7, 800e334 <xQueueSemaphoreTake+0x2e4>
 800e30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e312:	f383 8811 	msr	BASEPRI, r3
 800e316:	f3bf 8f6f 	isb	sy
 800e31a:	f3bf 8f4f 	dsb	sy
 800e31e:	e7fe      	b.n	800e31e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e320:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e322:	3b01      	subs	r3, #1
 800e324:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e326:	b1ca      	cbz	r2, 800e35c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e328:	6923      	ldr	r3, [r4, #16]
 800e32a:	b933      	cbnz	r3, 800e33a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e32c:	f7ff f804 	bl	800d338 <vPortExitCritical>
				return pdPASS;
 800e330:	2701      	movs	r7, #1
 800e332:	e7cd      	b.n	800e2d0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e334:	f7ff f800 	bl	800d338 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e338:	e7ca      	b.n	800e2d0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e33a:	f104 0010 	add.w	r0, r4, #16
 800e33e:	f000 fe57 	bl	800eff0 <xTaskRemoveFromEventList>
 800e342:	2800      	cmp	r0, #0
 800e344:	d0f2      	beq.n	800e32c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e346:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e34a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e34e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e352:	f3bf 8f4f 	dsb	sy
 800e356:	f3bf 8f6f 	isb	sy
 800e35a:	e7e7      	b.n	800e32c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e35c:	f000 ffda 	bl	800f314 <pvTaskIncrementMutexHeldCount>
 800e360:	60a0      	str	r0, [r4, #8]
 800e362:	e7e1      	b.n	800e328 <xQueueSemaphoreTake+0x2d8>

0800e364 <xQueueReceiveFromISR>:
{
 800e364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e368:	b310      	cbz	r0, 800e3b0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e36a:	460e      	mov	r6, r1
 800e36c:	4617      	mov	r7, r2
 800e36e:	4604      	mov	r4, r0
 800e370:	b191      	cbz	r1, 800e398 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e372:	f7ff f8f3 	bl	800d55c <vPortValidateInterruptPriority>
	__asm volatile
 800e376:	f3ef 8911 	mrs	r9, BASEPRI
 800e37a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e37e:	f383 8811 	msr	BASEPRI, r3
 800e382:	f3bf 8f6f 	isb	sy
 800e386:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e38a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e38c:	b9cd      	cbnz	r5, 800e3c2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e38e:	4628      	mov	r0, r5
	__asm volatile
 800e390:	f389 8811 	msr	BASEPRI, r9
}
 800e394:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e398:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e39a:	2b00      	cmp	r3, #0
 800e39c:	d0e9      	beq.n	800e372 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e39e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3a2:	f383 8811 	msr	BASEPRI, r3
 800e3a6:	f3bf 8f6f 	isb	sy
 800e3aa:	f3bf 8f4f 	dsb	sy
 800e3ae:	e7fe      	b.n	800e3ae <xQueueReceiveFromISR+0x4a>
 800e3b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b4:	f383 8811 	msr	BASEPRI, r3
 800e3b8:	f3bf 8f6f 	isb	sy
 800e3bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e3c0:	e7fe      	b.n	800e3c0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e3c2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e3c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e3c8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e3cc:	b152      	cbz	r2, 800e3e4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e3ce:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e3d0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e3d2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e3d4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e3d6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e3d8:	bf24      	itt	cs
 800e3da:	6821      	ldrcs	r1, [r4, #0]
 800e3dc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e3de:	4630      	mov	r0, r6
 800e3e0:	f01c ff0d 	bl	802b1fe <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3e4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e3e6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3ea:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e3ec:	d009      	beq.n	800e402 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e3ee:	f108 0301 	add.w	r3, r8, #1
 800e3f2:	b25b      	sxtb	r3, r3
 800e3f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e3f8:	2001      	movs	r0, #1
	__asm volatile
 800e3fa:	f389 8811 	msr	BASEPRI, r9
}
 800e3fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e402:	6923      	ldr	r3, [r4, #16]
 800e404:	2b00      	cmp	r3, #0
 800e406:	d0f7      	beq.n	800e3f8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e408:	f104 0010 	add.w	r0, r4, #16
 800e40c:	f000 fdf0 	bl	800eff0 <xTaskRemoveFromEventList>
 800e410:	2800      	cmp	r0, #0
 800e412:	d0f1      	beq.n	800e3f8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e414:	2f00      	cmp	r7, #0
 800e416:	d0ef      	beq.n	800e3f8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e418:	2001      	movs	r0, #1
 800e41a:	6038      	str	r0, [r7, #0]
 800e41c:	e7b8      	b.n	800e390 <xQueueReceiveFromISR+0x2c>
 800e41e:	bf00      	nop

0800e420 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e420:	b158      	cbz	r0, 800e43a <uxQueueMessagesWaiting+0x1a>
{
 800e422:	b510      	push	{r4, lr}
 800e424:	4604      	mov	r4, r0
 800e426:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e428:	f7fe ff64 	bl	800d2f4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e42c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e42e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e430:	f7fe ff82 	bl	800d338 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e434:	9801      	ldr	r0, [sp, #4]
 800e436:	b002      	add	sp, #8
 800e438:	bd10      	pop	{r4, pc}
	__asm volatile
 800e43a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e43e:	f383 8811 	msr	BASEPRI, r3
 800e442:	f3bf 8f6f 	isb	sy
 800e446:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e44a:	e7fe      	b.n	800e44a <uxQueueMessagesWaiting+0x2a>

0800e44c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e44c:	b108      	cbz	r0, 800e452 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e44e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e450:	4770      	bx	lr
 800e452:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e456:	f383 8811 	msr	BASEPRI, r3
 800e45a:	f3bf 8f6f 	isb	sy
 800e45e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e462:	e7fe      	b.n	800e462 <uxQueueMessagesWaitingFromISR+0x16>
 800e464:	0000      	movs	r0, r0
	...

0800e468 <vQueueDelete>:
	configASSERT( pxQueue );
 800e468:	b1f0      	cbz	r0, 800e4a8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e46a:	4b21      	ldr	r3, [pc, #132]	; (800e4f0 <vQueueDelete+0x88>)
 800e46c:	685a      	ldr	r2, [r3, #4]
 800e46e:	4290      	cmp	r0, r2
 800e470:	d025      	beq.n	800e4be <vQueueDelete+0x56>
 800e472:	68da      	ldr	r2, [r3, #12]
 800e474:	4290      	cmp	r0, r2
 800e476:	d02c      	beq.n	800e4d2 <vQueueDelete+0x6a>
 800e478:	695a      	ldr	r2, [r3, #20]
 800e47a:	4290      	cmp	r0, r2
 800e47c:	d02b      	beq.n	800e4d6 <vQueueDelete+0x6e>
 800e47e:	69da      	ldr	r2, [r3, #28]
 800e480:	4290      	cmp	r0, r2
 800e482:	d02a      	beq.n	800e4da <vQueueDelete+0x72>
 800e484:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e486:	4290      	cmp	r0, r2
 800e488:	d029      	beq.n	800e4de <vQueueDelete+0x76>
 800e48a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e48c:	4290      	cmp	r0, r2
 800e48e:	d01e      	beq.n	800e4ce <vQueueDelete+0x66>
 800e490:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e492:	4290      	cmp	r0, r2
 800e494:	d025      	beq.n	800e4e2 <vQueueDelete+0x7a>
 800e496:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e498:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e49a:	bf08      	it	eq
 800e49c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e49e:	d00f      	beq.n	800e4c0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e4a0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e4a4:	b14b      	cbz	r3, 800e4ba <vQueueDelete+0x52>
}
 800e4a6:	4770      	bx	lr
 800e4a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4ac:	f383 8811 	msr	BASEPRI, r3
 800e4b0:	f3bf 8f6f 	isb	sy
 800e4b4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e4b8:	e7fe      	b.n	800e4b8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e4ba:	f7fe be05 	b.w	800d0c8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e4be:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e4c0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e4e8 <vQueueDelete+0x80>
 800e4c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e4c8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e4cc:	e7e8      	b.n	800e4a0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e4ce:	2205      	movs	r2, #5
 800e4d0:	e7f6      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4d2:	2201      	movs	r2, #1
 800e4d4:	e7f4      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4d6:	2202      	movs	r2, #2
 800e4d8:	e7f2      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4da:	2203      	movs	r2, #3
 800e4dc:	e7f0      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4de:	2204      	movs	r2, #4
 800e4e0:	e7ee      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4e2:	2206      	movs	r2, #6
 800e4e4:	e7ec      	b.n	800e4c0 <vQueueDelete+0x58>
 800e4e6:	bf00      	nop
	...
 800e4f0:	20012950 	.word	0x20012950

0800e4f4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e4f4:	4b12      	ldr	r3, [pc, #72]	; (800e540 <vQueueAddToRegistry+0x4c>)
 800e4f6:	681a      	ldr	r2, [r3, #0]
 800e4f8:	b17a      	cbz	r2, 800e51a <vQueueAddToRegistry+0x26>
 800e4fa:	689a      	ldr	r2, [r3, #8]
 800e4fc:	b162      	cbz	r2, 800e518 <vQueueAddToRegistry+0x24>
 800e4fe:	691a      	ldr	r2, [r3, #16]
 800e500:	b192      	cbz	r2, 800e528 <vQueueAddToRegistry+0x34>
 800e502:	699a      	ldr	r2, [r3, #24]
 800e504:	b192      	cbz	r2, 800e52c <vQueueAddToRegistry+0x38>
 800e506:	6a1a      	ldr	r2, [r3, #32]
 800e508:	b192      	cbz	r2, 800e530 <vQueueAddToRegistry+0x3c>
 800e50a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e50c:	b192      	cbz	r2, 800e534 <vQueueAddToRegistry+0x40>
 800e50e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e510:	b192      	cbz	r2, 800e538 <vQueueAddToRegistry+0x44>
 800e512:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e514:	b192      	cbz	r2, 800e53c <vQueueAddToRegistry+0x48>
	}
 800e516:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e518:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e51a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e51e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e522:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e526:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e528:	2202      	movs	r2, #2
 800e52a:	e7f6      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e52c:	2203      	movs	r2, #3
 800e52e:	e7f4      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e530:	2204      	movs	r2, #4
 800e532:	e7f2      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e534:	2205      	movs	r2, #5
 800e536:	e7f0      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e538:	2206      	movs	r2, #6
 800e53a:	e7ee      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e53c:	2207      	movs	r2, #7
 800e53e:	e7ec      	b.n	800e51a <vQueueAddToRegistry+0x26>
 800e540:	20012950 	.word	0x20012950

0800e544 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e544:	b570      	push	{r4, r5, r6, lr}
 800e546:	4605      	mov	r5, r0
 800e548:	460e      	mov	r6, r1
 800e54a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e54c:	f7fe fed2 	bl	800d2f4 <vPortEnterCritical>
 800e550:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e554:	2bff      	cmp	r3, #255	; 0xff
 800e556:	bf04      	itt	eq
 800e558:	2300      	moveq	r3, #0
 800e55a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e55e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e562:	2bff      	cmp	r3, #255	; 0xff
 800e564:	bf04      	itt	eq
 800e566:	2300      	moveq	r3, #0
 800e568:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e56c:	f7fe fee4 	bl	800d338 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e570:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e572:	2b00      	cmp	r3, #0
 800e574:	d043      	beq.n	800e5fe <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e576:	f7fe febd 	bl	800d2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e57a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e57e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e580:	2c00      	cmp	r4, #0
 800e582:	dd14      	ble.n	800e5ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e584:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e588:	e003      	b.n	800e592 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e58a:	1e63      	subs	r3, r4, #1
 800e58c:	b2da      	uxtb	r2, r3
 800e58e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e590:	b16a      	cbz	r2, 800e5ae <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e592:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e594:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e596:	b153      	cbz	r3, 800e5ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e598:	f000 fd2a 	bl	800eff0 <xTaskRemoveFromEventList>
 800e59c:	2800      	cmp	r0, #0
 800e59e:	d0f4      	beq.n	800e58a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e5a0:	f000 fdc2 	bl	800f128 <vTaskMissedYield>
			--cTxLock;
 800e5a4:	1e63      	subs	r3, r4, #1
 800e5a6:	b2da      	uxtb	r2, r3
 800e5a8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5aa:	2a00      	cmp	r2, #0
 800e5ac:	d1f1      	bne.n	800e592 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5ae:	23ff      	movs	r3, #255	; 0xff
 800e5b0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5b4:	f7fe fec0 	bl	800d338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5b8:	f7fe fe9c 	bl	800d2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5bc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e5c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5c2:	2c00      	cmp	r4, #0
 800e5c4:	dd14      	ble.n	800e5f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5c6:	f105 0610 	add.w	r6, r5, #16
 800e5ca:	e003      	b.n	800e5d4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e5cc:	1e63      	subs	r3, r4, #1
 800e5ce:	b2da      	uxtb	r2, r3
 800e5d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5d2:	b16a      	cbz	r2, 800e5f0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5d6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d8:	b153      	cbz	r3, 800e5f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5da:	f000 fd09 	bl	800eff0 <xTaskRemoveFromEventList>
 800e5de:	2800      	cmp	r0, #0
 800e5e0:	d0f4      	beq.n	800e5cc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e5e2:	f000 fda1 	bl	800f128 <vTaskMissedYield>
				--cRxLock;
 800e5e6:	1e63      	subs	r3, r4, #1
 800e5e8:	b2da      	uxtb	r2, r3
 800e5ea:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5ec:	2a00      	cmp	r2, #0
 800e5ee:	d1f1      	bne.n	800e5d4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5f0:	23ff      	movs	r3, #255	; 0xff
 800e5f2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e5f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e5fa:	f7fe be9d 	b.w	800d338 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e5fe:	4622      	mov	r2, r4
 800e600:	4631      	mov	r1, r6
 800e602:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e606:	f000 fca9 	bl	800ef5c <vTaskPlaceOnEventListRestricted>
 800e60a:	e7b4      	b.n	800e576 <vQueueWaitForMessageRestricted+0x32>

0800e60c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e60c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e610:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e612:	f7fe fe6f 	bl	800d2f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e616:	4a34      	ldr	r2, [pc, #208]	; (800e6e8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e618:	4e34      	ldr	r6, [pc, #208]	; (800e6ec <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e61a:	6813      	ldr	r3, [r2, #0]
 800e61c:	3301      	adds	r3, #1
 800e61e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e620:	6833      	ldr	r3, [r6, #0]
 800e622:	2b00      	cmp	r3, #0
 800e624:	d032      	beq.n	800e68c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e626:	4c32      	ldr	r4, [pc, #200]	; (800e6f0 <prvAddNewTaskToReadyList+0xe4>)
 800e628:	6823      	ldr	r3, [r4, #0]
 800e62a:	b33b      	cbz	r3, 800e67c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e62c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e62e:	4f31      	ldr	r7, [pc, #196]	; (800e6f4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e630:	4a31      	ldr	r2, [pc, #196]	; (800e6f8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e632:	4932      	ldr	r1, [pc, #200]	; (800e6fc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e634:	6813      	ldr	r3, [r2, #0]
 800e636:	3301      	adds	r3, #1
 800e638:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e63a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e63c:	680b      	ldr	r3, [r1, #0]
 800e63e:	4283      	cmp	r3, r0
 800e640:	bf38      	it	cc
 800e642:	6008      	strcc	r0, [r1, #0]
 800e644:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e648:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e64c:	1d29      	adds	r1, r5, #4
 800e64e:	f7fe fdaf 	bl	800d1b0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e652:	f7fe fe71 	bl	800d338 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e656:	6823      	ldr	r3, [r4, #0]
 800e658:	b173      	cbz	r3, 800e678 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e65a:	6832      	ldr	r2, [r6, #0]
 800e65c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e65e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e660:	429a      	cmp	r2, r3
 800e662:	d209      	bcs.n	800e678 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e664:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e668:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e66c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e670:	f3bf 8f4f 	dsb	sy
 800e674:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e678:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e67c:	6833      	ldr	r3, [r6, #0]
 800e67e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e682:	4f1c      	ldr	r7, [pc, #112]	; (800e6f4 <prvAddNewTaskToReadyList+0xe8>)
 800e684:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e686:	bf98      	it	ls
 800e688:	6035      	strls	r5, [r6, #0]
 800e68a:	e7d1      	b.n	800e630 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e68c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e68e:	6813      	ldr	r3, [r2, #0]
 800e690:	2b01      	cmp	r3, #1
 800e692:	d003      	beq.n	800e69c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e694:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e696:	4f17      	ldr	r7, [pc, #92]	; (800e6f4 <prvAddNewTaskToReadyList+0xe8>)
 800e698:	4c15      	ldr	r4, [pc, #84]	; (800e6f0 <prvAddNewTaskToReadyList+0xe4>)
 800e69a:	e7c9      	b.n	800e630 <prvAddNewTaskToReadyList+0x24>
 800e69c:	4f15      	ldr	r7, [pc, #84]	; (800e6f4 <prvAddNewTaskToReadyList+0xe8>)
 800e69e:	463c      	mov	r4, r7
 800e6a0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e6a4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e6a6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e6a8:	f7fe fd72 	bl	800d190 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e6ac:	45a0      	cmp	r8, r4
 800e6ae:	d1f9      	bne.n	800e6a4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e6b0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e714 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e6b4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e718 <prvAddNewTaskToReadyList+0x10c>
 800e6b8:	4c0d      	ldr	r4, [pc, #52]	; (800e6f0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e6ba:	4648      	mov	r0, r9
 800e6bc:	f7fe fd68 	bl	800d190 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e6c0:	4640      	mov	r0, r8
 800e6c2:	f7fe fd65 	bl	800d190 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e6c6:	480e      	ldr	r0, [pc, #56]	; (800e700 <prvAddNewTaskToReadyList+0xf4>)
 800e6c8:	f7fe fd62 	bl	800d190 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e6cc:	480d      	ldr	r0, [pc, #52]	; (800e704 <prvAddNewTaskToReadyList+0xf8>)
 800e6ce:	f7fe fd5f 	bl	800d190 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e6d2:	480d      	ldr	r0, [pc, #52]	; (800e708 <prvAddNewTaskToReadyList+0xfc>)
 800e6d4:	f7fe fd5c 	bl	800d190 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e6d8:	4b0c      	ldr	r3, [pc, #48]	; (800e70c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e6da:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e6dc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e6e0:	4b0b      	ldr	r3, [pc, #44]	; (800e710 <prvAddNewTaskToReadyList+0x104>)
 800e6e2:	f8c3 8000 	str.w	r8, [r3]
}
 800e6e6:	e7a3      	b.n	800e630 <prvAddNewTaskToReadyList+0x24>
 800e6e8:	20012dfc 	.word	0x20012dfc
 800e6ec:	20012990 	.word	0x20012990
 800e6f0:	20012e58 	.word	0x20012e58
 800e6f4:	2001299c 	.word	0x2001299c
 800e6f8:	20012e08 	.word	0x20012e08
 800e6fc:	20012e0c 	.word	0x20012e0c
 800e700:	20012e44 	.word	0x20012e44
 800e704:	20012e70 	.word	0x20012e70
 800e708:	20012e5c 	.word	0x20012e5c
 800e70c:	20012994 	.word	0x20012994
 800e710:	20012998 	.word	0x20012998
 800e714:	20012e10 	.word	0x20012e10
 800e718:	20012e24 	.word	0x20012e24

0800e71c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e71c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e722:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e726:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e72a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e72c:	4606      	mov	r6, r0
 800e72e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e730:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e732:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e734:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e736:	f01c fc3c 	bl	802afb2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e73a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e73c:	f1a9 0904 	sub.w	r9, r9, #4
 800e740:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e742:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e746:	2d00      	cmp	r5, #0
 800e748:	d079      	beq.n	800e83e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e74a:	782b      	ldrb	r3, [r5, #0]
 800e74c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e750:	2b00      	cmp	r3, #0
 800e752:	d03b      	beq.n	800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e754:	786b      	ldrb	r3, [r5, #1]
 800e756:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e75a:	2b00      	cmp	r3, #0
 800e75c:	d036      	beq.n	800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e75e:	78ab      	ldrb	r3, [r5, #2]
 800e760:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e764:	b393      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e766:	78eb      	ldrb	r3, [r5, #3]
 800e768:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e76c:	b373      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e76e:	792b      	ldrb	r3, [r5, #4]
 800e770:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e774:	b353      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e776:	796b      	ldrb	r3, [r5, #5]
 800e778:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e77c:	b333      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e77e:	79ab      	ldrb	r3, [r5, #6]
 800e780:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e784:	b313      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e786:	79eb      	ldrb	r3, [r5, #7]
 800e788:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e78c:	b1f3      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e78e:	7a2b      	ldrb	r3, [r5, #8]
 800e790:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e794:	b1d3      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e796:	7a6b      	ldrb	r3, [r5, #9]
 800e798:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e79c:	b1b3      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e79e:	7aab      	ldrb	r3, [r5, #10]
 800e7a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e7a4:	b193      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7a6:	7aeb      	ldrb	r3, [r5, #11]
 800e7a8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e7ac:	b173      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7ae:	7b2b      	ldrb	r3, [r5, #12]
 800e7b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e7b4:	b153      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7b6:	7b6b      	ldrb	r3, [r5, #13]
 800e7b8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e7bc:	b133      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7be:	7bab      	ldrb	r3, [r5, #14]
 800e7c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e7c4:	b113      	cbz	r3, 800e7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e7c6:	7beb      	ldrb	r3, [r5, #15]
 800e7c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e7cc:	2300      	movs	r3, #0
 800e7ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e7d2:	9d08      	ldr	r5, [sp, #32]
 800e7d4:	2d37      	cmp	r5, #55	; 0x37
 800e7d6:	bf28      	it	cs
 800e7d8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e7da:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e7de:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e7e0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e7e2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e7e4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e7e8:	f7fe fcde 	bl	800d1a8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7ec:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e7f0:	f104 0018 	add.w	r0, r4, #24
 800e7f4:	f7fe fcd8 	bl	800d1a8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e7f8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e7fa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e7fe:	4651      	mov	r1, sl
 800e800:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e802:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e804:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e806:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e80a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e80e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e812:	f01c fbce 	bl	802afb2 <memset>
 800e816:	4b0b      	ldr	r3, [pc, #44]	; (800e844 <prvInitialiseNewTask.constprop.0+0x128>)
 800e818:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e81a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e81e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e820:	463a      	mov	r2, r7
 800e822:	4631      	mov	r1, r6
 800e824:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e826:	6625      	str	r5, [r4, #96]	; 0x60
 800e828:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e82a:	f7fe fd3b 	bl	800d2a4 <pxPortInitialiseStack>
 800e82e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e830:	f1b8 0f00 	cmp.w	r8, #0
 800e834:	d001      	beq.n	800e83a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e836:	f8c8 4000 	str.w	r4, [r8]
}
 800e83a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e83e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e842:	e7c6      	b.n	800e7d2 <prvInitialiseNewTask.constprop.0+0xb6>
 800e844:	20013920 	.word	0x20013920

0800e848 <prvIdleTask>:
{
 800e848:	b580      	push	{r7, lr}
 800e84a:	4d23      	ldr	r5, [pc, #140]	; (800e8d8 <prvIdleTask+0x90>)
 800e84c:	4f23      	ldr	r7, [pc, #140]	; (800e8dc <prvIdleTask+0x94>)
 800e84e:	4e24      	ldr	r6, [pc, #144]	; (800e8e0 <prvIdleTask+0x98>)
 800e850:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e8e4 <prvIdleTask+0x9c>
				taskYIELD();
 800e854:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e858:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e85c:	682b      	ldr	r3, [r5, #0]
 800e85e:	b35b      	cbz	r3, 800e8b8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e860:	f7fe fd48 	bl	800d2f4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e864:	68fb      	ldr	r3, [r7, #12]
 800e866:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e868:	1d20      	adds	r0, r4, #4
 800e86a:	f7fe fcc9 	bl	800d200 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e86e:	6833      	ldr	r3, [r6, #0]
 800e870:	3b01      	subs	r3, #1
 800e872:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e874:	682b      	ldr	r3, [r5, #0]
 800e876:	3b01      	subs	r3, #1
 800e878:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e87a:	f7fe fd5d 	bl	800d338 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e87e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e882:	f01c fbdf 	bl	802b044 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e886:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e88a:	b163      	cbz	r3, 800e8a6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e88c:	2b01      	cmp	r3, #1
 800e88e:	d01e      	beq.n	800e8ce <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e890:	2b02      	cmp	r3, #2
 800e892:	d0e3      	beq.n	800e85c <prvIdleTask+0x14>
 800e894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e898:	f383 8811 	msr	BASEPRI, r3
 800e89c:	f3bf 8f6f 	isb	sy
 800e8a0:	f3bf 8f4f 	dsb	sy
 800e8a4:	e7fe      	b.n	800e8a4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e8a6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e8a8:	f7fe fc0e 	bl	800d0c8 <vPortFree>
				vPortFree( pxTCB );
 800e8ac:	4620      	mov	r0, r4
 800e8ae:	f7fe fc0b 	bl	800d0c8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e8b2:	682b      	ldr	r3, [r5, #0]
 800e8b4:	2b00      	cmp	r3, #0
 800e8b6:	d1d3      	bne.n	800e860 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e8b8:	f8d8 3000 	ldr.w	r3, [r8]
 800e8bc:	2b01      	cmp	r3, #1
 800e8be:	d9cd      	bls.n	800e85c <prvIdleTask+0x14>
				taskYIELD();
 800e8c0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e8c4:	f3bf 8f4f 	dsb	sy
 800e8c8:	f3bf 8f6f 	isb	sy
 800e8cc:	e7c6      	b.n	800e85c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	f7fe fbfa 	bl	800d0c8 <vPortFree>
 800e8d4:	e7c2      	b.n	800e85c <prvIdleTask+0x14>
 800e8d6:	bf00      	nop
 800e8d8:	20012e00 	.word	0x20012e00
 800e8dc:	20012e70 	.word	0x20012e70
 800e8e0:	20012dfc 	.word	0x20012dfc
 800e8e4:	2001299c 	.word	0x2001299c

0800e8e8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e8ec:	4b47      	ldr	r3, [pc, #284]	; (800ea0c <xTaskIncrementTick.part.0+0x124>)
 800e8ee:	681e      	ldr	r6, [r3, #0]
 800e8f0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e8f2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e8f4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e8f6:	2e00      	cmp	r6, #0
 800e8f8:	d040      	beq.n	800e97c <xTaskIncrementTick.part.0+0x94>
 800e8fa:	f8df b124 	ldr.w	fp, [pc, #292]	; 800ea20 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e8fe:	f8db 3000 	ldr.w	r3, [fp]
 800e902:	429e      	cmp	r6, r3
 800e904:	d347      	bcc.n	800e996 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e906:	4f42      	ldr	r7, [pc, #264]	; (800ea10 <xTaskIncrementTick.part.0+0x128>)
 800e908:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800ea24 <xTaskIncrementTick.part.0+0x13c>
 800e90c:	683b      	ldr	r3, [r7, #0]
 800e90e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800ea28 <xTaskIncrementTick.part.0+0x140>
 800e912:	681d      	ldr	r5, [r3, #0]
 800e914:	2d00      	cmp	r5, #0
 800e916:	d073      	beq.n	800ea00 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e918:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800ea2c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e91c:	2500      	movs	r5, #0
 800e91e:	e022      	b.n	800e966 <xTaskIncrementTick.part.0+0x7e>
 800e920:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e922:	f7fe fc6d 	bl	800d200 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e926:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e928:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e92a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e92e:	b113      	cbz	r3, 800e936 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e930:	f7fe fc66 	bl	800d200 <uxListRemove>
 800e934:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e938:	f8d8 2000 	ldr.w	r2, [r8]
 800e93c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e940:	4293      	cmp	r3, r2
 800e942:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e946:	bf88      	it	hi
 800e948:	f8c8 3000 	strhi.w	r3, [r8]
 800e94c:	f7fe fc30 	bl	800d1b0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e950:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e954:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e956:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e958:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e95a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e95c:	4291      	cmp	r1, r2
 800e95e:	bf28      	it	cs
 800e960:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e962:	2b00      	cmp	r3, #0
 800e964:	d04c      	beq.n	800ea00 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e966:	683b      	ldr	r3, [r7, #0]
 800e968:	68db      	ldr	r3, [r3, #12]
 800e96a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e96c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e96e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e970:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e972:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e974:	d2d4      	bcs.n	800e920 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e976:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e97a:	e011      	b.n	800e9a0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e97c:	4b24      	ldr	r3, [pc, #144]	; (800ea10 <xTaskIncrementTick.part.0+0x128>)
 800e97e:	681a      	ldr	r2, [r3, #0]
 800e980:	6812      	ldr	r2, [r2, #0]
 800e982:	b30a      	cbz	r2, 800e9c8 <xTaskIncrementTick.part.0+0xe0>
 800e984:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e988:	f383 8811 	msr	BASEPRI, r3
 800e98c:	f3bf 8f6f 	isb	sy
 800e990:	f3bf 8f4f 	dsb	sy
 800e994:	e7fe      	b.n	800e994 <xTaskIncrementTick.part.0+0xac>
 800e996:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ea24 <xTaskIncrementTick.part.0+0x13c>
 800e99a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800ea28 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e99e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e9a0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e9a4:	491b      	ldr	r1, [pc, #108]	; (800ea14 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e9a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e9ac:	009b      	lsls	r3, r3, #2
 800e9ae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e9b2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e9b4:	2a02      	cmp	r2, #2
 800e9b6:	bf28      	it	cs
 800e9b8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e9ba:	2b00      	cmp	r3, #0
}
 800e9bc:	bf0c      	ite	eq
 800e9be:	4628      	moveq	r0, r5
 800e9c0:	2001      	movne	r0, #1
 800e9c2:	b003      	add	sp, #12
 800e9c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e9c8:	4a13      	ldr	r2, [pc, #76]	; (800ea18 <xTaskIncrementTick.part.0+0x130>)
 800e9ca:	6818      	ldr	r0, [r3, #0]
 800e9cc:	6811      	ldr	r1, [r2, #0]
 800e9ce:	6019      	str	r1, [r3, #0]
 800e9d0:	4912      	ldr	r1, [pc, #72]	; (800ea1c <xTaskIncrementTick.part.0+0x134>)
 800e9d2:	6010      	str	r0, [r2, #0]
 800e9d4:	680a      	ldr	r2, [r1, #0]
 800e9d6:	3201      	adds	r2, #1
 800e9d8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e9da:	681a      	ldr	r2, [r3, #0]
 800e9dc:	6812      	ldr	r2, [r2, #0]
 800e9de:	b932      	cbnz	r2, 800e9ee <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e9e0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800ea20 <xTaskIncrementTick.part.0+0x138>
 800e9e4:	f04f 33ff 	mov.w	r3, #4294967295
 800e9e8:	f8cb 3000 	str.w	r3, [fp]
 800e9ec:	e787      	b.n	800e8fe <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9ee:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9f0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800ea20 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9f4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e9f6:	68db      	ldr	r3, [r3, #12]
 800e9f8:	685b      	ldr	r3, [r3, #4]
 800e9fa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e9fe:	e77e      	b.n	800e8fe <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea00:	f04f 33ff 	mov.w	r3, #4294967295
 800ea04:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ea08:	e7ca      	b.n	800e9a0 <xTaskIncrementTick.part.0+0xb8>
 800ea0a:	bf00      	nop
 800ea0c:	20012e84 	.word	0x20012e84
 800ea10:	20012994 	.word	0x20012994
 800ea14:	20012e88 	.word	0x20012e88
 800ea18:	20012998 	.word	0x20012998
 800ea1c:	20012e3c 	.word	0x20012e3c
 800ea20:	20012e38 	.word	0x20012e38
 800ea24:	2001299c 	.word	0x2001299c
 800ea28:	20012990 	.word	0x20012990
 800ea2c:	20012e0c 	.word	0x20012e0c

0800ea30 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800ea30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800ea34:	4d41      	ldr	r5, [pc, #260]	; (800eb3c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800ea36:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800ea38:	f7fe fc5c 	bl	800d2f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ea3c:	682b      	ldr	r3, [r5, #0]
 800ea3e:	3b01      	subs	r3, #1
 800ea40:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea42:	682b      	ldr	r3, [r5, #0]
 800ea44:	2b00      	cmp	r3, #0
 800ea46:	d161      	bne.n	800eb0c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ea48:	4b3d      	ldr	r3, [pc, #244]	; (800eb40 <xTaskResumeAll.part.0+0x110>)
 800ea4a:	681b      	ldr	r3, [r3, #0]
 800ea4c:	2b00      	cmp	r3, #0
 800ea4e:	d05d      	beq.n	800eb0c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea50:	4e3c      	ldr	r6, [pc, #240]	; (800eb44 <xTaskResumeAll.part.0+0x114>)
 800ea52:	6833      	ldr	r3, [r6, #0]
 800ea54:	2b00      	cmp	r3, #0
 800ea56:	d06e      	beq.n	800eb36 <xTaskResumeAll.part.0+0x106>
 800ea58:	4f3b      	ldr	r7, [pc, #236]	; (800eb48 <xTaskResumeAll.part.0+0x118>)
 800ea5a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800eb58 <xTaskResumeAll.part.0+0x128>
 800ea5e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800eb5c <xTaskResumeAll.part.0+0x12c>
 800ea62:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800eb60 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea66:	68f3      	ldr	r3, [r6, #12]
 800ea68:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea6a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea6e:	f104 0018 	add.w	r0, r4, #24
 800ea72:	f7fe fbc5 	bl	800d200 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea76:	4658      	mov	r0, fp
 800ea78:	f7fe fbc2 	bl	800d200 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ea7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea7e:	683a      	ldr	r2, [r7, #0]
 800ea80:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ea84:	4293      	cmp	r3, r2
 800ea86:	4659      	mov	r1, fp
 800ea88:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ea8c:	bf88      	it	hi
 800ea8e:	603b      	strhi	r3, [r7, #0]
 800ea90:	f7fe fb8e 	bl	800d1b0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ea94:	f8d8 3000 	ldr.w	r3, [r8]
 800ea98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ea9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea9c:	429a      	cmp	r2, r3
 800ea9e:	d33d      	bcc.n	800eb1c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800eaa0:	2301      	movs	r3, #1
 800eaa2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eaa6:	6833      	ldr	r3, [r6, #0]
 800eaa8:	2b00      	cmp	r3, #0
 800eaaa:	d1dc      	bne.n	800ea66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eaac:	4b27      	ldr	r3, [pc, #156]	; (800eb4c <xTaskResumeAll.part.0+0x11c>)
 800eaae:	681a      	ldr	r2, [r3, #0]
 800eab0:	6812      	ldr	r2, [r2, #0]
 800eab2:	2a00      	cmp	r2, #0
 800eab4:	d03a      	beq.n	800eb2c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eab6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eab8:	4b25      	ldr	r3, [pc, #148]	; (800eb50 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eaba:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eabc:	68d2      	ldr	r2, [r2, #12]
 800eabe:	6852      	ldr	r2, [r2, #4]
 800eac0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800eac2:	4e24      	ldr	r6, [pc, #144]	; (800eb54 <xTaskResumeAll.part.0+0x124>)
 800eac4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800eac6:	b194      	cbz	r4, 800eaee <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800eac8:	2701      	movs	r7, #1
 800eaca:	e006      	b.n	800eada <xTaskResumeAll.part.0+0xaa>
 800eacc:	f7ff ff0c 	bl	800e8e8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ead0:	b108      	cbz	r0, 800ead6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ead2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ead6:	3c01      	subs	r4, #1
 800ead8:	d008      	beq.n	800eaec <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eada:	682b      	ldr	r3, [r5, #0]
 800eadc:	2b00      	cmp	r3, #0
 800eade:	d0f5      	beq.n	800eacc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800eae0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eae2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800eae4:	f103 0301 	add.w	r3, r3, #1
 800eae8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eaea:	d1f6      	bne.n	800eada <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800eaec:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800eaee:	f8da 3000 	ldr.w	r3, [sl]
 800eaf2:	b15b      	cbz	r3, 800eb0c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800eaf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eaf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eafc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb00:	f3bf 8f4f 	dsb	sy
 800eb04:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800eb08:	2001      	movs	r0, #1
 800eb0a:	e000      	b.n	800eb0e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800eb0c:	2000      	movs	r0, #0
 800eb0e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800eb10:	f7fe fc12 	bl	800d338 <vPortExitCritical>
}
 800eb14:	9801      	ldr	r0, [sp, #4]
 800eb16:	b003      	add	sp, #12
 800eb18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eb1c:	6833      	ldr	r3, [r6, #0]
 800eb1e:	2b00      	cmp	r3, #0
 800eb20:	d1a1      	bne.n	800ea66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb22:	4b0a      	ldr	r3, [pc, #40]	; (800eb4c <xTaskResumeAll.part.0+0x11c>)
 800eb24:	681a      	ldr	r2, [r3, #0]
 800eb26:	6812      	ldr	r2, [r2, #0]
 800eb28:	2a00      	cmp	r2, #0
 800eb2a:	d1c4      	bne.n	800eab6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800eb2c:	4b08      	ldr	r3, [pc, #32]	; (800eb50 <xTaskResumeAll.part.0+0x120>)
 800eb2e:	f04f 32ff 	mov.w	r2, #4294967295
 800eb32:	601a      	str	r2, [r3, #0]
 800eb34:	e7c5      	b.n	800eac2 <xTaskResumeAll.part.0+0x92>
 800eb36:	f8df a028 	ldr.w	sl, [pc, #40]	; 800eb60 <xTaskResumeAll.part.0+0x130>
 800eb3a:	e7c2      	b.n	800eac2 <xTaskResumeAll.part.0+0x92>
 800eb3c:	20012e04 	.word	0x20012e04
 800eb40:	20012dfc 	.word	0x20012dfc
 800eb44:	20012e44 	.word	0x20012e44
 800eb48:	20012e0c 	.word	0x20012e0c
 800eb4c:	20012994 	.word	0x20012994
 800eb50:	20012e38 	.word	0x20012e38
 800eb54:	20012e40 	.word	0x20012e40
 800eb58:	2001299c 	.word	0x2001299c
 800eb5c:	20012990 	.word	0x20012990
 800eb60:	20012e88 	.word	0x20012e88

0800eb64 <xTaskCreateStatic>:
	{
 800eb64:	b530      	push	{r4, r5, lr}
 800eb66:	b087      	sub	sp, #28
 800eb68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800eb6a:	b1c4      	cbz	r4, 800eb9e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800eb6c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eb6e:	b16d      	cbz	r5, 800eb8c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eb70:	25ac      	movs	r5, #172	; 0xac
 800eb72:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800eb74:	9d05      	ldr	r5, [sp, #20]
 800eb76:	2dac      	cmp	r5, #172	; 0xac
 800eb78:	d01a      	beq.n	800ebb0 <xTaskCreateStatic+0x4c>
 800eb7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb7e:	f383 8811 	msr	BASEPRI, r3
 800eb82:	f3bf 8f6f 	isb	sy
 800eb86:	f3bf 8f4f 	dsb	sy
 800eb8a:	e7fe      	b.n	800eb8a <xTaskCreateStatic+0x26>
 800eb8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb90:	f383 8811 	msr	BASEPRI, r3
 800eb94:	f3bf 8f6f 	isb	sy
 800eb98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eb9c:	e7fe      	b.n	800eb9c <xTaskCreateStatic+0x38>
 800eb9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eba2:	f383 8811 	msr	BASEPRI, r3
 800eba6:	f3bf 8f6f 	isb	sy
 800ebaa:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ebae:	e7fe      	b.n	800ebae <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ebb0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ebb2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ebb4:	2402      	movs	r4, #2
 800ebb6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ebba:	ac04      	add	r4, sp, #16
 800ebbc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ebc0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ebc2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ebc4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ebc6:	f7ff fda9 	bl	800e71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ebca:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ebcc:	f7ff fd1e 	bl	800e60c <prvAddNewTaskToReadyList>
	}
 800ebd0:	9804      	ldr	r0, [sp, #16]
 800ebd2:	b007      	add	sp, #28
 800ebd4:	bd30      	pop	{r4, r5, pc}
 800ebd6:	bf00      	nop

0800ebd8 <xTaskCreate>:
	{
 800ebd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebdc:	4607      	mov	r7, r0
 800ebde:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ebe0:	0090      	lsls	r0, r2, #2
	{
 800ebe2:	4615      	mov	r5, r2
 800ebe4:	4688      	mov	r8, r1
 800ebe6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ebe8:	f7fe f9b2 	bl	800cf50 <pvPortMalloc>
			if( pxStack != NULL )
 800ebec:	b1d8      	cbz	r0, 800ec26 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ebee:	4604      	mov	r4, r0
 800ebf0:	20ac      	movs	r0, #172	; 0xac
 800ebf2:	f7fe f9ad 	bl	800cf50 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ebf6:	4606      	mov	r6, r0
 800ebf8:	b1d0      	cbz	r0, 800ec30 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ebfa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ebfc:	2400      	movs	r4, #0
 800ebfe:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ec02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ec04:	9401      	str	r4, [sp, #4]
 800ec06:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ec08:	9602      	str	r6, [sp, #8]
 800ec0a:	464b      	mov	r3, r9
 800ec0c:	462a      	mov	r2, r5
 800ec0e:	4641      	mov	r1, r8
 800ec10:	4638      	mov	r0, r7
 800ec12:	9400      	str	r4, [sp, #0]
 800ec14:	f7ff fd82 	bl	800e71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ec18:	4630      	mov	r0, r6
 800ec1a:	f7ff fcf7 	bl	800e60c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ec1e:	2001      	movs	r0, #1
	}
 800ec20:	b005      	add	sp, #20
 800ec22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ec26:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ec2a:	b005      	add	sp, #20
 800ec2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ec30:	4620      	mov	r0, r4
 800ec32:	f7fe fa49 	bl	800d0c8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ec36:	f04f 30ff 	mov.w	r0, #4294967295
 800ec3a:	e7f1      	b.n	800ec20 <xTaskCreate+0x48>

0800ec3c <vTaskDelay>:
	{
 800ec3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ec3e:	b950      	cbnz	r0, 800ec56 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ec40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec4c:	f3bf 8f4f 	dsb	sy
 800ec50:	f3bf 8f6f 	isb	sy
	}
 800ec54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ec56:	4d1e      	ldr	r5, [pc, #120]	; (800ecd0 <vTaskDelay+0x94>)
 800ec58:	682b      	ldr	r3, [r5, #0]
 800ec5a:	b143      	cbz	r3, 800ec6e <vTaskDelay+0x32>
 800ec5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec60:	f383 8811 	msr	BASEPRI, r3
 800ec64:	f3bf 8f6f 	isb	sy
 800ec68:	f3bf 8f4f 	dsb	sy
 800ec6c:	e7fe      	b.n	800ec6c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800ec6e:	682b      	ldr	r3, [r5, #0]
 800ec70:	3301      	adds	r3, #1
 800ec72:	4604      	mov	r4, r0
 800ec74:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ec76:	4b17      	ldr	r3, [pc, #92]	; (800ecd4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec78:	4e17      	ldr	r6, [pc, #92]	; (800ecd8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800ec7a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec7c:	6830      	ldr	r0, [r6, #0]
 800ec7e:	3004      	adds	r0, #4
 800ec80:	f7fe fabe 	bl	800d200 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ec84:	6833      	ldr	r3, [r6, #0]
 800ec86:	19e4      	adds	r4, r4, r7
 800ec88:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800ec8a:	d310      	bcc.n	800ecae <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ec8c:	4b13      	ldr	r3, [pc, #76]	; (800ecdc <vTaskDelay+0xa0>)
 800ec8e:	6818      	ldr	r0, [r3, #0]
 800ec90:	6831      	ldr	r1, [r6, #0]
 800ec92:	3104      	adds	r1, #4
 800ec94:	f7fe fa9c 	bl	800d1d0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800ec98:	682b      	ldr	r3, [r5, #0]
 800ec9a:	b9a3      	cbnz	r3, 800ecc6 <vTaskDelay+0x8a>
 800ec9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eca0:	f383 8811 	msr	BASEPRI, r3
 800eca4:	f3bf 8f6f 	isb	sy
 800eca8:	f3bf 8f4f 	dsb	sy
 800ecac:	e7fe      	b.n	800ecac <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ecae:	4b0c      	ldr	r3, [pc, #48]	; (800ece0 <vTaskDelay+0xa4>)
 800ecb0:	6818      	ldr	r0, [r3, #0]
 800ecb2:	6831      	ldr	r1, [r6, #0]
 800ecb4:	3104      	adds	r1, #4
 800ecb6:	f7fe fa8b 	bl	800d1d0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800ecba:	4b0a      	ldr	r3, [pc, #40]	; (800ece4 <vTaskDelay+0xa8>)
 800ecbc:	681a      	ldr	r2, [r3, #0]
 800ecbe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ecc0:	bf38      	it	cc
 800ecc2:	601c      	strcc	r4, [r3, #0]
 800ecc4:	e7e8      	b.n	800ec98 <vTaskDelay+0x5c>
 800ecc6:	f7ff feb3 	bl	800ea30 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ecca:	2800      	cmp	r0, #0
 800eccc:	d0b8      	beq.n	800ec40 <vTaskDelay+0x4>
	}
 800ecce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ecd0:	20012e04 	.word	0x20012e04
 800ecd4:	20012e84 	.word	0x20012e84
 800ecd8:	20012990 	.word	0x20012990
 800ecdc:	20012998 	.word	0x20012998
 800ece0:	20012994 	.word	0x20012994
 800ece4:	20012e38 	.word	0x20012e38

0800ece8 <vTaskStartScheduler>:
{
 800ece8:	b530      	push	{r4, r5, lr}
 800ecea:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecec:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ecee:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecf0:	a906      	add	r1, sp, #24
 800ecf2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ecf4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ecf8:	f7fe f90c 	bl	800cf14 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ecfc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ed00:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ed02:	b1bb      	cbz	r3, 800ed34 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ed04:	b16d      	cbz	r5, 800ed22 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ed06:	21ac      	movs	r1, #172	; 0xac
 800ed08:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ed0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ed0c:	29ac      	cmp	r1, #172	; 0xac
 800ed0e:	d01a      	beq.n	800ed46 <vTaskStartScheduler+0x5e>
 800ed10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed14:	f383 8811 	msr	BASEPRI, r3
 800ed18:	f3bf 8f6f 	isb	sy
 800ed1c:	f3bf 8f4f 	dsb	sy
 800ed20:	e7fe      	b.n	800ed20 <vTaskStartScheduler+0x38>
 800ed22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed26:	f383 8811 	msr	BASEPRI, r3
 800ed2a:	f3bf 8f6f 	isb	sy
 800ed2e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ed32:	e7fe      	b.n	800ed32 <vTaskStartScheduler+0x4a>
 800ed34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed38:	f383 8811 	msr	BASEPRI, r3
 800ed3c:	f3bf 8f6f 	isb	sy
 800ed40:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ed44:	e7fe      	b.n	800ed44 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ed46:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed48:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ed4a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ed4c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed50:	4623      	mov	r3, r4
 800ed52:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ed56:	491b      	ldr	r1, [pc, #108]	; (800edc4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ed58:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ed5a:	9400      	str	r4, [sp, #0]
 800ed5c:	481a      	ldr	r0, [pc, #104]	; (800edc8 <vTaskStartScheduler+0xe0>)
 800ed5e:	f7ff fcdd 	bl	800e71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ed62:	4628      	mov	r0, r5
 800ed64:	f7ff fc52 	bl	800e60c <prvAddNewTaskToReadyList>
		return xReturn;
 800ed68:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ed6a:	b1eb      	cbz	r3, 800eda8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ed6c:	f000 fc6e 	bl	800f64c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ed70:	2801      	cmp	r0, #1
 800ed72:	d11b      	bne.n	800edac <vTaskStartScheduler+0xc4>
 800ed74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed78:	f383 8811 	msr	BASEPRI, r3
 800ed7c:	f3bf 8f6f 	isb	sy
 800ed80:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed84:	4b11      	ldr	r3, [pc, #68]	; (800edcc <vTaskStartScheduler+0xe4>)
 800ed86:	4a12      	ldr	r2, [pc, #72]	; (800edd0 <vTaskStartScheduler+0xe8>)
 800ed88:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed8a:	4912      	ldr	r1, [pc, #72]	; (800edd4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ed8c:	3358      	adds	r3, #88	; 0x58
 800ed8e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ed90:	4a11      	ldr	r2, [pc, #68]	; (800edd8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ed92:	4b12      	ldr	r3, [pc, #72]	; (800eddc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed94:	f04f 35ff 	mov.w	r5, #4294967295
 800ed98:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ed9a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ed9c:	601c      	str	r4, [r3, #0]
}
 800ed9e:	b00b      	add	sp, #44	; 0x2c
 800eda0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800eda4:	f7fe bb38 	b.w	800d418 <xPortStartScheduler>
}
 800eda8:	b00b      	add	sp, #44	; 0x2c
 800edaa:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800edac:	3001      	adds	r0, #1
 800edae:	d1fb      	bne.n	800eda8 <vTaskStartScheduler+0xc0>
 800edb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edb4:	f383 8811 	msr	BASEPRI, r3
 800edb8:	f3bf 8f6f 	isb	sy
 800edbc:	f3bf 8f4f 	dsb	sy
 800edc0:	e7fe      	b.n	800edc0 <vTaskStartScheduler+0xd8>
 800edc2:	bf00      	nop
 800edc4:	0802edbc 	.word	0x0802edbc
 800edc8:	0800e849 	.word	0x0800e849
 800edcc:	20012990 	.word	0x20012990
 800edd0:	20000160 	.word	0x20000160
 800edd4:	20012e38 	.word	0x20012e38
 800edd8:	20012e58 	.word	0x20012e58
 800eddc:	20012e84 	.word	0x20012e84

0800ede0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ede0:	4a02      	ldr	r2, [pc, #8]	; (800edec <vTaskSuspendAll+0xc>)
 800ede2:	6813      	ldr	r3, [r2, #0]
 800ede4:	3301      	adds	r3, #1
 800ede6:	6013      	str	r3, [r2, #0]
}
 800ede8:	4770      	bx	lr
 800edea:	bf00      	nop
 800edec:	20012e04 	.word	0x20012e04

0800edf0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800edf0:	4b06      	ldr	r3, [pc, #24]	; (800ee0c <xTaskResumeAll+0x1c>)
 800edf2:	681b      	ldr	r3, [r3, #0]
 800edf4:	b943      	cbnz	r3, 800ee08 <xTaskResumeAll+0x18>
 800edf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edfa:	f383 8811 	msr	BASEPRI, r3
 800edfe:	f3bf 8f6f 	isb	sy
 800ee02:	f3bf 8f4f 	dsb	sy
 800ee06:	e7fe      	b.n	800ee06 <xTaskResumeAll+0x16>
 800ee08:	f7ff be12 	b.w	800ea30 <xTaskResumeAll.part.0>
 800ee0c:	20012e04 	.word	0x20012e04

0800ee10 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ee10:	4b01      	ldr	r3, [pc, #4]	; (800ee18 <xTaskGetTickCount+0x8>)
 800ee12:	6818      	ldr	r0, [r3, #0]
}
 800ee14:	4770      	bx	lr
 800ee16:	bf00      	nop
 800ee18:	20012e84 	.word	0x20012e84

0800ee1c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee1c:	4b05      	ldr	r3, [pc, #20]	; (800ee34 <xTaskIncrementTick+0x18>)
 800ee1e:	681b      	ldr	r3, [r3, #0]
 800ee20:	b90b      	cbnz	r3, 800ee26 <xTaskIncrementTick+0xa>
 800ee22:	f7ff bd61 	b.w	800e8e8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ee26:	4a04      	ldr	r2, [pc, #16]	; (800ee38 <xTaskIncrementTick+0x1c>)
 800ee28:	6813      	ldr	r3, [r2, #0]
 800ee2a:	3301      	adds	r3, #1
}
 800ee2c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ee2e:	6013      	str	r3, [r2, #0]
}
 800ee30:	4770      	bx	lr
 800ee32:	bf00      	nop
 800ee34:	20012e04 	.word	0x20012e04
 800ee38:	20012e40 	.word	0x20012e40

0800ee3c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ee3c:	4b1f      	ldr	r3, [pc, #124]	; (800eebc <vTaskSwitchContext+0x80>)
 800ee3e:	681b      	ldr	r3, [r3, #0]
 800ee40:	b11b      	cbz	r3, 800ee4a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ee42:	4b1f      	ldr	r3, [pc, #124]	; (800eec0 <vTaskSwitchContext+0x84>)
 800ee44:	2201      	movs	r2, #1
 800ee46:	601a      	str	r2, [r3, #0]
 800ee48:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ee4a:	4a1d      	ldr	r2, [pc, #116]	; (800eec0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee4c:	491d      	ldr	r1, [pc, #116]	; (800eec4 <vTaskSwitchContext+0x88>)
{
 800ee4e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee50:	4c1d      	ldr	r4, [pc, #116]	; (800eec8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ee52:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee54:	6823      	ldr	r3, [r4, #0]
 800ee56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ee5a:	0092      	lsls	r2, r2, #2
 800ee5c:	0098      	lsls	r0, r3, #2
 800ee5e:	588a      	ldr	r2, [r1, r2]
 800ee60:	b942      	cbnz	r2, 800ee74 <vTaskSwitchContext+0x38>
 800ee62:	b313      	cbz	r3, 800eeaa <vTaskSwitchContext+0x6e>
 800ee64:	3b01      	subs	r3, #1
 800ee66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ee6a:	0098      	lsls	r0, r3, #2
 800ee6c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ee70:	2a00      	cmp	r2, #0
 800ee72:	d0f6      	beq.n	800ee62 <vTaskSwitchContext+0x26>
 800ee74:	4418      	add	r0, r3
 800ee76:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ee7a:	4662      	mov	r2, ip
 800ee7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ee80:	6849      	ldr	r1, [r1, #4]
 800ee82:	f8cc 1004 	str.w	r1, [ip, #4]
 800ee86:	3208      	adds	r2, #8
 800ee88:	4291      	cmp	r1, r2
 800ee8a:	bf08      	it	eq
 800ee8c:	6849      	ldreq	r1, [r1, #4]
 800ee8e:	4a0f      	ldr	r2, [pc, #60]	; (800eecc <vTaskSwitchContext+0x90>)
 800ee90:	bf08      	it	eq
 800ee92:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ee96:	68c9      	ldr	r1, [r1, #12]
 800ee98:	6011      	str	r1, [r2, #0]
 800ee9a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ee9c:	6813      	ldr	r3, [r2, #0]
 800ee9e:	4a0c      	ldr	r2, [pc, #48]	; (800eed0 <vTaskSwitchContext+0x94>)
}
 800eea0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eea4:	3358      	adds	r3, #88	; 0x58
 800eea6:	6013      	str	r3, [r2, #0]
}
 800eea8:	4770      	bx	lr
 800eeaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eeae:	f383 8811 	msr	BASEPRI, r3
 800eeb2:	f3bf 8f6f 	isb	sy
 800eeb6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eeba:	e7fe      	b.n	800eeba <vTaskSwitchContext+0x7e>
 800eebc:	20012e04 	.word	0x20012e04
 800eec0:	20012e88 	.word	0x20012e88
 800eec4:	2001299c 	.word	0x2001299c
 800eec8:	20012e0c 	.word	0x20012e0c
 800eecc:	20012990 	.word	0x20012990
 800eed0:	20000160 	.word	0x20000160

0800eed4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800eed4:	b1d0      	cbz	r0, 800ef0c <vTaskPlaceOnEventList+0x38>
{
 800eed6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800eed8:	4d1a      	ldr	r5, [pc, #104]	; (800ef44 <vTaskPlaceOnEventList+0x70>)
 800eeda:	460c      	mov	r4, r1
 800eedc:	6829      	ldr	r1, [r5, #0]
 800eede:	3118      	adds	r1, #24
 800eee0:	f7fe f976 	bl	800d1d0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eee4:	4b18      	ldr	r3, [pc, #96]	; (800ef48 <vTaskPlaceOnEventList+0x74>)
 800eee6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eee8:	6828      	ldr	r0, [r5, #0]
 800eeea:	3004      	adds	r0, #4
 800eeec:	f7fe f988 	bl	800d200 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800eef0:	1c63      	adds	r3, r4, #1
 800eef2:	d014      	beq.n	800ef1e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eef4:	682b      	ldr	r3, [r5, #0]
 800eef6:	19a4      	adds	r4, r4, r6
 800eef8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eefa:	d317      	bcc.n	800ef2c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eefc:	4b13      	ldr	r3, [pc, #76]	; (800ef4c <vTaskPlaceOnEventList+0x78>)
 800eefe:	6818      	ldr	r0, [r3, #0]
 800ef00:	6829      	ldr	r1, [r5, #0]
}
 800ef02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef06:	3104      	adds	r1, #4
 800ef08:	f7fe b962 	b.w	800d1d0 <vListInsert>
 800ef0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef10:	f383 8811 	msr	BASEPRI, r3
 800ef14:	f3bf 8f6f 	isb	sy
 800ef18:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ef1c:	e7fe      	b.n	800ef1c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef1e:	6829      	ldr	r1, [r5, #0]
 800ef20:	480b      	ldr	r0, [pc, #44]	; (800ef50 <vTaskPlaceOnEventList+0x7c>)
}
 800ef22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef26:	3104      	adds	r1, #4
 800ef28:	f7fe b942 	b.w	800d1b0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef2c:	4b09      	ldr	r3, [pc, #36]	; (800ef54 <vTaskPlaceOnEventList+0x80>)
 800ef2e:	6818      	ldr	r0, [r3, #0]
 800ef30:	6829      	ldr	r1, [r5, #0]
 800ef32:	3104      	adds	r1, #4
 800ef34:	f7fe f94c 	bl	800d1d0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ef38:	4b07      	ldr	r3, [pc, #28]	; (800ef58 <vTaskPlaceOnEventList+0x84>)
 800ef3a:	681a      	ldr	r2, [r3, #0]
 800ef3c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ef3e:	bf38      	it	cc
 800ef40:	601c      	strcc	r4, [r3, #0]
}
 800ef42:	bd70      	pop	{r4, r5, r6, pc}
 800ef44:	20012990 	.word	0x20012990
 800ef48:	20012e84 	.word	0x20012e84
 800ef4c:	20012998 	.word	0x20012998
 800ef50:	20012e5c 	.word	0x20012e5c
 800ef54:	20012994 	.word	0x20012994
 800ef58:	20012e38 	.word	0x20012e38

0800ef5c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ef5c:	b330      	cbz	r0, 800efac <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ef5e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ef60:	4e1d      	ldr	r6, [pc, #116]	; (800efd8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ef62:	460c      	mov	r4, r1
 800ef64:	6831      	ldr	r1, [r6, #0]
 800ef66:	4615      	mov	r5, r2
 800ef68:	3118      	adds	r1, #24
 800ef6a:	f7fe f921 	bl	800d1b0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ef6e:	4b1b      	ldr	r3, [pc, #108]	; (800efdc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ef70:	b985      	cbnz	r5, 800ef94 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ef72:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef74:	6830      	ldr	r0, [r6, #0]
 800ef76:	3004      	adds	r0, #4
 800ef78:	f7fe f942 	bl	800d200 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ef7c:	6833      	ldr	r3, [r6, #0]
 800ef7e:	1964      	adds	r4, r4, r5
 800ef80:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ef82:	d31c      	bcc.n	800efbe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef84:	4b16      	ldr	r3, [pc, #88]	; (800efe0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ef86:	6818      	ldr	r0, [r3, #0]
 800ef88:	6831      	ldr	r1, [r6, #0]
	}
 800ef8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef8e:	3104      	adds	r1, #4
 800ef90:	f7fe b91e 	b.w	800d1d0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ef94:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef96:	6830      	ldr	r0, [r6, #0]
 800ef98:	3004      	adds	r0, #4
 800ef9a:	f7fe f931 	bl	800d200 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ef9e:	6831      	ldr	r1, [r6, #0]
 800efa0:	4810      	ldr	r0, [pc, #64]	; (800efe4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800efa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800efa6:	3104      	adds	r1, #4
 800efa8:	f7fe b902 	b.w	800d1b0 <vListInsertEnd>
 800efac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efb0:	f383 8811 	msr	BASEPRI, r3
 800efb4:	f3bf 8f6f 	isb	sy
 800efb8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800efbc:	e7fe      	b.n	800efbc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800efbe:	4b0a      	ldr	r3, [pc, #40]	; (800efe8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800efc0:	6818      	ldr	r0, [r3, #0]
 800efc2:	6831      	ldr	r1, [r6, #0]
 800efc4:	3104      	adds	r1, #4
 800efc6:	f7fe f903 	bl	800d1d0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800efca:	4b08      	ldr	r3, [pc, #32]	; (800efec <vTaskPlaceOnEventListRestricted+0x90>)
 800efcc:	681a      	ldr	r2, [r3, #0]
 800efce:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800efd0:	bf38      	it	cc
 800efd2:	601c      	strcc	r4, [r3, #0]
	}
 800efd4:	bd70      	pop	{r4, r5, r6, pc}
 800efd6:	bf00      	nop
 800efd8:	20012990 	.word	0x20012990
 800efdc:	20012e84 	.word	0x20012e84
 800efe0:	20012998 	.word	0x20012998
 800efe4:	20012e5c 	.word	0x20012e5c
 800efe8:	20012994 	.word	0x20012994
 800efec:	20012e38 	.word	0x20012e38

0800eff0 <xTaskRemoveFromEventList>:
{
 800eff0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eff2:	68c3      	ldr	r3, [r0, #12]
 800eff4:	68dc      	ldr	r4, [r3, #12]
{
 800eff6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800eff8:	2c00      	cmp	r4, #0
 800effa:	d02b      	beq.n	800f054 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800effc:	f104 0518 	add.w	r5, r4, #24
 800f000:	4628      	mov	r0, r5
 800f002:	f7fe f8fd 	bl	800d200 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f006:	4b18      	ldr	r3, [pc, #96]	; (800f068 <xTaskRemoveFromEventList+0x78>)
 800f008:	681b      	ldr	r3, [r3, #0]
 800f00a:	b17b      	cbz	r3, 800f02c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f00c:	4817      	ldr	r0, [pc, #92]	; (800f06c <xTaskRemoveFromEventList+0x7c>)
 800f00e:	4629      	mov	r1, r5
 800f010:	f7fe f8ce 	bl	800d1b0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f014:	4b16      	ldr	r3, [pc, #88]	; (800f070 <xTaskRemoveFromEventList+0x80>)
 800f016:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f018:	681b      	ldr	r3, [r3, #0]
 800f01a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f01c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f01e:	bf85      	ittet	hi
 800f020:	4b14      	ldrhi	r3, [pc, #80]	; (800f074 <xTaskRemoveFromEventList+0x84>)
 800f022:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f024:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f026:	6018      	strhi	r0, [r3, #0]
}
 800f028:	b003      	add	sp, #12
 800f02a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f02c:	1d21      	adds	r1, r4, #4
 800f02e:	4608      	mov	r0, r1
 800f030:	9101      	str	r1, [sp, #4]
 800f032:	f7fe f8e5 	bl	800d200 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f036:	4a10      	ldr	r2, [pc, #64]	; (800f078 <xTaskRemoveFromEventList+0x88>)
 800f038:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f03a:	6810      	ldr	r0, [r2, #0]
 800f03c:	9901      	ldr	r1, [sp, #4]
 800f03e:	4283      	cmp	r3, r0
 800f040:	480e      	ldr	r0, [pc, #56]	; (800f07c <xTaskRemoveFromEventList+0x8c>)
 800f042:	bf88      	it	hi
 800f044:	6013      	strhi	r3, [r2, #0]
 800f046:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f04a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f04e:	f7fe f8af 	bl	800d1b0 <vListInsertEnd>
 800f052:	e7df      	b.n	800f014 <xTaskRemoveFromEventList+0x24>
 800f054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f058:	f383 8811 	msr	BASEPRI, r3
 800f05c:	f3bf 8f6f 	isb	sy
 800f060:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f064:	e7fe      	b.n	800f064 <xTaskRemoveFromEventList+0x74>
 800f066:	bf00      	nop
 800f068:	20012e04 	.word	0x20012e04
 800f06c:	20012e44 	.word	0x20012e44
 800f070:	20012990 	.word	0x20012990
 800f074:	20012e88 	.word	0x20012e88
 800f078:	20012e0c 	.word	0x20012e0c
 800f07c:	2001299c 	.word	0x2001299c

0800f080 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f080:	4a03      	ldr	r2, [pc, #12]	; (800f090 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f082:	4b04      	ldr	r3, [pc, #16]	; (800f094 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f084:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f086:	681b      	ldr	r3, [r3, #0]
 800f088:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f08c:	4770      	bx	lr
 800f08e:	bf00      	nop
 800f090:	20012e3c 	.word	0x20012e3c
 800f094:	20012e84 	.word	0x20012e84

0800f098 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f098:	b328      	cbz	r0, 800f0e6 <xTaskCheckForTimeOut+0x4e>
{
 800f09a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f09c:	460d      	mov	r5, r1
 800f09e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f0a0:	b1c1      	cbz	r1, 800f0d4 <xTaskCheckForTimeOut+0x3c>
 800f0a2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f0a4:	f7fe f926 	bl	800d2f4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f0a8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f0aa:	4a1d      	ldr	r2, [pc, #116]	; (800f120 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f0ac:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f0ae:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f0b0:	d030      	beq.n	800f114 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f0b2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f124 <xTaskCheckForTimeOut+0x8c>
 800f0b6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f0ba:	f8dc 7000 	ldr.w	r7, [ip]
 800f0be:	42be      	cmp	r6, r7
 800f0c0:	d01a      	beq.n	800f0f8 <xTaskCheckForTimeOut+0x60>
 800f0c2:	4288      	cmp	r0, r1
 800f0c4:	d818      	bhi.n	800f0f8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f0c6:	2001      	movs	r0, #1
 800f0c8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f0ca:	f7fe f935 	bl	800d338 <vPortExitCritical>
}
 800f0ce:	9801      	ldr	r0, [sp, #4]
 800f0d0:	b003      	add	sp, #12
 800f0d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f0d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0d8:	f383 8811 	msr	BASEPRI, r3
 800f0dc:	f3bf 8f6f 	isb	sy
 800f0e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f0e4:	e7fe      	b.n	800f0e4 <xTaskCheckForTimeOut+0x4c>
 800f0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ea:	f383 8811 	msr	BASEPRI, r3
 800f0ee:	f3bf 8f6f 	isb	sy
 800f0f2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f0f6:	e7fe      	b.n	800f0f6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f0f8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f0fc:	4573      	cmp	r3, lr
 800f0fe:	d90b      	bls.n	800f118 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f100:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f102:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f106:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f108:	4403      	add	r3, r0
 800f10a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f10c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f10e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f112:	e7d9      	b.n	800f0c8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f114:	2000      	movs	r0, #0
 800f116:	e7d7      	b.n	800f0c8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f118:	2300      	movs	r3, #0
 800f11a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f11c:	2001      	movs	r0, #1
 800f11e:	e7d3      	b.n	800f0c8 <xTaskCheckForTimeOut+0x30>
 800f120:	20012e84 	.word	0x20012e84
 800f124:	20012e3c 	.word	0x20012e3c

0800f128 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f128:	4b01      	ldr	r3, [pc, #4]	; (800f130 <vTaskMissedYield+0x8>)
 800f12a:	2201      	movs	r2, #1
 800f12c:	601a      	str	r2, [r3, #0]
}
 800f12e:	4770      	bx	lr
 800f130:	20012e88 	.word	0x20012e88

0800f134 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f134:	4b05      	ldr	r3, [pc, #20]	; (800f14c <xTaskGetSchedulerState+0x18>)
 800f136:	681b      	ldr	r3, [r3, #0]
 800f138:	b133      	cbz	r3, 800f148 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f13a:	4b05      	ldr	r3, [pc, #20]	; (800f150 <xTaskGetSchedulerState+0x1c>)
 800f13c:	6818      	ldr	r0, [r3, #0]
 800f13e:	fab0 f080 	clz	r0, r0
 800f142:	0940      	lsrs	r0, r0, #5
 800f144:	0040      	lsls	r0, r0, #1
 800f146:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f148:	2001      	movs	r0, #1
	}
 800f14a:	4770      	bx	lr
 800f14c:	20012e58 	.word	0x20012e58
 800f150:	20012e04 	.word	0x20012e04

0800f154 <xTaskPriorityInherit>:
	{
 800f154:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f156:	4604      	mov	r4, r0
	{
 800f158:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f15a:	b1c8      	cbz	r0, 800f190 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f15c:	4d1d      	ldr	r5, [pc, #116]	; (800f1d4 <xTaskPriorityInherit+0x80>)
 800f15e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f160:	682a      	ldr	r2, [r5, #0]
 800f162:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f164:	4293      	cmp	r3, r2
 800f166:	d215      	bcs.n	800f194 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f168:	6982      	ldr	r2, [r0, #24]
 800f16a:	2a00      	cmp	r2, #0
 800f16c:	db04      	blt.n	800f178 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f16e:	682a      	ldr	r2, [r5, #0]
 800f170:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f172:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f176:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f178:	4e17      	ldr	r6, [pc, #92]	; (800f1d8 <xTaskPriorityInherit+0x84>)
 800f17a:	6962      	ldr	r2, [r4, #20]
 800f17c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f180:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f184:	429a      	cmp	r2, r3
 800f186:	d00e      	beq.n	800f1a6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f188:	682b      	ldr	r3, [r5, #0]
 800f18a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f18c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f18e:	2001      	movs	r0, #1
	}
 800f190:	b002      	add	sp, #8
 800f192:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f194:	682b      	ldr	r3, [r5, #0]
 800f196:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f198:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f19a:	4298      	cmp	r0, r3
 800f19c:	bf2c      	ite	cs
 800f19e:	2000      	movcs	r0, #0
 800f1a0:	2001      	movcc	r0, #1
	}
 800f1a2:	b002      	add	sp, #8
 800f1a4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1a6:	1d21      	adds	r1, r4, #4
 800f1a8:	4608      	mov	r0, r1
 800f1aa:	9101      	str	r1, [sp, #4]
 800f1ac:	f7fe f828 	bl	800d200 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f1b0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f1b2:	4b0a      	ldr	r3, [pc, #40]	; (800f1dc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f1b4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f1b6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f1b8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f1ba:	4290      	cmp	r0, r2
 800f1bc:	bf88      	it	hi
 800f1be:	6018      	strhi	r0, [r3, #0]
 800f1c0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f1c4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f1c8:	9901      	ldr	r1, [sp, #4]
 800f1ca:	f7fd fff1 	bl	800d1b0 <vListInsertEnd>
				xReturn = pdTRUE;
 800f1ce:	2001      	movs	r0, #1
 800f1d0:	e7de      	b.n	800f190 <xTaskPriorityInherit+0x3c>
 800f1d2:	bf00      	nop
 800f1d4:	20012990 	.word	0x20012990
 800f1d8:	2001299c 	.word	0x2001299c
 800f1dc:	20012e0c 	.word	0x20012e0c

0800f1e0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f1e0:	b318      	cbz	r0, 800f22a <xTaskPriorityDisinherit+0x4a>
	{
 800f1e2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f1e4:	4b1e      	ldr	r3, [pc, #120]	; (800f260 <xTaskPriorityDisinherit+0x80>)
 800f1e6:	681c      	ldr	r4, [r3, #0]
 800f1e8:	4284      	cmp	r4, r0
	{
 800f1ea:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f1ec:	d008      	beq.n	800f200 <xTaskPriorityDisinherit+0x20>
 800f1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1f2:	f383 8811 	msr	BASEPRI, r3
 800f1f6:	f3bf 8f6f 	isb	sy
 800f1fa:	f3bf 8f4f 	dsb	sy
 800f1fe:	e7fe      	b.n	800f1fe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f200:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f202:	b14b      	cbz	r3, 800f218 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f204:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f206:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f208:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f20a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f20c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f20e:	d000      	beq.n	800f212 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f210:	b16b      	cbz	r3, 800f22e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f212:	2000      	movs	r0, #0
	}
 800f214:	b002      	add	sp, #8
 800f216:	bd10      	pop	{r4, pc}
 800f218:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f21c:	f383 8811 	msr	BASEPRI, r3
 800f220:	f3bf 8f6f 	isb	sy
 800f224:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f228:	e7fe      	b.n	800f228 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f22a:	2000      	movs	r0, #0
	}
 800f22c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f22e:	1d21      	adds	r1, r4, #4
 800f230:	4608      	mov	r0, r1
 800f232:	9101      	str	r1, [sp, #4]
 800f234:	f7fd ffe4 	bl	800d200 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f238:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f23a:	4a0a      	ldr	r2, [pc, #40]	; (800f264 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f23c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f23e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f242:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f244:	6810      	ldr	r0, [r2, #0]
 800f246:	9901      	ldr	r1, [sp, #4]
 800f248:	4283      	cmp	r3, r0
 800f24a:	4807      	ldr	r0, [pc, #28]	; (800f268 <xTaskPriorityDisinherit+0x88>)
 800f24c:	bf88      	it	hi
 800f24e:	6013      	strhi	r3, [r2, #0]
 800f250:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f254:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f258:	f7fd ffaa 	bl	800d1b0 <vListInsertEnd>
					xReturn = pdTRUE;
 800f25c:	2001      	movs	r0, #1
		return xReturn;
 800f25e:	e7d9      	b.n	800f214 <xTaskPriorityDisinherit+0x34>
 800f260:	20012990 	.word	0x20012990
 800f264:	20012e0c 	.word	0x20012e0c
 800f268:	2001299c 	.word	0x2001299c

0800f26c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f26c:	2800      	cmp	r0, #0
 800f26e:	d041      	beq.n	800f2f4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f270:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f272:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f274:	b083      	sub	sp, #12
 800f276:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f278:	b153      	cbz	r3, 800f290 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f27a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f27c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f27e:	4281      	cmp	r1, r0
 800f280:	bf38      	it	cc
 800f282:	4601      	movcc	r1, r0
 800f284:	428a      	cmp	r2, r1
 800f286:	d001      	beq.n	800f28c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f288:	2b01      	cmp	r3, #1
 800f28a:	d00a      	beq.n	800f2a2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f28c:	b003      	add	sp, #12
 800f28e:	bd30      	pop	{r4, r5, pc}
 800f290:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f294:	f383 8811 	msr	BASEPRI, r3
 800f298:	f3bf 8f6f 	isb	sy
 800f29c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f2a0:	e7fe      	b.n	800f2a0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f2a2:	4b19      	ldr	r3, [pc, #100]	; (800f308 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f2a4:	681b      	ldr	r3, [r3, #0]
 800f2a6:	42a3      	cmp	r3, r4
 800f2a8:	d025      	beq.n	800f2f6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f2aa:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f2ac:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f2ae:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2b0:	bfa8      	it	ge
 800f2b2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f2b6:	4d15      	ldr	r5, [pc, #84]	; (800f30c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2b8:	bfa8      	it	ge
 800f2ba:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f2bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f2c0:	6961      	ldr	r1, [r4, #20]
 800f2c2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f2c6:	4299      	cmp	r1, r3
 800f2c8:	d1e0      	bne.n	800f28c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f2ca:	1d21      	adds	r1, r4, #4
 800f2cc:	4608      	mov	r0, r1
 800f2ce:	9101      	str	r1, [sp, #4]
 800f2d0:	f7fd ff96 	bl	800d200 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f2d4:	4b0e      	ldr	r3, [pc, #56]	; (800f310 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f2d6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f2d8:	681a      	ldr	r2, [r3, #0]
 800f2da:	9901      	ldr	r1, [sp, #4]
 800f2dc:	4290      	cmp	r0, r2
 800f2de:	bf88      	it	hi
 800f2e0:	6018      	strhi	r0, [r3, #0]
 800f2e2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f2e6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f2ea:	b003      	add	sp, #12
 800f2ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f2f0:	f7fd bf5e 	b.w	800d1b0 <vListInsertEnd>
 800f2f4:	4770      	bx	lr
 800f2f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2fa:	f383 8811 	msr	BASEPRI, r3
 800f2fe:	f3bf 8f6f 	isb	sy
 800f302:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f306:	e7fe      	b.n	800f306 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f308:	20012990 	.word	0x20012990
 800f30c:	2001299c 	.word	0x2001299c
 800f310:	20012e0c 	.word	0x20012e0c

0800f314 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f314:	4b04      	ldr	r3, [pc, #16]	; (800f328 <pvTaskIncrementMutexHeldCount+0x14>)
 800f316:	681a      	ldr	r2, [r3, #0]
 800f318:	b11a      	cbz	r2, 800f322 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f31a:	6819      	ldr	r1, [r3, #0]
 800f31c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f31e:	3201      	adds	r2, #1
 800f320:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f322:	6818      	ldr	r0, [r3, #0]
	}
 800f324:	4770      	bx	lr
 800f326:	bf00      	nop
 800f328:	20012990 	.word	0x20012990

0800f32c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f32c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f330:	4e22      	ldr	r6, [pc, #136]	; (800f3bc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f332:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f3c4 <prvSwitchTimerLists+0x98>
{
 800f336:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f338:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f33c:	e00d      	b.n	800f35a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f33e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f340:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f342:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f344:	1d25      	adds	r5, r4, #4
 800f346:	4628      	mov	r0, r5
 800f348:	f7fd ff5a 	bl	800d200 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f34c:	6a23      	ldr	r3, [r4, #32]
 800f34e:	4620      	mov	r0, r4
 800f350:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f352:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f356:	075b      	lsls	r3, r3, #29
 800f358:	d40a      	bmi.n	800f370 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f35a:	6833      	ldr	r3, [r6, #0]
 800f35c:	681a      	ldr	r2, [r3, #0]
 800f35e:	2a00      	cmp	r2, #0
 800f360:	d1ed      	bne.n	800f33e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f362:	4a17      	ldr	r2, [pc, #92]	; (800f3c0 <prvSwitchTimerLists+0x94>)
 800f364:	6811      	ldr	r1, [r2, #0]
 800f366:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f368:	6013      	str	r3, [r2, #0]
}
 800f36a:	b005      	add	sp, #20
 800f36c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f370:	69a3      	ldr	r3, [r4, #24]
 800f372:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f374:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f376:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f378:	d205      	bcs.n	800f386 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f37a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f37c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f37e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f380:	f7fd ff26 	bl	800d1d0 <vListInsert>
 800f384:	e7e9      	b.n	800f35a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f386:	f8d9 3000 	ldr.w	r3, [r9]
 800f38a:	b16b      	cbz	r3, 800f3a8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f38c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f390:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f392:	f7ff fecf 	bl	800f134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f396:	2300      	movs	r3, #0
 800f398:	f8d9 0000 	ldr.w	r0, [r9]
 800f39c:	461a      	mov	r2, r3
 800f39e:	4669      	mov	r1, sp
 800f3a0:	f7fe fa9c 	bl	800d8dc <xQueueGenericSend>
				configASSERT( xResult );
 800f3a4:	2800      	cmp	r0, #0
 800f3a6:	d1d8      	bne.n	800f35a <prvSwitchTimerLists+0x2e>
 800f3a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3ac:	f383 8811 	msr	BASEPRI, r3
 800f3b0:	f3bf 8f6f 	isb	sy
 800f3b4:	f3bf 8f4f 	dsb	sy
 800f3b8:	e7fe      	b.n	800f3b8 <prvSwitchTimerLists+0x8c>
 800f3ba:	bf00      	nop
 800f3bc:	20012e8c 	.word	0x20012e8c
 800f3c0:	20012e90 	.word	0x20012e90
 800f3c4:	20012fb0 	.word	0x20012fb0

0800f3c8 <prvTimerTask>:
{
 800f3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3cc:	4e9b      	ldr	r6, [pc, #620]	; (800f63c <prvTimerTask+0x274>)
 800f3ce:	4d9c      	ldr	r5, [pc, #624]	; (800f640 <prvTimerTask+0x278>)
 800f3d0:	4c9c      	ldr	r4, [pc, #624]	; (800f644 <prvTimerTask+0x27c>)
 800f3d2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f3d4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f3d8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f3dc:	6833      	ldr	r3, [r6, #0]
 800f3de:	681f      	ldr	r7, [r3, #0]
 800f3e0:	2f00      	cmp	r7, #0
 800f3e2:	f000 80a8 	beq.w	800f536 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f3e6:	68db      	ldr	r3, [r3, #12]
 800f3e8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f3ea:	f7ff fcf9 	bl	800ede0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f3ee:	f7ff fd0f 	bl	800ee10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f3f2:	682a      	ldr	r2, [r5, #0]
 800f3f4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f3f6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f3f8:	f0c0 80ae 	bcc.w	800f558 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f3fc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f3fe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f400:	f240 80b4 	bls.w	800f56c <prvTimerTask+0x1a4>
 800f404:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f406:	6820      	ldr	r0, [r4, #0]
 800f408:	eba7 010a 	sub.w	r1, r7, sl
 800f40c:	f7ff f89a 	bl	800e544 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f410:	f7ff fcee 	bl	800edf0 <xTaskResumeAll>
 800f414:	b928      	cbnz	r0, 800f422 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f416:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f41a:	f3bf 8f4f 	dsb	sy
 800f41e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f422:	6820      	ldr	r0, [r4, #0]
 800f424:	2200      	movs	r2, #0
 800f426:	a902      	add	r1, sp, #8
 800f428:	f7fe fc94 	bl	800dd54 <xQueueReceive>
 800f42c:	2800      	cmp	r0, #0
 800f42e:	d0d5      	beq.n	800f3dc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f430:	9b02      	ldr	r3, [sp, #8]
 800f432:	2b00      	cmp	r3, #0
 800f434:	db76      	blt.n	800f524 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f436:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f438:	697b      	ldr	r3, [r7, #20]
 800f43a:	b113      	cbz	r3, 800f442 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f43c:	1d38      	adds	r0, r7, #4
 800f43e:	f7fd fedf 	bl	800d200 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f442:	f7ff fce5 	bl	800ee10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f446:	682b      	ldr	r3, [r5, #0]
 800f448:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f44a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f44c:	f0c0 808b 	bcc.w	800f566 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f450:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f452:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f456:	2b09      	cmp	r3, #9
 800f458:	d8e3      	bhi.n	800f422 <prvTimerTask+0x5a>
 800f45a:	e8df f003 	tbb	[pc, r3]
 800f45e:	0505      	.short	0x0505
 800f460:	5a3d5305 	.word	0x5a3d5305
 800f464:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f468:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f46c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f46e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f470:	f043 0301 	orr.w	r3, r3, #1
 800f474:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f478:	9b03      	ldr	r3, [sp, #12]
 800f47a:	1899      	adds	r1, r3, r2
 800f47c:	bf2c      	ite	cs
 800f47e:	2001      	movcs	r0, #1
 800f480:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f482:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f484:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f486:	f200 808c 	bhi.w	800f5a2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f48a:	ebaa 0303 	sub.w	r3, sl, r3
 800f48e:	429a      	cmp	r2, r3
 800f490:	d832      	bhi.n	800f4f8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f492:	6a3b      	ldr	r3, [r7, #32]
 800f494:	4638      	mov	r0, r7
 800f496:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f498:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f49c:	075b      	lsls	r3, r3, #29
 800f49e:	d5c0      	bpl.n	800f422 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f4a0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f4a2:	9903      	ldr	r1, [sp, #12]
 800f4a4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f4a6:	b172      	cbz	r2, 800f4c6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f4a8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f4aa:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f4ae:	2300      	movs	r3, #0
 800f4b0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f4b2:	f7ff fe3f 	bl	800f134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f4b6:	2300      	movs	r3, #0
 800f4b8:	6820      	ldr	r0, [r4, #0]
 800f4ba:	461a      	mov	r2, r3
 800f4bc:	a906      	add	r1, sp, #24
 800f4be:	f7fe fa0d 	bl	800d8dc <xQueueGenericSend>
							configASSERT( xResult );
 800f4c2:	2800      	cmp	r0, #0
 800f4c4:	d1ad      	bne.n	800f422 <prvTimerTask+0x5a>
 800f4c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4ca:	f383 8811 	msr	BASEPRI, r3
 800f4ce:	f3bf 8f6f 	isb	sy
 800f4d2:	f3bf 8f4f 	dsb	sy
 800f4d6:	e7fe      	b.n	800f4d6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f4d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f4dc:	f043 0301 	orr.w	r3, r3, #1
 800f4e0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f4e4:	9b03      	ldr	r3, [sp, #12]
 800f4e6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f4e8:	2b00      	cmp	r3, #0
 800f4ea:	f000 809d 	beq.w	800f628 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f4ee:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f4f0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f4f2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f4f4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f4f6:	d85e      	bhi.n	800f5b6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f4f8:	4b53      	ldr	r3, [pc, #332]	; (800f648 <prvTimerTask+0x280>)
 800f4fa:	1d39      	adds	r1, r7, #4
 800f4fc:	6818      	ldr	r0, [r3, #0]
 800f4fe:	f7fd fe67 	bl	800d1d0 <vListInsert>
	return xProcessTimerNow;
 800f502:	e78e      	b.n	800f422 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f504:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f508:	f023 0301 	bic.w	r3, r3, #1
 800f50c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f510:	e787      	b.n	800f422 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f512:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f516:	079a      	lsls	r2, r3, #30
 800f518:	d552      	bpl.n	800f5c0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f51a:	f023 0301 	bic.w	r3, r3, #1
 800f51e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f522:	e77e      	b.n	800f422 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f524:	9b03      	ldr	r3, [sp, #12]
 800f526:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f52a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f52c:	9b02      	ldr	r3, [sp, #8]
 800f52e:	2b00      	cmp	r3, #0
 800f530:	f6ff af77 	blt.w	800f422 <prvTimerTask+0x5a>
 800f534:	e77f      	b.n	800f436 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f536:	f7ff fc53 	bl	800ede0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f53a:	f7ff fc69 	bl	800ee10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f53e:	682a      	ldr	r2, [r5, #0]
 800f540:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f542:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f544:	d808      	bhi.n	800f558 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f546:	4b40      	ldr	r3, [pc, #256]	; (800f648 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f548:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f54c:	681a      	ldr	r2, [r3, #0]
 800f54e:	6812      	ldr	r2, [r2, #0]
 800f550:	fab2 f282 	clz	r2, r2
 800f554:	0952      	lsrs	r2, r2, #5
 800f556:	e756      	b.n	800f406 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f558:	f7ff fee8 	bl	800f32c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f55c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f560:	f7ff fc46 	bl	800edf0 <xTaskResumeAll>
 800f564:	e75d      	b.n	800f422 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f566:	f7ff fee1 	bl	800f32c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f56a:	e771      	b.n	800f450 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f56c:	f7ff fc40 	bl	800edf0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f570:	6832      	ldr	r2, [r6, #0]
 800f572:	68d2      	ldr	r2, [r2, #12]
 800f574:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f578:	f10b 0104 	add.w	r1, fp, #4
 800f57c:	4608      	mov	r0, r1
 800f57e:	9101      	str	r1, [sp, #4]
 800f580:	f7fd fe3e 	bl	800d200 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f584:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f588:	9901      	ldr	r1, [sp, #4]
 800f58a:	f010 0f04 	tst.w	r0, #4
 800f58e:	d11b      	bne.n	800f5c8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f590:	f020 0001 	bic.w	r0, r0, #1
 800f594:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f598:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f59c:	4658      	mov	r0, fp
 800f59e:	4798      	blx	r3
}
 800f5a0:	e73f      	b.n	800f422 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f5a2:	4553      	cmp	r3, sl
 800f5a4:	d902      	bls.n	800f5ac <prvTimerTask+0x1e4>
 800f5a6:	2800      	cmp	r0, #0
 800f5a8:	f43f af73 	beq.w	800f492 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5ac:	6830      	ldr	r0, [r6, #0]
 800f5ae:	1d39      	adds	r1, r7, #4
 800f5b0:	f7fd fe0e 	bl	800d1d0 <vListInsert>
	return xProcessTimerNow;
 800f5b4:	e735      	b.n	800f422 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5b6:	6830      	ldr	r0, [r6, #0]
 800f5b8:	1d39      	adds	r1, r7, #4
 800f5ba:	f7fd fe09 	bl	800d1d0 <vListInsert>
 800f5be:	e730      	b.n	800f422 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f5c0:	4638      	mov	r0, r7
 800f5c2:	f7fd fd81 	bl	800d0c8 <vPortFree>
 800f5c6:	e72c      	b.n	800f422 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f5c8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f5cc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f5d0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f5d2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f5d4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f5d8:	d903      	bls.n	800f5e2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5da:	6830      	ldr	r0, [r6, #0]
 800f5dc:	f7fd fdf8 	bl	800d1d0 <vListInsert>
	return xProcessTimerNow;
 800f5e0:	e7da      	b.n	800f598 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5e2:	ebaa 0307 	sub.w	r3, sl, r7
 800f5e6:	429a      	cmp	r2, r3
 800f5e8:	d819      	bhi.n	800f61e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f5ea:	6823      	ldr	r3, [r4, #0]
 800f5ec:	b173      	cbz	r3, 800f60c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f5ee:	2300      	movs	r3, #0
 800f5f0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f5f2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f5f4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f5f8:	f7ff fd9c 	bl	800f134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f5fc:	2300      	movs	r3, #0
 800f5fe:	6820      	ldr	r0, [r4, #0]
 800f600:	461a      	mov	r2, r3
 800f602:	a906      	add	r1, sp, #24
 800f604:	f7fe f96a 	bl	800d8dc <xQueueGenericSend>
			configASSERT( xResult );
 800f608:	2800      	cmp	r0, #0
 800f60a:	d1c5      	bne.n	800f598 <prvTimerTask+0x1d0>
 800f60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f610:	f383 8811 	msr	BASEPRI, r3
 800f614:	f3bf 8f6f 	isb	sy
 800f618:	f3bf 8f4f 	dsb	sy
 800f61c:	e7fe      	b.n	800f61c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f61e:	4b0a      	ldr	r3, [pc, #40]	; (800f648 <prvTimerTask+0x280>)
 800f620:	6818      	ldr	r0, [r3, #0]
 800f622:	f7fd fdd5 	bl	800d1d0 <vListInsert>
	return xProcessTimerNow;
 800f626:	e7b7      	b.n	800f598 <prvTimerTask+0x1d0>
 800f628:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f62c:	f383 8811 	msr	BASEPRI, r3
 800f630:	f3bf 8f6f 	isb	sy
 800f634:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f638:	e7fe      	b.n	800f638 <prvTimerTask+0x270>
 800f63a:	bf00      	nop
 800f63c:	20012e8c 	.word	0x20012e8c
 800f640:	20012f5c 	.word	0x20012f5c
 800f644:	20012fb0 	.word	0x20012fb0
 800f648:	20012e90 	.word	0x20012e90

0800f64c <xTimerCreateTimerTask>:
{
 800f64c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f64e:	4c23      	ldr	r4, [pc, #140]	; (800f6dc <xTimerCreateTimerTask+0x90>)
{
 800f650:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f652:	f7fd fe4f 	bl	800d2f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f656:	6825      	ldr	r5, [r4, #0]
 800f658:	b335      	cbz	r5, 800f6a8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f65a:	f7fd fe6d 	bl	800d338 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f65e:	6823      	ldr	r3, [r4, #0]
 800f660:	b1cb      	cbz	r3, 800f696 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f662:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f664:	aa07      	add	r2, sp, #28
 800f666:	a906      	add	r1, sp, #24
 800f668:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f66a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f66e:	f7fd fc5f 	bl	800cf30 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f672:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f676:	2302      	movs	r3, #2
 800f678:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f67c:	9300      	str	r3, [sp, #0]
 800f67e:	9a07      	ldr	r2, [sp, #28]
 800f680:	4917      	ldr	r1, [pc, #92]	; (800f6e0 <xTimerCreateTimerTask+0x94>)
 800f682:	4818      	ldr	r0, [pc, #96]	; (800f6e4 <xTimerCreateTimerTask+0x98>)
 800f684:	4623      	mov	r3, r4
 800f686:	f7ff fa6d 	bl	800eb64 <xTaskCreateStatic>
 800f68a:	4b17      	ldr	r3, [pc, #92]	; (800f6e8 <xTimerCreateTimerTask+0x9c>)
 800f68c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f68e:	b110      	cbz	r0, 800f696 <xTimerCreateTimerTask+0x4a>
}
 800f690:	2001      	movs	r0, #1
 800f692:	b009      	add	sp, #36	; 0x24
 800f694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f69a:	f383 8811 	msr	BASEPRI, r3
 800f69e:	f3bf 8f6f 	isb	sy
 800f6a2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f6a6:	e7fe      	b.n	800f6a6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f6a8:	4f10      	ldr	r7, [pc, #64]	; (800f6ec <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f6aa:	4e11      	ldr	r6, [pc, #68]	; (800f6f0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f6ac:	4638      	mov	r0, r7
 800f6ae:	f7fd fd6f 	bl	800d190 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f6b2:	4630      	mov	r0, r6
 800f6b4:	f7fd fd6c 	bl	800d190 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f6b8:	4a0e      	ldr	r2, [pc, #56]	; (800f6f4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f6ba:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f6bc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f6be:	4a0e      	ldr	r2, [pc, #56]	; (800f6f8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f6c0:	4b0e      	ldr	r3, [pc, #56]	; (800f6fc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f6c2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f6c4:	2110      	movs	r1, #16
 800f6c6:	4a0e      	ldr	r2, [pc, #56]	; (800f700 <xTimerCreateTimerTask+0xb4>)
 800f6c8:	200a      	movs	r0, #10
 800f6ca:	f7fd ffb1 	bl	800d630 <xQueueGenericCreateStatic>
 800f6ce:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f6d0:	2800      	cmp	r0, #0
 800f6d2:	d0c2      	beq.n	800f65a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f6d4:	490b      	ldr	r1, [pc, #44]	; (800f704 <xTimerCreateTimerTask+0xb8>)
 800f6d6:	f7fe ff0d 	bl	800e4f4 <vQueueAddToRegistry>
 800f6da:	e7be      	b.n	800f65a <xTimerCreateTimerTask+0xe>
 800f6dc:	20012fb0 	.word	0x20012fb0
 800f6e0:	0802edcc 	.word	0x0802edcc
 800f6e4:	0800f3c9 	.word	0x0800f3c9
 800f6e8:	20012fb4 	.word	0x20012fb4
 800f6ec:	20012f34 	.word	0x20012f34
 800f6f0:	20012f48 	.word	0x20012f48
 800f6f4:	20012e8c 	.word	0x20012e8c
 800f6f8:	20012e90 	.word	0x20012e90
 800f6fc:	20012f60 	.word	0x20012f60
 800f700:	20012e94 	.word	0x20012e94
 800f704:	0802edc4 	.word	0x0802edc4

0800f708 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f708:	8880      	ldrh	r0, [r0, #4]
 800f70a:	4770      	bx	lr

0800f70c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f70c:	b570      	push	{r4, r5, r6, lr}
 800f70e:	6803      	ldr	r3, [r0, #0]
 800f710:	4605      	mov	r5, r0
 800f712:	460c      	mov	r4, r1
 800f714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f716:	2100      	movs	r1, #0
 800f718:	4798      	blx	r3
 800f71a:	682b      	ldr	r3, [r5, #0]
 800f71c:	4606      	mov	r6, r0
 800f71e:	6a1b      	ldr	r3, [r3, #32]
 800f720:	4628      	mov	r0, r5
 800f722:	4798      	blx	r3
 800f724:	1ba4      	subs	r4, r4, r6
 800f726:	b2a4      	uxth	r4, r4
 800f728:	fbb4 f0f0 	udiv	r0, r4, r0
 800f72c:	bd70      	pop	{r4, r5, r6, pc}

0800f72e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f72e:	2300      	movs	r3, #0
 800f730:	8083      	strh	r3, [r0, #4]
 800f732:	4770      	bx	lr

0800f734 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f734:	b510      	push	{r4, lr}
 800f736:	6803      	ldr	r3, [r0, #0]
 800f738:	8881      	ldrh	r1, [r0, #4]
 800f73a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f73c:	4604      	mov	r4, r0
 800f73e:	4798      	blx	r3
 800f740:	88a3      	ldrh	r3, [r4, #4]
 800f742:	3301      	adds	r3, #1
 800f744:	80a3      	strh	r3, [r4, #4]
 800f746:	bd10      	pop	{r4, pc}

0800f748 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f748:	6803      	ldr	r3, [r0, #0]
 800f74a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f74c:	4718      	bx	r3

0800f74e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f74e:	4770      	bx	lr

0800f750 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f750:	4a02      	ldr	r2, [pc, #8]	; (800f75c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f752:	6002      	str	r2, [r0, #0]
 800f754:	2200      	movs	r2, #0
 800f756:	8082      	strh	r2, [r0, #4]
 800f758:	4770      	bx	lr
 800f75a:	bf00      	nop
 800f75c:	0802eddc 	.word	0x0802eddc

0800f760 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f760:	b510      	push	{r4, lr}
 800f762:	6803      	ldr	r3, [r0, #0]
 800f764:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f768:	4604      	mov	r4, r0
 800f76a:	4798      	blx	r3
 800f76c:	b110      	cbz	r0, 800f774 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f76e:	4620      	mov	r0, r4
 800f770:	f7f1 fc56 	bl	8001020 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f774:	bd10      	pop	{r4, pc}

0800f776 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f776:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f77a:	4770      	bx	lr

0800f77c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f77c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f780:	4770      	bx	lr

0800f782 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f782:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f786:	4770      	bx	lr

0800f788 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f788:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f78c:	4770      	bx	lr

0800f78e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f78e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f790:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f794:	461e      	mov	r6, r3
 800f796:	6803      	ldr	r3, [r0, #0]
 800f798:	460f      	mov	r7, r1
 800f79a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f79e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f7a2:	4604      	mov	r4, r0
 800f7a4:	4615      	mov	r5, r2
 800f7a6:	4798      	blx	r3
 800f7a8:	b93e      	cbnz	r6, 800f7ba <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f7aa:	1bed      	subs	r5, r5, r7
 800f7ac:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f7b0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f7b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f7b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f7ba:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f7be:	e7f7      	b.n	800f7b0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f7c0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f7c0:	b510      	push	{r4, lr}
 800f7c2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f7c6:	600c      	str	r4, [r1, #0]
 800f7c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f7cc:	6011      	str	r1, [r2, #0]
 800f7ce:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f7d2:	801a      	strh	r2, [r3, #0]
 800f7d4:	9b02      	ldr	r3, [sp, #8]
 800f7d6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f7da:	801a      	strh	r2, [r3, #0]
 800f7dc:	bd10      	pop	{r4, pc}

0800f7de <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f7de:	b510      	push	{r4, lr}
 800f7e0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f7e4:	600c      	str	r4, [r1, #0]
 800f7e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f7ea:	6011      	str	r1, [r2, #0]
 800f7ec:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f7f0:	801a      	strh	r2, [r3, #0]
 800f7f2:	bd10      	pop	{r4, pc}

0800f7f4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f7f4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f7f8:	600b      	str	r3, [r1, #0]
 800f7fa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f7fe:	6013      	str	r3, [r2, #0]
 800f800:	4770      	bx	lr

0800f802 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f802:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f806:	4770      	bx	lr

0800f808 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f808:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f80c:	4770      	bx	lr

0800f80e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f80e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f812:	4770      	bx	lr

0800f814 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f814:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f818:	4770      	bx	lr

0800f81a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f81a:	4770      	bx	lr

0800f81c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f81c:	b510      	push	{r4, lr}
 800f81e:	21b4      	movs	r1, #180	; 0xb4
 800f820:	4604      	mov	r4, r0
 800f822:	f01a fbae 	bl	8029f82 <_ZdlPvj>
 800f826:	4620      	mov	r0, r4
 800f828:	bd10      	pop	{r4, pc}

0800f82a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f82a:	b570      	push	{r4, r5, r6, lr}
 800f82c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f830:	428d      	cmp	r5, r1
 800f832:	bfb8      	it	lt
 800f834:	460d      	movlt	r5, r1
 800f836:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f83a:	428d      	cmp	r5, r1
 800f83c:	4604      	mov	r4, r0
 800f83e:	bfa8      	it	ge
 800f840:	460d      	movge	r5, r1
 800f842:	4616      	mov	r6, r2
 800f844:	b99a      	cbnz	r2, 800f86e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f846:	6803      	ldr	r3, [r0, #0]
 800f848:	4629      	mov	r1, r5
 800f84a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f84e:	4798      	blx	r3
 800f850:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f854:	b368      	cbz	r0, 800f8b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f856:	6803      	ldr	r3, [r0, #0]
 800f858:	68db      	ldr	r3, [r3, #12]
 800f85a:	4798      	blx	r3
 800f85c:	b348      	cbz	r0, 800f8b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f85e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f862:	6803      	ldr	r3, [r0, #0]
 800f864:	4621      	mov	r1, r4
 800f866:	689b      	ldr	r3, [r3, #8]
 800f868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f86c:	4718      	bx	r3
 800f86e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f872:	2b00      	cmp	r3, #0
 800f874:	dd08      	ble.n	800f888 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f876:	f006 facf 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 800f87a:	4621      	mov	r1, r4
 800f87c:	3004      	adds	r0, #4
 800f87e:	f006 fb18 	bl	8015eb2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f882:	2300      	movs	r3, #0
 800f884:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f888:	6823      	ldr	r3, [r4, #0]
 800f88a:	4620      	mov	r0, r4
 800f88c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f890:	4798      	blx	r3
 800f892:	2300      	movs	r3, #0
 800f894:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f898:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f89c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f8a0:	f006 faba 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 800f8a4:	4621      	mov	r1, r4
 800f8a6:	3004      	adds	r0, #4
 800f8a8:	f006 fbac 	bl	8016004 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f8ac:	2301      	movs	r3, #1
 800f8ae:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f8b2:	bd70      	pop	{r4, r5, r6, pc}

0800f8b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f8b4:	b510      	push	{r4, lr}
 800f8b6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f8ba:	4299      	cmp	r1, r3
 800f8bc:	bfb8      	it	lt
 800f8be:	4619      	movlt	r1, r3
 800f8c0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f8c4:	4299      	cmp	r1, r3
 800f8c6:	bfa8      	it	ge
 800f8c8:	4619      	movge	r1, r3
 800f8ca:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f8ce:	428b      	cmp	r3, r1
 800f8d0:	4604      	mov	r4, r0
 800f8d2:	d010      	beq.n	800f8f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8d4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f8d8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f8dc:	b158      	cbz	r0, 800f8f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8de:	6803      	ldr	r3, [r0, #0]
 800f8e0:	68db      	ldr	r3, [r3, #12]
 800f8e2:	4798      	blx	r3
 800f8e4:	b138      	cbz	r0, 800f8f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f8e6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f8ea:	6803      	ldr	r3, [r0, #0]
 800f8ec:	4621      	mov	r1, r4
 800f8ee:	689b      	ldr	r3, [r3, #8]
 800f8f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f8f4:	4718      	bx	r3
 800f8f6:	bd10      	pop	{r4, pc}

0800f8f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f8f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8fa:	4604      	mov	r4, r0
 800f8fc:	460d      	mov	r5, r1
 800f8fe:	b1a9      	cbz	r1, 800f92c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f900:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f904:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f908:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f90c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f910:	ab01      	add	r3, sp, #4
 800f912:	1a12      	subs	r2, r2, r0
 800f914:	1b89      	subs	r1, r1, r6
 800f916:	1a38      	subs	r0, r7, r0
 800f918:	f007 fd34 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 800f91c:	4629      	mov	r1, r5
 800f91e:	ab01      	add	r3, sp, #4
 800f920:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f924:	4430      	add	r0, r6
 800f926:	f007 fd2d 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 800f92a:	b285      	uxth	r5, r0
 800f92c:	4628      	mov	r0, r5
 800f92e:	b003      	add	sp, #12
 800f930:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f932:	b570      	push	{r4, r5, r6, lr}
 800f934:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f938:	4604      	mov	r4, r0
 800f93a:	2b00      	cmp	r3, #0
 800f93c:	d035      	beq.n	800f9aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f93e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f942:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f946:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f94a:	3001      	adds	r0, #1
 800f94c:	1ad2      	subs	r2, r2, r3
 800f94e:	b212      	sxth	r2, r2
 800f950:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f954:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f958:	2100      	movs	r1, #0
 800f95a:	b280      	uxth	r0, r0
 800f95c:	47a8      	blx	r5
 800f95e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f962:	6823      	ldr	r3, [r4, #0]
 800f964:	4401      	add	r1, r0
 800f966:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f96a:	4620      	mov	r0, r4
 800f96c:	4798      	blx	r3
 800f96e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f972:	429a      	cmp	r2, r3
 800f974:	db19      	blt.n	800f9aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f976:	2500      	movs	r5, #0
 800f978:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f97c:	f006 fa4c 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 800f980:	4621      	mov	r1, r4
 800f982:	3004      	adds	r0, #4
 800f984:	f006 fa95 	bl	8015eb2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f988:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f98c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f990:	b158      	cbz	r0, 800f9aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f992:	6803      	ldr	r3, [r0, #0]
 800f994:	68db      	ldr	r3, [r3, #12]
 800f996:	4798      	blx	r3
 800f998:	b138      	cbz	r0, 800f9aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f99a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f99e:	6803      	ldr	r3, [r0, #0]
 800f9a0:	4621      	mov	r1, r4
 800f9a2:	689b      	ldr	r3, [r3, #8]
 800f9a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9a8:	4718      	bx	r3
 800f9aa:	bd70      	pop	{r4, r5, r6, pc}

0800f9ac <_ZN8touchgfx8DrawableC1Ev>:
 800f9ac:	4a0a      	ldr	r2, [pc, #40]	; (800f9d8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f9ae:	6002      	str	r2, [r0, #0]
 800f9b0:	2200      	movs	r2, #0
 800f9b2:	8082      	strh	r2, [r0, #4]
 800f9b4:	80c2      	strh	r2, [r0, #6]
 800f9b6:	8102      	strh	r2, [r0, #8]
 800f9b8:	8142      	strh	r2, [r0, #10]
 800f9ba:	8182      	strh	r2, [r0, #12]
 800f9bc:	81c2      	strh	r2, [r0, #14]
 800f9be:	8202      	strh	r2, [r0, #16]
 800f9c0:	8242      	strh	r2, [r0, #18]
 800f9c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f9c6:	61c2      	str	r2, [r0, #28]
 800f9c8:	8402      	strh	r2, [r0, #32]
 800f9ca:	8442      	strh	r2, [r0, #34]	; 0x22
 800f9cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f9d0:	2201      	movs	r2, #1
 800f9d2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f9d6:	4770      	bx	lr
 800f9d8:	0802f7e0 	.word	0x0802f7e0

0800f9dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f9dc:	b570      	push	{r4, r5, r6, lr}
 800f9de:	6803      	ldr	r3, [r0, #0]
 800f9e0:	4604      	mov	r4, r0
 800f9e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f9e4:	4615      	mov	r5, r2
 800f9e6:	4798      	blx	r3
 800f9e8:	6823      	ldr	r3, [r4, #0]
 800f9ea:	4629      	mov	r1, r5
 800f9ec:	4620      	mov	r0, r4
 800f9ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f9f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f9f4:	4718      	bx	r3

0800f9f6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f9f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9fa:	4604      	mov	r4, r0
 800f9fc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fa00:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fa04:	460e      	mov	r6, r1
 800fa06:	4615      	mov	r5, r2
 800fa08:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fa0c:	4619      	mov	r1, r3
 800fa0e:	463a      	mov	r2, r7
 800fa10:	3058      	adds	r0, #88	; 0x58
 800fa12:	4698      	mov	r8, r3
 800fa14:	f7ff ffe2 	bl	800f9dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fa18:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fa1c:	4446      	add	r6, r8
 800fa1e:	42b3      	cmp	r3, r6
 800fa20:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fa24:	bfb8      	it	lt
 800fa26:	8126      	strhlt	r6, [r4, #8]
 800fa28:	443d      	add	r5, r7
 800fa2a:	42ab      	cmp	r3, r5
 800fa2c:	bfb8      	it	lt
 800fa2e:	8165      	strhlt	r5, [r4, #10]
 800fa30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa34 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fa34:	b510      	push	{r4, lr}
 800fa36:	4604      	mov	r4, r0
 800fa38:	302c      	adds	r0, #44	; 0x2c
 800fa3a:	f003 fce4 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fa3e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fa42:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fa46:	4620      	mov	r0, r4
 800fa48:	f7ff ffc8 	bl	800f9dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fa4c:	bd10      	pop	{r4, pc}
	...

0800fa50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fa50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fa52:	4604      	mov	r4, r0
 800fa54:	4626      	mov	r6, r4
 800fa56:	2500      	movs	r5, #0
 800fa58:	f7ff ffa8 	bl	800f9ac <_ZN8touchgfx8DrawableC1Ev>
 800fa5c:	4b23      	ldr	r3, [pc, #140]	; (800faec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fa5e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fa60:	f846 3b2c 	str.w	r3, [r6], #44
 800fa64:	2226      	movs	r2, #38	; 0x26
 800fa66:	4629      	mov	r1, r5
 800fa68:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fa6c:	4630      	mov	r0, r6
 800fa6e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fa72:	f01b fa9e 	bl	802afb2 <memset>
 800fa76:	4630      	mov	r0, r6
 800fa78:	f7ff ff98 	bl	800f9ac <_ZN8touchgfx8DrawableC1Ev>
 800fa7c:	a902      	add	r1, sp, #8
 800fa7e:	4b1c      	ldr	r3, [pc, #112]	; (800faf0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fa80:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fa82:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fa86:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fa8a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fa8e:	4630      	mov	r0, r6
 800fa90:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fa94:	f003 fcb7 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fa98:	4638      	mov	r0, r7
 800fa9a:	f7ff ff87 	bl	800f9ac <_ZN8touchgfx8DrawableC1Ev>
 800fa9e:	4b15      	ldr	r3, [pc, #84]	; (800faf4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800faa0:	65a3      	str	r3, [r4, #88]	; 0x58
 800faa2:	2364      	movs	r3, #100	; 0x64
 800faa4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800faa8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800faac:	4b12      	ldr	r3, [pc, #72]	; (800faf8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800faae:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fab2:	4629      	mov	r1, r5
 800fab4:	4630      	mov	r0, r6
 800fab6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800faba:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fabe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fac2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fac6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800faca:	f7f1 fa05 	bl	8000ed8 <_ZN8touchgfx8Drawable4setXEs>
 800face:	4629      	mov	r1, r5
 800fad0:	4630      	mov	r0, r6
 800fad2:	f7f1 fa03 	bl	8000edc <_ZN8touchgfx8Drawable4setYEs>
 800fad6:	4631      	mov	r1, r6
 800fad8:	4620      	mov	r0, r4
 800fada:	f000 ff04 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fade:	4620      	mov	r0, r4
 800fae0:	4639      	mov	r1, r7
 800fae2:	f000 ff00 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fae6:	4620      	mov	r0, r4
 800fae8:	b003      	add	sp, #12
 800faea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800faec:	0802ee10 	.word	0x0802ee10
 800faf0:	0802f69c 	.word	0x0802f69c
 800faf4:	0802f148 	.word	0x0802f148
 800faf8:	08017b5f 	.word	0x08017b5f

0800fafc <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 800fafc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800fb00:	4770      	bx	lr

0800fb02 <_ZNK8touchgfx12DrawableList11getCircularEv>:
 800fb02:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800fb06:	4770      	bx	lr

0800fb08 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 800fb08:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 800fb0c:	4770      	bx	lr

0800fb0e <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 800fb0e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800fb10:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800fb12:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 800fb16:	b200      	sxth	r0, r0
 800fb18:	4770      	bx	lr

0800fb1a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 800fb1a:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 800fb1e:	4770      	bx	lr

0800fb20 <_ZN8touchgfx12DrawableListD1Ev>:
 800fb20:	4770      	bx	lr

0800fb22 <_ZN8touchgfx12DrawableListD0Ev>:
 800fb22:	b510      	push	{r4, lr}
 800fb24:	214c      	movs	r1, #76	; 0x4c
 800fb26:	4604      	mov	r4, r0
 800fb28:	f01a fa2b 	bl	8029f82 <_ZdlPvj>
 800fb2c:	4620      	mov	r0, r4
 800fb2e:	bd10      	pop	{r4, pc}

0800fb30 <_ZN8touchgfx12DrawableListC1Ev>:
 800fb30:	2101      	movs	r1, #1
 800fb32:	2200      	movs	r2, #0
 800fb34:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800fb38:	4910      	ldr	r1, [pc, #64]	; (800fb7c <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 800fb3a:	8082      	strh	r2, [r0, #4]
 800fb3c:	80c2      	strh	r2, [r0, #6]
 800fb3e:	8102      	strh	r2, [r0, #8]
 800fb40:	8142      	strh	r2, [r0, #10]
 800fb42:	8182      	strh	r2, [r0, #12]
 800fb44:	81c2      	strh	r2, [r0, #14]
 800fb46:	8202      	strh	r2, [r0, #16]
 800fb48:	8242      	strh	r2, [r0, #18]
 800fb4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fb4e:	61c2      	str	r2, [r0, #28]
 800fb50:	8402      	strh	r2, [r0, #32]
 800fb52:	8442      	strh	r2, [r0, #34]	; 0x22
 800fb54:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fb58:	6282      	str	r2, [r0, #40]	; 0x28
 800fb5a:	6001      	str	r1, [r0, #0]
 800fb5c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800fb60:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800fb64:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 800fb68:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 800fb6c:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 800fb70:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800fb74:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 800fb78:	4770      	bx	lr
 800fb7a:	bf00      	nop
 800fb7c:	0802eee4 	.word	0x0802eee4

0800fb80 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 800fb80:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 800fb84:	8681      	strh	r1, [r0, #52]	; 0x34
 800fb86:	86c2      	strh	r2, [r0, #54]	; 0x36
 800fb88:	4770      	bx	lr

0800fb8a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 800fb8a:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 800fb8e:	4770      	bx	lr

0800fb90 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 800fb90:	b538      	push	{r3, r4, r5, lr}
 800fb92:	4605      	mov	r5, r0
 800fb94:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fb96:	b308      	cbz	r0, 800fbdc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 800fb98:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800fb9c:	2a00      	cmp	r2, #0
 800fb9e:	dd21      	ble.n	800fbe4 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 800fba0:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800fba4:	b1db      	cbz	r3, 800fbde <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 800fba6:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800fbaa:	1e63      	subs	r3, r4, #1
 800fbac:	1e54      	subs	r4, r2, #1
 800fbae:	441c      	add	r4, r3
 800fbb0:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 800fbb4:	fb94 f4f2 	sdiv	r4, r4, r2
 800fbb8:	3401      	adds	r4, #1
 800fbba:	b224      	sxth	r4, r4
 800fbbc:	b923      	cbnz	r3, 800fbc8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 800fbbe:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 800fbc2:	429c      	cmp	r4, r3
 800fbc4:	bfa8      	it	ge
 800fbc6:	461c      	movge	r4, r3
 800fbc8:	6803      	ldr	r3, [r0, #0]
 800fbca:	68db      	ldr	r3, [r3, #12]
 800fbcc:	4798      	blx	r3
 800fbce:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 800fbd2:	1ac0      	subs	r0, r0, r3
 800fbd4:	42a0      	cmp	r0, r4
 800fbd6:	bfa8      	it	ge
 800fbd8:	4620      	movge	r0, r4
 800fbda:	b200      	sxth	r0, r0
 800fbdc:	bd38      	pop	{r3, r4, r5, pc}
 800fbde:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 800fbe2:	e7e2      	b.n	800fbaa <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 800fbe4:	2000      	movs	r0, #0
 800fbe6:	e7f9      	b.n	800fbdc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

0800fbe8 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 800fbe8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbec:	4604      	mov	r4, r0
 800fbee:	460d      	mov	r5, r1
 800fbf0:	6321      	str	r1, [r4, #48]	; 0x30
 800fbf2:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 800fbf6:	2b00      	cmp	r3, #0
 800fbf8:	f000 80e8 	beq.w	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fbfc:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800fc00:	2b00      	cmp	r3, #0
 800fc02:	f000 80e3 	beq.w	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fc06:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 800fc0a:	2b00      	cmp	r3, #0
 800fc0c:	f000 80de 	beq.w	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fc10:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fc12:	2800      	cmp	r0, #0
 800fc14:	f000 80da 	beq.w	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fc18:	6803      	ldr	r3, [r0, #0]
 800fc1a:	68db      	ldr	r3, [r3, #12]
 800fc1c:	4798      	blx	r3
 800fc1e:	2800      	cmp	r0, #0
 800fc20:	f000 80d4 	beq.w	800fdcc <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800fc24:	2d00      	cmp	r5, #0
 800fc26:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fc2a:	bfc1      	itttt	gt
 800fc2c:	fb95 f2f1 	sdivgt	r2, r5, r1
 800fc30:	3201      	addgt	r2, #1
 800fc32:	4253      	neggt	r3, r2
 800fc34:	fb01 5512 	mlsgt	r5, r1, r2, r5
 800fc38:	f1c1 0200 	rsb	r2, r1, #0
 800fc3c:	bfcc      	ite	gt
 800fc3e:	b21b      	sxthgt	r3, r3
 800fc40:	2300      	movle	r3, #0
 800fc42:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 800fc46:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 800fc4a:	42aa      	cmp	r2, r5
 800fc4c:	bfa1      	itttt	ge
 800fc4e:	fb95 f2f1 	sdivge	r2, r5, r1
 800fc52:	1a9b      	subge	r3, r3, r2
 800fc54:	b21b      	sxthge	r3, r3
 800fc56:	fb01 5512 	mlsge	r5, r1, r2, r5
 800fc5a:	b14f      	cbz	r7, 800fc70 <_ZN8touchgfx12DrawableList9setOffsetEl+0x88>
 800fc5c:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fc60:	fb93 f1f2 	sdiv	r1, r3, r2
 800fc64:	fb02 3311 	mls	r3, r2, r1, r3
 800fc68:	2b00      	cmp	r3, #0
 800fc6a:	db70      	blt.n	800fd4e <_ZN8touchgfx12DrawableList9setOffsetEl+0x166>
 800fc6c:	b21b      	sxth	r3, r3
 800fc6e:	e004      	b.n	800fc7a <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 800fc70:	2b00      	cmp	r3, #0
 800fc72:	da64      	bge.n	800fd3e <_ZN8touchgfx12DrawableList9setOffsetEl+0x156>
 800fc74:	fb01 5513 	mls	r5, r1, r3, r5
 800fc78:	463b      	mov	r3, r7
 800fc7a:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 800fc7e:	b1be      	cbz	r6, 800fcb0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fc80:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 800fc84:	459e      	cmp	lr, r3
 800fc86:	d068      	beq.n	800fd5a <_ZN8touchgfx12DrawableList9setOffsetEl+0x172>
 800fc88:	2601      	movs	r6, #1
 800fc8a:	4286      	cmp	r6, r0
 800fc8c:	da67      	bge.n	800fd5e <_ZN8touchgfx12DrawableList9setOffsetEl+0x176>
 800fc8e:	eb0e 0106 	add.w	r1, lr, r6
 800fc92:	199a      	adds	r2, r3, r6
 800fc94:	b14f      	cbz	r7, 800fcaa <_ZN8touchgfx12DrawableList9setOffsetEl+0xc2>
 800fc96:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 800fc9a:	fb91 f8fc 	sdiv	r8, r1, ip
 800fc9e:	fb0c 1118 	mls	r1, ip, r8, r1
 800fca2:	fb92 f8fc 	sdiv	r8, r2, ip
 800fca6:	fb0c 2218 	mls	r2, ip, r8, r2
 800fcaa:	428b      	cmp	r3, r1
 800fcac:	d151      	bne.n	800fd52 <_ZN8touchgfx12DrawableList9setOffsetEl+0x16a>
 800fcae:	4276      	negs	r6, r6
 800fcb0:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800fcb4:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800fcb6:	1b92      	subs	r2, r2, r6
 800fcb8:	4402      	add	r2, r0
 800fcba:	2700      	movs	r7, #0
 800fcbc:	fb92 f1f0 	sdiv	r1, r2, r0
 800fcc0:	fb00 2011 	mls	r0, r0, r1, r2
 800fcc4:	87e0      	strh	r0, [r4, #62]	; 0x3e
 800fcc6:	b2ad      	uxth	r5, r5
 800fcc8:	46ba      	mov	sl, r7
 800fcca:	f04f 0b01 	mov.w	fp, #1
 800fcce:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800fcd2:	42ba      	cmp	r2, r7
 800fcd4:	dd77      	ble.n	800fdc6 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1de>
 800fcd6:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800fcda:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800fcdc:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800fce0:	443b      	add	r3, r7
 800fce2:	fb93 f8f2 	sdiv	r8, r3, r2
 800fce6:	fb02 3818 	mls	r8, r2, r8, r3
 800fcea:	fa1f f888 	uxth.w	r8, r8
 800fcee:	6803      	ldr	r3, [r0, #0]
 800fcf0:	4441      	add	r1, r8
 800fcf2:	689b      	ldr	r3, [r3, #8]
 800fcf4:	b209      	sxth	r1, r1
 800fcf6:	4798      	blx	r3
 800fcf8:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800fcfc:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 800fd00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fd02:	6802      	ldr	r2, [r0, #0]
 800fd04:	4681      	mov	r9, r0
 800fd06:	fa1f fe87 	uxth.w	lr, r7
 800fd0a:	b351      	cbz	r1, 800fd62 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17a>
 800fd0c:	18e9      	adds	r1, r5, r3
 800fd0e:	fb1c 110e 	smlabb	r1, ip, lr, r1
 800fd12:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800fd14:	b209      	sxth	r1, r1
 800fd16:	2200      	movs	r2, #0
 800fd18:	4798      	blx	r3
 800fd1a:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800fd1e:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 800fd22:	443b      	add	r3, r7
 800fd24:	b322      	cbz	r2, 800fd70 <_ZN8touchgfx12DrawableList9setOffsetEl+0x188>
 800fd26:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fd2a:	fb93 f1f2 	sdiv	r1, r3, r2
 800fd2e:	fb02 3311 	mls	r3, r2, r1, r3
 800fd32:	2b00      	cmp	r3, #0
 800fd34:	da22      	bge.n	800fd7c <_ZN8touchgfx12DrawableList9setOffsetEl+0x194>
 800fd36:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 800fd3a:	3701      	adds	r7, #1
 800fd3c:	e7c7      	b.n	800fcce <_ZN8touchgfx12DrawableList9setOffsetEl+0xe6>
 800fd3e:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fd42:	18c6      	adds	r6, r0, r3
 800fd44:	4296      	cmp	r6, r2
 800fd46:	dd98      	ble.n	800fc7a <_ZN8touchgfx12DrawableList9setOffsetEl+0x92>
 800fd48:	1b92      	subs	r2, r2, r6
 800fd4a:	fb01 5502 	mla	r5, r1, r2, r5
 800fd4e:	4413      	add	r3, r2
 800fd50:	e78c      	b.n	800fc6c <_ZN8touchgfx12DrawableList9setOffsetEl+0x84>
 800fd52:	4596      	cmp	lr, r2
 800fd54:	d0ac      	beq.n	800fcb0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fd56:	3601      	adds	r6, #1
 800fd58:	e797      	b.n	800fc8a <_ZN8touchgfx12DrawableList9setOffsetEl+0xa2>
 800fd5a:	2600      	movs	r6, #0
 800fd5c:	e7a8      	b.n	800fcb0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fd5e:	4606      	mov	r6, r0
 800fd60:	e7a6      	b.n	800fcb0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800fd62:	442b      	add	r3, r5
 800fd64:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 800fd68:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800fd6a:	fa0f f28c 	sxth.w	r2, ip
 800fd6e:	e7d3      	b.n	800fd18 <_ZN8touchgfx12DrawableList9setOffsetEl+0x130>
 800fd70:	2b00      	cmp	r3, #0
 800fd72:	dbe0      	blt.n	800fd36 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 800fd74:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800fd78:	4293      	cmp	r3, r2
 800fd7a:	dadc      	bge.n	800fd36 <_ZN8touchgfx12DrawableList9setOffsetEl+0x14e>
 800fd7c:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 800fd80:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800fd84:	b132      	cbz	r2, 800fd94 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 800fd86:	42be      	cmp	r6, r7
 800fd88:	dc04      	bgt.n	800fd94 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ac>
 800fd8a:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800fd8e:	4432      	add	r2, r6
 800fd90:	4297      	cmp	r7, r2
 800fd92:	dbd2      	blt.n	800fd3a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800fd94:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800fd96:	9301      	str	r3, [sp, #4]
 800fd98:	6802      	ldr	r2, [r0, #0]
 800fd9a:	68d2      	ldr	r2, [r2, #12]
 800fd9c:	4790      	blx	r2
 800fd9e:	2800      	cmp	r0, #0
 800fda0:	d0cb      	beq.n	800fd3a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800fda2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800fda4:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800fda8:	6801      	ldr	r1, [r0, #0]
 800fdaa:	9b01      	ldr	r3, [sp, #4]
 800fdac:	4442      	add	r2, r8
 800fdae:	b21b      	sxth	r3, r3
 800fdb0:	f8d1 8008 	ldr.w	r8, [r1, #8]
 800fdb4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800fdb6:	b212      	sxth	r2, r2
 800fdb8:	47c0      	blx	r8
 800fdba:	f8d9 3000 	ldr.w	r3, [r9]
 800fdbe:	4648      	mov	r0, r9
 800fdc0:	699b      	ldr	r3, [r3, #24]
 800fdc2:	4798      	blx	r3
 800fdc4:	e7b9      	b.n	800fd3a <_ZN8touchgfx12DrawableList9setOffsetEl+0x152>
 800fdc6:	2301      	movs	r3, #1
 800fdc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800fdcc:	b003      	add	sp, #12
 800fdce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fdd2 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 800fdd2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fdd4:	4770      	bx	lr

0800fdd6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 800fdd6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdd8:	1c54      	adds	r4, r2, #1
 800fdda:	db2f      	blt.n	800fe3c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800fddc:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 800fde0:	4294      	cmp	r4, r2
 800fde2:	dd2b      	ble.n	800fe3c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800fde4:	b354      	cbz	r4, 800fe3c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800fde6:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 800fdea:	b33e      	cbz	r6, 800fe3c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800fdec:	1c53      	adds	r3, r2, #1
 800fdee:	d008      	beq.n	800fe02 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 800fdf0:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 800fdf4:	1ad2      	subs	r2, r2, r3
 800fdf6:	4422      	add	r2, r4
 800fdf8:	fb92 f3f4 	sdiv	r3, r2, r4
 800fdfc:	fb04 2213 	mls	r2, r4, r3, r2
 800fe00:	b212      	sxth	r2, r2
 800fe02:	3201      	adds	r2, #1
 800fe04:	b212      	sxth	r2, r2
 800fe06:	4294      	cmp	r4, r2
 800fe08:	dd18      	ble.n	800fe3c <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800fe0a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800fe0c:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 800fe10:	b295      	uxth	r5, r2
 800fe12:	442b      	add	r3, r5
 800fe14:	b21b      	sxth	r3, r3
 800fe16:	b127      	cbz	r7, 800fe22 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 800fe18:	fb93 f7f6 	sdiv	r7, r3, r6
 800fe1c:	fb06 3317 	mls	r3, r6, r7, r3
 800fe20:	b21b      	sxth	r3, r3
 800fe22:	428b      	cmp	r3, r1
 800fe24:	d108      	bne.n	800fe38 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 800fe26:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 800fe2a:	4402      	add	r2, r0
 800fe2c:	fb92 f0f4 	sdiv	r0, r2, r4
 800fe30:	fb04 2010 	mls	r0, r4, r0, r2
 800fe34:	b200      	sxth	r0, r0
 800fe36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe38:	1c6a      	adds	r2, r5, #1
 800fe3a:	e7e3      	b.n	800fe04 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 800fe3c:	f04f 30ff 	mov.w	r0, #4294967295
 800fe40:	e7f9      	b.n	800fe36 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

0800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 800fe42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe46:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800fe48:	4604      	mov	r4, r0
 800fe4a:	b913      	cbnz	r3, 800fe52 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 800fe4c:	8743      	strh	r3, [r0, #58]	; 0x3a
 800fe4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe52:	f7ff fe9d 	bl	800fb90 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 800fe56:	8760      	strh	r0, [r4, #58]	; 0x3a
 800fe58:	4620      	mov	r0, r4
 800fe5a:	f000 fd51 	bl	8010900 <_ZN8touchgfx9Container9removeAllEv>
 800fe5e:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800fe62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fe64:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800fe66:	2a00      	cmp	r2, #0
 800fe68:	d032      	beq.n	800fed0 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8e>
 800fe6a:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 800fe6e:	fa0f f886 	sxth.w	r8, r6
 800fe72:	f9b4 600a 	ldrsh.w	r6, [r4, #10]
 800fe76:	2700      	movs	r7, #0
 800fe78:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 800fe7c:	42bb      	cmp	r3, r7
 800fe7e:	dd2d      	ble.n	800fedc <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x9a>
 800fe80:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800fe82:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800fe86:	6803      	ldr	r3, [r0, #0]
 800fe88:	4439      	add	r1, r7
 800fe8a:	689b      	ldr	r3, [r3, #8]
 800fe8c:	b209      	sxth	r1, r1
 800fe8e:	4798      	blx	r3
 800fe90:	6803      	ldr	r3, [r0, #0]
 800fe92:	4605      	mov	r5, r0
 800fe94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fe96:	2100      	movs	r1, #0
 800fe98:	4798      	blx	r3
 800fe9a:	682b      	ldr	r3, [r5, #0]
 800fe9c:	2100      	movs	r1, #0
 800fe9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fea0:	4628      	mov	r0, r5
 800fea2:	4798      	blx	r3
 800fea4:	682b      	ldr	r3, [r5, #0]
 800fea6:	4641      	mov	r1, r8
 800fea8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800feaa:	4628      	mov	r0, r5
 800feac:	4798      	blx	r3
 800feae:	682b      	ldr	r3, [r5, #0]
 800feb0:	4628      	mov	r0, r5
 800feb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800feb4:	4631      	mov	r1, r6
 800feb6:	4798      	blx	r3
 800feb8:	6968      	ldr	r0, [r5, #20]
 800feba:	b118      	cbz	r0, 800fec4 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x82>
 800febc:	6803      	ldr	r3, [r0, #0]
 800febe:	4629      	mov	r1, r5
 800fec0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800fec2:	4798      	blx	r3
 800fec4:	4629      	mov	r1, r5
 800fec6:	4620      	mov	r0, r4
 800fec8:	f000 fd0d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fecc:	3701      	adds	r7, #1
 800fece:	e7d3      	b.n	800fe78 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x36>
 800fed0:	eba6 0643 	sub.w	r6, r6, r3, lsl #1
 800fed4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800fed8:	b236      	sxth	r6, r6
 800feda:	e7cc      	b.n	800fe76 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x34>
 800fedc:	2300      	movs	r3, #0
 800fede:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800fee2:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fee4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800fee6:	4620      	mov	r0, r4
 800fee8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800feec:	f7ff be7c 	b.w	800fbe8 <_ZN8touchgfx12DrawableList9setOffsetEl>

0800fef0 <_ZN8touchgfx12DrawableList8setWidthEs>:
 800fef0:	8101      	strh	r1, [r0, #8]
 800fef2:	f7ff bfa6 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800fef6 <_ZN8touchgfx12DrawableList9setHeightEs>:
 800fef6:	8141      	strh	r1, [r0, #10]
 800fef8:	f7ff bfa3 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800fefc <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 800fefc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ff00:	b121      	cbz	r1, 800ff0c <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 800ff02:	b92b      	cbnz	r3, 800ff10 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 800ff04:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800ff08:	f7ff bf9b 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800ff0c:	2b00      	cmp	r3, #0
 800ff0e:	d1f9      	bne.n	800ff04 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 800ff10:	4770      	bx	lr

0800ff12 <_ZN8touchgfx12DrawableList11setCircularEb>:
 800ff12:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800ff16:	b121      	cbz	r1, 800ff22 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 800ff18:	b92b      	cbnz	r3, 800ff26 <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 800ff1a:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 800ff1e:	f7ff bf90 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800ff22:	2b00      	cmp	r3, #0
 800ff24:	d1f9      	bne.n	800ff1a <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 800ff26:	4770      	bx	lr

0800ff28 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 800ff28:	b410      	push	{r4}
 800ff2a:	6441      	str	r1, [r0, #68]	; 0x44
 800ff2c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800ff30:	6483      	str	r3, [r0, #72]	; 0x48
 800ff32:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ff36:	f7ff bf84 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800ff3a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 800ff3a:	8701      	strh	r1, [r0, #56]	; 0x38
 800ff3c:	f7ff bf81 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800ff40 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 800ff40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ff42:	4604      	mov	r4, r0
 800ff44:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ff46:	460e      	mov	r6, r1
 800ff48:	b1c0      	cbz	r0, 800ff7c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800ff4a:	6803      	ldr	r3, [r0, #0]
 800ff4c:	68db      	ldr	r3, [r3, #12]
 800ff4e:	4798      	blx	r3
 800ff50:	b1a0      	cbz	r0, 800ff7c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800ff52:	f04f 35ff 	mov.w	r5, #4294967295
 800ff56:	462a      	mov	r2, r5
 800ff58:	4631      	mov	r1, r6
 800ff5a:	4620      	mov	r0, r4
 800ff5c:	f7ff ff3b 	bl	800fdd6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 800ff60:	1c43      	adds	r3, r0, #1
 800ff62:	4605      	mov	r5, r0
 800ff64:	d00a      	beq.n	800ff7c <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800ff66:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800ff68:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800ff6c:	6803      	ldr	r3, [r0, #0]
 800ff6e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800ff70:	689f      	ldr	r7, [r3, #8]
 800ff72:	442a      	add	r2, r5
 800ff74:	4633      	mov	r3, r6
 800ff76:	b212      	sxth	r2, r2
 800ff78:	47b8      	blx	r7
 800ff7a:	e7ec      	b.n	800ff56 <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 800ff7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ff7e <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 800ff7e:	b570      	push	{r4, r5, r6, lr}
 800ff80:	790b      	ldrb	r3, [r1, #4]
 800ff82:	4604      	mov	r4, r0
 800ff84:	2b00      	cmp	r3, #0
 800ff86:	d158      	bne.n	801003a <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 800ff88:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ff8c:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 800ff90:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 800ff94:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 800ff98:	6803      	ldr	r3, [r0, #0]
 800ff9a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ff9e:	4798      	blx	r3
 800ffa0:	6823      	ldr	r3, [r4, #0]
 800ffa2:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 800ffa6:	4601      	mov	r1, r0
 800ffa8:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800ffac:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ffb0:	4620      	mov	r0, r4
 800ffb2:	4798      	blx	r3
 800ffb4:	4601      	mov	r1, r0
 800ffb6:	4620      	mov	r0, r4
 800ffb8:	47a8      	blx	r5
 800ffba:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 800ffbe:	2800      	cmp	r0, #0
 800ffc0:	f000 809f 	beq.w	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800ffc4:	6803      	ldr	r3, [r0, #0]
 800ffc6:	68db      	ldr	r3, [r3, #12]
 800ffc8:	4798      	blx	r3
 800ffca:	2800      	cmp	r0, #0
 800ffcc:	f000 8099 	beq.w	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800ffd0:	6823      	ldr	r3, [r4, #0]
 800ffd2:	4620      	mov	r0, r4
 800ffd4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ffd8:	4798      	blx	r3
 800ffda:	b358      	cbz	r0, 8010034 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 800ffdc:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 800ffe0:	6823      	ldr	r3, [r4, #0]
 800ffe2:	4620      	mov	r0, r4
 800ffe4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ffe8:	4798      	blx	r3
 800ffea:	6823      	ldr	r3, [r4, #0]
 800ffec:	1a2d      	subs	r5, r5, r0
 800ffee:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800fff2:	4620      	mov	r0, r4
 800fff4:	4798      	blx	r3
 800fff6:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 800fffa:	6823      	ldr	r3, [r4, #0]
 800fffc:	fb16 f600 	smulbb	r6, r6, r0
 8010000:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010004:	4620      	mov	r0, r4
 8010006:	4798      	blx	r3
 8010008:	b120      	cbz	r0, 8010014 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 801000a:	4435      	add	r5, r6
 801000c:	fb95 f1f6 	sdiv	r1, r5, r6
 8010010:	fb06 5511 	mls	r5, r6, r1, r5
 8010014:	2d00      	cmp	r5, #0
 8010016:	db74      	blt.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010018:	42b5      	cmp	r5, r6
 801001a:	da72      	bge.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801001c:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8010020:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8010024:	fb95 f1f1 	sdiv	r1, r5, r1
 8010028:	6803      	ldr	r3, [r0, #0]
 801002a:	b209      	sxth	r1, r1
 801002c:	689b      	ldr	r3, [r3, #8]
 801002e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010032:	4718      	bx	r3
 8010034:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8010038:	e7d2      	b.n	800ffe0 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 801003a:	2b01      	cmp	r3, #1
 801003c:	d161      	bne.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801003e:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010042:	2b00      	cmp	r3, #0
 8010044:	d14a      	bne.n	80100dc <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 8010046:	6803      	ldr	r3, [r0, #0]
 8010048:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801004c:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 8010050:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010054:	4798      	blx	r3
 8010056:	4601      	mov	r1, r0
 8010058:	4620      	mov	r0, r4
 801005a:	47b0      	blx	r6
 801005c:	4601      	mov	r1, r0
 801005e:	4620      	mov	r0, r4
 8010060:	47a8      	blx	r5
 8010062:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8010066:	2800      	cmp	r0, #0
 8010068:	d04b      	beq.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 801006a:	6803      	ldr	r3, [r0, #0]
 801006c:	68db      	ldr	r3, [r3, #12]
 801006e:	4798      	blx	r3
 8010070:	2800      	cmp	r0, #0
 8010072:	d046      	beq.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8010074:	6823      	ldr	r3, [r4, #0]
 8010076:	4620      	mov	r0, r4
 8010078:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801007c:	4798      	blx	r3
 801007e:	b330      	cbz	r0, 80100ce <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 8010080:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8010084:	6823      	ldr	r3, [r4, #0]
 8010086:	4620      	mov	r0, r4
 8010088:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801008c:	4798      	blx	r3
 801008e:	6823      	ldr	r3, [r4, #0]
 8010090:	1a2d      	subs	r5, r5, r0
 8010092:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010096:	4620      	mov	r0, r4
 8010098:	4798      	blx	r3
 801009a:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 801009e:	6823      	ldr	r3, [r4, #0]
 80100a0:	fb16 f600 	smulbb	r6, r6, r0
 80100a4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80100a8:	4620      	mov	r0, r4
 80100aa:	4798      	blx	r3
 80100ac:	b190      	cbz	r0, 80100d4 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 80100ae:	19a9      	adds	r1, r5, r6
 80100b0:	fb91 f3f6 	sdiv	r3, r1, r6
 80100b4:	fb06 1113 	mls	r1, r6, r3, r1
 80100b8:	2900      	cmp	r1, #0
 80100ba:	db22      	blt.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80100bc:	42b1      	cmp	r1, r6
 80100be:	da20      	bge.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80100c0:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 80100c4:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 80100c8:	fb91 f1f3 	sdiv	r1, r1, r3
 80100cc:	e7ac      	b.n	8010028 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 80100ce:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 80100d2:	e7d7      	b.n	8010084 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 80100d4:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 80100d8:	1a69      	subs	r1, r5, r1
 80100da:	e7ed      	b.n	80100b8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 80100dc:	2b02      	cmp	r3, #2
 80100de:	d110      	bne.n	8010102 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80100e0:	6803      	ldr	r3, [r0, #0]
 80100e2:	e9d3 6532 	ldrd	r6, r5, [r3, #200]	; 0xc8
 80100e6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80100ea:	4798      	blx	r3
 80100ec:	4601      	mov	r1, r0
 80100ee:	4620      	mov	r0, r4
 80100f0:	47b0      	blx	r6
 80100f2:	462b      	mov	r3, r5
 80100f4:	4601      	mov	r1, r0
 80100f6:	f04f 32ff 	mov.w	r2, #4294967295
 80100fa:	4620      	mov	r0, r4
 80100fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010100:	4718      	bx	r3
 8010102:	bd70      	pop	{r4, r5, r6, pc}

08010104 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 8010104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010108:	6803      	ldr	r3, [r0, #0]
 801010a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801010e:	4605      	mov	r5, r0
 8010110:	460e      	mov	r6, r1
 8010112:	4617      	mov	r7, r2
 8010114:	4798      	blx	r3
 8010116:	4604      	mov	r4, r0
 8010118:	b9d8      	cbnz	r0, 8010152 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 801011a:	682b      	ldr	r3, [r5, #0]
 801011c:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 8010120:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010124:	42be      	cmp	r6, r7
 8010126:	4628      	mov	r0, r5
 8010128:	bfa8      	it	ge
 801012a:	463e      	movge	r6, r7
 801012c:	4798      	blx	r3
 801012e:	4580      	cmp	r8, r0
 8010130:	da07      	bge.n	8010142 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 8010132:	682b      	ldr	r3, [r5, #0]
 8010134:	4628      	mov	r0, r5
 8010136:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 801013a:	4798      	blx	r3
 801013c:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 8010140:	1b04      	subs	r4, r0, r4
 8010142:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 8010146:	434c      	muls	r4, r1
 8010148:	4264      	negs	r4, r4
 801014a:	1be1      	subs	r1, r4, r7
 801014c:	428e      	cmp	r6, r1
 801014e:	bfb8      	it	lt
 8010150:	460e      	movlt	r6, r1
 8010152:	4630      	mov	r0, r6
 8010154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010158 <_ZN8touchgfx10ScrollListD1Ev>:
 8010158:	4770      	bx	lr

0801015a <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 801015a:	b570      	push	{r4, r5, r6, lr}
 801015c:	460d      	mov	r5, r1
 801015e:	4604      	mov	r4, r0
 8010160:	4616      	mov	r6, r2
 8010162:	f000 fa8d 	bl	8010680 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8010166:	682b      	ldr	r3, [r5, #0]
 8010168:	4628      	mov	r0, r5
 801016a:	68db      	ldr	r3, [r3, #12]
 801016c:	4798      	blx	r3
 801016e:	4633      	mov	r3, r6
 8010170:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 8010174:	4629      	mov	r1, r5
 8010176:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801017a:	2200      	movs	r2, #0
 801017c:	f7ff fed4 	bl	800ff28 <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 8010180:	6823      	ldr	r3, [r4, #0]
 8010182:	4620      	mov	r0, r4
 8010184:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010188:	2100      	movs	r1, #0
 801018a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801018e:	4718      	bx	r3

08010190 <_ZN8touchgfx10ScrollBase10initializeEv>:
 8010190:	302c      	adds	r0, #44	; 0x2c
 8010192:	f7ff be56 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08010196 <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 8010196:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801019a:	6803      	ldr	r3, [r0, #0]
 801019c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80101a0:	4688      	mov	r8, r1
 80101a2:	4604      	mov	r4, r0
 80101a4:	4798      	blx	r3
 80101a6:	4601      	mov	r1, r0
 80101a8:	4620      	mov	r0, r4
 80101aa:	f000 fab9 	bl	8010720 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 80101ae:	f1b8 0f00 	cmp.w	r8, #0
 80101b2:	4605      	mov	r5, r0
 80101b4:	db6d      	blt.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 80101b6:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 80101ba:	4648      	mov	r0, r9
 80101bc:	f7ff fce5 	bl	800fb8a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 80101c0:	4540      	cmp	r0, r8
 80101c2:	dd66      	ble.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 80101c4:	f9b4 607c 	ldrsh.w	r6, [r4, #124]	; 0x7c
 80101c8:	2e00      	cmp	r6, #0
 80101ca:	d062      	beq.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 80101cc:	6823      	ldr	r3, [r4, #0]
 80101ce:	f1c8 0100 	rsb	r1, r8, #0
 80101d2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80101d6:	4620      	mov	r0, r4
 80101d8:	434e      	muls	r6, r1
 80101da:	4798      	blx	r3
 80101dc:	2800      	cmp	r0, #0
 80101de:	d05b      	beq.n	8010298 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 80101e0:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 80101e4:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 80101e8:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 80101ec:	4419      	add	r1, r3
 80101ee:	1a7f      	subs	r7, r7, r1
 80101f0:	4648      	mov	r0, r9
 80101f2:	b23f      	sxth	r7, r7
 80101f4:	f7ff fc85 	bl	800fb02 <_ZNK8touchgfx12DrawableList11getCircularEv>
 80101f8:	2800      	cmp	r0, #0
 80101fa:	d050      	beq.n	801029e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x108>
 80101fc:	46aa      	mov	sl, r5
 80101fe:	4651      	mov	r1, sl
 8010200:	4620      	mov	r0, r4
 8010202:	f000 fa8d 	bl	8010720 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010206:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 801020a:	4240      	negs	r0, r0
 801020c:	fb90 f0f3 	sdiv	r0, r0, r3
 8010210:	b200      	sxth	r0, r0
 8010212:	4580      	cmp	r8, r0
 8010214:	d03d      	beq.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8010216:	ebaa 0a03 	sub.w	sl, sl, r3
 801021a:	1afb      	subs	r3, r7, r3
 801021c:	1aeb      	subs	r3, r5, r3
 801021e:	4553      	cmp	r3, sl
 8010220:	dded      	ble.n	80101fe <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 8010222:	4648      	mov	r0, r9
 8010224:	f7ff fcb1 	bl	800fb8a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8010228:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 801022c:	fb00 fa01 	mul.w	sl, r0, r1
 8010230:	1a79      	subs	r1, r7, r1
 8010232:	1a69      	subs	r1, r5, r1
 8010234:	4620      	mov	r0, r4
 8010236:	f000 fa73 	bl	8010720 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 801023a:	eb06 090a 	add.w	r9, r6, sl
 801023e:	eba6 0805 	sub.w	r8, r6, r5
 8010242:	eba9 0905 	sub.w	r9, r9, r5
 8010246:	1b83      	subs	r3, r0, r6
 8010248:	ea88 72e8 	eor.w	r2, r8, r8, asr #31
 801024c:	eba6 060a 	sub.w	r6, r6, sl
 8010250:	ea89 71e9 	eor.w	r1, r9, r9, asr #31
 8010254:	1b80      	subs	r0, r0, r6
 8010256:	eba1 71e9 	sub.w	r1, r1, r9, asr #31
 801025a:	eba2 72e8 	sub.w	r2, r2, r8, asr #31
 801025e:	4291      	cmp	r1, r2
 8010260:	bfb8      	it	lt
 8010262:	46c8      	movlt	r8, r9
 8010264:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8010268:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 801026c:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 8010270:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8010274:	4291      	cmp	r1, r2
 8010276:	bfb8      	it	lt
 8010278:	4603      	movlt	r3, r0
 801027a:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 801027e:	ea88 71e8 	eor.w	r1, r8, r8, asr #31
 8010282:	eba1 71e8 	sub.w	r1, r1, r8, asr #31
 8010286:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 801028a:	4291      	cmp	r1, r2
 801028c:	bfcc      	ite	gt
 801028e:	1aed      	subgt	r5, r5, r3
 8010290:	4445      	addle	r5, r8
 8010292:	4628      	mov	r0, r5
 8010294:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010298:	f9b4 700a 	ldrsh.w	r7, [r4, #10]
 801029c:	e7a2      	b.n	80101e4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4e>
 801029e:	42b5      	cmp	r5, r6
 80102a0:	db13      	blt.n	80102ca <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x134>
 80102a2:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 80102a6:	fb97 f3f2 	sdiv	r3, r7, r2
 80102aa:	b21b      	sxth	r3, r3
 80102ac:	2b00      	cmp	r3, #0
 80102ae:	dd05      	ble.n	80102bc <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 80102b0:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 80102b4:	b131      	cbz	r1, 80102c4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x12e>
 80102b6:	3b01      	subs	r3, #1
 80102b8:	fb02 6603 	mla	r6, r2, r3, r6
 80102bc:	42b5      	cmp	r5, r6
 80102be:	bfa8      	it	ge
 80102c0:	4635      	movge	r5, r6
 80102c2:	e7e6      	b.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 80102c4:	443e      	add	r6, r7
 80102c6:	1ab6      	subs	r6, r6, r2
 80102c8:	e7f8      	b.n	80102bc <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x126>
 80102ca:	4635      	mov	r5, r6
 80102cc:	e7e1      	b.n	8010292 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>

080102ce <_ZN8touchgfx10ScrollListD0Ev>:
 80102ce:	b510      	push	{r4, lr}
 80102d0:	21c4      	movs	r1, #196	; 0xc4
 80102d2:	4604      	mov	r4, r0
 80102d4:	f019 fe55 	bl	8029f82 <_ZdlPvj>
 80102d8:	4620      	mov	r0, r4
 80102da:	bd10      	pop	{r4, pc}

080102dc <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 80102dc:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 80102e0:	b10a      	cbz	r2, 80102e6 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 80102e2:	f000 b919 	b.w	8010518 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 80102e6:	6803      	ldr	r3, [r0, #0]
 80102e8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80102ec:	4718      	bx	r3
	...

080102f0 <_ZN8touchgfx10ScrollListC1Ev>:
 80102f0:	b510      	push	{r4, lr}
 80102f2:	4604      	mov	r4, r0
 80102f4:	f000 fa84 	bl	8010800 <_ZN8touchgfx10ScrollBaseC1Ev>
 80102f8:	4b05      	ldr	r3, [pc, #20]	; (8010310 <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 80102fa:	6023      	str	r3, [r4, #0]
 80102fc:	2300      	movs	r3, #0
 80102fe:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8010302:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 8010306:	2301      	movs	r3, #1
 8010308:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801030c:	4620      	mov	r0, r4
 801030e:	bd10      	pop	{r4, pc}
 8010310:	0802ef94 	.word	0x0802ef94

08010314 <_ZN8touchgfx10ScrollList13setWindowSizeEs>:
 8010314:	b570      	push	{r4, r5, r6, lr}
 8010316:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 801031a:	2b00      	cmp	r3, #0
 801031c:	4604      	mov	r4, r0
 801031e:	460d      	mov	r5, r1
 8010320:	dd19      	ble.n	8010356 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x42>
 8010322:	6803      	ldr	r3, [r0, #0]
 8010324:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8010328:	4798      	blx	r3
 801032a:	b370      	cbz	r0, 801038a <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x76>
 801032c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010330:	f8b4 207a 	ldrh.w	r2, [r4, #122]	; 0x7a
 8010334:	f8b4 00ba 	ldrh.w	r0, [r4, #186]	; 0xba
 8010338:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 801033c:	4402      	add	r2, r0
 801033e:	1a9b      	subs	r3, r3, r2
 8010340:	2202      	movs	r2, #2
 8010342:	fb91 f2f2 	sdiv	r2, r1, r2
 8010346:	fa02 f383 	sxtah	r3, r2, r3
 801034a:	fb93 f3f1 	sdiv	r3, r3, r1
 801034e:	b21b      	sxth	r3, r3
 8010350:	429d      	cmp	r5, r3
 8010352:	bfa8      	it	ge
 8010354:	461d      	movge	r5, r3
 8010356:	2d01      	cmp	r5, #1
 8010358:	6823      	ldr	r3, [r4, #0]
 801035a:	bfb8      	it	lt
 801035c:	2501      	movlt	r5, #1
 801035e:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8010362:	f8d3 50cc 	ldr.w	r5, [r3, #204]	; 0xcc
 8010366:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 801036a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801036e:	4620      	mov	r0, r4
 8010370:	4798      	blx	r3
 8010372:	2200      	movs	r2, #0
 8010374:	4601      	mov	r1, r0
 8010376:	4620      	mov	r0, r4
 8010378:	47b0      	blx	r6
 801037a:	462b      	mov	r3, r5
 801037c:	4601      	mov	r1, r0
 801037e:	f04f 32ff 	mov.w	r2, #4294967295
 8010382:	4620      	mov	r0, r4
 8010384:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010388:	4718      	bx	r3
 801038a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801038e:	e7cf      	b.n	8010330 <_ZN8touchgfx10ScrollList13setWindowSizeEs+0x1c>

08010390 <_ZN8touchgfx10ScrollList8setWidthEs>:
 8010390:	b510      	push	{r4, lr}
 8010392:	4604      	mov	r4, r0
 8010394:	f000 fa89 	bl	80108aa <_ZN8touchgfx10ScrollBase8setWidthEs>
 8010398:	6823      	ldr	r3, [r4, #0]
 801039a:	4620      	mov	r0, r4
 801039c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80103a0:	4798      	blx	r3
 80103a2:	b130      	cbz	r0, 80103b2 <_ZN8touchgfx10ScrollList8setWidthEs+0x22>
 80103a4:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 80103a8:	4620      	mov	r0, r4
 80103aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103ae:	f7ff bfb1 	b.w	8010314 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 80103b2:	bd10      	pop	{r4, pc}

080103b4 <_ZN8touchgfx10ScrollList15setDrawableSizeEss>:
 80103b4:	b510      	push	{r4, lr}
 80103b6:	4604      	mov	r4, r0
 80103b8:	f000 f858 	bl	801046c <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
 80103bc:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 80103c0:	4620      	mov	r0, r4
 80103c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103c6:	f7ff bfa5 	b.w	8010314 <_ZN8touchgfx10ScrollList13setWindowSizeEs>

080103ca <_ZN8touchgfx10ScrollList9setHeightEs>:
 80103ca:	b510      	push	{r4, lr}
 80103cc:	4604      	mov	r4, r0
 80103ce:	f000 fa70 	bl	80108b2 <_ZN8touchgfx10ScrollBase9setHeightEs>
 80103d2:	6823      	ldr	r3, [r4, #0]
 80103d4:	4620      	mov	r0, r4
 80103d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80103da:	4798      	blx	r3
 80103dc:	b930      	cbnz	r0, 80103ec <_ZN8touchgfx10ScrollList9setHeightEs+0x22>
 80103de:	f9b4 10c0 	ldrsh.w	r1, [r4, #192]	; 0xc0
 80103e2:	4620      	mov	r0, r4
 80103e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103e8:	f7ff bf94 	b.w	8010314 <_ZN8touchgfx10ScrollList13setWindowSizeEs>
 80103ec:	bd10      	pop	{r4, pc}

080103ee <_ZN8touchgfx10ScrollList10setPaddingEss>:
 80103ee:	b570      	push	{r4, r5, r6, lr}
 80103f0:	6803      	ldr	r3, [r0, #0]
 80103f2:	4604      	mov	r4, r0
 80103f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80103f8:	460e      	mov	r6, r1
 80103fa:	4615      	mov	r5, r2
 80103fc:	4798      	blx	r3
 80103fe:	6823      	ldr	r3, [r4, #0]
 8010400:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 8010404:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 8010408:	4601      	mov	r1, r0
 801040a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801040e:	4620      	mov	r0, r4
 8010410:	4798      	blx	r3
 8010412:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010416:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801041a:	f7ff bd12 	b.w	800fe42 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0801041e <_ZN8touchgfx10ScrollList11setSnappingEb>:
 801041e:	b570      	push	{r4, r5, r6, lr}
 8010420:	4604      	mov	r4, r0
 8010422:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 8010426:	b181      	cbz	r1, 801044a <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 8010428:	6803      	ldr	r3, [r0, #0]
 801042a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801042e:	f8d3 60c8 	ldr.w	r6, [r3, #200]	; 0xc8
 8010432:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010436:	4798      	blx	r3
 8010438:	4601      	mov	r1, r0
 801043a:	4620      	mov	r0, r4
 801043c:	47b0      	blx	r6
 801043e:	462b      	mov	r3, r5
 8010440:	4601      	mov	r1, r0
 8010442:	4620      	mov	r0, r4
 8010444:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010448:	4718      	bx	r3
 801044a:	bd70      	pop	{r4, r5, r6, pc}

0801044c <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 801044c:	b570      	push	{r4, r5, r6, lr}
 801044e:	6803      	ldr	r3, [r0, #0]
 8010450:	4604      	mov	r4, r0
 8010452:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010456:	4615      	mov	r5, r2
 8010458:	4798      	blx	r3
 801045a:	6823      	ldr	r3, [r4, #0]
 801045c:	462a      	mov	r2, r5
 801045e:	4601      	mov	r1, r0
 8010460:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010464:	4620      	mov	r0, r4
 8010466:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801046a:	4718      	bx	r3

0801046c <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 801046c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8010470:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8010474:	302c      	adds	r0, #44	; 0x2c
 8010476:	f7ff bb83 	b.w	800fb80 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

0801047a <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 801047a:	302c      	adds	r0, #44	; 0x2c
 801047c:	f7ff bb85 	b.w	800fb8a <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

08010480 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 8010480:	b209      	sxth	r1, r1
 8010482:	302c      	adds	r0, #44	; 0x2c
 8010484:	f7ff bd5c 	b.w	800ff40 <_ZN8touchgfx12DrawableList11itemChangedEs>

08010488 <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 8010488:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 801048c:	302c      	adds	r0, #44	; 0x2c
 801048e:	4419      	add	r1, r3
 8010490:	f7ff bbaa 	b.w	800fbe8 <_ZN8touchgfx12DrawableList9setOffsetEl>

08010494 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 8010494:	b510      	push	{r4, lr}
 8010496:	4604      	mov	r4, r0
 8010498:	302c      	adds	r0, #44	; 0x2c
 801049a:	f7ff fc9a 	bl	800fdd2 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 801049e:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 80104a2:	1ac0      	subs	r0, r0, r3
 80104a4:	bd10      	pop	{r4, pc}

080104a6 <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 80104a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104a8:	6803      	ldr	r3, [r0, #0]
 80104aa:	4604      	mov	r4, r0
 80104ac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80104b0:	4615      	mov	r5, r2
 80104b2:	460f      	mov	r7, r1
 80104b4:	4798      	blx	r3
 80104b6:	6823      	ldr	r3, [r4, #0]
 80104b8:	4606      	mov	r6, r0
 80104ba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80104be:	4639      	mov	r1, r7
 80104c0:	4620      	mov	r0, r4
 80104c2:	4798      	blx	r3
 80104c4:	2d00      	cmp	r5, #0
 80104c6:	eba0 0306 	sub.w	r3, r0, r6
 80104ca:	bfb8      	it	lt
 80104cc:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 80104d0:	2b00      	cmp	r3, #0
 80104d2:	bfb8      	it	lt
 80104d4:	425b      	neglt	r3, r3
 80104d6:	42ab      	cmp	r3, r5
 80104d8:	bfa8      	it	ge
 80104da:	462b      	movge	r3, r5
 80104dc:	b21a      	sxth	r2, r3
 80104de:	2a00      	cmp	r2, #0
 80104e0:	4601      	mov	r1, r0
 80104e2:	dc08      	bgt.n	80104f6 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x50>
 80104e4:	6823      	ldr	r3, [r4, #0]
 80104e6:	4620      	mov	r0, r4
 80104e8:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80104ec:	4798      	blx	r3
 80104ee:	2300      	movs	r3, #0
 80104f0:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80104f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80104f6:	2300      	movs	r3, #0
 80104f8:	e9c4 3228 	strd	r3, r2, [r4, #160]	; 0xa0
 80104fc:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8010500:	2b01      	cmp	r3, #1
 8010502:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 8010506:	d0f5      	beq.n	80104f4 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 8010508:	f005 fc86 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 801050c:	4621      	mov	r1, r4
 801050e:	3004      	adds	r0, #4
 8010510:	f005 fd78 	bl	8016004 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010514:	2301      	movs	r3, #1
 8010516:	e7eb      	b.n	80104f0 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4a>

08010518 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 8010518:	b538      	push	{r3, r4, r5, lr}
 801051a:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 801051e:	4605      	mov	r5, r0
 8010520:	460c      	mov	r4, r1
 8010522:	b193      	cbz	r3, 801054a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 8010524:	6803      	ldr	r3, [r0, #0]
 8010526:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801052a:	4798      	blx	r3
 801052c:	4602      	mov	r2, r0
 801052e:	b170      	cbz	r0, 801054e <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 8010530:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010534:	2c00      	cmp	r4, #0
 8010536:	f04f 0102 	mov.w	r1, #2
 801053a:	fb93 f1f1 	sdiv	r1, r3, r1
 801053e:	bfb4      	ite	lt
 8010540:	1a64      	sublt	r4, r4, r1
 8010542:	1864      	addge	r4, r4, r1
 8010544:	fb94 f4f3 	sdiv	r4, r4, r3
 8010548:	435c      	muls	r4, r3
 801054a:	4620      	mov	r0, r4
 801054c:	bd38      	pop	{r3, r4, r5, pc}
 801054e:	682b      	ldr	r3, [r5, #0]
 8010550:	4621      	mov	r1, r4
 8010552:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010556:	4628      	mov	r0, r5
 8010558:	4798      	blx	r3
 801055a:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 801055e:	2302      	movs	r3, #2
 8010560:	fb94 f3f3 	sdiv	r3, r4, r3
 8010564:	1ac0      	subs	r0, r0, r3
 8010566:	fb90 f0f4 	sdiv	r0, r0, r4
 801056a:	4344      	muls	r4, r0
 801056c:	e7ed      	b.n	801054a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

0801056e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 801056e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010572:	6803      	ldr	r3, [r0, #0]
 8010574:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010578:	460d      	mov	r5, r1
 801057a:	4604      	mov	r4, r0
 801057c:	4798      	blx	r3
 801057e:	42a8      	cmp	r0, r5
 8010580:	d020      	beq.n	80105c4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8010582:	4629      	mov	r1, r5
 8010584:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010588:	f7ff fcd7 	bl	800ff3a <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 801058c:	6823      	ldr	r3, [r4, #0]
 801058e:	4620      	mov	r0, r4
 8010590:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8010594:	4798      	blx	r3
 8010596:	4605      	mov	r5, r0
 8010598:	b9a0      	cbnz	r0, 80105c4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 801059a:	6823      	ldr	r3, [r4, #0]
 801059c:	4620      	mov	r0, r4
 801059e:	f8d3 60cc 	ldr.w	r6, [r3, #204]	; 0xcc
 80105a2:	f8d3 70c4 	ldr.w	r7, [r3, #196]	; 0xc4
 80105a6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80105aa:	4798      	blx	r3
 80105ac:	462a      	mov	r2, r5
 80105ae:	4601      	mov	r1, r0
 80105b0:	4620      	mov	r0, r4
 80105b2:	47b8      	blx	r7
 80105b4:	4633      	mov	r3, r6
 80105b6:	4601      	mov	r1, r0
 80105b8:	f04f 32ff 	mov.w	r2, #4294967295
 80105bc:	4620      	mov	r0, r4
 80105be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80105c2:	4718      	bx	r3
 80105c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105c8 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 80105c8:	b570      	push	{r4, r5, r6, lr}
 80105ca:	6803      	ldr	r3, [r0, #0]
 80105cc:	790e      	ldrb	r6, [r1, #4]
 80105ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80105d2:	4605      	mov	r5, r0
 80105d4:	460c      	mov	r4, r1
 80105d6:	4798      	blx	r3
 80105d8:	f080 0001 	eor.w	r0, r0, #1
 80105dc:	b2c0      	uxtb	r0, r0
 80105de:	42b0      	cmp	r0, r6
 80105e0:	d144      	bne.n	801066c <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0xa4>
 80105e2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80105e6:	ea83 74e3 	eor.w	r4, r3, r3, asr #31
 80105ea:	eba4 74e3 	sub.w	r4, r4, r3, asr #31
 80105ee:	b224      	sxth	r4, r4
 80105f0:	2b00      	cmp	r3, #0
 80105f2:	bfb4      	ite	lt
 80105f4:	f04f 36ff 	movlt.w	r6, #4294967295
 80105f8:	2601      	movge	r6, #1
 80105fa:	682b      	ldr	r3, [r5, #0]
 80105fc:	2c04      	cmp	r4, #4
 80105fe:	bfc4      	itt	gt
 8010600:	3c04      	subgt	r4, #4
 8010602:	ebc4 04c4 	rsbgt	r4, r4, r4, lsl #3
 8010606:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 801060a:	4628      	mov	r0, r5
 801060c:	bfcc      	ite	gt
 801060e:	b224      	sxthgt	r4, r4
 8010610:	2407      	movle	r4, #7
 8010612:	4798      	blx	r3
 8010614:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 8010618:	4366      	muls	r6, r4
 801061a:	230a      	movs	r3, #10
 801061c:	4371      	muls	r1, r6
 801061e:	fb91 f1f3 	sdiv	r1, r1, r3
 8010622:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 8010626:	4401      	add	r1, r0
 8010628:	b163      	cbz	r3, 8010644 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x7c>
 801062a:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 801062e:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 8010632:	4343      	muls	r3, r0
 8010634:	1898      	adds	r0, r3, r2
 8010636:	4281      	cmp	r1, r0
 8010638:	bfa8      	it	ge
 801063a:	4601      	movge	r1, r0
 801063c:	1ad0      	subs	r0, r2, r3
 801063e:	4281      	cmp	r1, r0
 8010640:	bfb8      	it	lt
 8010642:	4601      	movlt	r1, r0
 8010644:	682b      	ldr	r3, [r5, #0]
 8010646:	2200      	movs	r2, #0
 8010648:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801064c:	4628      	mov	r0, r5
 801064e:	4798      	blx	r3
 8010650:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 8010654:	682b      	ldr	r3, [r5, #0]
 8010656:	42a2      	cmp	r2, r4
 8010658:	bfa8      	it	ge
 801065a:	4622      	movge	r2, r4
 801065c:	4601      	mov	r1, r0
 801065e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010662:	4628      	mov	r0, r5
 8010664:	b212      	sxth	r2, r2
 8010666:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801066a:	4718      	bx	r3
 801066c:	bd70      	pop	{r4, r5, r6, pc}

0801066e <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 801066e:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 8010672:	4770      	bx	lr

08010674 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 8010674:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 8010678:	4770      	bx	lr

0801067a <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 801067a:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 801067e:	4770      	bx	lr

08010680 <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 8010680:	b510      	push	{r4, lr}
 8010682:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010686:	2b01      	cmp	r3, #1
 8010688:	4604      	mov	r4, r0
 801068a:	d10c      	bne.n	80106a6 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x26>
 801068c:	f005 fbc4 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8010690:	4621      	mov	r1, r4
 8010692:	3004      	adds	r0, #4
 8010694:	f005 fc0d 	bl	8015eb2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010698:	6823      	ldr	r3, [r4, #0]
 801069a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 801069e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80106a2:	4620      	mov	r0, r4
 80106a4:	4798      	blx	r3
 80106a6:	2300      	movs	r3, #0
 80106a8:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80106ac:	bd10      	pop	{r4, pc}

080106ae <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 80106ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106b2:	4605      	mov	r5, r0
 80106b4:	460e      	mov	r6, r1
 80106b6:	f7ff ffe3 	bl	8010680 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 80106ba:	2302      	movs	r3, #2
 80106bc:	f885 309c 	strb.w	r3, [r5, #156]	; 0x9c
 80106c0:	682b      	ldr	r3, [r5, #0]
 80106c2:	4628      	mov	r0, r5
 80106c4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80106c8:	4798      	blx	r3
 80106ca:	682b      	ldr	r3, [r5, #0]
 80106cc:	4607      	mov	r7, r0
 80106ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80106d2:	4628      	mov	r0, r5
 80106d4:	4798      	blx	r3
 80106d6:	b300      	cbz	r0, 801071a <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x6c>
 80106d8:	8973      	ldrh	r3, [r6, #10]
 80106da:	88f2      	ldrh	r2, [r6, #6]
 80106dc:	f8b5 4080 	ldrh.w	r4, [r5, #128]	; 0x80
 80106e0:	f895 108a 	ldrb.w	r1, [r5, #138]	; 0x8a
 80106e4:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 80106e8:	1a9b      	subs	r3, r3, r2
 80106ea:	b21b      	sxth	r3, r3
 80106ec:	435c      	muls	r4, r3
 80106ee:	230a      	movs	r3, #10
 80106f0:	fb94 f4f3 	sdiv	r4, r4, r3
 80106f4:	682b      	ldr	r3, [r5, #0]
 80106f6:	2264      	movs	r2, #100	; 0x64
 80106f8:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 80106fc:	f006 fe61 	bl	80173c2 <_ZN8touchgfx6muldivElll>
 8010700:	443c      	add	r4, r7
 8010702:	4621      	mov	r1, r4
 8010704:	b202      	sxth	r2, r0
 8010706:	4628      	mov	r0, r5
 8010708:	47b0      	blx	r6
 801070a:	682b      	ldr	r3, [r5, #0]
 801070c:	4601      	mov	r1, r0
 801070e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010712:	4628      	mov	r0, r5
 8010714:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010718:	4718      	bx	r3
 801071a:	89b3      	ldrh	r3, [r6, #12]
 801071c:	8932      	ldrh	r2, [r6, #8]
 801071e:	e7dd      	b.n	80106dc <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2e>

08010720 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8010720:	b538      	push	{r3, r4, r5, lr}
 8010722:	6803      	ldr	r3, [r0, #0]
 8010724:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010728:	4605      	mov	r5, r0
 801072a:	460c      	mov	r4, r1
 801072c:	4798      	blx	r3
 801072e:	b150      	cbz	r0, 8010746 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010730:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010734:	b13b      	cbz	r3, 8010746 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010736:	4358      	muls	r0, r3
 8010738:	fb94 f3f0 	sdiv	r3, r4, r0
 801073c:	fb00 4413 	mls	r4, r0, r3, r4
 8010740:	2c00      	cmp	r4, #0
 8010742:	bfc8      	it	gt
 8010744:	1a24      	subgt	r4, r4, r0
 8010746:	4620      	mov	r0, r4
 8010748:	bd38      	pop	{r3, r4, r5, pc}

0801074a <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 801074a:	b570      	push	{r4, r5, r6, lr}
 801074c:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8010750:	2b01      	cmp	r3, #1
 8010752:	4604      	mov	r4, r0
 8010754:	d14a      	bne.n	80107ec <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 8010756:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 801075a:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 801075e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010762:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 8010766:	3001      	adds	r0, #1
 8010768:	1b92      	subs	r2, r2, r6
 801076a:	b212      	sxth	r2, r2
 801076c:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 8010770:	2100      	movs	r1, #0
 8010772:	b280      	uxth	r0, r0
 8010774:	47a8      	blx	r5
 8010776:	6823      	ldr	r3, [r4, #0]
 8010778:	1981      	adds	r1, r0, r6
 801077a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 801077e:	4620      	mov	r0, r4
 8010780:	4798      	blx	r3
 8010782:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 8010786:	429a      	cmp	r2, r3
 8010788:	dd30      	ble.n	80107ec <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 801078a:	2300      	movs	r3, #0
 801078c:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010790:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8010794:	f005 fb40 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8010798:	4621      	mov	r1, r4
 801079a:	3004      	adds	r0, #4
 801079c:	f005 fb89 	bl	8015eb2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80107a0:	6823      	ldr	r3, [r4, #0]
 80107a2:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 80107a6:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80107aa:	4620      	mov	r0, r4
 80107ac:	f7ff ffb8 	bl	8010720 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 80107b0:	4601      	mov	r1, r0
 80107b2:	4620      	mov	r0, r4
 80107b4:	47a8      	blx	r5
 80107b6:	6823      	ldr	r3, [r4, #0]
 80107b8:	4620      	mov	r0, r4
 80107ba:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80107be:	4798      	blx	r3
 80107c0:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80107c4:	1ac0      	subs	r0, r0, r3
 80107c6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80107ca:	4403      	add	r3, r0
 80107cc:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80107d0:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 80107d4:	b150      	cbz	r0, 80107ec <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80107d6:	6803      	ldr	r3, [r0, #0]
 80107d8:	68db      	ldr	r3, [r3, #12]
 80107da:	4798      	blx	r3
 80107dc:	b130      	cbz	r0, 80107ec <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa2>
 80107de:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80107e2:	6803      	ldr	r3, [r0, #0]
 80107e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107e8:	689b      	ldr	r3, [r3, #8]
 80107ea:	4718      	bx	r3
 80107ec:	bd70      	pop	{r4, r5, r6, pc}

080107ee <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 80107ee:	f081 0301 	eor.w	r3, r1, #1
 80107f2:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 80107f6:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 80107fa:	302c      	adds	r0, #44	; 0x2c
 80107fc:	f7ff bb7e 	b.w	800fefc <_ZN8touchgfx12DrawableList13setHorizontalEb>

08010800 <_ZN8touchgfx10ScrollBaseC1Ev>:
 8010800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010802:	4606      	mov	r6, r0
 8010804:	2500      	movs	r5, #0
 8010806:	2701      	movs	r7, #1
 8010808:	4b24      	ldr	r3, [pc, #144]	; (801089c <_ZN8touchgfx10ScrollBaseC1Ev+0x9c>)
 801080a:	8085      	strh	r5, [r0, #4]
 801080c:	80c5      	strh	r5, [r0, #6]
 801080e:	8105      	strh	r5, [r0, #8]
 8010810:	8145      	strh	r5, [r0, #10]
 8010812:	8185      	strh	r5, [r0, #12]
 8010814:	81c5      	strh	r5, [r0, #14]
 8010816:	8205      	strh	r5, [r0, #16]
 8010818:	8245      	strh	r5, [r0, #18]
 801081a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801081e:	61c5      	str	r5, [r0, #28]
 8010820:	8405      	strh	r5, [r0, #32]
 8010822:	8445      	strh	r5, [r0, #34]	; 0x22
 8010824:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8010828:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 801082c:	6285      	str	r5, [r0, #40]	; 0x28
 801082e:	f846 3b2c 	str.w	r3, [r6], #44
 8010832:	4604      	mov	r4, r0
 8010834:	4630      	mov	r0, r6
 8010836:	f7ff f97b 	bl	800fb30 <_ZN8touchgfx12DrawableListC1Ev>
 801083a:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 801083e:	230a      	movs	r3, #10
 8010840:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 8010844:	4b16      	ldr	r3, [pc, #88]	; (80108a0 <_ZN8touchgfx10ScrollBaseC1Ev+0xa0>)
 8010846:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801084a:	231e      	movs	r3, #30
 801084c:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 8010850:	234b      	movs	r3, #75	; 0x4b
 8010852:	f884 308a 	strb.w	r3, [r4, #138]	; 0x8a
 8010856:	4631      	mov	r1, r6
 8010858:	4620      	mov	r0, r4
 801085a:	67a5      	str	r5, [r4, #120]	; 0x78
 801085c:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8010860:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8010864:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 8010868:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 801086c:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 8010870:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 8010874:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 8010878:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 801087c:	f000 f833 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010880:	4629      	mov	r1, r5
 8010882:	4630      	mov	r0, r6
 8010884:	6325      	str	r5, [r4, #48]	; 0x30
 8010886:	f7ff fb39 	bl	800fefc <_ZN8touchgfx12DrawableList13setHorizontalEb>
 801088a:	4630      	mov	r0, r6
 801088c:	4629      	mov	r1, r5
 801088e:	f7ff fb40 	bl	800ff12 <_ZN8touchgfx12DrawableList11setCircularEb>
 8010892:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 8010896:	4620      	mov	r0, r4
 8010898:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801089a:	bf00      	nop
 801089c:	0802f070 	.word	0x0802f070
 80108a0:	08017a7d 	.word	0x08017a7d

080108a4 <_ZN8touchgfx10ScrollBase11setCircularEb>:
 80108a4:	302c      	adds	r0, #44	; 0x2c
 80108a6:	f7ff bb34 	b.w	800ff12 <_ZN8touchgfx12DrawableList11setCircularEb>

080108aa <_ZN8touchgfx10ScrollBase8setWidthEs>:
 80108aa:	8101      	strh	r1, [r0, #8]
 80108ac:	302c      	adds	r0, #44	; 0x2c
 80108ae:	f7ff bb1f 	b.w	800fef0 <_ZN8touchgfx12DrawableList8setWidthEs>

080108b2 <_ZN8touchgfx10ScrollBase9setHeightEs>:
 80108b2:	8141      	strh	r1, [r0, #10]
 80108b4:	302c      	adds	r0, #44	; 0x2c
 80108b6:	f7ff bb1e 	b.w	800fef6 <_ZN8touchgfx12DrawableList9setHeightEs>

080108ba <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 80108ba:	302c      	adds	r0, #44	; 0x2c
 80108bc:	f7ff b91e 	b.w	800fafc <_ZNK8touchgfx12DrawableList13getHorizontalEv>

080108c0 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 80108c0:	302c      	adds	r0, #44	; 0x2c
 80108c2:	f7ff b91e 	b.w	800fb02 <_ZNK8touchgfx12DrawableList11getCircularEv>

080108c6 <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 80108c6:	302c      	adds	r0, #44	; 0x2c
 80108c8:	f7ff b921 	b.w	800fb0e <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

080108cc <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 80108cc:	302c      	adds	r0, #44	; 0x2c
 80108ce:	f7ff b924 	b.w	800fb1a <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

080108d2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80108d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80108d4:	2000      	movs	r0, #0
 80108d6:	b12b      	cbz	r3, 80108e4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80108d8:	b920      	cbnz	r0, 80108e4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80108da:	1a5a      	subs	r2, r3, r1
 80108dc:	4250      	negs	r0, r2
 80108de:	4150      	adcs	r0, r2
 80108e0:	699b      	ldr	r3, [r3, #24]
 80108e2:	e7f8      	b.n	80108d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80108e4:	4770      	bx	lr

080108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80108e6:	2300      	movs	r3, #0
 80108e8:	6148      	str	r0, [r1, #20]
 80108ea:	618b      	str	r3, [r1, #24]
 80108ec:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80108ee:	b913      	cbnz	r3, 80108f6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80108f0:	6281      	str	r1, [r0, #40]	; 0x28
 80108f2:	4770      	bx	lr
 80108f4:	4613      	mov	r3, r2
 80108f6:	699a      	ldr	r2, [r3, #24]
 80108f8:	2a00      	cmp	r2, #0
 80108fa:	d1fb      	bne.n	80108f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80108fc:	6199      	str	r1, [r3, #24]
 80108fe:	4770      	bx	lr

08010900 <_ZN8touchgfx9Container9removeAllEv>:
 8010900:	2200      	movs	r2, #0
 8010902:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010904:	b123      	cbz	r3, 8010910 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010906:	6999      	ldr	r1, [r3, #24]
 8010908:	6281      	str	r1, [r0, #40]	; 0x28
 801090a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 801090e:	e7f8      	b.n	8010902 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010910:	4770      	bx	lr

08010912 <_ZN8touchgfx9Container6unlinkEv>:
 8010912:	2300      	movs	r3, #0
 8010914:	6283      	str	r3, [r0, #40]	; 0x28
 8010916:	4770      	bx	lr

08010918 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010918:	2200      	movs	r2, #0
 801091a:	8002      	strh	r2, [r0, #0]
 801091c:	8042      	strh	r2, [r0, #2]
 801091e:	8082      	strh	r2, [r0, #4]
 8010920:	80c2      	strh	r2, [r0, #6]
 8010922:	4770      	bx	lr

08010924 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010924:	b570      	push	{r4, r5, r6, lr}
 8010926:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010928:	460d      	mov	r5, r1
 801092a:	4616      	mov	r6, r2
 801092c:	b13c      	cbz	r4, 801093e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801092e:	6823      	ldr	r3, [r4, #0]
 8010930:	4620      	mov	r0, r4
 8010932:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010934:	4632      	mov	r2, r6
 8010936:	4629      	mov	r1, r5
 8010938:	4798      	blx	r3
 801093a:	69a4      	ldr	r4, [r4, #24]
 801093c:	e7f6      	b.n	801092c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801093e:	bd70      	pop	{r4, r5, r6, pc}

08010940 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010940:	b538      	push	{r3, r4, r5, lr}
 8010942:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010944:	460d      	mov	r5, r1
 8010946:	b134      	cbz	r4, 8010956 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010948:	682b      	ldr	r3, [r5, #0]
 801094a:	4621      	mov	r1, r4
 801094c:	689b      	ldr	r3, [r3, #8]
 801094e:	4628      	mov	r0, r5
 8010950:	4798      	blx	r3
 8010952:	69a4      	ldr	r4, [r4, #24]
 8010954:	e7f7      	b.n	8010946 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010956:	bd38      	pop	{r3, r4, r5, pc}

08010958 <_ZN8touchgfx9ContainerD1Ev>:
 8010958:	4770      	bx	lr

0801095a <_ZN8touchgfx9ContainerD0Ev>:
 801095a:	b510      	push	{r4, lr}
 801095c:	212c      	movs	r1, #44	; 0x2c
 801095e:	4604      	mov	r4, r0
 8010960:	f019 fb0f 	bl	8029f82 <_ZdlPvj>
 8010964:	4620      	mov	r0, r4
 8010966:	bd10      	pop	{r4, pc}

08010968 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010968:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801096a:	b19b      	cbz	r3, 8010994 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801096c:	428b      	cmp	r3, r1
 801096e:	d109      	bne.n	8010984 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010970:	699a      	ldr	r2, [r3, #24]
 8010972:	2100      	movs	r1, #0
 8010974:	6159      	str	r1, [r3, #20]
 8010976:	6282      	str	r2, [r0, #40]	; 0x28
 8010978:	b902      	cbnz	r2, 801097c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801097a:	4770      	bx	lr
 801097c:	6199      	str	r1, [r3, #24]
 801097e:	4770      	bx	lr
 8010980:	4613      	mov	r3, r2
 8010982:	b13a      	cbz	r2, 8010994 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010984:	699a      	ldr	r2, [r3, #24]
 8010986:	428a      	cmp	r2, r1
 8010988:	d1fa      	bne.n	8010980 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801098a:	698a      	ldr	r2, [r1, #24]
 801098c:	619a      	str	r2, [r3, #24]
 801098e:	2300      	movs	r3, #0
 8010990:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010994:	4770      	bx	lr

08010996 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010996:	b410      	push	{r4}
 8010998:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801099a:	4604      	mov	r4, r0
 801099c:	b92b      	cbnz	r3, 80109aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 801099e:	6803      	ldr	r3, [r0, #0]
 80109a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80109a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80109a6:	4611      	mov	r1, r2
 80109a8:	4718      	bx	r3
 80109aa:	b941      	cbnz	r1, 80109be <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80109ac:	6193      	str	r3, [r2, #24]
 80109ae:	6282      	str	r2, [r0, #40]	; 0x28
 80109b0:	6154      	str	r4, [r2, #20]
 80109b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80109b6:	4770      	bx	lr
 80109b8:	4603      	mov	r3, r0
 80109ba:	2800      	cmp	r0, #0
 80109bc:	d0f9      	beq.n	80109b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80109be:	4299      	cmp	r1, r3
 80109c0:	6998      	ldr	r0, [r3, #24]
 80109c2:	d1f9      	bne.n	80109b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80109c4:	6190      	str	r0, [r2, #24]
 80109c6:	618a      	str	r2, [r1, #24]
 80109c8:	e7f2      	b.n	80109b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080109ca <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80109ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109ce:	461f      	mov	r7, r3
 80109d0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80109d4:	460d      	mov	r5, r1
 80109d6:	4616      	mov	r6, r2
 80109d8:	b103      	cbz	r3, 80109dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80109da:	6038      	str	r0, [r7, #0]
 80109dc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80109de:	b314      	cbz	r4, 8010a26 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80109e0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80109e4:	b1eb      	cbz	r3, 8010a22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80109ea:	428d      	cmp	r5, r1
 80109ec:	db19      	blt.n	8010a22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109ee:	8923      	ldrh	r3, [r4, #8]
 80109f0:	b289      	uxth	r1, r1
 80109f2:	440b      	add	r3, r1
 80109f4:	b21b      	sxth	r3, r3
 80109f6:	429d      	cmp	r5, r3
 80109f8:	da13      	bge.n	8010a22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109fa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80109fe:	4296      	cmp	r6, r2
 8010a00:	db0f      	blt.n	8010a22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010a02:	8963      	ldrh	r3, [r4, #10]
 8010a04:	b292      	uxth	r2, r2
 8010a06:	4413      	add	r3, r2
 8010a08:	b21b      	sxth	r3, r3
 8010a0a:	429e      	cmp	r6, r3
 8010a0c:	da09      	bge.n	8010a22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010a0e:	6823      	ldr	r3, [r4, #0]
 8010a10:	1ab2      	subs	r2, r6, r2
 8010a12:	1a69      	subs	r1, r5, r1
 8010a14:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010a18:	b212      	sxth	r2, r2
 8010a1a:	463b      	mov	r3, r7
 8010a1c:	b209      	sxth	r1, r1
 8010a1e:	4620      	mov	r0, r4
 8010a20:	47c0      	blx	r8
 8010a22:	69a4      	ldr	r4, [r4, #24]
 8010a24:	e7db      	b.n	80109de <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a30:	4c6e      	ldr	r4, [pc, #440]	; (8010bec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010a32:	b0a1      	sub	sp, #132	; 0x84
 8010a34:	6824      	ldr	r4, [r4, #0]
 8010a36:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010a38:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010a3c:	9303      	str	r3, [sp, #12]
 8010a3e:	2400      	movs	r4, #0
 8010a40:	802c      	strh	r4, [r5, #0]
 8010a42:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010a44:	802c      	strh	r4, [r5, #0]
 8010a46:	601c      	str	r4, [r3, #0]
 8010a48:	4606      	mov	r6, r0
 8010a4a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010a4e:	f7ff ffbc 	bl	80109ca <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010a52:	f1b9 0f03 	cmp.w	r9, #3
 8010a56:	f340 80c2 	ble.w	8010bde <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010a5a:	4631      	mov	r1, r6
 8010a5c:	a80c      	add	r0, sp, #48	; 0x30
 8010a5e:	f006 fb5f 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a62:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010a66:	9306      	str	r3, [sp, #24]
 8010a68:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010a6c:	9307      	str	r3, [sp, #28]
 8010a6e:	9b03      	ldr	r3, [sp, #12]
 8010a70:	f8d3 a000 	ldr.w	sl, [r3]
 8010a74:	f1ba 0f00 	cmp.w	sl, #0
 8010a78:	f000 80b4 	beq.w	8010be4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010a7c:	4651      	mov	r1, sl
 8010a7e:	a810      	add	r0, sp, #64	; 0x40
 8010a80:	f006 fb4e 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a84:	9b01      	ldr	r3, [sp, #4]
 8010a86:	9a06      	ldr	r2, [sp, #24]
 8010a88:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010a8c:	189d      	adds	r5, r3, r2
 8010a8e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010a92:	9a07      	ldr	r2, [sp, #28]
 8010a94:	2002      	movs	r0, #2
 8010a96:	fb91 f1f0 	sdiv	r1, r1, r0
 8010a9a:	4419      	add	r1, r3
 8010a9c:	1a6d      	subs	r5, r5, r1
 8010a9e:	9b02      	ldr	r3, [sp, #8]
 8010aa0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010aa4:	4413      	add	r3, r2
 8010aa6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010aaa:	fb92 f2f0 	sdiv	r2, r2, r0
 8010aae:	440a      	add	r2, r1
 8010ab0:	1a9b      	subs	r3, r3, r2
 8010ab2:	435b      	muls	r3, r3
 8010ab4:	fb05 3505 	mla	r5, r5, r5, r3
 8010ab8:	4f4d      	ldr	r7, [pc, #308]	; (8010bf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010aba:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010abc:	ac10      	add	r4, sp, #64	; 0x40
 8010abe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010ac0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010ac2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010ac4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010ac6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010ac8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010acc:	f1b9 0f0c 	cmp.w	r9, #12
 8010ad0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010ad4:	f04f 0303 	mov.w	r3, #3
 8010ad8:	bfc8      	it	gt
 8010ada:	4698      	movgt	r8, r3
 8010adc:	f8cd 9000 	str.w	r9, [sp]
 8010ae0:	f04f 0400 	mov.w	r4, #0
 8010ae4:	bfdc      	itt	le
 8010ae6:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010aea:	fb92 f8f3 	sdivle	r8, r2, r3
 8010aee:	1c63      	adds	r3, r4, #1
 8010af0:	aa10      	add	r2, sp, #64	; 0x40
 8010af2:	f004 0401 	and.w	r4, r4, #1
 8010af6:	9308      	str	r3, [sp, #32]
 8010af8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010afc:	9b00      	ldr	r3, [sp, #0]
 8010afe:	fb93 f3f8 	sdiv	r3, r3, r8
 8010b02:	b29b      	uxth	r3, r3
 8010b04:	3404      	adds	r4, #4
 8010b06:	f04f 0b00 	mov.w	fp, #0
 8010b0a:	9304      	str	r3, [sp, #16]
 8010b0c:	9a04      	ldr	r2, [sp, #16]
 8010b0e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010b12:	fb13 f302 	smulbb	r3, r3, r2
 8010b16:	9a01      	ldr	r2, [sp, #4]
 8010b18:	b29b      	uxth	r3, r3
 8010b1a:	1899      	adds	r1, r3, r2
 8010b1c:	9305      	str	r3, [sp, #20]
 8010b1e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010b22:	b209      	sxth	r1, r1
 8010b24:	4299      	cmp	r1, r3
 8010b26:	db4d      	blt.n	8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b28:	8932      	ldrh	r2, [r6, #8]
 8010b2a:	4413      	add	r3, r2
 8010b2c:	b21b      	sxth	r3, r3
 8010b2e:	4299      	cmp	r1, r3
 8010b30:	da48      	bge.n	8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b32:	9b04      	ldr	r3, [sp, #16]
 8010b34:	6827      	ldr	r7, [r4, #0]
 8010b36:	fb17 f703 	smulbb	r7, r7, r3
 8010b3a:	9b02      	ldr	r3, [sp, #8]
 8010b3c:	b2bf      	uxth	r7, r7
 8010b3e:	18fa      	adds	r2, r7, r3
 8010b40:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010b44:	b212      	sxth	r2, r2
 8010b46:	429a      	cmp	r2, r3
 8010b48:	db3c      	blt.n	8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b4a:	8970      	ldrh	r0, [r6, #10]
 8010b4c:	4403      	add	r3, r0
 8010b4e:	b21b      	sxth	r3, r3
 8010b50:	429a      	cmp	r2, r3
 8010b52:	da37      	bge.n	8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b54:	2300      	movs	r3, #0
 8010b56:	930b      	str	r3, [sp, #44]	; 0x2c
 8010b58:	4630      	mov	r0, r6
 8010b5a:	ab0b      	add	r3, sp, #44	; 0x2c
 8010b5c:	f7ff ff35 	bl	80109ca <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010b60:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010b62:	b37a      	cbz	r2, 8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b64:	4552      	cmp	r2, sl
 8010b66:	d02d      	beq.n	8010bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b68:	4611      	mov	r1, r2
 8010b6a:	a80e      	add	r0, sp, #56	; 0x38
 8010b6c:	9209      	str	r2, [sp, #36]	; 0x24
 8010b6e:	f006 fad7 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b72:	9a06      	ldr	r2, [sp, #24]
 8010b74:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010b78:	9b01      	ldr	r3, [sp, #4]
 8010b7a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010b7e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010b82:	4413      	add	r3, r2
 8010b84:	f04f 0e02 	mov.w	lr, #2
 8010b88:	fb91 f1fe 	sdiv	r1, r1, lr
 8010b8c:	4401      	add	r1, r0
 8010b8e:	1a58      	subs	r0, r3, r1
 8010b90:	9a07      	ldr	r2, [sp, #28]
 8010b92:	9b02      	ldr	r3, [sp, #8]
 8010b94:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010b98:	fb9c fcfe 	sdiv	ip, ip, lr
 8010b9c:	4413      	add	r3, r2
 8010b9e:	448c      	add	ip, r1
 8010ba0:	eba3 030c 	sub.w	r3, r3, ip
 8010ba4:	435b      	muls	r3, r3
 8010ba6:	fb00 3300 	mla	r3, r0, r0, r3
 8010baa:	42ab      	cmp	r3, r5
 8010bac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010bae:	d208      	bcs.n	8010bc2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010bb0:	9803      	ldr	r0, [sp, #12]
 8010bb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010bb4:	6001      	str	r1, [r0, #0]
 8010bb6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010bb8:	9805      	ldr	r0, [sp, #20]
 8010bba:	8008      	strh	r0, [r1, #0]
 8010bbc:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010bbe:	461d      	mov	r5, r3
 8010bc0:	800f      	strh	r7, [r1, #0]
 8010bc2:	4692      	mov	sl, r2
 8010bc4:	f10b 0b01 	add.w	fp, fp, #1
 8010bc8:	f1bb 0f04 	cmp.w	fp, #4
 8010bcc:	f104 0408 	add.w	r4, r4, #8
 8010bd0:	d19c      	bne.n	8010b0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010bd2:	9b00      	ldr	r3, [sp, #0]
 8010bd4:	9c08      	ldr	r4, [sp, #32]
 8010bd6:	444b      	add	r3, r9
 8010bd8:	4544      	cmp	r4, r8
 8010bda:	9300      	str	r3, [sp, #0]
 8010bdc:	d187      	bne.n	8010aee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010bde:	b021      	add	sp, #132	; 0x84
 8010be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010be4:	f04f 35ff 	mov.w	r5, #4294967295
 8010be8:	e766      	b.n	8010ab8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010bea:	bf00      	nop
 8010bec:	20012fc4 	.word	0x20012fc4
 8010bf0:	0802bcc0 	.word	0x0802bcc0

08010bf4 <_ZN8touchgfx4RectaNERKS0_>:
 8010bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010bf8:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010bfc:	888c      	ldrh	r4, [r1, #4]
 8010bfe:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010c02:	443c      	add	r4, r7
 8010c04:	b2a4      	uxth	r4, r4
 8010c06:	fa0f f884 	sxth.w	r8, r4
 8010c0a:	45c1      	cmp	r9, r8
 8010c0c:	da2f      	bge.n	8010c6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010c0e:	8882      	ldrh	r2, [r0, #4]
 8010c10:	444a      	add	r2, r9
 8010c12:	b292      	uxth	r2, r2
 8010c14:	fa0f fe82 	sxth.w	lr, r2
 8010c18:	4577      	cmp	r7, lr
 8010c1a:	da28      	bge.n	8010c6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010c1c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010c20:	88cb      	ldrh	r3, [r1, #6]
 8010c22:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010c26:	442b      	add	r3, r5
 8010c28:	b21b      	sxth	r3, r3
 8010c2a:	429e      	cmp	r6, r3
 8010c2c:	da1f      	bge.n	8010c6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010c2e:	88c3      	ldrh	r3, [r0, #6]
 8010c30:	4433      	add	r3, r6
 8010c32:	b29b      	uxth	r3, r3
 8010c34:	fa0f fc83 	sxth.w	ip, r3
 8010c38:	4565      	cmp	r5, ip
 8010c3a:	da18      	bge.n	8010c6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010c3c:	454f      	cmp	r7, r9
 8010c3e:	bfb8      	it	lt
 8010c40:	464f      	movlt	r7, r9
 8010c42:	42b5      	cmp	r5, r6
 8010c44:	bfb8      	it	lt
 8010c46:	4635      	movlt	r5, r6
 8010c48:	45f0      	cmp	r8, lr
 8010c4a:	bfd8      	it	le
 8010c4c:	4622      	movle	r2, r4
 8010c4e:	1bd2      	subs	r2, r2, r7
 8010c50:	8082      	strh	r2, [r0, #4]
 8010c52:	884a      	ldrh	r2, [r1, #2]
 8010c54:	88c9      	ldrh	r1, [r1, #6]
 8010c56:	8007      	strh	r7, [r0, #0]
 8010c58:	440a      	add	r2, r1
 8010c5a:	b292      	uxth	r2, r2
 8010c5c:	b211      	sxth	r1, r2
 8010c5e:	458c      	cmp	ip, r1
 8010c60:	bfa8      	it	ge
 8010c62:	4613      	movge	r3, r2
 8010c64:	1b5b      	subs	r3, r3, r5
 8010c66:	80c3      	strh	r3, [r0, #6]
 8010c68:	8045      	strh	r5, [r0, #2]
 8010c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c6e:	2300      	movs	r3, #0
 8010c70:	8003      	strh	r3, [r0, #0]
 8010c72:	8043      	strh	r3, [r0, #2]
 8010c74:	8083      	strh	r3, [r0, #4]
 8010c76:	80c3      	strh	r3, [r0, #6]
 8010c78:	e7f7      	b.n	8010c6a <_ZN8touchgfx4RectaNERKS0_+0x76>

08010c7a <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010c7a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010c7e:	2b00      	cmp	r3, #0
 8010c80:	dd06      	ble.n	8010c90 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010c82:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010c86:	2800      	cmp	r0, #0
 8010c88:	bfcc      	ite	gt
 8010c8a:	2000      	movgt	r0, #0
 8010c8c:	2001      	movle	r0, #1
 8010c8e:	4770      	bx	lr
 8010c90:	2001      	movs	r0, #1
 8010c92:	4770      	bx	lr

08010c94 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c98:	2300      	movs	r3, #0
 8010c9a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010c9c:	8003      	strh	r3, [r0, #0]
 8010c9e:	4604      	mov	r4, r0
 8010ca0:	8043      	strh	r3, [r0, #2]
 8010ca2:	8083      	strh	r3, [r0, #4]
 8010ca4:	80c3      	strh	r3, [r0, #6]
 8010ca6:	2d00      	cmp	r5, #0
 8010ca8:	d040      	beq.n	8010d2c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010caa:	1d28      	adds	r0, r5, #4
 8010cac:	f7ff ffe5 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cb0:	b988      	cbnz	r0, 8010cd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010cb2:	4620      	mov	r0, r4
 8010cb4:	f7ff ffe1 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cb8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010cbc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010cc0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010cc4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010cc8:	b138      	cbz	r0, 8010cda <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010cca:	8022      	strh	r2, [r4, #0]
 8010ccc:	8063      	strh	r3, [r4, #2]
 8010cce:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010cd2:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010cd6:	69ad      	ldr	r5, [r5, #24]
 8010cd8:	e7e5      	b.n	8010ca6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010cda:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010cde:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010ce2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010ce6:	4290      	cmp	r0, r2
 8010ce8:	4607      	mov	r7, r0
 8010cea:	bfa8      	it	ge
 8010cec:	4617      	movge	r7, r2
 8010cee:	4472      	add	r2, lr
 8010cf0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010cf4:	8027      	strh	r7, [r4, #0]
 8010cf6:	4299      	cmp	r1, r3
 8010cf8:	460e      	mov	r6, r1
 8010cfa:	4440      	add	r0, r8
 8010cfc:	bfa8      	it	ge
 8010cfe:	461e      	movge	r6, r3
 8010d00:	4471      	add	r1, lr
 8010d02:	4463      	add	r3, ip
 8010d04:	b200      	sxth	r0, r0
 8010d06:	b212      	sxth	r2, r2
 8010d08:	b209      	sxth	r1, r1
 8010d0a:	b21b      	sxth	r3, r3
 8010d0c:	4290      	cmp	r0, r2
 8010d0e:	bfac      	ite	ge
 8010d10:	ebc7 0200 	rsbge	r2, r7, r0
 8010d14:	ebc7 0202 	rsblt	r2, r7, r2
 8010d18:	4299      	cmp	r1, r3
 8010d1a:	bfac      	ite	ge
 8010d1c:	ebc6 0301 	rsbge	r3, r6, r1
 8010d20:	ebc6 0303 	rsblt	r3, r6, r3
 8010d24:	8066      	strh	r6, [r4, #2]
 8010d26:	80a2      	strh	r2, [r4, #4]
 8010d28:	80e3      	strh	r3, [r4, #6]
 8010d2a:	e7d4      	b.n	8010cd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010d2c:	4620      	mov	r0, r4
 8010d2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010d32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010d32:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010d36:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010d3a:	b383      	cbz	r3, 8010d9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010d3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010d3e:	b374      	cbz	r4, 8010d9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010d40:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010d44:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010d48:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010d4c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010d50:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010d54:	b303      	cbz	r3, 8010d98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010d56:	4668      	mov	r0, sp
 8010d58:	1d21      	adds	r1, r4, #4
 8010d5a:	f8ad 5000 	strh.w	r5, [sp]
 8010d5e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010d62:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010d66:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010d6a:	f7ff ff43 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8010d6e:	4668      	mov	r0, sp
 8010d70:	f7ff ff83 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d74:	b980      	cbnz	r0, 8010d98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010d76:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d7a:	88a2      	ldrh	r2, [r4, #4]
 8010d7c:	1a9b      	subs	r3, r3, r2
 8010d7e:	f8ad 3000 	strh.w	r3, [sp]
 8010d82:	88e2      	ldrh	r2, [r4, #6]
 8010d84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d88:	1a9b      	subs	r3, r3, r2
 8010d8a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d8e:	6823      	ldr	r3, [r4, #0]
 8010d90:	4669      	mov	r1, sp
 8010d92:	689b      	ldr	r3, [r3, #8]
 8010d94:	4620      	mov	r0, r4
 8010d96:	4798      	blx	r3
 8010d98:	69a4      	ldr	r4, [r4, #24]
 8010d9a:	2c00      	cmp	r4, #0
 8010d9c:	d1d8      	bne.n	8010d50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010d9e:	b002      	add	sp, #8
 8010da0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010da4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010da4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010da6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010daa:	460d      	mov	r5, r1
 8010dac:	4616      	mov	r6, r2
 8010dae:	b323      	cbz	r3, 8010dfa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010db0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010db2:	b314      	cbz	r4, 8010dfa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010db4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010db8:	b1eb      	cbz	r3, 8010df6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010dba:	6828      	ldr	r0, [r5, #0]
 8010dbc:	6869      	ldr	r1, [r5, #4]
 8010dbe:	466b      	mov	r3, sp
 8010dc0:	c303      	stmia	r3!, {r0, r1}
 8010dc2:	4668      	mov	r0, sp
 8010dc4:	1d21      	adds	r1, r4, #4
 8010dc6:	f7ff ff15 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8010dca:	4668      	mov	r0, sp
 8010dcc:	f7ff ff55 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8010dd0:	b988      	cbnz	r0, 8010df6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010dd2:	f8bd 3000 	ldrh.w	r3, [sp]
 8010dd6:	88a2      	ldrh	r2, [r4, #4]
 8010dd8:	1a9b      	subs	r3, r3, r2
 8010dda:	f8ad 3000 	strh.w	r3, [sp]
 8010dde:	88e2      	ldrh	r2, [r4, #6]
 8010de0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010de4:	1a9b      	subs	r3, r3, r2
 8010de6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010dea:	6823      	ldr	r3, [r4, #0]
 8010dec:	4632      	mov	r2, r6
 8010dee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010df0:	4669      	mov	r1, sp
 8010df2:	4620      	mov	r0, r4
 8010df4:	4798      	blx	r3
 8010df6:	69a4      	ldr	r4, [r4, #24]
 8010df8:	e7db      	b.n	8010db2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010dfa:	b002      	add	sp, #8
 8010dfc:	bd70      	pop	{r4, r5, r6, pc}

08010dfe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010dfe:	b513      	push	{r0, r1, r4, lr}
 8010e00:	6803      	ldr	r3, [r0, #0]
 8010e02:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010e06:	2300      	movs	r3, #0
 8010e08:	e9cd 3300 	strd	r3, r3, [sp]
 8010e0c:	466b      	mov	r3, sp
 8010e0e:	47a0      	blx	r4
 8010e10:	b002      	add	sp, #8
 8010e12:	bd10      	pop	{r4, pc}

08010e14 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010e14:	2301      	movs	r3, #1
 8010e16:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010e1a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010e1e:	4770      	bx	lr

08010e20 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010e20:	2301      	movs	r3, #1
 8010e22:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010e26:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010e2a:	4770      	bx	lr

08010e2c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010e2c:	6843      	ldr	r3, [r0, #4]
 8010e2e:	2201      	movs	r2, #1
 8010e30:	725a      	strb	r2, [r3, #9]
 8010e32:	6840      	ldr	r0, [r0, #4]
 8010e34:	6803      	ldr	r3, [r0, #0]
 8010e36:	691b      	ldr	r3, [r3, #16]
 8010e38:	4718      	bx	r3

08010e3a <_ZN8touchgfx3HAL8flushDMAEv>:
 8010e3a:	6840      	ldr	r0, [r0, #4]
 8010e3c:	6803      	ldr	r3, [r0, #0]
 8010e3e:	689b      	ldr	r3, [r3, #8]
 8010e40:	4718      	bx	r3

08010e42 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010e42:	b530      	push	{r4, r5, lr}
 8010e44:	b08b      	sub	sp, #44	; 0x2c
 8010e46:	6804      	ldr	r4, [r0, #0]
 8010e48:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010e4c:	9509      	str	r5, [sp, #36]	; 0x24
 8010e4e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010e52:	9508      	str	r5, [sp, #32]
 8010e54:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010e58:	9507      	str	r5, [sp, #28]
 8010e5a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010e5e:	9506      	str	r5, [sp, #24]
 8010e60:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010e64:	9505      	str	r5, [sp, #20]
 8010e66:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010e6a:	9504      	str	r5, [sp, #16]
 8010e6c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010e70:	9503      	str	r5, [sp, #12]
 8010e72:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010e76:	9502      	str	r5, [sp, #8]
 8010e78:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010e7c:	e9cd 3500 	strd	r3, r5, [sp]
 8010e80:	4613      	mov	r3, r2
 8010e82:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010e84:	2200      	movs	r2, #0
 8010e86:	47a0      	blx	r4
 8010e88:	b00b      	add	sp, #44	; 0x2c
 8010e8a:	bd30      	pop	{r4, r5, pc}

08010e8c <_ZN8touchgfx3HAL10beginFrameEv>:
 8010e8c:	4b04      	ldr	r3, [pc, #16]	; (8010ea0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010e8e:	781b      	ldrb	r3, [r3, #0]
 8010e90:	b123      	cbz	r3, 8010e9c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010e92:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010e96:	f080 0001 	eor.w	r0, r0, #1
 8010e9a:	4770      	bx	lr
 8010e9c:	2001      	movs	r0, #1
 8010e9e:	4770      	bx	lr
 8010ea0:	20012fc2 	.word	0x20012fc2

08010ea4 <_ZN8touchgfx3HAL8endFrameEv>:
 8010ea4:	b510      	push	{r4, lr}
 8010ea6:	4604      	mov	r4, r0
 8010ea8:	6840      	ldr	r0, [r0, #4]
 8010eaa:	6803      	ldr	r3, [r0, #0]
 8010eac:	689b      	ldr	r3, [r3, #8]
 8010eae:	4798      	blx	r3
 8010eb0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010eb4:	b113      	cbz	r3, 8010ebc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010eb6:	2301      	movs	r3, #1
 8010eb8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010ebc:	bd10      	pop	{r4, pc}

08010ebe <_ZN8touchgfx3HAL10initializeEv>:
 8010ebe:	b510      	push	{r4, lr}
 8010ec0:	4604      	mov	r4, r0
 8010ec2:	f7ef fdf3 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 8010ec6:	f7ef fcff 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 8010eca:	6860      	ldr	r0, [r4, #4]
 8010ecc:	6803      	ldr	r3, [r0, #0]
 8010ece:	68db      	ldr	r3, [r3, #12]
 8010ed0:	4798      	blx	r3
 8010ed2:	68e0      	ldr	r0, [r4, #12]
 8010ed4:	6803      	ldr	r3, [r0, #0]
 8010ed6:	689b      	ldr	r3, [r3, #8]
 8010ed8:	4798      	blx	r3
 8010eda:	6823      	ldr	r3, [r4, #0]
 8010edc:	4620      	mov	r0, r4
 8010ede:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010ee0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ee4:	4718      	bx	r3
	...

08010ee8 <_ZN8touchgfx3HAL4tickEv>:
 8010ee8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	4d5b      	ldr	r5, [pc, #364]	; (801105c <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010eee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010ef2:	4604      	mov	r4, r0
 8010ef4:	4798      	blx	r3
 8010ef6:	2800      	cmp	r0, #0
 8010ef8:	f000 8095 	beq.w	8011026 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010efc:	2001      	movs	r0, #1
 8010efe:	f7ef fc95 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010f02:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010f06:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010f0a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010f0e:	2600      	movs	r6, #0
 8010f10:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010f14:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010f18:	b133      	cbz	r3, 8010f28 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010f1a:	6823      	ldr	r3, [r4, #0]
 8010f1c:	4620      	mov	r0, r4
 8010f1e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010f22:	4798      	blx	r3
 8010f24:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010f28:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010f2c:	6862      	ldr	r2, [r4, #4]
 8010f2e:	f083 0301 	eor.w	r3, r3, #1
 8010f32:	7253      	strb	r3, [r2, #9]
 8010f34:	2601      	movs	r6, #1
 8010f36:	702e      	strb	r6, [r5, #0]
 8010f38:	f004 ff6e 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8010f3c:	6803      	ldr	r3, [r0, #0]
 8010f3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010f40:	4798      	blx	r3
 8010f42:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010f46:	b90b      	cbnz	r3, 8010f4c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010f48:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010f4c:	f004 ff64 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8010f50:	6803      	ldr	r3, [r0, #0]
 8010f52:	695b      	ldr	r3, [r3, #20]
 8010f54:	4798      	blx	r3
 8010f56:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010f58:	6803      	ldr	r3, [r0, #0]
 8010f5a:	691b      	ldr	r3, [r3, #16]
 8010f5c:	4798      	blx	r3
 8010f5e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010f62:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010f66:	3b01      	subs	r3, #1
 8010f68:	b2db      	uxtb	r3, r3
 8010f6a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010f6e:	b10a      	cbz	r2, 8010f74 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010f70:	2b00      	cmp	r3, #0
 8010f72:	d1eb      	bne.n	8010f4c <_ZN8touchgfx3HAL4tickEv+0x64>
 8010f74:	4a3a      	ldr	r2, [pc, #232]	; (8011060 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010f76:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010f7a:	7813      	ldrb	r3, [r2, #0]
 8010f7c:	3301      	adds	r3, #1
 8010f7e:	b25b      	sxtb	r3, r3
 8010f80:	4299      	cmp	r1, r3
 8010f82:	7013      	strb	r3, [r2, #0]
 8010f84:	dc10      	bgt.n	8010fa8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010f86:	68e0      	ldr	r0, [r4, #12]
 8010f88:	2300      	movs	r3, #0
 8010f8a:	7013      	strb	r3, [r2, #0]
 8010f8c:	6803      	ldr	r3, [r0, #0]
 8010f8e:	aa03      	add	r2, sp, #12
 8010f90:	68db      	ldr	r3, [r3, #12]
 8010f92:	a902      	add	r1, sp, #8
 8010f94:	4798      	blx	r3
 8010f96:	6823      	ldr	r3, [r4, #0]
 8010f98:	2800      	cmp	r0, #0
 8010f9a:	d050      	beq.n	801103e <_ZN8touchgfx3HAL4tickEv+0x156>
 8010f9c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010fa0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010fa4:	4620      	mov	r0, r4
 8010fa6:	4798      	blx	r3
 8010fa8:	6960      	ldr	r0, [r4, #20]
 8010faa:	2300      	movs	r3, #0
 8010fac:	f88d 3007 	strb.w	r3, [sp, #7]
 8010fb0:	b158      	cbz	r0, 8010fca <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010fb2:	6803      	ldr	r3, [r0, #0]
 8010fb4:	f10d 0107 	add.w	r1, sp, #7
 8010fb8:	68db      	ldr	r3, [r3, #12]
 8010fba:	4798      	blx	r3
 8010fbc:	b128      	cbz	r0, 8010fca <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010fbe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010fc0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010fc4:	6803      	ldr	r3, [r0, #0]
 8010fc6:	68db      	ldr	r3, [r3, #12]
 8010fc8:	4798      	blx	r3
 8010fca:	f104 001c 	add.w	r0, r4, #28
 8010fce:	f015 fef7 	bl	8026dc0 <_ZN8touchgfx8Gestures4tickEv>
 8010fd2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010fd6:	b30b      	cbz	r3, 801101c <_ZN8touchgfx3HAL4tickEv+0x134>
 8010fd8:	6920      	ldr	r0, [r4, #16]
 8010fda:	6803      	ldr	r3, [r0, #0]
 8010fdc:	691b      	ldr	r3, [r3, #16]
 8010fde:	4798      	blx	r3
 8010fe0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010fe2:	4606      	mov	r6, r0
 8010fe4:	b903      	cbnz	r3, 8010fe8 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010fe6:	6760      	str	r0, [r4, #116]	; 0x74
 8010fe8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010fea:	4a1e      	ldr	r2, [pc, #120]	; (8011064 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010fec:	1af3      	subs	r3, r6, r3
 8010fee:	4293      	cmp	r3, r2
 8010ff0:	d914      	bls.n	801101c <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ff2:	6920      	ldr	r0, [r4, #16]
 8010ff4:	6803      	ldr	r3, [r0, #0]
 8010ff6:	699b      	ldr	r3, [r3, #24]
 8010ff8:	4798      	blx	r3
 8010ffa:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010ffc:	2264      	movs	r2, #100	; 0x64
 8010ffe:	1af3      	subs	r3, r6, r3
 8011000:	fbb3 f3f2 	udiv	r3, r3, r2
 8011004:	fbb0 f0f3 	udiv	r0, r0, r3
 8011008:	2800      	cmp	r0, #0
 801100a:	dc1d      	bgt.n	8011048 <_ZN8touchgfx3HAL4tickEv+0x160>
 801100c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011010:	6920      	ldr	r0, [r4, #16]
 8011012:	6803      	ldr	r3, [r0, #0]
 8011014:	2100      	movs	r1, #0
 8011016:	69db      	ldr	r3, [r3, #28]
 8011018:	4798      	blx	r3
 801101a:	6766      	str	r6, [r4, #116]	; 0x74
 801101c:	f004 fefc 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 8011020:	6803      	ldr	r3, [r0, #0]
 8011022:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011024:	4798      	blx	r3
 8011026:	6823      	ldr	r3, [r4, #0]
 8011028:	4620      	mov	r0, r4
 801102a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801102e:	4798      	blx	r3
 8011030:	2001      	movs	r0, #1
 8011032:	f7ef fc13 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011036:	2300      	movs	r3, #0
 8011038:	702b      	strb	r3, [r5, #0]
 801103a:	b004      	add	sp, #16
 801103c:	bd70      	pop	{r4, r5, r6, pc}
 801103e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011042:	4620      	mov	r0, r4
 8011044:	4798      	blx	r3
 8011046:	e7af      	b.n	8010fa8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011048:	2863      	cmp	r0, #99	; 0x63
 801104a:	bfcb      	itete	gt
 801104c:	2300      	movgt	r3, #0
 801104e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011052:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011056:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801105a:	e7d9      	b.n	8011010 <_ZN8touchgfx3HAL4tickEv+0x128>
 801105c:	20012fc8 	.word	0x20012fc8
 8011060:	20012fc9 	.word	0x20012fc9
 8011064:	05f5e100 	.word	0x05f5e100

08011068 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011068:	b510      	push	{r4, lr}
 801106a:	4604      	mov	r4, r0
 801106c:	f7ef fd4e 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011070:	6863      	ldr	r3, [r4, #4]
 8011072:	2200      	movs	r2, #0
 8011074:	729a      	strb	r2, [r3, #10]
 8011076:	bd10      	pop	{r4, pc}

08011078 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011078:	65c1      	str	r1, [r0, #92]	; 0x5c
 801107a:	301c      	adds	r0, #28
 801107c:	f015 be9e 	b.w	8026dbc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011080 <_ZN8touchgfx3HAL5touchEll>:
 8011080:	b530      	push	{r4, r5, lr}
 8011082:	b087      	sub	sp, #28
 8011084:	4604      	mov	r4, r0
 8011086:	a804      	add	r0, sp, #16
 8011088:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801108c:	f004 fc90 	bl	80159b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011090:	9b04      	ldr	r3, [sp, #16]
 8011092:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011096:	a906      	add	r1, sp, #24
 8011098:	9b05      	ldr	r3, [sp, #20]
 801109a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801109e:	a803      	add	r0, sp, #12
 80110a0:	f004 fcd8 	bl	8015a54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80110a4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80110a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80110ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80110b0:	f104 001c 	add.w	r0, r4, #28
 80110b4:	b189      	cbz	r1, 80110da <_ZN8touchgfx3HAL5touchEll+0x5a>
 80110b6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80110ba:	9300      	str	r3, [sp, #0]
 80110bc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80110c0:	4613      	mov	r3, r2
 80110c2:	462a      	mov	r2, r5
 80110c4:	f015 fe8a 	bl	8026ddc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80110c8:	b128      	cbz	r0, 80110d6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80110ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80110ce:	6623      	str	r3, [r4, #96]	; 0x60
 80110d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80110d4:	6663      	str	r3, [r4, #100]	; 0x64
 80110d6:	b007      	add	sp, #28
 80110d8:	bd30      	pop	{r4, r5, pc}
 80110da:	f015 febf 	bl	8026e5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80110de:	2301      	movs	r3, #1
 80110e0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80110e4:	e7f1      	b.n	80110ca <_ZN8touchgfx3HAL5touchEll+0x4a>

080110e6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80110e6:	b510      	push	{r4, lr}
 80110e8:	2b00      	cmp	r3, #0
 80110ea:	d046      	beq.n	801117a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80110ec:	ea81 0002 	eor.w	r0, r1, r2
 80110f0:	07c4      	lsls	r4, r0, #31
 80110f2:	d508      	bpl.n	8011106 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80110f4:	440b      	add	r3, r1
 80110f6:	3a01      	subs	r2, #1
 80110f8:	428b      	cmp	r3, r1
 80110fa:	d93e      	bls.n	801117a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80110fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011100:	f801 0b01 	strb.w	r0, [r1], #1
 8011104:	e7f8      	b.n	80110f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011106:	07d0      	lsls	r0, r2, #31
 8011108:	bf42      	ittt	mi
 801110a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801110e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011112:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011116:	2b01      	cmp	r3, #1
 8011118:	d911      	bls.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801111a:	ea81 0402 	eor.w	r4, r1, r2
 801111e:	07a4      	lsls	r4, r4, #30
 8011120:	4610      	mov	r0, r2
 8011122:	d022      	beq.n	801116a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011124:	f023 0401 	bic.w	r4, r3, #1
 8011128:	440c      	add	r4, r1
 801112a:	428c      	cmp	r4, r1
 801112c:	4602      	mov	r2, r0
 801112e:	d904      	bls.n	801113a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011130:	8812      	ldrh	r2, [r2, #0]
 8011132:	f821 2b02 	strh.w	r2, [r1], #2
 8011136:	3002      	adds	r0, #2
 8011138:	e7f7      	b.n	801112a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801113a:	f003 0301 	and.w	r3, r3, #1
 801113e:	f023 0003 	bic.w	r0, r3, #3
 8011142:	4408      	add	r0, r1
 8011144:	4288      	cmp	r0, r1
 8011146:	4614      	mov	r4, r2
 8011148:	d904      	bls.n	8011154 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801114a:	6824      	ldr	r4, [r4, #0]
 801114c:	f841 4b04 	str.w	r4, [r1], #4
 8011150:	3204      	adds	r2, #4
 8011152:	e7f7      	b.n	8011144 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011154:	f003 0303 	and.w	r3, r3, #3
 8011158:	440b      	add	r3, r1
 801115a:	3a01      	subs	r2, #1
 801115c:	428b      	cmp	r3, r1
 801115e:	d90c      	bls.n	801117a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011160:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011164:	f801 0b01 	strb.w	r0, [r1], #1
 8011168:	e7f8      	b.n	801115c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801116a:	0790      	lsls	r0, r2, #30
 801116c:	d0e7      	beq.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801116e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011172:	f821 0b02 	strh.w	r0, [r1], #2
 8011176:	3b02      	subs	r3, #2
 8011178:	e7e1      	b.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801117a:	2001      	movs	r0, #1
 801117c:	bd10      	pop	{r4, pc}

0801117e <_ZN8touchgfx3HAL7noTouchEv>:
 801117e:	b510      	push	{r4, lr}
 8011180:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011184:	4604      	mov	r4, r0
 8011186:	b153      	cbz	r3, 801119e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011188:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801118c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011190:	2101      	movs	r1, #1
 8011192:	301c      	adds	r0, #28
 8011194:	f015 fe62 	bl	8026e5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011198:	2300      	movs	r3, #0
 801119a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801119e:	bd10      	pop	{r4, pc}

080111a0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80111a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111a4:	b085      	sub	sp, #20
 80111a6:	ad04      	add	r5, sp, #16
 80111a8:	4604      	mov	r4, r0
 80111aa:	2000      	movs	r0, #0
 80111ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80111b0:	69a0      	ldr	r0, [r4, #24]
 80111b2:	6806      	ldr	r6, [r0, #0]
 80111b4:	9501      	str	r5, [sp, #4]
 80111b6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80111ba:	9500      	str	r5, [sp, #0]
 80111bc:	6835      	ldr	r5, [r6, #0]
 80111be:	4699      	mov	r9, r3
 80111c0:	460f      	mov	r7, r1
 80111c2:	4690      	mov	r8, r2
 80111c4:	47a8      	blx	r5
 80111c6:	4d10      	ldr	r5, [pc, #64]	; (8011208 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80111c8:	4606      	mov	r6, r0
 80111ca:	f8a5 9000 	strh.w	r9, [r5]
 80111ce:	f7f2 fd9f 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80111d2:	6803      	ldr	r3, [r0, #0]
 80111d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111d6:	4798      	blx	r3
 80111d8:	b128      	cbz	r0, 80111e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80111da:	2801      	cmp	r0, #1
 80111dc:	d00b      	beq.n	80111f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80111de:	4630      	mov	r0, r6
 80111e0:	b005      	add	sp, #20
 80111e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111e6:	882b      	ldrh	r3, [r5, #0]
 80111e8:	fb08 7203 	mla	r2, r8, r3, r7
 80111ec:	9b03      	ldr	r3, [sp, #12]
 80111ee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80111f2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80111f4:	e7f3      	b.n	80111de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80111f6:	882a      	ldrh	r2, [r5, #0]
 80111f8:	9b03      	ldr	r3, [sp, #12]
 80111fa:	fb08 7202 	mla	r2, r8, r2, r7
 80111fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011202:	1a9a      	subs	r2, r3, r2
 8011204:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011206:	e7ea      	b.n	80111de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011208:	20012fbe 	.word	0x20012fbe

0801120c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801120c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801120e:	b08b      	sub	sp, #44	; 0x2c
 8011210:	4617      	mov	r7, r2
 8011212:	4604      	mov	r4, r0
 8011214:	460e      	mov	r6, r1
 8011216:	461d      	mov	r5, r3
 8011218:	f7f2 fd7a 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 801121c:	6803      	ldr	r3, [r0, #0]
 801121e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011220:	4798      	blx	r3
 8011222:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011226:	9007      	str	r0, [sp, #28]
 8011228:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801122c:	4b0d      	ldr	r3, [pc, #52]	; (8011264 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801122e:	6822      	ldr	r2, [r4, #0]
 8011230:	881b      	ldrh	r3, [r3, #0]
 8011232:	9306      	str	r3, [sp, #24]
 8011234:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011238:	9305      	str	r3, [sp, #20]
 801123a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801123e:	9304      	str	r3, [sp, #16]
 8011240:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011244:	9303      	str	r3, [sp, #12]
 8011246:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801124a:	9302      	str	r3, [sp, #8]
 801124c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011250:	e9cd 5300 	strd	r5, r3, [sp]
 8011254:	4631      	mov	r1, r6
 8011256:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011258:	463b      	mov	r3, r7
 801125a:	2200      	movs	r2, #0
 801125c:	4620      	mov	r0, r4
 801125e:	47a8      	blx	r5
 8011260:	b00b      	add	sp, #44	; 0x2c
 8011262:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011264:	20012fbe 	.word	0x20012fbe

08011268 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011268:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801126c:	4698      	mov	r8, r3
 801126e:	6803      	ldr	r3, [r0, #0]
 8011270:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011272:	4b15      	ldr	r3, [pc, #84]	; (80112c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011274:	b08b      	sub	sp, #44	; 0x2c
 8011276:	4617      	mov	r7, r2
 8011278:	f8b3 9000 	ldrh.w	r9, [r3]
 801127c:	460e      	mov	r6, r1
 801127e:	4604      	mov	r4, r0
 8011280:	f7f2 fd46 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 8011284:	6803      	ldr	r3, [r0, #0]
 8011286:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011288:	4798      	blx	r3
 801128a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801128e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011292:	2302      	movs	r3, #2
 8011294:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011298:	2301      	movs	r3, #1
 801129a:	9305      	str	r3, [sp, #20]
 801129c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80112a0:	9304      	str	r3, [sp, #16]
 80112a2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80112a6:	9303      	str	r3, [sp, #12]
 80112a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80112ac:	9302      	str	r3, [sp, #8]
 80112ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80112b2:	2200      	movs	r2, #0
 80112b4:	e9cd 8300 	strd	r8, r3, [sp]
 80112b8:	4631      	mov	r1, r6
 80112ba:	463b      	mov	r3, r7
 80112bc:	4620      	mov	r0, r4
 80112be:	47a8      	blx	r5
 80112c0:	b00b      	add	sp, #44	; 0x2c
 80112c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112c6:	bf00      	nop
 80112c8:	20012fbe 	.word	0x20012fbe

080112cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80112cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80112d0:	4698      	mov	r8, r3
 80112d2:	6803      	ldr	r3, [r0, #0]
 80112d4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80112d6:	4b11      	ldr	r3, [pc, #68]	; (801131c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80112d8:	b087      	sub	sp, #28
 80112da:	f8b3 9000 	ldrh.w	r9, [r3]
 80112de:	460e      	mov	r6, r1
 80112e0:	4617      	mov	r7, r2
 80112e2:	4604      	mov	r4, r0
 80112e4:	f7f2 fd14 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80112e8:	6803      	ldr	r3, [r0, #0]
 80112ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112ec:	4798      	blx	r3
 80112ee:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80112f2:	f8cd 900c 	str.w	r9, [sp, #12]
 80112f6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80112fa:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80112fe:	9302      	str	r3, [sp, #8]
 8011300:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011304:	9301      	str	r3, [sp, #4]
 8011306:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801130a:	9300      	str	r3, [sp, #0]
 801130c:	463a      	mov	r2, r7
 801130e:	4643      	mov	r3, r8
 8011310:	4631      	mov	r1, r6
 8011312:	4620      	mov	r0, r4
 8011314:	47a8      	blx	r5
 8011316:	b007      	add	sp, #28
 8011318:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801131c:	20012fbe 	.word	0x20012fbe

08011320 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011324:	4604      	mov	r4, r0
 8011326:	b08f      	sub	sp, #60	; 0x3c
 8011328:	4610      	mov	r0, r2
 801132a:	460d      	mov	r5, r1
 801132c:	4691      	mov	r9, r2
 801132e:	461e      	mov	r6, r3
 8011330:	f008 f92e 	bl	8019590 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011334:	2800      	cmp	r0, #0
 8011336:	f000 809d 	beq.w	8011474 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801133a:	6823      	ldr	r3, [r4, #0]
 801133c:	f8df b198 	ldr.w	fp, [pc, #408]	; 80114d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011340:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011342:	f8df a198 	ldr.w	sl, [pc, #408]	; 80114dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011346:	4f61      	ldr	r7, [pc, #388]	; (80114cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011348:	4620      	mov	r0, r4
 801134a:	4798      	blx	r3
 801134c:	6823      	ldr	r3, [r4, #0]
 801134e:	4620      	mov	r0, r4
 8011350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011352:	4798      	blx	r3
 8011354:	f8bb 3000 	ldrh.w	r3, [fp]
 8011358:	9301      	str	r3, [sp, #4]
 801135a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801135e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011362:	9302      	str	r3, [sp, #8]
 8011364:	883b      	ldrh	r3, [r7, #0]
 8011366:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801136a:	9303      	str	r3, [sp, #12]
 801136c:	4b58      	ldr	r3, [pc, #352]	; (80114d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801136e:	9305      	str	r3, [sp, #20]
 8011370:	881a      	ldrh	r2, [r3, #0]
 8011372:	9204      	str	r2, [sp, #16]
 8011374:	4640      	mov	r0, r8
 8011376:	f008 f99f 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801137a:	8038      	strh	r0, [r7, #0]
 801137c:	4640      	mov	r0, r8
 801137e:	f008 f9cf 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011382:	9b05      	ldr	r3, [sp, #20]
 8011384:	b280      	uxth	r0, r0
 8011386:	8018      	strh	r0, [r3, #0]
 8011388:	4b52      	ldr	r3, [pc, #328]	; (80114d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801138a:	781b      	ldrb	r3, [r3, #0]
 801138c:	2b00      	cmp	r3, #0
 801138e:	d174      	bne.n	801147a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011390:	883b      	ldrh	r3, [r7, #0]
 8011392:	f8ab 3000 	strh.w	r3, [fp]
 8011396:	f8aa 0000 	strh.w	r0, [sl]
 801139a:	4648      	mov	r0, r9
 801139c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80113a0:	f008 f8f6 	bl	8019590 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80113a4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80113a8:	2200      	movs	r2, #0
 80113aa:	4611      	mov	r1, r2
 80113ac:	4628      	mov	r0, r5
 80113ae:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80113b2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80113b6:	f7f1 f9d0 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 80113ba:	2301      	movs	r3, #1
 80113bc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80113c0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80113c4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80113c8:	2b00      	cmp	r3, #0
 80113ca:	dd5c      	ble.n	8011486 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80113cc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80113d0:	2b00      	cmp	r3, #0
 80113d2:	dd58      	ble.n	8011486 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80113d4:	462a      	mov	r2, r5
 80113d6:	ab0a      	add	r3, sp, #40	; 0x28
 80113d8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80113dc:	6851      	ldr	r1, [r2, #4]
 80113de:	c303      	stmia	r3!, {r0, r1}
 80113e0:	4631      	mov	r1, r6
 80113e2:	a80a      	add	r0, sp, #40	; 0x28
 80113e4:	f7ff fc06 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 80113e8:	4b38      	ldr	r3, [pc, #224]	; (80114cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80113ea:	f9b3 2000 	ldrsh.w	r2, [r3]
 80113ee:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80113f2:	2100      	movs	r1, #0
 80113f4:	aa0a      	add	r2, sp, #40	; 0x28
 80113f6:	4b36      	ldr	r3, [pc, #216]	; (80114d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80113f8:	910c      	str	r1, [sp, #48]	; 0x30
 80113fa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80113fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011402:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011406:	ab08      	add	r3, sp, #32
 8011408:	e883 0003 	stmia.w	r3, {r0, r1}
 801140c:	4618      	mov	r0, r3
 801140e:	a90c      	add	r1, sp, #48	; 0x30
 8011410:	f7ff fbf0 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8011414:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011416:	2b00      	cmp	r3, #0
 8011418:	d13c      	bne.n	8011494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801141a:	2000      	movs	r0, #0
 801141c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011420:	2600      	movs	r6, #0
 8011422:	682a      	ldr	r2, [r5, #0]
 8011424:	696b      	ldr	r3, [r5, #20]
 8011426:	616e      	str	r6, [r5, #20]
 8011428:	9305      	str	r3, [sp, #20]
 801142a:	6892      	ldr	r2, [r2, #8]
 801142c:	a908      	add	r1, sp, #32
 801142e:	4628      	mov	r0, r5
 8011430:	4790      	blx	r2
 8011432:	9b05      	ldr	r3, [sp, #20]
 8011434:	616b      	str	r3, [r5, #20]
 8011436:	4652      	mov	r2, sl
 8011438:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 801143c:	4649      	mov	r1, r9
 801143e:	4628      	mov	r0, r5
 8011440:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011444:	f7f1 f989 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8011448:	4b23      	ldr	r3, [pc, #140]	; (80114d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801144a:	9a01      	ldr	r2, [sp, #4]
 801144c:	801a      	strh	r2, [r3, #0]
 801144e:	4b23      	ldr	r3, [pc, #140]	; (80114dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011450:	9a02      	ldr	r2, [sp, #8]
 8011452:	801a      	strh	r2, [r3, #0]
 8011454:	4b1d      	ldr	r3, [pc, #116]	; (80114cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011456:	9a03      	ldr	r2, [sp, #12]
 8011458:	801a      	strh	r2, [r3, #0]
 801145a:	4b1d      	ldr	r3, [pc, #116]	; (80114d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801145c:	9a04      	ldr	r2, [sp, #16]
 801145e:	801a      	strh	r2, [r3, #0]
 8011460:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011464:	6823      	ldr	r3, [r4, #0]
 8011466:	4620      	mov	r0, r4
 8011468:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801146a:	4798      	blx	r3
 801146c:	6823      	ldr	r3, [r4, #0]
 801146e:	4620      	mov	r0, r4
 8011470:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011472:	4798      	blx	r3
 8011474:	b00f      	add	sp, #60	; 0x3c
 8011476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801147a:	883b      	ldrh	r3, [r7, #0]
 801147c:	f8ab 0000 	strh.w	r0, [fp]
 8011480:	f8aa 3000 	strh.w	r3, [sl]
 8011484:	e789      	b.n	801139a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011486:	462a      	mov	r2, r5
 8011488:	ab0a      	add	r3, sp, #40	; 0x28
 801148a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801148e:	6851      	ldr	r1, [r2, #4]
 8011490:	c303      	stmia	r3!, {r0, r1}
 8011492:	e7a9      	b.n	80113e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011494:	a807      	add	r0, sp, #28
 8011496:	f008 fa7f 	bl	8019998 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801149a:	4606      	mov	r6, r0
 801149c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801149e:	6803      	ldr	r3, [r0, #0]
 80114a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114a2:	4798      	blx	r3
 80114a4:	4286      	cmp	r6, r0
 80114a6:	d1b8      	bne.n	801141a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80114a8:	f7f2 fc32 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80114ac:	6803      	ldr	r3, [r0, #0]
 80114ae:	4606      	mov	r6, r0
 80114b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80114b2:	9305      	str	r3, [sp, #20]
 80114b4:	a807      	add	r0, sp, #28
 80114b6:	f008 fa6f 	bl	8019998 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80114ba:	9b05      	ldr	r3, [sp, #20]
 80114bc:	4601      	mov	r1, r0
 80114be:	4630      	mov	r0, r6
 80114c0:	4798      	blx	r3
 80114c2:	f080 0001 	eor.w	r0, r0, #1
 80114c6:	b2c0      	uxtb	r0, r0
 80114c8:	e7a8      	b.n	801141c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80114ca:	bf00      	nop
 80114cc:	20012fb8 	.word	0x20012fb8
 80114d0:	20012fba 	.word	0x20012fba
 80114d4:	20012fbc 	.word	0x20012fbc
 80114d8:	20012fbe 	.word	0x20012fbe
 80114dc:	20012fc0 	.word	0x20012fc0

080114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80114e0:	b510      	push	{r4, lr}
 80114e2:	4b07      	ldr	r3, [pc, #28]	; (8011500 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80114e4:	781b      	ldrb	r3, [r3, #0]
 80114e6:	4604      	mov	r4, r0
 80114e8:	b13b      	cbz	r3, 80114fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80114ea:	6803      	ldr	r3, [r0, #0]
 80114ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80114ee:	4798      	blx	r3
 80114f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80114f2:	4283      	cmp	r3, r0
 80114f4:	d101      	bne.n	80114fa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80114f6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80114f8:	bd10      	pop	{r4, pc}
 80114fa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80114fc:	e7fc      	b.n	80114f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80114fe:	bf00      	nop
 8011500:	20012fc2 	.word	0x20012fc2

08011504 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011508:	b08a      	sub	sp, #40	; 0x28
 801150a:	461d      	mov	r5, r3
 801150c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011510:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011514:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011518:	f8ad 3018 	strh.w	r3, [sp, #24]
 801151c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011520:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011524:	2400      	movs	r4, #0
 8011526:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801152a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801152e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011532:	4690      	mov	r8, r2
 8011534:	4607      	mov	r7, r0
 8011536:	9404      	str	r4, [sp, #16]
 8011538:	f88d 4020 	strb.w	r4, [sp, #32]
 801153c:	f7ff ffd0 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011540:	fb06 8505 	mla	r5, r6, r5, r8
 8011544:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011548:	6878      	ldr	r0, [r7, #4]
 801154a:	9505      	str	r5, [sp, #20]
 801154c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011550:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011554:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011558:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801155c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011560:	6803      	ldr	r3, [r0, #0]
 8011562:	a901      	add	r1, sp, #4
 8011564:	685b      	ldr	r3, [r3, #4]
 8011566:	4798      	blx	r3
 8011568:	b00a      	add	sp, #40	; 0x28
 801156a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801156e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801156e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011572:	b08b      	sub	sp, #44	; 0x2c
 8011574:	2400      	movs	r4, #0
 8011576:	461d      	mov	r5, r3
 8011578:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801157c:	4688      	mov	r8, r1
 801157e:	4691      	mov	r9, r2
 8011580:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011584:	9404      	str	r4, [sp, #16]
 8011586:	4607      	mov	r7, r0
 8011588:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801158c:	f7ff ffa8 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011590:	fb06 9505 	mla	r5, r6, r5, r9
 8011594:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011598:	f8ad 3018 	strh.w	r3, [sp, #24]
 801159c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80115a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80115a4:	6878      	ldr	r0, [r7, #4]
 80115a6:	9505      	str	r5, [sp, #20]
 80115a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80115ac:	f8ad 401c 	strh.w	r4, [sp, #28]
 80115b0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80115b4:	f8cd 8010 	str.w	r8, [sp, #16]
 80115b8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80115bc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80115c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80115c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80115c8:	6803      	ldr	r3, [r0, #0]
 80115ca:	a901      	add	r1, sp, #4
 80115cc:	685b      	ldr	r3, [r3, #4]
 80115ce:	4798      	blx	r3
 80115d0:	b00b      	add	sp, #44	; 0x2c
 80115d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080115d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80115d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115dc:	b08a      	sub	sp, #40	; 0x28
 80115de:	4698      	mov	r8, r3
 80115e0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80115e4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80115e8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80115ec:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80115f0:	2300      	movs	r3, #0
 80115f2:	2d0b      	cmp	r5, #11
 80115f4:	4606      	mov	r6, r0
 80115f6:	9304      	str	r3, [sp, #16]
 80115f8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80115fc:	d138      	bne.n	8011670 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80115fe:	2380      	movs	r3, #128	; 0x80
 8011600:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011604:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011608:	f8ad 3018 	strh.w	r3, [sp, #24]
 801160c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011610:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011614:	f88d 0020 	strb.w	r0, [sp, #32]
 8011618:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801161c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011620:	4630      	mov	r0, r6
 8011622:	9203      	str	r2, [sp, #12]
 8011624:	f7ff ff5c 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011628:	2c0b      	cmp	r4, #11
 801162a:	bf98      	it	ls
 801162c:	4b1b      	ldrls	r3, [pc, #108]	; (801169c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801162e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011632:	bf98      	it	ls
 8011634:	5d19      	ldrbls	r1, [r3, r4]
 8011636:	f8ad 701e 	strh.w	r7, [sp, #30]
 801163a:	bf88      	it	hi
 801163c:	2100      	movhi	r1, #0
 801163e:	fb02 8307 	mla	r3, r2, r7, r8
 8011642:	10c9      	asrs	r1, r1, #3
 8011644:	fb01 0003 	mla	r0, r1, r3, r0
 8011648:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801164c:	9005      	str	r0, [sp, #20]
 801164e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011652:	6870      	ldr	r0, [r6, #4]
 8011654:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011658:	2300      	movs	r3, #0
 801165a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801165e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011662:	6803      	ldr	r3, [r0, #0]
 8011664:	a901      	add	r1, sp, #4
 8011666:	685b      	ldr	r3, [r3, #4]
 8011668:	4798      	blx	r3
 801166a:	b00a      	add	sp, #40	; 0x28
 801166c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011670:	2d02      	cmp	r5, #2
 8011672:	d109      	bne.n	8011688 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011674:	28ff      	cmp	r0, #255	; 0xff
 8011676:	d105      	bne.n	8011684 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011678:	f1bc 0f00 	cmp.w	ip, #0
 801167c:	bf14      	ite	ne
 801167e:	2340      	movne	r3, #64	; 0x40
 8011680:	2320      	moveq	r3, #32
 8011682:	e7bd      	b.n	8011600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011684:	2340      	movs	r3, #64	; 0x40
 8011686:	e7bb      	b.n	8011600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011688:	28ff      	cmp	r0, #255	; 0xff
 801168a:	d105      	bne.n	8011698 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801168c:	f1bc 0f00 	cmp.w	ip, #0
 8011690:	bf14      	ite	ne
 8011692:	2304      	movne	r3, #4
 8011694:	2301      	moveq	r3, #1
 8011696:	e7b3      	b.n	8011600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011698:	2304      	movs	r3, #4
 801169a:	e7b1      	b.n	8011600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801169c:	0802f1d0 	.word	0x0802f1d0

080116a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80116a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116a4:	b08b      	sub	sp, #44	; 0x2c
 80116a6:	461d      	mov	r5, r3
 80116a8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80116ac:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80116b0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80116b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80116b8:	bf14      	ite	ne
 80116ba:	2308      	movne	r3, #8
 80116bc:	2302      	moveq	r3, #2
 80116be:	2400      	movs	r4, #0
 80116c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80116c4:	4688      	mov	r8, r1
 80116c6:	4693      	mov	fp, r2
 80116c8:	9404      	str	r4, [sp, #16]
 80116ca:	4607      	mov	r7, r0
 80116cc:	f7ff ff08 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116d0:	2e0b      	cmp	r6, #11
 80116d2:	bf98      	it	ls
 80116d4:	4b15      	ldrls	r3, [pc, #84]	; (801172c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80116d6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80116da:	bf98      	it	ls
 80116dc:	5d9c      	ldrbls	r4, [r3, r6]
 80116de:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80116e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80116e6:	fb05 b50a 	mla	r5, r5, sl, fp
 80116ea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80116ee:	f8ad 301a 	strh.w	r3, [sp, #26]
 80116f2:	10e4      	asrs	r4, r4, #3
 80116f4:	fb04 0405 	mla	r4, r4, r5, r0
 80116f8:	2300      	movs	r3, #0
 80116fa:	6878      	ldr	r0, [r7, #4]
 80116fc:	9405      	str	r4, [sp, #20]
 80116fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011702:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011706:	f8cd 8010 	str.w	r8, [sp, #16]
 801170a:	f88d 9020 	strb.w	r9, [sp, #32]
 801170e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011712:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011716:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801171a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801171e:	6803      	ldr	r3, [r0, #0]
 8011720:	a901      	add	r1, sp, #4
 8011722:	685b      	ldr	r3, [r3, #4]
 8011724:	4798      	blx	r3
 8011726:	b00b      	add	sp, #44	; 0x2c
 8011728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801172c:	0802f1d0 	.word	0x0802f1d0

08011730 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011734:	461e      	mov	r6, r3
 8011736:	4b0a      	ldr	r3, [pc, #40]	; (8011760 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011738:	460f      	mov	r7, r1
 801173a:	881d      	ldrh	r5, [r3, #0]
 801173c:	4690      	mov	r8, r2
 801173e:	f7f2 fae7 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 8011742:	6803      	ldr	r3, [r0, #0]
 8011744:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011746:	4798      	blx	r3
 8011748:	280b      	cmp	r0, #11
 801174a:	bf9a      	itte	ls
 801174c:	4b05      	ldrls	r3, [pc, #20]	; (8011764 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801174e:	5c1c      	ldrbls	r4, [r3, r0]
 8011750:	2400      	movhi	r4, #0
 8011752:	fb08 7005 	mla	r0, r8, r5, r7
 8011756:	10e4      	asrs	r4, r4, #3
 8011758:	fb04 6000 	mla	r0, r4, r0, r6
 801175c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011760:	20012fbe 	.word	0x20012fbe
 8011764:	0802f1d0 	.word	0x0802f1d0

08011768 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011768:	b5f0      	push	{r4, r5, r6, r7, lr}
 801176a:	b08b      	sub	sp, #44	; 0x2c
 801176c:	461f      	mov	r7, r3
 801176e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011772:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011776:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801177a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801177e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011782:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011786:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801178a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801178e:	2500      	movs	r5, #0
 8011790:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011794:	f88d 3020 	strb.w	r3, [sp, #32]
 8011798:	4604      	mov	r4, r0
 801179a:	4616      	mov	r6, r2
 801179c:	9504      	str	r5, [sp, #16]
 801179e:	f7ff fe9f 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80117a2:	463a      	mov	r2, r7
 80117a4:	4631      	mov	r1, r6
 80117a6:	4603      	mov	r3, r0
 80117a8:	4620      	mov	r0, r4
 80117aa:	f7ff ffc1 	bl	8011730 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80117ae:	4b0e      	ldr	r3, [pc, #56]	; (80117e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80117b0:	9005      	str	r0, [sp, #20]
 80117b2:	881b      	ldrh	r3, [r3, #0]
 80117b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80117b8:	f7f2 faaa 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80117bc:	6803      	ldr	r3, [r0, #0]
 80117be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117c0:	4798      	blx	r3
 80117c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80117c4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80117c8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80117cc:	9304      	str	r3, [sp, #16]
 80117ce:	6860      	ldr	r0, [r4, #4]
 80117d0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80117d4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80117d8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80117dc:	6803      	ldr	r3, [r0, #0]
 80117de:	a901      	add	r1, sp, #4
 80117e0:	685b      	ldr	r3, [r3, #4]
 80117e2:	4798      	blx	r3
 80117e4:	b00b      	add	sp, #44	; 0x2c
 80117e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117e8:	20012fbe 	.word	0x20012fbe

080117ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80117ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117ee:	b08d      	sub	sp, #52	; 0x34
 80117f0:	466b      	mov	r3, sp
 80117f2:	e883 0006 	stmia.w	r3, {r1, r2}
 80117f6:	2300      	movs	r3, #0
 80117f8:	9306      	str	r3, [sp, #24]
 80117fa:	6803      	ldr	r3, [r0, #0]
 80117fc:	f8bd 6000 	ldrh.w	r6, [sp]
 8011800:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011802:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011806:	2501      	movs	r5, #1
 8011808:	9503      	str	r5, [sp, #12]
 801180a:	4604      	mov	r4, r0
 801180c:	4798      	blx	r3
 801180e:	463a      	mov	r2, r7
 8011810:	4631      	mov	r1, r6
 8011812:	4603      	mov	r3, r0
 8011814:	4620      	mov	r0, r4
 8011816:	f7ff ff8b 	bl	8011730 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801181a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801181c:	9307      	str	r3, [sp, #28]
 801181e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011822:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011826:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801182a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801182e:	4b0f      	ldr	r3, [pc, #60]	; (801186c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011830:	9004      	str	r0, [sp, #16]
 8011832:	881b      	ldrh	r3, [r3, #0]
 8011834:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011838:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801183c:	f7f2 fa68 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 8011840:	6803      	ldr	r3, [r0, #0]
 8011842:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011844:	4798      	blx	r3
 8011846:	23ff      	movs	r3, #255	; 0xff
 8011848:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801184c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011850:	6860      	ldr	r0, [r4, #4]
 8011852:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011856:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801185a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801185e:	6803      	ldr	r3, [r0, #0]
 8011860:	a903      	add	r1, sp, #12
 8011862:	685b      	ldr	r3, [r3, #4]
 8011864:	4798      	blx	r3
 8011866:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011868:	b00d      	add	sp, #52	; 0x34
 801186a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801186c:	20012fbe 	.word	0x20012fbe

08011870 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011874:	b08c      	sub	sp, #48	; 0x30
 8011876:	461e      	mov	r6, r3
 8011878:	466d      	mov	r5, sp
 801187a:	2300      	movs	r3, #0
 801187c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011880:	9306      	str	r3, [sp, #24]
 8011882:	6803      	ldr	r3, [r0, #0]
 8011884:	f8bd 7000 	ldrh.w	r7, [sp]
 8011888:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801188a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801188e:	2501      	movs	r5, #1
 8011890:	9503      	str	r5, [sp, #12]
 8011892:	4604      	mov	r4, r0
 8011894:	4798      	blx	r3
 8011896:	4642      	mov	r2, r8
 8011898:	4639      	mov	r1, r7
 801189a:	4603      	mov	r3, r0
 801189c:	4620      	mov	r0, r4
 801189e:	f7ff ff47 	bl	8011730 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80118a2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80118a6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80118aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80118ae:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80118b2:	4b11      	ldr	r3, [pc, #68]	; (80118f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80118b4:	9004      	str	r0, [sp, #16]
 80118b6:	881b      	ldrh	r3, [r3, #0]
 80118b8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80118bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80118be:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80118c2:	9607      	str	r6, [sp, #28]
 80118c4:	f7f2 fa24 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80118c8:	6803      	ldr	r3, [r0, #0]
 80118ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118cc:	4798      	blx	r3
 80118ce:	23ff      	movs	r3, #255	; 0xff
 80118d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80118d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80118d8:	6860      	ldr	r0, [r4, #4]
 80118da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80118de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80118e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80118e6:	6803      	ldr	r3, [r0, #0]
 80118e8:	a903      	add	r1, sp, #12
 80118ea:	685b      	ldr	r3, [r3, #4]
 80118ec:	4798      	blx	r3
 80118ee:	4630      	mov	r0, r6
 80118f0:	b00c      	add	sp, #48	; 0x30
 80118f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118f6:	bf00      	nop
 80118f8:	20012fbe 	.word	0x20012fbe

080118fc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80118fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80118fe:	b085      	sub	sp, #20
 8011900:	ac02      	add	r4, sp, #8
 8011902:	e884 0006 	stmia.w	r4, {r1, r2}
 8011906:	4605      	mov	r5, r0
 8011908:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801190c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011910:	f7ff fde6 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011914:	463a      	mov	r2, r7
 8011916:	4603      	mov	r3, r0
 8011918:	4631      	mov	r1, r6
 801191a:	4628      	mov	r0, r5
 801191c:	f7ff ff08 	bl	8011730 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011920:	4a05      	ldr	r2, [pc, #20]	; (8011938 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011922:	682b      	ldr	r3, [r5, #0]
 8011924:	8812      	ldrh	r2, [r2, #0]
 8011926:	9200      	str	r2, [sp, #0]
 8011928:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801192a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801192e:	4603      	mov	r3, r0
 8011930:	4628      	mov	r0, r5
 8011932:	47b0      	blx	r6
 8011934:	b005      	add	sp, #20
 8011936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011938:	20012fbe 	.word	0x20012fbe

0801193c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801193c:	b570      	push	{r4, r5, r6, lr}
 801193e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011942:	4604      	mov	r4, r0
 8011944:	b19b      	cbz	r3, 801196e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011946:	2002      	movs	r0, #2
 8011948:	f7ee ffa0 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801194c:	2300      	movs	r3, #0
 801194e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011952:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011956:	6823      	ldr	r3, [r4, #0]
 8011958:	4620      	mov	r0, r4
 801195a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801195e:	f7ff fdbf 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011962:	462b      	mov	r3, r5
 8011964:	4601      	mov	r1, r0
 8011966:	4620      	mov	r0, r4
 8011968:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801196c:	4718      	bx	r3
 801196e:	bd70      	pop	{r4, r5, r6, pc}

08011970 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011970:	b538      	push	{r3, r4, r5, lr}
 8011972:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011976:	428b      	cmp	r3, r1
 8011978:	4604      	mov	r4, r0
 801197a:	460d      	mov	r5, r1
 801197c:	d006      	beq.n	801198c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801197e:	6803      	ldr	r3, [r0, #0]
 8011980:	b929      	cbnz	r1, 801198e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011982:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011986:	4798      	blx	r3
 8011988:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801198c:	bd38      	pop	{r3, r4, r5, pc}
 801198e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011992:	e7f8      	b.n	8011986 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011994 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011994:	b510      	push	{r4, lr}
 8011996:	4b0d      	ldr	r3, [pc, #52]	; (80119cc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011998:	781b      	ldrb	r3, [r3, #0]
 801199a:	4604      	mov	r4, r0
 801199c:	b95b      	cbnz	r3, 80119b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801199e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80119a2:	2b02      	cmp	r3, #2
 80119a4:	d007      	beq.n	80119b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80119a6:	6840      	ldr	r0, [r0, #4]
 80119a8:	f000 f92c 	bl	8011c04 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80119ac:	b118      	cbz	r0, 80119b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80119ae:	6862      	ldr	r2, [r4, #4]
 80119b0:	7a53      	ldrb	r3, [r2, #9]
 80119b2:	2b00      	cmp	r3, #0
 80119b4:	d0fc      	beq.n	80119b0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80119b6:	f7ef f8a1 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80119ba:	4620      	mov	r0, r4
 80119bc:	2100      	movs	r1, #0
 80119be:	f7ff ffd7 	bl	8011970 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80119c2:	4620      	mov	r0, r4
 80119c4:	f7ff fd8c 	bl	80114e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80119c8:	bd10      	pop	{r4, pc}
 80119ca:	bf00      	nop
 80119cc:	20012fc2 	.word	0x20012fc2

080119d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80119d0:	b570      	push	{r4, r5, r6, lr}
 80119d2:	4604      	mov	r4, r0
 80119d4:	6803      	ldr	r3, [r0, #0]
 80119d6:	b919      	cbnz	r1, 80119e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80119d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80119da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119de:	4718      	bx	r3
 80119e0:	2200      	movs	r2, #0
 80119e2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80119e6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80119ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80119ec:	4798      	blx	r3
 80119ee:	6863      	ldr	r3, [r4, #4]
 80119f0:	2101      	movs	r1, #1
 80119f2:	4605      	mov	r5, r0
 80119f4:	7299      	strb	r1, [r3, #10]
 80119f6:	4620      	mov	r0, r4
 80119f8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80119fc:	f7ff ffb8 	bl	8011970 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011a00:	4628      	mov	r0, r5
 8011a02:	bd70      	pop	{r4, r5, r6, pc}

08011a04 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011a04:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011a08:	1a13      	subs	r3, r2, r0
 8011a0a:	4258      	negs	r0, r3
 8011a0c:	4158      	adcs	r0, r3
 8011a0e:	4770      	bx	lr

08011a10 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011a10:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011a14:	1a9b      	subs	r3, r3, r2
 8011a16:	2b00      	cmp	r3, #0
 8011a18:	bfdc      	itt	le
 8011a1a:	6882      	ldrle	r2, [r0, #8]
 8011a1c:	189b      	addle	r3, r3, r2
 8011a1e:	2b01      	cmp	r3, #1
 8011a20:	bfcc      	ite	gt
 8011a22:	2000      	movgt	r0, #0
 8011a24:	2001      	movle	r0, #1
 8011a26:	4770      	bx	lr

08011a28 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011a28:	6902      	ldr	r2, [r0, #16]
 8011a2a:	6843      	ldr	r3, [r0, #4]
 8011a2c:	2024      	movs	r0, #36	; 0x24
 8011a2e:	fb00 3002 	mla	r0, r0, r2, r3
 8011a32:	4770      	bx	lr

08011a34 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011a34:	6803      	ldr	r3, [r0, #0]
 8011a36:	691b      	ldr	r3, [r3, #16]
 8011a38:	4718      	bx	r3

08011a3a <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011a3a:	b570      	push	{r4, r5, r6, lr}
 8011a3c:	2301      	movs	r3, #1
 8011a3e:	7203      	strb	r3, [r0, #8]
 8011a40:	4604      	mov	r4, r0
 8011a42:	6840      	ldr	r0, [r0, #4]
 8011a44:	6803      	ldr	r3, [r0, #0]
 8011a46:	699b      	ldr	r3, [r3, #24]
 8011a48:	4798      	blx	r3
 8011a4a:	6803      	ldr	r3, [r0, #0]
 8011a4c:	2b40      	cmp	r3, #64	; 0x40
 8011a4e:	4605      	mov	r5, r0
 8011a50:	d00c      	beq.n	8011a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a52:	d810      	bhi.n	8011a76 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8011a54:	2b04      	cmp	r3, #4
 8011a56:	d01d      	beq.n	8011a94 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011a58:	d804      	bhi.n	8011a64 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011a5a:	2b01      	cmp	r3, #1
 8011a5c:	d006      	beq.n	8011a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a5e:	2b02      	cmp	r3, #2
 8011a60:	d02c      	beq.n	8011abc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011a62:	bd70      	pop	{r4, r5, r6, pc}
 8011a64:	2b08      	cmp	r3, #8
 8011a66:	d01d      	beq.n	8011aa4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011a68:	2b20      	cmp	r3, #32
 8011a6a:	d1fa      	bne.n	8011a62 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011a6c:	6823      	ldr	r3, [r4, #0]
 8011a6e:	4620      	mov	r0, r4
 8011a70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011a72:	4798      	blx	r3
 8011a74:	e013      	b.n	8011a9e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011a76:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011a7a:	d0f7      	beq.n	8011a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a7c:	d804      	bhi.n	8011a88 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011a7e:	2b80      	cmp	r3, #128	; 0x80
 8011a80:	d0f4      	beq.n	8011a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011a86:	e7f0      	b.n	8011a6a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011a88:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011a8c:	d0ee      	beq.n	8011a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a8e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011a92:	e7e5      	b.n	8011a60 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011a94:	6823      	ldr	r3, [r4, #0]
 8011a96:	7f01      	ldrb	r1, [r0, #28]
 8011a98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a9a:	4620      	mov	r0, r4
 8011a9c:	4798      	blx	r3
 8011a9e:	6823      	ldr	r3, [r4, #0]
 8011aa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011aa2:	e006      	b.n	8011ab2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011aa4:	6823      	ldr	r3, [r4, #0]
 8011aa6:	7f01      	ldrb	r1, [r0, #28]
 8011aa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011aaa:	4620      	mov	r0, r4
 8011aac:	4798      	blx	r3
 8011aae:	6823      	ldr	r3, [r4, #0]
 8011ab0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011ab2:	4629      	mov	r1, r5
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011aba:	4718      	bx	r3
 8011abc:	6823      	ldr	r3, [r4, #0]
 8011abe:	4620      	mov	r0, r4
 8011ac0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ac2:	4798      	blx	r3
 8011ac4:	e7f3      	b.n	8011aae <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011ac6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011ac6:	4770      	bx	lr

08011ac8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011ac8:	4770      	bx	lr

08011aca <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011aca:	4770      	bx	lr

08011acc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011acc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011ad0:	1ad2      	subs	r2, r2, r3
 8011ad2:	2a00      	cmp	r2, #0
 8011ad4:	b510      	push	{r4, lr}
 8011ad6:	bfdc      	itt	le
 8011ad8:	6884      	ldrle	r4, [r0, #8]
 8011ada:	1912      	addle	r2, r2, r4
 8011adc:	2a01      	cmp	r2, #1
 8011ade:	dd16      	ble.n	8011b0e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011ae0:	6842      	ldr	r2, [r0, #4]
 8011ae2:	2424      	movs	r4, #36	; 0x24
 8011ae4:	fb04 2303 	mla	r3, r4, r3, r2
 8011ae8:	f101 0220 	add.w	r2, r1, #32
 8011aec:	f851 4b04 	ldr.w	r4, [r1], #4
 8011af0:	f843 4b04 	str.w	r4, [r3], #4
 8011af4:	4291      	cmp	r1, r2
 8011af6:	d1f9      	bne.n	8011aec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011af8:	780a      	ldrb	r2, [r1, #0]
 8011afa:	701a      	strb	r2, [r3, #0]
 8011afc:	68c3      	ldr	r3, [r0, #12]
 8011afe:	6882      	ldr	r2, [r0, #8]
 8011b00:	f3bf 8f5b 	dmb	ish
 8011b04:	3301      	adds	r3, #1
 8011b06:	429a      	cmp	r2, r3
 8011b08:	bfd8      	it	le
 8011b0a:	1a9b      	suble	r3, r3, r2
 8011b0c:	60c3      	str	r3, [r0, #12]
 8011b0e:	bd10      	pop	{r4, pc}

08011b10 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011b10:	6903      	ldr	r3, [r0, #16]
 8011b12:	6882      	ldr	r2, [r0, #8]
 8011b14:	f3bf 8f5b 	dmb	ish
 8011b18:	3301      	adds	r3, #1
 8011b1a:	429a      	cmp	r2, r3
 8011b1c:	bfd8      	it	le
 8011b1e:	1a9b      	suble	r3, r3, r2
 8011b20:	6103      	str	r3, [r0, #16]
 8011b22:	4770      	bx	lr

08011b24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011b24:	b570      	push	{r4, r5, r6, lr}
 8011b26:	4604      	mov	r4, r0
 8011b28:	460e      	mov	r6, r1
 8011b2a:	6860      	ldr	r0, [r4, #4]
 8011b2c:	6803      	ldr	r3, [r0, #0]
 8011b2e:	685b      	ldr	r3, [r3, #4]
 8011b30:	4798      	blx	r3
 8011b32:	2800      	cmp	r0, #0
 8011b34:	d1f9      	bne.n	8011b2a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011b36:	4d0d      	ldr	r5, [pc, #52]	; (8011b6c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011b38:	6828      	ldr	r0, [r5, #0]
 8011b3a:	6803      	ldr	r3, [r0, #0]
 8011b3c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b3e:	4798      	blx	r3
 8011b40:	f7ee ffea 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011b44:	6828      	ldr	r0, [r5, #0]
 8011b46:	2101      	movs	r1, #1
 8011b48:	f7ff ff12 	bl	8011970 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011b4c:	6860      	ldr	r0, [r4, #4]
 8011b4e:	6803      	ldr	r3, [r0, #0]
 8011b50:	4631      	mov	r1, r6
 8011b52:	689b      	ldr	r3, [r3, #8]
 8011b54:	4798      	blx	r3
 8011b56:	6823      	ldr	r3, [r4, #0]
 8011b58:	4620      	mov	r0, r4
 8011b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b5c:	4798      	blx	r3
 8011b5e:	6828      	ldr	r0, [r5, #0]
 8011b60:	6803      	ldr	r3, [r0, #0]
 8011b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b66:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011b68:	4718      	bx	r3
 8011b6a:	bf00      	nop
 8011b6c:	20012fc4 	.word	0x20012fc4

08011b70 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011b70:	b508      	push	{r3, lr}
 8011b72:	f7ee ffc3 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011b76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b7a:	f7ee bfc7 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011b7e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011b7e:	b510      	push	{r4, lr}
 8011b80:	2114      	movs	r1, #20
 8011b82:	4604      	mov	r4, r0
 8011b84:	f018 f9fd 	bl	8029f82 <_ZdlPvj>
 8011b88:	4620      	mov	r0, r4
 8011b8a:	bd10      	pop	{r4, pc}

08011b8c <_ZN8touchgfx13DMA_Interface5startEv>:
 8011b8c:	b510      	push	{r4, lr}
 8011b8e:	4604      	mov	r4, r0
 8011b90:	6840      	ldr	r0, [r0, #4]
 8011b92:	6803      	ldr	r3, [r0, #0]
 8011b94:	681b      	ldr	r3, [r3, #0]
 8011b96:	4798      	blx	r3
 8011b98:	b948      	cbnz	r0, 8011bae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b9a:	7a63      	ldrb	r3, [r4, #9]
 8011b9c:	b13b      	cbz	r3, 8011bae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b9e:	7a23      	ldrb	r3, [r4, #8]
 8011ba0:	b92b      	cbnz	r3, 8011bae <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011ba2:	6823      	ldr	r3, [r4, #0]
 8011ba4:	4620      	mov	r0, r4
 8011ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ba8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011bac:	4718      	bx	r3
 8011bae:	bd10      	pop	{r4, pc}

08011bb0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011bb0:	b570      	push	{r4, r5, r6, lr}
 8011bb2:	4604      	mov	r4, r0
 8011bb4:	6840      	ldr	r0, [r0, #4]
 8011bb6:	6803      	ldr	r3, [r0, #0]
 8011bb8:	681b      	ldr	r3, [r3, #0]
 8011bba:	4798      	blx	r3
 8011bbc:	4605      	mov	r5, r0
 8011bbe:	b930      	cbnz	r0, 8011bce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011bc0:	7a23      	ldrb	r3, [r4, #8]
 8011bc2:	b123      	cbz	r3, 8011bce <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011bc4:	6860      	ldr	r0, [r4, #4]
 8011bc6:	6803      	ldr	r3, [r0, #0]
 8011bc8:	695b      	ldr	r3, [r3, #20]
 8011bca:	4798      	blx	r3
 8011bcc:	7225      	strb	r5, [r4, #8]
 8011bce:	6860      	ldr	r0, [r4, #4]
 8011bd0:	6803      	ldr	r3, [r0, #0]
 8011bd2:	681b      	ldr	r3, [r3, #0]
 8011bd4:	4798      	blx	r3
 8011bd6:	b928      	cbnz	r0, 8011be4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011bd8:	6823      	ldr	r3, [r4, #0]
 8011bda:	4620      	mov	r0, r4
 8011bdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011be2:	4718      	bx	r3
 8011be4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011be8:	f7ee bf9e 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011bec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011bec:	b510      	push	{r4, lr}
 8011bee:	4c04      	ldr	r4, [pc, #16]	; (8011c00 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011bf0:	6082      	str	r2, [r0, #8]
 8011bf2:	2200      	movs	r2, #0
 8011bf4:	e9c0 4100 	strd	r4, r1, [r0]
 8011bf8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011bfc:	bd10      	pop	{r4, pc}
 8011bfe:	bf00      	nop
 8011c00:	0802f1e4 	.word	0x0802f1e4

08011c04 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011c04:	6840      	ldr	r0, [r0, #4]
 8011c06:	6803      	ldr	r3, [r0, #0]
 8011c08:	681b      	ldr	r3, [r3, #0]
 8011c0a:	4718      	bx	r3

08011c0c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011c0c:	4b06      	ldr	r3, [pc, #24]	; (8011c28 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011c0e:	60c1      	str	r1, [r0, #12]
 8011c10:	094a      	lsrs	r2, r1, #5
 8011c12:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011c16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011c1a:	4313      	orrs	r3, r2
 8011c1c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011c20:	4319      	orrs	r1, r3
 8011c22:	8201      	strh	r1, [r0, #16]
 8011c24:	4770      	bx	lr
 8011c26:	bf00      	nop
 8011c28:	fffff800 	.word	0xfffff800

08011c2c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011c2c:	f1a0 0008 	sub.w	r0, r0, #8
 8011c30:	e7ec      	b.n	8011c0c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011c32:	bf00      	nop

08011c34 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011c34:	b508      	push	{r3, lr}
 8011c36:	4b05      	ldr	r3, [pc, #20]	; (8011c4c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011c38:	6818      	ldr	r0, [r3, #0]
 8011c3a:	6803      	ldr	r3, [r0, #0]
 8011c3c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011c40:	4798      	blx	r3
 8011c42:	1e43      	subs	r3, r0, #1
 8011c44:	4258      	negs	r0, r3
 8011c46:	4158      	adcs	r0, r3
 8011c48:	bd08      	pop	{r3, pc}
 8011c4a:	bf00      	nop
 8011c4c:	20012fc4 	.word	0x20012fc4

08011c50 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011c50:	4770      	bx	lr

08011c52 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011c52:	3808      	subs	r0, #8
 8011c54:	4770      	bx	lr

08011c56 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011c56:	b430      	push	{r4, r5}
 8011c58:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011c5c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011c60:	8a02      	ldrh	r2, [r0, #16]
 8011c62:	9202      	str	r2, [sp, #8]
 8011c64:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011c68:	68c2      	ldr	r2, [r0, #12]
 8011c6a:	4629      	mov	r1, r5
 8011c6c:	4620      	mov	r0, r4
 8011c6e:	bc30      	pop	{r4, r5}
 8011c70:	f7ef ba1e 	b.w	80010b0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011c74 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011c74:	f7ef ba1a 	b.w	80010ac <_ZN8touchgfx5paint8tearDownEv>

08011c78 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011c78:	b510      	push	{r4, lr}
 8011c7a:	2114      	movs	r1, #20
 8011c7c:	4604      	mov	r4, r0
 8011c7e:	f018 f980 	bl	8029f82 <_ZdlPvj>
 8011c82:	4620      	mov	r0, r4
 8011c84:	bd10      	pop	{r4, pc}

08011c86 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011c86:	f1a0 0008 	sub.w	r0, r0, #8
 8011c8a:	e7f5      	b.n	8011c78 <_ZN8touchgfx13PainterRGB565D0Ev>

08011c8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011c8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011c8e:	6803      	ldr	r3, [r0, #0]
 8011c90:	460d      	mov	r5, r1
 8011c92:	4604      	mov	r4, r0
 8011c94:	4601      	mov	r1, r0
 8011c96:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011c98:	a802      	add	r0, sp, #8
 8011c9a:	4798      	blx	r3
 8011c9c:	6828      	ldr	r0, [r5, #0]
 8011c9e:	6869      	ldr	r1, [r5, #4]
 8011ca0:	466b      	mov	r3, sp
 8011ca2:	c303      	stmia	r3!, {r0, r1}
 8011ca4:	4668      	mov	r0, sp
 8011ca6:	4619      	mov	r1, r3
 8011ca8:	f7fe ffa4 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8011cac:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011cae:	b188      	cbz	r0, 8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cb0:	6803      	ldr	r3, [r0, #0]
 8011cb2:	1d21      	adds	r1, r4, #4
 8011cb4:	68db      	ldr	r3, [r3, #12]
 8011cb6:	4798      	blx	r3
 8011cb8:	b160      	cbz	r0, 8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011cbe:	2b00      	cmp	r3, #0
 8011cc0:	dd08      	ble.n	8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cc2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011cc6:	2d00      	cmp	r5, #0
 8011cc8:	dd04      	ble.n	8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cca:	4a2b      	ldr	r2, [pc, #172]	; (8011d78 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011ccc:	7812      	ldrb	r2, [r2, #0]
 8011cce:	b11a      	cbz	r2, 8011cd8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011cd0:	2a01      	cmp	r2, #1
 8011cd2:	d029      	beq.n	8011d28 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011cd4:	b004      	add	sp, #16
 8011cd6:	bd70      	pop	{r4, r5, r6, pc}
 8011cd8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011cdc:	441d      	add	r5, r3
 8011cde:	b2ad      	uxth	r5, r5
 8011ce0:	b22e      	sxth	r6, r5
 8011ce2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011ce6:	42b3      	cmp	r3, r6
 8011ce8:	daf4      	bge.n	8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011cea:	6823      	ldr	r3, [r4, #0]
 8011cec:	4669      	mov	r1, sp
 8011cee:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	4798      	blx	r3
 8011cf4:	b940      	cbnz	r0, 8011d08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011cf6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011cfa:	2b01      	cmp	r3, #1
 8011cfc:	d004      	beq.n	8011d08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011cfe:	3301      	adds	r3, #1
 8011d00:	105b      	asrs	r3, r3, #1
 8011d02:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011d06:	e7f0      	b.n	8011cea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011d08:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011d0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d10:	4413      	add	r3, r2
 8011d12:	b29b      	uxth	r3, r3
 8011d14:	441a      	add	r2, r3
 8011d16:	b212      	sxth	r2, r2
 8011d18:	4296      	cmp	r6, r2
 8011d1a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011d1e:	dae0      	bge.n	8011ce2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011d20:	1aeb      	subs	r3, r5, r3
 8011d22:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011d26:	e7dc      	b.n	8011ce2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011d28:	f8bd 5000 	ldrh.w	r5, [sp]
 8011d2c:	441d      	add	r5, r3
 8011d2e:	b2ad      	uxth	r5, r5
 8011d30:	b22e      	sxth	r6, r5
 8011d32:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011d36:	42b3      	cmp	r3, r6
 8011d38:	dacc      	bge.n	8011cd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011d3a:	6823      	ldr	r3, [r4, #0]
 8011d3c:	4669      	mov	r1, sp
 8011d3e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011d40:	4620      	mov	r0, r4
 8011d42:	4798      	blx	r3
 8011d44:	b940      	cbnz	r0, 8011d58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011d46:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011d4a:	2b01      	cmp	r3, #1
 8011d4c:	d004      	beq.n	8011d58 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011d4e:	3301      	adds	r3, #1
 8011d50:	105b      	asrs	r3, r3, #1
 8011d52:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011d56:	e7f0      	b.n	8011d3a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011d58:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011d5c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d60:	4413      	add	r3, r2
 8011d62:	b29b      	uxth	r3, r3
 8011d64:	441a      	add	r2, r3
 8011d66:	b212      	sxth	r2, r2
 8011d68:	4296      	cmp	r6, r2
 8011d6a:	f8ad 3000 	strh.w	r3, [sp]
 8011d6e:	dae0      	bge.n	8011d32 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011d70:	1aeb      	subs	r3, r5, r3
 8011d72:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011d76:	e7dc      	b.n	8011d32 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011d78:	20012fbc 	.word	0x20012fbc

08011d7c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011d7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011d7e:	6803      	ldr	r3, [r0, #0]
 8011d80:	4604      	mov	r4, r0
 8011d82:	4601      	mov	r1, r0
 8011d84:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011d86:	4668      	mov	r0, sp
 8011d88:	4798      	blx	r3
 8011d8a:	2100      	movs	r1, #0
 8011d8c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011d90:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d94:	9102      	str	r1, [sp, #8]
 8011d96:	4668      	mov	r0, sp
 8011d98:	a902      	add	r1, sp, #8
 8011d9a:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011d9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011da2:	f7fe ff27 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8011da6:	6823      	ldr	r3, [r4, #0]
 8011da8:	4669      	mov	r1, sp
 8011daa:	691b      	ldr	r3, [r3, #16]
 8011dac:	4620      	mov	r0, r4
 8011dae:	4798      	blx	r3
 8011db0:	b004      	add	sp, #16
 8011db2:	bd10      	pop	{r4, pc}

08011db4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011db4:	2101      	movs	r1, #1
 8011db6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011dba:	490b      	ldr	r1, [pc, #44]	; (8011de8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011dbc:	6001      	str	r1, [r0, #0]
 8011dbe:	2200      	movs	r2, #0
 8011dc0:	21ff      	movs	r1, #255	; 0xff
 8011dc2:	8082      	strh	r2, [r0, #4]
 8011dc4:	80c2      	strh	r2, [r0, #6]
 8011dc6:	8102      	strh	r2, [r0, #8]
 8011dc8:	8142      	strh	r2, [r0, #10]
 8011dca:	8182      	strh	r2, [r0, #12]
 8011dcc:	81c2      	strh	r2, [r0, #14]
 8011dce:	8202      	strh	r2, [r0, #16]
 8011dd0:	8242      	strh	r2, [r0, #18]
 8011dd2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011dd6:	61c2      	str	r2, [r0, #28]
 8011dd8:	8402      	strh	r2, [r0, #32]
 8011dda:	8442      	strh	r2, [r0, #34]	; 0x22
 8011ddc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011de0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011de4:	6282      	str	r2, [r0, #40]	; 0x28
 8011de6:	4770      	bx	lr
 8011de8:	0802f240 	.word	0x0802f240

08011dec <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011dec:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011df0:	4602      	mov	r2, r0
 8011df2:	cb03      	ldmia	r3!, {r0, r1}
 8011df4:	6010      	str	r0, [r2, #0]
 8011df6:	6051      	str	r1, [r2, #4]
 8011df8:	4610      	mov	r0, r2
 8011dfa:	4770      	bx	lr

08011dfc <_ZN8touchgfx4LineD1Ev>:
 8011dfc:	4770      	bx	lr

08011dfe <_ZN8touchgfx4LineD0Ev>:
 8011dfe:	b510      	push	{r4, lr}
 8011e00:	2170      	movs	r1, #112	; 0x70
 8011e02:	4604      	mov	r4, r0
 8011e04:	f018 f8bd 	bl	8029f82 <_ZdlPvj>
 8011e08:	4620      	mov	r0, r4
 8011e0a:	bd10      	pop	{r4, pc}

08011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011e0c:	b507      	push	{r0, r1, r2, lr}
 8011e0e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011e12:	ab01      	add	r3, sp, #4
 8011e14:	6809      	ldr	r1, [r1, #0]
 8011e16:	6800      	ldr	r0, [r0, #0]
 8011e18:	f005 fab4 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 8011e1c:	b003      	add	sp, #12
 8011e1e:	f85d fb04 	ldr.w	pc, [sp], #4

08011e22 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011e22:	6800      	ldr	r0, [r0, #0]
 8011e24:	2800      	cmp	r0, #0
 8011e26:	bfb9      	ittee	lt
 8011e28:	2320      	movlt	r3, #32
 8011e2a:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011e2e:	301f      	addge	r0, #31
 8011e30:	1140      	asrge	r0, r0, #5
 8011e32:	4770      	bx	lr

08011e34 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e38:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011e3c:	b089      	sub	sp, #36	; 0x24
 8011e3e:	4604      	mov	r4, r0
 8011e40:	b353      	cbz	r3, 8011e98 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011e42:	6803      	ldr	r3, [r0, #0]
 8011e44:	4601      	mov	r1, r0
 8011e46:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011e48:	a802      	add	r0, sp, #8
 8011e4a:	4798      	blx	r3
 8011e4c:	2220      	movs	r2, #32
 8011e4e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011e52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011e54:	fb9a f0f2 	sdiv	r0, sl, r2
 8011e58:	fb91 f5f2 	sdiv	r5, r1, r2
 8011e5c:	1b40      	subs	r0, r0, r5
 8011e5e:	2800      	cmp	r0, #0
 8011e60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011e62:	fb93 f6f2 	sdiv	r6, r3, r2
 8011e66:	bfb8      	it	lt
 8011e68:	4240      	neglt	r0, r0
 8011e6a:	0076      	lsls	r6, r6, #1
 8011e6c:	4286      	cmp	r6, r0
 8011e6e:	f8d4 b000 	ldr.w	fp, [r4]
 8011e72:	dc0c      	bgt.n	8011e8e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011e74:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011e76:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011e7a:	fb95 f0f2 	sdiv	r0, r5, r2
 8011e7e:	fb98 f7f2 	sdiv	r7, r8, r2
 8011e82:	1bc0      	subs	r0, r0, r7
 8011e84:	2800      	cmp	r0, #0
 8011e86:	bfb8      	it	lt
 8011e88:	4240      	neglt	r0, r0
 8011e8a:	4286      	cmp	r6, r0
 8011e8c:	dd07      	ble.n	8011e9e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011e8e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011e92:	a902      	add	r1, sp, #8
 8011e94:	4620      	mov	r0, r4
 8011e96:	4798      	blx	r3
 8011e98:	b009      	add	sp, #36	; 0x24
 8011e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e9e:	3301      	adds	r3, #1
 8011ea0:	2002      	movs	r0, #2
 8011ea2:	f10d 0920 	add.w	r9, sp, #32
 8011ea6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011eaa:	4103      	asrs	r3, r0
 8011eac:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011eb0:	eb01 060a 	add.w	r6, r1, sl
 8011eb4:	eb08 0705 	add.w	r7, r8, r5
 8011eb8:	fb96 f6f0 	sdiv	r6, r6, r0
 8011ebc:	fb97 f7f0 	sdiv	r7, r7, r0
 8011ec0:	4648      	mov	r0, r9
 8011ec2:	9101      	str	r1, [sp, #4]
 8011ec4:	b236      	sxth	r6, r6
 8011ec6:	b23f      	sxth	r7, r7
 8011ec8:	fb96 f6f2 	sdiv	r6, r6, r2
 8011ecc:	fb97 f7f2 	sdiv	r7, r7, r2
 8011ed0:	f7ff ffa7 	bl	8011e22 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011ed4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011ed8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011edc:	9901      	ldr	r1, [sp, #4]
 8011ede:	4293      	cmp	r3, r2
 8011ee0:	fa1f fe87 	uxth.w	lr, r7
 8011ee4:	fa1f fc86 	uxth.w	ip, r6
 8011ee8:	eba1 0a0a 	sub.w	sl, r1, sl
 8011eec:	b280      	uxth	r0, r0
 8011eee:	da54      	bge.n	8011f9a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011ef0:	ebac 0100 	sub.w	r1, ip, r0
 8011ef4:	b289      	uxth	r1, r1
 8011ef6:	4460      	add	r0, ip
 8011ef8:	f1ba 0f00 	cmp.w	sl, #0
 8011efc:	b20e      	sxth	r6, r1
 8011efe:	b280      	uxth	r0, r0
 8011f00:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011f04:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011f08:	da29      	bge.n	8011f5e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011f0a:	eba8 0505 	sub.w	r5, r8, r5
 8011f0e:	2d00      	cmp	r5, #0
 8011f10:	da2a      	bge.n	8011f68 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011f12:	fa1f f88a 	uxth.w	r8, sl
 8011f16:	eba0 0008 	sub.w	r0, r0, r8
 8011f1a:	fa1f f58c 	uxth.w	r5, ip
 8011f1e:	4443      	add	r3, r8
 8011f20:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011f24:	1a59      	subs	r1, r3, r1
 8011f26:	ebae 0005 	sub.w	r0, lr, r5
 8011f2a:	f8ad a010 	strh.w	sl, [sp, #16]
 8011f2e:	f8ad c012 	strh.w	ip, [sp, #18]
 8011f32:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011f36:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011f3a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011f3e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011f42:	442a      	add	r2, r5
 8011f44:	eba2 0e0e 	sub.w	lr, r2, lr
 8011f48:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011f4c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011f50:	a904      	add	r1, sp, #16
 8011f52:	4620      	mov	r0, r4
 8011f54:	4798      	blx	r3
 8011f56:	6823      	ldr	r3, [r4, #0]
 8011f58:	4649      	mov	r1, r9
 8011f5a:	691b      	ldr	r3, [r3, #16]
 8011f5c:	e79a      	b.n	8011e94 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011f5e:	d003      	beq.n	8011f68 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011f60:	eba8 0505 	sub.w	r5, r8, r5
 8011f64:	2d00      	cmp	r5, #0
 8011f66:	dcd4      	bgt.n	8011f12 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011f68:	fa1f f88a 	uxth.w	r8, sl
 8011f6c:	4443      	add	r3, r8
 8011f6e:	fa1f f58c 	uxth.w	r5, ip
 8011f72:	1a59      	subs	r1, r3, r1
 8011f74:	eba0 0008 	sub.w	r0, r0, r8
 8011f78:	ebae 0305 	sub.w	r3, lr, r5
 8011f7c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011f80:	f8ad c012 	strh.w	ip, [sp, #18]
 8011f84:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011f88:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011f8c:	f8ad a018 	strh.w	sl, [sp, #24]
 8011f90:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011f94:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011f98:	e7d3      	b.n	8011f42 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011f9a:	ebae 0100 	sub.w	r1, lr, r0
 8011f9e:	b289      	uxth	r1, r1
 8011fa0:	4470      	add	r0, lr
 8011fa2:	f1ba 0f00 	cmp.w	sl, #0
 8011fa6:	b20f      	sxth	r7, r1
 8011fa8:	b280      	uxth	r0, r0
 8011faa:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011fae:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011fb2:	da20      	bge.n	8011ff6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011fb4:	eba8 0505 	sub.w	r5, r8, r5
 8011fb8:	2d00      	cmp	r5, #0
 8011fba:	da21      	bge.n	8012000 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011fbc:	fa1f f88e 	uxth.w	r8, lr
 8011fc0:	fa1f f58a 	uxth.w	r5, sl
 8011fc4:	4443      	add	r3, r8
 8011fc6:	442a      	add	r2, r5
 8011fc8:	f8ad e010 	strh.w	lr, [sp, #16]
 8011fcc:	1b40      	subs	r0, r0, r5
 8011fce:	ebac 0e08 	sub.w	lr, ip, r8
 8011fd2:	1a51      	subs	r1, r2, r1
 8011fd4:	eba3 0c0c 	sub.w	ip, r3, ip
 8011fd8:	f8ad a012 	strh.w	sl, [sp, #18]
 8011fdc:	f8ad e014 	strh.w	lr, [sp, #20]
 8011fe0:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011fe4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011fe8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011fec:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011ff0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011ff4:	e7aa      	b.n	8011f4c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011ff6:	d003      	beq.n	8012000 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011ff8:	eba8 0505 	sub.w	r5, r8, r5
 8011ffc:	2d00      	cmp	r5, #0
 8011ffe:	dcdd      	bgt.n	8011fbc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012000:	fa1f f58e 	uxth.w	r5, lr
 8012004:	fa1f f88a 	uxth.w	r8, sl
 8012008:	4442      	add	r2, r8
 801200a:	442b      	add	r3, r5
 801200c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012010:	1a51      	subs	r1, r2, r1
 8012012:	ebac 0705 	sub.w	r7, ip, r5
 8012016:	eba0 0008 	sub.w	r0, r0, r8
 801201a:	eba3 0c0c 	sub.w	ip, r3, ip
 801201e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012022:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012026:	f8ad 1016 	strh.w	r1, [sp, #22]
 801202a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801202e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012032:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012036:	f8ad 001e 	strh.w	r0, [sp, #30]
 801203a:	e787      	b.n	8011f4c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801203c <_ZN8touchgfx7CWRUtil4sineEi>:
 801203c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012040:	fb90 f2f3 	sdiv	r2, r0, r3
 8012044:	fb02 0013 	mls	r0, r2, r3, r0
 8012048:	2800      	cmp	r0, #0
 801204a:	bfb8      	it	lt
 801204c:	18c0      	addlt	r0, r0, r3
 801204e:	285a      	cmp	r0, #90	; 0x5a
 8012050:	4b09      	ldr	r3, [pc, #36]	; (8012078 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012052:	dc02      	bgt.n	801205a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012054:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012058:	4770      	bx	lr
 801205a:	28b4      	cmp	r0, #180	; 0xb4
 801205c:	dc02      	bgt.n	8012064 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801205e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012062:	e7f7      	b.n	8012054 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012064:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012068:	bfd4      	ite	le
 801206a:	38b4      	suble	r0, #180	; 0xb4
 801206c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012070:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012074:	4240      	negs	r0, r0
 8012076:	4770      	bx	lr
 8012078:	0802f30c 	.word	0x0802f30c

0801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801207c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012080:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012082:	fb90 f2f3 	sdiv	r2, r0, r3
 8012086:	fb02 0013 	mls	r0, r2, r3, r0
 801208a:	2800      	cmp	r0, #0
 801208c:	bfb8      	it	lt
 801208e:	18c0      	addlt	r0, r0, r3
 8012090:	1144      	asrs	r4, r0, #5
 8012092:	f000 061f 	and.w	r6, r0, #31
 8012096:	4620      	mov	r0, r4
 8012098:	f7ff ffd0 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 801209c:	4605      	mov	r5, r0
 801209e:	b90e      	cbnz	r6, 80120a4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80120a0:	b002      	add	sp, #8
 80120a2:	bd70      	pop	{r4, r5, r6, pc}
 80120a4:	1c60      	adds	r0, r4, #1
 80120a6:	f7ff ffc9 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 80120aa:	ab01      	add	r3, sp, #4
 80120ac:	2220      	movs	r2, #32
 80120ae:	4631      	mov	r1, r6
 80120b0:	1b40      	subs	r0, r0, r5
 80120b2:	f005 f967 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 80120b6:	4428      	add	r0, r5
 80120b8:	e7f2      	b.n	80120a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080120ba <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80120ba:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80120be:	bf2c      	ite	cs
 80120c0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80120c4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80120c8:	2300      	movs	r3, #0
 80120ca:	1899      	adds	r1, r3, r2
 80120cc:	4288      	cmp	r0, r1
 80120ce:	bf24      	itt	cs
 80120d0:	1853      	addcs	r3, r2, r1
 80120d2:	1a40      	subcs	r0, r0, r1
 80120d4:	0892      	lsrs	r2, r2, #2
 80120d6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80120da:	d1f6      	bne.n	80120ca <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80120dc:	4618      	mov	r0, r3
 80120de:	4770      	bx	lr

080120e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80120e0:	b510      	push	{r4, lr}
 80120e2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80120e6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80120ea:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80120ee:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80120f2:	13a4      	asrs	r4, r4, #14
 80120f4:	139b      	asrs	r3, r3, #14
 80120f6:	429c      	cmp	r4, r3
 80120f8:	bfb8      	it	lt
 80120fa:	461c      	movlt	r4, r3
 80120fc:	2c01      	cmp	r4, #1
 80120fe:	dd07      	ble.n	8012110 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012100:	fb91 f1f4 	sdiv	r1, r1, r4
 8012104:	fb90 f0f4 	sdiv	r0, r0, r4
 8012108:	f7ff ffea 	bl	80120e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801210c:	4360      	muls	r0, r4
 801210e:	bd10      	pop	{r4, pc}
 8012110:	4340      	muls	r0, r0
 8012112:	fb01 0001 	mla	r0, r1, r1, r0
 8012116:	f7ff ffd0 	bl	80120ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 801211a:	e7f8      	b.n	801210e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801211c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801211c:	2800      	cmp	r0, #0
 801211e:	b508      	push	{r3, lr}
 8012120:	da05      	bge.n	801212e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012122:	4240      	negs	r0, r0
 8012124:	f7ff fffa 	bl	801211c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012128:	4240      	negs	r0, r0
 801212a:	b240      	sxtb	r0, r0
 801212c:	bd08      	pop	{r3, pc}
 801212e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012132:	dc11      	bgt.n	8012158 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012134:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012138:	dd09      	ble.n	801214e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801213a:	4340      	muls	r0, r0
 801213c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012140:	f7ff ffbb 	bl	80120ba <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012144:	f7ff ffea 	bl	801211c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012148:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801214c:	e7ed      	b.n	801212a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801214e:	3003      	adds	r0, #3
 8012150:	10c0      	asrs	r0, r0, #3
 8012152:	4b02      	ldr	r3, [pc, #8]	; (801215c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012154:	5618      	ldrsb	r0, [r3, r0]
 8012156:	e7e9      	b.n	801212c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012158:	2000      	movs	r0, #0
 801215a:	e7e7      	b.n	801212c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801215c:	0802f2b0 	.word	0x0802f2b0

08012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012160:	4281      	cmp	r1, r0
 8012162:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012164:	460c      	mov	r4, r1
 8012166:	4615      	mov	r5, r2
 8012168:	dd07      	ble.n	801217a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801216a:	4601      	mov	r1, r0
 801216c:	4620      	mov	r0, r4
 801216e:	f7ff fff7 	bl	8012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012172:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012176:	b003      	add	sp, #12
 8012178:	bd30      	pop	{r4, r5, pc}
 801217a:	f7ff ffb1 	bl	80120e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801217e:	6028      	str	r0, [r5, #0]
 8012180:	2800      	cmp	r0, #0
 8012182:	d0f8      	beq.n	8012176 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012184:	4602      	mov	r2, r0
 8012186:	ab01      	add	r3, sp, #4
 8012188:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801218c:	4620      	mov	r0, r4
 801218e:	f005 f8f9 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 8012192:	f7ff ffc3 	bl	801211c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012196:	e7ee      	b.n	8012176 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012198 <_ZN8touchgfx4LineC1Ev>:
 8012198:	b510      	push	{r4, lr}
 801219a:	4604      	mov	r4, r0
 801219c:	f7ff fe0a 	bl	8011db4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80121a0:	4b0c      	ldr	r3, [pc, #48]	; (80121d4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80121a2:	6023      	str	r3, [r4, #0]
 80121a4:	2220      	movs	r2, #32
 80121a6:	2300      	movs	r3, #0
 80121a8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80121aa:	2212      	movs	r2, #18
 80121ac:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80121b0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80121b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80121b8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80121bc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80121c0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80121c4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80121c8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80121cc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80121ce:	60a3      	str	r3, [r4, #8]
 80121d0:	4620      	mov	r0, r4
 80121d2:	bd10      	pop	{r4, pc}
 80121d4:	0802f3cc 	.word	0x0802f3cc

080121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80121d8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80121dc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80121de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80121e0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80121e2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80121e4:	1aff      	subs	r7, r7, r3
 80121e6:	4604      	mov	r4, r0
 80121e8:	eba5 0502 	sub.w	r5, r5, r2
 80121ec:	d142      	bne.n	8012274 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80121ee:	b955      	cbnz	r5, 8012206 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80121f0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80121f4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80121f8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80121fc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012200:	b002      	add	sp, #8
 8012202:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012206:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801220a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801220e:	4629      	mov	r1, r5
 8012210:	4642      	mov	r2, r8
 8012212:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012214:	f005 f8d5 	bl	80173c2 <_ZN8touchgfx6muldivElll>
 8012218:	2502      	movs	r5, #2
 801221a:	4642      	mov	r2, r8
 801221c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012220:	4639      	mov	r1, r7
 8012222:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012224:	f005 f8cd 	bl	80173c2 <_ZN8touchgfx6muldivElll>
 8012228:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801222c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012230:	f1b9 0f00 	cmp.w	r9, #0
 8012234:	d067      	beq.n	8012306 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012236:	f1b9 0f02 	cmp.w	r9, #2
 801223a:	d878      	bhi.n	801232e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 801223c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801223e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012240:	1b93      	subs	r3, r2, r6
 8012242:	1b5b      	subs	r3, r3, r5
 8012244:	6463      	str	r3, [r4, #68]	; 0x44
 8012246:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012248:	18e9      	adds	r1, r5, r3
 801224a:	1b89      	subs	r1, r1, r6
 801224c:	6561      	str	r1, [r4, #84]	; 0x54
 801224e:	1b81      	subs	r1, r0, r6
 8012250:	4429      	add	r1, r5
 8012252:	64a1      	str	r1, [r4, #72]	; 0x48
 8012254:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012256:	4430      	add	r0, r6
 8012258:	186f      	adds	r7, r5, r1
 801225a:	4432      	add	r2, r6
 801225c:	1b49      	subs	r1, r1, r5
 801225e:	4437      	add	r7, r6
 8012260:	4428      	add	r0, r5
 8012262:	4431      	add	r1, r6
 8012264:	1b52      	subs	r2, r2, r5
 8012266:	1b5b      	subs	r3, r3, r5
 8012268:	65a7      	str	r7, [r4, #88]	; 0x58
 801226a:	64e0      	str	r0, [r4, #76]	; 0x4c
 801226c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801226e:	6522      	str	r2, [r4, #80]	; 0x50
 8012270:	1b9b      	subs	r3, r3, r6
 8012272:	e05b      	b.n	801232c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012274:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012278:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 801227c:	2d00      	cmp	r5, #0
 801227e:	d0c6      	beq.n	801220e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012280:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012284:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012288:	fb93 f2f8 	sdiv	r2, r3, r8
 801228c:	fb08 3312 	mls	r3, r8, r2, r3
 8012290:	b353      	cbz	r3, 80122e8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012292:	fb98 f2f3 	sdiv	r2, r8, r3
 8012296:	fb03 8812 	mls	r8, r3, r2, r8
 801229a:	f1b8 0f00 	cmp.w	r8, #0
 801229e:	d1f3      	bne.n	8012288 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80122a0:	2b01      	cmp	r3, #1
 80122a2:	bf1c      	itt	ne
 80122a4:	fb95 f5f3 	sdivne	r5, r5, r3
 80122a8:	fb97 f7f3 	sdivne	r7, r7, r3
 80122ac:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80122b0:	f24b 5104 	movw	r1, #46340	; 0xb504
 80122b4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80122b8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80122bc:	428b      	cmp	r3, r1
 80122be:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80122c2:	4608      	mov	r0, r1
 80122c4:	dd01      	ble.n	80122ca <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80122c6:	428a      	cmp	r2, r1
 80122c8:	dc10      	bgt.n	80122ec <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80122ca:	fb90 f3f3 	sdiv	r3, r0, r3
 80122ce:	fb90 f2f2 	sdiv	r2, r0, r2
 80122d2:	4293      	cmp	r3, r2
 80122d4:	bfa8      	it	ge
 80122d6:	4613      	movge	r3, r2
 80122d8:	435f      	muls	r7, r3
 80122da:	435d      	muls	r5, r3
 80122dc:	4629      	mov	r1, r5
 80122de:	4638      	mov	r0, r7
 80122e0:	f7ff fefe 	bl	80120e0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80122e4:	4680      	mov	r8, r0
 80122e6:	e792      	b.n	801220e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80122e8:	4643      	mov	r3, r8
 80122ea:	e7d9      	b.n	80122a0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 80122ec:	fb93 f3f1 	sdiv	r3, r3, r1
 80122f0:	fb92 f2f1 	sdiv	r2, r2, r1
 80122f4:	4293      	cmp	r3, r2
 80122f6:	bfcc      	ite	gt
 80122f8:	3301      	addgt	r3, #1
 80122fa:	1c53      	addle	r3, r2, #1
 80122fc:	fb97 f7f3 	sdiv	r7, r7, r3
 8012300:	fb95 f5f3 	sdiv	r5, r5, r3
 8012304:	e7ea      	b.n	80122dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012306:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012308:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801230a:	1b93      	subs	r3, r2, r6
 801230c:	6463      	str	r3, [r4, #68]	; 0x44
 801230e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012310:	18e9      	adds	r1, r5, r3
 8012312:	6561      	str	r1, [r4, #84]	; 0x54
 8012314:	1b81      	subs	r1, r0, r6
 8012316:	64a1      	str	r1, [r4, #72]	; 0x48
 8012318:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801231a:	4430      	add	r0, r6
 801231c:	186f      	adds	r7, r5, r1
 801231e:	4432      	add	r2, r6
 8012320:	1b49      	subs	r1, r1, r5
 8012322:	65a7      	str	r7, [r4, #88]	; 0x58
 8012324:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012326:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012328:	6522      	str	r2, [r4, #80]	; 0x50
 801232a:	1b5b      	subs	r3, r3, r5
 801232c:	6623      	str	r3, [r4, #96]	; 0x60
 801232e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012330:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012332:	9200      	str	r2, [sp, #0]
 8012334:	9301      	str	r3, [sp, #4]
 8012336:	f104 0148 	add.w	r1, r4, #72	; 0x48
 801233a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 801233e:	680f      	ldr	r7, [r1, #0]
 8012340:	9800      	ldr	r0, [sp, #0]
 8012342:	42ba      	cmp	r2, r7
 8012344:	bfa8      	it	ge
 8012346:	463a      	movge	r2, r7
 8012348:	4287      	cmp	r7, r0
 801234a:	bfc8      	it	gt
 801234c:	9700      	strgt	r7, [sp, #0]
 801234e:	690f      	ldr	r7, [r1, #16]
 8012350:	9801      	ldr	r0, [sp, #4]
 8012352:	42bb      	cmp	r3, r7
 8012354:	bfa8      	it	ge
 8012356:	463b      	movge	r3, r7
 8012358:	3104      	adds	r1, #4
 801235a:	4287      	cmp	r7, r0
 801235c:	bfc8      	it	gt
 801235e:	9701      	strgt	r7, [sp, #4]
 8012360:	458c      	cmp	ip, r1
 8012362:	d1ec      	bne.n	801233e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012364:	4668      	mov	r0, sp
 8012366:	2720      	movs	r7, #32
 8012368:	fb92 f8f7 	sdiv	r8, r2, r7
 801236c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012370:	f7ff fd57 	bl	8011e22 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012374:	4682      	mov	sl, r0
 8012376:	a801      	add	r0, sp, #4
 8012378:	f7ff fd53 	bl	8011e22 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801237c:	ebaa 0208 	sub.w	r2, sl, r8
 8012380:	1bc0      	subs	r0, r0, r7
 8012382:	f1b9 0f01 	cmp.w	r9, #1
 8012386:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 801238a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 801238e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012392:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012396:	f47f af33 	bne.w	8012200 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 801239a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801239c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801239e:	1b83      	subs	r3, r0, r6
 80123a0:	6463      	str	r3, [r4, #68]	; 0x44
 80123a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80123a4:	18ea      	adds	r2, r5, r3
 80123a6:	6562      	str	r2, [r4, #84]	; 0x54
 80123a8:	1b8a      	subs	r2, r1, r6
 80123aa:	64a2      	str	r2, [r4, #72]	; 0x48
 80123ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80123ae:	4431      	add	r1, r6
 80123b0:	18af      	adds	r7, r5, r2
 80123b2:	4406      	add	r6, r0
 80123b4:	1b52      	subs	r2, r2, r5
 80123b6:	1b5d      	subs	r5, r3, r5
 80123b8:	65a7      	str	r7, [r4, #88]	; 0x58
 80123ba:	64e1      	str	r1, [r4, #76]	; 0x4c
 80123bc:	65e2      	str	r2, [r4, #92]	; 0x5c
 80123be:	6526      	str	r6, [r4, #80]	; 0x50
 80123c0:	6625      	str	r5, [r4, #96]	; 0x60
 80123c2:	e71d      	b.n	8012200 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080123c4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80123c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80123c6:	428b      	cmp	r3, r1
 80123c8:	d102      	bne.n	80123d0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80123ca:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80123cc:	4293      	cmp	r3, r2
 80123ce:	d003      	beq.n	80123d8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80123d0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80123d4:	f7ff bf00 	b.w	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80123d8:	4770      	bx	lr

080123da <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80123da:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80123dc:	428b      	cmp	r3, r1
 80123de:	d102      	bne.n	80123e6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80123e0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80123e2:	4293      	cmp	r3, r2
 80123e4:	d003      	beq.n	80123ee <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80123e6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80123ea:	f7ff bef5 	b.w	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80123ee:	4770      	bx	lr

080123f0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80123f0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80123f4:	f7ff bef0 	b.w	80121d8 <_ZN8touchgfx4Line17updateCachedShapeEv>

080123f8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 80123f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123fc:	b0a0      	sub	sp, #128	; 0x80
 80123fe:	4604      	mov	r4, r0
 8012400:	460a      	mov	r2, r1
 8012402:	4601      	mov	r1, r0
 8012404:	a804      	add	r0, sp, #16
 8012406:	f014 fe79 	bl	80270fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801240a:	2300      	movs	r3, #0
 801240c:	9301      	str	r3, [sp, #4]
 801240e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012412:	2b01      	cmp	r3, #1
 8012414:	d17c      	bne.n	8012510 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012416:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012418:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801241a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 801241c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801241e:	1ac0      	subs	r0, r0, r3
 8012420:	eba1 0102 	sub.w	r1, r1, r2
 8012424:	d437      	bmi.n	8012496 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012426:	2900      	cmp	r1, #0
 8012428:	aa01      	add	r2, sp, #4
 801242a:	db2e      	blt.n	801248a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 801242c:	f7ff fe98 	bl	8012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012430:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012434:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012436:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012438:	a804      	add	r0, sp, #16
 801243a:	f014 ffdf 	bl	80273fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801243e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012440:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012442:	a804      	add	r0, sp, #16
 8012444:	f015 f827 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012448:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801244a:	2db3      	cmp	r5, #179	; 0xb3
 801244c:	dc33      	bgt.n	80124b6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 801244e:	eba6 0805 	sub.w	r8, r6, r5
 8012452:	4640      	mov	r0, r8
 8012454:	f7ff fdf2 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 8012458:	a902      	add	r1, sp, #8
 801245a:	9002      	str	r0, [sp, #8]
 801245c:	a801      	add	r0, sp, #4
 801245e:	f7ff fcd5 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012462:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012464:	1847      	adds	r7, r0, r1
 8012466:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801246a:	f7ff fde7 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 801246e:	a903      	add	r1, sp, #12
 8012470:	9003      	str	r0, [sp, #12]
 8012472:	a801      	add	r0, sp, #4
 8012474:	f7ff fcca 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012478:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801247a:	4639      	mov	r1, r7
 801247c:	1a12      	subs	r2, r2, r0
 801247e:	a804      	add	r0, sp, #16
 8012480:	f015 f809 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012484:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012486:	441d      	add	r5, r3
 8012488:	e7df      	b.n	801244a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 801248a:	4249      	negs	r1, r1
 801248c:	f7ff fe68 	bl	8012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012490:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012494:	e7ce      	b.n	8012434 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012496:	2900      	cmp	r1, #0
 8012498:	f1c0 0000 	rsb	r0, r0, #0
 801249c:	aa01      	add	r2, sp, #4
 801249e:	db04      	blt.n	80124aa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80124a0:	f7ff fe5e 	bl	8012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80124a4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80124a8:	e7c4      	b.n	8012434 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80124aa:	4249      	negs	r1, r1
 80124ac:	f7ff fe58 	bl	8012160 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80124b0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80124b4:	e7be      	b.n	8012434 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80124b6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80124b8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80124ba:	a804      	add	r0, sp, #16
 80124bc:	f014 ffeb 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80124c0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80124c2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80124c4:	a804      	add	r0, sp, #16
 80124c6:	f014 ffe6 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80124ca:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80124cc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80124d0:	2d00      	cmp	r5, #0
 80124d2:	dd31      	ble.n	8012538 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80124d4:	eb05 0806 	add.w	r8, r5, r6
 80124d8:	4640      	mov	r0, r8
 80124da:	f7ff fdaf 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 80124de:	a902      	add	r1, sp, #8
 80124e0:	9002      	str	r0, [sp, #8]
 80124e2:	a801      	add	r0, sp, #4
 80124e4:	f7ff fc92 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80124e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80124ea:	1847      	adds	r7, r0, r1
 80124ec:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80124f0:	f7ff fda4 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 80124f4:	a903      	add	r1, sp, #12
 80124f6:	9003      	str	r0, [sp, #12]
 80124f8:	a801      	add	r0, sp, #4
 80124fa:	f7ff fc87 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80124fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012500:	4639      	mov	r1, r7
 8012502:	1a12      	subs	r2, r2, r0
 8012504:	a804      	add	r0, sp, #16
 8012506:	f014 ffc6 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801250a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801250c:	1aed      	subs	r5, r5, r3
 801250e:	e7df      	b.n	80124d0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012510:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012512:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012514:	a804      	add	r0, sp, #16
 8012516:	f014 ff71 	bl	80273fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801251a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801251c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801251e:	a804      	add	r0, sp, #16
 8012520:	f014 ffb9 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012524:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012526:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012528:	a804      	add	r0, sp, #16
 801252a:	f014 ffb4 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801252e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012530:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012532:	a804      	add	r0, sp, #16
 8012534:	f014 ffaf 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012538:	21ff      	movs	r1, #255	; 0xff
 801253a:	a804      	add	r0, sp, #16
 801253c:	f014 fe9a 	bl	8027274 <_ZN8touchgfx6Canvas6renderEh>
 8012540:	4b04      	ldr	r3, [pc, #16]	; (8012554 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012542:	9304      	str	r3, [sp, #16]
 8012544:	4604      	mov	r4, r0
 8012546:	a80c      	add	r0, sp, #48	; 0x30
 8012548:	f001 f8cc 	bl	80136e4 <_ZN8touchgfx7OutlineD1Ev>
 801254c:	4620      	mov	r0, r4
 801254e:	b020      	add	sp, #128	; 0x80
 8012550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012554:	0802fbf4 	.word	0x0802fbf4

08012558 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012558:	2000      	movs	r0, #0
 801255a:	4770      	bx	lr

0801255c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801255c:	4b07      	ldr	r3, [pc, #28]	; (801257c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801255e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012560:	881b      	ldrh	r3, [r3, #0]
 8012562:	4293      	cmp	r3, r2
 8012564:	bf81      	itttt	hi
 8012566:	4b06      	ldrhi	r3, [pc, #24]	; (8012580 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012568:	681b      	ldrhi	r3, [r3, #0]
 801256a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801256e:	7858      	ldrbhi	r0, [r3, #1]
 8012570:	bf8c      	ite	hi
 8012572:	f000 0003 	andhi.w	r0, r0, #3
 8012576:	2000      	movls	r0, #0
 8012578:	4770      	bx	lr
 801257a:	bf00      	nop
 801257c:	20013020 	.word	0x20013020
 8012580:	2001301c 	.word	0x2001301c

08012584 <_ZN8touchgfx8TextAreaD1Ev>:
 8012584:	4770      	bx	lr
	...

08012588 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012588:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801258c:	4b10      	ldr	r3, [pc, #64]	; (80125d0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801258e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012590:	881b      	ldrh	r3, [r3, #0]
 8012592:	428b      	cmp	r3, r1
 8012594:	4604      	mov	r4, r0
 8012596:	d918      	bls.n	80125ca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012598:	6803      	ldr	r3, [r0, #0]
 801259a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801259c:	4b0d      	ldr	r3, [pc, #52]	; (80125d4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801259e:	6818      	ldr	r0, [r3, #0]
 80125a0:	f7f5 fe4c 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 80125a4:	6823      	ldr	r3, [r4, #0]
 80125a6:	4606      	mov	r6, r0
 80125a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80125aa:	4620      	mov	r0, r4
 80125ac:	4798      	blx	r3
 80125ae:	6823      	ldr	r3, [r4, #0]
 80125b0:	4607      	mov	r7, r0
 80125b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80125b6:	4620      	mov	r0, r4
 80125b8:	4798      	blx	r3
 80125ba:	463a      	mov	r2, r7
 80125bc:	4603      	mov	r3, r0
 80125be:	4631      	mov	r1, r6
 80125c0:	4620      	mov	r0, r4
 80125c2:	46ac      	mov	ip, r5
 80125c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80125c8:	4760      	bx	ip
 80125ca:	2000      	movs	r0, #0
 80125cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125d0:	20013020 	.word	0x20013020
 80125d4:	20013028 	.word	0x20013028

080125d8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80125d8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80125dc:	4b17      	ldr	r3, [pc, #92]	; (801263c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80125de:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80125e0:	881b      	ldrh	r3, [r3, #0]
 80125e2:	428b      	cmp	r3, r1
 80125e4:	4604      	mov	r4, r0
 80125e6:	d926      	bls.n	8012636 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80125e8:	4b15      	ldr	r3, [pc, #84]	; (8012640 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80125ea:	681b      	ldr	r3, [r3, #0]
 80125ec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80125f0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80125f4:	4b13      	ldr	r3, [pc, #76]	; (8012644 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80125f6:	7855      	ldrb	r5, [r2, #1]
 80125f8:	681b      	ldr	r3, [r3, #0]
 80125fa:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80125fe:	6833      	ldr	r3, [r6, #0]
 8012600:	69df      	ldr	r7, [r3, #28]
 8012602:	4b11      	ldr	r3, [pc, #68]	; (8012648 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012604:	6818      	ldr	r0, [r3, #0]
 8012606:	f7f5 fe19 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 801260a:	6823      	ldr	r3, [r4, #0]
 801260c:	4680      	mov	r8, r0
 801260e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012610:	4620      	mov	r0, r4
 8012612:	4798      	blx	r3
 8012614:	6823      	ldr	r3, [r4, #0]
 8012616:	4681      	mov	r9, r0
 8012618:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801261c:	4620      	mov	r0, r4
 801261e:	4798      	blx	r3
 8012620:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012624:	9000      	str	r0, [sp, #0]
 8012626:	464b      	mov	r3, r9
 8012628:	4642      	mov	r2, r8
 801262a:	4629      	mov	r1, r5
 801262c:	4630      	mov	r0, r6
 801262e:	47b8      	blx	r7
 8012630:	b003      	add	sp, #12
 8012632:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012636:	2000      	movs	r0, #0
 8012638:	e7fa      	b.n	8012630 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801263a:	bf00      	nop
 801263c:	20013020 	.word	0x20013020
 8012640:	2001301c 	.word	0x2001301c
 8012644:	20013024 	.word	0x20013024
 8012648:	20013028 	.word	0x20013028

0801264c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801264c:	b40e      	push	{r1, r2, r3}
 801264e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012652:	4b2f      	ldr	r3, [pc, #188]	; (8012710 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012654:	881a      	ldrh	r2, [r3, #0]
 8012656:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012658:	429a      	cmp	r2, r3
 801265a:	b09d      	sub	sp, #116	; 0x74
 801265c:	4604      	mov	r4, r0
 801265e:	d954      	bls.n	801270a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012660:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012714 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012664:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012718 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012668:	aa26      	add	r2, sp, #152	; 0x98
 801266a:	9202      	str	r2, [sp, #8]
 801266c:	f8d9 2000 	ldr.w	r2, [r9]
 8012670:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012674:	f8d8 3000 	ldr.w	r3, [r8]
 8012678:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801267c:	682b      	ldr	r3, [r5, #0]
 801267e:	4628      	mov	r0, r5
 8012680:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012682:	4798      	blx	r3
 8012684:	b207      	sxth	r7, r0
 8012686:	4606      	mov	r6, r0
 8012688:	a803      	add	r0, sp, #12
 801268a:	f005 fa95 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 801268e:	682b      	ldr	r3, [r5, #0]
 8012690:	4628      	mov	r0, r5
 8012692:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012694:	4798      	blx	r3
 8012696:	682b      	ldr	r3, [r5, #0]
 8012698:	4682      	mov	sl, r0
 801269a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801269c:	4628      	mov	r0, r5
 801269e:	4798      	blx	r3
 80126a0:	4653      	mov	r3, sl
 80126a2:	9000      	str	r0, [sp, #0]
 80126a4:	9a02      	ldr	r2, [sp, #8]
 80126a6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80126a8:	a803      	add	r0, sp, #12
 80126aa:	f005 fae0 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80126ae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80126b0:	f8d9 3000 	ldr.w	r3, [r9]
 80126b4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80126b8:	8925      	ldrh	r5, [r4, #8]
 80126ba:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80126be:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80126c2:	eba5 050c 	sub.w	r5, r5, ip
 80126c6:	784a      	ldrb	r2, [r1, #1]
 80126c8:	f8d8 3000 	ldr.w	r3, [r8]
 80126cc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80126d0:	b22d      	sxth	r5, r5
 80126d2:	9500      	str	r5, [sp, #0]
 80126d4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80126d8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80126dc:	a803      	add	r0, sp, #12
 80126de:	f002 feed 	bl	80154bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80126e2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80126e6:	18b9      	adds	r1, r7, r2
 80126e8:	2900      	cmp	r1, #0
 80126ea:	b203      	sxth	r3, r0
 80126ec:	dd0b      	ble.n	8012706 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80126ee:	3b01      	subs	r3, #1
 80126f0:	fb13 f302 	smulbb	r3, r3, r2
 80126f4:	fb16 3300 	smlabb	r3, r6, r0, r3
 80126f8:	b21f      	sxth	r7, r3
 80126fa:	4638      	mov	r0, r7
 80126fc:	b01d      	add	sp, #116	; 0x74
 80126fe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012702:	b003      	add	sp, #12
 8012704:	4770      	bx	lr
 8012706:	2b00      	cmp	r3, #0
 8012708:	dcf7      	bgt.n	80126fa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801270a:	2700      	movs	r7, #0
 801270c:	e7f5      	b.n	80126fa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801270e:	bf00      	nop
 8012710:	20013020 	.word	0x20013020
 8012714:	2001301c 	.word	0x2001301c
 8012718:	20013024 	.word	0x20013024

0801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801271c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012720:	4bbc      	ldr	r3, [pc, #752]	; (8012a14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012722:	460c      	mov	r4, r1
 8012724:	881b      	ldrh	r3, [r3, #0]
 8012726:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012728:	428b      	cmp	r3, r1
 801272a:	b0a9      	sub	sp, #164	; 0xa4
 801272c:	4680      	mov	r8, r0
 801272e:	d809      	bhi.n	8012744 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012730:	2300      	movs	r3, #0
 8012732:	f04f 32ff 	mov.w	r2, #4294967295
 8012736:	e9c0 3200 	strd	r3, r2, [r0]
 801273a:	6083      	str	r3, [r0, #8]
 801273c:	4640      	mov	r0, r8
 801273e:	b029      	add	sp, #164	; 0xa4
 8012740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012744:	4eb4      	ldr	r6, [pc, #720]	; (8012a18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012746:	6833      	ldr	r3, [r6, #0]
 8012748:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801274c:	4bb3      	ldr	r3, [pc, #716]	; (8012a1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801274e:	681b      	ldr	r3, [r3, #0]
 8012750:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012754:	4bb2      	ldr	r3, [pc, #712]	; (8012a20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012756:	6818      	ldr	r0, [r3, #0]
 8012758:	f7f5 fd70 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 801275c:	682b      	ldr	r3, [r5, #0]
 801275e:	4681      	mov	r9, r0
 8012760:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012762:	4628      	mov	r0, r5
 8012764:	4798      	blx	r3
 8012766:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012768:	b203      	sxth	r3, r0
 801276a:	4407      	add	r7, r0
 801276c:	9304      	str	r3, [sp, #16]
 801276e:	b2bb      	uxth	r3, r7
 8012770:	9303      	str	r3, [sp, #12]
 8012772:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012776:	4682      	mov	sl, r0
 8012778:	a80f      	add	r0, sp, #60	; 0x3c
 801277a:	2b00      	cmp	r3, #0
 801277c:	f040 80a6 	bne.w	80128cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012780:	f005 fa1a 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8012784:	682b      	ldr	r3, [r5, #0]
 8012786:	4628      	mov	r0, r5
 8012788:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801278a:	4798      	blx	r3
 801278c:	682b      	ldr	r3, [r5, #0]
 801278e:	4606      	mov	r6, r0
 8012790:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012792:	4628      	mov	r0, r5
 8012794:	4798      	blx	r3
 8012796:	6823      	ldr	r3, [r4, #0]
 8012798:	4607      	mov	r7, r0
 801279a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801279c:	4620      	mov	r0, r4
 801279e:	4798      	blx	r3
 80127a0:	6823      	ldr	r3, [r4, #0]
 80127a2:	4683      	mov	fp, r0
 80127a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80127a8:	4620      	mov	r0, r4
 80127aa:	4798      	blx	r3
 80127ac:	463b      	mov	r3, r7
 80127ae:	e9cd b000 	strd	fp, r0, [sp]
 80127b2:	4649      	mov	r1, r9
 80127b4:	4632      	mov	r2, r6
 80127b6:	a80f      	add	r0, sp, #60	; 0x3c
 80127b8:	f005 fa6e 	bl	8017c98 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80127bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80127c0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012a18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80127c4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80127c8:	f04f 0600 	mov.w	r6, #0
 80127cc:	bf0c      	ite	eq
 80127ce:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80127d2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80127d6:	4637      	mov	r7, r6
 80127d8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80127da:	f8db 3000 	ldr.w	r3, [fp]
 80127de:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80127e2:	4629      	mov	r1, r5
 80127e4:	785b      	ldrb	r3, [r3, #1]
 80127e6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80127ea:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80127ee:	a80f      	add	r0, sp, #60	; 0x3c
 80127f0:	f002 fb7f 	bl	8014ef2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80127f4:	9b03      	ldr	r3, [sp, #12]
 80127f6:	4286      	cmp	r6, r0
 80127f8:	bfb8      	it	lt
 80127fa:	4606      	movlt	r6, r0
 80127fc:	3701      	adds	r7, #1
 80127fe:	eba9 0903 	sub.w	r9, r9, r3
 8012802:	a80f      	add	r0, sp, #60	; 0x3c
 8012804:	b236      	sxth	r6, r6
 8012806:	b2bf      	uxth	r7, r7
 8012808:	fa0f f989 	sxth.w	r9, r9
 801280c:	f005 f9fb 	bl	8017c06 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012810:	b918      	cbnz	r0, 801281a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012812:	7a2b      	ldrb	r3, [r5, #8]
 8012814:	444b      	add	r3, r9
 8012816:	2b00      	cmp	r3, #0
 8012818:	dcde      	bgt.n	80127d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801281a:	9b03      	ldr	r3, [sp, #12]
 801281c:	9a04      	ldr	r2, [sp, #16]
 801281e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012822:	fb13 f707 	smulbb	r7, r3, r7
 8012826:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012828:	1aff      	subs	r7, r7, r3
 801282a:	b2bf      	uxth	r7, r7
 801282c:	b23b      	sxth	r3, r7
 801282e:	429a      	cmp	r2, r3
 8012830:	bfa8      	it	ge
 8012832:	4657      	movge	r7, sl
 8012834:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012838:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801283c:	6823      	ldr	r3, [r4, #0]
 801283e:	bf08      	it	eq
 8012840:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012844:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012846:	bf18      	it	ne
 8012848:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801284c:	4620      	mov	r0, r4
 801284e:	4798      	blx	r3
 8012850:	444f      	add	r7, r9
 8012852:	fa1f f987 	uxth.w	r9, r7
 8012856:	2801      	cmp	r0, #1
 8012858:	fa0f f789 	sxth.w	r7, r9
 801285c:	b2b3      	uxth	r3, r6
 801285e:	f000 80e1 	beq.w	8012a24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012862:	2802      	cmp	r0, #2
 8012864:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012868:	f000 80e2 	beq.w	8012a30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801286c:	7aea      	ldrb	r2, [r5, #11]
 801286e:	7b2d      	ldrb	r5, [r5, #12]
 8012870:	b236      	sxth	r6, r6
 8012872:	1ab6      	subs	r6, r6, r2
 8012874:	442a      	add	r2, r5
 8012876:	4413      	add	r3, r2
 8012878:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801287c:	fa1f fa86 	uxth.w	sl, r6
 8012880:	b29b      	uxth	r3, r3
 8012882:	2a02      	cmp	r2, #2
 8012884:	fa0f fb8a 	sxth.w	fp, sl
 8012888:	b21e      	sxth	r6, r3
 801288a:	f000 80d5 	beq.w	8012a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801288e:	2a03      	cmp	r2, #3
 8012890:	f000 80dd 	beq.w	8012a4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012894:	2a01      	cmp	r2, #1
 8012896:	f040 80e5 	bne.w	8012a64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801289a:	8925      	ldrh	r5, [r4, #8]
 801289c:	4633      	mov	r3, r6
 801289e:	eba5 0909 	sub.w	r9, r5, r9
 80128a2:	463e      	mov	r6, r7
 80128a4:	465d      	mov	r5, fp
 80128a6:	461f      	mov	r7, r3
 80128a8:	fa0f fb89 	sxth.w	fp, r9
 80128ac:	4b5c      	ldr	r3, [pc, #368]	; (8012a20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80128ae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80128b0:	6818      	ldr	r0, [r3, #0]
 80128b2:	f7f5 fcc3 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 80128b6:	f8a8 b000 	strh.w	fp, [r8]
 80128ba:	f8a8 5002 	strh.w	r5, [r8, #2]
 80128be:	f8a8 6004 	strh.w	r6, [r8, #4]
 80128c2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80128c6:	f8c8 0008 	str.w	r0, [r8, #8]
 80128ca:	e737      	b.n	801273c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80128cc:	f005 f974 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 80128d0:	682b      	ldr	r3, [r5, #0]
 80128d2:	4628      	mov	r0, r5
 80128d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80128d6:	4798      	blx	r3
 80128d8:	682b      	ldr	r3, [r5, #0]
 80128da:	4607      	mov	r7, r0
 80128dc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80128de:	4628      	mov	r0, r5
 80128e0:	4798      	blx	r3
 80128e2:	6823      	ldr	r3, [r4, #0]
 80128e4:	4683      	mov	fp, r0
 80128e6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80128e8:	4620      	mov	r0, r4
 80128ea:	4798      	blx	r3
 80128ec:	6822      	ldr	r2, [r4, #0]
 80128ee:	9005      	str	r0, [sp, #20]
 80128f0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80128f4:	4620      	mov	r0, r4
 80128f6:	4790      	blx	r2
 80128f8:	9b05      	ldr	r3, [sp, #20]
 80128fa:	9001      	str	r0, [sp, #4]
 80128fc:	463a      	mov	r2, r7
 80128fe:	4649      	mov	r1, r9
 8012900:	9300      	str	r3, [sp, #0]
 8012902:	a80f      	add	r0, sp, #60	; 0x3c
 8012904:	465b      	mov	r3, fp
 8012906:	f005 f9c7 	bl	8017c98 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801290a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801290e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012912:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012914:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012918:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801291c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012920:	bf0a      	itet	eq
 8012922:	464a      	moveq	r2, r9
 8012924:	461a      	movne	r2, r3
 8012926:	4699      	moveq	r9, r3
 8012928:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801292c:	1ad2      	subs	r2, r2, r3
 801292e:	6833      	ldr	r3, [r6, #0]
 8012930:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012934:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012938:	af0f      	add	r7, sp, #60	; 0x3c
 801293a:	7859      	ldrb	r1, [r3, #1]
 801293c:	9707      	str	r7, [sp, #28]
 801293e:	2300      	movs	r3, #0
 8012940:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012944:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012948:	f88d 1020 	strb.w	r1, [sp, #32]
 801294c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012950:	9509      	str	r5, [sp, #36]	; 0x24
 8012952:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012956:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801295a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801295e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012962:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012966:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801296a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801296e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012972:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012976:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801297a:	b350      	cbz	r0, 80129d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801297c:	682b      	ldr	r3, [r5, #0]
 801297e:	4628      	mov	r0, r5
 8012980:	695b      	ldr	r3, [r3, #20]
 8012982:	4798      	blx	r3
 8012984:	4607      	mov	r7, r0
 8012986:	b320      	cbz	r0, 80129d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012988:	9809      	ldr	r0, [sp, #36]	; 0x24
 801298a:	6803      	ldr	r3, [r0, #0]
 801298c:	4639      	mov	r1, r7
 801298e:	68db      	ldr	r3, [r3, #12]
 8012990:	4798      	blx	r3
 8012992:	4606      	mov	r6, r0
 8012994:	b1e8      	cbz	r0, 80129d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012996:	7b43      	ldrb	r3, [r0, #13]
 8012998:	7a82      	ldrb	r2, [r0, #10]
 801299a:	005b      	lsls	r3, r3, #1
 801299c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80129a0:	4313      	orrs	r3, r2
 80129a2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80129a6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80129aa:	2b06      	cmp	r3, #6
 80129ac:	d111      	bne.n	80129d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80129ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80129b0:	6803      	ldr	r3, [r0, #0]
 80129b2:	4632      	mov	r2, r6
 80129b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80129b6:	4639      	mov	r1, r7
 80129b8:	4798      	blx	r3
 80129ba:	7b73      	ldrb	r3, [r6, #13]
 80129bc:	005b      	lsls	r3, r3, #1
 80129be:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80129c2:	7ab3      	ldrb	r3, [r6, #10]
 80129c4:	4313      	orrs	r3, r2
 80129c6:	4418      	add	r0, r3
 80129c8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80129cc:	4418      	add	r0, r3
 80129ce:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80129d2:	2600      	movs	r6, #0
 80129d4:	4637      	mov	r7, r6
 80129d6:	a806      	add	r0, sp, #24
 80129d8:	f002 fc6c 	bl	80152b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80129dc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80129e0:	9b03      	ldr	r3, [sp, #12]
 80129e2:	4286      	cmp	r6, r0
 80129e4:	eba9 0903 	sub.w	r9, r9, r3
 80129e8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80129ec:	bfb8      	it	lt
 80129ee:	4606      	movlt	r6, r0
 80129f0:	3701      	adds	r7, #1
 80129f2:	b236      	sxth	r6, r6
 80129f4:	b2bf      	uxth	r7, r7
 80129f6:	fa0f f989 	sxth.w	r9, r9
 80129fa:	2b00      	cmp	r3, #0
 80129fc:	f43f af0d 	beq.w	801281a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012a00:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8012a04:	2b00      	cmp	r3, #0
 8012a06:	f47f af08 	bne.w	801281a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012a0a:	7a2b      	ldrb	r3, [r5, #8]
 8012a0c:	444b      	add	r3, r9
 8012a0e:	2b00      	cmp	r3, #0
 8012a10:	dce1      	bgt.n	80129d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8012a12:	e702      	b.n	801281a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012a14:	20013020 	.word	0x20013020
 8012a18:	2001301c 	.word	0x2001301c
 8012a1c:	20013024 	.word	0x20013024
 8012a20:	20013028 	.word	0x20013028
 8012a24:	ebaa 0606 	sub.w	r6, sl, r6
 8012a28:	2002      	movs	r0, #2
 8012a2a:	fb96 f6f0 	sdiv	r6, r6, r0
 8012a2e:	e71d      	b.n	801286c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012a30:	441e      	add	r6, r3
 8012a32:	ebaa 0606 	sub.w	r6, sl, r6
 8012a36:	e719      	b.n	801286c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012a38:	8925      	ldrh	r5, [r4, #8]
 8012a3a:	1aed      	subs	r5, r5, r3
 8012a3c:	eba5 050a 	sub.w	r5, r5, sl
 8012a40:	fa0f fb85 	sxth.w	fp, r5
 8012a44:	8965      	ldrh	r5, [r4, #10]
 8012a46:	eba5 0509 	sub.w	r5, r5, r9
 8012a4a:	b22d      	sxth	r5, r5
 8012a4c:	e72e      	b.n	80128ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012a4e:	8965      	ldrh	r5, [r4, #10]
 8012a50:	1aed      	subs	r5, r5, r3
 8012a52:	eba5 050a 	sub.w	r5, r5, sl
 8012a56:	4633      	mov	r3, r6
 8012a58:	b22d      	sxth	r5, r5
 8012a5a:	463e      	mov	r6, r7
 8012a5c:	f04f 0b00 	mov.w	fp, #0
 8012a60:	461f      	mov	r7, r3
 8012a62:	e723      	b.n	80128ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012a64:	2500      	movs	r5, #0
 8012a66:	e721      	b.n	80128ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012a68 <_ZN8touchgfx8TextAreaD0Ev>:
 8012a68:	b510      	push	{r4, lr}
 8012a6a:	2148      	movs	r1, #72	; 0x48
 8012a6c:	4604      	mov	r4, r0
 8012a6e:	f017 fa88 	bl	8029f82 <_ZdlPvj>
 8012a72:	4620      	mov	r0, r4
 8012a74:	bd10      	pop	{r4, pc}
	...

08012a78 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012a78:	b513      	push	{r0, r1, r4, lr}
 8012a7a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012a7e:	4604      	mov	r4, r0
 8012a80:	b1fb      	cbz	r3, 8012ac2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a82:	4b16      	ldr	r3, [pc, #88]	; (8012adc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012a84:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012a86:	881b      	ldrh	r3, [r3, #0]
 8012a88:	428b      	cmp	r3, r1
 8012a8a:	d91a      	bls.n	8012ac2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a8c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012a90:	2b00      	cmp	r3, #0
 8012a92:	dd16      	ble.n	8012ac2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012a98:	2b00      	cmp	r3, #0
 8012a9a:	dd12      	ble.n	8012ac2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012a9c:	4b10      	ldr	r3, [pc, #64]	; (8012ae0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012a9e:	6818      	ldr	r0, [r3, #0]
 8012aa0:	f7f5 fbcc 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8012aa4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012aa8:	6822      	ldr	r2, [r4, #0]
 8012aaa:	2b00      	cmp	r3, #0
 8012aac:	db06      	blt.n	8012abc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012aae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012ab2:	2b00      	cmp	r3, #0
 8012ab4:	db02      	blt.n	8012abc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012ab6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012ab8:	4298      	cmp	r0, r3
 8012aba:	d004      	beq.n	8012ac6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012abc:	6953      	ldr	r3, [r2, #20]
 8012abe:	4620      	mov	r0, r4
 8012ac0:	4798      	blx	r3
 8012ac2:	b002      	add	sp, #8
 8012ac4:	bd10      	pop	{r4, pc}
 8012ac6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012aca:	c903      	ldmia	r1, {r0, r1}
 8012acc:	466b      	mov	r3, sp
 8012ace:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ad2:	6912      	ldr	r2, [r2, #16]
 8012ad4:	4619      	mov	r1, r3
 8012ad6:	4620      	mov	r0, r4
 8012ad8:	4790      	blx	r2
 8012ada:	e7f2      	b.n	8012ac2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012adc:	20013020 	.word	0x20013020
 8012ae0:	20013028 	.word	0x20013028

08012ae4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8012ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ae8:	4b44      	ldr	r3, [pc, #272]	; (8012bfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012aea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012aec:	881b      	ldrh	r3, [r3, #0]
 8012aee:	4293      	cmp	r3, r2
 8012af0:	b08e      	sub	sp, #56	; 0x38
 8012af2:	4604      	mov	r4, r0
 8012af4:	d97e      	bls.n	8012bf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012af6:	6808      	ldr	r0, [r1, #0]
 8012af8:	4d41      	ldr	r5, [pc, #260]	; (8012c00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012afa:	6849      	ldr	r1, [r1, #4]
 8012afc:	ab05      	add	r3, sp, #20
 8012afe:	c303      	stmia	r3!, {r0, r1}
 8012b00:	4611      	mov	r1, r2
 8012b02:	6828      	ldr	r0, [r5, #0]
 8012b04:	f7f5 fb9a 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8012b08:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012b0c:	2b00      	cmp	r3, #0
 8012b0e:	db11      	blt.n	8012b34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012b10:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8012b14:	2b00      	cmp	r3, #0
 8012b16:	db0d      	blt.n	8012b34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012b18:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012b1a:	4298      	cmp	r0, r3
 8012b1c:	d10a      	bne.n	8012b34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012b1e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8012b22:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012b26:	ab09      	add	r3, sp, #36	; 0x24
 8012b28:	e883 0003 	stmia.w	r3, {r0, r1}
 8012b2c:	4619      	mov	r1, r3
 8012b2e:	a805      	add	r0, sp, #20
 8012b30:	f7fe f860 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8012b34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012b38:	2b00      	cmp	r3, #0
 8012b3a:	dd5b      	ble.n	8012bf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012b3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012b40:	2b00      	cmp	r3, #0
 8012b42:	dd57      	ble.n	8012bf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012b44:	4f2f      	ldr	r7, [pc, #188]	; (8012c04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8012b46:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012b48:	683b      	ldr	r3, [r7, #0]
 8012b4a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012b4e:	4b2e      	ldr	r3, [pc, #184]	; (8012c08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012b50:	681b      	ldr	r3, [r3, #0]
 8012b52:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012b56:	2e00      	cmp	r6, #0
 8012b58:	d04c      	beq.n	8012bf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012b5a:	6823      	ldr	r3, [r4, #0]
 8012b5c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012b60:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012b62:	4620      	mov	r0, r4
 8012b64:	4798      	blx	r3
 8012b66:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012b68:	683b      	ldr	r3, [r7, #0]
 8012b6a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012b6e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8012b72:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8012b76:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012b78:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012b7c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012b80:	785b      	ldrb	r3, [r3, #1]
 8012b82:	9609      	str	r6, [sp, #36]	; 0x24
 8012b84:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012b88:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012b8c:	4b1f      	ldr	r3, [pc, #124]	; (8012c0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012b8e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8012b92:	681b      	ldr	r3, [r3, #0]
 8012b94:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012b98:	910b      	str	r1, [sp, #44]	; 0x2c
 8012b9a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012b9e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8012ba2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8012ba6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012baa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012bae:	b10a      	cbz	r2, 8012bb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012bb0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8012bb2:	b906      	cbnz	r6, 8012bb6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012bb4:	689e      	ldr	r6, [r3, #8]
 8012bb6:	af07      	add	r7, sp, #28
 8012bb8:	4621      	mov	r1, r4
 8012bba:	4638      	mov	r0, r7
 8012bbc:	f004 fab0 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bc0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012bc2:	6828      	ldr	r0, [r5, #0]
 8012bc4:	f7f5 fb3a 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8012bc8:	6823      	ldr	r3, [r4, #0]
 8012bca:	4605      	mov	r5, r0
 8012bcc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012bce:	4620      	mov	r0, r4
 8012bd0:	4798      	blx	r3
 8012bd2:	6823      	ldr	r3, [r4, #0]
 8012bd4:	4680      	mov	r8, r0
 8012bd6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012bda:	4620      	mov	r0, r4
 8012bdc:	4798      	blx	r3
 8012bde:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8012be2:	ab09      	add	r3, sp, #36	; 0x24
 8012be4:	9300      	str	r3, [sp, #0]
 8012be6:	9501      	str	r5, [sp, #4]
 8012be8:	ab05      	add	r3, sp, #20
 8012bea:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012bee:	4630      	mov	r0, r6
 8012bf0:	f7f5 fad6 	bl	80081a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012bf4:	b00e      	add	sp, #56	; 0x38
 8012bf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012bfa:	bf00      	nop
 8012bfc:	20013020 	.word	0x20013020
 8012c00:	20013028 	.word	0x20013028
 8012c04:	2001301c 	.word	0x2001301c
 8012c08:	20013024 	.word	0x20013024
 8012c0c:	20012fc4 	.word	0x20012fc4

08012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012c10:	b538      	push	{r3, r4, r5, lr}
 8012c12:	4b0e      	ldr	r3, [pc, #56]	; (8012c4c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012c14:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012c16:	881b      	ldrh	r3, [r3, #0]
 8012c18:	429a      	cmp	r2, r3
 8012c1a:	4604      	mov	r4, r0
 8012c1c:	d214      	bcs.n	8012c48 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012c1e:	6803      	ldr	r3, [r0, #0]
 8012c20:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012c22:	4798      	blx	r3
 8012c24:	6823      	ldr	r3, [r4, #0]
 8012c26:	4605      	mov	r5, r0
 8012c28:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012c2a:	4620      	mov	r0, r4
 8012c2c:	4798      	blx	r3
 8012c2e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012c32:	b22d      	sxth	r5, r5
 8012c34:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012c38:	4601      	mov	r1, r0
 8012c3a:	bf06      	itte	eq
 8012c3c:	4602      	moveq	r2, r0
 8012c3e:	4629      	moveq	r1, r5
 8012c40:	462a      	movne	r2, r5
 8012c42:	4620      	mov	r0, r4
 8012c44:	f7fc feca 	bl	800f9dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012c48:	bd38      	pop	{r3, r4, r5, pc}
 8012c4a:	bf00      	nop
 8012c4c:	20013020 	.word	0x20013020

08012c50 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012c50:	b530      	push	{r4, r5, lr}
 8012c52:	888b      	ldrh	r3, [r1, #4]
 8012c54:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012c56:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012c5a:	b085      	sub	sp, #20
 8012c5c:	4604      	mov	r4, r0
 8012c5e:	b923      	cbnz	r3, 8012c6a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012c60:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012c64:	b90b      	cbnz	r3, 8012c6a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012c66:	f7ff ffd3 	bl	8012c10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012c6a:	6823      	ldr	r3, [r4, #0]
 8012c6c:	466d      	mov	r5, sp
 8012c6e:	4621      	mov	r1, r4
 8012c70:	4628      	mov	r0, r5
 8012c72:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012c76:	4798      	blx	r3
 8012c78:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012c7c:	343c      	adds	r4, #60	; 0x3c
 8012c7e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012c82:	b005      	add	sp, #20
 8012c84:	bd30      	pop	{r4, r5, pc}

08012c86 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012c86:	2300      	movs	r3, #0
 8012c88:	8083      	strh	r3, [r0, #4]
 8012c8a:	80c3      	strh	r3, [r0, #6]
 8012c8c:	8003      	strh	r3, [r0, #0]
 8012c8e:	8043      	strh	r3, [r0, #2]
 8012c90:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012c94:	2bff      	cmp	r3, #255	; 0xff
 8012c96:	bf01      	itttt	eq
 8012c98:	890b      	ldrheq	r3, [r1, #8]
 8012c9a:	8083      	strheq	r3, [r0, #4]
 8012c9c:	894b      	ldrheq	r3, [r1, #10]
 8012c9e:	80c3      	strheq	r3, [r0, #6]
 8012ca0:	4770      	bx	lr
	...

08012ca4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012ca4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ca6:	4604      	mov	r4, r0
 8012ca8:	6808      	ldr	r0, [r1, #0]
 8012caa:	6849      	ldr	r1, [r1, #4]
 8012cac:	466b      	mov	r3, sp
 8012cae:	c303      	stmia	r3!, {r0, r1}
 8012cb0:	6823      	ldr	r3, [r4, #0]
 8012cb2:	4669      	mov	r1, sp
 8012cb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012cb6:	4620      	mov	r0, r4
 8012cb8:	4798      	blx	r3
 8012cba:	4b08      	ldr	r3, [pc, #32]	; (8012cdc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012cbc:	681b      	ldr	r3, [r3, #0]
 8012cbe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012cc2:	b10a      	cbz	r2, 8012cc8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012cc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012cc6:	b900      	cbnz	r0, 8012cca <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012cc8:	6898      	ldr	r0, [r3, #8]
 8012cca:	6803      	ldr	r3, [r0, #0]
 8012ccc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012cce:	6a1d      	ldr	r5, [r3, #32]
 8012cd0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012cd4:	4669      	mov	r1, sp
 8012cd6:	47a8      	blx	r5
 8012cd8:	b003      	add	sp, #12
 8012cda:	bd30      	pop	{r4, r5, pc}
 8012cdc:	20012fc4 	.word	0x20012fc4

08012ce0 <_ZN8touchgfx3BoxD1Ev>:
 8012ce0:	4770      	bx	lr

08012ce2 <_ZN8touchgfx3BoxD0Ev>:
 8012ce2:	b510      	push	{r4, lr}
 8012ce4:	212c      	movs	r1, #44	; 0x2c
 8012ce6:	4604      	mov	r4, r0
 8012ce8:	f017 f94b 	bl	8029f82 <_ZdlPvj>
 8012cec:	4620      	mov	r0, r4
 8012cee:	bd10      	pop	{r4, pc}

08012cf0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012cf0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012cf4:	b12a      	cbz	r2, 8012d02 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012cf6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012cfa:	b112      	cbz	r2, 8012d02 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012cfc:	6803      	ldr	r3, [r0, #0]
 8012cfe:	695b      	ldr	r3, [r3, #20]
 8012d00:	4718      	bx	r3
 8012d02:	4770      	bx	lr

08012d04 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012d04:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012d08:	600b      	str	r3, [r1, #0]
 8012d0a:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012d0e:	6013      	str	r3, [r2, #0]
 8012d10:	4770      	bx	lr

08012d12 <_ZN8touchgfx5Gauge8setWidthEs>:
 8012d12:	8101      	strh	r1, [r0, #8]
 8012d14:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012d18:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012d1c:	4770      	bx	lr

08012d1e <_ZN8touchgfx5Gauge9setHeightEs>:
 8012d1e:	8141      	strh	r1, [r0, #10]
 8012d20:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012d24:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012d28:	4770      	bx	lr

08012d2a <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012d2a:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012d2e:	4770      	bx	lr

08012d30 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012d30:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012d34:	4770      	bx	lr

08012d36 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012d36:	4770      	bx	lr

08012d38 <_ZN8touchgfx5GaugeD1Ev>:
 8012d38:	4770      	bx	lr

08012d3a <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012d3a:	b538      	push	{r3, r4, r5, lr}
 8012d3c:	4604      	mov	r4, r0
 8012d3e:	460d      	mov	r5, r1
 8012d40:	f7fc fd65 	bl	800f80e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012d44:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012d48:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012d4c:	bd38      	pop	{r3, r4, r5, pc}

08012d4e <_ZN8touchgfx5GaugeD0Ev>:
 8012d4e:	b510      	push	{r4, lr}
 8012d50:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012d54:	4604      	mov	r4, r0
 8012d56:	f017 f914 	bl	8029f82 <_ZdlPvj>
 8012d5a:	4620      	mov	r0, r4
 8012d5c:	bd10      	pop	{r4, pc}

08012d5e <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012d5e:	b510      	push	{r4, lr}
 8012d60:	6803      	ldr	r3, [r0, #0]
 8012d62:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012d66:	4604      	mov	r4, r0
 8012d68:	4798      	blx	r3
 8012d6a:	b170      	cbz	r0, 8012d8a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012d6c:	6823      	ldr	r3, [r4, #0]
 8012d6e:	4620      	mov	r0, r4
 8012d70:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012d74:	4798      	blx	r3
 8012d76:	b140      	cbz	r0, 8012d8a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012d78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012d7c:	b12b      	cbz	r3, 8012d8a <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012d7e:	6823      	ldr	r3, [r4, #0]
 8012d80:	4620      	mov	r0, r4
 8012d82:	695b      	ldr	r3, [r3, #20]
 8012d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d88:	4718      	bx	r3
 8012d8a:	bd10      	pop	{r4, pc}

08012d8c <_ZN8touchgfx5GaugeC1Ev>:
 8012d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012d8e:	4604      	mov	r4, r0
 8012d90:	4626      	mov	r6, r4
 8012d92:	f7fc fe5d 	bl	800fa50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012d96:	4b18      	ldr	r3, [pc, #96]	; (8012df8 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012d98:	f846 3bb4 	str.w	r3, [r6], #180
 8012d9c:	a902      	add	r1, sp, #8
 8012d9e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012da2:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012da6:	4630      	mov	r0, r6
 8012da8:	f015 f9ae 	bl	8028108 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012dac:	2500      	movs	r5, #0
 8012dae:	2301      	movs	r3, #1
 8012db0:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012db4:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012db8:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012dbc:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012dc0:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012dc4:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012dc8:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012dcc:	4638      	mov	r0, r7
 8012dce:	f014 fbdf 	bl	8027590 <_ZN8touchgfx6CircleC1Ev>
 8012dd2:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012dd6:	4620      	mov	r0, r4
 8012dd8:	f7fd fdc6 	bl	8010968 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012ddc:	4639      	mov	r1, r7
 8012dde:	4620      	mov	r0, r4
 8012de0:	f7fd fd81 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012de4:	4620      	mov	r0, r4
 8012de6:	4631      	mov	r1, r6
 8012de8:	f7fd fd7d 	bl	80108e6 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012dec:	4620      	mov	r0, r4
 8012dee:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012df2:	b003      	add	sp, #12
 8012df4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012df6:	bf00      	nop
 8012df8:	0802f53c 	.word	0x0802f53c

08012dfc <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012dfc:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012e00:	4770      	bx	lr

08012e02 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012e02:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012e06:	4770      	bx	lr

08012e08 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012e08:	b538      	push	{r3, r4, r5, lr}
 8012e0a:	8902      	ldrh	r2, [r0, #8]
 8012e0c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012e10:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012e14:	4604      	mov	r4, r0
 8012e16:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012e1a:	2200      	movs	r2, #0
 8012e1c:	4611      	mov	r1, r2
 8012e1e:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012e22:	4628      	mov	r0, r5
 8012e24:	f7ef fc99 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8012e28:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012e2c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012e30:	1a9b      	subs	r3, r3, r2
 8012e32:	ee07 3a90 	vmov	s15, r3
 8012e36:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012e3a:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012e3e:	1a9b      	subs	r3, r3, r2
 8012e40:	ee07 3a10 	vmov	s14, r3
 8012e44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e4c:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012e50:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012e54:	4628      	mov	r0, r5
 8012e56:	f015 f9a3 	bl	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012e5a:	4b16      	ldr	r3, [pc, #88]	; (8012eb4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012e5c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012e60:	4628      	mov	r0, r5
 8012e62:	f015 f99d 	bl	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012e66:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012e6a:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012e6e:	ee07 3a90 	vmov	s15, r3
 8012e72:	ee07 2a10 	vmov	s14, r2
 8012e76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e7a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012e7e:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012e82:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012e86:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012e8a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012e8e:	4628      	mov	r0, r5
 8012e90:	f015 f986 	bl	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012e94:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012e98:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012e9c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012ea0:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012ea4:	4628      	mov	r0, r5
 8012ea6:	f015 f97b 	bl	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012eaa:	2301      	movs	r3, #1
 8012eac:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012eb0:	bd38      	pop	{r3, r4, r5, pc}
 8012eb2:	bf00      	nop
 8012eb4:	43960000 	.word	0x43960000

08012eb8 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012eb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012eba:	4604      	mov	r4, r0
 8012ebc:	a802      	add	r0, sp, #8
 8012ebe:	4616      	mov	r6, r2
 8012ec0:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012ec4:	461d      	mov	r5, r3
 8012ec6:	4601      	mov	r1, r0
 8012ec8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012ecc:	f015 fabe 	bl	802844c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012ed0:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012ed4:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012ed8:	4620      	mov	r0, r4
 8012eda:	f7ff ff95 	bl	8012e08 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012ede:	b002      	add	sp, #8
 8012ee0:	bd70      	pop	{r4, r5, r6, pc}

08012ee2 <_ZN8touchgfx5Gauge9setCenterEii>:
 8012ee2:	b570      	push	{r4, r5, r6, lr}
 8012ee4:	4606      	mov	r6, r0
 8012ee6:	460d      	mov	r5, r1
 8012ee8:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012eec:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012ef0:	4614      	mov	r4, r2
 8012ef2:	f7ff ff89 	bl	8012e08 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012ef6:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012efa:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012efe:	1aa4      	subs	r4, r4, r2
 8012f00:	1a6d      	subs	r5, r5, r1
 8012f02:	0164      	lsls	r4, r4, #5
 8012f04:	016d      	lsls	r5, r5, #5
 8012f06:	3410      	adds	r4, #16
 8012f08:	3510      	adds	r5, #16
 8012f0a:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012f0e:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012f12:	bd70      	pop	{r4, r5, r6, pc}

08012f14 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012f14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012f16:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012f18:	0149      	lsls	r1, r1, #5
 8012f1a:	4299      	cmp	r1, r3
 8012f1c:	4604      	mov	r4, r0
 8012f1e:	9101      	str	r1, [sp, #4]
 8012f20:	d00b      	beq.n	8012f3a <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012f22:	4601      	mov	r1, r0
 8012f24:	aa01      	add	r2, sp, #4
 8012f26:	a802      	add	r0, sp, #8
 8012f28:	f014 fd30 	bl	802798c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012f2c:	9b01      	ldr	r3, [sp, #4]
 8012f2e:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012f30:	6823      	ldr	r3, [r4, #0]
 8012f32:	a902      	add	r1, sp, #8
 8012f34:	691b      	ldr	r3, [r3, #16]
 8012f36:	4620      	mov	r0, r4
 8012f38:	4798      	blx	r3
 8012f3a:	b004      	add	sp, #16
 8012f3c:	bd10      	pop	{r4, pc}
	...

08012f40 <_ZN8touchgfx5Gauge8setValueEi>:
 8012f40:	b570      	push	{r4, r5, r6, lr}
 8012f42:	4604      	mov	r4, r0
 8012f44:	f7fc fcb6 	bl	800f8b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012f48:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012f4c:	429a      	cmp	r2, r3
 8012f4e:	bfac      	ite	ge
 8012f50:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012f54:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012f58:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012f5c:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012f60:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012f64:	1ac9      	subs	r1, r1, r3
 8012f66:	2900      	cmp	r1, #0
 8012f68:	bfb8      	it	lt
 8012f6a:	4249      	neglt	r1, r1
 8012f6c:	b289      	uxth	r1, r1
 8012f6e:	4620      	mov	r0, r4
 8012f70:	f7fc fcc2 	bl	800f8f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012f74:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012f78:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012f7c:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012fe4 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012f80:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012fe8 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012f84:	429a      	cmp	r2, r3
 8012f86:	4605      	mov	r5, r0
 8012f88:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012f8c:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012f90:	da15      	bge.n	8012fbe <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012f92:	1b5b      	subs	r3, r3, r5
 8012f94:	ee07 3a90 	vmov	s15, r3
 8012f98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012f9c:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012fa0:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012fa4:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012fa8:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012fac:	f015 f867 	bl	802807e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012fb0:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012fb4:	1b49      	subs	r1, r1, r5
 8012fb6:	4630      	mov	r0, r6
 8012fb8:	f7ff ffac 	bl	8012f14 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012fbc:	bd70      	pop	{r4, r5, r6, pc}
 8012fbe:	442b      	add	r3, r5
 8012fc0:	ee07 3a90 	vmov	s15, r3
 8012fc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012fc8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012fcc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012fd0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012fd4:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012fd8:	f015 f851 	bl	802807e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012fdc:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012fe0:	4429      	add	r1, r5
 8012fe2:	e7e8      	b.n	8012fb6 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012fe4:	43340000 	.word	0x43340000
 8012fe8:	40490fdb 	.word	0x40490fdb

08012fec <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012fec:	b510      	push	{r4, lr}
 8012fee:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012ff2:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012ff6:	0149      	lsls	r1, r1, #5
 8012ff8:	0152      	lsls	r2, r2, #5
 8012ffa:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012ffe:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013002:	4604      	mov	r4, r0
 8013004:	f7fc fc00 	bl	800f808 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013008:	4601      	mov	r1, r0
 801300a:	4620      	mov	r0, r4
 801300c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013010:	f7ff bf96 	b.w	8012f40 <_ZN8touchgfx5Gauge8setValueEi>

08013014 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013014:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013018:	4770      	bx	lr

0801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801301a:	b570      	push	{r4, r5, r6, lr}
 801301c:	880b      	ldrh	r3, [r1, #0]
 801301e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013020:	4605      	mov	r5, r0
 8013022:	8813      	ldrh	r3, [r2, #0]
 8013024:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013028:	4604      	mov	r4, r0
 801302a:	4628      	mov	r0, r5
 801302c:	f006 fb44 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013030:	4606      	mov	r6, r0
 8013032:	4628      	mov	r0, r5
 8013034:	f006 fb74 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013038:	6823      	ldr	r3, [r4, #0]
 801303a:	4605      	mov	r5, r0
 801303c:	4631      	mov	r1, r6
 801303e:	4620      	mov	r0, r4
 8013040:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013042:	4798      	blx	r3
 8013044:	6823      	ldr	r3, [r4, #0]
 8013046:	4629      	mov	r1, r5
 8013048:	4620      	mov	r0, r4
 801304a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801304c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013050:	4718      	bx	r3

08013052 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013052:	b510      	push	{r4, lr}
 8013054:	4604      	mov	r4, r0
 8013056:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013058:	b150      	cbz	r0, 8013070 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801305a:	6803      	ldr	r3, [r0, #0]
 801305c:	68db      	ldr	r3, [r3, #12]
 801305e:	4798      	blx	r3
 8013060:	b130      	cbz	r0, 8013070 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013062:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013064:	6803      	ldr	r3, [r0, #0]
 8013066:	4621      	mov	r1, r4
 8013068:	689b      	ldr	r3, [r3, #8]
 801306a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801306e:	4718      	bx	r3
 8013070:	bd10      	pop	{r4, pc}

08013072 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013072:	b510      	push	{r4, lr}
 8013074:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013078:	2bff      	cmp	r3, #255	; 0xff
 801307a:	4604      	mov	r4, r0
 801307c:	d006      	beq.n	801308c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801307e:	2300      	movs	r3, #0
 8013080:	8003      	strh	r3, [r0, #0]
 8013082:	8043      	strh	r3, [r0, #2]
 8013084:	8083      	strh	r3, [r0, #4]
 8013086:	80c3      	strh	r3, [r0, #6]
 8013088:	4620      	mov	r0, r4
 801308a:	bd10      	pop	{r4, pc}
 801308c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013090:	b11b      	cbz	r3, 801309a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013092:	3130      	adds	r1, #48	; 0x30
 8013094:	f006 fb78 	bl	8019788 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013098:	e7f6      	b.n	8013088 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801309a:	312e      	adds	r1, #46	; 0x2e
 801309c:	e7fa      	b.n	8013094 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080130a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80130a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80130a8:	b08a      	sub	sp, #40	; 0x28
 80130aa:	4604      	mov	r4, r0
 80130ac:	4688      	mov	r8, r1
 80130ae:	2b00      	cmp	r3, #0
 80130b0:	d066      	beq.n	8013180 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80130b2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80130b4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80130b8:	a805      	add	r0, sp, #20
 80130ba:	f006 fafd 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80130be:	4607      	mov	r7, r0
 80130c0:	a805      	add	r0, sp, #20
 80130c2:	f006 fb2d 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80130c6:	f9b8 6000 	ldrsh.w	r6, [r8]
 80130ca:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80130ce:	4432      	add	r2, r6
 80130d0:	b292      	uxth	r2, r2
 80130d2:	2300      	movs	r3, #0
 80130d4:	fa0f fc82 	sxth.w	ip, r2
 80130d8:	459c      	cmp	ip, r3
 80130da:	9306      	str	r3, [sp, #24]
 80130dc:	dd52      	ble.n	8013184 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80130de:	42b7      	cmp	r7, r6
 80130e0:	dd50      	ble.n	8013184 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80130e2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80130e6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80130ea:	442b      	add	r3, r5
 80130ec:	b29b      	uxth	r3, r3
 80130ee:	b219      	sxth	r1, r3
 80130f0:	2900      	cmp	r1, #0
 80130f2:	dd47      	ble.n	8013184 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80130f4:	42a8      	cmp	r0, r5
 80130f6:	dd45      	ble.n	8013184 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80130f8:	4567      	cmp	r7, ip
 80130fa:	bfb8      	it	lt
 80130fc:	b2ba      	uxthlt	r2, r7
 80130fe:	4288      	cmp	r0, r1
 8013100:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013104:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013108:	bfb8      	it	lt
 801310a:	b283      	uxthlt	r3, r0
 801310c:	1b92      	subs	r2, r2, r6
 801310e:	1b5b      	subs	r3, r3, r5
 8013110:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013114:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013118:	f8ad 6018 	strh.w	r6, [sp, #24]
 801311c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013120:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013124:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013128:	429a      	cmp	r2, r3
 801312a:	d026      	beq.n	801317a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801312c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013130:	2b00      	cmp	r3, #0
 8013132:	dd22      	ble.n	801317a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013134:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013138:	2b00      	cmp	r3, #0
 801313a:	dd1e      	ble.n	801317a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801313c:	2300      	movs	r3, #0
 801313e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013142:	6823      	ldr	r3, [r4, #0]
 8013144:	a908      	add	r1, sp, #32
 8013146:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013148:	4620      	mov	r0, r4
 801314a:	4798      	blx	r3
 801314c:	4b0f      	ldr	r3, [pc, #60]	; (801318c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801314e:	681b      	ldr	r3, [r3, #0]
 8013150:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013154:	b10a      	cbz	r2, 801315a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013156:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013158:	b900      	cbnz	r0, 801315c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801315a:	6898      	ldr	r0, [r3, #8]
 801315c:	6801      	ldr	r1, [r0, #0]
 801315e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013162:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013166:	2501      	movs	r5, #1
 8013168:	9502      	str	r5, [sp, #8]
 801316a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801316e:	9401      	str	r4, [sp, #4]
 8013170:	ac06      	add	r4, sp, #24
 8013172:	9400      	str	r4, [sp, #0]
 8013174:	688c      	ldr	r4, [r1, #8]
 8013176:	a905      	add	r1, sp, #20
 8013178:	47a0      	blx	r4
 801317a:	b00a      	add	sp, #40	; 0x28
 801317c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013180:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013182:	e797      	b.n	80130b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013184:	2300      	movs	r3, #0
 8013186:	9307      	str	r3, [sp, #28]
 8013188:	e7ca      	b.n	8013120 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801318a:	bf00      	nop
 801318c:	20012fc4 	.word	0x20012fc4

08013190 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013190:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013194:	b12a      	cbz	r2, 80131a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013196:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801319a:	b112      	cbz	r2, 80131a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801319c:	6803      	ldr	r3, [r0, #0]
 801319e:	695b      	ldr	r3, [r3, #20]
 80131a0:	4718      	bx	r3
 80131a2:	4770      	bx	lr

080131a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80131a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80131a8:	4b2f      	ldr	r3, [pc, #188]	; (8013268 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80131aa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80131ac:	881b      	ldrh	r3, [r3, #0]
 80131ae:	4293      	cmp	r3, r2
 80131b0:	b08d      	sub	sp, #52	; 0x34
 80131b2:	4604      	mov	r4, r0
 80131b4:	460f      	mov	r7, r1
 80131b6:	d954      	bls.n	8013262 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80131b8:	4b2c      	ldr	r3, [pc, #176]	; (801326c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80131ba:	6819      	ldr	r1, [r3, #0]
 80131bc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80131c0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80131c4:	4a2a      	ldr	r2, [pc, #168]	; (8013270 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80131c6:	6812      	ldr	r2, [r2, #0]
 80131c8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80131cc:	2900      	cmp	r1, #0
 80131ce:	d048      	beq.n	8013262 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80131d0:	785a      	ldrb	r2, [r3, #1]
 80131d2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80131d6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80131da:	4b26      	ldr	r3, [pc, #152]	; (8013274 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80131dc:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80131e0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80131e4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80131e8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80131ea:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80131ee:	9107      	str	r1, [sp, #28]
 80131f0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80131f4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80131f8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80131fc:	681a      	ldr	r2, [r3, #0]
 80131fe:	f88d 8020 	strb.w	r8, [sp, #32]
 8013202:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013206:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801320a:	9609      	str	r6, [sp, #36]	; 0x24
 801320c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013210:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013214:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013218:	b10b      	cbz	r3, 801321e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801321a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801321c:	b905      	cbnz	r5, 8013220 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801321e:	6895      	ldr	r5, [r2, #8]
 8013220:	ae05      	add	r6, sp, #20
 8013222:	4621      	mov	r1, r4
 8013224:	4630      	mov	r0, r6
 8013226:	f003 ff7b 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801322a:	4b13      	ldr	r3, [pc, #76]	; (8013278 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801322c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801322e:	6818      	ldr	r0, [r3, #0]
 8013230:	f7f5 f804 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 8013234:	6823      	ldr	r3, [r4, #0]
 8013236:	4680      	mov	r8, r0
 8013238:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801323a:	4620      	mov	r0, r4
 801323c:	4798      	blx	r3
 801323e:	6823      	ldr	r3, [r4, #0]
 8013240:	4681      	mov	r9, r0
 8013242:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013246:	4620      	mov	r0, r4
 8013248:	4798      	blx	r3
 801324a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801324e:	ab07      	add	r3, sp, #28
 8013250:	9300      	str	r3, [sp, #0]
 8013252:	f8cd 8004 	str.w	r8, [sp, #4]
 8013256:	463b      	mov	r3, r7
 8013258:	e896 0006 	ldmia.w	r6, {r1, r2}
 801325c:	4628      	mov	r0, r5
 801325e:	f7f4 ff9f 	bl	80081a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013262:	b00d      	add	sp, #52	; 0x34
 8013264:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013268:	20013020 	.word	0x20013020
 801326c:	2001301c 	.word	0x2001301c
 8013270:	20013024 	.word	0x20013024
 8013274:	20012fc4 	.word	0x20012fc4
 8013278:	20013028 	.word	0x20013028

0801327c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 801327c:	4770      	bx	lr

0801327e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801327e:	4770      	bx	lr

08013280 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013280:	b510      	push	{r4, lr}
 8013282:	213c      	movs	r1, #60	; 0x3c
 8013284:	4604      	mov	r4, r0
 8013286:	f016 fe7c 	bl	8029f82 <_ZdlPvj>
 801328a:	4620      	mov	r0, r4
 801328c:	bd10      	pop	{r4, pc}

0801328e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801328e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013292:	461c      	mov	r4, r3
 8013294:	4606      	mov	r6, r0
 8013296:	9f06      	ldr	r7, [sp, #24]
 8013298:	f7ff febf 	bl	801301a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801329c:	8823      	ldrh	r3, [r4, #0]
 801329e:	86b3      	strh	r3, [r6, #52]	; 0x34
 80132a0:	883b      	ldrh	r3, [r7, #0]
 80132a2:	86f3      	strh	r3, [r6, #54]	; 0x36
 80132a4:	4638      	mov	r0, r7
 80132a6:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80132aa:	f006 fa05 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80132ae:	f04f 0802 	mov.w	r8, #2
 80132b2:	fb95 f5f8 	sdiv	r5, r5, r8
 80132b6:	b2ad      	uxth	r5, r5
 80132b8:	fb90 f0f8 	sdiv	r0, r0, r8
 80132bc:	1a2d      	subs	r5, r5, r0
 80132be:	8735      	strh	r5, [r6, #56]	; 0x38
 80132c0:	4638      	mov	r0, r7
 80132c2:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80132c6:	fb94 f4f8 	sdiv	r4, r4, r8
 80132ca:	f006 fa29 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80132ce:	b2a4      	uxth	r4, r4
 80132d0:	fb90 f0f8 	sdiv	r0, r0, r8
 80132d4:	1a24      	subs	r4, r4, r0
 80132d6:	8774      	strh	r4, [r6, #58]	; 0x3a
 80132d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080132dc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80132dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132e0:	4604      	mov	r4, r0
 80132e2:	b08c      	sub	sp, #48	; 0x30
 80132e4:	460d      	mov	r5, r1
 80132e6:	f7ff fedb 	bl	80130a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80132ea:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80132ee:	2b00      	cmp	r3, #0
 80132f0:	d05d      	beq.n	80133ae <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80132f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80132f4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80132f8:	a805      	add	r0, sp, #20
 80132fa:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80132fe:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013302:	f006 f9d9 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013306:	4606      	mov	r6, r0
 8013308:	a805      	add	r0, sp, #20
 801330a:	f006 fa09 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801330e:	6869      	ldr	r1, [r5, #4]
 8013310:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013314:	6828      	ldr	r0, [r5, #0]
 8013316:	f8ad 8018 	strh.w	r8, [sp, #24]
 801331a:	ab08      	add	r3, sp, #32
 801331c:	ad08      	add	r5, sp, #32
 801331e:	c303      	stmia	r3!, {r0, r1}
 8013320:	a906      	add	r1, sp, #24
 8013322:	4628      	mov	r0, r5
 8013324:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013328:	f8ad 601c 	strh.w	r6, [sp, #28]
 801332c:	f7fd fc62 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8013330:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013334:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013338:	429a      	cmp	r2, r3
 801333a:	d035      	beq.n	80133a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801333c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013340:	2b00      	cmp	r3, #0
 8013342:	dd31      	ble.n	80133a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013344:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013348:	2b00      	cmp	r3, #0
 801334a:	dd2d      	ble.n	80133a8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801334c:	2300      	movs	r3, #0
 801334e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013352:	6823      	ldr	r3, [r4, #0]
 8013354:	a90a      	add	r1, sp, #40	; 0x28
 8013356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013358:	4620      	mov	r0, r4
 801335a:	4798      	blx	r3
 801335c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013360:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8013362:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013366:	1a9b      	subs	r3, r3, r2
 8013368:	f8ad 3020 	strh.w	r3, [sp, #32]
 801336c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801336e:	1ac9      	subs	r1, r1, r3
 8013370:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013374:	490f      	ldr	r1, [pc, #60]	; (80133b4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013376:	6809      	ldr	r1, [r1, #0]
 8013378:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 801337c:	b108      	cbz	r0, 8013382 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801337e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013380:	b900      	cbnz	r0, 8013384 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8013382:	6888      	ldr	r0, [r1, #8]
 8013384:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013388:	440b      	add	r3, r1
 801338a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801338e:	2601      	movs	r6, #1
 8013390:	440a      	add	r2, r1
 8013392:	6801      	ldr	r1, [r0, #0]
 8013394:	9602      	str	r6, [sp, #8]
 8013396:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801339a:	e9cd 5400 	strd	r5, r4, [sp]
 801339e:	b21b      	sxth	r3, r3
 80133a0:	688c      	ldr	r4, [r1, #8]
 80133a2:	b212      	sxth	r2, r2
 80133a4:	a905      	add	r1, sp, #20
 80133a6:	47a0      	blx	r4
 80133a8:	b00c      	add	sp, #48	; 0x30
 80133aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80133ae:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80133b0:	e7a0      	b.n	80132f4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80133b2:	bf00      	nop
 80133b4:	20012fc4 	.word	0x20012fc4

080133b8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80133b8:	b510      	push	{r4, lr}
 80133ba:	2101      	movs	r1, #1
 80133bc:	2200      	movs	r2, #0
 80133be:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80133c2:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80133c6:	4c0e      	ldr	r4, [pc, #56]	; (8013400 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80133c8:	8082      	strh	r2, [r0, #4]
 80133ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133ce:	80c2      	strh	r2, [r0, #6]
 80133d0:	8102      	strh	r2, [r0, #8]
 80133d2:	8142      	strh	r2, [r0, #10]
 80133d4:	8182      	strh	r2, [r0, #12]
 80133d6:	81c2      	strh	r2, [r0, #14]
 80133d8:	8202      	strh	r2, [r0, #16]
 80133da:	8242      	strh	r2, [r0, #18]
 80133dc:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80133e0:	61c2      	str	r2, [r0, #28]
 80133e2:	8402      	strh	r2, [r0, #32]
 80133e4:	8442      	strh	r2, [r0, #34]	; 0x22
 80133e6:	6282      	str	r2, [r0, #40]	; 0x28
 80133e8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80133ec:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80133ee:	8601      	strh	r1, [r0, #48]	; 0x30
 80133f0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80133f4:	6004      	str	r4, [r0, #0]
 80133f6:	8681      	strh	r1, [r0, #52]	; 0x34
 80133f8:	86c1      	strh	r1, [r0, #54]	; 0x36
 80133fa:	8702      	strh	r2, [r0, #56]	; 0x38
 80133fc:	8742      	strh	r2, [r0, #58]	; 0x3a
 80133fe:	bd10      	pop	{r4, pc}
 8013400:	0802f624 	.word	0x0802f624

08013404 <_ZN8touchgfx5ImageD1Ev>:
 8013404:	4770      	bx	lr

08013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013406:	b570      	push	{r4, r5, r6, lr}
 8013408:	880b      	ldrh	r3, [r1, #0]
 801340a:	84c3      	strh	r3, [r0, #38]	; 0x26
 801340c:	4604      	mov	r4, r0
 801340e:	4608      	mov	r0, r1
 8013410:	460d      	mov	r5, r1
 8013412:	f006 f951 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013416:	4606      	mov	r6, r0
 8013418:	4628      	mov	r0, r5
 801341a:	f006 f981 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801341e:	6823      	ldr	r3, [r4, #0]
 8013420:	4605      	mov	r5, r0
 8013422:	4631      	mov	r1, r6
 8013424:	4620      	mov	r0, r4
 8013426:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013428:	4798      	blx	r3
 801342a:	6823      	ldr	r3, [r4, #0]
 801342c:	4629      	mov	r1, r5
 801342e:	4620      	mov	r0, r4
 8013430:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013432:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013436:	4718      	bx	r3

08013438 <_ZN8touchgfx5ImageD0Ev>:
 8013438:	b510      	push	{r4, lr}
 801343a:	212c      	movs	r1, #44	; 0x2c
 801343c:	4604      	mov	r4, r0
 801343e:	f016 fda0 	bl	8029f82 <_ZdlPvj>
 8013442:	4620      	mov	r0, r4
 8013444:	bd10      	pop	{r4, pc}

08013446 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013446:	b510      	push	{r4, lr}
 8013448:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801344c:	2bff      	cmp	r3, #255	; 0xff
 801344e:	4604      	mov	r4, r0
 8013450:	d006      	beq.n	8013460 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013452:	2300      	movs	r3, #0
 8013454:	8003      	strh	r3, [r0, #0]
 8013456:	8043      	strh	r3, [r0, #2]
 8013458:	8083      	strh	r3, [r0, #4]
 801345a:	80c3      	strh	r3, [r0, #6]
 801345c:	4620      	mov	r0, r4
 801345e:	bd10      	pop	{r4, pc}
 8013460:	3126      	adds	r1, #38	; 0x26
 8013462:	f006 f991 	bl	8019788 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013466:	e7f9      	b.n	801345c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013468 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013468:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801346c:	b12a      	cbz	r2, 801347a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801346e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013472:	b112      	cbz	r2, 801347a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013474:	6803      	ldr	r3, [r0, #0]
 8013476:	695b      	ldr	r3, [r3, #20]
 8013478:	4718      	bx	r3
 801347a:	4770      	bx	lr

0801347c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801347c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013480:	4604      	mov	r4, r0
 8013482:	b088      	sub	sp, #32
 8013484:	f854 3b26 	ldr.w	r3, [r4], #38
 8013488:	2500      	movs	r5, #0
 801348a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801348c:	460f      	mov	r7, r1
 801348e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013492:	a904      	add	r1, sp, #16
 8013494:	4606      	mov	r6, r0
 8013496:	4798      	blx	r3
 8013498:	4620      	mov	r0, r4
 801349a:	f006 f90d 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801349e:	4680      	mov	r8, r0
 80134a0:	4620      	mov	r0, r4
 80134a2:	f006 f93d 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80134a6:	9506      	str	r5, [sp, #24]
 80134a8:	ad06      	add	r5, sp, #24
 80134aa:	f8ad 001e 	strh.w	r0, [sp, #30]
 80134ae:	4639      	mov	r1, r7
 80134b0:	4628      	mov	r0, r5
 80134b2:	f8ad 801c 	strh.w	r8, [sp, #28]
 80134b6:	f7fd fb9d 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 80134ba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80134be:	2b00      	cmp	r3, #0
 80134c0:	dd19      	ble.n	80134f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80134c2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80134c6:	2b00      	cmp	r3, #0
 80134c8:	dd15      	ble.n	80134f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80134ca:	4b0c      	ldr	r3, [pc, #48]	; (80134fc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80134cc:	681b      	ldr	r3, [r3, #0]
 80134ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80134d2:	b10a      	cbz	r2, 80134d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80134d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80134d6:	b900      	cbnz	r0, 80134da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80134d8:	6898      	ldr	r0, [r3, #8]
 80134da:	6801      	ldr	r1, [r0, #0]
 80134dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80134e0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80134e4:	2701      	movs	r7, #1
 80134e6:	9702      	str	r7, [sp, #8]
 80134e8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80134ec:	e9cd 5600 	strd	r5, r6, [sp]
 80134f0:	688d      	ldr	r5, [r1, #8]
 80134f2:	4621      	mov	r1, r4
 80134f4:	47a8      	blx	r5
 80134f6:	b008      	add	sp, #32
 80134f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80134fc:	20012fc4 	.word	0x20012fc4

08013500 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013500:	4770      	bx	lr

08013502 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013502:	b510      	push	{r4, lr}
 8013504:	2148      	movs	r1, #72	; 0x48
 8013506:	4604      	mov	r4, r0
 8013508:	f016 fd3b 	bl	8029f82 <_ZdlPvj>
 801350c:	4620      	mov	r0, r4
 801350e:	bd10      	pop	{r4, pc}

08013510 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013510:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013514:	b08d      	sub	sp, #52	; 0x34
 8013516:	4604      	mov	r4, r0
 8013518:	460f      	mov	r7, r1
 801351a:	f7ff fdc1 	bl	80130a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801351e:	4a55      	ldr	r2, [pc, #340]	; (8013674 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013520:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013522:	8812      	ldrh	r2, [r2, #0]
 8013524:	429a      	cmp	r2, r3
 8013526:	f240 8082 	bls.w	801362e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801352a:	4d53      	ldr	r5, [pc, #332]	; (8013678 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 801352c:	682a      	ldr	r2, [r5, #0]
 801352e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013532:	4b52      	ldr	r3, [pc, #328]	; (801367c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013534:	681b      	ldr	r3, [r3, #0]
 8013536:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801353a:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 801353e:	2200      	movs	r2, #0
 8013540:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013544:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013548:	2a03      	cmp	r2, #3
 801354a:	d811      	bhi.n	8013570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801354c:	e8df f002 	tbb	[pc, r2]
 8013550:	89727902 	.word	0x89727902
 8013554:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013558:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801355c:	1ad2      	subs	r2, r2, r3
 801355e:	2002      	movs	r0, #2
 8013560:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013564:	fb92 f2f0 	sdiv	r2, r2, r0
 8013568:	f8ad 3012 	strh.w	r3, [sp, #18]
 801356c:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013570:	f10d 080c 	add.w	r8, sp, #12
 8013574:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013578:	f10d 0914 	add.w	r9, sp, #20
 801357c:	e889 0003 	stmia.w	r9, {r0, r1}
 8013580:	4639      	mov	r1, r7
 8013582:	4648      	mov	r0, r9
 8013584:	f7fd fb36 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8013588:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801358c:	2b00      	cmp	r3, #0
 801358e:	dd4e      	ble.n	801362e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013590:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013594:	2b00      	cmp	r3, #0
 8013596:	dd4a      	ble.n	801362e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013598:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801359c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80135a0:	1a9b      	subs	r3, r3, r2
 80135a2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80135a6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80135aa:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80135ae:	1a9b      	subs	r3, r3, r2
 80135b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80135b4:	6823      	ldr	r3, [r4, #0]
 80135b6:	4641      	mov	r1, r8
 80135b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135ba:	4620      	mov	r0, r4
 80135bc:	4798      	blx	r3
 80135be:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	d053      	beq.n	801366e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80135c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80135c8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80135ca:	682b      	ldr	r3, [r5, #0]
 80135cc:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80135d0:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80135d4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80135d8:	785b      	ldrb	r3, [r3, #1]
 80135da:	9209      	str	r2, [sp, #36]	; 0x24
 80135dc:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80135e0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80135e4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80135e8:	2300      	movs	r3, #0
 80135ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80135ee:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80135f2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80135f6:	4b22      	ldr	r3, [pc, #136]	; (8013680 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80135f8:	9607      	str	r6, [sp, #28]
 80135fa:	681b      	ldr	r3, [r3, #0]
 80135fc:	f88d 5020 	strb.w	r5, [sp, #32]
 8013600:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013604:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013608:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801360c:	b10a      	cbz	r2, 8013612 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801360e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013610:	b904      	cbnz	r4, 8013614 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013612:	689c      	ldr	r4, [r3, #8]
 8013614:	4b1b      	ldr	r3, [pc, #108]	; (8013684 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013616:	6818      	ldr	r0, [r3, #0]
 8013618:	f7f4 fe10 	bl	800823c <_ZNK8touchgfx5Texts7getTextEt>
 801361c:	ab07      	add	r3, sp, #28
 801361e:	9001      	str	r0, [sp, #4]
 8013620:	9300      	str	r3, [sp, #0]
 8013622:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013626:	464b      	mov	r3, r9
 8013628:	4620      	mov	r0, r4
 801362a:	f7f4 fdb9 	bl	80081a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801362e:	b00d      	add	sp, #52	; 0x34
 8013630:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013634:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013638:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801363c:	1ad2      	subs	r2, r2, r3
 801363e:	3201      	adds	r2, #1
 8013640:	e78d      	b.n	801355e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013642:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013646:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801364a:	1ad2      	subs	r2, r2, r3
 801364c:	3201      	adds	r2, #1
 801364e:	2002      	movs	r0, #2
 8013650:	f8ad 3010 	strh.w	r3, [sp, #16]
 8013654:	fb92 f2f0 	sdiv	r2, r2, r0
 8013658:	f8ad 1012 	strh.w	r1, [sp, #18]
 801365c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013660:	e786      	b.n	8013570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013662:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013666:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801366a:	1ad2      	subs	r2, r2, r3
 801366c:	e7ef      	b.n	801364e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 801366e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013670:	e7aa      	b.n	80135c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8013672:	bf00      	nop
 8013674:	20013020 	.word	0x20013020
 8013678:	2001301c 	.word	0x2001301c
 801367c:	20013024 	.word	0x20013024
 8013680:	20012fc4 	.word	0x20012fc4
 8013684:	20013028 	.word	0x20013028

08013688 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013688:	b510      	push	{r4, lr}
 801368a:	2101      	movs	r1, #1
 801368c:	4c13      	ldr	r4, [pc, #76]	; (80136dc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801368e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013692:	2200      	movs	r2, #0
 8013694:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013698:	6004      	str	r4, [r0, #0]
 801369a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801369e:	4c10      	ldr	r4, [pc, #64]	; (80136e0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80136a0:	8082      	strh	r2, [r0, #4]
 80136a2:	80c2      	strh	r2, [r0, #6]
 80136a4:	8102      	strh	r2, [r0, #8]
 80136a6:	8142      	strh	r2, [r0, #10]
 80136a8:	8182      	strh	r2, [r0, #12]
 80136aa:	81c2      	strh	r2, [r0, #14]
 80136ac:	8202      	strh	r2, [r0, #16]
 80136ae:	8242      	strh	r2, [r0, #18]
 80136b0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80136b4:	61c2      	str	r2, [r0, #28]
 80136b6:	8402      	strh	r2, [r0, #32]
 80136b8:	8442      	strh	r2, [r0, #34]	; 0x22
 80136ba:	6282      	str	r2, [r0, #40]	; 0x28
 80136bc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80136c0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80136c2:	8601      	strh	r1, [r0, #48]	; 0x30
 80136c4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80136c8:	6344      	str	r4, [r0, #52]	; 0x34
 80136ca:	8701      	strh	r1, [r0, #56]	; 0x38
 80136cc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80136d0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80136d4:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80136d8:	bd10      	pop	{r4, pc}
 80136da:	bf00      	nop
 80136dc:	0802f708 	.word	0x0802f708
 80136e0:	0802c760 	.word	0x0802c760

080136e4 <_ZN8touchgfx7OutlineD1Ev>:
 80136e4:	4770      	bx	lr

080136e6 <_ZN8touchgfx7OutlineD0Ev>:
 80136e6:	b510      	push	{r4, lr}
 80136e8:	2130      	movs	r1, #48	; 0x30
 80136ea:	4604      	mov	r4, r0
 80136ec:	f016 fc49 	bl	8029f82 <_ZdlPvj>
 80136f0:	4620      	mov	r0, r4
 80136f2:	bd10      	pop	{r4, pc}

080136f4 <_ZN8touchgfx7Outline5resetEv>:
 80136f4:	b510      	push	{r4, lr}
 80136f6:	4604      	mov	r4, r0
 80136f8:	f000 fe96 	bl	8014428 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80136fc:	60e0      	str	r0, [r4, #12]
 80136fe:	f000 fe99 	bl	8014434 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8013702:	68e3      	ldr	r3, [r4, #12]
 8013704:	6123      	str	r3, [r4, #16]
 8013706:	08c0      	lsrs	r0, r0, #3
 8013708:	2200      	movs	r2, #0
 801370a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801370e:	3801      	subs	r0, #1
 8013710:	6060      	str	r0, [r4, #4]
 8013712:	60a2      	str	r2, [r4, #8]
 8013714:	8019      	strh	r1, [r3, #0]
 8013716:	8059      	strh	r1, [r3, #2]
 8013718:	809a      	strh	r2, [r3, #4]
 801371a:	80da      	strh	r2, [r3, #6]
 801371c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801371e:	f023 0301 	bic.w	r3, r3, #1
 8013722:	f043 0302 	orr.w	r3, r3, #2
 8013726:	6263      	str	r3, [r4, #36]	; 0x24
 8013728:	bd10      	pop	{r4, pc}
	...

0801372c <_ZN8touchgfx7OutlineC1Ev>:
 801372c:	b510      	push	{r4, lr}
 801372e:	4b0a      	ldr	r3, [pc, #40]	; (8013758 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013730:	6003      	str	r3, [r0, #0]
 8013732:	2300      	movs	r3, #0
 8013734:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013738:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801373c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013740:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8013744:	6243      	str	r3, [r0, #36]	; 0x24
 8013746:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801374a:	4604      	mov	r4, r0
 801374c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013750:	f7ff ffd0 	bl	80136f4 <_ZN8touchgfx7Outline5resetEv>
 8013754:	4620      	mov	r0, r4
 8013756:	bd10      	pop	{r4, pc}
 8013758:	0802f77c 	.word	0x0802f77c

0801375c <_ZN8touchgfx7Outline10renderLineEiiii>:
 801375c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013760:	b093      	sub	sp, #76	; 0x4c
 8013762:	1156      	asrs	r6, r2, #5
 8013764:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8013766:	9305      	str	r3, [sp, #20]
 8013768:	f004 051f 	and.w	r5, r4, #31
 801376c:	1153      	asrs	r3, r2, #5
 801376e:	9504      	str	r5, [sp, #16]
 8013770:	1165      	asrs	r5, r4, #5
 8013772:	9303      	str	r3, [sp, #12]
 8013774:	42ae      	cmp	r6, r5
 8013776:	ea4f 1364 	mov.w	r3, r4, asr #5
 801377a:	9306      	str	r3, [sp, #24]
 801377c:	f002 031f 	and.w	r3, r2, #31
 8013780:	f040 80f8 	bne.w	8013974 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8013784:	9c04      	ldr	r4, [sp, #16]
 8013786:	9a05      	ldr	r2, [sp, #20]
 8013788:	42a3      	cmp	r3, r4
 801378a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801378e:	6902      	ldr	r2, [r0, #16]
 8013790:	d125      	bne.n	80137de <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8013792:	f9b2 3000 	ldrsh.w	r3, [r2]
 8013796:	459e      	cmp	lr, r3
 8013798:	d103      	bne.n	80137a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801379a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801379e:	429e      	cmp	r6, r3
 80137a0:	d035      	beq.n	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80137a2:	88d1      	ldrh	r1, [r2, #6]
 80137a4:	8893      	ldrh	r3, [r2, #4]
 80137a6:	430b      	orrs	r3, r1
 80137a8:	d010      	beq.n	80137cc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80137aa:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80137ae:	2b00      	cmp	r3, #0
 80137b0:	db0c      	blt.n	80137cc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80137b2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80137b4:	428b      	cmp	r3, r1
 80137b6:	da09      	bge.n	80137cc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80137b8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80137bc:	428b      	cmp	r3, r1
 80137be:	bf38      	it	cc
 80137c0:	3208      	addcc	r2, #8
 80137c2:	f103 0301 	add.w	r3, r3, #1
 80137c6:	bf38      	it	cc
 80137c8:	6102      	strcc	r2, [r0, #16]
 80137ca:	6083      	str	r3, [r0, #8]
 80137cc:	6903      	ldr	r3, [r0, #16]
 80137ce:	9a03      	ldr	r2, [sp, #12]
 80137d0:	f8a3 e000 	strh.w	lr, [r3]
 80137d4:	805a      	strh	r2, [r3, #2]
 80137d6:	2200      	movs	r2, #0
 80137d8:	809a      	strh	r2, [r3, #4]
 80137da:	80da      	strh	r2, [r3, #6]
 80137dc:	e017      	b.n	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80137de:	9c05      	ldr	r4, [sp, #20]
 80137e0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80137e4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80137e8:	f004 041f 	and.w	r4, r4, #31
 80137ec:	114e      	asrs	r6, r1, #5
 80137ee:	9402      	str	r4, [sp, #8]
 80137f0:	9c04      	ldr	r4, [sp, #16]
 80137f2:	4576      	cmp	r6, lr
 80137f4:	f001 0c1f 	and.w	ip, r1, #31
 80137f8:	eba4 0403 	sub.w	r4, r4, r3
 80137fc:	d10a      	bne.n	8013814 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80137fe:	9b02      	ldr	r3, [sp, #8]
 8013800:	449c      	add	ip, r3
 8013802:	44a0      	add	r8, r4
 8013804:	fb04 a40c 	mla	r4, r4, ip, sl
 8013808:	f8a2 8004 	strh.w	r8, [r2, #4]
 801380c:	80d4      	strh	r4, [r2, #6]
 801380e:	b013      	add	sp, #76	; 0x4c
 8013810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013814:	9d05      	ldr	r5, [sp, #20]
 8013816:	1a69      	subs	r1, r5, r1
 8013818:	bf5b      	ittet	pl
 801381a:	f1cc 0520 	rsbpl	r5, ip, #32
 801381e:	436c      	mulpl	r4, r5
 8013820:	2500      	movmi	r5, #0
 8013822:	2520      	movpl	r5, #32
 8013824:	bf44      	itt	mi
 8013826:	fb04 f40c 	mulmi.w	r4, r4, ip
 801382a:	4249      	negmi	r1, r1
 801382c:	9501      	str	r5, [sp, #4]
 801382e:	9f01      	ldr	r7, [sp, #4]
 8013830:	fb94 f5f1 	sdiv	r5, r4, r1
 8013834:	fb01 4415 	mls	r4, r1, r5, r4
 8013838:	bf54      	ite	pl
 801383a:	f04f 0901 	movpl.w	r9, #1
 801383e:	f04f 39ff 	movmi.w	r9, #4294967295
 8013842:	2c00      	cmp	r4, #0
 8013844:	bfb8      	it	lt
 8013846:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801384a:	44bc      	add	ip, r7
 801384c:	44a8      	add	r8, r5
 801384e:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013852:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013856:	f8a2 c006 	strh.w	ip, [r2, #6]
 801385a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801385e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013862:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8013866:	bfb8      	it	lt
 8013868:	1864      	addlt	r4, r4, r1
 801386a:	ea58 0202 	orrs.w	r2, r8, r2
 801386e:	444e      	add	r6, r9
 8013870:	d011      	beq.n	8013896 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013872:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013876:	f1b8 0f00 	cmp.w	r8, #0
 801387a:	db0c      	blt.n	8013896 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801387c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801387e:	4590      	cmp	r8, r2
 8013880:	da09      	bge.n	8013896 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013882:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8013886:	4590      	cmp	r8, r2
 8013888:	bf3c      	itt	cc
 801388a:	f10c 0208 	addcc.w	r2, ip, #8
 801388e:	6102      	strcc	r2, [r0, #16]
 8013890:	f108 0201 	add.w	r2, r8, #1
 8013894:	6082      	str	r2, [r0, #8]
 8013896:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801389a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801389e:	f8ac 6000 	strh.w	r6, [ip]
 80138a2:	2700      	movs	r7, #0
 80138a4:	45b6      	cmp	lr, r6
 80138a6:	f8ac 2002 	strh.w	r2, [ip, #2]
 80138aa:	f8ac 7004 	strh.w	r7, [ip, #4]
 80138ae:	f8ac 7006 	strh.w	r7, [ip, #6]
 80138b2:	442b      	add	r3, r5
 80138b4:	d04d      	beq.n	8013952 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80138b6:	9f04      	ldr	r7, [sp, #16]
 80138b8:	1aff      	subs	r7, r7, r3
 80138ba:	443d      	add	r5, r7
 80138bc:	016d      	lsls	r5, r5, #5
 80138be:	fb95 f8f1 	sdiv	r8, r5, r1
 80138c2:	fb01 5518 	mls	r5, r1, r8, r5
 80138c6:	2d00      	cmp	r5, #0
 80138c8:	bfb8      	it	lt
 80138ca:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80138ce:	f108 0701 	add.w	r7, r8, #1
 80138d2:	bfb8      	it	lt
 80138d4:	186d      	addlt	r5, r5, r1
 80138d6:	1a64      	subs	r4, r4, r1
 80138d8:	9703      	str	r7, [sp, #12]
 80138da:	f04f 0a00 	mov.w	sl, #0
 80138de:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80138e2:	1964      	adds	r4, r4, r5
 80138e4:	bf58      	it	pl
 80138e6:	9f03      	ldrpl	r7, [sp, #12]
 80138e8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80138ec:	bf48      	it	mi
 80138ee:	4647      	movmi	r7, r8
 80138f0:	44bb      	add	fp, r7
 80138f2:	f8ac b004 	strh.w	fp, [ip, #4]
 80138f6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80138fa:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80138fe:	f8ac b006 	strh.w	fp, [ip, #6]
 8013902:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013906:	443b      	add	r3, r7
 8013908:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801390c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013910:	bf58      	it	pl
 8013912:	1a64      	subpl	r4, r4, r1
 8013914:	ea5b 0707 	orrs.w	r7, fp, r7
 8013918:	444e      	add	r6, r9
 801391a:	d011      	beq.n	8013940 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801391c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013920:	f1bb 0f00 	cmp.w	fp, #0
 8013924:	db0c      	blt.n	8013940 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013926:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013928:	45bb      	cmp	fp, r7
 801392a:	da09      	bge.n	8013940 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801392c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013930:	45bb      	cmp	fp, r7
 8013932:	bf3c      	itt	cc
 8013934:	f10c 0708 	addcc.w	r7, ip, #8
 8013938:	6107      	strcc	r7, [r0, #16]
 801393a:	f10b 0701 	add.w	r7, fp, #1
 801393e:	6087      	str	r7, [r0, #8]
 8013940:	6907      	ldr	r7, [r0, #16]
 8013942:	45b6      	cmp	lr, r6
 8013944:	803e      	strh	r6, [r7, #0]
 8013946:	807a      	strh	r2, [r7, #2]
 8013948:	f8a7 a004 	strh.w	sl, [r7, #4]
 801394c:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013950:	d1c5      	bne.n	80138de <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8013952:	9a04      	ldr	r2, [sp, #16]
 8013954:	1ad3      	subs	r3, r2, r3
 8013956:	6902      	ldr	r2, [r0, #16]
 8013958:	8891      	ldrh	r1, [r2, #4]
 801395a:	88d6      	ldrh	r6, [r2, #6]
 801395c:	4419      	add	r1, r3
 801395e:	8091      	strh	r1, [r2, #4]
 8013960:	9902      	ldr	r1, [sp, #8]
 8013962:	f101 0c20 	add.w	ip, r1, #32
 8013966:	9901      	ldr	r1, [sp, #4]
 8013968:	ebac 0c01 	sub.w	ip, ip, r1
 801396c:	fb03 630c 	mla	r3, r3, ip, r6
 8013970:	80d3      	strh	r3, [r2, #6]
 8013972:	e74c      	b.n	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013974:	9d05      	ldr	r5, [sp, #20]
 8013976:	1aa2      	subs	r2, r4, r2
 8013978:	eba5 0501 	sub.w	r5, r5, r1
 801397c:	9508      	str	r5, [sp, #32]
 801397e:	9202      	str	r2, [sp, #8]
 8013980:	f140 8128 	bpl.w	8013bd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8013984:	9a03      	ldr	r2, [sp, #12]
 8013986:	2a00      	cmp	r2, #0
 8013988:	f6ff af41 	blt.w	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801398c:	9a02      	ldr	r2, [sp, #8]
 801398e:	4252      	negs	r2, r2
 8013990:	9202      	str	r2, [sp, #8]
 8013992:	9a06      	ldr	r2, [sp, #24]
 8013994:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013998:	f04f 34ff 	mov.w	r4, #4294967295
 801399c:	9206      	str	r2, [sp, #24]
 801399e:	462a      	mov	r2, r5
 80139a0:	940b      	str	r4, [sp, #44]	; 0x2c
 80139a2:	435a      	muls	r2, r3
 80139a4:	2400      	movs	r4, #0
 80139a6:	9d02      	ldr	r5, [sp, #8]
 80139a8:	9401      	str	r4, [sp, #4]
 80139aa:	9c02      	ldr	r4, [sp, #8]
 80139ac:	fb92 f4f4 	sdiv	r4, r2, r4
 80139b0:	fb05 2214 	mls	r2, r5, r4, r2
 80139b4:	2a00      	cmp	r2, #0
 80139b6:	9207      	str	r2, [sp, #28]
 80139b8:	bfbc      	itt	lt
 80139ba:	1952      	addlt	r2, r2, r5
 80139bc:	9207      	strlt	r2, [sp, #28]
 80139be:	9a01      	ldr	r2, [sp, #4]
 80139c0:	6905      	ldr	r5, [r0, #16]
 80139c2:	bfb8      	it	lt
 80139c4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80139c8:	eb04 0901 	add.w	r9, r4, r1
 80139cc:	429a      	cmp	r2, r3
 80139ce:	ea4f 1669 	mov.w	r6, r9, asr #5
 80139d2:	f040 8112 	bne.w	8013bfa <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80139d6:	f9b5 3000 	ldrsh.w	r3, [r5]
 80139da:	429e      	cmp	r6, r3
 80139dc:	d104      	bne.n	80139e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80139de:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80139e2:	9a03      	ldr	r2, [sp, #12]
 80139e4:	429a      	cmp	r2, r3
 80139e6:	d01b      	beq.n	8013a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80139e8:	88ea      	ldrh	r2, [r5, #6]
 80139ea:	88ab      	ldrh	r3, [r5, #4]
 80139ec:	4313      	orrs	r3, r2
 80139ee:	d010      	beq.n	8013a12 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80139f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80139f4:	2a00      	cmp	r2, #0
 80139f6:	db0c      	blt.n	8013a12 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80139f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80139fa:	429a      	cmp	r2, r3
 80139fc:	da09      	bge.n	8013a12 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80139fe:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8013a02:	429a      	cmp	r2, r3
 8013a04:	bf38      	it	cc
 8013a06:	3508      	addcc	r5, #8
 8013a08:	f102 0201 	add.w	r2, r2, #1
 8013a0c:	bf38      	it	cc
 8013a0e:	6105      	strcc	r5, [r0, #16]
 8013a10:	6082      	str	r2, [r0, #8]
 8013a12:	6903      	ldr	r3, [r0, #16]
 8013a14:	9a03      	ldr	r2, [sp, #12]
 8013a16:	805a      	strh	r2, [r3, #2]
 8013a18:	2200      	movs	r2, #0
 8013a1a:	801e      	strh	r6, [r3, #0]
 8013a1c:	809a      	strh	r2, [r3, #4]
 8013a1e:	80da      	strh	r2, [r3, #6]
 8013a20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a22:	9a03      	ldr	r2, [sp, #12]
 8013a24:	6901      	ldr	r1, [r0, #16]
 8013a26:	441a      	add	r2, r3
 8013a28:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013a2c:	42b3      	cmp	r3, r6
 8013a2e:	d103      	bne.n	8013a38 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013a30:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013a34:	429a      	cmp	r2, r3
 8013a36:	d01a      	beq.n	8013a6e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013a38:	88cc      	ldrh	r4, [r1, #6]
 8013a3a:	888b      	ldrh	r3, [r1, #4]
 8013a3c:	4323      	orrs	r3, r4
 8013a3e:	d010      	beq.n	8013a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013a40:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013a44:	2c00      	cmp	r4, #0
 8013a46:	db0c      	blt.n	8013a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013a48:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013a4a:	429c      	cmp	r4, r3
 8013a4c:	da09      	bge.n	8013a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013a4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013a52:	429c      	cmp	r4, r3
 8013a54:	bf38      	it	cc
 8013a56:	3108      	addcc	r1, #8
 8013a58:	f104 0401 	add.w	r4, r4, #1
 8013a5c:	bf38      	it	cc
 8013a5e:	6101      	strcc	r1, [r0, #16]
 8013a60:	6084      	str	r4, [r0, #8]
 8013a62:	6903      	ldr	r3, [r0, #16]
 8013a64:	2100      	movs	r1, #0
 8013a66:	801e      	strh	r6, [r3, #0]
 8013a68:	805a      	strh	r2, [r3, #2]
 8013a6a:	8099      	strh	r1, [r3, #4]
 8013a6c:	80d9      	strh	r1, [r3, #6]
 8013a6e:	9b06      	ldr	r3, [sp, #24]
 8013a70:	4293      	cmp	r3, r2
 8013a72:	f000 8082 	beq.w	8013b7a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8013a76:	9b08      	ldr	r3, [sp, #32]
 8013a78:	9c02      	ldr	r4, [sp, #8]
 8013a7a:	9902      	ldr	r1, [sp, #8]
 8013a7c:	015b      	lsls	r3, r3, #5
 8013a7e:	fb93 f1f1 	sdiv	r1, r3, r1
 8013a82:	fb04 3311 	mls	r3, r4, r1, r3
 8013a86:	2b00      	cmp	r3, #0
 8013a88:	9103      	str	r1, [sp, #12]
 8013a8a:	9308      	str	r3, [sp, #32]
 8013a8c:	da04      	bge.n	8013a98 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013a8e:	1e4b      	subs	r3, r1, #1
 8013a90:	9303      	str	r3, [sp, #12]
 8013a92:	9b08      	ldr	r3, [sp, #32]
 8013a94:	4423      	add	r3, r4
 8013a96:	9308      	str	r3, [sp, #32]
 8013a98:	9b07      	ldr	r3, [sp, #28]
 8013a9a:	9902      	ldr	r1, [sp, #8]
 8013a9c:	1a5b      	subs	r3, r3, r1
 8013a9e:	9307      	str	r3, [sp, #28]
 8013aa0:	9b01      	ldr	r3, [sp, #4]
 8013aa2:	f1c3 0320 	rsb	r3, r3, #32
 8013aa6:	930e      	str	r3, [sp, #56]	; 0x38
 8013aa8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013aaa:	9b01      	ldr	r3, [sp, #4]
 8013aac:	1a5b      	subs	r3, r3, r1
 8013aae:	464f      	mov	r7, r9
 8013ab0:	930a      	str	r3, [sp, #40]	; 0x28
 8013ab2:	2600      	movs	r6, #0
 8013ab4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013ab8:	185b      	adds	r3, r3, r1
 8013aba:	bf58      	it	pl
 8013abc:	9902      	ldrpl	r1, [sp, #8]
 8013abe:	9307      	str	r3, [sp, #28]
 8013ac0:	bf5d      	ittte	pl
 8013ac2:	1a5b      	subpl	r3, r3, r1
 8013ac4:	9307      	strpl	r3, [sp, #28]
 8013ac6:	9b03      	ldrpl	r3, [sp, #12]
 8013ac8:	9903      	ldrmi	r1, [sp, #12]
 8013aca:	bf58      	it	pl
 8013acc:	1c59      	addpl	r1, r3, #1
 8013ace:	4489      	add	r9, r1
 8013ad0:	2a00      	cmp	r2, #0
 8013ad2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8013ad6:	db2e      	blt.n	8013b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013ad8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013ada:	4293      	cmp	r3, r2
 8013adc:	dd2b      	ble.n	8013b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013ade:	9c01      	ldr	r4, [sp, #4]
 8013ae0:	6905      	ldr	r5, [r0, #16]
 8013ae2:	46a0      	mov	r8, r4
 8013ae4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013ae6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013aea:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013aee:	45a0      	cmp	r8, r4
 8013af0:	f040 814f 	bne.w	8013d92 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8013af4:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013af8:	4551      	cmp	r1, sl
 8013afa:	d103      	bne.n	8013b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013afc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013b00:	4291      	cmp	r1, r2
 8013b02:	d018      	beq.n	8013b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013b04:	ea5c 010e 	orrs.w	r1, ip, lr
 8013b08:	d00f      	beq.n	8013b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013b0a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013b0e:	2900      	cmp	r1, #0
 8013b10:	db0b      	blt.n	8013b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013b12:	428b      	cmp	r3, r1
 8013b14:	dd09      	ble.n	8013b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013b16:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013b1a:	4299      	cmp	r1, r3
 8013b1c:	bf38      	it	cc
 8013b1e:	3508      	addcc	r5, #8
 8013b20:	f101 0101 	add.w	r1, r1, #1
 8013b24:	bf38      	it	cc
 8013b26:	6105      	strcc	r5, [r0, #16]
 8013b28:	6081      	str	r1, [r0, #8]
 8013b2a:	6903      	ldr	r3, [r0, #16]
 8013b2c:	f8a3 a000 	strh.w	sl, [r3]
 8013b30:	805a      	strh	r2, [r3, #2]
 8013b32:	809e      	strh	r6, [r3, #4]
 8013b34:	80de      	strh	r6, [r3, #6]
 8013b36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b38:	6901      	ldr	r1, [r0, #16]
 8013b3a:	441a      	add	r2, r3
 8013b3c:	88cc      	ldrh	r4, [r1, #6]
 8013b3e:	888b      	ldrh	r3, [r1, #4]
 8013b40:	4323      	orrs	r3, r4
 8013b42:	d010      	beq.n	8013b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013b44:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013b48:	2c00      	cmp	r4, #0
 8013b4a:	db0c      	blt.n	8013b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013b4c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013b4e:	429c      	cmp	r4, r3
 8013b50:	da09      	bge.n	8013b66 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013b52:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8013b56:	429c      	cmp	r4, r3
 8013b58:	bf38      	it	cc
 8013b5a:	3108      	addcc	r1, #8
 8013b5c:	f104 0401 	add.w	r4, r4, #1
 8013b60:	bf38      	it	cc
 8013b62:	6101      	strcc	r1, [r0, #16]
 8013b64:	6084      	str	r4, [r0, #8]
 8013b66:	6903      	ldr	r3, [r0, #16]
 8013b68:	f8a3 a000 	strh.w	sl, [r3]
 8013b6c:	805a      	strh	r2, [r3, #2]
 8013b6e:	809e      	strh	r6, [r3, #4]
 8013b70:	80de      	strh	r6, [r3, #6]
 8013b72:	9b06      	ldr	r3, [sp, #24]
 8013b74:	4293      	cmp	r3, r2
 8013b76:	464f      	mov	r7, r9
 8013b78:	d19c      	bne.n	8013ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013b7a:	9b01      	ldr	r3, [sp, #4]
 8013b7c:	6907      	ldr	r7, [r0, #16]
 8013b7e:	f1c3 0620 	rsb	r6, r3, #32
 8013b82:	9b05      	ldr	r3, [sp, #20]
 8013b84:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013b88:	9b04      	ldr	r3, [sp, #16]
 8013b8a:	429e      	cmp	r6, r3
 8013b8c:	f040 81cc 	bne.w	8013f28 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013b90:	f9b7 3000 	ldrsh.w	r3, [r7]
 8013b94:	459e      	cmp	lr, r3
 8013b96:	d104      	bne.n	8013ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013b98:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013b9c:	429a      	cmp	r2, r3
 8013b9e:	f43f ae36 	beq.w	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013ba2:	88f9      	ldrh	r1, [r7, #6]
 8013ba4:	88bb      	ldrh	r3, [r7, #4]
 8013ba6:	430b      	orrs	r3, r1
 8013ba8:	d010      	beq.n	8013bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013baa:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013bae:	2b00      	cmp	r3, #0
 8013bb0:	db0c      	blt.n	8013bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013bb2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8013bb4:	428b      	cmp	r3, r1
 8013bb6:	da09      	bge.n	8013bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013bb8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013bbc:	428b      	cmp	r3, r1
 8013bbe:	bf38      	it	cc
 8013bc0:	3708      	addcc	r7, #8
 8013bc2:	f103 0301 	add.w	r3, r3, #1
 8013bc6:	bf38      	it	cc
 8013bc8:	6107      	strcc	r7, [r0, #16]
 8013bca:	6083      	str	r3, [r0, #8]
 8013bcc:	6903      	ldr	r3, [r0, #16]
 8013bce:	f8a3 e000 	strh.w	lr, [r3]
 8013bd2:	e5ff      	b.n	80137d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8013bd4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013bd6:	9c03      	ldr	r4, [sp, #12]
 8013bd8:	42a2      	cmp	r2, r4
 8013bda:	f6ff ae18 	blt.w	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013bde:	9c06      	ldr	r4, [sp, #24]
 8013be0:	42a2      	cmp	r2, r4
 8013be2:	bfb8      	it	lt
 8013be4:	3201      	addlt	r2, #1
 8013be6:	9c08      	ldr	r4, [sp, #32]
 8013be8:	bfb8      	it	lt
 8013bea:	9206      	strlt	r2, [sp, #24]
 8013bec:	f1c3 0220 	rsb	r2, r3, #32
 8013bf0:	4362      	muls	r2, r4
 8013bf2:	2401      	movs	r4, #1
 8013bf4:	940b      	str	r4, [sp, #44]	; 0x2c
 8013bf6:	2420      	movs	r4, #32
 8013bf8:	e6d5      	b.n	80139a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013bfa:	f009 021f 	and.w	r2, r9, #31
 8013bfe:	ea4f 1861 	mov.w	r8, r1, asr #5
 8013c02:	920c      	str	r2, [sp, #48]	; 0x30
 8013c04:	9a01      	ldr	r2, [sp, #4]
 8013c06:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013c0a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013c0e:	45b0      	cmp	r8, r6
 8013c10:	f001 011f 	and.w	r1, r1, #31
 8013c14:	eba2 0203 	sub.w	r2, r2, r3
 8013c18:	d108      	bne.n	8013c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013c1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c1c:	4419      	add	r1, r3
 8013c1e:	4496      	add	lr, r2
 8013c20:	fb02 a101 	mla	r1, r2, r1, sl
 8013c24:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013c28:	80e9      	strh	r1, [r5, #6]
 8013c2a:	e6f9      	b.n	8013a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013c2c:	2c00      	cmp	r4, #0
 8013c2e:	f2c0 80a9 	blt.w	8013d84 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8013c32:	2701      	movs	r7, #1
 8013c34:	f1c1 0c20 	rsb	ip, r1, #32
 8013c38:	970a      	str	r7, [sp, #40]	; 0x28
 8013c3a:	fb02 f20c 	mul.w	r2, r2, ip
 8013c3e:	2720      	movs	r7, #32
 8013c40:	9709      	str	r7, [sp, #36]	; 0x24
 8013c42:	fb92 fcf4 	sdiv	ip, r2, r4
 8013c46:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013c48:	fb04 221c 	mls	r2, r4, ip, r2
 8013c4c:	2a00      	cmp	r2, #0
 8013c4e:	bfb8      	it	lt
 8013c50:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8013c54:	4439      	add	r1, r7
 8013c56:	fb0c a101 	mla	r1, ip, r1, sl
 8013c5a:	80e9      	strh	r1, [r5, #6]
 8013c5c:	44e6      	add	lr, ip
 8013c5e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013c60:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013c64:	eb08 0501 	add.w	r5, r8, r1
 8013c68:	6901      	ldr	r1, [r0, #16]
 8013c6a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013c6e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8013c72:	bfb8      	it	lt
 8013c74:	1912      	addlt	r2, r2, r4
 8013c76:	ea58 070e 	orrs.w	r7, r8, lr
 8013c7a:	d010      	beq.n	8013c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c7c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013c80:	f1be 0f00 	cmp.w	lr, #0
 8013c84:	db0b      	blt.n	8013c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c86:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c88:	45be      	cmp	lr, r7
 8013c8a:	da08      	bge.n	8013c9e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013c8c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013c90:	45be      	cmp	lr, r7
 8013c92:	bf3c      	itt	cc
 8013c94:	3108      	addcc	r1, #8
 8013c96:	6101      	strcc	r1, [r0, #16]
 8013c98:	f10e 0101 	add.w	r1, lr, #1
 8013c9c:	6081      	str	r1, [r0, #8]
 8013c9e:	6901      	ldr	r1, [r0, #16]
 8013ca0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013ca4:	800d      	strh	r5, [r1, #0]
 8013ca6:	f04f 0e00 	mov.w	lr, #0
 8013caa:	42ae      	cmp	r6, r5
 8013cac:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013cb0:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013cb4:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013cb8:	4463      	add	r3, ip
 8013cba:	d054      	beq.n	8013d66 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013cbc:	9901      	ldr	r1, [sp, #4]
 8013cbe:	1ac9      	subs	r1, r1, r3
 8013cc0:	4461      	add	r1, ip
 8013cc2:	0149      	lsls	r1, r1, #5
 8013cc4:	fb91 fef4 	sdiv	lr, r1, r4
 8013cc8:	fb04 111e 	mls	r1, r4, lr, r1
 8013ccc:	2900      	cmp	r1, #0
 8013cce:	bfb8      	it	lt
 8013cd0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013cd4:	f10e 0701 	add.w	r7, lr, #1
 8013cd8:	bfb8      	it	lt
 8013cda:	1909      	addlt	r1, r1, r4
 8013cdc:	1b12      	subs	r2, r2, r4
 8013cde:	970d      	str	r7, [sp, #52]	; 0x34
 8013ce0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013ce4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013ce6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013cea:	1852      	adds	r2, r2, r1
 8013cec:	bf54      	ite	pl
 8013cee:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013cf2:	46f4      	movmi	ip, lr
 8013cf4:	44e3      	add	fp, ip
 8013cf6:	f8aa b004 	strh.w	fp, [sl, #4]
 8013cfa:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013cfe:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013d02:	f8aa b006 	strh.w	fp, [sl, #6]
 8013d06:	4463      	add	r3, ip
 8013d08:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d0c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013d10:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013d14:	bf58      	it	pl
 8013d16:	1b12      	subpl	r2, r2, r4
 8013d18:	443d      	add	r5, r7
 8013d1a:	ea5b 070a 	orrs.w	r7, fp, sl
 8013d1e:	d014      	beq.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013d20:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013d24:	f1ba 0f00 	cmp.w	sl, #0
 8013d28:	db0f      	blt.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013d2a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d2c:	45ba      	cmp	sl, r7
 8013d2e:	da0c      	bge.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013d30:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013d34:	45ba      	cmp	sl, r7
 8013d36:	bf38      	it	cc
 8013d38:	f10c 0c08 	addcc.w	ip, ip, #8
 8013d3c:	f10a 0a01 	add.w	sl, sl, #1
 8013d40:	bf38      	it	cc
 8013d42:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013d46:	f8c0 a008 	str.w	sl, [r0, #8]
 8013d4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d4e:	f04f 0700 	mov.w	r7, #0
 8013d52:	42ae      	cmp	r6, r5
 8013d54:	f8ac 5000 	strh.w	r5, [ip]
 8013d58:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013d5c:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013d60:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013d64:	d1bc      	bne.n	8013ce0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013d66:	6904      	ldr	r4, [r0, #16]
 8013d68:	9a01      	ldr	r2, [sp, #4]
 8013d6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013d6c:	1ad3      	subs	r3, r2, r3
 8013d6e:	88a2      	ldrh	r2, [r4, #4]
 8013d70:	441a      	add	r2, r3
 8013d72:	80a2      	strh	r2, [r4, #4]
 8013d74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d76:	3120      	adds	r1, #32
 8013d78:	1a89      	subs	r1, r1, r2
 8013d7a:	88e2      	ldrh	r2, [r4, #6]
 8013d7c:	fb03 2301 	mla	r3, r3, r1, r2
 8013d80:	80e3      	strh	r3, [r4, #6]
 8013d82:	e64d      	b.n	8013a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013d84:	f04f 37ff 	mov.w	r7, #4294967295
 8013d88:	970a      	str	r7, [sp, #40]	; 0x28
 8013d8a:	434a      	muls	r2, r1
 8013d8c:	4264      	negs	r4, r4
 8013d8e:	2700      	movs	r7, #0
 8013d90:	e756      	b.n	8013c40 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013d92:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013d96:	f009 031f 	and.w	r3, r9, #31
 8013d9a:	45d0      	cmp	r8, sl
 8013d9c:	f007 071f 	and.w	r7, r7, #31
 8013da0:	930f      	str	r3, [sp, #60]	; 0x3c
 8013da2:	fa1f fc8c 	uxth.w	ip, ip
 8013da6:	fa1f fe8e 	uxth.w	lr, lr
 8013daa:	d10a      	bne.n	8013dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013dac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013dae:	449c      	add	ip, r3
 8013db0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013db2:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013db6:	441f      	add	r7, r3
 8013db8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013dba:	fb03 e707 	mla	r7, r3, r7, lr
 8013dbe:	80ef      	strh	r7, [r5, #6]
 8013dc0:	e6b9      	b.n	8013b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013dc2:	2900      	cmp	r1, #0
 8013dc4:	f2c0 80a8 	blt.w	8013f18 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013dc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013dca:	f1c7 0320 	rsb	r3, r7, #32
 8013dce:	4363      	muls	r3, r4
 8013dd0:	2401      	movs	r4, #1
 8013dd2:	940d      	str	r4, [sp, #52]	; 0x34
 8013dd4:	2420      	movs	r4, #32
 8013dd6:	940c      	str	r4, [sp, #48]	; 0x30
 8013dd8:	fb93 f4f1 	sdiv	r4, r3, r1
 8013ddc:	fb01 3b14 	mls	fp, r1, r4, r3
 8013de0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013de2:	f1bb 0f00 	cmp.w	fp, #0
 8013de6:	bfb8      	it	lt
 8013de8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013dec:	441f      	add	r7, r3
 8013dee:	fb04 e707 	mla	r7, r4, r7, lr
 8013df2:	44a4      	add	ip, r4
 8013df4:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013df8:	80ef      	strh	r7, [r5, #6]
 8013dfa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013dfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e00:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013e04:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013e08:	bfb8      	it	lt
 8013e0a:	448b      	addlt	fp, r1
 8013e0c:	eb08 0503 	add.w	r5, r8, r3
 8013e10:	ea5e 0307 	orrs.w	r3, lr, r7
 8013e14:	d011      	beq.n	8013e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013e16:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013e1a:	f1be 0f00 	cmp.w	lr, #0
 8013e1e:	db0c      	blt.n	8013e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013e20:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013e22:	45be      	cmp	lr, r7
 8013e24:	da09      	bge.n	8013e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013e26:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013e2a:	45be      	cmp	lr, r7
 8013e2c:	bf3c      	itt	cc
 8013e2e:	f10c 0708 	addcc.w	r7, ip, #8
 8013e32:	6107      	strcc	r7, [r0, #16]
 8013e34:	f10e 0701 	add.w	r7, lr, #1
 8013e38:	6087      	str	r7, [r0, #8]
 8013e3a:	6907      	ldr	r7, [r0, #16]
 8013e3c:	b213      	sxth	r3, r2
 8013e3e:	9310      	str	r3, [sp, #64]	; 0x40
 8013e40:	807b      	strh	r3, [r7, #2]
 8013e42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e44:	803d      	strh	r5, [r7, #0]
 8013e46:	4555      	cmp	r5, sl
 8013e48:	80be      	strh	r6, [r7, #4]
 8013e4a:	80fe      	strh	r6, [r7, #6]
 8013e4c:	eb04 0c03 	add.w	ip, r4, r3
 8013e50:	d051      	beq.n	8013ef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013e52:	9b01      	ldr	r3, [sp, #4]
 8013e54:	eba3 070c 	sub.w	r7, r3, ip
 8013e58:	443c      	add	r4, r7
 8013e5a:	0164      	lsls	r4, r4, #5
 8013e5c:	fb94 f8f1 	sdiv	r8, r4, r1
 8013e60:	fb01 4418 	mls	r4, r1, r8, r4
 8013e64:	2c00      	cmp	r4, #0
 8013e66:	bfb8      	it	lt
 8013e68:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013e6c:	ebab 0301 	sub.w	r3, fp, r1
 8013e70:	f108 0701 	add.w	r7, r8, #1
 8013e74:	bfb8      	it	lt
 8013e76:	1864      	addlt	r4, r4, r1
 8013e78:	9309      	str	r3, [sp, #36]	; 0x24
 8013e7a:	9711      	str	r7, [sp, #68]	; 0x44
 8013e7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e7e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013e82:	191b      	adds	r3, r3, r4
 8013e84:	bf58      	it	pl
 8013e86:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013e88:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013e8c:	9309      	str	r3, [sp, #36]	; 0x24
 8013e8e:	bf48      	it	mi
 8013e90:	4647      	movmi	r7, r8
 8013e92:	44bb      	add	fp, r7
 8013e94:	f8ae b004 	strh.w	fp, [lr, #4]
 8013e98:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013e9c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013ea0:	f8ae b006 	strh.w	fp, [lr, #6]
 8013ea4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013ea8:	44bc      	add	ip, r7
 8013eaa:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013eac:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013eb0:	443d      	add	r5, r7
 8013eb2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013eb6:	bf5c      	itt	pl
 8013eb8:	1a5b      	subpl	r3, r3, r1
 8013eba:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013ebc:	ea5b 0307 	orrs.w	r3, fp, r7
 8013ec0:	d011      	beq.n	8013ee6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013ec2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013ec6:	f1bb 0f00 	cmp.w	fp, #0
 8013eca:	db0c      	blt.n	8013ee6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013ecc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013ece:	45bb      	cmp	fp, r7
 8013ed0:	da09      	bge.n	8013ee6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013ed2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013ed6:	45bb      	cmp	fp, r7
 8013ed8:	bf3c      	itt	cc
 8013eda:	f10e 0708 	addcc.w	r7, lr, #8
 8013ede:	6107      	strcc	r7, [r0, #16]
 8013ee0:	f10b 0701 	add.w	r7, fp, #1
 8013ee4:	6087      	str	r7, [r0, #8]
 8013ee6:	6907      	ldr	r7, [r0, #16]
 8013ee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013eea:	803d      	strh	r5, [r7, #0]
 8013eec:	4555      	cmp	r5, sl
 8013eee:	807b      	strh	r3, [r7, #2]
 8013ef0:	80be      	strh	r6, [r7, #4]
 8013ef2:	80fe      	strh	r6, [r7, #6]
 8013ef4:	d1c2      	bne.n	8013e7c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013ef6:	9b01      	ldr	r3, [sp, #4]
 8013ef8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013efa:	eba3 0c0c 	sub.w	ip, r3, ip
 8013efe:	6903      	ldr	r3, [r0, #16]
 8013f00:	8899      	ldrh	r1, [r3, #4]
 8013f02:	4461      	add	r1, ip
 8013f04:	8099      	strh	r1, [r3, #4]
 8013f06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f08:	3720      	adds	r7, #32
 8013f0a:	1a7f      	subs	r7, r7, r1
 8013f0c:	88d9      	ldrh	r1, [r3, #6]
 8013f0e:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013f12:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013f16:	e60e      	b.n	8013b36 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f1a:	f04f 34ff 	mov.w	r4, #4294967295
 8013f1e:	940d      	str	r4, [sp, #52]	; 0x34
 8013f20:	437b      	muls	r3, r7
 8013f22:	4249      	negs	r1, r1
 8013f24:	2400      	movs	r4, #0
 8013f26:	e756      	b.n	8013dd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013f28:	9905      	ldr	r1, [sp, #20]
 8013f2a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013f2e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013f32:	f001 011f 	and.w	r1, r1, #31
 8013f36:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013f3a:	9102      	str	r1, [sp, #8]
 8013f3c:	9904      	ldr	r1, [sp, #16]
 8013f3e:	45f3      	cmp	fp, lr
 8013f40:	f009 0c1f 	and.w	ip, r9, #31
 8013f44:	eba1 0406 	sub.w	r4, r1, r6
 8013f48:	d108      	bne.n	8013f5c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013f4a:	9b02      	ldr	r3, [sp, #8]
 8013f4c:	449c      	add	ip, r3
 8013f4e:	44a0      	add	r8, r4
 8013f50:	fb04 a40c 	mla	r4, r4, ip, sl
 8013f54:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013f58:	80fc      	strh	r4, [r7, #6]
 8013f5a:	e458      	b.n	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013f5c:	9905      	ldr	r1, [sp, #20]
 8013f5e:	ebb1 0109 	subs.w	r1, r1, r9
 8013f62:	bf5b      	ittet	pl
 8013f64:	f1cc 0520 	rsbpl	r5, ip, #32
 8013f68:	436c      	mulpl	r4, r5
 8013f6a:	2500      	movmi	r5, #0
 8013f6c:	2520      	movpl	r5, #32
 8013f6e:	bf44      	itt	mi
 8013f70:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013f74:	4249      	negmi	r1, r1
 8013f76:	9501      	str	r5, [sp, #4]
 8013f78:	9b01      	ldr	r3, [sp, #4]
 8013f7a:	fb94 f5f1 	sdiv	r5, r4, r1
 8013f7e:	fb01 4415 	mls	r4, r1, r5, r4
 8013f82:	bf54      	ite	pl
 8013f84:	f04f 0901 	movpl.w	r9, #1
 8013f88:	f04f 39ff 	movmi.w	r9, #4294967295
 8013f8c:	2c00      	cmp	r4, #0
 8013f8e:	bfb8      	it	lt
 8013f90:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013f94:	449c      	add	ip, r3
 8013f96:	44a8      	add	r8, r5
 8013f98:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013f9c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013fa0:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013fa4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013fa8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013fac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013fb0:	bfb8      	it	lt
 8013fb2:	1864      	addlt	r4, r4, r1
 8013fb4:	ea58 0707 	orrs.w	r7, r8, r7
 8013fb8:	eb0b 0309 	add.w	r3, fp, r9
 8013fbc:	d011      	beq.n	8013fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013fbe:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013fc2:	f1b8 0f00 	cmp.w	r8, #0
 8013fc6:	db0c      	blt.n	8013fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013fc8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013fca:	45b8      	cmp	r8, r7
 8013fcc:	da09      	bge.n	8013fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013fce:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013fd2:	45b8      	cmp	r8, r7
 8013fd4:	bf3c      	itt	cc
 8013fd6:	f10c 0708 	addcc.w	r7, ip, #8
 8013fda:	6107      	strcc	r7, [r0, #16]
 8013fdc:	f108 0701 	add.w	r7, r8, #1
 8013fe0:	6087      	str	r7, [r0, #8]
 8013fe2:	6907      	ldr	r7, [r0, #16]
 8013fe4:	f04f 0c00 	mov.w	ip, #0
 8013fe8:	b212      	sxth	r2, r2
 8013fea:	459e      	cmp	lr, r3
 8013fec:	803b      	strh	r3, [r7, #0]
 8013fee:	807a      	strh	r2, [r7, #2]
 8013ff0:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013ff4:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013ff8:	442e      	add	r6, r5
 8013ffa:	d04d      	beq.n	8014098 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013ffc:	9f04      	ldr	r7, [sp, #16]
 8013ffe:	1bbf      	subs	r7, r7, r6
 8014000:	443d      	add	r5, r7
 8014002:	016d      	lsls	r5, r5, #5
 8014004:	fb95 f8f1 	sdiv	r8, r5, r1
 8014008:	fb01 5518 	mls	r5, r1, r8, r5
 801400c:	4565      	cmp	r5, ip
 801400e:	bfb8      	it	lt
 8014010:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014014:	f108 0701 	add.w	r7, r8, #1
 8014018:	bfb8      	it	lt
 801401a:	186d      	addlt	r5, r5, r1
 801401c:	1a64      	subs	r4, r4, r1
 801401e:	9703      	str	r7, [sp, #12]
 8014020:	f04f 0a00 	mov.w	sl, #0
 8014024:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014028:	1964      	adds	r4, r4, r5
 801402a:	bf58      	it	pl
 801402c:	9f03      	ldrpl	r7, [sp, #12]
 801402e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014032:	bf48      	it	mi
 8014034:	4647      	movmi	r7, r8
 8014036:	44bb      	add	fp, r7
 8014038:	f8ac b004 	strh.w	fp, [ip, #4]
 801403c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014040:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014044:	f8ac b006 	strh.w	fp, [ip, #6]
 8014048:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801404c:	443e      	add	r6, r7
 801404e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014052:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014056:	bf58      	it	pl
 8014058:	1a64      	subpl	r4, r4, r1
 801405a:	ea5b 0707 	orrs.w	r7, fp, r7
 801405e:	444b      	add	r3, r9
 8014060:	d011      	beq.n	8014086 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014062:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014066:	f1bb 0f00 	cmp.w	fp, #0
 801406a:	db0c      	blt.n	8014086 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801406c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801406e:	45bb      	cmp	fp, r7
 8014070:	da09      	bge.n	8014086 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014072:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014076:	45bb      	cmp	fp, r7
 8014078:	bf3c      	itt	cc
 801407a:	f10c 0708 	addcc.w	r7, ip, #8
 801407e:	6107      	strcc	r7, [r0, #16]
 8014080:	f10b 0701 	add.w	r7, fp, #1
 8014084:	6087      	str	r7, [r0, #8]
 8014086:	6907      	ldr	r7, [r0, #16]
 8014088:	459e      	cmp	lr, r3
 801408a:	803b      	strh	r3, [r7, #0]
 801408c:	807a      	strh	r2, [r7, #2]
 801408e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014092:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014096:	d1c5      	bne.n	8014024 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014098:	9b04      	ldr	r3, [sp, #16]
 801409a:	1b9e      	subs	r6, r3, r6
 801409c:	6903      	ldr	r3, [r0, #16]
 801409e:	889a      	ldrh	r2, [r3, #4]
 80140a0:	4432      	add	r2, r6
 80140a2:	809a      	strh	r2, [r3, #4]
 80140a4:	9a02      	ldr	r2, [sp, #8]
 80140a6:	f102 0c20 	add.w	ip, r2, #32
 80140aa:	9a01      	ldr	r2, [sp, #4]
 80140ac:	ebac 0c02 	sub.w	ip, ip, r2
 80140b0:	88da      	ldrh	r2, [r3, #6]
 80140b2:	fb06 260c 	mla	r6, r6, ip, r2
 80140b6:	80de      	strh	r6, [r3, #6]
 80140b8:	f7ff bba9 	b.w	801380e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080140bc <_ZN8touchgfx7Outline6lineToEii>:
 80140bc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80140be:	079b      	lsls	r3, r3, #30
 80140c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80140c2:	460e      	mov	r6, r1
 80140c4:	4615      	mov	r5, r2
 80140c6:	d511      	bpl.n	80140ec <_ZN8touchgfx7Outline6lineToEii+0x30>
 80140c8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80140cc:	ea86 0701 	eor.w	r7, r6, r1
 80140d0:	ea85 0302 	eor.w	r3, r5, r2
 80140d4:	433b      	orrs	r3, r7
 80140d6:	d009      	beq.n	80140ec <_ZN8touchgfx7Outline6lineToEii+0x30>
 80140d8:	4633      	mov	r3, r6
 80140da:	9500      	str	r5, [sp, #0]
 80140dc:	f7ff fb3e 	bl	801375c <_ZN8touchgfx7Outline10renderLineEiiii>
 80140e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80140e2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 80140e6:	f043 0301 	orr.w	r3, r3, #1
 80140ea:	6243      	str	r3, [r0, #36]	; 0x24
 80140ec:	b003      	add	sp, #12
 80140ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

080140f0 <_ZN8touchgfx7Outline6moveToEii>:
 80140f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80140f2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80140f4:	4615      	mov	r5, r2
 80140f6:	079a      	lsls	r2, r3, #30
 80140f8:	4604      	mov	r4, r0
 80140fa:	460e      	mov	r6, r1
 80140fc:	d401      	bmi.n	8014102 <_ZN8touchgfx7Outline6moveToEii+0x12>
 80140fe:	f7ff faf9 	bl	80136f4 <_ZN8touchgfx7Outline5resetEv>
 8014102:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014104:	07db      	lsls	r3, r3, #31
 8014106:	d504      	bpl.n	8014112 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014108:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801410c:	4620      	mov	r0, r4
 801410e:	f7ff ffd5 	bl	80140bc <_ZN8touchgfx7Outline6lineToEii>
 8014112:	6923      	ldr	r3, [r4, #16]
 8014114:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014118:	1170      	asrs	r0, r6, #5
 801411a:	4290      	cmp	r0, r2
 801411c:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014120:	d103      	bne.n	801412a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014122:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014126:	4291      	cmp	r1, r2
 8014128:	d01a      	beq.n	8014160 <_ZN8touchgfx7Outline6moveToEii+0x70>
 801412a:	88df      	ldrh	r7, [r3, #6]
 801412c:	889a      	ldrh	r2, [r3, #4]
 801412e:	433a      	orrs	r2, r7
 8014130:	d010      	beq.n	8014154 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014132:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014136:	2a00      	cmp	r2, #0
 8014138:	db0c      	blt.n	8014154 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801413a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 801413c:	42ba      	cmp	r2, r7
 801413e:	da09      	bge.n	8014154 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014140:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014144:	42ba      	cmp	r2, r7
 8014146:	bf38      	it	cc
 8014148:	3308      	addcc	r3, #8
 801414a:	f102 0201 	add.w	r2, r2, #1
 801414e:	bf38      	it	cc
 8014150:	6123      	strcc	r3, [r4, #16]
 8014152:	60a2      	str	r2, [r4, #8]
 8014154:	6923      	ldr	r3, [r4, #16]
 8014156:	2200      	movs	r2, #0
 8014158:	8018      	strh	r0, [r3, #0]
 801415a:	8059      	strh	r1, [r3, #2]
 801415c:	809a      	strh	r2, [r3, #4]
 801415e:	80da      	strh	r2, [r3, #6]
 8014160:	6166      	str	r6, [r4, #20]
 8014162:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014166:	6225      	str	r5, [r4, #32]
 8014168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801416a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801416a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801416e:	b0d0      	sub	sp, #320	; 0x140
 8014170:	466c      	mov	r4, sp
 8014172:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014176:	4627      	mov	r7, r4
 8014178:	1a0d      	subs	r5, r1, r0
 801417a:	2d48      	cmp	r5, #72	; 0x48
 801417c:	f100 0308 	add.w	r3, r0, #8
 8014180:	f340 80d5 	ble.w	801432e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014184:	112d      	asrs	r5, r5, #4
 8014186:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 801418a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801418e:	6816      	ldr	r6, [r2, #0]
 8014190:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014194:	6006      	str	r6, [r0, #0]
 8014196:	6856      	ldr	r6, [r2, #4]
 8014198:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801419c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80141a0:	6046      	str	r6, [r0, #4]
 80141a2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80141a6:	f8a2 8002 	strh.w	r8, [r2, #2]
 80141aa:	f8a2 e004 	strh.w	lr, [r2, #4]
 80141ae:	f8a2 c006 	strh.w	ip, [r2, #6]
 80141b2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80141b6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80141ba:	4565      	cmp	r5, ip
 80141bc:	f1a1 0208 	sub.w	r2, r1, #8
 80141c0:	db06      	blt.n	80141d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80141c2:	d119      	bne.n	80141f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80141c4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80141c8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80141cc:	42ae      	cmp	r6, r5
 80141ce:	dd13      	ble.n	80141f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80141d0:	460e      	mov	r6, r1
 80141d2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80141d6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80141da:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 80141de:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 80141e2:	601d      	str	r5, [r3, #0]
 80141e4:	6875      	ldr	r5, [r6, #4]
 80141e6:	605d      	str	r5, [r3, #4]
 80141e8:	f821 9c08 	strh.w	r9, [r1, #-8]
 80141ec:	f821 cc06 	strh.w	ip, [r1, #-6]
 80141f0:	f821 8c04 	strh.w	r8, [r1, #-4]
 80141f4:	f821 ec02 	strh.w	lr, [r1, #-2]
 80141f8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80141fc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014200:	42ae      	cmp	r6, r5
 8014202:	db06      	blt.n	8014212 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014204:	d116      	bne.n	8014234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014206:	f9b0 c000 	ldrsh.w	ip, [r0]
 801420a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801420e:	45ac      	cmp	ip, r5
 8014210:	da10      	bge.n	8014234 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014212:	681d      	ldr	r5, [r3, #0]
 8014214:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014218:	6005      	str	r5, [r0, #0]
 801421a:	685d      	ldr	r5, [r3, #4]
 801421c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014220:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014224:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014228:	6045      	str	r5, [r0, #4]
 801422a:	8146      	strh	r6, [r0, #10]
 801422c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014230:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014234:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014238:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801423c:	4565      	cmp	r5, ip
 801423e:	db06      	blt.n	801424e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014240:	d119      	bne.n	8014276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014242:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014246:	f9b0 5000 	ldrsh.w	r5, [r0]
 801424a:	42ae      	cmp	r6, r5
 801424c:	da13      	bge.n	8014276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801424e:	460e      	mov	r6, r1
 8014250:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014254:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014258:	6005      	str	r5, [r0, #0]
 801425a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801425e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014262:	6875      	ldr	r5, [r6, #4]
 8014264:	6045      	str	r5, [r0, #4]
 8014266:	f821 9c08 	strh.w	r9, [r1, #-8]
 801426a:	f821 cc06 	strh.w	ip, [r1, #-6]
 801426e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014272:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014276:	3308      	adds	r3, #8
 8014278:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801427c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014280:	45e6      	cmp	lr, ip
 8014282:	dbf8      	blt.n	8014276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014284:	d105      	bne.n	8014292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014286:	f9b3 6000 	ldrsh.w	r6, [r3]
 801428a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801428e:	42ae      	cmp	r6, r5
 8014290:	dbf1      	blt.n	8014276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014292:	4615      	mov	r5, r2
 8014294:	3a08      	subs	r2, #8
 8014296:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801429a:	45b4      	cmp	ip, r6
 801429c:	dbf9      	blt.n	8014292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801429e:	d105      	bne.n	80142ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80142a0:	f9b0 8000 	ldrsh.w	r8, [r0]
 80142a4:	f9b2 6000 	ldrsh.w	r6, [r2]
 80142a8:	45b0      	cmp	r8, r6
 80142aa:	dbf2      	blt.n	8014292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80142ac:	4293      	cmp	r3, r2
 80142ae:	f1a5 0608 	sub.w	r6, r5, #8
 80142b2:	d816      	bhi.n	80142e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80142b4:	f8d6 c000 	ldr.w	ip, [r6]
 80142b8:	f9b3 a000 	ldrsh.w	sl, [r3]
 80142bc:	f8c3 c000 	str.w	ip, [r3]
 80142c0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80142c4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80142c8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80142cc:	f8c3 c004 	str.w	ip, [r3, #4]
 80142d0:	f825 ac08 	strh.w	sl, [r5, #-8]
 80142d4:	f825 ec06 	strh.w	lr, [r5, #-6]
 80142d8:	f825 9c04 	strh.w	r9, [r5, #-4]
 80142dc:	f825 8c02 	strh.w	r8, [r5, #-2]
 80142e0:	e7c9      	b.n	8014276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80142e2:	f8d6 e000 	ldr.w	lr, [r6]
 80142e6:	f9b0 a000 	ldrsh.w	sl, [r0]
 80142ea:	f8c0 e000 	str.w	lr, [r0]
 80142ee:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80142f2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80142f6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80142fa:	f8c0 e004 	str.w	lr, [r0, #4]
 80142fe:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014302:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014306:	f825 9c04 	strh.w	r9, [r5, #-4]
 801430a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801430e:	1acd      	subs	r5, r1, r3
 8014310:	1a16      	subs	r6, r2, r0
 8014312:	10ed      	asrs	r5, r5, #3
 8014314:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014318:	bfb5      	itete	lt
 801431a:	e9c4 0200 	strdlt	r0, r2, [r4]
 801431e:	e9c4 3100 	strdge	r3, r1, [r4]
 8014322:	460a      	movlt	r2, r1
 8014324:	4603      	movge	r3, r0
 8014326:	3408      	adds	r4, #8
 8014328:	4618      	mov	r0, r3
 801432a:	4611      	mov	r1, r2
 801432c:	e724      	b.n	8014178 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801432e:	4299      	cmp	r1, r3
 8014330:	d928      	bls.n	8014384 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014332:	f1a3 0210 	sub.w	r2, r3, #16
 8014336:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 801433a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801433e:	45ac      	cmp	ip, r5
 8014340:	db06      	blt.n	8014350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014342:	d11d      	bne.n	8014380 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014344:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014348:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 801434c:	42ae      	cmp	r6, r5
 801434e:	da17      	bge.n	8014380 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014350:	4615      	mov	r5, r2
 8014352:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014356:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801435a:	6116      	str	r6, [r2, #16]
 801435c:	686e      	ldr	r6, [r5, #4]
 801435e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014362:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014366:	f8a2 9008 	strh.w	r9, [r2, #8]
 801436a:	42a8      	cmp	r0, r5
 801436c:	6156      	str	r6, [r2, #20]
 801436e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014372:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014376:	f8a2 e00e 	strh.w	lr, [r2, #14]
 801437a:	f1a2 0208 	sub.w	r2, r2, #8
 801437e:	d1da      	bne.n	8014336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014380:	3308      	adds	r3, #8
 8014382:	e7d4      	b.n	801432e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014384:	42bc      	cmp	r4, r7
 8014386:	d903      	bls.n	8014390 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014388:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801438c:	3c08      	subs	r4, #8
 801438e:	e6f3      	b.n	8014178 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014390:	b050      	add	sp, #320	; 0x140
 8014392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014396 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014396:	b510      	push	{r4, lr}
 8014398:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801439a:	07da      	lsls	r2, r3, #31
 801439c:	4604      	mov	r4, r0
 801439e:	d507      	bpl.n	80143b0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80143a0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80143a4:	f7ff fe8a 	bl	80140bc <_ZN8touchgfx7Outline6lineToEii>
 80143a8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80143aa:	f023 0301 	bic.w	r3, r3, #1
 80143ae:	6243      	str	r3, [r0, #36]	; 0x24
 80143b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80143b2:	079b      	lsls	r3, r3, #30
 80143b4:	d521      	bpl.n	80143fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80143b6:	6923      	ldr	r3, [r4, #16]
 80143b8:	88d9      	ldrh	r1, [r3, #6]
 80143ba:	889a      	ldrh	r2, [r3, #4]
 80143bc:	430a      	orrs	r2, r1
 80143be:	d010      	beq.n	80143e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80143c0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80143c4:	2a00      	cmp	r2, #0
 80143c6:	db0c      	blt.n	80143e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80143c8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80143ca:	428a      	cmp	r2, r1
 80143cc:	da09      	bge.n	80143e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80143ce:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80143d2:	4291      	cmp	r1, r2
 80143d4:	bf88      	it	hi
 80143d6:	3308      	addhi	r3, #8
 80143d8:	f102 0201 	add.w	r2, r2, #1
 80143dc:	bf88      	it	hi
 80143de:	6123      	strhi	r3, [r4, #16]
 80143e0:	60a2      	str	r2, [r4, #8]
 80143e2:	68a1      	ldr	r1, [r4, #8]
 80143e4:	b129      	cbz	r1, 80143f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80143e6:	6863      	ldr	r3, [r4, #4]
 80143e8:	4299      	cmp	r1, r3
 80143ea:	d802      	bhi.n	80143f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80143ec:	68e0      	ldr	r0, [r4, #12]
 80143ee:	f7ff febc 	bl	801416a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80143f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80143f4:	f023 0302 	bic.w	r3, r3, #2
 80143f8:	6263      	str	r3, [r4, #36]	; 0x24
 80143fa:	68e0      	ldr	r0, [r4, #12]
 80143fc:	bd10      	pop	{r4, pc}
	...

08014400 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014400:	4b02      	ldr	r3, [pc, #8]	; (801440c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014402:	6018      	str	r0, [r3, #0]
 8014404:	4b02      	ldr	r3, [pc, #8]	; (8014410 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014406:	6019      	str	r1, [r3, #0]
 8014408:	4770      	bx	lr
 801440a:	bf00      	nop
 801440c:	20012fcc 	.word	0x20012fcc
 8014410:	20012fd0 	.word	0x20012fd0

08014414 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014414:	4a02      	ldr	r2, [pc, #8]	; (8014420 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014416:	2300      	movs	r3, #0
 8014418:	6013      	str	r3, [r2, #0]
 801441a:	4a02      	ldr	r2, [pc, #8]	; (8014424 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 801441c:	6013      	str	r3, [r2, #0]
 801441e:	4770      	bx	lr
 8014420:	20012fcc 	.word	0x20012fcc
 8014424:	20012fd0 	.word	0x20012fd0

08014428 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014428:	4b01      	ldr	r3, [pc, #4]	; (8014430 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 801442a:	6818      	ldr	r0, [r3, #0]
 801442c:	4770      	bx	lr
 801442e:	bf00      	nop
 8014430:	20012fcc 	.word	0x20012fcc

08014434 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014434:	4b01      	ldr	r3, [pc, #4]	; (801443c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014436:	6818      	ldr	r0, [r3, #0]
 8014438:	4770      	bx	lr
 801443a:	bf00      	nop
 801443c:	20012fd0 	.word	0x20012fd0

08014440 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014440:	b510      	push	{r4, lr}
 8014442:	6803      	ldr	r3, [r0, #0]
 8014444:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014446:	460c      	mov	r4, r1
 8014448:	4798      	blx	r3
 801444a:	1b03      	subs	r3, r0, r4
 801444c:	4258      	negs	r0, r3
 801444e:	4158      	adcs	r0, r3
 8014450:	bd10      	pop	{r4, pc}
	...

08014454 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014454:	4b01      	ldr	r3, [pc, #4]	; (801445c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014456:	6019      	str	r1, [r3, #0]
 8014458:	4770      	bx	lr
 801445a:	bf00      	nop
 801445c:	20012fd4 	.word	0x20012fd4

08014460 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014464:	4696      	mov	lr, r2
 8014466:	4605      	mov	r5, r0
 8014468:	4614      	mov	r4, r2
 801446a:	460e      	mov	r6, r1
 801446c:	461f      	mov	r7, r3
 801446e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014472:	b097      	sub	sp, #92	; 0x5c
 8014474:	f10d 0c1c 	add.w	ip, sp, #28
 8014478:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801447c:	f8de 3000 	ldr.w	r3, [lr]
 8014480:	f8cc 3000 	str.w	r3, [ip]
 8014484:	f104 0e14 	add.w	lr, r4, #20
 8014488:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801448c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014490:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014494:	f8de 3000 	ldr.w	r3, [lr]
 8014498:	f8cc 3000 	str.w	r3, [ip]
 801449c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80144a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80144a4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80144a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80144ac:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80144b0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80144b4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80144b8:	f8de 3000 	ldr.w	r3, [lr]
 80144bc:	f8cc 3000 	str.w	r3, [ip]
 80144c0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80144c2:	682b      	ldr	r3, [r5, #0]
 80144c4:	9201      	str	r2, [sp, #4]
 80144c6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80144ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80144cc:	9200      	str	r2, [sp, #0]
 80144ce:	f8cd 8008 	str.w	r8, [sp, #8]
 80144d2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80144d6:	aa07      	add	r2, sp, #28
 80144d8:	463b      	mov	r3, r7
 80144da:	4631      	mov	r1, r6
 80144dc:	4628      	mov	r0, r5
 80144de:	47d8      	blx	fp
 80144e0:	46a6      	mov	lr, r4
 80144e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80144e6:	f10d 0c1c 	add.w	ip, sp, #28
 80144ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80144ee:	f8de 3000 	ldr.w	r3, [lr]
 80144f2:	f8cc 3000 	str.w	r3, [ip]
 80144f6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80144fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80144fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014502:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014506:	343c      	adds	r4, #60	; 0x3c
 8014508:	f8de 3000 	ldr.w	r3, [lr]
 801450c:	f8cc 3000 	str.w	r3, [ip]
 8014510:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014512:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014516:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801451a:	6823      	ldr	r3, [r4, #0]
 801451c:	f8cc 3000 	str.w	r3, [ip]
 8014520:	682b      	ldr	r3, [r5, #0]
 8014522:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014526:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014528:	9201      	str	r2, [sp, #4]
 801452a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801452c:	9200      	str	r2, [sp, #0]
 801452e:	f8cd 8008 	str.w	r8, [sp, #8]
 8014532:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014534:	aa07      	add	r2, sp, #28
 8014536:	463b      	mov	r3, r7
 8014538:	4631      	mov	r1, r6
 801453a:	4628      	mov	r0, r5
 801453c:	47a0      	blx	r4
 801453e:	b017      	add	sp, #92	; 0x5c
 8014540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014544 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014548:	b08d      	sub	sp, #52	; 0x34
 801454a:	4688      	mov	r8, r1
 801454c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801454e:	f8d3 c000 	ldr.w	ip, [r3]
 8014552:	680f      	ldr	r7, [r1, #0]
 8014554:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014558:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 801455c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014560:	edd3 6a07 	vldr	s13, [r3, #28]
 8014564:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014566:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 801456a:	f9b1 9000 	ldrsh.w	r9, [r1]
 801456e:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014572:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014576:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801457a:	eba7 070c 	sub.w	r7, r7, ip
 801457e:	42bc      	cmp	r4, r7
 8014580:	bfa8      	it	ge
 8014582:	463c      	movge	r4, r7
 8014584:	ee07 4a90 	vmov	s15, r4
 8014588:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801458c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014590:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014594:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014598:	ee25 5a27 	vmul.f32	s10, s10, s15
 801459c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80145a0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80145a4:	eb09 0e0c 	add.w	lr, r9, ip
 80145a8:	4571      	cmp	r1, lr
 80145aa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80145ae:	ee32 1a05 	vadd.f32	s2, s4, s10
 80145b2:	ee36 0a84 	vadd.f32	s0, s13, s8
 80145b6:	ee61 1a87 	vmul.f32	s3, s3, s14
 80145ba:	ee22 2a07 	vmul.f32	s4, s4, s14
 80145be:	f340 808d 	ble.w	80146dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80145c2:	eba1 060e 	sub.w	r6, r1, lr
 80145c6:	fb96 f5f4 	sdiv	r5, r6, r4
 80145ca:	ee07 5a10 	vmov	s14, r5
 80145ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80145d2:	2d00      	cmp	r5, #0
 80145d4:	fb04 6615 	mls	r6, r4, r5, r6
 80145d8:	eea7 0a04 	vfma.f32	s0, s14, s8
 80145dc:	eee7 0a24 	vfma.f32	s1, s14, s9
 80145e0:	eea7 1a05 	vfma.f32	s2, s14, s10
 80145e4:	dd13      	ble.n	801460e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80145e6:	ee70 6a44 	vsub.f32	s13, s0, s8
 80145ea:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80145ee:	eef5 6a40 	vcmp.f32	s13, #0.0
 80145f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80145f6:	bf18      	it	ne
 80145f8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80145fc:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014600:	bf08      	it	eq
 8014602:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014606:	ee61 1a87 	vmul.f32	s3, s3, s14
 801460a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801460e:	fb05 f204 	mul.w	r2, r5, r4
 8014612:	1abf      	subs	r7, r7, r2
 8014614:	4494      	add	ip, r2
 8014616:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801461a:	4411      	add	r1, r2
 801461c:	eb09 020c 	add.w	r2, r9, ip
 8014620:	443a      	add	r2, r7
 8014622:	b209      	sxth	r1, r1
 8014624:	428a      	cmp	r2, r1
 8014626:	bfc4      	itt	gt
 8014628:	eba1 0209 	subgt.w	r2, r1, r9
 801462c:	eba2 070c 	subgt.w	r7, r2, ip
 8014630:	2f00      	cmp	r7, #0
 8014632:	dd50      	ble.n	80146d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014634:	fb97 f1f4 	sdiv	r1, r7, r4
 8014638:	fb04 7211 	mls	r2, r4, r1, r7
 801463c:	b90a      	cbnz	r2, 8014642 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801463e:	3901      	subs	r1, #1
 8014640:	4622      	mov	r2, r4
 8014642:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014646:	6840      	ldr	r0, [r0, #4]
 8014648:	900b      	str	r0, [sp, #44]	; 0x2c
 801464a:	f8d0 a000 	ldr.w	sl, [r0]
 801464e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014650:	9008      	str	r0, [sp, #32]
 8014652:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8014656:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014658:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801465c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014660:	695b      	ldr	r3, [r3, #20]
 8014662:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014664:	445b      	add	r3, fp
 8014666:	eef0 6a42 	vmov.f32	s13, s4
 801466a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801466e:	ee21 3a23 	vmul.f32	s6, s2, s7
 8014672:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8014676:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801467a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801467e:	9307      	str	r3, [sp, #28]
 8014680:	ee17 7a90 	vmov	r7, s15
 8014684:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014688:	eeb0 7a61 	vmov.f32	s14, s3
 801468c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014690:	ee16 3a90 	vmov	r3, s13
 8014694:	fb97 f7f4 	sdiv	r7, r7, r4
 8014698:	ee17 ca90 	vmov	ip, s15
 801469c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80146a0:	fb9c fcf4 	sdiv	ip, ip, r4
 80146a4:	fb0c 3306 	mla	r3, ip, r6, r3
 80146a8:	9302      	str	r3, [sp, #8]
 80146aa:	ee17 3a10 	vmov	r3, s14
 80146ae:	44b6      	add	lr, r6
 80146b0:	fb04 e505 	mla	r5, r4, r5, lr
 80146b4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80146b8:	fb07 3706 	mla	r7, r7, r6, r3
 80146bc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80146c0:	e9cd 4700 	strd	r4, r7, [sp]
 80146c4:	2900      	cmp	r1, #0
 80146c6:	bfcc      	ite	gt
 80146c8:	46a1      	movgt	r9, r4
 80146ca:	4691      	movle	r9, r2
 80146cc:	eba9 0306 	sub.w	r3, r9, r6
 80146d0:	f8da 4008 	ldr.w	r4, [sl, #8]
 80146d4:	47a0      	blx	r4
 80146d6:	b00d      	add	sp, #52	; 0x34
 80146d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146dc:	2500      	movs	r5, #0
 80146de:	462e      	mov	r6, r5
 80146e0:	e799      	b.n	8014616 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080146e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80146e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146e8:	b0db      	sub	sp, #364	; 0x16c
 80146ea:	461d      	mov	r5, r3
 80146ec:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80146f0:	930a      	str	r3, [sp, #40]	; 0x28
 80146f2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80146f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80146f8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80146fc:	9310      	str	r3, [sp, #64]	; 0x40
 80146fe:	6803      	ldr	r3, [r0, #0]
 8014700:	910f      	str	r1, [sp, #60]	; 0x3c
 8014702:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8014704:	9009      	str	r0, [sp, #36]	; 0x24
 8014706:	4614      	mov	r4, r2
 8014708:	4629      	mov	r1, r5
 801470a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801470e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8014712:	47b8      	blx	r7
 8014714:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014716:	6058      	str	r0, [r3, #4]
 8014718:	2800      	cmp	r0, #0
 801471a:	f000 83a1 	beq.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801471e:	682b      	ldr	r3, [r5, #0]
 8014720:	9314      	str	r3, [sp, #80]	; 0x50
 8014722:	686b      	ldr	r3, [r5, #4]
 8014724:	9315      	str	r3, [sp, #84]	; 0x54
 8014726:	4bc4      	ldr	r3, [pc, #784]	; (8014a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014728:	ed94 7a02 	vldr	s14, [r4, #8]
 801472c:	7819      	ldrb	r1, [r3, #0]
 801472e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8014732:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8014736:	2900      	cmp	r1, #0
 8014738:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801473c:	bf16      	itet	ne
 801473e:	4619      	movne	r1, r3
 8014740:	4611      	moveq	r1, r2
 8014742:	4613      	movne	r3, r2
 8014744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014748:	9116      	str	r1, [sp, #88]	; 0x58
 801474a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801474e:	f240 8387 	bls.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014752:	ed94 7a07 	vldr	s14, [r4, #28]
 8014756:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801475a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801475e:	f240 837f 	bls.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014762:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8014766:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801476a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801476e:	f240 8377 	bls.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014772:	6822      	ldr	r2, [r4, #0]
 8014774:	4bb1      	ldr	r3, [pc, #708]	; (8014a3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8014776:	429a      	cmp	r2, r3
 8014778:	f2c0 8372 	blt.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801477c:	49b0      	ldr	r1, [pc, #704]	; (8014a40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801477e:	6963      	ldr	r3, [r4, #20]
 8014780:	428a      	cmp	r2, r1
 8014782:	f300 836d 	bgt.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014786:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801478a:	48ae      	ldr	r0, [pc, #696]	; (8014a44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801478c:	33ff      	adds	r3, #255	; 0xff
 801478e:	4283      	cmp	r3, r0
 8014790:	f200 8366 	bhi.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014794:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8014796:	4dac      	ldr	r5, [pc, #688]	; (8014a48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014798:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801479c:	33ff      	adds	r3, #255	; 0xff
 801479e:	42ab      	cmp	r3, r5
 80147a0:	f200 835e 	bhi.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80147a4:	6862      	ldr	r2, [r4, #4]
 80147a6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80147aa:	33ff      	adds	r3, #255	; 0xff
 80147ac:	4283      	cmp	r3, r0
 80147ae:	f200 8357 	bhi.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80147b2:	69a1      	ldr	r1, [r4, #24]
 80147b4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80147b8:	33ff      	adds	r3, #255	; 0xff
 80147ba:	4283      	cmp	r3, r0
 80147bc:	f200 8350 	bhi.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80147c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80147c2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80147c6:	30ff      	adds	r0, #255	; 0xff
 80147c8:	42a8      	cmp	r0, r5
 80147ca:	f200 8349 	bhi.w	8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80147ce:	428a      	cmp	r2, r1
 80147d0:	f280 8110 	bge.w	80149f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80147d4:	429a      	cmp	r2, r3
 80147d6:	f300 8119 	bgt.w	8014a0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80147da:	4299      	cmp	r1, r3
 80147dc:	f280 811d 	bge.w	8014a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80147e0:	2502      	movs	r5, #2
 80147e2:	2701      	movs	r7, #1
 80147e4:	46a9      	mov	r9, r5
 80147e6:	46b8      	mov	r8, r7
 80147e8:	f04f 0a00 	mov.w	sl, #0
 80147ec:	4621      	mov	r1, r4
 80147ee:	a849      	add	r0, sp, #292	; 0x124
 80147f0:	f003 ff2a 	bl	8018648 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80147f4:	4622      	mov	r2, r4
 80147f6:	4653      	mov	r3, sl
 80147f8:	a949      	add	r1, sp, #292	; 0x124
 80147fa:	f8cd 9000 	str.w	r9, [sp]
 80147fe:	a819      	add	r0, sp, #100	; 0x64
 8014800:	f004 f852 	bl	80188a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014804:	4622      	mov	r2, r4
 8014806:	4653      	mov	r3, sl
 8014808:	a949      	add	r1, sp, #292	; 0x124
 801480a:	f8cd 8000 	str.w	r8, [sp]
 801480e:	a829      	add	r0, sp, #164	; 0xa4
 8014810:	f004 f84a 	bl	80188a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014814:	4643      	mov	r3, r8
 8014816:	4622      	mov	r2, r4
 8014818:	a949      	add	r1, sp, #292	; 0x124
 801481a:	f8cd 9000 	str.w	r9, [sp]
 801481e:	a839      	add	r0, sp, #228	; 0xe4
 8014820:	f004 f842 	bl	80188a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8014824:	42af      	cmp	r7, r5
 8014826:	bfb5      	itete	lt
 8014828:	2300      	movlt	r3, #0
 801482a:	2301      	movge	r3, #1
 801482c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801482e:	930e      	strge	r3, [sp, #56]	; 0x38
 8014830:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014832:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014836:	af12      	add	r7, sp, #72	; 0x48
 8014838:	bfb9      	ittee	lt
 801483a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801483c:	ac19      	addlt	r4, sp, #100	; 0x64
 801483e:	ad19      	addge	r5, sp, #100	; 0x64
 8014840:	ac29      	addge	r4, sp, #164	; 0xa4
 8014842:	e887 0003 	stmia.w	r7, {r0, r1}
 8014846:	b928      	cbnz	r0, 8014854 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014848:	4b80      	ldr	r3, [pc, #512]	; (8014a4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801484a:	6818      	ldr	r0, [r3, #0]
 801484c:	6803      	ldr	r3, [r0, #0]
 801484e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014850:	4798      	blx	r3
 8014852:	6038      	str	r0, [r7, #0]
 8014854:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014856:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801485a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801485e:	930c      	str	r3, [sp, #48]	; 0x30
 8014860:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014862:	6963      	ldr	r3, [r4, #20]
 8014864:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014866:	440b      	add	r3, r1
 8014868:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801486c:	4408      	add	r0, r1
 801486e:	b200      	sxth	r0, r0
 8014870:	4283      	cmp	r3, r0
 8014872:	900d      	str	r0, [sp, #52]	; 0x34
 8014874:	f280 80dd 	bge.w	8014a32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014878:	428b      	cmp	r3, r1
 801487a:	da08      	bge.n	801488e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801487c:	2a00      	cmp	r2, #0
 801487e:	dd06      	ble.n	801488e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014880:	1acb      	subs	r3, r1, r3
 8014882:	429a      	cmp	r2, r3
 8014884:	f2c0 80e4 	blt.w	8014a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014888:	2b00      	cmp	r3, #0
 801488a:	f300 80e2 	bgt.w	8014a52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801488e:	6967      	ldr	r7, [r4, #20]
 8014890:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014892:	443b      	add	r3, r7
 8014894:	461f      	mov	r7, r3
 8014896:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014898:	1bdf      	subs	r7, r3, r7
 801489a:	4297      	cmp	r7, r2
 801489c:	bfa8      	it	ge
 801489e:	4617      	movge	r7, r2
 80148a0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80148a4:	2f00      	cmp	r7, #0
 80148a6:	f340 8166 	ble.w	8014b76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80148aa:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80148ac:	6829      	ldr	r1, [r5, #0]
 80148ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80148b2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80148b6:	6820      	ldr	r0, [r4, #0]
 80148b8:	4411      	add	r1, r2
 80148ba:	4299      	cmp	r1, r3
 80148bc:	dd1a      	ble.n	80148f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80148be:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80148c2:	440b      	add	r3, r1
 80148c4:	4402      	add	r2, r0
 80148c6:	b21b      	sxth	r3, r3
 80148c8:	429a      	cmp	r2, r3
 80148ca:	dc13      	bgt.n	80148f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80148cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80148ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80148d0:	681b      	ldr	r3, [r3, #0]
 80148d2:	9206      	str	r2, [sp, #24]
 80148d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80148d6:	9205      	str	r2, [sp, #20]
 80148d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80148da:	9500      	str	r5, [sp, #0]
 80148dc:	e9cd b203 	strd	fp, r2, [sp, #12]
 80148e0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80148e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80148e4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80148e8:	a912      	add	r1, sp, #72	; 0x48
 80148ea:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80148ee:	aa49      	add	r2, sp, #292	; 0x124
 80148f0:	4623      	mov	r3, r4
 80148f2:	47c8      	blx	r9
 80148f4:	e9d4 2300 	ldrd	r2, r3, [r4]
 80148f8:	441a      	add	r2, r3
 80148fa:	6963      	ldr	r3, [r4, #20]
 80148fc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014900:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014904:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014908:	68a1      	ldr	r1, [r4, #8]
 801490a:	ed94 6a08 	vldr	s12, [r4, #32]
 801490e:	6022      	str	r2, [r4, #0]
 8014910:	3301      	adds	r3, #1
 8014912:	6163      	str	r3, [r4, #20]
 8014914:	69a3      	ldr	r3, [r4, #24]
 8014916:	ee37 7a27 	vadd.f32	s14, s14, s15
 801491a:	3b01      	subs	r3, #1
 801491c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014920:	61a3      	str	r3, [r4, #24]
 8014922:	6923      	ldr	r3, [r4, #16]
 8014924:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014928:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801492c:	edd4 6a07 	vldr	s13, [r4, #28]
 8014930:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014934:	440b      	add	r3, r1
 8014936:	68e1      	ldr	r1, [r4, #12]
 8014938:	6123      	str	r3, [r4, #16]
 801493a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801493e:	428b      	cmp	r3, r1
 8014940:	edc4 6a07 	vstr	s13, [r4, #28]
 8014944:	db15      	blt.n	8014972 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8014946:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801494a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801494e:	3201      	adds	r2, #1
 8014950:	edc4 6a07 	vstr	s13, [r4, #28]
 8014954:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014958:	6022      	str	r2, [r4, #0]
 801495a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801495e:	1a5b      	subs	r3, r3, r1
 8014960:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014964:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014968:	6123      	str	r3, [r4, #16]
 801496a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801496e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014972:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014976:	441a      	add	r2, r3
 8014978:	696b      	ldr	r3, [r5, #20]
 801497a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801497e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014982:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014986:	68a9      	ldr	r1, [r5, #8]
 8014988:	ed95 6a08 	vldr	s12, [r5, #32]
 801498c:	602a      	str	r2, [r5, #0]
 801498e:	3301      	adds	r3, #1
 8014990:	616b      	str	r3, [r5, #20]
 8014992:	69ab      	ldr	r3, [r5, #24]
 8014994:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014998:	3b01      	subs	r3, #1
 801499a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801499e:	61ab      	str	r3, [r5, #24]
 80149a0:	692b      	ldr	r3, [r5, #16]
 80149a2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80149a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80149aa:	edd5 6a07 	vldr	s13, [r5, #28]
 80149ae:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80149b2:	440b      	add	r3, r1
 80149b4:	68e9      	ldr	r1, [r5, #12]
 80149b6:	612b      	str	r3, [r5, #16]
 80149b8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80149bc:	428b      	cmp	r3, r1
 80149be:	edc5 6a07 	vstr	s13, [r5, #28]
 80149c2:	db15      	blt.n	80149f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80149c4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80149c8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80149cc:	3201      	adds	r2, #1
 80149ce:	edc5 6a07 	vstr	s13, [r5, #28]
 80149d2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80149d6:	602a      	str	r2, [r5, #0]
 80149d8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80149dc:	1a5b      	subs	r3, r3, r1
 80149de:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80149e2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80149e6:	612b      	str	r3, [r5, #16]
 80149e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80149ec:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80149f0:	3f01      	subs	r7, #1
 80149f2:	e757      	b.n	80148a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80149f4:	4299      	cmp	r1, r3
 80149f6:	dc13      	bgt.n	8014a20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80149f8:	429a      	cmp	r2, r3
 80149fa:	da14      	bge.n	8014a26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80149fc:	2502      	movs	r5, #2
 80149fe:	2703      	movs	r7, #3
 8014a00:	46a9      	mov	r9, r5
 8014a02:	f04f 0800 	mov.w	r8, #0
 8014a06:	f04f 0a01 	mov.w	sl, #1
 8014a0a:	e6ef      	b.n	80147ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014a0c:	2501      	movs	r5, #1
 8014a0e:	2700      	movs	r7, #0
 8014a10:	46a9      	mov	r9, r5
 8014a12:	46b8      	mov	r8, r7
 8014a14:	f04f 0a02 	mov.w	sl, #2
 8014a18:	e6e8      	b.n	80147ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014a1a:	2501      	movs	r5, #1
 8014a1c:	2702      	movs	r7, #2
 8014a1e:	e6e1      	b.n	80147e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014a20:	2500      	movs	r5, #0
 8014a22:	2701      	movs	r7, #1
 8014a24:	e7f4      	b.n	8014a10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8014a26:	2702      	movs	r7, #2
 8014a28:	2503      	movs	r5, #3
 8014a2a:	f04f 0900 	mov.w	r9, #0
 8014a2e:	46b8      	mov	r8, r7
 8014a30:	e7e9      	b.n	8014a06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8014a32:	4613      	mov	r3, r2
 8014a34:	e728      	b.n	8014888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8014a36:	bf00      	nop
 8014a38:	20012fbc 	.word	0x20012fbc
 8014a3c:	fffd8f01 	.word	0xfffd8f01
 8014a40:	00027100 	.word	0x00027100
 8014a44:	0004e1ff 	.word	0x0004e1ff
 8014a48:	0004e1fe 	.word	0x0004e1fe
 8014a4c:	20012fc4 	.word	0x20012fc4
 8014a50:	4613      	mov	r3, r2
 8014a52:	992b      	ldr	r1, [sp, #172]	; 0xac
 8014a54:	9111      	str	r1, [sp, #68]	; 0x44
 8014a56:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014a5a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014a5e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014a60:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8014a64:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014a68:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014a6c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014a70:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8014a74:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014a78:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014a7c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014a80:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8014a84:	469e      	mov	lr, r3
 8014a86:	469c      	mov	ip, r3
 8014a88:	f04f 0900 	mov.w	r9, #0
 8014a8c:	f1bc 0f00 	cmp.w	ip, #0
 8014a90:	d147      	bne.n	8014b22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8014a92:	eb03 0c07 	add.w	ip, r3, r7
 8014a96:	1ad7      	subs	r7, r2, r3
 8014a98:	f1b9 0f00 	cmp.w	r9, #0
 8014a9c:	d009      	beq.n	8014ab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014a9e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8014aa2:	9029      	str	r0, [sp, #164]	; 0xa4
 8014aa4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014aa8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014aac:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014ab0:	912d      	str	r1, [sp, #180]	; 0xb4
 8014ab2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014ab4:	9111      	str	r1, [sp, #68]	; 0x44
 8014ab6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014aba:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014abe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014ac2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014ac6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014aca:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014ace:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014ad2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014ad6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014ada:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014ade:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014ae2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014ae6:	f04f 0800 	mov.w	r8, #0
 8014aea:	f1be 0f00 	cmp.w	lr, #0
 8014aee:	d031      	beq.n	8014b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014af0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014af2:	4431      	add	r1, r6
 8014af4:	4549      	cmp	r1, r9
 8014af6:	4450      	add	r0, sl
 8014af8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014afc:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014b00:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014b04:	db08      	blt.n	8014b18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8014b06:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014b0a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014b0e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014b12:	3001      	adds	r0, #1
 8014b14:	eba1 0109 	sub.w	r1, r1, r9
 8014b18:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014b1c:	f04f 0801 	mov.w	r8, #1
 8014b20:	e7e3      	b.n	8014aea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8014b22:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014b24:	4431      	add	r1, r6
 8014b26:	4541      	cmp	r1, r8
 8014b28:	4450      	add	r0, sl
 8014b2a:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014b2e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014b32:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014b36:	db08      	blt.n	8014b4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014b38:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014b3c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014b40:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014b44:	3001      	adds	r0, #1
 8014b46:	eba1 0108 	sub.w	r1, r1, r8
 8014b4a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014b4e:	f04f 0901 	mov.w	r9, #1
 8014b52:	e79b      	b.n	8014a8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8014b54:	449c      	add	ip, r3
 8014b56:	1aff      	subs	r7, r7, r3
 8014b58:	f1b8 0f00 	cmp.w	r8, #0
 8014b5c:	d009      	beq.n	8014b72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014b5e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014b62:	9019      	str	r0, [sp, #100]	; 0x64
 8014b64:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014b68:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014b6c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014b70:	911d      	str	r1, [sp, #116]	; 0x74
 8014b72:	1ad2      	subs	r2, r2, r3
 8014b74:	e68b      	b.n	801488e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014b76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014b78:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014b7a:	2b00      	cmp	r3, #0
 8014b7c:	f000 80d1 	beq.w	8014d22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014b80:	ad19      	add	r5, sp, #100	; 0x64
 8014b82:	ac39      	add	r4, sp, #228	; 0xe4
 8014b84:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014b86:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014b8a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014b8e:	930c      	str	r3, [sp, #48]	; 0x30
 8014b90:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014b92:	6963      	ldr	r3, [r4, #20]
 8014b94:	440b      	add	r3, r1
 8014b96:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014b9a:	4408      	add	r0, r1
 8014b9c:	b200      	sxth	r0, r0
 8014b9e:	4283      	cmp	r3, r0
 8014ba0:	900d      	str	r0, [sp, #52]	; 0x34
 8014ba2:	f280 80c1 	bge.w	8014d28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8014ba6:	428b      	cmp	r3, r1
 8014ba8:	da08      	bge.n	8014bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014baa:	2a00      	cmp	r2, #0
 8014bac:	dd06      	ble.n	8014bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014bae:	1acb      	subs	r3, r1, r3
 8014bb0:	429a      	cmp	r2, r3
 8014bb2:	f2c0 80bb 	blt.w	8014d2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8014bb6:	2b00      	cmp	r3, #0
 8014bb8:	f300 80b9 	bgt.w	8014d2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014bbc:	6967      	ldr	r7, [r4, #20]
 8014bbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014bc0:	443b      	add	r3, r7
 8014bc2:	461f      	mov	r7, r3
 8014bc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014bc6:	1bdf      	subs	r7, r3, r7
 8014bc8:	4297      	cmp	r7, r2
 8014bca:	bfa8      	it	ge
 8014bcc:	4617      	movge	r7, r2
 8014bce:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8014bd2:	2f00      	cmp	r7, #0
 8014bd4:	f340 813c 	ble.w	8014e50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014bd8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014bda:	6829      	ldr	r1, [r5, #0]
 8014bdc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014be0:	f9bb 3000 	ldrsh.w	r3, [fp]
 8014be4:	6820      	ldr	r0, [r4, #0]
 8014be6:	4411      	add	r1, r2
 8014be8:	4299      	cmp	r1, r3
 8014bea:	dd1a      	ble.n	8014c22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014bec:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014bf0:	440b      	add	r3, r1
 8014bf2:	4402      	add	r2, r0
 8014bf4:	b21b      	sxth	r3, r3
 8014bf6:	429a      	cmp	r2, r3
 8014bf8:	dc13      	bgt.n	8014c22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014bfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bfc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014bfe:	681b      	ldr	r3, [r3, #0]
 8014c00:	9206      	str	r2, [sp, #24]
 8014c02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014c04:	9205      	str	r2, [sp, #20]
 8014c06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014c08:	9500      	str	r5, [sp, #0]
 8014c0a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014c0e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014c10:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014c12:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014c16:	a912      	add	r1, sp, #72	; 0x48
 8014c18:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014c1c:	aa49      	add	r2, sp, #292	; 0x124
 8014c1e:	4623      	mov	r3, r4
 8014c20:	47c8      	blx	r9
 8014c22:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014c26:	441a      	add	r2, r3
 8014c28:	6963      	ldr	r3, [r4, #20]
 8014c2a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014c2e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8014c32:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014c36:	68a1      	ldr	r1, [r4, #8]
 8014c38:	ed94 6a08 	vldr	s12, [r4, #32]
 8014c3c:	6022      	str	r2, [r4, #0]
 8014c3e:	3301      	adds	r3, #1
 8014c40:	6163      	str	r3, [r4, #20]
 8014c42:	69a3      	ldr	r3, [r4, #24]
 8014c44:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014c48:	3b01      	subs	r3, #1
 8014c4a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014c4e:	61a3      	str	r3, [r4, #24]
 8014c50:	6923      	ldr	r3, [r4, #16]
 8014c52:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014c56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014c5a:	edd4 6a07 	vldr	s13, [r4, #28]
 8014c5e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014c62:	440b      	add	r3, r1
 8014c64:	68e1      	ldr	r1, [r4, #12]
 8014c66:	6123      	str	r3, [r4, #16]
 8014c68:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014c6c:	428b      	cmp	r3, r1
 8014c6e:	edc4 6a07 	vstr	s13, [r4, #28]
 8014c72:	db15      	blt.n	8014ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8014c74:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014c78:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014c7c:	3201      	adds	r2, #1
 8014c7e:	edc4 6a07 	vstr	s13, [r4, #28]
 8014c82:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014c86:	6022      	str	r2, [r4, #0]
 8014c88:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014c8c:	1a5b      	subs	r3, r3, r1
 8014c8e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014c92:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014c96:	6123      	str	r3, [r4, #16]
 8014c98:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014c9c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014ca0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014ca4:	441a      	add	r2, r3
 8014ca6:	696b      	ldr	r3, [r5, #20]
 8014ca8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014cac:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014cb0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014cb4:	68a9      	ldr	r1, [r5, #8]
 8014cb6:	ed95 6a08 	vldr	s12, [r5, #32]
 8014cba:	602a      	str	r2, [r5, #0]
 8014cbc:	3301      	adds	r3, #1
 8014cbe:	616b      	str	r3, [r5, #20]
 8014cc0:	69ab      	ldr	r3, [r5, #24]
 8014cc2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014cc6:	3b01      	subs	r3, #1
 8014cc8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014ccc:	61ab      	str	r3, [r5, #24]
 8014cce:	692b      	ldr	r3, [r5, #16]
 8014cd0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014cd4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014cd8:	edd5 6a07 	vldr	s13, [r5, #28]
 8014cdc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014ce0:	440b      	add	r3, r1
 8014ce2:	68e9      	ldr	r1, [r5, #12]
 8014ce4:	612b      	str	r3, [r5, #16]
 8014ce6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014cea:	428b      	cmp	r3, r1
 8014cec:	edc5 6a07 	vstr	s13, [r5, #28]
 8014cf0:	db15      	blt.n	8014d1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014cf2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014cf6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014cfa:	3201      	adds	r2, #1
 8014cfc:	edc5 6a07 	vstr	s13, [r5, #28]
 8014d00:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014d04:	602a      	str	r2, [r5, #0]
 8014d06:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014d0a:	1a5b      	subs	r3, r3, r1
 8014d0c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014d10:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014d14:	612b      	str	r3, [r5, #16]
 8014d16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014d1a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014d1e:	3f01      	subs	r7, #1
 8014d20:	e757      	b.n	8014bd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014d22:	ad39      	add	r5, sp, #228	; 0xe4
 8014d24:	ac19      	add	r4, sp, #100	; 0x64
 8014d26:	e72d      	b.n	8014b84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014d28:	4613      	mov	r3, r2
 8014d2a:	e744      	b.n	8014bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014d2c:	4613      	mov	r3, r2
 8014d2e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014d32:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014d34:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014d38:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014d3c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014d40:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014d44:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014d48:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014d4c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014d50:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014d52:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014d56:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014d5a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014d5e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014d62:	960e      	str	r6, [sp, #56]	; 0x38
 8014d64:	469e      	mov	lr, r3
 8014d66:	461f      	mov	r7, r3
 8014d68:	f04f 0900 	mov.w	r9, #0
 8014d6c:	2f00      	cmp	r7, #0
 8014d6e:	d146      	bne.n	8014dfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014d70:	449c      	add	ip, r3
 8014d72:	1ad7      	subs	r7, r2, r3
 8014d74:	f1b9 0f00 	cmp.w	r9, #0
 8014d78:	d009      	beq.n	8014d8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014d7a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014d7e:	9039      	str	r0, [sp, #228]	; 0xe4
 8014d80:	913d      	str	r1, [sp, #244]	; 0xf4
 8014d82:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014d86:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014d8a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014d8e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014d90:	910e      	str	r1, [sp, #56]	; 0x38
 8014d92:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014d96:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014d9a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014d9e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014da2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014da6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014daa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014dae:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014db2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014db6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014dba:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014dbe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014dc2:	f04f 0800 	mov.w	r8, #0
 8014dc6:	f1be 0f00 	cmp.w	lr, #0
 8014dca:	d030      	beq.n	8014e2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014dcc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014dce:	4431      	add	r1, r6
 8014dd0:	4549      	cmp	r1, r9
 8014dd2:	4450      	add	r0, sl
 8014dd4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014dd8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014ddc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014de0:	db08      	blt.n	8014df4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014de2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014de6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014dea:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014dee:	3001      	adds	r0, #1
 8014df0:	eba1 0109 	sub.w	r1, r1, r9
 8014df4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014df8:	f04f 0801 	mov.w	r8, #1
 8014dfc:	e7e3      	b.n	8014dc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014dfe:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014e00:	4431      	add	r1, r6
 8014e02:	4541      	cmp	r1, r8
 8014e04:	4450      	add	r0, sl
 8014e06:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014e0a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014e0e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014e12:	db08      	blt.n	8014e26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014e14:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014e18:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014e1c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014e20:	3001      	adds	r0, #1
 8014e22:	eba1 0108 	sub.w	r1, r1, r8
 8014e26:	3f01      	subs	r7, #1
 8014e28:	f04f 0901 	mov.w	r9, #1
 8014e2c:	e79e      	b.n	8014d6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014e2e:	449c      	add	ip, r3
 8014e30:	1aff      	subs	r7, r7, r3
 8014e32:	f1b8 0f00 	cmp.w	r8, #0
 8014e36:	d009      	beq.n	8014e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014e38:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014e3c:	9019      	str	r0, [sp, #100]	; 0x64
 8014e3e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014e42:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014e46:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014e4a:	911d      	str	r1, [sp, #116]	; 0x74
 8014e4c:	1ad2      	subs	r2, r2, r3
 8014e4e:	e6b5      	b.n	8014bbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014e50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014e52:	681b      	ldr	r3, [r3, #0]
 8014e54:	b923      	cbnz	r3, 8014e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014e56:	4b04      	ldr	r3, [pc, #16]	; (8014e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014e58:	6818      	ldr	r0, [r3, #0]
 8014e5a:	6803      	ldr	r3, [r0, #0]
 8014e5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014e5e:	4798      	blx	r3
 8014e60:	b05b      	add	sp, #364	; 0x16c
 8014e62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e66:	bf00      	nop
 8014e68:	20012fc4 	.word	0x20012fc4

08014e6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014e6c:	b570      	push	{r4, r5, r6, lr}
 8014e6e:	4604      	mov	r4, r0
 8014e70:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014e74:	9805      	ldr	r0, [sp, #20]
 8014e76:	6061      	str	r1, [r4, #4]
 8014e78:	2500      	movs	r5, #0
 8014e7a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014e7e:	8263      	strh	r3, [r4, #18]
 8014e80:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014e84:	8025      	strh	r5, [r4, #0]
 8014e86:	7221      	strb	r1, [r4, #8]
 8014e88:	7266      	strb	r6, [r4, #9]
 8014e8a:	60e0      	str	r0, [r4, #12]
 8014e8c:	8222      	strh	r2, [r4, #16]
 8014e8e:	82a3      	strh	r3, [r4, #20]
 8014e90:	82e5      	strh	r5, [r4, #22]
 8014e92:	8325      	strh	r5, [r4, #24]
 8014e94:	8365      	strh	r5, [r4, #26]
 8014e96:	83a5      	strh	r5, [r4, #28]
 8014e98:	83e5      	strh	r5, [r4, #30]
 8014e9a:	8425      	strh	r5, [r4, #32]
 8014e9c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014ea0:	b32e      	cbz	r6, 8014eee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014ea2:	6803      	ldr	r3, [r0, #0]
 8014ea4:	695b      	ldr	r3, [r3, #20]
 8014ea6:	4798      	blx	r3
 8014ea8:	4606      	mov	r6, r0
 8014eaa:	b300      	cbz	r0, 8014eee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014eac:	68e0      	ldr	r0, [r4, #12]
 8014eae:	6803      	ldr	r3, [r0, #0]
 8014eb0:	4631      	mov	r1, r6
 8014eb2:	68db      	ldr	r3, [r3, #12]
 8014eb4:	4798      	blx	r3
 8014eb6:	4605      	mov	r5, r0
 8014eb8:	b1c8      	cbz	r0, 8014eee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014eba:	7b43      	ldrb	r3, [r0, #13]
 8014ebc:	7a82      	ldrb	r2, [r0, #10]
 8014ebe:	005b      	lsls	r3, r3, #1
 8014ec0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014ec4:	4313      	orrs	r3, r2
 8014ec6:	8423      	strh	r3, [r4, #32]
 8014ec8:	7a63      	ldrb	r3, [r4, #9]
 8014eca:	2b06      	cmp	r3, #6
 8014ecc:	d10f      	bne.n	8014eee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014ece:	68e0      	ldr	r0, [r4, #12]
 8014ed0:	6803      	ldr	r3, [r0, #0]
 8014ed2:	462a      	mov	r2, r5
 8014ed4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014ed6:	4631      	mov	r1, r6
 8014ed8:	4798      	blx	r3
 8014eda:	7b6b      	ldrb	r3, [r5, #13]
 8014edc:	005b      	lsls	r3, r3, #1
 8014ede:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014ee2:	7aab      	ldrb	r3, [r5, #10]
 8014ee4:	4313      	orrs	r3, r2
 8014ee6:	4418      	add	r0, r3
 8014ee8:	8c23      	ldrh	r3, [r4, #32]
 8014eea:	4418      	add	r0, r3
 8014eec:	8420      	strh	r0, [r4, #32]
 8014eee:	4620      	mov	r0, r4
 8014ef0:	bd70      	pop	{r4, r5, r6, pc}

08014ef2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014ef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ef6:	2400      	movs	r4, #0
 8014ef8:	b085      	sub	sp, #20
 8014efa:	4681      	mov	r9, r0
 8014efc:	4688      	mov	r8, r1
 8014efe:	4692      	mov	sl, r2
 8014f00:	469b      	mov	fp, r3
 8014f02:	4627      	mov	r7, r4
 8014f04:	4625      	mov	r5, r4
 8014f06:	4626      	mov	r6, r4
 8014f08:	4554      	cmp	r4, sl
 8014f0a:	da2a      	bge.n	8014f62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014f0c:	2300      	movs	r3, #0
 8014f0e:	9303      	str	r3, [sp, #12]
 8014f10:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014f14:	429d      	cmp	r5, r3
 8014f16:	d004      	beq.n	8014f22 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014f18:	f242 030b 	movw	r3, #8203	; 0x200b
 8014f1c:	429d      	cmp	r5, r3
 8014f1e:	bf18      	it	ne
 8014f20:	462f      	movne	r7, r5
 8014f22:	ab03      	add	r3, sp, #12
 8014f24:	4642      	mov	r2, r8
 8014f26:	4659      	mov	r1, fp
 8014f28:	4648      	mov	r0, r9
 8014f2a:	f003 f9a3 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f2e:	4605      	mov	r5, r0
 8014f30:	b1b8      	cbz	r0, 8014f62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014f32:	280a      	cmp	r0, #10
 8014f34:	d015      	beq.n	8014f62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014f36:	9a03      	ldr	r2, [sp, #12]
 8014f38:	b18a      	cbz	r2, 8014f5e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014f3a:	7b50      	ldrb	r0, [r2, #13]
 8014f3c:	7a93      	ldrb	r3, [r2, #10]
 8014f3e:	8895      	ldrh	r5, [r2, #4]
 8014f40:	0040      	lsls	r0, r0, #1
 8014f42:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014f46:	4303      	orrs	r3, r0
 8014f48:	9301      	str	r3, [sp, #4]
 8014f4a:	f8d8 3000 	ldr.w	r3, [r8]
 8014f4e:	4639      	mov	r1, r7
 8014f50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014f52:	4640      	mov	r0, r8
 8014f54:	4798      	blx	r3
 8014f56:	9b01      	ldr	r3, [sp, #4]
 8014f58:	4418      	add	r0, r3
 8014f5a:	4406      	add	r6, r0
 8014f5c:	b2b6      	uxth	r6, r6
 8014f5e:	3401      	adds	r4, #1
 8014f60:	e7d2      	b.n	8014f08 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014f62:	4630      	mov	r0, r6
 8014f64:	b005      	add	sp, #20
 8014f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014f6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014f6a:	2a02      	cmp	r2, #2
 8014f6c:	b530      	push	{r4, r5, lr}
 8014f6e:	d011      	beq.n	8014f94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014f70:	2a03      	cmp	r2, #3
 8014f72:	d01c      	beq.n	8014fae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014f74:	2a01      	cmp	r2, #1
 8014f76:	d10c      	bne.n	8014f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014f78:	888b      	ldrh	r3, [r1, #4]
 8014f7a:	8801      	ldrh	r1, [r0, #0]
 8014f7c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014f80:	8844      	ldrh	r4, [r0, #2]
 8014f82:	8004      	strh	r4, [r0, #0]
 8014f84:	1a5b      	subs	r3, r3, r1
 8014f86:	1a9b      	subs	r3, r3, r2
 8014f88:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014f8c:	8043      	strh	r3, [r0, #2]
 8014f8e:	8081      	strh	r1, [r0, #4]
 8014f90:	80c2      	strh	r2, [r0, #6]
 8014f92:	bd30      	pop	{r4, r5, pc}
 8014f94:	88cb      	ldrh	r3, [r1, #6]
 8014f96:	8842      	ldrh	r2, [r0, #2]
 8014f98:	1a9b      	subs	r3, r3, r2
 8014f9a:	88c2      	ldrh	r2, [r0, #6]
 8014f9c:	1a9b      	subs	r3, r3, r2
 8014f9e:	888a      	ldrh	r2, [r1, #4]
 8014fa0:	8801      	ldrh	r1, [r0, #0]
 8014fa2:	8043      	strh	r3, [r0, #2]
 8014fa4:	1a52      	subs	r2, r2, r1
 8014fa6:	8881      	ldrh	r1, [r0, #4]
 8014fa8:	1a52      	subs	r2, r2, r1
 8014faa:	8002      	strh	r2, [r0, #0]
 8014fac:	e7f1      	b.n	8014f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014fae:	88cb      	ldrh	r3, [r1, #6]
 8014fb0:	8841      	ldrh	r1, [r0, #2]
 8014fb2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014fb6:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014fba:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014fbe:	8045      	strh	r5, [r0, #2]
 8014fc0:	1a5b      	subs	r3, r3, r1
 8014fc2:	1a9b      	subs	r3, r3, r2
 8014fc4:	8003      	strh	r3, [r0, #0]
 8014fc6:	8082      	strh	r2, [r0, #4]
 8014fc8:	80c4      	strh	r4, [r0, #6]
 8014fca:	e7e2      	b.n	8014f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014fcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fd0:	b09f      	sub	sp, #124	; 0x7c
 8014fd2:	9116      	str	r1, [sp, #88]	; 0x58
 8014fd4:	9317      	str	r3, [sp, #92]	; 0x5c
 8014fd6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014fd8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014fda:	8809      	ldrh	r1, [r1, #0]
 8014fdc:	889b      	ldrh	r3, [r3, #4]
 8014fde:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014fe2:	9212      	str	r2, [sp, #72]	; 0x48
 8014fe4:	440b      	add	r3, r1
 8014fe6:	b21b      	sxth	r3, r3
 8014fe8:	9310      	str	r3, [sp, #64]	; 0x40
 8014fea:	f8d8 3000 	ldr.w	r3, [r8]
 8014fee:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014ff2:	7b19      	ldrb	r1, [r3, #12]
 8014ff4:	7adb      	ldrb	r3, [r3, #11]
 8014ff6:	9011      	str	r0, [sp, #68]	; 0x44
 8014ff8:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014ffc:	9114      	str	r1, [sp, #80]	; 0x50
 8014ffe:	9315      	str	r3, [sp, #84]	; 0x54
 8015000:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015004:	2a00      	cmp	r2, #0
 8015006:	d06a      	beq.n	80150de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015008:	f898 3010 	ldrb.w	r3, [r8, #16]
 801500c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801500e:	2b06      	cmp	r3, #6
 8015010:	bf14      	ite	ne
 8015012:	2301      	movne	r3, #1
 8015014:	2302      	moveq	r3, #2
 8015016:	4413      	add	r3, r2
 8015018:	f04f 0900 	mov.w	r9, #0
 801501c:	930f      	str	r3, [sp, #60]	; 0x3c
 801501e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015022:	464c      	mov	r4, r9
 8015024:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015028:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801502c:	4293      	cmp	r3, r2
 801502e:	f280 808f 	bge.w	8015150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015032:	2300      	movs	r3, #0
 8015034:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015038:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801503c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015040:	429c      	cmp	r4, r3
 8015042:	d006      	beq.n	8015052 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015044:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015046:	f242 020b 	movw	r2, #8203	; 0x200b
 801504a:	4294      	cmp	r4, r2
 801504c:	bf18      	it	ne
 801504e:	4623      	movne	r3, r4
 8015050:	930d      	str	r3, [sp, #52]	; 0x34
 8015052:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015054:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015056:	f8d8 2000 	ldr.w	r2, [r8]
 801505a:	428b      	cmp	r3, r1
 801505c:	db41      	blt.n	80150e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801505e:	6813      	ldr	r3, [r2, #0]
 8015060:	4610      	mov	r0, r2
 8015062:	695b      	ldr	r3, [r3, #20]
 8015064:	4798      	blx	r3
 8015066:	4604      	mov	r4, r0
 8015068:	f8d8 0000 	ldr.w	r0, [r8]
 801506c:	6803      	ldr	r3, [r0, #0]
 801506e:	aa1d      	add	r2, sp, #116	; 0x74
 8015070:	689d      	ldr	r5, [r3, #8]
 8015072:	4621      	mov	r1, r4
 8015074:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015078:	47a8      	blx	r5
 801507a:	901c      	str	r0, [sp, #112]	; 0x70
 801507c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015080:	429c      	cmp	r4, r3
 8015082:	f000 80eb 	beq.w	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015086:	f242 030b 	movw	r3, #8203	; 0x200b
 801508a:	429c      	cmp	r4, r3
 801508c:	f000 80e6 	beq.w	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015090:	2c00      	cmp	r4, #0
 8015092:	f000 80f8 	beq.w	8015286 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015096:	2c0a      	cmp	r4, #10
 8015098:	d060      	beq.n	801515c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801509a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801509c:	b36a      	cbz	r2, 80150fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801509e:	8894      	ldrh	r4, [r2, #4]
 80150a0:	f1bb 0f00 	cmp.w	fp, #0
 80150a4:	d03b      	beq.n	801511e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80150a6:	f892 900d 	ldrb.w	r9, [r2, #13]
 80150aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80150ae:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80150b2:	f892 900a 	ldrb.w	r9, [r2, #10]
 80150b6:	f1bb 0f01 	cmp.w	fp, #1
 80150ba:	ea49 0903 	orr.w	r9, r9, r3
 80150be:	d134      	bne.n	801512a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80150c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80150c2:	eba6 0609 	sub.w	r6, r6, r9
 80150c6:	2b00      	cmp	r3, #0
 80150c8:	d14f      	bne.n	801516a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80150ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80150cc:	eb09 0306 	add.w	r3, r9, r6
 80150d0:	4413      	add	r3, r2
 80150d2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80150d4:	f9b2 2000 	ldrsh.w	r2, [r2]
 80150d8:	4293      	cmp	r3, r2
 80150da:	da51      	bge.n	8015180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80150dc:	e038      	b.n	8015150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80150de:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80150e0:	e79a      	b.n	8015018 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80150e2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80150e6:	9301      	str	r3, [sp, #4]
 80150e8:	ab1d      	add	r3, sp, #116	; 0x74
 80150ea:	9300      	str	r3, [sp, #0]
 80150ec:	4659      	mov	r1, fp
 80150ee:	ab1c      	add	r3, sp, #112	; 0x70
 80150f0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80150f2:	f003 f908 	bl	8018306 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80150f6:	4604      	mov	r4, r0
 80150f8:	e7c0      	b.n	801507c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80150fa:	f8d8 0000 	ldr.w	r0, [r8]
 80150fe:	6803      	ldr	r3, [r0, #0]
 8015100:	691b      	ldr	r3, [r3, #16]
 8015102:	4798      	blx	r3
 8015104:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015108:	4298      	cmp	r0, r3
 801510a:	f000 80a7 	beq.w	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801510e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015112:	4298      	cmp	r0, r3
 8015114:	f000 80a2 	beq.w	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015118:	f1bb 0f00 	cmp.w	fp, #0
 801511c:	d100      	bne.n	8015120 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801511e:	444e      	add	r6, r9
 8015120:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015122:	2a00      	cmp	r2, #0
 8015124:	d1bf      	bne.n	80150a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015126:	4691      	mov	r9, r2
 8015128:	e098      	b.n	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801512a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801512c:	2b00      	cmp	r3, #0
 801512e:	f000 80ac 	beq.w	801528a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015132:	f1bb 0f00 	cmp.w	fp, #0
 8015136:	d118      	bne.n	801516a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015138:	f8d8 0000 	ldr.w	r0, [r8]
 801513c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801513e:	6803      	ldr	r3, [r0, #0]
 8015140:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015142:	4798      	blx	r3
 8015144:	4406      	add	r6, r0
 8015146:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015148:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801514a:	1af3      	subs	r3, r6, r3
 801514c:	4293      	cmp	r3, r2
 801514e:	dd17      	ble.n	8015180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015150:	2c00      	cmp	r4, #0
 8015152:	f000 8098 	beq.w	8015286 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015156:	2c0a      	cmp	r4, #10
 8015158:	f040 8086 	bne.w	8015268 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 801515c:	240a      	movs	r4, #10
 801515e:	fab4 f084 	clz	r0, r4
 8015162:	0940      	lsrs	r0, r0, #5
 8015164:	b01f      	add	sp, #124	; 0x7c
 8015166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801516a:	f8d8 0000 	ldr.w	r0, [r8]
 801516e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015170:	6803      	ldr	r3, [r0, #0]
 8015172:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015174:	4798      	blx	r3
 8015176:	f1bb 0f01 	cmp.w	fp, #1
 801517a:	eba6 0600 	sub.w	r6, r6, r0
 801517e:	d0a4      	beq.n	80150ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015180:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015182:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015184:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015188:	f9b3 7000 	ldrsh.w	r7, [r3]
 801518c:	7b43      	ldrb	r3, [r0, #13]
 801518e:	015b      	lsls	r3, r3, #5
 8015190:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015194:	7983      	ldrb	r3, [r0, #6]
 8015196:	4431      	add	r1, r6
 8015198:	4313      	orrs	r3, r2
 801519a:	440b      	add	r3, r1
 801519c:	42bb      	cmp	r3, r7
 801519e:	db5d      	blt.n	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80151a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151a2:	4299      	cmp	r1, r3
 80151a4:	da5a      	bge.n	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80151a6:	f8d8 0000 	ldr.w	r0, [r8]
 80151aa:	6803      	ldr	r3, [r0, #0]
 80151ac:	42b7      	cmp	r7, r6
 80151ae:	bfc8      	it	gt
 80151b0:	1bbf      	subgt	r7, r7, r6
 80151b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80151b4:	bfcc      	ite	gt
 80151b6:	b2bf      	uxthgt	r7, r7
 80151b8:	2700      	movle	r7, #0
 80151ba:	4798      	blx	r3
 80151bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80151be:	7b5a      	ldrb	r2, [r3, #13]
 80151c0:	00d1      	lsls	r1, r2, #3
 80151c2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80151c6:	7a19      	ldrb	r1, [r3, #8]
 80151c8:	4329      	orrs	r1, r5
 80151ca:	0655      	lsls	r5, r2, #25
 80151cc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80151ce:	bf44      	itt	mi
 80151d0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80151d4:	b209      	sxthmi	r1, r1
 80151d6:	1945      	adds	r5, r0, r5
 80151d8:	1a6d      	subs	r5, r5, r1
 80151da:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80151dc:	b2ad      	uxth	r5, r5
 80151de:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80151e2:	fa0f fa85 	sxth.w	sl, r5
 80151e6:	4551      	cmp	r1, sl
 80151e8:	dd3c      	ble.n	8015264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80151ea:	0112      	lsls	r2, r2, #4
 80151ec:	79d8      	ldrb	r0, [r3, #7]
 80151ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80151f2:	4302      	orrs	r2, r0
 80151f4:	4492      	add	sl, r2
 80151f6:	4551      	cmp	r1, sl
 80151f8:	dc30      	bgt.n	801525c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80151fa:	1b4d      	subs	r5, r1, r5
 80151fc:	b22d      	sxth	r5, r5
 80151fe:	468a      	mov	sl, r1
 8015200:	9319      	str	r3, [sp, #100]	; 0x64
 8015202:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015204:	f8d8 0000 	ldr.w	r0, [r8]
 8015208:	681a      	ldr	r2, [r3, #0]
 801520a:	6801      	ldr	r1, [r0, #0]
 801520c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801520e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015210:	9313      	str	r3, [sp, #76]	; 0x4c
 8015212:	9218      	str	r2, [sp, #96]	; 0x60
 8015214:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015216:	4788      	blx	r1
 8015218:	f898 1006 	ldrb.w	r1, [r8, #6]
 801521c:	910b      	str	r1, [sp, #44]	; 0x2c
 801521e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015222:	910a      	str	r1, [sp, #40]	; 0x28
 8015224:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015228:	9109      	str	r1, [sp, #36]	; 0x24
 801522a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801522e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015230:	9305      	str	r3, [sp, #20]
 8015232:	b2ad      	uxth	r5, r5
 8015234:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015238:	e9cd 7502 	strd	r7, r5, [sp, #8]
 801523c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801523e:	9304      	str	r3, [sp, #16]
 8015240:	4437      	add	r7, r6
 8015242:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015244:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015246:	9206      	str	r2, [sp, #24]
 8015248:	b23f      	sxth	r7, r7
 801524a:	f8cd a004 	str.w	sl, [sp, #4]
 801524e:	9700      	str	r7, [sp, #0]
 8015250:	681a      	ldr	r2, [r3, #0]
 8015252:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015254:	685b      	ldr	r3, [r3, #4]
 8015256:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015258:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801525a:	47a8      	blx	r5
 801525c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801525e:	3301      	adds	r3, #1
 8015260:	930e      	str	r3, [sp, #56]	; 0x38
 8015262:	e6e1      	b.n	8015028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015264:	2500      	movs	r5, #0
 8015266:	e7cb      	b.n	8015200 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015268:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801526a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801526c:	3501      	adds	r5, #1
 801526e:	429d      	cmp	r5, r3
 8015270:	f6bf af75 	bge.w	801515e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015274:	4659      	mov	r1, fp
 8015276:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015278:	f7f2 ff4e 	bl	8008118 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801527c:	4604      	mov	r4, r0
 801527e:	b110      	cbz	r0, 8015286 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015280:	280a      	cmp	r0, #10
 8015282:	d1f2      	bne.n	801526a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015284:	e76a      	b.n	801515c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015286:	2400      	movs	r4, #0
 8015288:	e769      	b.n	801515e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801528a:	f1bb 0f00 	cmp.w	fp, #0
 801528e:	f43f af5a 	beq.w	8015146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015292:	e775      	b.n	8015180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015294 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015294:	b530      	push	{r4, r5, lr}
 8015296:	8ac4      	ldrh	r4, [r0, #22]
 8015298:	8b45      	ldrh	r5, [r0, #26]
 801529a:	8343      	strh	r3, [r0, #26]
 801529c:	442c      	add	r4, r5
 801529e:	1ae4      	subs	r4, r4, r3
 80152a0:	82c4      	strh	r4, [r0, #22]
 80152a2:	8b83      	ldrh	r3, [r0, #28]
 80152a4:	8b04      	ldrh	r4, [r0, #24]
 80152a6:	4422      	add	r2, r4
 80152a8:	440c      	add	r4, r1
 80152aa:	1a59      	subs	r1, r3, r1
 80152ac:	83c2      	strh	r2, [r0, #30]
 80152ae:	8304      	strh	r4, [r0, #24]
 80152b0:	8381      	strh	r1, [r0, #28]
 80152b2:	bd30      	pop	{r4, r5, pc}

080152b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80152b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152b8:	4604      	mov	r4, r0
 80152ba:	8a47      	ldrh	r7, [r0, #18]
 80152bc:	68c0      	ldr	r0, [r0, #12]
 80152be:	6803      	ldr	r3, [r0, #0]
 80152c0:	b085      	sub	sp, #20
 80152c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152c4:	4798      	blx	r3
 80152c6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80152ca:	7a63      	ldrb	r3, [r4, #9]
 80152cc:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80152d0:	42b7      	cmp	r7, r6
 80152d2:	f103 33ff 	add.w	r3, r3, #4294967295
 80152d6:	bfac      	ite	ge
 80152d8:	f04f 0900 	movge.w	r9, #0
 80152dc:	f04f 0901 	movlt.w	r9, #1
 80152e0:	2b05      	cmp	r3, #5
 80152e2:	d804      	bhi.n	80152ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80152e4:	e8df f003 	tbb	[pc, r3]
 80152e8:	470e0854 	.word	0x470e0854
 80152ec:	4c4c      	.short	0x4c4c
 80152ee:	2500      	movs	r5, #0
 80152f0:	46a9      	mov	r9, r5
 80152f2:	462e      	mov	r6, r5
 80152f4:	462f      	mov	r7, r5
 80152f6:	e00d      	b.n	8015314 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80152f8:	42b7      	cmp	r7, r6
 80152fa:	bfb4      	ite	lt
 80152fc:	2600      	movlt	r6, #0
 80152fe:	2601      	movge	r6, #1
 8015300:	2500      	movs	r5, #0
 8015302:	e7f7      	b.n	80152f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015304:	42b7      	cmp	r7, r6
 8015306:	464d      	mov	r5, r9
 8015308:	f04f 0900 	mov.w	r9, #0
 801530c:	bfb4      	ite	lt
 801530e:	2600      	movlt	r6, #0
 8015310:	2601      	movge	r6, #1
 8015312:	464f      	mov	r7, r9
 8015314:	f04f 0800 	mov.w	r8, #0
 8015318:	f8a4 8016 	strh.w	r8, [r4, #22]
 801531c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015320:	f8cd 8004 	str.w	r8, [sp, #4]
 8015324:	2300      	movs	r3, #0
 8015326:	9303      	str	r3, [sp, #12]
 8015328:	8823      	ldrh	r3, [r4, #0]
 801532a:	2b20      	cmp	r3, #32
 801532c:	d034      	beq.n	8015398 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801532e:	f242 010b 	movw	r1, #8203	; 0x200b
 8015332:	1a5a      	subs	r2, r3, r1
 8015334:	f1d2 0a00 	rsbs	sl, r2, #0
 8015338:	eb4a 0a02 	adc.w	sl, sl, r2
 801533c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015340:	4293      	cmp	r3, r2
 8015342:	d009      	beq.n	8015358 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015344:	428b      	cmp	r3, r1
 8015346:	9a01      	ldr	r2, [sp, #4]
 8015348:	bf18      	it	ne
 801534a:	461a      	movne	r2, r3
 801534c:	9201      	str	r2, [sp, #4]
 801534e:	bf0c      	ite	eq
 8015350:	f04f 0a01 	moveq.w	sl, #1
 8015354:	f04f 0a00 	movne.w	sl, #0
 8015358:	ab03      	add	r3, sp, #12
 801535a:	68e2      	ldr	r2, [r4, #12]
 801535c:	7a21      	ldrb	r1, [r4, #8]
 801535e:	6860      	ldr	r0, [r4, #4]
 8015360:	f002 ff88 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015364:	8020      	strh	r0, [r4, #0]
 8015366:	b9d8      	cbnz	r0, 80153a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015368:	8ba2      	ldrh	r2, [r4, #28]
 801536a:	2300      	movs	r3, #0
 801536c:	4611      	mov	r1, r2
 801536e:	4620      	mov	r0, r4
 8015370:	f7ff ff90 	bl	8015294 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015374:	e06e      	b.n	8015454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015376:	2500      	movs	r5, #0
 8015378:	46a9      	mov	r9, r5
 801537a:	462e      	mov	r6, r5
 801537c:	2701      	movs	r7, #1
 801537e:	e7c9      	b.n	8015314 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015380:	42b7      	cmp	r7, r6
 8015382:	f04f 0500 	mov.w	r5, #0
 8015386:	bfb4      	ite	lt
 8015388:	2700      	movlt	r7, #0
 801538a:	2701      	movge	r7, #1
 801538c:	462e      	mov	r6, r5
 801538e:	e7c1      	b.n	8015314 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015390:	2500      	movs	r5, #0
 8015392:	46a9      	mov	r9, r5
 8015394:	2601      	movs	r6, #1
 8015396:	e7ad      	b.n	80152f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015398:	9301      	str	r3, [sp, #4]
 801539a:	f04f 0a01 	mov.w	sl, #1
 801539e:	e7db      	b.n	8015358 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80153a0:	8b63      	ldrh	r3, [r4, #26]
 80153a2:	280a      	cmp	r0, #10
 80153a4:	f103 0301 	add.w	r3, r3, #1
 80153a8:	8363      	strh	r3, [r4, #26]
 80153aa:	d0dd      	beq.n	8015368 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80153ac:	9a03      	ldr	r2, [sp, #12]
 80153ae:	bb62      	cbnz	r2, 801540a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80153b0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80153b4:	4298      	cmp	r0, r3
 80153b6:	d003      	beq.n	80153c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80153b8:	f242 030b 	movw	r3, #8203	; 0x200b
 80153bc:	4298      	cmp	r0, r3
 80153be:	d1b1      	bne.n	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80153c0:	8823      	ldrh	r3, [r4, #0]
 80153c2:	8ba1      	ldrh	r1, [r4, #28]
 80153c4:	2b20      	cmp	r3, #32
 80153c6:	d003      	beq.n	80153d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80153c8:	f242 000b 	movw	r0, #8203	; 0x200b
 80153cc:	4283      	cmp	r3, r0
 80153ce:	d131      	bne.n	8015434 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80153d0:	f1ba 0f00 	cmp.w	sl, #0
 80153d4:	bf0a      	itet	eq
 80153d6:	4688      	moveq	r8, r1
 80153d8:	4650      	movne	r0, sl
 80153da:	2001      	moveq	r0, #1
 80153dc:	440a      	add	r2, r1
 80153de:	8b23      	ldrh	r3, [r4, #24]
 80153e0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80153e4:	b292      	uxth	r2, r2
 80153e6:	83a2      	strh	r2, [r4, #28]
 80153e8:	4413      	add	r3, r2
 80153ea:	f1b9 0f00 	cmp.w	r9, #0
 80153ee:	d102      	bne.n	80153f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80153f0:	2d00      	cmp	r5, #0
 80153f2:	d042      	beq.n	801547a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80153f4:	b300      	cbz	r0, 8015438 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80153f6:	8c21      	ldrh	r1, [r4, #32]
 80153f8:	4419      	add	r1, r3
 80153fa:	458c      	cmp	ip, r1
 80153fc:	da37      	bge.n	801546e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80153fe:	8ae1      	ldrh	r1, [r4, #22]
 8015400:	2900      	cmp	r1, #0
 8015402:	d034      	beq.n	801546e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015404:	4563      	cmp	r3, ip
 8015406:	dd8d      	ble.n	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015408:	e01d      	b.n	8015446 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801540a:	8893      	ldrh	r3, [r2, #4]
 801540c:	8023      	strh	r3, [r4, #0]
 801540e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015412:	9901      	ldr	r1, [sp, #4]
 8015414:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015418:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 801541c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015420:	ea4b 0b00 	orr.w	fp, fp, r0
 8015424:	68e0      	ldr	r0, [r4, #12]
 8015426:	6803      	ldr	r3, [r0, #0]
 8015428:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801542a:	4798      	blx	r3
 801542c:	eb0b 0200 	add.w	r2, fp, r0
 8015430:	b292      	uxth	r2, r2
 8015432:	e7c5      	b.n	80153c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015434:	2000      	movs	r0, #0
 8015436:	e7d1      	b.n	80153dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015438:	4563      	cmp	r3, ip
 801543a:	f77f af73 	ble.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801543e:	8ae3      	ldrh	r3, [r4, #22]
 8015440:	2b00      	cmp	r3, #0
 8015442:	f43f af6f 	beq.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015446:	2301      	movs	r3, #1
 8015448:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 801544c:	8c22      	ldrh	r2, [r4, #32]
 801544e:	8be3      	ldrh	r3, [r4, #30]
 8015450:	4413      	add	r3, r2
 8015452:	83e3      	strh	r3, [r4, #30]
 8015454:	68e0      	ldr	r0, [r4, #12]
 8015456:	6803      	ldr	r3, [r0, #0]
 8015458:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801545a:	4798      	blx	r3
 801545c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015460:	4418      	add	r0, r3
 8015462:	8a63      	ldrh	r3, [r4, #18]
 8015464:	1a18      	subs	r0, r3, r0
 8015466:	8260      	strh	r0, [r4, #18]
 8015468:	b005      	add	sp, #20
 801546a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801546e:	2300      	movs	r3, #0
 8015470:	4611      	mov	r1, r2
 8015472:	4620      	mov	r0, r4
 8015474:	f7ff ff0e 	bl	8015294 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015478:	e754      	b.n	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801547a:	4563      	cmp	r3, ip
 801547c:	dd14      	ble.n	80154a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801547e:	b117      	cbz	r7, 8015486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015480:	2301      	movs	r3, #1
 8015482:	460a      	mov	r2, r1
 8015484:	e772      	b.n	801536c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015486:	2e00      	cmp	r6, #0
 8015488:	f43f af4c 	beq.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801548c:	2800      	cmp	r0, #0
 801548e:	f47f af49 	bne.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015492:	f1ba 0f00 	cmp.w	sl, #0
 8015496:	d002      	beq.n	801549e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015498:	2301      	movs	r3, #1
 801549a:	4642      	mov	r2, r8
 801549c:	e767      	b.n	801536e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801549e:	8ae3      	ldrh	r3, [r4, #22]
 80154a0:	2b00      	cmp	r3, #0
 80154a2:	f43f af3f 	beq.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80154a6:	e7d5      	b.n	8015454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80154a8:	2800      	cmp	r0, #0
 80154aa:	f47f af3b 	bne.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80154ae:	f1ba 0f00 	cmp.w	sl, #0
 80154b2:	f43f af37 	beq.w	8015324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80154b6:	2301      	movs	r3, #1
 80154b8:	4642      	mov	r2, r8
 80154ba:	e7da      	b.n	8015472 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080154bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80154bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80154be:	4605      	mov	r5, r0
 80154c0:	b08f      	sub	sp, #60	; 0x3c
 80154c2:	4617      	mov	r7, r2
 80154c4:	461c      	mov	r4, r3
 80154c6:	460e      	mov	r6, r1
 80154c8:	b1d1      	cbz	r1, 8015500 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80154ca:	681b      	ldr	r3, [r3, #0]
 80154cc:	4620      	mov	r0, r4
 80154ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80154d0:	4798      	blx	r3
 80154d2:	4240      	negs	r0, r0
 80154d4:	b200      	sxth	r0, r0
 80154d6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80154da:	9603      	str	r6, [sp, #12]
 80154dc:	9700      	str	r7, [sp, #0]
 80154de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80154e2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80154e6:	4629      	mov	r1, r5
 80154e8:	a805      	add	r0, sp, #20
 80154ea:	f7ff fcbf 	bl	8014e6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80154ee:	2401      	movs	r4, #1
 80154f0:	a805      	add	r0, sp, #20
 80154f2:	f7ff fedf 	bl	80152b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80154f6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80154fa:	b163      	cbz	r3, 8015516 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80154fc:	3401      	adds	r4, #1
 80154fe:	e7f7      	b.n	80154f0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015500:	f002 ff86 	bl	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015504:	2401      	movs	r4, #1
 8015506:	280a      	cmp	r0, #10
 8015508:	4628      	mov	r0, r5
 801550a:	bf08      	it	eq
 801550c:	3401      	addeq	r4, #1
 801550e:	f002 ff7f 	bl	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015512:	2800      	cmp	r0, #0
 8015514:	d1f7      	bne.n	8015506 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015516:	b2a0      	uxth	r0, r4
 8015518:	b00f      	add	sp, #60	; 0x3c
 801551a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801551c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801551c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015520:	b0e3      	sub	sp, #396	; 0x18c
 8015522:	461c      	mov	r4, r3
 8015524:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015526:	4683      	mov	fp, r0
 8015528:	4688      	mov	r8, r1
 801552a:	2b00      	cmp	r3, #0
 801552c:	f000 8112 	beq.w	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015530:	6823      	ldr	r3, [r4, #0]
 8015532:	2b00      	cmp	r3, #0
 8015534:	f000 810e 	beq.w	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015538:	7ba3      	ldrb	r3, [r4, #14]
 801553a:	2b00      	cmp	r3, #0
 801553c:	f000 810a 	beq.w	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015540:	6810      	ldr	r0, [r2, #0]
 8015542:	6851      	ldr	r1, [r2, #4]
 8015544:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015548:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801554c:	ad0a      	add	r5, sp, #40	; 0x28
 801554e:	462b      	mov	r3, r5
 8015550:	c303      	stmia	r3!, {r0, r1}
 8015552:	2100      	movs	r1, #0
 8015554:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015558:	910c      	str	r1, [sp, #48]	; 0x30
 801555a:	79a2      	ldrb	r2, [r4, #6]
 801555c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015560:	a90c      	add	r1, sp, #48	; 0x30
 8015562:	4628      	mov	r0, r5
 8015564:	f7ff fd01 	bl	8014f6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015568:	a90c      	add	r1, sp, #48	; 0x30
 801556a:	4608      	mov	r0, r1
 801556c:	79a2      	ldrb	r2, [r4, #6]
 801556e:	f7ff fcfc 	bl	8014f6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015572:	a817      	add	r0, sp, #92	; 0x5c
 8015574:	f002 fb20 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8015578:	6820      	ldr	r0, [r4, #0]
 801557a:	6803      	ldr	r3, [r0, #0]
 801557c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801557e:	4798      	blx	r3
 8015580:	4606      	mov	r6, r0
 8015582:	6820      	ldr	r0, [r4, #0]
 8015584:	6803      	ldr	r3, [r0, #0]
 8015586:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015588:	4798      	blx	r3
 801558a:	4633      	mov	r3, r6
 801558c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801558e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015590:	9000      	str	r0, [sp, #0]
 8015592:	a817      	add	r0, sp, #92	; 0x5c
 8015594:	f002 fb6b 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015598:	6820      	ldr	r0, [r4, #0]
 801559a:	f894 a004 	ldrb.w	sl, [r4, #4]
 801559e:	6803      	ldr	r3, [r0, #0]
 80155a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80155a2:	4798      	blx	r3
 80155a4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80155a8:	6823      	ldr	r3, [r4, #0]
 80155aa:	4607      	mov	r7, r0
 80155ac:	4406      	add	r6, r0
 80155ae:	a830      	add	r0, sp, #192	; 0xc0
 80155b0:	f893 9009 	ldrb.w	r9, [r3, #9]
 80155b4:	f002 fb00 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 80155b8:	7c23      	ldrb	r3, [r4, #16]
 80155ba:	b17b      	cbz	r3, 80155dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80155bc:	6820      	ldr	r0, [r4, #0]
 80155be:	6803      	ldr	r3, [r0, #0]
 80155c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80155c2:	4798      	blx	r3
 80155c4:	9009      	str	r0, [sp, #36]	; 0x24
 80155c6:	6820      	ldr	r0, [r4, #0]
 80155c8:	6802      	ldr	r2, [r0, #0]
 80155ca:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80155cc:	4790      	blx	r2
 80155ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155d0:	9000      	str	r0, [sp, #0]
 80155d2:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80155d4:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80155d6:	a830      	add	r0, sp, #192	; 0xc0
 80155d8:	f002 fb49 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80155dc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80155e0:	7be2      	ldrb	r2, [r4, #15]
 80155e2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80155e6:	1a8a      	subs	r2, r1, r2
 80155e8:	7c21      	ldrb	r1, [r4, #16]
 80155ea:	9103      	str	r1, [sp, #12]
 80155ec:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80155f0:	9102      	str	r1, [sp, #8]
 80155f2:	6821      	ldr	r1, [r4, #0]
 80155f4:	9101      	str	r1, [sp, #4]
 80155f6:	7961      	ldrb	r1, [r4, #5]
 80155f8:	9100      	str	r1, [sp, #0]
 80155fa:	b292      	uxth	r2, r2
 80155fc:	a930      	add	r1, sp, #192	; 0xc0
 80155fe:	a80e      	add	r0, sp, #56	; 0x38
 8015600:	f7ff fc34 	bl	8014e6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015604:	2e00      	cmp	r6, #0
 8015606:	dc5b      	bgt.n	80156c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015608:	af17      	add	r7, sp, #92	; 0x5c
 801560a:	f04f 0900 	mov.w	r9, #0
 801560e:	7c23      	ldrb	r3, [r4, #16]
 8015610:	2b00      	cmp	r3, #0
 8015612:	f000 80b1 	beq.w	8015778 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015616:	a80e      	add	r0, sp, #56	; 0x38
 8015618:	f7ff fe4c 	bl	80152b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801561c:	f1ba 0f00 	cmp.w	sl, #0
 8015620:	f000 80a5 	beq.w	801576e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015624:	7c23      	ldrb	r3, [r4, #16]
 8015626:	9309      	str	r3, [sp, #36]	; 0x24
 8015628:	2264      	movs	r2, #100	; 0x64
 801562a:	4639      	mov	r1, r7
 801562c:	a849      	add	r0, sp, #292	; 0x124
 801562e:	f015 fde6 	bl	802b1fe <memcpy>
 8015632:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015634:	2b00      	cmp	r3, #0
 8015636:	f000 80a7 	beq.w	8015788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801563a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801563e:	7922      	ldrb	r2, [r4, #4]
 8015640:	2a01      	cmp	r2, #1
 8015642:	f040 808a 	bne.w	801575a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015646:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 801564a:	1ac0      	subs	r0, r0, r3
 801564c:	2302      	movs	r3, #2
 801564e:	fb90 f0f3 	sdiv	r0, r0, r3
 8015652:	b200      	sxth	r0, r0
 8015654:	7c23      	ldrb	r3, [r4, #16]
 8015656:	2b00      	cmp	r3, #0
 8015658:	f000 808b 	beq.w	8015772 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801565c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015660:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8015664:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015668:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801566c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015670:	4410      	add	r0, r2
 8015672:	b200      	sxth	r0, r0
 8015674:	9000      	str	r0, [sp, #0]
 8015676:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801567a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801567e:	4642      	mov	r2, r8
 8015680:	2100      	movs	r1, #0
 8015682:	4658      	mov	r0, fp
 8015684:	f7ff fca2 	bl	8014fcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015688:	2800      	cmp	r0, #0
 801568a:	d163      	bne.n	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801568c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015690:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015694:	b2b2      	uxth	r2, r6
 8015696:	4413      	add	r3, r2
 8015698:	1a8a      	subs	r2, r1, r2
 801569a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801569e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80156a2:	b21b      	sxth	r3, r3
 80156a4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80156a8:	2a00      	cmp	r2, #0
 80156aa:	d153      	bne.n	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80156ac:	6822      	ldr	r2, [r4, #0]
 80156ae:	8869      	ldrh	r1, [r5, #2]
 80156b0:	7a12      	ldrb	r2, [r2, #8]
 80156b2:	1a9b      	subs	r3, r3, r2
 80156b4:	88ea      	ldrh	r2, [r5, #6]
 80156b6:	440a      	add	r2, r1
 80156b8:	b212      	sxth	r2, r2
 80156ba:	4293      	cmp	r3, r2
 80156bc:	dda7      	ble.n	801560e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80156be:	e049      	b.n	8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80156c0:	7c23      	ldrb	r3, [r4, #16]
 80156c2:	444f      	add	r7, r9
 80156c4:	b1c3      	cbz	r3, 80156f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80156c6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80156ca:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80156ce:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80156d2:	443b      	add	r3, r7
 80156d4:	4293      	cmp	r3, r2
 80156d6:	da97      	bge.n	8015608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80156d8:	a80e      	add	r0, sp, #56	; 0x38
 80156da:	f7ff fdeb 	bl	80152b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80156de:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80156e2:	3b01      	subs	r3, #1
 80156e4:	b29b      	uxth	r3, r3
 80156e6:	454b      	cmp	r3, r9
 80156e8:	9309      	str	r3, [sp, #36]	; 0x24
 80156ea:	d021      	beq.n	8015730 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80156ec:	7961      	ldrb	r1, [r4, #5]
 80156ee:	a817      	add	r0, sp, #92	; 0x5c
 80156f0:	f7f2 fd12 	bl	8008118 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80156f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156f6:	e7f4      	b.n	80156e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80156f8:	fa1f f986 	uxth.w	r9, r6
 80156fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015700:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015704:	443b      	add	r3, r7
 8015706:	4293      	cmp	r3, r2
 8015708:	f6bf af7e 	bge.w	8015608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801570c:	a817      	add	r0, sp, #92	; 0x5c
 801570e:	f002 fe7f 	bl	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015712:	b1f8      	cbz	r0, 8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015714:	280a      	cmp	r0, #10
 8015716:	d1f1      	bne.n	80156fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015718:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801571c:	444b      	add	r3, r9
 801571e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015722:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015726:	eba3 0309 	sub.w	r3, r3, r9
 801572a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801572e:	e7e5      	b.n	80156fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015730:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015734:	b2b3      	uxth	r3, r6
 8015736:	441a      	add	r2, r3
 8015738:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801573c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015740:	1ad3      	subs	r3, r2, r3
 8015742:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015746:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801574a:	b11b      	cbz	r3, 8015754 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801574c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015750:	2b00      	cmp	r3, #0
 8015752:	d0ba      	beq.n	80156ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8015754:	b063      	add	sp, #396	; 0x18c
 8015756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801575a:	2a02      	cmp	r2, #2
 801575c:	d105      	bne.n	801576a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801575e:	7be2      	ldrb	r2, [r4, #15]
 8015760:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015764:	1a80      	subs	r0, r0, r2
 8015766:	1ac0      	subs	r0, r0, r3
 8015768:	e773      	b.n	8015652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801576a:	2000      	movs	r0, #0
 801576c:	e772      	b.n	8015654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801576e:	7be0      	ldrb	r0, [r4, #15]
 8015770:	e770      	b.n	8015654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015772:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015776:	e773      	b.n	8015660 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015778:	f1ba 0f00 	cmp.w	sl, #0
 801577c:	d0f7      	beq.n	801576e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801577e:	2264      	movs	r2, #100	; 0x64
 8015780:	4639      	mov	r1, r7
 8015782:	a849      	add	r0, sp, #292	; 0x124
 8015784:	f015 fd3b 	bl	802b1fe <memcpy>
 8015788:	2300      	movs	r3, #0
 801578a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801578e:	6821      	ldr	r1, [r4, #0]
 8015790:	a849      	add	r0, sp, #292	; 0x124
 8015792:	f7ff fbae 	bl	8014ef2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8015796:	b203      	sxth	r3, r0
 8015798:	e751      	b.n	801563e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801579a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801579a:	2b03      	cmp	r3, #3
 801579c:	d818      	bhi.n	80157d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801579e:	e8df f003 	tbb	[pc, r3]
 80157a2:	0602      	.short	0x0602
 80157a4:	130d      	.short	0x130d
 80157a6:	f9b0 2000 	ldrsh.w	r2, [r0]
 80157aa:	1850      	adds	r0, r2, r1
 80157ac:	4770      	bx	lr
 80157ae:	8803      	ldrh	r3, [r0, #0]
 80157b0:	8880      	ldrh	r0, [r0, #4]
 80157b2:	4418      	add	r0, r3
 80157b4:	b200      	sxth	r0, r0
 80157b6:	1a80      	subs	r0, r0, r2
 80157b8:	3801      	subs	r0, #1
 80157ba:	4770      	bx	lr
 80157bc:	8803      	ldrh	r3, [r0, #0]
 80157be:	8880      	ldrh	r0, [r0, #4]
 80157c0:	4418      	add	r0, r3
 80157c2:	b200      	sxth	r0, r0
 80157c4:	1a40      	subs	r0, r0, r1
 80157c6:	e7f7      	b.n	80157b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80157c8:	f9b0 0000 	ldrsh.w	r0, [r0]
 80157cc:	4410      	add	r0, r2
 80157ce:	4770      	bx	lr
 80157d0:	2000      	movs	r0, #0
 80157d2:	4770      	bx	lr

080157d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80157d4:	2b03      	cmp	r3, #3
 80157d6:	d817      	bhi.n	8015808 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80157d8:	e8df f003 	tbb	[pc, r3]
 80157dc:	10090602 	.word	0x10090602
 80157e0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80157e4:	1850      	adds	r0, r2, r1
 80157e6:	4770      	bx	lr
 80157e8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80157ec:	e7fa      	b.n	80157e4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80157ee:	8843      	ldrh	r3, [r0, #2]
 80157f0:	88c0      	ldrh	r0, [r0, #6]
 80157f2:	4418      	add	r0, r3
 80157f4:	b200      	sxth	r0, r0
 80157f6:	1a80      	subs	r0, r0, r2
 80157f8:	3801      	subs	r0, #1
 80157fa:	4770      	bx	lr
 80157fc:	8843      	ldrh	r3, [r0, #2]
 80157fe:	88c0      	ldrh	r0, [r0, #6]
 8015800:	4418      	add	r0, r3
 8015802:	b200      	sxth	r0, r0
 8015804:	1a40      	subs	r0, r0, r1
 8015806:	e7f7      	b.n	80157f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015808:	2000      	movs	r0, #0
 801580a:	4770      	bx	lr

0801580c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801580c:	4b01      	ldr	r3, [pc, #4]	; (8015814 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801580e:	2200      	movs	r2, #0
 8015810:	601a      	str	r2, [r3, #0]
 8015812:	4770      	bx	lr
 8015814:	20012fd4 	.word	0x20012fd4

08015818 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015818:	4603      	mov	r3, r0
 801581a:	b1c8      	cbz	r0, 8015850 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801581c:	0c02      	lsrs	r2, r0, #16
 801581e:	0412      	lsls	r2, r2, #16
 8015820:	b9a2      	cbnz	r2, 801584c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015822:	0403      	lsls	r3, r0, #16
 8015824:	2010      	movs	r0, #16
 8015826:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801582a:	bf04      	itt	eq
 801582c:	021b      	lsleq	r3, r3, #8
 801582e:	3008      	addeq	r0, #8
 8015830:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015834:	bf04      	itt	eq
 8015836:	011b      	lsleq	r3, r3, #4
 8015838:	3004      	addeq	r0, #4
 801583a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801583e:	bf04      	itt	eq
 8015840:	009b      	lsleq	r3, r3, #2
 8015842:	3002      	addeq	r0, #2
 8015844:	2b00      	cmp	r3, #0
 8015846:	db04      	blt.n	8015852 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015848:	3001      	adds	r0, #1
 801584a:	4770      	bx	lr
 801584c:	2000      	movs	r0, #0
 801584e:	e7ea      	b.n	8015826 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015850:	2020      	movs	r0, #32
 8015852:	4770      	bx	lr

08015854 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8015854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015858:	b087      	sub	sp, #28
 801585a:	460d      	mov	r5, r1
 801585c:	4616      	mov	r6, r2
 801585e:	4698      	mov	r8, r3
 8015860:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8015864:	4601      	mov	r1, r0
 8015866:	b120      	cbz	r0, 8015872 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015868:	b11a      	cbz	r2, 8015872 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801586a:	2d1f      	cmp	r5, #31
 801586c:	d801      	bhi.n	8015872 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801586e:	2b1f      	cmp	r3, #31
 8015870:	d904      	bls.n	801587c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8015872:	2000      	movs	r0, #0
 8015874:	6038      	str	r0, [r7, #0]
 8015876:	b007      	add	sp, #28
 8015878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801587c:	b97d      	cbnz	r5, 801589e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801587e:	b143      	cbz	r3, 8015892 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015880:	4602      	mov	r2, r0
 8015882:	e9cd 4700 	strd	r4, r7, [sp]
 8015886:	462b      	mov	r3, r5
 8015888:	4641      	mov	r1, r8
 801588a:	4630      	mov	r0, r6
 801588c:	f7ff ffe2 	bl	8015854 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015890:	e7f1      	b.n	8015876 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015892:	f04f 33ff 	mov.w	r3, #4294967295
 8015896:	603b      	str	r3, [r7, #0]
 8015898:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801589c:	e7eb      	b.n	8015876 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801589e:	fa32 fa05 	lsrs.w	sl, r2, r5
 80158a2:	d106      	bne.n	80158b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80158a4:	4346      	muls	r6, r0
 80158a6:	fbb6 f0f4 	udiv	r0, r6, r4
 80158aa:	fb04 6610 	mls	r6, r4, r0, r6
 80158ae:	603e      	str	r6, [r7, #0]
 80158b0:	e7e1      	b.n	8015876 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80158b2:	2201      	movs	r2, #1
 80158b4:	40aa      	lsls	r2, r5
 80158b6:	3a01      	subs	r2, #1
 80158b8:	4016      	ands	r6, r2
 80158ba:	fa00 fb05 	lsl.w	fp, r0, r5
 80158be:	4630      	mov	r0, r6
 80158c0:	fbbb f9f4 	udiv	r9, fp, r4
 80158c4:	fb0a f309 	mul.w	r3, sl, r9
 80158c8:	9303      	str	r3, [sp, #12]
 80158ca:	f7ff ffa5 	bl	8015818 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80158ce:	462b      	mov	r3, r5
 80158d0:	460a      	mov	r2, r1
 80158d2:	e9cd 4700 	strd	r4, r7, [sp]
 80158d6:	4601      	mov	r1, r0
 80158d8:	4630      	mov	r0, r6
 80158da:	f7ff ffbb 	bl	8015854 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80158de:	fb04 b919 	mls	r9, r4, r9, fp
 80158e2:	4606      	mov	r6, r0
 80158e4:	4648      	mov	r0, r9
 80158e6:	eb05 0108 	add.w	r1, r5, r8
 80158ea:	f7ff ff95 	bl	8015818 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80158ee:	ab05      	add	r3, sp, #20
 80158f0:	e9cd 4300 	strd	r4, r3, [sp]
 80158f4:	464a      	mov	r2, r9
 80158f6:	4603      	mov	r3, r0
 80158f8:	4650      	mov	r0, sl
 80158fa:	f7ff ffab 	bl	8015854 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80158fe:	6839      	ldr	r1, [r7, #0]
 8015900:	9a05      	ldr	r2, [sp, #20]
 8015902:	9b03      	ldr	r3, [sp, #12]
 8015904:	4411      	add	r1, r2
 8015906:	fbb1 f2f4 	udiv	r2, r1, r4
 801590a:	18d3      	adds	r3, r2, r3
 801590c:	441e      	add	r6, r3
 801590e:	fb04 1412 	mls	r4, r4, r2, r1
 8015912:	4430      	add	r0, r6
 8015914:	603c      	str	r4, [r7, #0]
 8015916:	e7ae      	b.n	8015876 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015918:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801591c:	b085      	sub	sp, #20
 801591e:	f1b0 0900 	subs.w	r9, r0, #0
 8015922:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015924:	461d      	mov	r5, r3
 8015926:	bfbf      	itttt	lt
 8015928:	6823      	ldrlt	r3, [r4, #0]
 801592a:	425b      	neglt	r3, r3
 801592c:	f1c9 0900 	rsblt	r9, r9, #0
 8015930:	6023      	strlt	r3, [r4, #0]
 8015932:	bfb4      	ite	lt
 8015934:	f04f 36ff 	movlt.w	r6, #4294967295
 8015938:	2601      	movge	r6, #1
 801593a:	2a00      	cmp	r2, #0
 801593c:	4617      	mov	r7, r2
 801593e:	da04      	bge.n	801594a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015940:	6823      	ldr	r3, [r4, #0]
 8015942:	425b      	negs	r3, r3
 8015944:	4257      	negs	r7, r2
 8015946:	4276      	negs	r6, r6
 8015948:	6023      	str	r3, [r4, #0]
 801594a:	2d00      	cmp	r5, #0
 801594c:	4638      	mov	r0, r7
 801594e:	bfba      	itte	lt
 8015950:	426d      	neglt	r5, r5
 8015952:	f04f 38ff 	movlt.w	r8, #4294967295
 8015956:	f04f 0801 	movge.w	r8, #1
 801595a:	f7ff ff5d 	bl	8015818 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801595e:	ab03      	add	r3, sp, #12
 8015960:	e9cd 5300 	strd	r5, r3, [sp]
 8015964:	463a      	mov	r2, r7
 8015966:	4603      	mov	r3, r0
 8015968:	4648      	mov	r0, r9
 801596a:	f7ff ff73 	bl	8015854 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801596e:	6823      	ldr	r3, [r4, #0]
 8015970:	9a03      	ldr	r2, [sp, #12]
 8015972:	4546      	cmp	r6, r8
 8015974:	441a      	add	r2, r3
 8015976:	fb92 f3f5 	sdiv	r3, r2, r5
 801597a:	4418      	add	r0, r3
 801597c:	bf18      	it	ne
 801597e:	4240      	negne	r0, r0
 8015980:	fb05 2313 	mls	r3, r5, r3, r2
 8015984:	1c72      	adds	r2, r6, #1
 8015986:	6023      	str	r3, [r4, #0]
 8015988:	d105      	bne.n	8015996 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801598a:	2b00      	cmp	r3, #0
 801598c:	f1c3 0200 	rsb	r2, r3, #0
 8015990:	db0b      	blt.n	80159aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015992:	6022      	str	r2, [r4, #0]
 8015994:	e006      	b.n	80159a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015996:	2e01      	cmp	r6, #1
 8015998:	d104      	bne.n	80159a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801599a:	2b00      	cmp	r3, #0
 801599c:	da02      	bge.n	80159a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801599e:	442b      	add	r3, r5
 80159a0:	3801      	subs	r0, #1
 80159a2:	6023      	str	r3, [r4, #0]
 80159a4:	b005      	add	sp, #20
 80159a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80159aa:	3801      	subs	r0, #1
 80159ac:	1b52      	subs	r2, r2, r5
 80159ae:	e7f0      	b.n	8015992 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080159b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80159b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80159b4:	4c1c      	ldr	r4, [pc, #112]	; (8015a28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80159b6:	6807      	ldr	r7, [r0, #0]
 80159b8:	69a3      	ldr	r3, [r4, #24]
 80159ba:	4605      	mov	r5, r0
 80159bc:	b92b      	cbnz	r3, 80159ca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80159be:	6840      	ldr	r0, [r0, #4]
 80159c0:	e9c5 7000 	strd	r7, r0, [r5]
 80159c4:	b004      	add	sp, #16
 80159c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80159ca:	68a2      	ldr	r2, [r4, #8]
 80159cc:	6820      	ldr	r0, [r4, #0]
 80159ce:	ae04      	add	r6, sp, #16
 80159d0:	f04f 0802 	mov.w	r8, #2
 80159d4:	fb93 f1f8 	sdiv	r1, r3, r8
 80159d8:	440a      	add	r2, r1
 80159da:	f846 2d04 	str.w	r2, [r6, #-4]!
 80159de:	69e1      	ldr	r1, [r4, #28]
 80159e0:	9600      	str	r6, [sp, #0]
 80159e2:	463a      	mov	r2, r7
 80159e4:	f7ff ff98 	bl	8015918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80159e8:	69a3      	ldr	r3, [r4, #24]
 80159ea:	686a      	ldr	r2, [r5, #4]
 80159ec:	6a21      	ldr	r1, [r4, #32]
 80159ee:	9600      	str	r6, [sp, #0]
 80159f0:	4607      	mov	r7, r0
 80159f2:	6860      	ldr	r0, [r4, #4]
 80159f4:	f7ff ff90 	bl	8015918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80159f8:	6962      	ldr	r2, [r4, #20]
 80159fa:	69a3      	ldr	r3, [r4, #24]
 80159fc:	fb93 f8f8 	sdiv	r8, r3, r8
 8015a00:	4442      	add	r2, r8
 8015a02:	9203      	str	r2, [sp, #12]
 8015a04:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8015a06:	682a      	ldr	r2, [r5, #0]
 8015a08:	9600      	str	r6, [sp, #0]
 8015a0a:	4407      	add	r7, r0
 8015a0c:	68e0      	ldr	r0, [r4, #12]
 8015a0e:	f7ff ff83 	bl	8015918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015a12:	9600      	str	r6, [sp, #0]
 8015a14:	4680      	mov	r8, r0
 8015a16:	69a3      	ldr	r3, [r4, #24]
 8015a18:	686a      	ldr	r2, [r5, #4]
 8015a1a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015a1c:	6920      	ldr	r0, [r4, #16]
 8015a1e:	f7ff ff7b 	bl	8015918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015a22:	4440      	add	r0, r8
 8015a24:	e7cc      	b.n	80159c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8015a26:	bf00      	nop
 8015a28:	20012fd8 	.word	0x20012fd8

08015a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015a2c:	4b07      	ldr	r3, [pc, #28]	; (8015a4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015a2e:	781b      	ldrb	r3, [r3, #0]
 8015a30:	2b01      	cmp	r3, #1
 8015a32:	d109      	bne.n	8015a48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8015a34:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015a38:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015a3c:	8003      	strh	r3, [r0, #0]
 8015a3e:	4b04      	ldr	r3, [pc, #16]	; (8015a50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015a40:	881b      	ldrh	r3, [r3, #0]
 8015a42:	3b01      	subs	r3, #1
 8015a44:	1a9b      	subs	r3, r3, r2
 8015a46:	800b      	strh	r3, [r1, #0]
 8015a48:	4770      	bx	lr
 8015a4a:	bf00      	nop
 8015a4c:	20012fbc 	.word	0x20012fbc
 8015a50:	20012fb8 	.word	0x20012fb8

08015a54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8015a54:	b510      	push	{r4, lr}
 8015a56:	4b07      	ldr	r3, [pc, #28]	; (8015a74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015a58:	781b      	ldrb	r3, [r3, #0]
 8015a5a:	2b01      	cmp	r3, #1
 8015a5c:	d108      	bne.n	8015a70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015a5e:	4b06      	ldr	r3, [pc, #24]	; (8015a78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015a60:	880c      	ldrh	r4, [r1, #0]
 8015a62:	881b      	ldrh	r3, [r3, #0]
 8015a64:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015a68:	3b01      	subs	r3, #1
 8015a6a:	1b1b      	subs	r3, r3, r4
 8015a6c:	8003      	strh	r3, [r0, #0]
 8015a6e:	800a      	strh	r2, [r1, #0]
 8015a70:	bd10      	pop	{r4, pc}
 8015a72:	bf00      	nop
 8015a74:	20012fbc 	.word	0x20012fbc
 8015a78:	20012fb8 	.word	0x20012fb8

08015a7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015a7c:	b510      	push	{r4, lr}
 8015a7e:	4b0a      	ldr	r3, [pc, #40]	; (8015aa8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015a80:	781b      	ldrb	r3, [r3, #0]
 8015a82:	2b01      	cmp	r3, #1
 8015a84:	d10e      	bne.n	8015aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8015a86:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015a8a:	8843      	ldrh	r3, [r0, #2]
 8015a8c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a90:	8044      	strh	r4, [r0, #2]
 8015a92:	18ca      	adds	r2, r1, r3
 8015a94:	4b05      	ldr	r3, [pc, #20]	; (8015aac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015a96:	881b      	ldrh	r3, [r3, #0]
 8015a98:	1a9b      	subs	r3, r3, r2
 8015a9a:	8003      	strh	r3, [r0, #0]
 8015a9c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015aa0:	80c3      	strh	r3, [r0, #6]
 8015aa2:	8081      	strh	r1, [r0, #4]
 8015aa4:	bd10      	pop	{r4, pc}
 8015aa6:	bf00      	nop
 8015aa8:	20012fbc 	.word	0x20012fbc
 8015aac:	20012fb8 	.word	0x20012fb8

08015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015ab0:	4b08      	ldr	r3, [pc, #32]	; (8015ad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8015ab2:	781b      	ldrb	r3, [r3, #0]
 8015ab4:	2b01      	cmp	r3, #1
 8015ab6:	d10c      	bne.n	8015ad2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015ab8:	8803      	ldrh	r3, [r0, #0]
 8015aba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015abe:	8842      	ldrh	r2, [r0, #2]
 8015ac0:	8002      	strh	r2, [r0, #0]
 8015ac2:	185a      	adds	r2, r3, r1
 8015ac4:	4b04      	ldr	r3, [pc, #16]	; (8015ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8015ac6:	881b      	ldrh	r3, [r3, #0]
 8015ac8:	1a9b      	subs	r3, r3, r2
 8015aca:	8043      	strh	r3, [r0, #2]
 8015acc:	88c3      	ldrh	r3, [r0, #6]
 8015ace:	8083      	strh	r3, [r0, #4]
 8015ad0:	80c1      	strh	r1, [r0, #6]
 8015ad2:	4770      	bx	lr
 8015ad4:	20012fbc 	.word	0x20012fbc
 8015ad8:	20012fb8 	.word	0x20012fb8

08015adc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015adc:	b510      	push	{r4, lr}
 8015ade:	4b07      	ldr	r3, [pc, #28]	; (8015afc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015ae0:	781b      	ldrb	r3, [r3, #0]
 8015ae2:	2b01      	cmp	r3, #1
 8015ae4:	d108      	bne.n	8015af8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8015ae6:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015aea:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015aee:	8003      	strh	r3, [r0, #0]
 8015af0:	8893      	ldrh	r3, [r2, #4]
 8015af2:	3b01      	subs	r3, #1
 8015af4:	1b1b      	subs	r3, r3, r4
 8015af6:	800b      	strh	r3, [r1, #0]
 8015af8:	bd10      	pop	{r4, pc}
 8015afa:	bf00      	nop
 8015afc:	20012fbc 	.word	0x20012fbc

08015b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015b00:	4b0b      	ldr	r3, [pc, #44]	; (8015b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8015b02:	781b      	ldrb	r3, [r3, #0]
 8015b04:	2b01      	cmp	r3, #1
 8015b06:	d111      	bne.n	8015b2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015b08:	680b      	ldr	r3, [r1, #0]
 8015b0a:	ed90 7a00 	vldr	s14, [r0]
 8015b0e:	6003      	str	r3, [r0, #0]
 8015b10:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8015b14:	eddf 6a07 	vldr	s13, [pc, #28]	; 8015b34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015b18:	ee07 3a90 	vmov	s15, r3
 8015b1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b20:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015b24:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015b28:	edc1 7a00 	vstr	s15, [r1]
 8015b2c:	4770      	bx	lr
 8015b2e:	bf00      	nop
 8015b30:	20012fbc 	.word	0x20012fbc
 8015b34:	38d1b717 	.word	0x38d1b717

08015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015b38:	b510      	push	{r4, lr}
 8015b3a:	4b0a      	ldr	r3, [pc, #40]	; (8015b64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015b3c:	781b      	ldrb	r3, [r3, #0]
 8015b3e:	2b01      	cmp	r3, #1
 8015b40:	460a      	mov	r2, r1
 8015b42:	d10d      	bne.n	8015b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8015b44:	8881      	ldrh	r1, [r0, #4]
 8015b46:	8803      	ldrh	r3, [r0, #0]
 8015b48:	440b      	add	r3, r1
 8015b4a:	4601      	mov	r1, r0
 8015b4c:	3b01      	subs	r3, #1
 8015b4e:	f821 3b02 	strh.w	r3, [r1], #2
 8015b52:	f7ff ffc3 	bl	8015adc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8015b56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015b5a:	88c2      	ldrh	r2, [r0, #6]
 8015b5c:	8082      	strh	r2, [r0, #4]
 8015b5e:	80c3      	strh	r3, [r0, #6]
 8015b60:	bd10      	pop	{r4, pc}
 8015b62:	bf00      	nop
 8015b64:	20012fbc 	.word	0x20012fbc

08015b68 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015b68:	4b06      	ldr	r3, [pc, #24]	; (8015b84 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015b6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b6e:	4b06      	ldr	r3, [pc, #24]	; (8015b88 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015b70:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8015b74:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015b78:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015b7c:	2100      	movs	r1, #0
 8015b7e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8015b82:	4770      	bx	lr
 8015b84:	20012fb8 	.word	0x20012fb8
 8015b88:	20012fba 	.word	0x20012fba

08015b8c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015b8c:	4b03      	ldr	r3, [pc, #12]	; (8015b9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015b8e:	6818      	ldr	r0, [r3, #0]
 8015b90:	b110      	cbz	r0, 8015b98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8015b92:	6803      	ldr	r3, [r0, #0]
 8015b94:	699b      	ldr	r3, [r3, #24]
 8015b96:	4718      	bx	r3
 8015b98:	4770      	bx	lr
 8015b9a:	bf00      	nop
 8015b9c:	20013008 	.word	0x20013008

08015ba0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015ba0:	4770      	bx	lr
	...

08015ba4 <_ZN8touchgfx11Application4drawEv>:
 8015ba4:	b507      	push	{r0, r1, r2, lr}
 8015ba6:	4b09      	ldr	r3, [pc, #36]	; (8015bcc <_ZN8touchgfx11Application4drawEv+0x28>)
 8015ba8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015bac:	4b08      	ldr	r3, [pc, #32]	; (8015bd0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015bae:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015bb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015bb6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015bba:	6803      	ldr	r3, [r0, #0]
 8015bbc:	2100      	movs	r1, #0
 8015bbe:	9100      	str	r1, [sp, #0]
 8015bc0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015bc2:	4669      	mov	r1, sp
 8015bc4:	4798      	blx	r3
 8015bc6:	b003      	add	sp, #12
 8015bc8:	f85d fb04 	ldr.w	pc, [sp], #4
 8015bcc:	20012fb8 	.word	0x20012fb8
 8015bd0:	20012fba 	.word	0x20012fba

08015bd4 <_ZN8touchgfx11Application10invalidateEv>:
 8015bd4:	4b09      	ldr	r3, [pc, #36]	; (8015bfc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8015bd6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015bda:	4b09      	ldr	r3, [pc, #36]	; (8015c00 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015bdc:	b082      	sub	sp, #8
 8015bde:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015be2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015be6:	2100      	movs	r1, #0
 8015be8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015bec:	9100      	str	r1, [sp, #0]
 8015bee:	6803      	ldr	r3, [r0, #0]
 8015bf0:	aa02      	add	r2, sp, #8
 8015bf2:	e912 0006 	ldmdb	r2, {r1, r2}
 8015bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015bf8:	b002      	add	sp, #8
 8015bfa:	4718      	bx	r3
 8015bfc:	20012fb8 	.word	0x20012fb8
 8015c00:	20012fba 	.word	0x20012fba

08015c04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8015c04:	4b03      	ldr	r3, [pc, #12]	; (8015c14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8015c06:	6818      	ldr	r0, [r3, #0]
 8015c08:	b110      	cbz	r0, 8015c10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015c0a:	6803      	ldr	r3, [r0, #0]
 8015c0c:	69db      	ldr	r3, [r3, #28]
 8015c0e:	4718      	bx	r3
 8015c10:	4770      	bx	lr
 8015c12:	bf00      	nop
 8015c14:	20013008 	.word	0x20013008

08015c18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015c18:	4b03      	ldr	r3, [pc, #12]	; (8015c28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015c1a:	6818      	ldr	r0, [r3, #0]
 8015c1c:	b110      	cbz	r0, 8015c24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015c1e:	6803      	ldr	r3, [r0, #0]
 8015c20:	6a1b      	ldr	r3, [r3, #32]
 8015c22:	4718      	bx	r3
 8015c24:	4770      	bx	lr
 8015c26:	bf00      	nop
 8015c28:	20013008 	.word	0x20013008

08015c2c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015c2c:	2300      	movs	r3, #0
 8015c2e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8015c32:	4770      	bx	lr

08015c34 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8015c34:	4b03      	ldr	r3, [pc, #12]	; (8015c44 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8015c36:	6818      	ldr	r0, [r3, #0]
 8015c38:	b110      	cbz	r0, 8015c40 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015c3a:	6803      	ldr	r3, [r0, #0]
 8015c3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015c3e:	4718      	bx	r3
 8015c40:	4770      	bx	lr
 8015c42:	bf00      	nop
 8015c44:	20013008 	.word	0x20013008

08015c48 <_ZN8touchgfx11ApplicationD1Ev>:
 8015c48:	4770      	bx	lr

08015c4a <_ZN8touchgfx11ApplicationD0Ev>:
 8015c4a:	b510      	push	{r4, lr}
 8015c4c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015c50:	4604      	mov	r4, r0
 8015c52:	f014 f996 	bl	8029f82 <_ZdlPvj>
 8015c56:	4620      	mov	r0, r4
 8015c58:	bd10      	pop	{r4, pc}

08015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015c5a:	b510      	push	{r4, lr}
 8015c5c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015c60:	888a      	ldrh	r2, [r1, #4]
 8015c62:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015c66:	4422      	add	r2, r4
 8015c68:	b212      	sxth	r2, r2
 8015c6a:	4293      	cmp	r3, r2
 8015c6c:	da15      	bge.n	8015c9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015c6e:	8882      	ldrh	r2, [r0, #4]
 8015c70:	4413      	add	r3, r2
 8015c72:	b21b      	sxth	r3, r3
 8015c74:	429c      	cmp	r4, r3
 8015c76:	da10      	bge.n	8015c9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015c78:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015c7c:	88c9      	ldrh	r1, [r1, #6]
 8015c7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015c82:	4419      	add	r1, r3
 8015c84:	b209      	sxth	r1, r1
 8015c86:	428a      	cmp	r2, r1
 8015c88:	da07      	bge.n	8015c9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015c8a:	88c0      	ldrh	r0, [r0, #6]
 8015c8c:	4410      	add	r0, r2
 8015c8e:	b200      	sxth	r0, r0
 8015c90:	4283      	cmp	r3, r0
 8015c92:	bfac      	ite	ge
 8015c94:	2000      	movge	r0, #0
 8015c96:	2001      	movlt	r0, #1
 8015c98:	bd10      	pop	{r4, pc}
 8015c9a:	2000      	movs	r0, #0
 8015c9c:	e7fc      	b.n	8015c98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015c9e <_ZN8touchgfx4Rect10restrictToEss>:
 8015c9e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015ca2:	2b00      	cmp	r3, #0
 8015ca4:	b510      	push	{r4, lr}
 8015ca6:	da04      	bge.n	8015cb2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015ca8:	8884      	ldrh	r4, [r0, #4]
 8015caa:	4423      	add	r3, r4
 8015cac:	8083      	strh	r3, [r0, #4]
 8015cae:	2300      	movs	r3, #0
 8015cb0:	8003      	strh	r3, [r0, #0]
 8015cb2:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015cb6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015cba:	1b09      	subs	r1, r1, r4
 8015cbc:	428b      	cmp	r3, r1
 8015cbe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015cc2:	bfc8      	it	gt
 8015cc4:	8081      	strhgt	r1, [r0, #4]
 8015cc6:	2b00      	cmp	r3, #0
 8015cc8:	da04      	bge.n	8015cd4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015cca:	88c1      	ldrh	r1, [r0, #6]
 8015ccc:	440b      	add	r3, r1
 8015cce:	80c3      	strh	r3, [r0, #6]
 8015cd0:	2300      	movs	r3, #0
 8015cd2:	8043      	strh	r3, [r0, #2]
 8015cd4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015cd8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015cdc:	1a52      	subs	r2, r2, r1
 8015cde:	4293      	cmp	r3, r2
 8015ce0:	bfc8      	it	gt
 8015ce2:	80c2      	strhgt	r2, [r0, #6]
 8015ce4:	bd10      	pop	{r4, pc}
	...

08015ce8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015ce8:	b510      	push	{r4, lr}
 8015cea:	4b10      	ldr	r3, [pc, #64]	; (8015d2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015cec:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015cf0:	4b0f      	ldr	r3, [pc, #60]	; (8015d30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015cf2:	460c      	mov	r4, r1
 8015cf4:	4620      	mov	r0, r4
 8015cf6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015cfa:	f7ff ffd0 	bl	8015c9e <_ZN8touchgfx4Rect10restrictToEss>
 8015cfe:	4b0d      	ldr	r3, [pc, #52]	; (8015d34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015d00:	6818      	ldr	r0, [r3, #0]
 8015d02:	b190      	cbz	r0, 8015d2a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015d04:	6803      	ldr	r3, [r0, #0]
 8015d06:	4621      	mov	r1, r4
 8015d08:	689b      	ldr	r3, [r3, #8]
 8015d0a:	4798      	blx	r3
 8015d0c:	4b0a      	ldr	r3, [pc, #40]	; (8015d38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015d0e:	6818      	ldr	r0, [r3, #0]
 8015d10:	b118      	cbz	r0, 8015d1a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015d12:	6803      	ldr	r3, [r0, #0]
 8015d14:	4621      	mov	r1, r4
 8015d16:	689b      	ldr	r3, [r3, #8]
 8015d18:	4798      	blx	r3
 8015d1a:	4b08      	ldr	r3, [pc, #32]	; (8015d3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015d1c:	6818      	ldr	r0, [r3, #0]
 8015d1e:	6803      	ldr	r3, [r0, #0]
 8015d20:	4621      	mov	r1, r4
 8015d22:	69db      	ldr	r3, [r3, #28]
 8015d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d28:	4718      	bx	r3
 8015d2a:	bd10      	pop	{r4, pc}
 8015d2c:	20012fba 	.word	0x20012fba
 8015d30:	20012fb8 	.word	0x20012fb8
 8015d34:	20013008 	.word	0x20013008
 8015d38:	20013004 	.word	0x20013004
 8015d3c:	20012fc4 	.word	0x20012fc4

08015d40 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d42:	4606      	mov	r6, r0
 8015d44:	4608      	mov	r0, r1
 8015d46:	460f      	mov	r7, r1
 8015d48:	f7fa ff97 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d4c:	b9e8      	cbnz	r0, 8015d8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015d4e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015d52:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015d56:	42a5      	cmp	r5, r4
 8015d58:	db17      	blt.n	8015d8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015d5a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015d5e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015d62:	429a      	cmp	r2, r3
 8015d64:	db11      	blt.n	8015d8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015d66:	88b9      	ldrh	r1, [r7, #4]
 8015d68:	440d      	add	r5, r1
 8015d6a:	88b1      	ldrh	r1, [r6, #4]
 8015d6c:	440c      	add	r4, r1
 8015d6e:	b22d      	sxth	r5, r5
 8015d70:	b224      	sxth	r4, r4
 8015d72:	42a5      	cmp	r5, r4
 8015d74:	dc09      	bgt.n	8015d8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015d76:	88f8      	ldrh	r0, [r7, #6]
 8015d78:	4410      	add	r0, r2
 8015d7a:	88f2      	ldrh	r2, [r6, #6]
 8015d7c:	4413      	add	r3, r2
 8015d7e:	b200      	sxth	r0, r0
 8015d80:	b21b      	sxth	r3, r3
 8015d82:	4298      	cmp	r0, r3
 8015d84:	bfcc      	ite	gt
 8015d86:	2000      	movgt	r0, #0
 8015d88:	2001      	movle	r0, #1
 8015d8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015d8c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d8e:	4604      	mov	r4, r0
 8015d90:	4608      	mov	r0, r1
 8015d92:	460d      	mov	r5, r1
 8015d94:	f7fa ff71 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d98:	b978      	cbnz	r0, 8015dba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015d9a:	4620      	mov	r0, r4
 8015d9c:	f7fa ff6d 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015da0:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015da4:	b150      	cbz	r0, 8015dbc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015da6:	8026      	strh	r6, [r4, #0]
 8015da8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015dac:	8063      	strh	r3, [r4, #2]
 8015dae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015db2:	80a3      	strh	r3, [r4, #4]
 8015db4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015db8:	80e3      	strh	r3, [r4, #6]
 8015dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015dbc:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015dc0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015dc4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015dc8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015dcc:	88ed      	ldrh	r5, [r5, #6]
 8015dce:	42b1      	cmp	r1, r6
 8015dd0:	460f      	mov	r7, r1
 8015dd2:	bfa8      	it	ge
 8015dd4:	4637      	movge	r7, r6
 8015dd6:	4293      	cmp	r3, r2
 8015dd8:	4618      	mov	r0, r3
 8015dda:	4466      	add	r6, ip
 8015ddc:	bfa8      	it	ge
 8015dde:	4610      	movge	r0, r2
 8015de0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015de4:	8027      	strh	r7, [r4, #0]
 8015de6:	442a      	add	r2, r5
 8015de8:	88e5      	ldrh	r5, [r4, #6]
 8015dea:	8060      	strh	r0, [r4, #2]
 8015dec:	4461      	add	r1, ip
 8015dee:	442b      	add	r3, r5
 8015df0:	b236      	sxth	r6, r6
 8015df2:	b209      	sxth	r1, r1
 8015df4:	b212      	sxth	r2, r2
 8015df6:	b21b      	sxth	r3, r3
 8015df8:	428e      	cmp	r6, r1
 8015dfa:	bfac      	ite	ge
 8015dfc:	ebc7 0106 	rsbge	r1, r7, r6
 8015e00:	ebc7 0101 	rsblt	r1, r7, r1
 8015e04:	429a      	cmp	r2, r3
 8015e06:	bfac      	ite	ge
 8015e08:	ebc0 0202 	rsbge	r2, r0, r2
 8015e0c:	ebc0 0203 	rsblt	r2, r0, r3
 8015e10:	80a1      	strh	r1, [r4, #4]
 8015e12:	80e2      	strh	r2, [r4, #6]
 8015e14:	e7d1      	b.n	8015dba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015e18 <_ZN8touchgfx11Application11getInstanceEv>:
 8015e18:	4b01      	ldr	r3, [pc, #4]	; (8015e20 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015e1a:	6818      	ldr	r0, [r3, #0]
 8015e1c:	4770      	bx	lr
 8015e1e:	bf00      	nop
 8015e20:	20013018 	.word	0x20013018

08015e24 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015e24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e26:	4b10      	ldr	r3, [pc, #64]	; (8015e68 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015e28:	781b      	ldrb	r3, [r3, #0]
 8015e2a:	4605      	mov	r5, r0
 8015e2c:	b1d3      	cbz	r3, 8015e64 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015e2e:	4b0f      	ldr	r3, [pc, #60]	; (8015e6c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015e30:	4f0f      	ldr	r7, [pc, #60]	; (8015e70 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015e32:	881c      	ldrh	r4, [r3, #0]
 8015e34:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015e38:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015e3c:	42a3      	cmp	r3, r4
 8015e3e:	d90e      	bls.n	8015e5e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015e40:	683b      	ldr	r3, [r7, #0]
 8015e42:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015e46:	b10a      	cbz	r2, 8015e4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015e48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015e4a:	b900      	cbnz	r0, 8015e4e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015e4c:	6898      	ldr	r0, [r3, #8]
 8015e4e:	6803      	ldr	r3, [r0, #0]
 8015e50:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015e54:	69db      	ldr	r3, [r3, #28]
 8015e56:	3401      	adds	r4, #1
 8015e58:	4798      	blx	r3
 8015e5a:	b2a4      	uxth	r4, r4
 8015e5c:	e7ec      	b.n	8015e38 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015e5e:	2300      	movs	r3, #0
 8015e60:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015e64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015e66:	bf00      	nop
 8015e68:	20012fc2 	.word	0x20012fc2
 8015e6c:	20000088 	.word	0x20000088
 8015e70:	20012fc4 	.word	0x20012fc4

08015e74 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015e74:	b510      	push	{r4, lr}
 8015e76:	2300      	movs	r3, #0
 8015e78:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015e7c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015e80:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015e84:	4604      	mov	r4, r0
 8015e86:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015e8a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015e8e:	429a      	cmp	r2, r3
 8015e90:	d90e      	bls.n	8015eb0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015e92:	18e2      	adds	r2, r4, r3
 8015e94:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015e98:	b122      	cbz	r2, 8015ea4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015e9a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015e9e:	6803      	ldr	r3, [r0, #0]
 8015ea0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ea2:	4798      	blx	r3
 8015ea4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015ea8:	3301      	adds	r3, #1
 8015eaa:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015eae:	e7ea      	b.n	8015e86 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015eb0:	bd10      	pop	{r4, pc}

08015eb2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015eb2:	b530      	push	{r4, r5, lr}
 8015eb4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015eb8:	2200      	movs	r2, #0
 8015eba:	b293      	uxth	r3, r2
 8015ebc:	429d      	cmp	r5, r3
 8015ebe:	d90e      	bls.n	8015ede <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015ec0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015ec4:	428b      	cmp	r3, r1
 8015ec6:	d10b      	bne.n	8015ee0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015ec8:	1884      	adds	r4, r0, r2
 8015eca:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015ece:	b13b      	cbz	r3, 8015ee0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015ed0:	3b01      	subs	r3, #1
 8015ed2:	b2db      	uxtb	r3, r3
 8015ed4:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015ed8:	b90b      	cbnz	r3, 8015ede <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015eda:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015ede:	bd30      	pop	{r4, r5, pc}
 8015ee0:	3201      	adds	r2, #1
 8015ee2:	e7ea      	b.n	8015eba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015ee4:	2300      	movs	r3, #0
 8015ee6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015eea:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015eee:	30a4      	adds	r0, #164	; 0xa4
 8015ef0:	f802 3b01 	strb.w	r3, [r2], #1
 8015ef4:	4282      	cmp	r2, r0
 8015ef6:	d1fb      	bne.n	8015ef0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015ef8:	4770      	bx	lr
	...

08015efc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015efc:	b570      	push	{r4, r5, r6, lr}
 8015efe:	4c0b      	ldr	r4, [pc, #44]	; (8015f2c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015f00:	4605      	mov	r5, r0
 8015f02:	6820      	ldr	r0, [r4, #0]
 8015f04:	460e      	mov	r6, r1
 8015f06:	b110      	cbz	r0, 8015f0e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015f08:	6803      	ldr	r3, [r0, #0]
 8015f0a:	695b      	ldr	r3, [r3, #20]
 8015f0c:	4798      	blx	r3
 8015f0e:	1d28      	adds	r0, r5, #4
 8015f10:	f7ff ffe8 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015f14:	6026      	str	r6, [r4, #0]
 8015f16:	6833      	ldr	r3, [r6, #0]
 8015f18:	4630      	mov	r0, r6
 8015f1a:	68db      	ldr	r3, [r3, #12]
 8015f1c:	4798      	blx	r3
 8015f1e:	682b      	ldr	r3, [r5, #0]
 8015f20:	4628      	mov	r0, r5
 8015f22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015f28:	4718      	bx	r3
 8015f2a:	bf00      	nop
 8015f2c:	20013008 	.word	0x20013008

08015f30 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015f30:	2300      	movs	r3, #0
 8015f32:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015f36:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015f3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f3c:	461a      	mov	r2, r3
 8015f3e:	461c      	mov	r4, r3
 8015f40:	461d      	mov	r5, r3
 8015f42:	459c      	cmp	ip, r3
 8015f44:	dd1a      	ble.n	8015f7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015f46:	18c6      	adds	r6, r0, r3
 8015f48:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015f4c:	b16e      	cbz	r6, 8015f6a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015f4e:	429a      	cmp	r2, r3
 8015f50:	d008      	beq.n	8015f64 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015f52:	fa1f fe82 	uxth.w	lr, r2
 8015f56:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015f5a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015f5e:	1887      	adds	r7, r0, r2
 8015f60:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015f64:	3201      	adds	r2, #1
 8015f66:	3301      	adds	r3, #1
 8015f68:	e7eb      	b.n	8015f42 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015f6a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015f6e:	4299      	cmp	r1, r3
 8015f70:	bfa8      	it	ge
 8015f72:	3501      	addge	r5, #1
 8015f74:	429e      	cmp	r6, r3
 8015f76:	bfc8      	it	gt
 8015f78:	3401      	addgt	r4, #1
 8015f7a:	e7f4      	b.n	8015f66 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015f7c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015f80:	1b49      	subs	r1, r1, r5
 8015f82:	1b1b      	subs	r3, r3, r4
 8015f84:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015f88:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015f8c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015f90:	4293      	cmp	r3, r2
 8015f92:	dd03      	ble.n	8015f9c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015f94:	3b01      	subs	r3, #1
 8015f96:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015f9a:	e7f7      	b.n	8015f8c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015fa0 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015fa0:	b570      	push	{r4, r5, r6, lr}
 8015fa2:	4d16      	ldr	r5, [pc, #88]	; (8015ffc <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015fa4:	4604      	mov	r4, r0
 8015fa6:	6828      	ldr	r0, [r5, #0]
 8015fa8:	b140      	cbz	r0, 8015fbc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015faa:	7a03      	ldrb	r3, [r0, #8]
 8015fac:	b933      	cbnz	r3, 8015fbc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015fae:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015fb2:	6803      	ldr	r3, [r0, #0]
 8015fb4:	689b      	ldr	r3, [r3, #8]
 8015fb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fba:	4718      	bx	r3
 8015fbc:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015fc0:	4e0f      	ldr	r6, [pc, #60]	; (8016000 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015fc2:	b973      	cbnz	r3, 8015fe2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015fc4:	b168      	cbz	r0, 8015fe2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015fc6:	7a03      	ldrb	r3, [r0, #8]
 8015fc8:	b15b      	cbz	r3, 8015fe2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015fca:	6830      	ldr	r0, [r6, #0]
 8015fcc:	b110      	cbz	r0, 8015fd4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015fce:	6803      	ldr	r3, [r0, #0]
 8015fd0:	691b      	ldr	r3, [r3, #16]
 8015fd2:	4798      	blx	r3
 8015fd4:	6828      	ldr	r0, [r5, #0]
 8015fd6:	6803      	ldr	r3, [r0, #0]
 8015fd8:	68db      	ldr	r3, [r3, #12]
 8015fda:	4798      	blx	r3
 8015fdc:	2301      	movs	r3, #1
 8015fde:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015fe2:	3404      	adds	r4, #4
 8015fe4:	4620      	mov	r0, r4
 8015fe6:	f7ff ff45 	bl	8015e74 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015fea:	4620      	mov	r0, r4
 8015fec:	f7ff ffa0 	bl	8015f30 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015ff0:	6830      	ldr	r0, [r6, #0]
 8015ff2:	b110      	cbz	r0, 8015ffa <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015ff4:	6803      	ldr	r3, [r0, #0]
 8015ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015ff8:	e7dd      	b.n	8015fb6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015ffa:	bd70      	pop	{r4, r5, r6, pc}
 8015ffc:	2001300c 	.word	0x2001300c
 8016000:	20013008 	.word	0x20013008

08016004 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016006:	2300      	movs	r3, #0
 8016008:	4604      	mov	r4, r0
 801600a:	460d      	mov	r5, r1
 801600c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016010:	4618      	mov	r0, r3
 8016012:	b29a      	uxth	r2, r3
 8016014:	4291      	cmp	r1, r2
 8016016:	d911      	bls.n	801603c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016018:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801601c:	18e6      	adds	r6, r4, r3
 801601e:	42af      	cmp	r7, r5
 8016020:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016024:	d105      	bne.n	8016032 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016026:	2aff      	cmp	r2, #255	; 0xff
 8016028:	d002      	beq.n	8016030 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801602a:	3201      	adds	r2, #1
 801602c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016030:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016032:	2a00      	cmp	r2, #0
 8016034:	bf08      	it	eq
 8016036:	2001      	moveq	r0, #1
 8016038:	3301      	adds	r3, #1
 801603a:	e7ea      	b.n	8016012 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 801603c:	b120      	cbz	r0, 8016048 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801603e:	2920      	cmp	r1, #32
 8016040:	d102      	bne.n	8016048 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016042:	4620      	mov	r0, r4
 8016044:	f7ff ff74 	bl	8015f30 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016048:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 801604c:	2b1f      	cmp	r3, #31
 801604e:	d8ef      	bhi.n	8016030 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016050:	18e2      	adds	r2, r4, r3
 8016052:	2101      	movs	r1, #1
 8016054:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016058:	185a      	adds	r2, r3, r1
 801605a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 801605e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016062:	e7e5      	b.n	8016030 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016064 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016064:	4603      	mov	r3, r0
 8016066:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801606a:	2200      	movs	r2, #0
 801606c:	801a      	strh	r2, [r3, #0]
 801606e:	805a      	strh	r2, [r3, #2]
 8016070:	809a      	strh	r2, [r3, #4]
 8016072:	80da      	strh	r2, [r3, #6]
 8016074:	3308      	adds	r3, #8
 8016076:	428b      	cmp	r3, r1
 8016078:	d1f8      	bne.n	801606c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801607a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801607e:	4770      	bx	lr

08016080 <_ZN8touchgfx11ApplicationC1Ev>:
 8016080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016082:	4606      	mov	r6, r0
 8016084:	4b1c      	ldr	r3, [pc, #112]	; (80160f8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016086:	f846 3b04 	str.w	r3, [r6], #4
 801608a:	4604      	mov	r4, r0
 801608c:	2500      	movs	r5, #0
 801608e:	22a8      	movs	r2, #168	; 0xa8
 8016090:	2100      	movs	r1, #0
 8016092:	4630      	mov	r0, r6
 8016094:	f014 ff8d 	bl	802afb2 <memset>
 8016098:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801609c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80160a0:	f7ff ffe0 	bl	8016064 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80160a4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80160a8:	f7ff ffdc 	bl	8016064 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80160ac:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80160b0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80160b4:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80160b8:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80160bc:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80160c0:	490e      	ldr	r1, [pc, #56]	; (80160fc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80160c2:	480f      	ldr	r0, [pc, #60]	; (8016100 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80160c4:	4f0f      	ldr	r7, [pc, #60]	; (8016104 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80160c6:	f010 fe27 	bl	8026d18 <CRC_Lock>
 80160ca:	4b0f      	ldr	r3, [pc, #60]	; (8016108 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80160cc:	b158      	cbz	r0, 80160e6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80160ce:	801d      	strh	r5, [r3, #0]
 80160d0:	4a0e      	ldr	r2, [pc, #56]	; (801610c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80160d2:	2300      	movs	r3, #0
 80160d4:	6013      	str	r3, [r2, #0]
 80160d6:	4a0e      	ldr	r2, [pc, #56]	; (8016110 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80160d8:	603b      	str	r3, [r7, #0]
 80160da:	4630      	mov	r0, r6
 80160dc:	6013      	str	r3, [r2, #0]
 80160de:	f7ff ff01 	bl	8015ee4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80160e2:	4620      	mov	r0, r4
 80160e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80160e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80160ea:	2002      	movs	r0, #2
 80160ec:	801a      	strh	r2, [r3, #0]
 80160ee:	6038      	str	r0, [r7, #0]
 80160f0:	f001 fb4a 	bl	8017788 <_ZN8touchgfx6Screen4drawEv>
 80160f4:	e7ec      	b.n	80160d0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80160f6:	bf00      	nop
 80160f8:	0802f78c 	.word	0x0802f78c
 80160fc:	b5e8b5cd 	.word	0xb5e8b5cd
 8016100:	f407a5c2 	.word	0xf407a5c2
 8016104:	20013008 	.word	0x20013008
 8016108:	20000088 	.word	0x20000088
 801610c:	20013018 	.word	0x20013018
 8016110:	2001300c 	.word	0x2001300c

08016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016114:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016118:	3b01      	subs	r3, #1
 801611a:	b29b      	uxth	r3, r3
 801611c:	428b      	cmp	r3, r1
 801611e:	b510      	push	{r4, lr}
 8016120:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016124:	d908      	bls.n	8016138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016126:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801612a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801612e:	681a      	ldr	r2, [r3, #0]
 8016130:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016134:	685a      	ldr	r2, [r3, #4]
 8016136:	6062      	str	r2, [r4, #4]
 8016138:	bd10      	pop	{r4, pc}
	...

0801613c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801613c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016140:	4b8f      	ldr	r3, [pc, #572]	; (8016380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016142:	b08f      	sub	sp, #60	; 0x3c
 8016144:	ac0a      	add	r4, sp, #40	; 0x28
 8016146:	e884 0006 	stmia.w	r4, {r1, r2}
 801614a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801614e:	4b8d      	ldr	r3, [pc, #564]	; (8016384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016150:	4683      	mov	fp, r0
 8016152:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016156:	4620      	mov	r0, r4
 8016158:	f7ff fda1 	bl	8015c9e <_ZN8touchgfx4Rect10restrictToEss>
 801615c:	4620      	mov	r0, r4
 801615e:	f7fa fd8c 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016162:	2800      	cmp	r0, #0
 8016164:	d16a      	bne.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016166:	9403      	str	r4, [sp, #12]
 8016168:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801616c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016170:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016174:	35a4      	adds	r5, #164	; 0xa4
 8016176:	9301      	str	r3, [sp, #4]
 8016178:	b15c      	cbz	r4, 8016192 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801617a:	4629      	mov	r1, r5
 801617c:	9803      	ldr	r0, [sp, #12]
 801617e:	f7ff fddf 	bl	8015d40 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016182:	3c01      	subs	r4, #1
 8016184:	b118      	cbz	r0, 801618e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8016186:	b2a1      	uxth	r1, r4
 8016188:	9801      	ldr	r0, [sp, #4]
 801618a:	f7ff ffc3 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801618e:	3d08      	subs	r5, #8
 8016190:	e7f2      	b.n	8016178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8016192:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8016196:	f8cd a010 	str.w	sl, [sp, #16]
 801619a:	f10a 33ff 	add.w	r3, sl, #4294967295
 801619e:	9302      	str	r3, [sp, #8]
 80161a0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80161a4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80161a8:	9306      	str	r3, [sp, #24]
 80161aa:	445c      	add	r4, fp
 80161ac:	2500      	movs	r5, #0
 80161ae:	4626      	mov	r6, r4
 80161b0:	f8cd a014 	str.w	sl, [sp, #20]
 80161b4:	462f      	mov	r7, r5
 80161b6:	9b05      	ldr	r3, [sp, #20]
 80161b8:	2b00      	cmp	r3, #0
 80161ba:	d073      	beq.n	80162a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80161bc:	9903      	ldr	r1, [sp, #12]
 80161be:	4630      	mov	r0, r6
 80161c0:	f7ff fd4b 	bl	8015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80161c4:	b350      	cbz	r0, 801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80161c6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80161ca:	f9b6 c000 	ldrsh.w	ip, [r6]
 80161ce:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80161d2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80161d6:	45e6      	cmp	lr, ip
 80161d8:	db33      	blt.n	8016242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80161da:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80161de:	88b3      	ldrh	r3, [r6, #4]
 80161e0:	4472      	add	r2, lr
 80161e2:	4463      	add	r3, ip
 80161e4:	b212      	sxth	r2, r2
 80161e6:	b21b      	sxth	r3, r3
 80161e8:	429a      	cmp	r2, r3
 80161ea:	dc2a      	bgt.n	8016242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80161ec:	88f3      	ldrh	r3, [r6, #6]
 80161ee:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80161f2:	fa1f f289 	uxth.w	r2, r9
 80161f6:	4413      	add	r3, r2
 80161f8:	b29b      	uxth	r3, r3
 80161fa:	45c8      	cmp	r8, r9
 80161fc:	fa1f fc88 	uxth.w	ip, r8
 8016200:	fa0f fe83 	sxth.w	lr, r3
 8016204:	db0f      	blt.n	8016226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016206:	eba3 030c 	sub.w	r3, r3, ip
 801620a:	1ac9      	subs	r1, r1, r3
 801620c:	b209      	sxth	r1, r1
 801620e:	2900      	cmp	r1, #0
 8016210:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016214:	dd12      	ble.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016216:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801621a:	4605      	mov	r5, r0
 801621c:	9b05      	ldr	r3, [sp, #20]
 801621e:	3b01      	subs	r3, #1
 8016220:	9305      	str	r3, [sp, #20]
 8016222:	3e08      	subs	r6, #8
 8016224:	e7c7      	b.n	80161b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016226:	4461      	add	r1, ip
 8016228:	b209      	sxth	r1, r1
 801622a:	4571      	cmp	r1, lr
 801622c:	dc38      	bgt.n	80162a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801622e:	eba2 020c 	sub.w	r2, r2, ip
 8016232:	b212      	sxth	r2, r2
 8016234:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016238:	2a00      	cmp	r2, #0
 801623a:	dcee      	bgt.n	801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801623c:	b00f      	add	sp, #60	; 0x3c
 801623e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016242:	45c8      	cmp	r8, r9
 8016244:	db2c      	blt.n	80162a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016246:	88f3      	ldrh	r3, [r6, #6]
 8016248:	4499      	add	r9, r3
 801624a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801624e:	4498      	add	r8, r3
 8016250:	fa0f f989 	sxth.w	r9, r9
 8016254:	fa0f f888 	sxth.w	r8, r8
 8016258:	45c1      	cmp	r9, r8
 801625a:	db21      	blt.n	80162a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801625c:	88b3      	ldrh	r3, [r6, #4]
 801625e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016262:	fa1f f28c 	uxth.w	r2, ip
 8016266:	4413      	add	r3, r2
 8016268:	b29b      	uxth	r3, r3
 801626a:	45e6      	cmp	lr, ip
 801626c:	fa1f f88e 	uxth.w	r8, lr
 8016270:	fa0f f983 	sxth.w	r9, r3
 8016274:	db0a      	blt.n	801628c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016276:	eba3 0308 	sub.w	r3, r3, r8
 801627a:	1ac9      	subs	r1, r1, r3
 801627c:	b209      	sxth	r1, r1
 801627e:	2900      	cmp	r1, #0
 8016280:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016284:	ddda      	ble.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016286:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801628a:	e7c6      	b.n	801621a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801628c:	4441      	add	r1, r8
 801628e:	b209      	sxth	r1, r1
 8016290:	4549      	cmp	r1, r9
 8016292:	dc05      	bgt.n	80162a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016294:	eba2 0208 	sub.w	r2, r2, r8
 8016298:	b212      	sxth	r2, r2
 801629a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801629e:	e7cb      	b.n	8016238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80162a0:	4607      	mov	r7, r0
 80162a2:	e7bb      	b.n	801621c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80162a4:	2d00      	cmp	r5, #0
 80162a6:	d181      	bne.n	80161ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80162a8:	2f00      	cmp	r7, #0
 80162aa:	f000 81dd 	beq.w	8016668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80162ae:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80162b2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80162b6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80162ba:	b2b3      	uxth	r3, r6
 80162bc:	9305      	str	r3, [sp, #20]
 80162be:	9a05      	ldr	r2, [sp, #20]
 80162c0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80162c4:	4413      	add	r3, r2
 80162c6:	b2ba      	uxth	r2, r7
 80162c8:	4492      	add	sl, r2
 80162ca:	b29b      	uxth	r3, r3
 80162cc:	fa1f fa8a 	uxth.w	sl, sl
 80162d0:	fa0f f883 	sxth.w	r8, r3
 80162d4:	fa0f f98a 	sxth.w	r9, sl
 80162d8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80162dc:	9b04      	ldr	r3, [sp, #16]
 80162de:	2b00      	cmp	r3, #0
 80162e0:	d052      	beq.n	8016388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80162e2:	9903      	ldr	r1, [sp, #12]
 80162e4:	4620      	mov	r0, r4
 80162e6:	f7ff fcb8 	bl	8015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80162ea:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80162ee:	b1c0      	cbz	r0, 8016322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80162f0:	f9b4 e000 	ldrsh.w	lr, [r4]
 80162f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80162f8:	4576      	cmp	r6, lr
 80162fa:	dc22      	bgt.n	8016342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80162fc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016300:	44f4      	add	ip, lr
 8016302:	fa0f fc8c 	sxth.w	ip, ip
 8016306:	45e0      	cmp	r8, ip
 8016308:	db1b      	blt.n	8016342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801630a:	428f      	cmp	r7, r1
 801630c:	fa1f fc81 	uxth.w	ip, r1
 8016310:	88e1      	ldrh	r1, [r4, #6]
 8016312:	dc0d      	bgt.n	8016330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016314:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016318:	eba1 010c 	sub.w	r1, r1, ip
 801631c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016320:	80e1      	strh	r1, [r4, #6]
 8016322:	4628      	mov	r0, r5
 8016324:	9904      	ldr	r1, [sp, #16]
 8016326:	3901      	subs	r1, #1
 8016328:	9104      	str	r1, [sp, #16]
 801632a:	3c08      	subs	r4, #8
 801632c:	4605      	mov	r5, r0
 801632e:	e7d3      	b.n	80162d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016330:	4461      	add	r1, ip
 8016332:	b209      	sxth	r1, r1
 8016334:	4549      	cmp	r1, r9
 8016336:	dcf5      	bgt.n	8016324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016338:	eba2 0c0c 	sub.w	ip, r2, ip
 801633c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016340:	e7ef      	b.n	8016322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016342:	428f      	cmp	r7, r1
 8016344:	dcee      	bgt.n	8016324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016346:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801634a:	4461      	add	r1, ip
 801634c:	b209      	sxth	r1, r1
 801634e:	4589      	cmp	r9, r1
 8016350:	dbe8      	blt.n	8016324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016352:	4576      	cmp	r6, lr
 8016354:	fa1f fc8e 	uxth.w	ip, lr
 8016358:	88a1      	ldrh	r1, [r4, #4]
 801635a:	dc07      	bgt.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801635c:	eba3 0c0c 	sub.w	ip, r3, ip
 8016360:	eba1 010c 	sub.w	r1, r1, ip
 8016364:	f8a4 8000 	strh.w	r8, [r4]
 8016368:	80a1      	strh	r1, [r4, #4]
 801636a:	e7da      	b.n	8016322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801636c:	4461      	add	r1, ip
 801636e:	b209      	sxth	r1, r1
 8016370:	4588      	cmp	r8, r1
 8016372:	dbd7      	blt.n	8016324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016374:	9905      	ldr	r1, [sp, #20]
 8016376:	eba1 0c0c 	sub.w	ip, r1, ip
 801637a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801637e:	e7d0      	b.n	8016322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016380:	20012fba 	.word	0x20012fba
 8016384:	20012fb8 	.word	0x20012fb8
 8016388:	2d00      	cmp	r5, #0
 801638a:	f000 816d 	beq.w	8016668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801638e:	9b06      	ldr	r3, [sp, #24]
 8016390:	445b      	add	r3, fp
 8016392:	461c      	mov	r4, r3
 8016394:	9b02      	ldr	r3, [sp, #8]
 8016396:	3301      	adds	r3, #1
 8016398:	f000 8166 	beq.w	8016668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801639c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80163a0:	4629      	mov	r1, r5
 80163a2:	9803      	ldr	r0, [sp, #12]
 80163a4:	f7ff fccc 	bl	8015d40 <_ZNK8touchgfx4Rect8includesERKS0_>
 80163a8:	b120      	cbz	r0, 80163b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80163aa:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80163ae:	9801      	ldr	r0, [sp, #4]
 80163b0:	f7ff feb0 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80163b4:	9903      	ldr	r1, [sp, #12]
 80163b6:	4628      	mov	r0, r5
 80163b8:	f7ff fc4f 	bl	8015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80163bc:	2800      	cmp	r0, #0
 80163be:	f000 809c 	beq.w	80164fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80163c2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80163c6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80163ca:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80163ce:	9309      	str	r3, [sp, #36]	; 0x24
 80163d0:	fa1f f189 	uxth.w	r1, r9
 80163d4:	eb01 0c03 	add.w	ip, r1, r3
 80163d8:	fa1f fa8c 	uxth.w	sl, ip
 80163dc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80163e0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80163e4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80163e8:	b283      	uxth	r3, r0
 80163ea:	eb03 050c 	add.w	r5, r3, ip
 80163ee:	b2ad      	uxth	r5, r5
 80163f0:	9505      	str	r5, [sp, #20]
 80163f2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80163f6:	9504      	str	r5, [sp, #16]
 80163f8:	4548      	cmp	r0, r9
 80163fa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80163fe:	f340 8099 	ble.w	8016534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016402:	1a5b      	subs	r3, r3, r1
 8016404:	b29b      	uxth	r3, r3
 8016406:	4596      	cmp	lr, r2
 8016408:	fa0f f08a 	sxth.w	r0, sl
 801640c:	b21e      	sxth	r6, r3
 801640e:	dd2e      	ble.n	801646e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016410:	9f02      	ldr	r7, [sp, #8]
 8016412:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016416:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801641a:	9f04      	ldr	r7, [sp, #16]
 801641c:	1a3f      	subs	r7, r7, r0
 801641e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016422:	fa1f fe8e 	uxth.w	lr, lr
 8016426:	b292      	uxth	r2, r2
 8016428:	ebae 0102 	sub.w	r1, lr, r2
 801642c:	44a6      	add	lr, r4
 801642e:	4402      	add	r2, r0
 8016430:	b289      	uxth	r1, r1
 8016432:	fa0f fe8e 	sxth.w	lr, lr
 8016436:	b212      	sxth	r2, r2
 8016438:	b20d      	sxth	r5, r1
 801643a:	ebae 0202 	sub.w	r2, lr, r2
 801643e:	436f      	muls	r7, r5
 8016440:	4372      	muls	r2, r6
 8016442:	4297      	cmp	r7, r2
 8016444:	db09      	blt.n	801645a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016446:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 801644a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801644e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016452:	449c      	add	ip, r3
 8016454:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016458:	e686      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801645a:	4421      	add	r1, r4
 801645c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016460:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016464:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016468:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801646c:	e67c      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801646e:	9f04      	ldr	r7, [sp, #16]
 8016470:	42b8      	cmp	r0, r7
 8016472:	da27      	bge.n	80164c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016474:	9902      	ldr	r1, [sp, #8]
 8016476:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801647a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801647e:	eb05 010e 	add.w	r1, r5, lr
 8016482:	fa1f f881 	uxth.w	r8, r1
 8016486:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801648a:	4411      	add	r1, r2
 801648c:	eba1 0108 	sub.w	r1, r1, r8
 8016490:	b289      	uxth	r1, r1
 8016492:	fa0f f988 	sxth.w	r9, r8
 8016496:	eba2 020e 	sub.w	r2, r2, lr
 801649a:	fa0f f881 	sxth.w	r8, r1
 801649e:	1a3f      	subs	r7, r7, r0
 80164a0:	4372      	muls	r2, r6
 80164a2:	fb08 f707 	mul.w	r7, r8, r7
 80164a6:	42ba      	cmp	r2, r7
 80164a8:	dc06      	bgt.n	80164b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80164aa:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80164ae:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80164b2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80164b6:	e7ca      	b.n	801644e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80164b8:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80164bc:	4429      	add	r1, r5
 80164be:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80164c2:	e651      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80164c4:	9805      	ldr	r0, [sp, #20]
 80164c6:	ebaa 0000 	sub.w	r0, sl, r0
 80164ca:	b280      	uxth	r0, r0
 80164cc:	2d06      	cmp	r5, #6
 80164ce:	fa0f fe80 	sxth.w	lr, r0
 80164d2:	d817      	bhi.n	8016504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80164d4:	9b04      	ldr	r3, [sp, #16]
 80164d6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80164da:	1c6b      	adds	r3, r5, #1
 80164dc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80164e0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80164e4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80164e8:	9b01      	ldr	r3, [sp, #4]
 80164ea:	9801      	ldr	r0, [sp, #4]
 80164ec:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80164f0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80164f4:	805a      	strh	r2, [r3, #2]
 80164f6:	809e      	strh	r6, [r3, #4]
 80164f8:	80d9      	strh	r1, [r3, #6]
 80164fa:	9b02      	ldr	r3, [sp, #8]
 80164fc:	3b01      	subs	r3, #1
 80164fe:	9302      	str	r3, [sp, #8]
 8016500:	3c08      	subs	r4, #8
 8016502:	e747      	b.n	8016394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016504:	9a02      	ldr	r2, [sp, #8]
 8016506:	45b6      	cmp	lr, r6
 8016508:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801650c:	db0d      	blt.n	801652a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801650e:	449c      	add	ip, r3
 8016510:	fa1f fc8c 	uxth.w	ip, ip
 8016514:	445a      	add	r2, fp
 8016516:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801651a:	448c      	add	ip, r1
 801651c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016520:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016524:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016528:	e61e      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801652a:	445a      	add	r2, fp
 801652c:	4484      	add	ip, r0
 801652e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016532:	e78f      	b.n	8016454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016534:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016538:	fa1f f18e 	uxth.w	r1, lr
 801653c:	eb01 0806 	add.w	r8, r1, r6
 8016540:	b293      	uxth	r3, r2
 8016542:	fa1f f888 	uxth.w	r8, r8
 8016546:	9306      	str	r3, [sp, #24]
 8016548:	fa0f f388 	sxth.w	r3, r8
 801654c:	9307      	str	r3, [sp, #28]
 801654e:	9f06      	ldr	r7, [sp, #24]
 8016550:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016554:	443b      	add	r3, r7
 8016556:	b29b      	uxth	r3, r3
 8016558:	4596      	cmp	lr, r2
 801655a:	9308      	str	r3, [sp, #32]
 801655c:	da24      	bge.n	80165a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801655e:	9905      	ldr	r1, [sp, #20]
 8016560:	eba3 0308 	sub.w	r3, r3, r8
 8016564:	ebaa 0401 	sub.w	r4, sl, r1
 8016568:	b2a4      	uxth	r4, r4
 801656a:	b29b      	uxth	r3, r3
 801656c:	b225      	sxth	r5, r4
 801656e:	b219      	sxth	r1, r3
 8016570:	eba2 020e 	sub.w	r2, r2, lr
 8016574:	eba9 0000 	sub.w	r0, r9, r0
 8016578:	436a      	muls	r2, r5
 801657a:	4348      	muls	r0, r1
 801657c:	4282      	cmp	r2, r0
 801657e:	9a02      	ldr	r2, [sp, #8]
 8016580:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016584:	445a      	add	r2, fp
 8016586:	dc06      	bgt.n	8016596 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016588:	9b07      	ldr	r3, [sp, #28]
 801658a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801658e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016592:	44a4      	add	ip, r4
 8016594:	e75e      	b.n	8016454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016596:	9904      	ldr	r1, [sp, #16]
 8016598:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801659c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80165a0:	4433      	add	r3, r6
 80165a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80165a6:	e5df      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80165a8:	9f06      	ldr	r7, [sp, #24]
 80165aa:	9b04      	ldr	r3, [sp, #16]
 80165ac:	1bc9      	subs	r1, r1, r7
 80165ae:	fa0f f78a 	sxth.w	r7, sl
 80165b2:	b289      	uxth	r1, r1
 80165b4:	429f      	cmp	r7, r3
 80165b6:	fa0f fe81 	sxth.w	lr, r1
 80165ba:	dd23      	ble.n	8016604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80165bc:	9a05      	ldr	r2, [sp, #20]
 80165be:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80165c2:	9d07      	ldr	r5, [sp, #28]
 80165c4:	ebaa 0202 	sub.w	r2, sl, r2
 80165c8:	b292      	uxth	r2, r2
 80165ca:	eba5 0a03 	sub.w	sl, r5, r3
 80165ce:	b214      	sxth	r4, r2
 80165d0:	eba9 0000 	sub.w	r0, r9, r0
 80165d4:	9b02      	ldr	r3, [sp, #8]
 80165d6:	fb0e f000 	mul.w	r0, lr, r0
 80165da:	fb04 fa0a 	mul.w	sl, r4, sl
 80165de:	00db      	lsls	r3, r3, #3
 80165e0:	4550      	cmp	r0, sl
 80165e2:	445b      	add	r3, fp
 80165e4:	db03      	blt.n	80165ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80165e6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80165ea:	4494      	add	ip, r2
 80165ec:	e732      	b.n	8016454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80165ee:	9a04      	ldr	r2, [sp, #16]
 80165f0:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80165f4:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80165f8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80165fc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016600:	4431      	add	r1, r6
 8016602:	e75c      	b.n	80164be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016604:	9b08      	ldr	r3, [sp, #32]
 8016606:	eba3 0308 	sub.w	r3, r3, r8
 801660a:	b29b      	uxth	r3, r3
 801660c:	2d06      	cmp	r5, #6
 801660e:	b218      	sxth	r0, r3
 8016610:	d813      	bhi.n	801663a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016612:	9b07      	ldr	r3, [sp, #28]
 8016614:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016618:	1c6b      	adds	r3, r5, #1
 801661a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801661e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016622:	9b01      	ldr	r3, [sp, #4]
 8016624:	9901      	ldr	r1, [sp, #4]
 8016626:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801662a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801662e:	805a      	strh	r2, [r3, #2]
 8016630:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016632:	809a      	strh	r2, [r3, #4]
 8016634:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016638:	e75f      	b.n	80164fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801663a:	9c02      	ldr	r4, [sp, #8]
 801663c:	4570      	cmp	r0, lr
 801663e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016642:	db0d      	blt.n	8016660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016644:	4431      	add	r1, r6
 8016646:	9b06      	ldr	r3, [sp, #24]
 8016648:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801664c:	b289      	uxth	r1, r1
 801664e:	445c      	add	r4, fp
 8016650:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016654:	4419      	add	r1, r3
 8016656:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 801665a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801665e:	e583      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016660:	445c      	add	r4, fp
 8016662:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8016666:	e79b      	b.n	80165a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016668:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801666c:	1e65      	subs	r5, r4, #1
 801666e:	b2ad      	uxth	r5, r5
 8016670:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016674:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016678:	42b5      	cmp	r5, r6
 801667a:	d044      	beq.n	8016706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801667c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016680:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8016684:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016688:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 801668c:	4282      	cmp	r2, r0
 801668e:	d11f      	bne.n	80166d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016690:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8016694:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016698:	459c      	cmp	ip, r3
 801669a:	d119      	bne.n	80166d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801669c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80166a0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80166a4:	19d8      	adds	r0, r3, r7
 80166a6:	b200      	sxth	r0, r0
 80166a8:	4288      	cmp	r0, r1
 80166aa:	d109      	bne.n	80166c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80166ac:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80166b0:	4413      	add	r3, r2
 80166b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80166b6:	4629      	mov	r1, r5
 80166b8:	9801      	ldr	r0, [sp, #4]
 80166ba:	f7ff fd2b 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80166be:	e003      	b.n	80166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80166c0:	4411      	add	r1, r2
 80166c2:	b209      	sxth	r1, r1
 80166c4:	42b9      	cmp	r1, r7
 80166c6:	d0f3      	beq.n	80166b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80166c8:	3d01      	subs	r5, #1
 80166ca:	b2ad      	uxth	r5, r5
 80166cc:	3c08      	subs	r4, #8
 80166ce:	e7d3      	b.n	8016678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80166d0:	42b9      	cmp	r1, r7
 80166d2:	d1f9      	bne.n	80166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80166d4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80166d8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80166dc:	4299      	cmp	r1, r3
 80166de:	d1f3      	bne.n	80166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80166e0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80166e4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80166e8:	181f      	adds	r7, r3, r0
 80166ea:	b23f      	sxth	r7, r7
 80166ec:	42ba      	cmp	r2, r7
 80166ee:	d105      	bne.n	80166fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80166f0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80166f4:	440b      	add	r3, r1
 80166f6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80166fa:	e7dc      	b.n	80166b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80166fc:	440a      	add	r2, r1
 80166fe:	b212      	sxth	r2, r2
 8016700:	4290      	cmp	r0, r2
 8016702:	d1e1      	bne.n	80166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016704:	e7f6      	b.n	80166f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016706:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801670a:	2e07      	cmp	r6, #7
 801670c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016710:	d812      	bhi.n	8016738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016712:	1c75      	adds	r5, r6, #1
 8016714:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016718:	9d01      	ldr	r5, [sp, #4]
 801671a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801671e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8016722:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016726:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801672a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801672e:	442c      	add	r4, r5
 8016730:	8061      	strh	r1, [r4, #2]
 8016732:	80a2      	strh	r2, [r4, #4]
 8016734:	80e3      	strh	r3, [r4, #6]
 8016736:	e581      	b.n	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016738:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801673c:	3e01      	subs	r6, #1
 801673e:	445c      	add	r4, fp
 8016740:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8016744:	f04f 37ff 	mov.w	r7, #4294967295
 8016748:	2500      	movs	r5, #0
 801674a:	9305      	str	r3, [sp, #20]
 801674c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016750:	9302      	str	r3, [sp, #8]
 8016752:	1e72      	subs	r2, r6, #1
 8016754:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016758:	9304      	str	r3, [sp, #16]
 801675a:	4691      	mov	r9, r2
 801675c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016760:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016764:	bf14      	ite	ne
 8016766:	9905      	ldrne	r1, [sp, #20]
 8016768:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801676c:	6818      	ldr	r0, [r3, #0]
 801676e:	9207      	str	r2, [sp, #28]
 8016770:	bf18      	it	ne
 8016772:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016776:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801677a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801677e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016782:	9306      	str	r3, [sp, #24]
 8016784:	fb18 f801 	smulbb	r8, r8, r1
 8016788:	6859      	ldr	r1, [r3, #4]
 801678a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801678e:	4671      	mov	r1, lr
 8016790:	a80c      	add	r0, sp, #48	; 0x30
 8016792:	f7ff fafb 	bl	8015d8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016796:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801679a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801679e:	9b04      	ldr	r3, [sp, #16]
 80167a0:	9a02      	ldr	r2, [sp, #8]
 80167a2:	fb10 f001 	smulbb	r0, r0, r1
 80167a6:	fb02 8803 	mla	r8, r2, r3, r8
 80167aa:	eba0 0108 	sub.w	r1, r0, r8
 80167ae:	f04f 0c08 	mov.w	ip, #8
 80167b2:	fb90 f0fc 	sdiv	r0, r0, ip
 80167b6:	4288      	cmp	r0, r1
 80167b8:	dc20      	bgt.n	80167fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80167ba:	4551      	cmp	r1, sl
 80167bc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80167c0:	da03      	bge.n	80167ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80167c2:	b1d9      	cbz	r1, 80167fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80167c4:	468a      	mov	sl, r1
 80167c6:	464f      	mov	r7, r9
 80167c8:	4635      	mov	r5, r6
 80167ca:	f109 39ff 	add.w	r9, r9, #4294967295
 80167ce:	f119 0f02 	cmn.w	r9, #2
 80167d2:	d1c5      	bne.n	8016760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80167d4:	4616      	mov	r6, r2
 80167d6:	3201      	adds	r2, #1
 80167d8:	f1a4 0408 	sub.w	r4, r4, #8
 80167dc:	d1b6      	bne.n	801674c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80167de:	9b01      	ldr	r3, [sp, #4]
 80167e0:	b2ac      	uxth	r4, r5
 80167e2:	00ed      	lsls	r5, r5, #3
 80167e4:	1958      	adds	r0, r3, r5
 80167e6:	1c7b      	adds	r3, r7, #1
 80167e8:	d10b      	bne.n	8016802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80167ea:	4601      	mov	r1, r0
 80167ec:	9803      	ldr	r0, [sp, #12]
 80167ee:	f7ff facd 	bl	8015d8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80167f2:	4621      	mov	r1, r4
 80167f4:	9801      	ldr	r0, [sp, #4]
 80167f6:	f7ff fc8d 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80167fa:	e4b5      	b.n	8016168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80167fc:	464f      	mov	r7, r9
 80167fe:	4635      	mov	r5, r6
 8016800:	e7ed      	b.n	80167de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8016802:	9b01      	ldr	r3, [sp, #4]
 8016804:	00ff      	lsls	r7, r7, #3
 8016806:	19d9      	adds	r1, r3, r7
 8016808:	f7ff fac0 	bl	8015d8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801680c:	9b03      	ldr	r3, [sp, #12]
 801680e:	cb03      	ldmia	r3!, {r0, r1}
 8016810:	445f      	add	r7, fp
 8016812:	445d      	add	r5, fp
 8016814:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016818:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801681c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016820:	9b03      	ldr	r3, [sp, #12]
 8016822:	6869      	ldr	r1, [r5, #4]
 8016824:	c303      	stmia	r3!, {r0, r1}
 8016826:	e7e4      	b.n	80167f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016828 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801682c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016830:	b09b      	sub	sp, #108	; 0x6c
 8016832:	4604      	mov	r4, r0
 8016834:	4630      	mov	r0, r6
 8016836:	f7fa fa20 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801683a:	4605      	mov	r5, r0
 801683c:	b948      	cbnz	r0, 8016852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801683e:	6823      	ldr	r3, [r4, #0]
 8016840:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016846:	4620      	mov	r0, r4
 8016848:	4798      	blx	r3
 801684a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801684e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8016852:	4bc6      	ldr	r3, [pc, #792]	; (8016b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016854:	681b      	ldr	r3, [r3, #0]
 8016856:	2b00      	cmp	r3, #0
 8016858:	d03f      	beq.n	80168da <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801685a:	4dc5      	ldr	r5, [pc, #788]	; (8016b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801685c:	4628      	mov	r0, r5
 801685e:	f7fa fa0c 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016862:	4606      	mov	r6, r0
 8016864:	2800      	cmp	r0, #0
 8016866:	d138      	bne.n	80168da <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016868:	4628      	mov	r0, r5
 801686a:	f7ff f907 	bl	8015a7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801686e:	6823      	ldr	r3, [r4, #0]
 8016870:	6829      	ldr	r1, [r5, #0]
 8016872:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016874:	686a      	ldr	r2, [r5, #4]
 8016876:	4620      	mov	r0, r4
 8016878:	4798      	blx	r3
 801687a:	802e      	strh	r6, [r5, #0]
 801687c:	806e      	strh	r6, [r5, #2]
 801687e:	80ae      	strh	r6, [r5, #4]
 8016880:	80ee      	strh	r6, [r5, #6]
 8016882:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8016886:	4dbb      	ldr	r5, [pc, #748]	; (8016b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016888:	4640      	mov	r0, r8
 801688a:	f7ff fbeb 	bl	8016064 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801688e:	882e      	ldrh	r6, [r5, #0]
 8016890:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016894:	4633      	mov	r3, r6
 8016896:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801689a:	42bb      	cmp	r3, r7
 801689c:	d224      	bcs.n	80168e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801689e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80168a2:	2907      	cmp	r1, #7
 80168a4:	d816      	bhi.n	80168d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80168a6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80168aa:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80168ae:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80168b2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80168b6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80168ba:	1c4a      	adds	r2, r1, #1
 80168bc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80168c0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80168c4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80168c8:	f8a2 a002 	strh.w	sl, [r2, #2]
 80168cc:	f8a2 e004 	strh.w	lr, [r2, #4]
 80168d0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80168d4:	3301      	adds	r3, #1
 80168d6:	b29b      	uxth	r3, r3
 80168d8:	e7df      	b.n	801689a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80168da:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80168de:	2b00      	cmp	r3, #0
 80168e0:	d1cf      	bne.n	8016882 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80168e2:	b01b      	add	sp, #108	; 0x6c
 80168e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80168e8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80168ec:	42b3      	cmp	r3, r6
 80168ee:	d90c      	bls.n	801690a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80168f0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80168f4:	6822      	ldr	r2, [r4, #0]
 80168f6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80168fa:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80168fc:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016900:	4620      	mov	r0, r4
 8016902:	3601      	adds	r6, #1
 8016904:	47b8      	blx	r7
 8016906:	b2b6      	uxth	r6, r6
 8016908:	e7ee      	b.n	80168e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801690a:	4a9b      	ldr	r2, [pc, #620]	; (8016b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801690c:	6813      	ldr	r3, [r2, #0]
 801690e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016912:	2b01      	cmp	r3, #1
 8016914:	4691      	mov	r9, r2
 8016916:	f040 80e2 	bne.w	8016ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801691a:	8829      	ldrh	r1, [r5, #0]
 801691c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016920:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8016924:	33ae      	adds	r3, #174	; 0xae
 8016926:	2600      	movs	r6, #0
 8016928:	428f      	cmp	r7, r1
 801692a:	f103 0308 	add.w	r3, r3, #8
 801692e:	dd0a      	ble.n	8016946 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016930:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8016934:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016938:	4402      	add	r2, r0
 801693a:	b212      	sxth	r2, r2
 801693c:	4296      	cmp	r6, r2
 801693e:	bfb8      	it	lt
 8016940:	4616      	movlt	r6, r2
 8016942:	3101      	adds	r1, #1
 8016944:	e7f0      	b.n	8016928 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8016946:	4b8d      	ldr	r3, [pc, #564]	; (8016b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016948:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 801694c:	881b      	ldrh	r3, [r3, #0]
 801694e:	2b0f      	cmp	r3, #15
 8016950:	bf88      	it	hi
 8016952:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8016956:	f04f 0300 	mov.w	r3, #0
 801695a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801695e:	bf98      	it	ls
 8016960:	f04f 0b01 	movls.w	fp, #1
 8016964:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016968:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801696c:	4b82      	ldr	r3, [pc, #520]	; (8016b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801696e:	4438      	add	r0, r7
 8016970:	b207      	sxth	r7, r0
 8016972:	6818      	ldr	r0, [r3, #0]
 8016974:	42b7      	cmp	r7, r6
 8016976:	6803      	ldr	r3, [r0, #0]
 8016978:	f280 8083 	bge.w	8016a82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801697c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016980:	4798      	blx	r3
 8016982:	eb07 030b 	add.w	r3, r7, fp
 8016986:	4298      	cmp	r0, r3
 8016988:	da07      	bge.n	801699a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801698a:	42b0      	cmp	r0, r6
 801698c:	da05      	bge.n	801699a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801698e:	4287      	cmp	r7, r0
 8016990:	dd6c      	ble.n	8016a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016992:	2f00      	cmp	r7, #0
 8016994:	dd6a      	ble.n	8016a6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8016996:	4630      	mov	r0, r6
 8016998:	e004      	b.n	80169a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 801699a:	4287      	cmp	r7, r0
 801699c:	dcfb      	bgt.n	8016996 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801699e:	42b0      	cmp	r0, r6
 80169a0:	bfa8      	it	ge
 80169a2:	4630      	movge	r0, r6
 80169a4:	4b76      	ldr	r3, [pc, #472]	; (8016b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80169a6:	f8ad 7016 	strh.w	r7, [sp, #22]
 80169aa:	1bc0      	subs	r0, r0, r7
 80169ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 80169b0:	882f      	ldrh	r7, [r5, #0]
 80169b2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80169b6:	2200      	movs	r2, #0
 80169b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80169bc:	f8ad 001a 	strh.w	r0, [sp, #26]
 80169c0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80169c4:	42bb      	cmp	r3, r7
 80169c6:	d9cd      	bls.n	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80169c8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80169cc:	ab07      	add	r3, sp, #28
 80169ce:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80169d2:	6851      	ldr	r1, [r2, #4]
 80169d4:	c303      	stmia	r3!, {r0, r1}
 80169d6:	a905      	add	r1, sp, #20
 80169d8:	a807      	add	r0, sp, #28
 80169da:	f7ff f93e 	bl	8015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80169de:	2800      	cmp	r0, #0
 80169e0:	d04c      	beq.n	8016a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80169e2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80169e6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80169ea:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80169ee:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80169f2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80169f6:	9302      	str	r3, [sp, #8]
 80169f8:	4686      	mov	lr, r0
 80169fa:	4290      	cmp	r0, r2
 80169fc:	4450      	add	r0, sl
 80169fe:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8016a02:	bfb8      	it	lt
 8016a04:	4696      	movlt	lr, r2
 8016a06:	4452      	add	r2, sl
 8016a08:	4299      	cmp	r1, r3
 8016a0a:	b280      	uxth	r0, r0
 8016a0c:	b292      	uxth	r2, r2
 8016a0e:	468c      	mov	ip, r1
 8016a10:	fa0f fa82 	sxth.w	sl, r2
 8016a14:	bfb8      	it	lt
 8016a16:	469c      	movlt	ip, r3
 8016a18:	b203      	sxth	r3, r0
 8016a1a:	4553      	cmp	r3, sl
 8016a1c:	bfb8      	it	lt
 8016a1e:	4602      	movlt	r2, r0
 8016a20:	eba2 020e 	sub.w	r2, r2, lr
 8016a24:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016a28:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016a2c:	9b02      	ldr	r3, [sp, #8]
 8016a2e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8016a32:	4411      	add	r1, r2
 8016a34:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016a38:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016a3c:	4413      	add	r3, r2
 8016a3e:	b289      	uxth	r1, r1
 8016a40:	b29b      	uxth	r3, r3
 8016a42:	b208      	sxth	r0, r1
 8016a44:	b21a      	sxth	r2, r3
 8016a46:	4290      	cmp	r0, r2
 8016a48:	bfb8      	it	lt
 8016a4a:	460b      	movlt	r3, r1
 8016a4c:	eba3 030c 	sub.w	r3, r3, ip
 8016a50:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016a54:	a807      	add	r0, sp, #28
 8016a56:	f7fa f910 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a5a:	b920      	cbnz	r0, 8016a66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016a5c:	6823      	ldr	r3, [r4, #0]
 8016a5e:	a907      	add	r1, sp, #28
 8016a60:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a62:	4620      	mov	r0, r4
 8016a64:	4798      	blx	r3
 8016a66:	3701      	adds	r7, #1
 8016a68:	b2bf      	uxth	r7, r7
 8016a6a:	e7a9      	b.n	80169c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016a6c:	f8d9 0000 	ldr.w	r0, [r9]
 8016a70:	6803      	ldr	r3, [r0, #0]
 8016a72:	2101      	movs	r1, #1
 8016a74:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016a78:	4798      	blx	r3
 8016a7a:	e773      	b.n	8016964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016a7c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016a80:	e7e8      	b.n	8016a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8016a82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016a84:	4798      	blx	r3
 8016a86:	4b3f      	ldr	r3, [pc, #252]	; (8016b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016a88:	781b      	ldrb	r3, [r3, #0]
 8016a8a:	2b00      	cmp	r3, #0
 8016a8c:	f43f af29 	beq.w	80168e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016a90:	2300      	movs	r3, #0
 8016a92:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8016a96:	882b      	ldrh	r3, [r5, #0]
 8016a98:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016a9c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016aa0:	42ab      	cmp	r3, r5
 8016aa2:	f4bf af1e 	bcs.w	80168e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016aa6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016aaa:	2907      	cmp	r1, #7
 8016aac:	d814      	bhi.n	8016ad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016aae:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016ab2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016ab6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016aba:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016abe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016ac2:	1c4a      	adds	r2, r1, #1
 8016ac4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016ac8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016acc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016ad0:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016ad4:	8097      	strh	r7, [r2, #4]
 8016ad6:	80d6      	strh	r6, [r2, #6]
 8016ad8:	3301      	adds	r3, #1
 8016ada:	b29b      	uxth	r3, r3
 8016adc:	e7e0      	b.n	8016aa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016ade:	2b02      	cmp	r3, #2
 8016ae0:	f040 8133 	bne.w	8016d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8016ae4:	4b28      	ldr	r3, [pc, #160]	; (8016b88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8016ae6:	781b      	ldrb	r3, [r3, #0]
 8016ae8:	2b01      	cmp	r3, #1
 8016aea:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016aee:	f000 8098 	beq.w	8016c22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016af2:	882a      	ldrh	r2, [r5, #0]
 8016af4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016af8:	3201      	adds	r2, #1
 8016afa:	b292      	uxth	r2, r2
 8016afc:	2900      	cmp	r1, #0
 8016afe:	d0c2      	beq.n	8016a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016b00:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8016b04:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016b08:	441e      	add	r6, r3
 8016b0a:	b236      	sxth	r6, r6
 8016b0c:	4694      	mov	ip, r2
 8016b0e:	f04f 0900 	mov.w	r9, #0
 8016b12:	fa1f f38c 	uxth.w	r3, ip
 8016b16:	4299      	cmp	r1, r3
 8016b18:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016b1c:	f240 80bf 	bls.w	8016c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016b20:	4427      	add	r7, r4
 8016b22:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8016b26:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016b2a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016b2e:	4283      	cmp	r3, r0
 8016b30:	f340 80a1 	ble.w	8016c76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8016b34:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016b38:	4406      	add	r6, r0
 8016b3a:	b236      	sxth	r6, r6
 8016b3c:	429e      	cmp	r6, r3
 8016b3e:	bfa8      	it	ge
 8016b40:	461e      	movge	r6, r3
 8016b42:	46e1      	mov	r9, ip
 8016b44:	f10c 0c01 	add.w	ip, ip, #1
 8016b48:	e7e3      	b.n	8016b12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016b4a:	d10a      	bne.n	8016b62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016b4c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016b50:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8016b54:	4562      	cmp	r2, ip
 8016b56:	bfb8      	it	lt
 8016b58:	4662      	movlt	r2, ip
 8016b5a:	4288      	cmp	r0, r1
 8016b5c:	bfb8      	it	lt
 8016b5e:	461f      	movlt	r7, r3
 8016b60:	e087      	b.n	8016c72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016b62:	428a      	cmp	r2, r1
 8016b64:	bfb8      	it	lt
 8016b66:	460a      	movlt	r2, r1
 8016b68:	e083      	b.n	8016c72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016b6a:	bf00      	nop
 8016b6c:	20013004 	.word	0x20013004
 8016b70:	20013010 	.word	0x20013010
 8016b74:	20000088 	.word	0x20000088
 8016b78:	20012fc4 	.word	0x20012fc4
 8016b7c:	20012fba 	.word	0x20012fba
 8016b80:	20012fb8 	.word	0x20012fb8
 8016b84:	20012fc2 	.word	0x20012fc2
 8016b88:	20012fbc 	.word	0x20012fbc
 8016b8c:	19a1      	adds	r1, r4, r6
 8016b8e:	ab07      	add	r3, sp, #28
 8016b90:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8016b94:	6849      	ldr	r1, [r1, #4]
 8016b96:	c303      	stmia	r3!, {r0, r1}
 8016b98:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016b9c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016ba0:	2b13      	cmp	r3, #19
 8016ba2:	bfd8      	it	le
 8016ba4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016ba8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016bac:	440b      	add	r3, r1
 8016bae:	1a9b      	subs	r3, r3, r2
 8016bb0:	a807      	add	r0, sp, #28
 8016bb2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016bb6:	f7fe ff7b 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016bba:	a807      	add	r0, sp, #28
 8016bbc:	f7fa f85d 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bc0:	bb78      	cbnz	r0, 8016c22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016bc2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016bc6:	f8d9 0000 	ldr.w	r0, [r9]
 8016bca:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016bce:	f8d0 e000 	ldr.w	lr, [r0]
 8016bd2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8016bd6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016bda:	f1bc 0f14 	cmp.w	ip, #20
 8016bde:	bfa8      	it	ge
 8016be0:	f04f 0c14 	movge.w	ip, #20
 8016be4:	fa1f fc8c 	uxth.w	ip, ip
 8016be8:	f8cd c000 	str.w	ip, [sp]
 8016bec:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016bf0:	47d8      	blx	fp
 8016bf2:	4683      	mov	fp, r0
 8016bf4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016bf8:	a807      	add	r0, sp, #28
 8016bfa:	f7fe ff3f 	bl	8015a7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016bfe:	6823      	ldr	r3, [r4, #0]
 8016c00:	4426      	add	r6, r4
 8016c02:	4620      	mov	r0, r4
 8016c04:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016c06:	a907      	add	r1, sp, #28
 8016c08:	4798      	blx	r3
 8016c0a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016c0e:	eba0 000b 	sub.w	r0, r0, fp
 8016c12:	b200      	sxth	r0, r0
 8016c14:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016c18:	b918      	cbnz	r0, 8016c22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016c1a:	b2b9      	uxth	r1, r7
 8016c1c:	4650      	mov	r0, sl
 8016c1e:	f7ff fa79 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016c22:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8016c26:	f1bb 0f00 	cmp.w	fp, #0
 8016c2a:	f43f af2c 	beq.w	8016a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016c2e:	882b      	ldrh	r3, [r5, #0]
 8016c30:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8016c34:	3301      	adds	r3, #1
 8016c36:	b29b      	uxth	r3, r3
 8016c38:	2700      	movs	r7, #0
 8016c3a:	b299      	uxth	r1, r3
 8016c3c:	458b      	cmp	fp, r1
 8016c3e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8016c42:	d9a3      	bls.n	8016b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8016c44:	4426      	add	r6, r4
 8016c46:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016c4a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016c4e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016c52:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8016c56:	4408      	add	r0, r1
 8016c58:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016c5c:	4461      	add	r1, ip
 8016c5e:	b200      	sxth	r0, r0
 8016c60:	b209      	sxth	r1, r1
 8016c62:	4288      	cmp	r0, r1
 8016c64:	f6bf af71 	bge.w	8016b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016c68:	4584      	cmp	ip, r0
 8016c6a:	4662      	mov	r2, ip
 8016c6c:	461f      	mov	r7, r3
 8016c6e:	bfb8      	it	lt
 8016c70:	4602      	movlt	r2, r0
 8016c72:	3301      	adds	r3, #1
 8016c74:	e7e1      	b.n	8016c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8016c76:	d10e      	bne.n	8016c96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016c78:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016c7c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016c80:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8016c84:	4473      	add	r3, lr
 8016c86:	b21b      	sxth	r3, r3
 8016c88:	429e      	cmp	r6, r3
 8016c8a:	bfa8      	it	ge
 8016c8c:	461e      	movge	r6, r3
 8016c8e:	4287      	cmp	r7, r0
 8016c90:	bfb8      	it	lt
 8016c92:	46e1      	movlt	r9, ip
 8016c94:	e756      	b.n	8016b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016c96:	4286      	cmp	r6, r0
 8016c98:	bfa8      	it	ge
 8016c9a:	4606      	movge	r6, r0
 8016c9c:	e752      	b.n	8016b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016c9e:	eb0a 0007 	add.w	r0, sl, r7
 8016ca2:	4427      	add	r7, r4
 8016ca4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016ca8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016cac:	f1bb 0f13 	cmp.w	fp, #19
 8016cb0:	bfde      	ittt	le
 8016cb2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016cb6:	445e      	addle	r6, fp
 8016cb8:	b236      	sxthle	r6, r6
 8016cba:	f7f9 ffde 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016cbe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016cc2:	2800      	cmp	r0, #0
 8016cc4:	f47f af1a 	bne.w	8016afc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016cc8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016ccc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016cd0:	482a      	ldr	r0, [pc, #168]	; (8016d7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016cd2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016cd6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016cda:	6800      	ldr	r0, [r0, #0]
 8016cdc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016ce0:	1ab6      	subs	r6, r6, r2
 8016ce2:	2e14      	cmp	r6, #20
 8016ce4:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016ce8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016cec:	bfa8      	it	ge
 8016cee:	2614      	movge	r6, #20
 8016cf0:	f8d0 c000 	ldr.w	ip, [r0]
 8016cf4:	b2b6      	uxth	r6, r6
 8016cf6:	fa1f fb8b 	uxth.w	fp, fp
 8016cfa:	455e      	cmp	r6, fp
 8016cfc:	bf94      	ite	ls
 8016cfe:	9600      	strls	r6, [sp, #0]
 8016d00:	f8cd b000 	strhi.w	fp, [sp]
 8016d04:	b292      	uxth	r2, r2
 8016d06:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016d0a:	b29b      	uxth	r3, r3
 8016d0c:	b289      	uxth	r1, r1
 8016d0e:	47b0      	blx	r6
 8016d10:	6823      	ldr	r3, [r4, #0]
 8016d12:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016d16:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016d18:	a907      	add	r1, sp, #28
 8016d1a:	4620      	mov	r0, r4
 8016d1c:	4798      	blx	r3
 8016d1e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016d22:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016d26:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016d2a:	1a5b      	subs	r3, r3, r1
 8016d2c:	440a      	add	r2, r1
 8016d2e:	b21b      	sxth	r3, r3
 8016d30:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016d34:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016d38:	2b00      	cmp	r3, #0
 8016d3a:	f47f aeda 	bne.w	8016af2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016d3e:	fa1f f189 	uxth.w	r1, r9
 8016d42:	4650      	mov	r0, sl
 8016d44:	f7ff f9e6 	bl	8016114 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d48:	e6d3      	b.n	8016af2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016d4a:	882e      	ldrh	r6, [r5, #0]
 8016d4c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016d50:	42b3      	cmp	r3, r6
 8016d52:	f67f ae98 	bls.w	8016a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016d56:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016d5a:	ab07      	add	r3, sp, #28
 8016d5c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016d60:	6851      	ldr	r1, [r2, #4]
 8016d62:	c303      	stmia	r3!, {r0, r1}
 8016d64:	a807      	add	r0, sp, #28
 8016d66:	f7f9 ff88 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d6a:	b920      	cbnz	r0, 8016d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016d6c:	6823      	ldr	r3, [r4, #0]
 8016d6e:	a907      	add	r1, sp, #28
 8016d70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016d72:	4620      	mov	r0, r4
 8016d74:	4798      	blx	r3
 8016d76:	3601      	adds	r6, #1
 8016d78:	b2b6      	uxth	r6, r6
 8016d7a:	e7e7      	b.n	8016d4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016d7c:	20012fc4 	.word	0x20012fc4

08016d80 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016d80:	4b03      	ldr	r3, [pc, #12]	; (8016d90 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016d82:	2200      	movs	r2, #0
 8016d84:	801a      	strh	r2, [r3, #0]
 8016d86:	805a      	strh	r2, [r3, #2]
 8016d88:	809a      	strh	r2, [r3, #4]
 8016d8a:	80da      	strh	r2, [r3, #6]
 8016d8c:	4770      	bx	lr
 8016d8e:	bf00      	nop
 8016d90:	20013010 	.word	0x20013010

08016d94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d98:	4606      	mov	r6, r0
 8016d9a:	b09d      	sub	sp, #116	; 0x74
 8016d9c:	a803      	add	r0, sp, #12
 8016d9e:	4614      	mov	r4, r2
 8016da0:	468a      	mov	sl, r1
 8016da2:	461d      	mov	r5, r3
 8016da4:	f000 ff08 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8016da8:	6833      	ldr	r3, [r6, #0]
 8016daa:	4630      	mov	r0, r6
 8016dac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016dae:	4798      	blx	r3
 8016db0:	6833      	ldr	r3, [r6, #0]
 8016db2:	4607      	mov	r7, r0
 8016db4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016db6:	4630      	mov	r0, r6
 8016db8:	4798      	blx	r3
 8016dba:	462a      	mov	r2, r5
 8016dbc:	9000      	str	r0, [sp, #0]
 8016dbe:	4621      	mov	r1, r4
 8016dc0:	463b      	mov	r3, r7
 8016dc2:	a803      	add	r0, sp, #12
 8016dc4:	f000 ff53 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016dc8:	2500      	movs	r5, #0
 8016dca:	462c      	mov	r4, r5
 8016dcc:	46a9      	mov	r9, r5
 8016dce:	46a8      	mov	r8, r5
 8016dd0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016dd4:	2300      	movs	r3, #0
 8016dd6:	9302      	str	r3, [sp, #8]
 8016dd8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016ddc:	429c      	cmp	r4, r3
 8016dde:	d002      	beq.n	8016de6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016de0:	455c      	cmp	r4, fp
 8016de2:	bf18      	it	ne
 8016de4:	4625      	movne	r5, r4
 8016de6:	ab02      	add	r3, sp, #8
 8016de8:	4632      	mov	r2, r6
 8016dea:	4651      	mov	r1, sl
 8016dec:	a803      	add	r0, sp, #12
 8016dee:	f001 fa41 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016df2:	4604      	mov	r4, r0
 8016df4:	b108      	cbz	r0, 8016dfa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016df6:	280a      	cmp	r0, #10
 8016df8:	d10a      	bne.n	8016e10 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016dfa:	45c1      	cmp	r9, r8
 8016dfc:	bf38      	it	cc
 8016dfe:	46c1      	movcc	r9, r8
 8016e00:	f04f 0800 	mov.w	r8, #0
 8016e04:	2c00      	cmp	r4, #0
 8016e06:	d1e5      	bne.n	8016dd4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016e08:	4648      	mov	r0, r9
 8016e0a:	b01d      	add	sp, #116	; 0x74
 8016e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e10:	9a02      	ldr	r2, [sp, #8]
 8016e12:	2a00      	cmp	r2, #0
 8016e14:	d0de      	beq.n	8016dd4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016e16:	7b57      	ldrb	r7, [r2, #13]
 8016e18:	6833      	ldr	r3, [r6, #0]
 8016e1a:	8894      	ldrh	r4, [r2, #4]
 8016e1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016e1e:	007f      	lsls	r7, r7, #1
 8016e20:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016e24:	7a97      	ldrb	r7, [r2, #10]
 8016e26:	4629      	mov	r1, r5
 8016e28:	4307      	orrs	r7, r0
 8016e2a:	4630      	mov	r0, r6
 8016e2c:	4798      	blx	r3
 8016e2e:	4438      	add	r0, r7
 8016e30:	4480      	add	r8, r0
 8016e32:	fa1f f888 	uxth.w	r8, r8
 8016e36:	e7e5      	b.n	8016e04 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016e38 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016e38:	b508      	push	{r3, lr}
 8016e3a:	6803      	ldr	r3, [r0, #0]
 8016e3c:	68db      	ldr	r3, [r3, #12]
 8016e3e:	4798      	blx	r3
 8016e40:	b128      	cbz	r0, 8016e4e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016e42:	7b43      	ldrb	r3, [r0, #13]
 8016e44:	7a80      	ldrb	r0, [r0, #10]
 8016e46:	005b      	lsls	r3, r3, #1
 8016e48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e4c:	4318      	orrs	r0, r3
 8016e4e:	bd08      	pop	{r3, pc}

08016e50 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016e50:	b40e      	push	{r1, r2, r3}
 8016e52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016e54:	b09e      	sub	sp, #120	; 0x78
 8016e56:	ab23      	add	r3, sp, #140	; 0x8c
 8016e58:	4605      	mov	r5, r0
 8016e5a:	f853 4b04 	ldr.w	r4, [r3], #4
 8016e5e:	9303      	str	r3, [sp, #12]
 8016e60:	a805      	add	r0, sp, #20
 8016e62:	f000 fea9 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8016e66:	682b      	ldr	r3, [r5, #0]
 8016e68:	4628      	mov	r0, r5
 8016e6a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016e6c:	4798      	blx	r3
 8016e6e:	682b      	ldr	r3, [r5, #0]
 8016e70:	4606      	mov	r6, r0
 8016e72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016e74:	4628      	mov	r0, r5
 8016e76:	4798      	blx	r3
 8016e78:	4633      	mov	r3, r6
 8016e7a:	ae1e      	add	r6, sp, #120	; 0x78
 8016e7c:	4621      	mov	r1, r4
 8016e7e:	9000      	str	r0, [sp, #0]
 8016e80:	9a03      	ldr	r2, [sp, #12]
 8016e82:	2400      	movs	r4, #0
 8016e84:	a805      	add	r0, sp, #20
 8016e86:	f000 fef2 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016e8a:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016e8e:	462a      	mov	r2, r5
 8016e90:	4633      	mov	r3, r6
 8016e92:	4621      	mov	r1, r4
 8016e94:	a805      	add	r0, sp, #20
 8016e96:	f001 f9ed 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016e9a:	b1f0      	cbz	r0, 8016eda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016e9c:	280a      	cmp	r0, #10
 8016e9e:	d018      	beq.n	8016ed2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016ea0:	9f04      	ldr	r7, [sp, #16]
 8016ea2:	b1b7      	cbz	r7, 8016ed2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016ea4:	7b78      	ldrb	r0, [r7, #13]
 8016ea6:	7a3b      	ldrb	r3, [r7, #8]
 8016ea8:	88ea      	ldrh	r2, [r5, #6]
 8016eaa:	00c1      	lsls	r1, r0, #3
 8016eac:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016eb0:	4319      	orrs	r1, r3
 8016eb2:	0643      	lsls	r3, r0, #25
 8016eb4:	bf44      	itt	mi
 8016eb6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016eba:	b219      	sxthmi	r1, r3
 8016ebc:	0100      	lsls	r0, r0, #4
 8016ebe:	79fb      	ldrb	r3, [r7, #7]
 8016ec0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016ec4:	4303      	orrs	r3, r0
 8016ec6:	4413      	add	r3, r2
 8016ec8:	1a5b      	subs	r3, r3, r1
 8016eca:	b21b      	sxth	r3, r3
 8016ecc:	429c      	cmp	r4, r3
 8016ece:	bfb8      	it	lt
 8016ed0:	461c      	movlt	r4, r3
 8016ed2:	4633      	mov	r3, r6
 8016ed4:	462a      	mov	r2, r5
 8016ed6:	2100      	movs	r1, #0
 8016ed8:	e7dc      	b.n	8016e94 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016eda:	b2a0      	uxth	r0, r4
 8016edc:	b01e      	add	sp, #120	; 0x78
 8016ede:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016ee2:	b003      	add	sp, #12
 8016ee4:	4770      	bx	lr

08016ee6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016ee6:	7a43      	ldrb	r3, [r0, #9]
 8016ee8:	8880      	ldrh	r0, [r0, #4]
 8016eea:	4418      	add	r0, r3
 8016eec:	b280      	uxth	r0, r0
 8016eee:	4770      	bx	lr

08016ef0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016ef0:	6803      	ldr	r3, [r0, #0]
 8016ef2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ef4:	4718      	bx	r3

08016ef6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016ef6:	b40e      	push	{r1, r2, r3}
 8016ef8:	b570      	push	{r4, r5, r6, lr}
 8016efa:	b09d      	sub	sp, #116	; 0x74
 8016efc:	ab21      	add	r3, sp, #132	; 0x84
 8016efe:	4604      	mov	r4, r0
 8016f00:	f853 5b04 	ldr.w	r5, [r3], #4
 8016f04:	9302      	str	r3, [sp, #8]
 8016f06:	a803      	add	r0, sp, #12
 8016f08:	f000 fe56 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8016f0c:	6823      	ldr	r3, [r4, #0]
 8016f0e:	4620      	mov	r0, r4
 8016f10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016f12:	4798      	blx	r3
 8016f14:	6823      	ldr	r3, [r4, #0]
 8016f16:	4606      	mov	r6, r0
 8016f18:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016f1a:	4620      	mov	r0, r4
 8016f1c:	4798      	blx	r3
 8016f1e:	4633      	mov	r3, r6
 8016f20:	9000      	str	r0, [sp, #0]
 8016f22:	9a02      	ldr	r2, [sp, #8]
 8016f24:	4629      	mov	r1, r5
 8016f26:	a803      	add	r0, sp, #12
 8016f28:	f000 fea1 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f2c:	a803      	add	r0, sp, #12
 8016f2e:	f001 fa6f 	bl	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016f32:	2401      	movs	r4, #1
 8016f34:	b2a3      	uxth	r3, r4
 8016f36:	b140      	cbz	r0, 8016f4a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016f38:	280a      	cmp	r0, #10
 8016f3a:	bf08      	it	eq
 8016f3c:	3301      	addeq	r3, #1
 8016f3e:	a803      	add	r0, sp, #12
 8016f40:	bf08      	it	eq
 8016f42:	b21c      	sxtheq	r4, r3
 8016f44:	f001 fa64 	bl	8018410 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016f48:	e7f4      	b.n	8016f34 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016f4a:	4618      	mov	r0, r3
 8016f4c:	b01d      	add	sp, #116	; 0x74
 8016f4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f52:	b003      	add	sp, #12
 8016f54:	4770      	bx	lr

08016f56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016f56:	b40e      	push	{r1, r2, r3}
 8016f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f5a:	b09e      	sub	sp, #120	; 0x78
 8016f5c:	ab23      	add	r3, sp, #140	; 0x8c
 8016f5e:	4604      	mov	r4, r0
 8016f60:	f853 5b04 	ldr.w	r5, [r3], #4
 8016f64:	9303      	str	r3, [sp, #12]
 8016f66:	a805      	add	r0, sp, #20
 8016f68:	f000 fe26 	bl	8017bb8 <_ZN8touchgfx12TextProviderC1Ev>
 8016f6c:	6823      	ldr	r3, [r4, #0]
 8016f6e:	4620      	mov	r0, r4
 8016f70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016f72:	4798      	blx	r3
 8016f74:	6823      	ldr	r3, [r4, #0]
 8016f76:	4606      	mov	r6, r0
 8016f78:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016f7a:	4620      	mov	r0, r4
 8016f7c:	4798      	blx	r3
 8016f7e:	4633      	mov	r3, r6
 8016f80:	4629      	mov	r1, r5
 8016f82:	9000      	str	r0, [sp, #0]
 8016f84:	9a03      	ldr	r2, [sp, #12]
 8016f86:	a805      	add	r0, sp, #20
 8016f88:	ad1e      	add	r5, sp, #120	; 0x78
 8016f8a:	f000 fe70 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f8e:	2100      	movs	r1, #0
 8016f90:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016f94:	4622      	mov	r2, r4
 8016f96:	462b      	mov	r3, r5
 8016f98:	a805      	add	r0, sp, #20
 8016f9a:	f001 f96b 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016f9e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016fa2:	b1d8      	cbz	r0, 8016fdc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016fa4:	280a      	cmp	r0, #10
 8016fa6:	d012      	beq.n	8016fce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016fa8:	9804      	ldr	r0, [sp, #16]
 8016faa:	b180      	cbz	r0, 8016fce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016fac:	7b47      	ldrb	r7, [r0, #13]
 8016fae:	88e2      	ldrh	r2, [r4, #6]
 8016fb0:	00fb      	lsls	r3, r7, #3
 8016fb2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016fb6:	7a03      	ldrb	r3, [r0, #8]
 8016fb8:	430b      	orrs	r3, r1
 8016fba:	0679      	lsls	r1, r7, #25
 8016fbc:	bf44      	itt	mi
 8016fbe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fc2:	b21b      	sxthmi	r3, r3
 8016fc4:	1ad3      	subs	r3, r2, r3
 8016fc6:	b21b      	sxth	r3, r3
 8016fc8:	429e      	cmp	r6, r3
 8016fca:	bfa8      	it	ge
 8016fcc:	461e      	movge	r6, r3
 8016fce:	462b      	mov	r3, r5
 8016fd0:	4622      	mov	r2, r4
 8016fd2:	2100      	movs	r1, #0
 8016fd4:	a805      	add	r0, sp, #20
 8016fd6:	f001 f94d 	bl	8018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016fda:	e7e2      	b.n	8016fa2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016fdc:	4630      	mov	r0, r6
 8016fde:	b01e      	add	sp, #120	; 0x78
 8016fe0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016fe4:	b003      	add	sp, #12
 8016fe6:	4770      	bx	lr

08016fe8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016fe8:	b513      	push	{r0, r1, r4, lr}
 8016fea:	6803      	ldr	r3, [r0, #0]
 8016fec:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016ff0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016ff4:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016ff8:	2400      	movs	r4, #0
 8016ffa:	9400      	str	r4, [sp, #0]
 8016ffc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017000:	691b      	ldr	r3, [r3, #16]
 8017002:	4669      	mov	r1, sp
 8017004:	4798      	blx	r3
 8017006:	b002      	add	sp, #8
 8017008:	bd10      	pop	{r4, pc}

0801700a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801700a:	b538      	push	{r3, r4, r5, lr}
 801700c:	680b      	ldr	r3, [r1, #0]
 801700e:	460c      	mov	r4, r1
 8017010:	68db      	ldr	r3, [r3, #12]
 8017012:	4605      	mov	r5, r0
 8017014:	4798      	blx	r3
 8017016:	6823      	ldr	r3, [r4, #0]
 8017018:	4620      	mov	r0, r4
 801701a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801701c:	4629      	mov	r1, r5
 801701e:	4798      	blx	r3
 8017020:	4628      	mov	r0, r5
 8017022:	bd38      	pop	{r3, r4, r5, pc}

08017024 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017024:	b410      	push	{r4}
 8017026:	880a      	ldrh	r2, [r1, #0]
 8017028:	8884      	ldrh	r4, [r0, #4]
 801702a:	4422      	add	r2, r4
 801702c:	800a      	strh	r2, [r1, #0]
 801702e:	88c4      	ldrh	r4, [r0, #6]
 8017030:	884a      	ldrh	r2, [r1, #2]
 8017032:	4422      	add	r2, r4
 8017034:	804a      	strh	r2, [r1, #2]
 8017036:	6940      	ldr	r0, [r0, #20]
 8017038:	b120      	cbz	r0, 8017044 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801703a:	6803      	ldr	r3, [r0, #0]
 801703c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017040:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017042:	4718      	bx	r3
 8017044:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017048:	4770      	bx	lr

0801704a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801704a:	b570      	push	{r4, r5, r6, lr}
 801704c:	8882      	ldrh	r2, [r0, #4]
 801704e:	880b      	ldrh	r3, [r1, #0]
 8017050:	4413      	add	r3, r2
 8017052:	800b      	strh	r3, [r1, #0]
 8017054:	88c2      	ldrh	r2, [r0, #6]
 8017056:	884b      	ldrh	r3, [r1, #2]
 8017058:	460c      	mov	r4, r1
 801705a:	4413      	add	r3, r2
 801705c:	804b      	strh	r3, [r1, #2]
 801705e:	4605      	mov	r5, r0
 8017060:	1d01      	adds	r1, r0, #4
 8017062:	4620      	mov	r0, r4
 8017064:	f7f9 fdc6 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8017068:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801706c:	2b00      	cmp	r3, #0
 801706e:	dd0b      	ble.n	8017088 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017070:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017074:	2b00      	cmp	r3, #0
 8017076:	dd07      	ble.n	8017088 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017078:	6968      	ldr	r0, [r5, #20]
 801707a:	b128      	cbz	r0, 8017088 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801707c:	6803      	ldr	r3, [r0, #0]
 801707e:	4621      	mov	r1, r4
 8017080:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017086:	4718      	bx	r3
 8017088:	bd70      	pop	{r4, r5, r6, pc}
	...

0801708c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801708c:	b570      	push	{r4, r5, r6, lr}
 801708e:	8882      	ldrh	r2, [r0, #4]
 8017090:	880b      	ldrh	r3, [r1, #0]
 8017092:	4413      	add	r3, r2
 8017094:	800b      	strh	r3, [r1, #0]
 8017096:	88c2      	ldrh	r2, [r0, #6]
 8017098:	884b      	ldrh	r3, [r1, #2]
 801709a:	460c      	mov	r4, r1
 801709c:	4413      	add	r3, r2
 801709e:	804b      	strh	r3, [r1, #2]
 80170a0:	4605      	mov	r5, r0
 80170a2:	1d01      	adds	r1, r0, #4
 80170a4:	4620      	mov	r0, r4
 80170a6:	f7f9 fda5 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 80170aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80170ae:	2b00      	cmp	r3, #0
 80170b0:	dd19      	ble.n	80170e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80170b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80170b6:	2b00      	cmp	r3, #0
 80170b8:	dd15      	ble.n	80170e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80170ba:	6968      	ldr	r0, [r5, #20]
 80170bc:	b128      	cbz	r0, 80170ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80170be:	6803      	ldr	r3, [r0, #0]
 80170c0:	4621      	mov	r1, r4
 80170c2:	691b      	ldr	r3, [r3, #16]
 80170c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80170c8:	4718      	bx	r3
 80170ca:	4b07      	ldr	r3, [pc, #28]	; (80170e8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80170cc:	681b      	ldr	r3, [r3, #0]
 80170ce:	3304      	adds	r3, #4
 80170d0:	429d      	cmp	r5, r3
 80170d2:	d108      	bne.n	80170e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80170d4:	f7fe fea0 	bl	8015e18 <_ZN8touchgfx11Application11getInstanceEv>
 80170d8:	6803      	ldr	r3, [r0, #0]
 80170da:	6821      	ldr	r1, [r4, #0]
 80170dc:	6862      	ldr	r2, [r4, #4]
 80170de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80170e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80170e4:	4718      	bx	r3
 80170e6:	bd70      	pop	{r4, r5, r6, pc}
 80170e8:	20013008 	.word	0x20013008

080170ec <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80170ec:	b570      	push	{r4, r5, r6, lr}
 80170ee:	4604      	mov	r4, r0
 80170f0:	4616      	mov	r6, r2
 80170f2:	460d      	mov	r5, r1
 80170f4:	b901      	cbnz	r1, 80170f8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80170f6:	b192      	cbz	r2, 801711e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80170f8:	6823      	ldr	r3, [r4, #0]
 80170fa:	4620      	mov	r0, r4
 80170fc:	699b      	ldr	r3, [r3, #24]
 80170fe:	4798      	blx	r3
 8017100:	88e2      	ldrh	r2, [r4, #6]
 8017102:	88a1      	ldrh	r1, [r4, #4]
 8017104:	4432      	add	r2, r6
 8017106:	4429      	add	r1, r5
 8017108:	4620      	mov	r0, r4
 801710a:	b212      	sxth	r2, r2
 801710c:	b209      	sxth	r1, r1
 801710e:	f7eb fb24 	bl	800275a <_ZN8touchgfx8Drawable5setXYEss>
 8017112:	6823      	ldr	r3, [r4, #0]
 8017114:	4620      	mov	r0, r4
 8017116:	699b      	ldr	r3, [r3, #24]
 8017118:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801711c:	4718      	bx	r3
 801711e:	bd70      	pop	{r4, r5, r6, pc}

08017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017120:	b510      	push	{r4, lr}
 8017122:	4604      	mov	r4, r0
 8017124:	4608      	mov	r0, r1
 8017126:	2300      	movs	r3, #0
 8017128:	8023      	strh	r3, [r4, #0]
 801712a:	8063      	strh	r3, [r4, #2]
 801712c:	6803      	ldr	r3, [r0, #0]
 801712e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017132:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017136:	80a1      	strh	r1, [r4, #4]
 8017138:	80e2      	strh	r2, [r4, #6]
 801713a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801713c:	4621      	mov	r1, r4
 801713e:	4798      	blx	r3
 8017140:	4620      	mov	r0, r4
 8017142:	bd10      	pop	{r4, pc}

08017144 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017144:	b530      	push	{r4, r5, lr}
 8017146:	8083      	strh	r3, [r0, #4]
 8017148:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801714c:	80c3      	strh	r3, [r0, #6]
 801714e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017152:	7203      	strb	r3, [r0, #8]
 8017154:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017158:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801715c:	7243      	strb	r3, [r0, #9]
 801715e:	7a83      	ldrb	r3, [r0, #10]
 8017160:	6141      	str	r1, [r0, #20]
 8017162:	f365 0306 	bfi	r3, r5, #0, #7
 8017166:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801716a:	8302      	strh	r2, [r0, #24]
 801716c:	f365 13c7 	bfi	r3, r5, #7, #1
 8017170:	7283      	strb	r3, [r0, #10]
 8017172:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017176:	72c3      	strb	r3, [r0, #11]
 8017178:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801717c:	7303      	strb	r3, [r0, #12]
 801717e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017182:	81c3      	strh	r3, [r0, #14]
 8017184:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017188:	8203      	strh	r3, [r0, #16]
 801718a:	4b01      	ldr	r3, [pc, #4]	; (8017190 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801718c:	6003      	str	r3, [r0, #0]
 801718e:	bd30      	pop	{r4, r5, pc}
 8017190:	0802f848 	.word	0x0802f848

08017194 <_ZNK8touchgfx9ConstFont4findEt>:
 8017194:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017196:	6944      	ldr	r4, [r0, #20]
 8017198:	b3bc      	cbz	r4, 801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801719a:	88a3      	ldrh	r3, [r4, #4]
 801719c:	8b02      	ldrh	r2, [r0, #24]
 801719e:	1acb      	subs	r3, r1, r3
 80171a0:	f102 32ff 	add.w	r2, r2, #4294967295
 80171a4:	d431      	bmi.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171a6:	4293      	cmp	r3, r2
 80171a8:	dd0c      	ble.n	80171c4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80171aa:	230e      	movs	r3, #14
 80171ac:	fb03 4302 	mla	r3, r3, r2, r4
 80171b0:	889b      	ldrh	r3, [r3, #4]
 80171b2:	1a5b      	subs	r3, r3, r1
 80171b4:	1ad3      	subs	r3, r2, r3
 80171b6:	429a      	cmp	r2, r3
 80171b8:	db27      	blt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171ba:	2b00      	cmp	r3, #0
 80171bc:	bfbc      	itt	lt
 80171be:	2302      	movlt	r3, #2
 80171c0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80171c4:	2500      	movs	r5, #0
 80171c6:	260e      	movs	r6, #14
 80171c8:	4295      	cmp	r5, r2
 80171ca:	dc1e      	bgt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171cc:	fb06 4003 	mla	r0, r6, r3, r4
 80171d0:	8887      	ldrh	r7, [r0, #4]
 80171d2:	42b9      	cmp	r1, r7
 80171d4:	d01a      	beq.n	801720c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80171d6:	d20d      	bcs.n	80171f4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80171d8:	1e5a      	subs	r2, r3, #1
 80171da:	4295      	cmp	r5, r2
 80171dc:	dc15      	bgt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171de:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80171e2:	1a5b      	subs	r3, r3, r1
 80171e4:	1ad3      	subs	r3, r2, r3
 80171e6:	429a      	cmp	r2, r3
 80171e8:	db0f      	blt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171ea:	429d      	cmp	r5, r3
 80171ec:	ddec      	ble.n	80171c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80171ee:	1953      	adds	r3, r2, r5
 80171f0:	105b      	asrs	r3, r3, #1
 80171f2:	e7e9      	b.n	80171c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80171f4:	1c5d      	adds	r5, r3, #1
 80171f6:	42aa      	cmp	r2, r5
 80171f8:	db07      	blt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80171fa:	8a43      	ldrh	r3, [r0, #18]
 80171fc:	1acb      	subs	r3, r1, r3
 80171fe:	442b      	add	r3, r5
 8017200:	429d      	cmp	r5, r3
 8017202:	dc02      	bgt.n	801720a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017204:	429a      	cmp	r2, r3
 8017206:	dadf      	bge.n	80171c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017208:	e7f1      	b.n	80171ee <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801720a:	2000      	movs	r0, #0
 801720c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801720e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801720e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017210:	4604      	mov	r4, r0
 8017212:	4617      	mov	r7, r2
 8017214:	461e      	mov	r6, r3
 8017216:	b911      	cbnz	r1, 801721e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017218:	2500      	movs	r5, #0
 801721a:	4628      	mov	r0, r5
 801721c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801721e:	290a      	cmp	r1, #10
 8017220:	d0fa      	beq.n	8017218 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017222:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017226:	4291      	cmp	r1, r2
 8017228:	d0f6      	beq.n	8017218 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801722a:	f242 020b 	movw	r2, #8203	; 0x200b
 801722e:	4291      	cmp	r1, r2
 8017230:	d0f2      	beq.n	8017218 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017232:	f7ff ffaf 	bl	8017194 <_ZNK8touchgfx9ConstFont4findEt>
 8017236:	4605      	mov	r5, r0
 8017238:	b950      	cbnz	r0, 8017250 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801723a:	6823      	ldr	r3, [r4, #0]
 801723c:	4620      	mov	r0, r4
 801723e:	691b      	ldr	r3, [r3, #16]
 8017240:	4798      	blx	r3
 8017242:	4601      	mov	r1, r0
 8017244:	4620      	mov	r0, r4
 8017246:	f7ff ffa5 	bl	8017194 <_ZNK8touchgfx9ConstFont4findEt>
 801724a:	4605      	mov	r5, r0
 801724c:	2800      	cmp	r0, #0
 801724e:	d0e3      	beq.n	8017218 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017250:	6823      	ldr	r3, [r4, #0]
 8017252:	4629      	mov	r1, r5
 8017254:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8017256:	4620      	mov	r0, r4
 8017258:	4798      	blx	r3
 801725a:	6038      	str	r0, [r7, #0]
 801725c:	6823      	ldr	r3, [r4, #0]
 801725e:	4620      	mov	r0, r4
 8017260:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017262:	4798      	blx	r3
 8017264:	7030      	strb	r0, [r6, #0]
 8017266:	e7d8      	b.n	801721a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017268 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017268:	b538      	push	{r3, r4, r5, lr}
 801726a:	4605      	mov	r5, r0
 801726c:	f002 fb94 	bl	8019998 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017270:	4604      	mov	r4, r0
 8017272:	4628      	mov	r0, r5
 8017274:	f002 fad4 	bl	8019820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017278:	2800      	cmp	r0, #0
 801727a:	bf14      	ite	ne
 801727c:	2002      	movne	r0, #2
 801727e:	2000      	moveq	r0, #0
 8017280:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017284:	b280      	uxth	r0, r0
 8017286:	bd38      	pop	{r3, r4, r5, pc}

08017288 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017288:	b538      	push	{r3, r4, r5, lr}
 801728a:	4605      	mov	r5, r0
 801728c:	f002 fb84 	bl	8019998 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017290:	4604      	mov	r4, r0
 8017292:	4628      	mov	r0, r5
 8017294:	f002 fac4 	bl	8019820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017298:	2800      	cmp	r0, #0
 801729a:	bf14      	ite	ne
 801729c:	2002      	movne	r0, #2
 801729e:	2000      	moveq	r0, #0
 80172a0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80172a4:	f040 0001 	orr.w	r0, r0, #1
 80172a8:	b280      	uxth	r0, r0
 80172aa:	bd38      	pop	{r3, r4, r5, pc}

080172ac <_ZN8touchgfx4clzuEm>:
 80172ac:	4603      	mov	r3, r0
 80172ae:	b1c8      	cbz	r0, 80172e4 <_ZN8touchgfx4clzuEm+0x38>
 80172b0:	0c02      	lsrs	r2, r0, #16
 80172b2:	0412      	lsls	r2, r2, #16
 80172b4:	b9a2      	cbnz	r2, 80172e0 <_ZN8touchgfx4clzuEm+0x34>
 80172b6:	0403      	lsls	r3, r0, #16
 80172b8:	2010      	movs	r0, #16
 80172ba:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80172be:	bf04      	itt	eq
 80172c0:	021b      	lsleq	r3, r3, #8
 80172c2:	3008      	addeq	r0, #8
 80172c4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80172c8:	bf04      	itt	eq
 80172ca:	011b      	lsleq	r3, r3, #4
 80172cc:	3004      	addeq	r0, #4
 80172ce:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80172d2:	bf04      	itt	eq
 80172d4:	009b      	lsleq	r3, r3, #2
 80172d6:	3002      	addeq	r0, #2
 80172d8:	2b00      	cmp	r3, #0
 80172da:	db04      	blt.n	80172e6 <_ZN8touchgfx4clzuEm+0x3a>
 80172dc:	3001      	adds	r0, #1
 80172de:	4770      	bx	lr
 80172e0:	2000      	movs	r0, #0
 80172e2:	e7ea      	b.n	80172ba <_ZN8touchgfx4clzuEm+0xe>
 80172e4:	2020      	movs	r0, #32
 80172e6:	4770      	bx	lr

080172e8 <_ZN8touchgfx7muldivuEmmmRm>:
 80172e8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80172ec:	460f      	mov	r7, r1
 80172ee:	4615      	mov	r5, r2
 80172f0:	461e      	mov	r6, r3
 80172f2:	4601      	mov	r1, r0
 80172f4:	b100      	cbz	r0, 80172f8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80172f6:	b927      	cbnz	r7, 8017302 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80172f8:	2000      	movs	r0, #0
 80172fa:	6030      	str	r0, [r6, #0]
 80172fc:	b002      	add	sp, #8
 80172fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017302:	f7ff ffd3 	bl	80172ac <_ZN8touchgfx4clzuEm>
 8017306:	b980      	cbnz	r0, 801732a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017308:	4638      	mov	r0, r7
 801730a:	f7ff ffcf 	bl	80172ac <_ZN8touchgfx4clzuEm>
 801730e:	2800      	cmp	r0, #0
 8017310:	dd05      	ble.n	801731e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017312:	4633      	mov	r3, r6
 8017314:	462a      	mov	r2, r5
 8017316:	4638      	mov	r0, r7
 8017318:	f7ff ffe6 	bl	80172e8 <_ZN8touchgfx7muldivuEmmmRm>
 801731c:	e7ee      	b.n	80172fc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801731e:	f04f 33ff 	mov.w	r3, #4294967295
 8017322:	6033      	str	r3, [r6, #0]
 8017324:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017328:	e7e8      	b.n	80172fc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801732a:	fa37 f800 	lsrs.w	r8, r7, r0
 801732e:	fb07 f301 	mul.w	r3, r7, r1
 8017332:	d105      	bne.n	8017340 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017334:	fbb3 f0f5 	udiv	r0, r3, r5
 8017338:	fb05 3510 	mls	r5, r5, r0, r3
 801733c:	6035      	str	r5, [r6, #0]
 801733e:	e7dd      	b.n	80172fc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017340:	2301      	movs	r3, #1
 8017342:	fa01 fa00 	lsl.w	sl, r1, r0
 8017346:	fa03 f000 	lsl.w	r0, r3, r0
 801734a:	3801      	subs	r0, #1
 801734c:	462a      	mov	r2, r5
 801734e:	4633      	mov	r3, r6
 8017350:	4038      	ands	r0, r7
 8017352:	f7ff ffc9 	bl	80172e8 <_ZN8touchgfx7muldivuEmmmRm>
 8017356:	fbba f9f5 	udiv	r9, sl, r5
 801735a:	462a      	mov	r2, r5
 801735c:	4607      	mov	r7, r0
 801735e:	ab01      	add	r3, sp, #4
 8017360:	fb05 a119 	mls	r1, r5, r9, sl
 8017364:	4640      	mov	r0, r8
 8017366:	f7ff ffbf 	bl	80172e8 <_ZN8touchgfx7muldivuEmmmRm>
 801736a:	9b01      	ldr	r3, [sp, #4]
 801736c:	6832      	ldr	r2, [r6, #0]
 801736e:	fb08 f409 	mul.w	r4, r8, r9
 8017372:	441a      	add	r2, r3
 8017374:	fbb2 f3f5 	udiv	r3, r2, r5
 8017378:	441c      	add	r4, r3
 801737a:	443c      	add	r4, r7
 801737c:	4420      	add	r0, r4
 801737e:	fb05 2513 	mls	r5, r5, r3, r2
 8017382:	e7db      	b.n	801733c <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017384 <_ZN8touchgfx6muldivElllRl>:
 8017384:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017386:	2800      	cmp	r0, #0
 8017388:	bfba      	itte	lt
 801738a:	4240      	neglt	r0, r0
 801738c:	f04f 34ff 	movlt.w	r4, #4294967295
 8017390:	2401      	movge	r4, #1
 8017392:	2900      	cmp	r1, #0
 8017394:	bfbc      	itt	lt
 8017396:	4249      	neglt	r1, r1
 8017398:	4264      	neglt	r4, r4
 801739a:	2a00      	cmp	r2, #0
 801739c:	bfb6      	itet	lt
 801739e:	4265      	neglt	r5, r4
 80173a0:	4625      	movge	r5, r4
 80173a2:	4252      	neglt	r2, r2
 80173a4:	4288      	cmp	r0, r1
 80173a6:	461e      	mov	r6, r3
 80173a8:	bfc2      	ittt	gt
 80173aa:	4603      	movgt	r3, r0
 80173ac:	4608      	movgt	r0, r1
 80173ae:	4619      	movgt	r1, r3
 80173b0:	ab01      	add	r3, sp, #4
 80173b2:	f7ff ff99 	bl	80172e8 <_ZN8touchgfx7muldivuEmmmRm>
 80173b6:	9b01      	ldr	r3, [sp, #4]
 80173b8:	4368      	muls	r0, r5
 80173ba:	435c      	muls	r4, r3
 80173bc:	6034      	str	r4, [r6, #0]
 80173be:	b002      	add	sp, #8
 80173c0:	bd70      	pop	{r4, r5, r6, pc}

080173c2 <_ZN8touchgfx6muldivElll>:
 80173c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80173c4:	4606      	mov	r6, r0
 80173c6:	ab01      	add	r3, sp, #4
 80173c8:	460d      	mov	r5, r1
 80173ca:	4614      	mov	r4, r2
 80173cc:	f7ff ffda 	bl	8017384 <_ZN8touchgfx6muldivElllRl>
 80173d0:	2e00      	cmp	r6, #0
 80173d2:	db20      	blt.n	8017416 <_ZN8touchgfx6muldivElll+0x54>
 80173d4:	bf14      	ite	ne
 80173d6:	2301      	movne	r3, #1
 80173d8:	2300      	moveq	r3, #0
 80173da:	2d00      	cmp	r5, #0
 80173dc:	db1e      	blt.n	801741c <_ZN8touchgfx6muldivElll+0x5a>
 80173de:	bf14      	ite	ne
 80173e0:	2201      	movne	r2, #1
 80173e2:	2200      	moveq	r2, #0
 80173e4:	2c00      	cmp	r4, #0
 80173e6:	fb03 f202 	mul.w	r2, r3, r2
 80173ea:	db1a      	blt.n	8017422 <_ZN8touchgfx6muldivElll+0x60>
 80173ec:	bf14      	ite	ne
 80173ee:	2301      	movne	r3, #1
 80173f0:	2300      	moveq	r3, #0
 80173f2:	4353      	muls	r3, r2
 80173f4:	2b01      	cmp	r3, #1
 80173f6:	d117      	bne.n	8017428 <_ZN8touchgfx6muldivElll+0x66>
 80173f8:	9b01      	ldr	r3, [sp, #4]
 80173fa:	2c00      	cmp	r4, #0
 80173fc:	bfb8      	it	lt
 80173fe:	4264      	neglt	r4, r4
 8017400:	2b00      	cmp	r3, #0
 8017402:	f104 0401 	add.w	r4, r4, #1
 8017406:	bfb8      	it	lt
 8017408:	425b      	neglt	r3, r3
 801740a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801740e:	db00      	blt.n	8017412 <_ZN8touchgfx6muldivElll+0x50>
 8017410:	3001      	adds	r0, #1
 8017412:	b002      	add	sp, #8
 8017414:	bd70      	pop	{r4, r5, r6, pc}
 8017416:	f04f 33ff 	mov.w	r3, #4294967295
 801741a:	e7de      	b.n	80173da <_ZN8touchgfx6muldivElll+0x18>
 801741c:	f04f 32ff 	mov.w	r2, #4294967295
 8017420:	e7e0      	b.n	80173e4 <_ZN8touchgfx6muldivElll+0x22>
 8017422:	f04f 33ff 	mov.w	r3, #4294967295
 8017426:	e7e4      	b.n	80173f2 <_ZN8touchgfx6muldivElll+0x30>
 8017428:	3301      	adds	r3, #1
 801742a:	d1f2      	bne.n	8017412 <_ZN8touchgfx6muldivElll+0x50>
 801742c:	9b01      	ldr	r3, [sp, #4]
 801742e:	2c00      	cmp	r4, #0
 8017430:	bfb8      	it	lt
 8017432:	4264      	neglt	r4, r4
 8017434:	2b00      	cmp	r3, #0
 8017436:	bfb8      	it	lt
 8017438:	425b      	neglt	r3, r3
 801743a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801743e:	bfc8      	it	gt
 8017440:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017444:	e7e5      	b.n	8017412 <_ZN8touchgfx6muldivElll+0x50>

08017446 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017446:	2000      	movs	r0, #0
 8017448:	4770      	bx	lr

0801744a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801744a:	2001      	movs	r0, #1
 801744c:	4770      	bx	lr

0801744e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801744e:	2002      	movs	r0, #2
 8017450:	4770      	bx	lr

08017452 <_ZN8touchgfx6ScreenD1Ev>:
 8017452:	4770      	bx	lr

08017454 <_ZN8touchgfx12GestureEventD1Ev>:
 8017454:	4770      	bx	lr

08017456 <_ZN8touchgfx9DragEventD1Ev>:
 8017456:	4770      	bx	lr

08017458 <_ZN8touchgfx10ClickEventD1Ev>:
 8017458:	4770      	bx	lr

0801745a <_ZN8touchgfx10ClickEventD0Ev>:
 801745a:	b510      	push	{r4, lr}
 801745c:	210c      	movs	r1, #12
 801745e:	4604      	mov	r4, r0
 8017460:	f012 fd8f 	bl	8029f82 <_ZdlPvj>
 8017464:	4620      	mov	r0, r4
 8017466:	bd10      	pop	{r4, pc}

08017468 <_ZN8touchgfx9DragEventD0Ev>:
 8017468:	b510      	push	{r4, lr}
 801746a:	2110      	movs	r1, #16
 801746c:	4604      	mov	r4, r0
 801746e:	f012 fd88 	bl	8029f82 <_ZdlPvj>
 8017472:	4620      	mov	r0, r4
 8017474:	bd10      	pop	{r4, pc}

08017476 <_ZN8touchgfx12GestureEventD0Ev>:
 8017476:	b510      	push	{r4, lr}
 8017478:	210c      	movs	r1, #12
 801747a:	4604      	mov	r4, r0
 801747c:	f012 fd81 	bl	8029f82 <_ZdlPvj>
 8017480:	4620      	mov	r0, r4
 8017482:	bd10      	pop	{r4, pc}

08017484 <_ZN8touchgfx6ScreenD0Ev>:
 8017484:	b510      	push	{r4, lr}
 8017486:	213c      	movs	r1, #60	; 0x3c
 8017488:	4604      	mov	r4, r0
 801748a:	f012 fd7a 	bl	8029f82 <_ZdlPvj>
 801748e:	4620      	mov	r0, r4
 8017490:	bd10      	pop	{r4, pc}
	...

08017494 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017494:	b530      	push	{r4, r5, lr}
 8017496:	460d      	mov	r5, r1
 8017498:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801749a:	b087      	sub	sp, #28
 801749c:	4604      	mov	r4, r0
 801749e:	b301      	cbz	r1, 80174e2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80174a0:	a801      	add	r0, sp, #4
 80174a2:	f7ff fe3d 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80174a6:	892a      	ldrh	r2, [r5, #8]
 80174a8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80174ac:	7928      	ldrb	r0, [r5, #4]
 80174ae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80174b2:	f88d 0010 	strb.w	r0, [sp, #16]
 80174b6:	1ad2      	subs	r2, r2, r3
 80174b8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80174ba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80174bc:	f8ad 1012 	strh.w	r1, [sp, #18]
 80174c0:	441a      	add	r2, r3
 80174c2:	896b      	ldrh	r3, [r5, #10]
 80174c4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80174c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80174cc:	1b5b      	subs	r3, r3, r5
 80174ce:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80174d0:	442b      	add	r3, r5
 80174d2:	4d05      	ldr	r5, [pc, #20]	; (80174e8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80174d4:	9503      	str	r5, [sp, #12]
 80174d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80174da:	6803      	ldr	r3, [r0, #0]
 80174dc:	a903      	add	r1, sp, #12
 80174de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80174e0:	4798      	blx	r3
 80174e2:	b007      	add	sp, #28
 80174e4:	bd30      	pop	{r4, r5, pc}
 80174e6:	bf00      	nop
 80174e8:	0802f8d0 	.word	0x0802f8d0

080174ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80174ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80174f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80174f2:	b08a      	sub	sp, #40	; 0x28
 80174f4:	4604      	mov	r4, r0
 80174f6:	460d      	mov	r5, r1
 80174f8:	b113      	cbz	r3, 8017500 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80174fa:	790b      	ldrb	r3, [r1, #4]
 80174fc:	2b00      	cmp	r3, #0
 80174fe:	d044      	beq.n	801758a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017500:	f104 0804 	add.w	r8, r4, #4
 8017504:	4641      	mov	r1, r8
 8017506:	a803      	add	r0, sp, #12
 8017508:	f7ff fe0a 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801750c:	792b      	ldrb	r3, [r5, #4]
 801750e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017512:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017516:	b983      	cbnz	r3, 801753a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017518:	892a      	ldrh	r2, [r5, #8]
 801751a:	88e9      	ldrh	r1, [r5, #6]
 801751c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017520:	1b92      	subs	r2, r2, r6
 8017522:	1bc9      	subs	r1, r1, r7
 8017524:	9301      	str	r3, [sp, #4]
 8017526:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801752a:	9300      	str	r3, [sp, #0]
 801752c:	b212      	sxth	r2, r2
 801752e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017532:	b209      	sxth	r1, r1
 8017534:	4640      	mov	r0, r8
 8017536:	f7f9 fa79 	bl	8010a2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801753a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801753c:	b329      	cbz	r1, 801758a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801753e:	a805      	add	r0, sp, #20
 8017540:	f7ff fdee 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017544:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017548:	792b      	ldrb	r3, [r5, #4]
 801754a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801754c:	f88d 3020 	strb.w	r3, [sp, #32]
 8017550:	1abf      	subs	r7, r7, r2
 8017552:	88ea      	ldrh	r2, [r5, #6]
 8017554:	4417      	add	r7, r2
 8017556:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017558:	4417      	add	r7, r2
 801755a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801755e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017562:	1ab6      	subs	r6, r6, r2
 8017564:	892a      	ldrh	r2, [r5, #8]
 8017566:	4416      	add	r6, r2
 8017568:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801756a:	4416      	add	r6, r2
 801756c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017570:	4a07      	ldr	r2, [pc, #28]	; (8017590 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017572:	9207      	str	r2, [sp, #28]
 8017574:	2600      	movs	r6, #0
 8017576:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801757a:	6803      	ldr	r3, [r0, #0]
 801757c:	a907      	add	r1, sp, #28
 801757e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017580:	4798      	blx	r3
 8017582:	792b      	ldrb	r3, [r5, #4]
 8017584:	b10b      	cbz	r3, 801758a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017586:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801758a:	b00a      	add	sp, #40	; 0x28
 801758c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017590:	0802f8a8 	.word	0x0802f8a8

08017594 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017598:	460c      	mov	r4, r1
 801759a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801759c:	b088      	sub	sp, #32
 801759e:	4605      	mov	r5, r0
 80175a0:	2900      	cmp	r1, #0
 80175a2:	d06d      	beq.n	8017680 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80175a4:	4668      	mov	r0, sp
 80175a6:	f7ff fdbb 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80175aa:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80175ac:	88e3      	ldrh	r3, [r4, #6]
 80175ae:	f9bd 8000 	ldrsh.w	r8, [sp]
 80175b2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80175b6:	440b      	add	r3, r1
 80175b8:	b21b      	sxth	r3, r3
 80175ba:	4543      	cmp	r3, r8
 80175bc:	db31      	blt.n	8017622 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80175be:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80175c2:	44c4      	add	ip, r8
 80175c4:	fa0f fc8c 	sxth.w	ip, ip
 80175c8:	4563      	cmp	r3, ip
 80175ca:	da2a      	bge.n	8017622 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80175cc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80175ce:	8926      	ldrh	r6, [r4, #8]
 80175d0:	4416      	add	r6, r2
 80175d2:	b236      	sxth	r6, r6
 80175d4:	42be      	cmp	r6, r7
 80175d6:	db24      	blt.n	8017622 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80175d8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80175dc:	4438      	add	r0, r7
 80175de:	b200      	sxth	r0, r0
 80175e0:	4286      	cmp	r6, r0
 80175e2:	da1e      	bge.n	8017622 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80175e4:	8963      	ldrh	r3, [r4, #10]
 80175e6:	4419      	add	r1, r3
 80175e8:	b209      	sxth	r1, r1
 80175ea:	4541      	cmp	r1, r8
 80175ec:	db08      	blt.n	8017600 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80175ee:	4561      	cmp	r1, ip
 80175f0:	da06      	bge.n	8017600 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80175f2:	89a3      	ldrh	r3, [r4, #12]
 80175f4:	441a      	add	r2, r3
 80175f6:	b212      	sxth	r2, r2
 80175f8:	42ba      	cmp	r2, r7
 80175fa:	db01      	blt.n	8017600 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80175fc:	4282      	cmp	r2, r0
 80175fe:	db10      	blt.n	8017622 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017600:	4b21      	ldr	r3, [pc, #132]	; (8017688 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017602:	9304      	str	r3, [sp, #16]
 8017604:	2302      	movs	r3, #2
 8017606:	f88d 3014 	strb.w	r3, [sp, #20]
 801760a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801760c:	2300      	movs	r3, #0
 801760e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017612:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017616:	f8ad 301a 	strh.w	r3, [sp, #26]
 801761a:	6803      	ldr	r3, [r0, #0]
 801761c:	a904      	add	r1, sp, #16
 801761e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017620:	4798      	blx	r3
 8017622:	1d29      	adds	r1, r5, #4
 8017624:	a802      	add	r0, sp, #8
 8017626:	f7ff fd7b 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801762a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801762e:	88e0      	ldrh	r0, [r4, #6]
 8017630:	7921      	ldrb	r1, [r4, #4]
 8017632:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017636:	8922      	ldrh	r2, [r4, #8]
 8017638:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801763a:	f88d 1014 	strb.w	r1, [sp, #20]
 801763e:	eba3 0808 	sub.w	r8, r3, r8
 8017642:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017646:	1bdf      	subs	r7, r3, r7
 8017648:	b2bb      	uxth	r3, r7
 801764a:	fa1f f888 	uxth.w	r8, r8
 801764e:	8967      	ldrh	r7, [r4, #10]
 8017650:	89a4      	ldrh	r4, [r4, #12]
 8017652:	4440      	add	r0, r8
 8017654:	4460      	add	r0, ip
 8017656:	441a      	add	r2, r3
 8017658:	44b8      	add	r8, r7
 801765a:	4423      	add	r3, r4
 801765c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017660:	4433      	add	r3, r6
 8017662:	4432      	add	r2, r6
 8017664:	44e0      	add	r8, ip
 8017666:	4c09      	ldr	r4, [pc, #36]	; (801768c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017668:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801766a:	9404      	str	r4, [sp, #16]
 801766c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017670:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017674:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017678:	6803      	ldr	r3, [r0, #0]
 801767a:	a904      	add	r1, sp, #16
 801767c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801767e:	4798      	blx	r3
 8017680:	b008      	add	sp, #32
 8017682:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017686:	bf00      	nop
 8017688:	0802f8a8 	.word	0x0802f8a8
 801768c:	0802f8bc 	.word	0x0802f8bc

08017690 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017690:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017692:	4604      	mov	r4, r0
 8017694:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017698:	3201      	adds	r2, #1
 801769a:	d112      	bne.n	80176c2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801769c:	6803      	ldr	r3, [r0, #0]
 801769e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80176a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80176a6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80176aa:	2500      	movs	r5, #0
 80176ac:	9500      	str	r5, [sp, #0]
 80176ae:	466d      	mov	r5, sp
 80176b0:	4629      	mov	r1, r5
 80176b2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80176b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176b8:	4798      	blx	r3
 80176ba:	e895 0003 	ldmia.w	r5, {r0, r1}
 80176be:	e884 0003 	stmia.w	r4, {r0, r1}
 80176c2:	4620      	mov	r0, r4
 80176c4:	b003      	add	sp, #12
 80176c6:	bd30      	pop	{r4, r5, pc}

080176c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80176c8:	b513      	push	{r0, r1, r4, lr}
 80176ca:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80176ce:	3301      	adds	r3, #1
 80176d0:	4604      	mov	r4, r0
 80176d2:	d109      	bne.n	80176e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80176d4:	4601      	mov	r1, r0
 80176d6:	4668      	mov	r0, sp
 80176d8:	f7ff fd22 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80176dc:	f8bd 3000 	ldrh.w	r3, [sp]
 80176e0:	8423      	strh	r3, [r4, #32]
 80176e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80176e6:	8463      	strh	r3, [r4, #34]	; 0x22
 80176e8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80176ec:	b002      	add	sp, #8
 80176ee:	bd10      	pop	{r4, pc}

080176f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80176f0:	b513      	push	{r0, r1, r4, lr}
 80176f2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80176f6:	3301      	adds	r3, #1
 80176f8:	4604      	mov	r4, r0
 80176fa:	d109      	bne.n	8017710 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80176fc:	4601      	mov	r1, r0
 80176fe:	4668      	mov	r0, sp
 8017700:	f7ff fd0e 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017704:	f8bd 3000 	ldrh.w	r3, [sp]
 8017708:	8423      	strh	r3, [r4, #32]
 801770a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801770e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017710:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8017714:	b002      	add	sp, #8
 8017716:	bd10      	pop	{r4, pc}

08017718 <_ZN8touchgfx6ScreenC1Ev>:
 8017718:	b570      	push	{r4, r5, r6, lr}
 801771a:	4605      	mov	r5, r0
 801771c:	4b16      	ldr	r3, [pc, #88]	; (8017778 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801771e:	f845 3b04 	str.w	r3, [r5], #4
 8017722:	2300      	movs	r3, #0
 8017724:	8103      	strh	r3, [r0, #8]
 8017726:	8143      	strh	r3, [r0, #10]
 8017728:	8183      	strh	r3, [r0, #12]
 801772a:	81c3      	strh	r3, [r0, #14]
 801772c:	8203      	strh	r3, [r0, #16]
 801772e:	8243      	strh	r3, [r0, #18]
 8017730:	8283      	strh	r3, [r0, #20]
 8017732:	82c3      	strh	r3, [r0, #22]
 8017734:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017738:	6203      	str	r3, [r0, #32]
 801773a:	8483      	strh	r3, [r0, #36]	; 0x24
 801773c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801773e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8017742:	4a0e      	ldr	r2, [pc, #56]	; (801777c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017744:	6343      	str	r3, [r0, #52]	; 0x34
 8017746:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801774a:	4b0d      	ldr	r3, [pc, #52]	; (8017780 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801774c:	6042      	str	r2, [r0, #4]
 801774e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017752:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8017754:	4a0b      	ldr	r2, [pc, #44]	; (8017784 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017756:	4604      	mov	r4, r0
 8017758:	2101      	movs	r1, #1
 801775a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801775e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8017762:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017766:	4628      	mov	r0, r5
 8017768:	4798      	blx	r3
 801776a:	6863      	ldr	r3, [r4, #4]
 801776c:	4628      	mov	r0, r5
 801776e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017770:	4631      	mov	r1, r6
 8017772:	4798      	blx	r3
 8017774:	4620      	mov	r0, r4
 8017776:	bd70      	pop	{r4, r5, r6, pc}
 8017778:	0802f8e4 	.word	0x0802f8e4
 801777c:	0802f148 	.word	0x0802f148
 8017780:	20012fba 	.word	0x20012fba
 8017784:	20012fb8 	.word	0x20012fb8

08017788 <_ZN8touchgfx6Screen4drawEv>:
 8017788:	b507      	push	{r0, r1, r2, lr}
 801778a:	4b09      	ldr	r3, [pc, #36]	; (80177b0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801778c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017790:	4b08      	ldr	r3, [pc, #32]	; (80177b4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017792:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017796:	f9b3 3000 	ldrsh.w	r3, [r3]
 801779a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801779e:	6803      	ldr	r3, [r0, #0]
 80177a0:	2100      	movs	r1, #0
 80177a2:	9100      	str	r1, [sp, #0]
 80177a4:	689b      	ldr	r3, [r3, #8]
 80177a6:	4669      	mov	r1, sp
 80177a8:	4798      	blx	r3
 80177aa:	b003      	add	sp, #12
 80177ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80177b0:	20012fb8 	.word	0x20012fb8
 80177b4:	20012fba 	.word	0x20012fba

080177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80177b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177bc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80177c0:	2b00      	cmp	r3, #0
 80177c2:	b089      	sub	sp, #36	; 0x24
 80177c4:	4680      	mov	r8, r0
 80177c6:	460c      	mov	r4, r1
 80177c8:	4615      	mov	r5, r2
 80177ca:	dd0e      	ble.n	80177ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80177cc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	dd0a      	ble.n	80177ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80177d4:	4628      	mov	r0, r5
 80177d6:	f7ff ff5b 	bl	8017690 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80177da:	4621      	mov	r1, r4
 80177dc:	f7fe fa3d 	bl	8015c5a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80177e0:	69eb      	ldr	r3, [r5, #28]
 80177e2:	b928      	cbnz	r0, 80177f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80177e4:	461d      	mov	r5, r3
 80177e6:	2b00      	cmp	r3, #0
 80177e8:	d1f4      	bne.n	80177d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80177ea:	b009      	add	sp, #36	; 0x24
 80177ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177f0:	ae04      	add	r6, sp, #16
 80177f2:	2b00      	cmp	r3, #0
 80177f4:	f000 80b5 	beq.w	8017962 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80177f8:	682b      	ldr	r3, [r5, #0]
 80177fa:	4629      	mov	r1, r5
 80177fc:	68db      	ldr	r3, [r3, #12]
 80177fe:	a802      	add	r0, sp, #8
 8017800:	4798      	blx	r3
 8017802:	4628      	mov	r0, r5
 8017804:	f7ff ff60 	bl	80176c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017808:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801780c:	4407      	add	r7, r0
 801780e:	4628      	mov	r0, r5
 8017810:	f7ff ff6e 	bl	80176f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017814:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017818:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801781c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017820:	4418      	add	r0, r3
 8017822:	4621      	mov	r1, r4
 8017824:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017828:	f8ad 0012 	strh.w	r0, [sp, #18]
 801782c:	b23f      	sxth	r7, r7
 801782e:	4630      	mov	r0, r6
 8017830:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017834:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017838:	f7f9 f9dc 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801783c:	4628      	mov	r0, r5
 801783e:	f7ff ff27 	bl	8017690 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017842:	4602      	mov	r2, r0
 8017844:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017848:	ab06      	add	r3, sp, #24
 801784a:	e883 0003 	stmia.w	r3, {r0, r1}
 801784e:	4611      	mov	r1, r2
 8017850:	4618      	mov	r0, r3
 8017852:	f7f9 f9cf 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8017856:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801785a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801785e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017862:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017866:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801786a:	4299      	cmp	r1, r3
 801786c:	d10b      	bne.n	8017886 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801786e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017872:	4552      	cmp	r2, sl
 8017874:	d107      	bne.n	8017886 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017876:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801787a:	455a      	cmp	r2, fp
 801787c:	d103      	bne.n	8017886 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801787e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017882:	454a      	cmp	r2, r9
 8017884:	d06d      	beq.n	8017962 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017886:	f1bb 0f00 	cmp.w	fp, #0
 801788a:	dd65      	ble.n	8017958 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801788c:	f1b9 0f00 	cmp.w	r9, #0
 8017890:	dd62      	ble.n	8017958 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017892:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017896:	fa1f f08a 	uxth.w	r0, sl
 801789a:	4552      	cmp	r2, sl
 801789c:	9000      	str	r0, [sp, #0]
 801789e:	da12      	bge.n	80178c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80178a0:	9301      	str	r3, [sp, #4]
 80178a2:	9b00      	ldr	r3, [sp, #0]
 80178a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80178a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80178ac:	1a9a      	subs	r2, r3, r2
 80178ae:	f8ad 1010 	strh.w	r1, [sp, #16]
 80178b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80178b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80178ba:	69ea      	ldr	r2, [r5, #28]
 80178bc:	4631      	mov	r1, r6
 80178be:	4640      	mov	r0, r8
 80178c0:	f7ff ff7a 	bl	80177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80178c4:	9b01      	ldr	r3, [sp, #4]
 80178c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80178ca:	429a      	cmp	r2, r3
 80178cc:	b29f      	uxth	r7, r3
 80178ce:	da0d      	bge.n	80178ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80178d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80178d4:	1aba      	subs	r2, r7, r2
 80178d6:	f8ad a012 	strh.w	sl, [sp, #18]
 80178da:	f8ad 2014 	strh.w	r2, [sp, #20]
 80178de:	f8ad 9016 	strh.w	r9, [sp, #22]
 80178e2:	69ea      	ldr	r2, [r5, #28]
 80178e4:	4631      	mov	r1, r6
 80178e6:	4640      	mov	r0, r8
 80178e8:	f7ff ff66 	bl	80177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80178ec:	8822      	ldrh	r2, [r4, #0]
 80178ee:	88a3      	ldrh	r3, [r4, #4]
 80178f0:	445f      	add	r7, fp
 80178f2:	4413      	add	r3, r2
 80178f4:	b29b      	uxth	r3, r3
 80178f6:	b2bf      	uxth	r7, r7
 80178f8:	b23a      	sxth	r2, r7
 80178fa:	b219      	sxth	r1, r3
 80178fc:	4291      	cmp	r1, r2
 80178fe:	dd0d      	ble.n	801791c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017900:	1bdb      	subs	r3, r3, r7
 8017902:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017906:	f8ad a012 	strh.w	sl, [sp, #18]
 801790a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801790e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017912:	69ea      	ldr	r2, [r5, #28]
 8017914:	4631      	mov	r1, r6
 8017916:	4640      	mov	r0, r8
 8017918:	f7ff ff4e 	bl	80177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801791c:	88e2      	ldrh	r2, [r4, #6]
 801791e:	8863      	ldrh	r3, [r4, #2]
 8017920:	4413      	add	r3, r2
 8017922:	9a00      	ldr	r2, [sp, #0]
 8017924:	444a      	add	r2, r9
 8017926:	b29b      	uxth	r3, r3
 8017928:	fa1f f982 	uxth.w	r9, r2
 801792c:	fa0f f289 	sxth.w	r2, r9
 8017930:	b219      	sxth	r1, r3
 8017932:	428a      	cmp	r2, r1
 8017934:	da15      	bge.n	8017962 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017936:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801793a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801793e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017942:	eba3 0309 	sub.w	r3, r3, r9
 8017946:	f8ad 0010 	strh.w	r0, [sp, #16]
 801794a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801794e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017952:	69ea      	ldr	r2, [r5, #28]
 8017954:	4631      	mov	r1, r6
 8017956:	e001      	b.n	801795c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017958:	69ea      	ldr	r2, [r5, #28]
 801795a:	4621      	mov	r1, r4
 801795c:	4640      	mov	r0, r8
 801795e:	f7ff ff2b 	bl	80177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017962:	4628      	mov	r0, r5
 8017964:	f7ff fe94 	bl	8017690 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017968:	6861      	ldr	r1, [r4, #4]
 801796a:	4602      	mov	r2, r0
 801796c:	6820      	ldr	r0, [r4, #0]
 801796e:	4633      	mov	r3, r6
 8017970:	c303      	stmia	r3!, {r0, r1}
 8017972:	4611      	mov	r1, r2
 8017974:	4630      	mov	r0, r6
 8017976:	f7f9 f93d 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801797a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801797e:	2b00      	cmp	r3, #0
 8017980:	f77f af33 	ble.w	80177ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017984:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017988:	2b00      	cmp	r3, #0
 801798a:	f77f af2e 	ble.w	80177ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801798e:	4628      	mov	r0, r5
 8017990:	f7ff fe9a 	bl	80176c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017994:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017998:	1a18      	subs	r0, r3, r0
 801799a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801799e:	4628      	mov	r0, r5
 80179a0:	f7ff fea6 	bl	80176f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80179a4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80179a8:	1a18      	subs	r0, r3, r0
 80179aa:	f8ad 0012 	strh.w	r0, [sp, #18]
 80179ae:	682b      	ldr	r3, [r5, #0]
 80179b0:	4631      	mov	r1, r6
 80179b2:	689b      	ldr	r3, [r3, #8]
 80179b4:	4628      	mov	r0, r5
 80179b6:	4798      	blx	r3
 80179b8:	e717      	b.n	80177ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080179ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80179ba:	b570      	push	{r4, r5, r6, lr}
 80179bc:	460c      	mov	r4, r1
 80179be:	b086      	sub	sp, #24
 80179c0:	1d06      	adds	r6, r0, #4
 80179c2:	2300      	movs	r3, #0
 80179c4:	4631      	mov	r1, r6
 80179c6:	4605      	mov	r5, r0
 80179c8:	a802      	add	r0, sp, #8
 80179ca:	9301      	str	r3, [sp, #4]
 80179cc:	f7ff fba8 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80179d0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80179d4:	8822      	ldrh	r2, [r4, #0]
 80179d6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80179da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80179de:	f8ad 0014 	strh.w	r0, [sp, #20]
 80179e2:	1ad2      	subs	r2, r2, r3
 80179e4:	8863      	ldrh	r3, [r4, #2]
 80179e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80179ea:	1a5b      	subs	r3, r3, r1
 80179ec:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80179f0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80179f4:	aa01      	add	r2, sp, #4
 80179f6:	a904      	add	r1, sp, #16
 80179f8:	4630      	mov	r0, r6
 80179fa:	f8ad 3012 	strh.w	r3, [sp, #18]
 80179fe:	f7f9 f9d1 	bl	8010da4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017a02:	9a01      	ldr	r2, [sp, #4]
 8017a04:	b11a      	cbz	r2, 8017a0e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017a06:	4621      	mov	r1, r4
 8017a08:	4628      	mov	r0, r5
 8017a0a:	f7ff fed5 	bl	80177b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017a0e:	b006      	add	sp, #24
 8017a10:	bd70      	pop	{r4, r5, r6, pc}

08017a12 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017a12:	b530      	push	{r4, r5, lr}
 8017a14:	4602      	mov	r2, r0
 8017a16:	4604      	mov	r4, r0
 8017a18:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017a1c:	b085      	sub	sp, #20
 8017a1e:	460d      	mov	r5, r1
 8017a20:	6851      	ldr	r1, [r2, #4]
 8017a22:	466b      	mov	r3, sp
 8017a24:	c303      	stmia	r3!, {r0, r1}
 8017a26:	4629      	mov	r1, r5
 8017a28:	4668      	mov	r0, sp
 8017a2a:	f7f9 f8e3 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 8017a2e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8017a32:	b12b      	cbz	r3, 8017a40 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017a34:	4669      	mov	r1, sp
 8017a36:	4620      	mov	r0, r4
 8017a38:	f7ff ffbf 	bl	80179ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017a3c:	b005      	add	sp, #20
 8017a3e:	bd30      	pop	{r4, r5, pc}
 8017a40:	3404      	adds	r4, #4
 8017a42:	4621      	mov	r1, r4
 8017a44:	a802      	add	r0, sp, #8
 8017a46:	f7ff fb6b 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a4a:	f8bd 3000 	ldrh.w	r3, [sp]
 8017a4e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017a52:	1a9b      	subs	r3, r3, r2
 8017a54:	f8ad 3000 	strh.w	r3, [sp]
 8017a58:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017a5c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017a60:	4669      	mov	r1, sp
 8017a62:	1a9b      	subs	r3, r3, r2
 8017a64:	4620      	mov	r0, r4
 8017a66:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017a6a:	f7f9 f962 	bl	8010d32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017a6e:	e7e5      	b.n	8017a3c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017a70 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017a70:	680a      	ldr	r2, [r1, #0]
 8017a72:	460b      	mov	r3, r1
 8017a74:	6992      	ldr	r2, [r2, #24]
 8017a76:	1d01      	adds	r1, r0, #4
 8017a78:	4618      	mov	r0, r3
 8017a7a:	4710      	bx	r2

08017a7c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8017a7c:	4298      	cmp	r0, r3
 8017a7e:	d200      	bcs.n	8017a82 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8017a80:	b913      	cbnz	r3, 8017a88 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8017a82:	440a      	add	r2, r1
 8017a84:	b210      	sxth	r0, r2
 8017a86:	4770      	bx	lr
 8017a88:	ee07 0a90 	vmov	s15, r0
 8017a8c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017a90:	ee07 3a90 	vmov	s15, r3
 8017a94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a98:	eddf 4a15 	vldr	s9, [pc, #84]	; 8017af0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8017a9c:	eddf 5a15 	vldr	s11, [pc, #84]	; 8017af4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8017aa0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017aa4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017aa8:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017aac:	ee07 2a90 	vmov	s15, r2
 8017ab0:	eee7 5a24 	vfma.f32	s11, s14, s9
 8017ab4:	ee27 5a07 	vmul.f32	s10, s14, s14
 8017ab8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017abc:	eee5 6a25 	vfma.f32	s13, s10, s11
 8017ac0:	ee07 1a90 	vmov	s15, r1
 8017ac4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017ac8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017acc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017ad0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ad8:	bfcc      	ite	gt
 8017ada:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017ade:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017ae2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017ae6:	ee17 3a90 	vmov	r3, s15
 8017aea:	b218      	sxth	r0, r3
 8017aec:	4770      	bx	lr
 8017aee:	bf00      	nop
 8017af0:	402ce6b0 	.word	0x402ce6b0
 8017af4:	3fd9cd60 	.word	0x3fd9cd60

08017af8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017af8:	4298      	cmp	r0, r3
 8017afa:	d200      	bcs.n	8017afe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017afc:	b913      	cbnz	r3, 8017b04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8017afe:	440a      	add	r2, r1
 8017b00:	b210      	sxth	r0, r2
 8017b02:	4770      	bx	lr
 8017b04:	ee07 0a90 	vmov	s15, r0
 8017b08:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017b0c:	ee07 3a90 	vmov	s15, r3
 8017b10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b14:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017b18:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017b1c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8017b20:	ee07 2a90 	vmov	s15, r2
 8017b24:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017b28:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017b2c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017b30:	ee07 1a90 	vmov	s15, r1
 8017b34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017b3c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8017b40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017b44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017b48:	bfcc      	ite	gt
 8017b4a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017b4e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017b52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017b56:	ee17 3a90 	vmov	r3, s15
 8017b5a:	b218      	sxth	r0, r3
 8017b5c:	4770      	bx	lr

08017b5e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017b5e:	4298      	cmp	r0, r3
 8017b60:	d200      	bcs.n	8017b64 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017b62:	b913      	cbnz	r3, 8017b6a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017b64:	440a      	add	r2, r1
 8017b66:	b210      	sxth	r0, r2
 8017b68:	4770      	bx	lr
 8017b6a:	ee07 2a90 	vmov	s15, r2
 8017b6e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017b72:	ee07 0a90 	vmov	s15, r0
 8017b76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017b7a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017b7e:	ee07 3a10 	vmov	s14, r3
 8017b82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017b86:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017b8a:	ee07 1a90 	vmov	s15, r1
 8017b8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017b92:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017b96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017b9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017b9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ba2:	bfcc      	ite	gt
 8017ba4:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017ba8:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017bac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017bb0:	ee17 3a90 	vmov	r3, s15
 8017bb4:	b218      	sxth	r0, r3
 8017bb6:	4770      	bx	lr

08017bb8 <_ZN8touchgfx12TextProviderC1Ev>:
 8017bb8:	b538      	push	{r3, r4, r5, lr}
 8017bba:	2500      	movs	r5, #0
 8017bbc:	2302      	movs	r3, #2
 8017bbe:	4604      	mov	r4, r0
 8017bc0:	e9c0 5500 	strd	r5, r5, [r0]
 8017bc4:	7403      	strb	r3, [r0, #16]
 8017bc6:	6145      	str	r5, [r0, #20]
 8017bc8:	7605      	strb	r5, [r0, #24]
 8017bca:	83c5      	strh	r5, [r0, #30]
 8017bcc:	8405      	strh	r5, [r0, #32]
 8017bce:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017bd0:	8705      	strh	r5, [r0, #56]	; 0x38
 8017bd2:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017bd4:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017bd8:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017bdc:	220e      	movs	r2, #14
 8017bde:	4629      	mov	r1, r5
 8017be0:	304c      	adds	r0, #76	; 0x4c
 8017be2:	f013 f9e6 	bl	802afb2 <memset>
 8017be6:	2301      	movs	r3, #1
 8017be8:	4620      	mov	r0, r4
 8017bea:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8017bee:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017bf2:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017bf6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017bfa:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8017bfe:	f7f0 facd 	bl	800819c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017c02:	4620      	mov	r0, r4
 8017c04:	bd38      	pop	{r3, r4, r5, pc}

08017c06 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017c06:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017c08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017c0c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8017c0e:	fab0 f080 	clz	r0, r0
 8017c12:	0940      	lsrs	r0, r0, #5
 8017c14:	4770      	bx	lr

08017c16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017c16:	b530      	push	{r4, r5, lr}
 8017c18:	2500      	movs	r5, #0
 8017c1a:	2401      	movs	r4, #1
 8017c1c:	6843      	ldr	r3, [r0, #4]
 8017c1e:	b913      	cbnz	r3, 8017c26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017c20:	6803      	ldr	r3, [r0, #0]
 8017c22:	b313      	cbz	r3, 8017c6a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017c24:	6043      	str	r3, [r0, #4]
 8017c26:	7e03      	ldrb	r3, [r0, #24]
 8017c28:	b143      	cbz	r3, 8017c3c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017c2a:	6943      	ldr	r3, [r0, #20]
 8017c2c:	b12b      	cbz	r3, 8017c3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017c2e:	881a      	ldrh	r2, [r3, #0]
 8017c30:	b11a      	cbz	r2, 8017c3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017c32:	1c9a      	adds	r2, r3, #2
 8017c34:	6142      	str	r2, [r0, #20]
 8017c36:	8818      	ldrh	r0, [r3, #0]
 8017c38:	bd30      	pop	{r4, r5, pc}
 8017c3a:	7605      	strb	r5, [r0, #24]
 8017c3c:	6843      	ldr	r3, [r0, #4]
 8017c3e:	8819      	ldrh	r1, [r3, #0]
 8017c40:	b199      	cbz	r1, 8017c6a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017c42:	1c9a      	adds	r2, r3, #2
 8017c44:	2902      	cmp	r1, #2
 8017c46:	6042      	str	r2, [r0, #4]
 8017c48:	d1f5      	bne.n	8017c36 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017c4a:	7c03      	ldrb	r3, [r0, #16]
 8017c4c:	2b01      	cmp	r3, #1
 8017c4e:	d8e5      	bhi.n	8017c1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017c50:	1c5a      	adds	r2, r3, #1
 8017c52:	3302      	adds	r3, #2
 8017c54:	7402      	strb	r2, [r0, #16]
 8017c56:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017c5a:	6143      	str	r3, [r0, #20]
 8017c5c:	2b00      	cmp	r3, #0
 8017c5e:	d0dd      	beq.n	8017c1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017c60:	881b      	ldrh	r3, [r3, #0]
 8017c62:	2b00      	cmp	r3, #0
 8017c64:	d0da      	beq.n	8017c1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017c66:	7604      	strb	r4, [r0, #24]
 8017c68:	e7d8      	b.n	8017c1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017c6a:	2000      	movs	r0, #0
 8017c6c:	e7e4      	b.n	8017c38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017c6e:	b430      	push	{r4, r5}
 8017c70:	6001      	str	r1, [r0, #0]
 8017c72:	2100      	movs	r1, #0
 8017c74:	6041      	str	r1, [r0, #4]
 8017c76:	6815      	ldr	r5, [r2, #0]
 8017c78:	6085      	str	r5, [r0, #8]
 8017c7a:	6852      	ldr	r2, [r2, #4]
 8017c7c:	6443      	str	r3, [r0, #68]	; 0x44
 8017c7e:	9b02      	ldr	r3, [sp, #8]
 8017c80:	60c2      	str	r2, [r0, #12]
 8017c82:	7401      	strb	r1, [r0, #16]
 8017c84:	6141      	str	r1, [r0, #20]
 8017c86:	7601      	strb	r1, [r0, #24]
 8017c88:	8701      	strh	r1, [r0, #56]	; 0x38
 8017c8a:	8401      	strh	r1, [r0, #32]
 8017c8c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8017c90:	6483      	str	r3, [r0, #72]	; 0x48
 8017c92:	bc30      	pop	{r4, r5}
 8017c94:	f7f0 ba82 	b.w	800819c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017c98 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017c98:	b408      	push	{r3}
 8017c9a:	b510      	push	{r4, lr}
 8017c9c:	b085      	sub	sp, #20
 8017c9e:	ac07      	add	r4, sp, #28
 8017ca0:	f854 3b04 	ldr.w	r3, [r4], #4
 8017ca4:	9300      	str	r3, [sp, #0]
 8017ca6:	4613      	mov	r3, r2
 8017ca8:	4622      	mov	r2, r4
 8017caa:	9403      	str	r4, [sp, #12]
 8017cac:	f7ff ffdf 	bl	8017c6e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017cb0:	b005      	add	sp, #20
 8017cb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017cb6:	b001      	add	sp, #4
 8017cb8:	4770      	bx	lr

08017cba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017cba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017cbc:	4605      	mov	r5, r0
 8017cbe:	4608      	mov	r0, r1
 8017cc0:	b1e9      	cbz	r1, 8017cfe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8017cc2:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017cc6:	460b      	mov	r3, r1
 8017cc8:	f101 0708 	add.w	r7, r1, #8
 8017ccc:	4622      	mov	r2, r4
 8017cce:	6818      	ldr	r0, [r3, #0]
 8017cd0:	6859      	ldr	r1, [r3, #4]
 8017cd2:	4626      	mov	r6, r4
 8017cd4:	c603      	stmia	r6!, {r0, r1}
 8017cd6:	3308      	adds	r3, #8
 8017cd8:	42bb      	cmp	r3, r7
 8017cda:	4634      	mov	r4, r6
 8017cdc:	d1f7      	bne.n	8017cce <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8017cde:	6818      	ldr	r0, [r3, #0]
 8017ce0:	6030      	str	r0, [r6, #0]
 8017ce2:	889b      	ldrh	r3, [r3, #4]
 8017ce4:	80b3      	strh	r3, [r6, #4]
 8017ce6:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017cea:	015b      	lsls	r3, r3, #5
 8017cec:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017cf0:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017cf4:	430b      	orrs	r3, r1
 8017cf6:	425b      	negs	r3, r3
 8017cf8:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017cfc:	4610      	mov	r0, r2
 8017cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017d00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8017d00:	b538      	push	{r3, r4, r5, lr}
 8017d02:	460c      	mov	r4, r1
 8017d04:	6811      	ldr	r1, [r2, #0]
 8017d06:	4610      	mov	r0, r2
 8017d08:	68cd      	ldr	r5, [r1, #12]
 8017d0a:	4619      	mov	r1, r3
 8017d0c:	47a8      	blx	r5
 8017d0e:	2800      	cmp	r0, #0
 8017d10:	bf08      	it	eq
 8017d12:	4620      	moveq	r0, r4
 8017d14:	bd38      	pop	{r3, r4, r5, pc}
	...

08017d18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017d1a:	4604      	mov	r4, r0
 8017d1c:	4615      	mov	r5, r2
 8017d1e:	4608      	mov	r0, r1
 8017d20:	b93a      	cbnz	r2, 8017d32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017d22:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017d26:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017d2a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017d2e:	4628      	mov	r0, r5
 8017d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017d32:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017d36:	8893      	ldrh	r3, [r2, #4]
 8017d38:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017d3c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017d40:	79ee      	ldrb	r6, [r5, #7]
 8017d42:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017d46:	4316      	orrs	r6, r2
 8017d48:	19da      	adds	r2, r3, r7
 8017d4a:	b291      	uxth	r1, r2
 8017d4c:	291d      	cmp	r1, #29
 8017d4e:	b2b7      	uxth	r7, r6
 8017d50:	d87a      	bhi.n	8017e48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017d52:	2201      	movs	r2, #1
 8017d54:	408a      	lsls	r2, r1
 8017d56:	4975      	ldr	r1, [pc, #468]	; (8017f2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017d58:	420a      	tst	r2, r1
 8017d5a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017d5e:	d12d      	bne.n	8017dbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017d60:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017d64:	d070      	beq.n	8017e48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017d66:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017d6a:	462b      	mov	r3, r5
 8017d6c:	f105 0e08 	add.w	lr, r5, #8
 8017d70:	4615      	mov	r5, r2
 8017d72:	6818      	ldr	r0, [r3, #0]
 8017d74:	6859      	ldr	r1, [r3, #4]
 8017d76:	4694      	mov	ip, r2
 8017d78:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017d7c:	3308      	adds	r3, #8
 8017d7e:	4573      	cmp	r3, lr
 8017d80:	4662      	mov	r2, ip
 8017d82:	d1f6      	bne.n	8017d72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017d84:	6818      	ldr	r0, [r3, #0]
 8017d86:	f8cc 0000 	str.w	r0, [ip]
 8017d8a:	889b      	ldrh	r3, [r3, #4]
 8017d8c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017d90:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017d94:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017d98:	b2b3      	uxth	r3, r6
 8017d9a:	1aca      	subs	r2, r1, r3
 8017d9c:	b292      	uxth	r2, r2
 8017d9e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017da2:	10d2      	asrs	r2, r2, #3
 8017da4:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017da8:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017dac:	4302      	orrs	r2, r0
 8017dae:	1bcf      	subs	r7, r1, r7
 8017db0:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017db4:	1afb      	subs	r3, r7, r3
 8017db6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017dba:	e7b8      	b.n	8017d2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017dbc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017dbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017dc2:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017dc4:	f640 6333 	movw	r3, #3635	; 0xe33
 8017dc8:	4299      	cmp	r1, r3
 8017dca:	d110      	bne.n	8017dee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017dcc:	6803      	ldr	r3, [r0, #0]
 8017dce:	68db      	ldr	r3, [r3, #12]
 8017dd0:	4798      	blx	r3
 8017dd2:	7b41      	ldrb	r1, [r0, #13]
 8017dd4:	00cb      	lsls	r3, r1, #3
 8017dd6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017dda:	7a03      	ldrb	r3, [r0, #8]
 8017ddc:	0648      	lsls	r0, r1, #25
 8017dde:	ea43 0302 	orr.w	r3, r3, r2
 8017de2:	bf44      	itt	mi
 8017de4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017de8:	b21b      	sxthmi	r3, r3
 8017dea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017dee:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017df2:	443b      	add	r3, r7
 8017df4:	4433      	add	r3, r6
 8017df6:	b29b      	uxth	r3, r3
 8017df8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017dfc:	462a      	mov	r2, r5
 8017dfe:	f105 0c08 	add.w	ip, r5, #8
 8017e02:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e06:	4635      	mov	r5, r6
 8017e08:	6810      	ldr	r0, [r2, #0]
 8017e0a:	6851      	ldr	r1, [r2, #4]
 8017e0c:	4637      	mov	r7, r6
 8017e0e:	c703      	stmia	r7!, {r0, r1}
 8017e10:	3208      	adds	r2, #8
 8017e12:	4562      	cmp	r2, ip
 8017e14:	463e      	mov	r6, r7
 8017e16:	d1f7      	bne.n	8017e08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017e18:	6810      	ldr	r0, [r2, #0]
 8017e1a:	6038      	str	r0, [r7, #0]
 8017e1c:	8892      	ldrh	r2, [r2, #4]
 8017e1e:	80ba      	strh	r2, [r7, #4]
 8017e20:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017e24:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017e28:	10db      	asrs	r3, r3, #3
 8017e2a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017e2e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017e32:	4313      	orrs	r3, r2
 8017e34:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017e38:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017e3c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017e40:	1a9b      	subs	r3, r3, r2
 8017e42:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017e46:	e772      	b.n	8017d2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017e48:	f023 0204 	bic.w	r2, r3, #4
 8017e4c:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017e50:	428a      	cmp	r2, r1
 8017e52:	d003      	beq.n	8017e5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017e54:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017e58:	4293      	cmp	r3, r2
 8017e5a:	d120      	bne.n	8017e9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017e5c:	3b01      	subs	r3, #1
 8017e5e:	4602      	mov	r2, r0
 8017e60:	b29b      	uxth	r3, r3
 8017e62:	4629      	mov	r1, r5
 8017e64:	4620      	mov	r0, r4
 8017e66:	f7ff ff4b 	bl	8017d00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017e6a:	7b41      	ldrb	r1, [r0, #13]
 8017e6c:	00cb      	lsls	r3, r1, #3
 8017e6e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e72:	7a03      	ldrb	r3, [r0, #8]
 8017e74:	0649      	lsls	r1, r1, #25
 8017e76:	ea43 0302 	orr.w	r3, r3, r2
 8017e7a:	bf44      	itt	mi
 8017e7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e80:	b21b      	sxthmi	r3, r3
 8017e82:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e86:	7b6b      	ldrb	r3, [r5, #13]
 8017e88:	7aaa      	ldrb	r2, [r5, #10]
 8017e8a:	005b      	lsls	r3, r3, #1
 8017e8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e90:	4313      	orrs	r3, r2
 8017e92:	115a      	asrs	r2, r3, #5
 8017e94:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017e98:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017e9c:	e036      	b.n	8017f0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017e9e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017ea2:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017ea6:	7a2a      	ldrb	r2, [r5, #8]
 8017ea8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017eac:	ea42 0201 	orr.w	r2, r2, r1
 8017eb0:	bf1c      	itt	ne
 8017eb2:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017eb6:	b212      	sxthne	r2, r2
 8017eb8:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017ebc:	f640 6109 	movw	r1, #3593	; 0xe09
 8017ec0:	f023 0210 	bic.w	r2, r3, #16
 8017ec4:	428a      	cmp	r2, r1
 8017ec6:	d003      	beq.n	8017ed0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017ec8:	f640 6213 	movw	r2, #3603	; 0xe13
 8017ecc:	4293      	cmp	r3, r2
 8017ece:	d12a      	bne.n	8017f26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017ed0:	7b6e      	ldrb	r6, [r5, #13]
 8017ed2:	0076      	lsls	r6, r6, #1
 8017ed4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017ed8:	7aae      	ldrb	r6, [r5, #10]
 8017eda:	4316      	orrs	r6, r2
 8017edc:	f640 6213 	movw	r2, #3603	; 0xe13
 8017ee0:	4293      	cmp	r3, r2
 8017ee2:	bf18      	it	ne
 8017ee4:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017ee8:	4602      	mov	r2, r0
 8017eea:	bf14      	ite	ne
 8017eec:	b29b      	uxthne	r3, r3
 8017eee:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017ef2:	4629      	mov	r1, r5
 8017ef4:	4620      	mov	r0, r4
 8017ef6:	f7ff ff03 	bl	8017d00 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017efa:	7b43      	ldrb	r3, [r0, #13]
 8017efc:	7a82      	ldrb	r2, [r0, #10]
 8017efe:	005b      	lsls	r3, r3, #1
 8017f00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017f04:	4313      	orrs	r3, r2
 8017f06:	1af6      	subs	r6, r6, r3
 8017f08:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017f0c:	7b69      	ldrb	r1, [r5, #13]
 8017f0e:	00cb      	lsls	r3, r1, #3
 8017f10:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017f14:	7a2b      	ldrb	r3, [r5, #8]
 8017f16:	4313      	orrs	r3, r2
 8017f18:	064a      	lsls	r2, r1, #25
 8017f1a:	bf44      	itt	mi
 8017f1c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f20:	b21b      	sxthmi	r3, r3
 8017f22:	1bdb      	subs	r3, r3, r7
 8017f24:	e747      	b.n	8017db6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017f26:	2300      	movs	r3, #0
 8017f28:	e7b6      	b.n	8017e98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017f2a:	bf00      	nop
 8017f2c:	3fc00079 	.word	0x3fc00079

08017f30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017f30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017f34:	4604      	mov	r4, r0
 8017f36:	b942      	cbnz	r2, 8017f4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017f38:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017f3c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017f40:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017f44:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017f48:	e047      	b.n	8017fda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017f4a:	7b51      	ldrb	r1, [r2, #13]
 8017f4c:	8893      	ldrh	r3, [r2, #4]
 8017f4e:	010d      	lsls	r5, r1, #4
 8017f50:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017f54:	79d5      	ldrb	r5, [r2, #7]
 8017f56:	4305      	orrs	r5, r0
 8017f58:	2d04      	cmp	r5, #4
 8017f5a:	bfcc      	ite	gt
 8017f5c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017f60:	f04f 0e01 	movle.w	lr, #1
 8017f64:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017f68:	f200 80ab 	bhi.w	80180c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017f6c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017f70:	4283      	cmp	r3, r0
 8017f72:	d216      	bcs.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f74:	f240 605b 	movw	r0, #1627	; 0x65b
 8017f78:	4283      	cmp	r3, r0
 8017f7a:	d859      	bhi.n	8018030 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017f7c:	f240 6057 	movw	r0, #1623	; 0x657
 8017f80:	4283      	cmp	r3, r0
 8017f82:	d20e      	bcs.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f84:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017f88:	d24a      	bcs.n	8018020 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017f8a:	f240 604e 	movw	r0, #1614	; 0x64e
 8017f8e:	4283      	cmp	r3, r0
 8017f90:	d207      	bcs.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017f92:	f240 601a 	movw	r0, #1562	; 0x61a
 8017f96:	4283      	cmp	r3, r0
 8017f98:	d02a      	beq.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017f9a:	d821      	bhi.n	8017fe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017f9c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017fa0:	d35b      	bcc.n	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017fa2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017fa6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017faa:	f040 80d0 	bne.w	801814e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017fae:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017fb2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017fb6:	f040 80ca 	bne.w	801814e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017fba:	00cb      	lsls	r3, r1, #3
 8017fbc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017fc0:	7a13      	ldrb	r3, [r2, #8]
 8017fc2:	0649      	lsls	r1, r1, #25
 8017fc4:	ea43 0300 	orr.w	r3, r3, r0
 8017fc8:	bf44      	itt	mi
 8017fca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017fce:	b21b      	sxthmi	r3, r3
 8017fd0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017fd4:	1b5d      	subs	r5, r3, r5
 8017fd6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017fda:	4610      	mov	r0, r2
 8017fdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017fe0:	f240 604b 	movw	r0, #1611	; 0x64b
 8017fe4:	4283      	cmp	r3, r0
 8017fe6:	d338      	bcc.n	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017fe8:	f240 604c 	movw	r0, #1612	; 0x64c
 8017fec:	4283      	cmp	r3, r0
 8017fee:	d9d8      	bls.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ff0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017ff4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017ff8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ffc:	f040 80f2 	bne.w	80181e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018000:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018004:	f040 80ee 	bne.w	80181e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018008:	00cb      	lsls	r3, r1, #3
 801800a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801800e:	7a13      	ldrb	r3, [r2, #8]
 8018010:	064e      	lsls	r6, r1, #25
 8018012:	ea43 0300 	orr.w	r3, r3, r0
 8018016:	bf44      	itt	mi
 8018018:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801801c:	b21b      	sxthmi	r3, r3
 801801e:	e7d9      	b.n	8017fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018020:	f240 6054 	movw	r0, #1620	; 0x654
 8018024:	4283      	cmp	r3, r0
 8018026:	d8e3      	bhi.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018028:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801802c:	d9e0      	bls.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801802e:	e7b8      	b.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018030:	f240 6074 	movw	r0, #1652	; 0x674
 8018034:	4283      	cmp	r3, r0
 8018036:	d0b4      	beq.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018038:	d82d      	bhi.n	8018096 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801803a:	f240 605e 	movw	r0, #1630	; 0x65e
 801803e:	4283      	cmp	r3, r0
 8018040:	d804      	bhi.n	801804c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018042:	f240 605d 	movw	r0, #1629	; 0x65d
 8018046:	4283      	cmp	r3, r0
 8018048:	d3d2      	bcc.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801804a:	e7aa      	b.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801804c:	f240 605f 	movw	r0, #1631	; 0x65f
 8018050:	4283      	cmp	r3, r0
 8018052:	d0cd      	beq.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018054:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018058:	d0a3      	beq.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801805a:	00cb      	lsls	r3, r1, #3
 801805c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018060:	7a13      	ldrb	r3, [r2, #8]
 8018062:	0649      	lsls	r1, r1, #25
 8018064:	ea43 0300 	orr.w	r3, r3, r0
 8018068:	bf44      	itt	mi
 801806a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801806e:	b21b      	sxthmi	r3, r3
 8018070:	1b5d      	subs	r5, r3, r5
 8018072:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018076:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801807a:	7b53      	ldrb	r3, [r2, #13]
 801807c:	015b      	lsls	r3, r3, #5
 801807e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018082:	7993      	ldrb	r3, [r2, #6]
 8018084:	430b      	orrs	r3, r1
 8018086:	005b      	lsls	r3, r3, #1
 8018088:	2105      	movs	r1, #5
 801808a:	fb93 f3f1 	sdiv	r3, r3, r1
 801808e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018092:	440b      	add	r3, r1
 8018094:	e756      	b.n	8017f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018096:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801809a:	4283      	cmp	r3, r0
 801809c:	d809      	bhi.n	80180b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801809e:	f240 60df 	movw	r0, #1759	; 0x6df
 80180a2:	4283      	cmp	r3, r0
 80180a4:	f4bf af7d 	bcs.w	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180a8:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80180ac:	2b05      	cmp	r3, #5
 80180ae:	d8d4      	bhi.n	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80180b0:	e777      	b.n	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180b2:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80180b6:	4283      	cmp	r3, r0
 80180b8:	d09a      	beq.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80180ba:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80180be:	4283      	cmp	r3, r0
 80180c0:	e7ca      	b.n	8018058 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80180c2:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80180c6:	d22b      	bcs.n	8018120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80180c8:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80180cc:	4283      	cmp	r3, r0
 80180ce:	d28f      	bcs.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80180d0:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80180d4:	4283      	cmp	r3, r0
 80180d6:	d816      	bhi.n	8018106 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80180d8:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80180dc:	4283      	cmp	r3, r0
 80180de:	f4bf af60 	bcs.w	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180e2:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80180e6:	4283      	cmp	r3, r0
 80180e8:	d80a      	bhi.n	8018100 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80180ea:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80180ee:	4283      	cmp	r3, r0
 80180f0:	f4bf af57 	bcs.w	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80180f4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80180f8:	4283      	cmp	r3, r0
 80180fa:	f43f af79 	beq.w	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80180fe:	e7ac      	b.n	801805a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018100:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018104:	e7f8      	b.n	80180f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018106:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801810a:	4283      	cmp	r3, r0
 801810c:	d802      	bhi.n	8018114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801810e:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018112:	e798      	b.n	8018046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018114:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018118:	4283      	cmp	r3, r0
 801811a:	f47f af42 	bne.w	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801811e:	e767      	b.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018120:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018124:	4283      	cmp	r3, r0
 8018126:	f43f af63 	beq.w	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801812a:	d802      	bhi.n	8018132 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801812c:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018130:	e7f2      	b.n	8018118 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018132:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018136:	4283      	cmp	r3, r0
 8018138:	d805      	bhi.n	8018146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801813a:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801813e:	4283      	cmp	r3, r0
 8018140:	f4ff af2f 	bcc.w	8017fa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018144:	e754      	b.n	8017ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018146:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801814a:	4283      	cmp	r3, r0
 801814c:	e7af      	b.n	80180ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801814e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018152:	4617      	mov	r7, r2
 8018154:	f102 0808 	add.w	r8, r2, #8
 8018158:	4666      	mov	r6, ip
 801815a:	6838      	ldr	r0, [r7, #0]
 801815c:	6879      	ldr	r1, [r7, #4]
 801815e:	46e6      	mov	lr, ip
 8018160:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018164:	3708      	adds	r7, #8
 8018166:	4547      	cmp	r7, r8
 8018168:	46f4      	mov	ip, lr
 801816a:	d1f6      	bne.n	801815a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801816c:	6838      	ldr	r0, [r7, #0]
 801816e:	f8ce 0000 	str.w	r0, [lr]
 8018172:	88b9      	ldrh	r1, [r7, #4]
 8018174:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018178:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801817c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018180:	d009      	beq.n	8018196 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018182:	7b51      	ldrb	r1, [r2, #13]
 8018184:	7992      	ldrb	r2, [r2, #6]
 8018186:	0149      	lsls	r1, r1, #5
 8018188:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801818c:	4311      	orrs	r1, r2
 801818e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018192:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018196:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801819a:	b2ad      	uxth	r5, r5
 801819c:	d00d      	beq.n	80181ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801819e:	442b      	add	r3, r5
 80181a0:	b29b      	uxth	r3, r3
 80181a2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80181a6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80181aa:	10db      	asrs	r3, r3, #3
 80181ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80181b0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80181b4:	4313      	orrs	r3, r2
 80181b6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80181ba:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80181be:	00cb      	lsls	r3, r1, #3
 80181c0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80181c4:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80181c8:	064f      	lsls	r7, r1, #25
 80181ca:	ea43 0302 	orr.w	r3, r3, r2
 80181ce:	bf44      	itt	mi
 80181d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80181d4:	b21b      	sxthmi	r3, r3
 80181d6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80181da:	1b5b      	subs	r3, r3, r5
 80181dc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80181e0:	4632      	mov	r2, r6
 80181e2:	e6fa      	b.n	8017fda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80181e4:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80181e8:	4617      	mov	r7, r2
 80181ea:	f102 0908 	add.w	r9, r2, #8
 80181ee:	4666      	mov	r6, ip
 80181f0:	6838      	ldr	r0, [r7, #0]
 80181f2:	6879      	ldr	r1, [r7, #4]
 80181f4:	46e0      	mov	r8, ip
 80181f6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80181fa:	3708      	adds	r7, #8
 80181fc:	454f      	cmp	r7, r9
 80181fe:	46c4      	mov	ip, r8
 8018200:	d1f6      	bne.n	80181f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018202:	6838      	ldr	r0, [r7, #0]
 8018204:	f8c8 0000 	str.w	r0, [r8]
 8018208:	88b9      	ldrh	r1, [r7, #4]
 801820a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801820e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018212:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018216:	d009      	beq.n	801822c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018218:	7b51      	ldrb	r1, [r2, #13]
 801821a:	7992      	ldrb	r2, [r2, #6]
 801821c:	0149      	lsls	r1, r1, #5
 801821e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018222:	4311      	orrs	r1, r2
 8018224:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018228:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801822c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018230:	d00e      	beq.n	8018250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018232:	eba3 030e 	sub.w	r3, r3, lr
 8018236:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801823a:	b29b      	uxth	r3, r3
 801823c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018240:	10db      	asrs	r3, r3, #3
 8018242:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018246:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801824a:	4313      	orrs	r3, r2
 801824c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018250:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018254:	00cb      	lsls	r3, r1, #3
 8018256:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801825a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801825e:	0648      	lsls	r0, r1, #25
 8018260:	ea43 0302 	orr.w	r3, r3, r2
 8018264:	bf44      	itt	mi
 8018266:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801826a:	b21b      	sxthmi	r3, r3
 801826c:	1b5d      	subs	r5, r3, r5
 801826e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018272:	e7b5      	b.n	80181e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018278:	461e      	mov	r6, r3
 801827a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801827c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018280:	4604      	mov	r4, r0
 8018282:	4617      	mov	r7, r2
 8018284:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018288:	f7ef ff46 	bl	8008118 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801828c:	4605      	mov	r5, r0
 801828e:	b918      	cbnz	r0, 8018298 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018290:	6030      	str	r0, [r6, #0]
 8018292:	4628      	mov	r0, r5
 8018294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018298:	683b      	ldr	r3, [r7, #0]
 801829a:	4601      	mov	r1, r0
 801829c:	68db      	ldr	r3, [r3, #12]
 801829e:	4638      	mov	r0, r7
 80182a0:	4798      	blx	r3
 80182a2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80182a6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80182aa:	4602      	mov	r2, r0
 80182ac:	6030      	str	r0, [r6, #0]
 80182ae:	d213      	bcs.n	80182d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80182b0:	4643      	mov	r3, r8
 80182b2:	4639      	mov	r1, r7
 80182b4:	4620      	mov	r0, r4
 80182b6:	f7ff fe3b 	bl	8017f30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80182ba:	6030      	str	r0, [r6, #0]
 80182bc:	6833      	ldr	r3, [r6, #0]
 80182be:	b143      	cbz	r3, 80182d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80182c0:	7b5a      	ldrb	r2, [r3, #13]
 80182c2:	7a9b      	ldrb	r3, [r3, #10]
 80182c4:	0052      	lsls	r2, r2, #1
 80182c6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80182ca:	4313      	orrs	r3, r2
 80182cc:	bf0c      	ite	eq
 80182ce:	2301      	moveq	r3, #1
 80182d0:	2300      	movne	r3, #0
 80182d2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80182d6:	e7dc      	b.n	8018292 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80182d8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80182dc:	b29b      	uxth	r3, r3
 80182de:	2b7f      	cmp	r3, #127	; 0x7f
 80182e0:	d804      	bhi.n	80182ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80182e2:	4639      	mov	r1, r7
 80182e4:	4620      	mov	r0, r4
 80182e6:	f7ff fd17 	bl	8017d18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80182ea:	e7e6      	b.n	80182ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80182ec:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80182f0:	2b00      	cmp	r3, #0
 80182f2:	d0e3      	beq.n	80182bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80182f4:	f640 1302 	movw	r3, #2306	; 0x902
 80182f8:	429d      	cmp	r5, r3
 80182fa:	d1df      	bne.n	80182bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80182fc:	4601      	mov	r1, r0
 80182fe:	4620      	mov	r0, r4
 8018300:	f7ff fcdb 	bl	8017cba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018304:	e7d9      	b.n	80182ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018306 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018306:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801830a:	461e      	mov	r6, r3
 801830c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801830e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018312:	4604      	mov	r4, r0
 8018314:	4617      	mov	r7, r2
 8018316:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801831a:	f7ef fefd 	bl	8008118 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801831e:	4605      	mov	r5, r0
 8018320:	b918      	cbnz	r0, 801832a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018322:	6030      	str	r0, [r6, #0]
 8018324:	4628      	mov	r0, r5
 8018326:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801832a:	683b      	ldr	r3, [r7, #0]
 801832c:	4601      	mov	r1, r0
 801832e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018332:	4638      	mov	r0, r7
 8018334:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018338:	47c8      	blx	r9
 801833a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801833e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018342:	4602      	mov	r2, r0
 8018344:	6030      	str	r0, [r6, #0]
 8018346:	d213      	bcs.n	8018370 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018348:	4643      	mov	r3, r8
 801834a:	4639      	mov	r1, r7
 801834c:	4620      	mov	r0, r4
 801834e:	f7ff fdef 	bl	8017f30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018352:	6030      	str	r0, [r6, #0]
 8018354:	6833      	ldr	r3, [r6, #0]
 8018356:	b143      	cbz	r3, 801836a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018358:	7b5a      	ldrb	r2, [r3, #13]
 801835a:	7a9b      	ldrb	r3, [r3, #10]
 801835c:	0052      	lsls	r2, r2, #1
 801835e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018362:	4313      	orrs	r3, r2
 8018364:	bf0c      	ite	eq
 8018366:	2301      	moveq	r3, #1
 8018368:	2300      	movne	r3, #0
 801836a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801836e:	e7d9      	b.n	8018324 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018370:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018374:	b29b      	uxth	r3, r3
 8018376:	2b7f      	cmp	r3, #127	; 0x7f
 8018378:	d804      	bhi.n	8018384 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801837a:	4639      	mov	r1, r7
 801837c:	4620      	mov	r0, r4
 801837e:	f7ff fccb 	bl	8017d18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018382:	e7e6      	b.n	8018352 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018384:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018388:	2b00      	cmp	r3, #0
 801838a:	d0e3      	beq.n	8018354 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801838c:	f640 1302 	movw	r3, #2306	; 0x902
 8018390:	429d      	cmp	r5, r3
 8018392:	d1df      	bne.n	8018354 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018394:	4601      	mov	r1, r0
 8018396:	4620      	mov	r0, r4
 8018398:	f7ff fc8f 	bl	8017cba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801839c:	e7d9      	b.n	8018352 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801839e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801839e:	b510      	push	{r4, lr}
 80183a0:	4604      	mov	r4, r0
 80183a2:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80183a6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80183a8:	b1f1      	cbz	r1, 80183e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80183aa:	2b0a      	cmp	r3, #10
 80183ac:	d02f      	beq.n	801840e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80183ae:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80183b0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80183b4:	3901      	subs	r1, #1
 80183b6:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80183b8:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80183bc:	1c51      	adds	r1, r2, #1
 80183be:	b289      	uxth	r1, r1
 80183c0:	2901      	cmp	r1, #1
 80183c2:	bf84      	itt	hi
 80183c4:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80183c8:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80183ca:	f103 0201 	add.w	r2, r3, #1
 80183ce:	8722      	strh	r2, [r4, #56]	; 0x38
 80183d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80183d2:	bf98      	it	ls
 80183d4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80183d6:	4413      	add	r3, r2
 80183d8:	b29b      	uxth	r3, r3
 80183da:	2b09      	cmp	r3, #9
 80183dc:	bf88      	it	hi
 80183de:	3b0a      	subhi	r3, #10
 80183e0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80183e4:	8458      	strh	r0, [r3, #34]	; 0x22
 80183e6:	e7dc      	b.n	80183a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80183e8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80183ea:	2b0a      	cmp	r3, #10
 80183ec:	d00f      	beq.n	801840e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80183ee:	4620      	mov	r0, r4
 80183f0:	f7ff fc11 	bl	8017c16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80183f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80183f6:	1c5a      	adds	r2, r3, #1
 80183f8:	8722      	strh	r2, [r4, #56]	; 0x38
 80183fa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80183fc:	4413      	add	r3, r2
 80183fe:	b29b      	uxth	r3, r3
 8018400:	2b09      	cmp	r3, #9
 8018402:	bf88      	it	hi
 8018404:	3b0a      	subhi	r3, #10
 8018406:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801840a:	8458      	strh	r0, [r3, #34]	; 0x22
 801840c:	e7ec      	b.n	80183e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801840e:	bd10      	pop	{r4, pc}

08018410 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018410:	b538      	push	{r3, r4, r5, lr}
 8018412:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018414:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018418:	4604      	mov	r4, r0
 801841a:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801841c:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801841e:	3a01      	subs	r2, #1
 8018420:	8702      	strh	r2, [r0, #56]	; 0x38
 8018422:	1c5a      	adds	r2, r3, #1
 8018424:	b292      	uxth	r2, r2
 8018426:	2a09      	cmp	r2, #9
 8018428:	bf86      	itte	hi
 801842a:	3b09      	subhi	r3, #9
 801842c:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801842e:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018430:	f7ff ffb5 	bl	801839e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018434:	8c23      	ldrh	r3, [r4, #32]
 8018436:	2b01      	cmp	r3, #1
 8018438:	bf9c      	itt	ls
 801843a:	3301      	addls	r3, #1
 801843c:	8423      	strhls	r3, [r4, #32]
 801843e:	8be3      	ldrh	r3, [r4, #30]
 8018440:	b90b      	cbnz	r3, 8018446 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018442:	2302      	movs	r3, #2
 8018444:	83e3      	strh	r3, [r4, #30]
 8018446:	8be3      	ldrh	r3, [r4, #30]
 8018448:	3b01      	subs	r3, #1
 801844a:	b29b      	uxth	r3, r3
 801844c:	83e3      	strh	r3, [r4, #30]
 801844e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018452:	4628      	mov	r0, r5
 8018454:	8365      	strh	r5, [r4, #26]
 8018456:	bd38      	pop	{r3, r4, r5, pc}

08018458 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018458:	428a      	cmp	r2, r1
 801845a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801845e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018460:	d931      	bls.n	80184c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018462:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018464:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018468:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801846c:	19ee      	adds	r6, r5, r7
 801846e:	1a54      	subs	r4, r2, r1
 8018470:	3e01      	subs	r6, #1
 8018472:	fa1f fe84 	uxth.w	lr, r4
 8018476:	b2b4      	uxth	r4, r6
 8018478:	eba4 090e 	sub.w	r9, r4, lr
 801847c:	fa1f f989 	uxth.w	r9, r9
 8018480:	2c09      	cmp	r4, #9
 8018482:	4626      	mov	r6, r4
 8018484:	bf88      	it	hi
 8018486:	f1a4 060a 	subhi.w	r6, r4, #10
 801848a:	f1bc 0f00 	cmp.w	ip, #0
 801848e:	bf08      	it	eq
 8018490:	f04f 0c02 	moveq.w	ip, #2
 8018494:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018498:	f10c 3cff 	add.w	ip, ip, #4294967295
 801849c:	fa1f fc8c 	uxth.w	ip, ip
 80184a0:	3c01      	subs	r4, #1
 80184a2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80184a6:	b2a4      	uxth	r4, r4
 80184a8:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80184ac:	454c      	cmp	r4, r9
 80184ae:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80184b2:	d1e5      	bne.n	8018480 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80184b4:	eba5 050e 	sub.w	r5, r5, lr
 80184b8:	eb0e 0408 	add.w	r4, lr, r8
 80184bc:	8705      	strh	r5, [r0, #56]	; 0x38
 80184be:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80184c2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80184c6:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80184c8:	1a64      	subs	r4, r4, r1
 80184ca:	4439      	add	r1, r7
 80184cc:	b289      	uxth	r1, r1
 80184ce:	2909      	cmp	r1, #9
 80184d0:	bf88      	it	hi
 80184d2:	390a      	subhi	r1, #10
 80184d4:	8704      	strh	r4, [r0, #56]	; 0x38
 80184d6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80184d8:	250a      	movs	r5, #10
 80184da:	b18a      	cbz	r2, 8018500 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80184dc:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80184de:	3a01      	subs	r2, #1
 80184e0:	b292      	uxth	r2, r2
 80184e2:	3101      	adds	r1, #1
 80184e4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80184e8:	8701      	strh	r1, [r0, #56]	; 0x38
 80184ea:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80184ec:	b901      	cbnz	r1, 80184f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80184ee:	86c5      	strh	r5, [r0, #54]	; 0x36
 80184f0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80184f2:	3901      	subs	r1, #1
 80184f4:	b289      	uxth	r1, r1
 80184f6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80184f8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80184fc:	844c      	strh	r4, [r1, #34]	; 0x22
 80184fe:	e7ec      	b.n	80184da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018500:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018504:	f7ff bf4b 	b.w	801839e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018508 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018508:	b570      	push	{r4, r5, r6, lr}
 801850a:	2500      	movs	r5, #0
 801850c:	4295      	cmp	r5, r2
 801850e:	d011      	beq.n	8018534 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018510:	8bc4      	ldrh	r4, [r0, #30]
 8018512:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018516:	4414      	add	r4, r2
 8018518:	3c01      	subs	r4, #1
 801851a:	1b64      	subs	r4, r4, r5
 801851c:	b2a4      	uxth	r4, r4
 801851e:	2c01      	cmp	r4, #1
 8018520:	bf88      	it	hi
 8018522:	3c02      	subhi	r4, #2
 8018524:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018528:	8b64      	ldrh	r4, [r4, #26]
 801852a:	42b4      	cmp	r4, r6
 801852c:	d117      	bne.n	801855e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801852e:	3501      	adds	r5, #1
 8018530:	b2ad      	uxth	r5, r5
 8018532:	e7eb      	b.n	801850c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018534:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018538:	2400      	movs	r4, #0
 801853a:	4413      	add	r3, r2
 801853c:	b2a2      	uxth	r2, r4
 801853e:	429a      	cmp	r2, r3
 8018540:	da0f      	bge.n	8018562 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018542:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018544:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018548:	4432      	add	r2, r6
 801854a:	b292      	uxth	r2, r2
 801854c:	2a09      	cmp	r2, #9
 801854e:	bf88      	it	hi
 8018550:	3a0a      	subhi	r2, #10
 8018552:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018556:	3401      	adds	r4, #1
 8018558:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801855a:	42aa      	cmp	r2, r5
 801855c:	d0ee      	beq.n	801853c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801855e:	2000      	movs	r0, #0
 8018560:	bd70      	pop	{r4, r5, r6, pc}
 8018562:	2001      	movs	r0, #1
 8018564:	e7fc      	b.n	8018560 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018566 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018566:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801856a:	4605      	mov	r5, r0
 801856c:	4616      	mov	r6, r2
 801856e:	1c8c      	adds	r4, r1, #2
 8018570:	8809      	ldrh	r1, [r1, #0]
 8018572:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018576:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801857a:	42b3      	cmp	r3, r6
 801857c:	d124      	bne.n	80185c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801857e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018582:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018586:	f001 070f 	and.w	r7, r1, #15
 801858a:	f8cd 8000 	str.w	r8, [sp]
 801858e:	464b      	mov	r3, r9
 8018590:	4652      	mov	r2, sl
 8018592:	4621      	mov	r1, r4
 8018594:	4628      	mov	r0, r5
 8018596:	f7ff ffb7 	bl	8018508 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801859a:	4683      	mov	fp, r0
 801859c:	b168      	cbz	r0, 80185ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801859e:	eb0a 0109 	add.w	r1, sl, r9
 80185a2:	4441      	add	r1, r8
 80185a4:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80185a8:	463a      	mov	r2, r7
 80185aa:	4649      	mov	r1, r9
 80185ac:	4628      	mov	r0, r5
 80185ae:	f7ff ff53 	bl	8018458 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80185b2:	4658      	mov	r0, fp
 80185b4:	b003      	add	sp, #12
 80185b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185ba:	eb07 010a 	add.w	r1, r7, sl
 80185be:	4449      	add	r1, r9
 80185c0:	4441      	add	r1, r8
 80185c2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80185c6:	e7d2      	b.n	801856e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80185c8:	f04f 0b00 	mov.w	fp, #0
 80185cc:	e7f1      	b.n	80185b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080185ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80185ce:	b570      	push	{r4, r5, r6, lr}
 80185d0:	8810      	ldrh	r0, [r2, #0]
 80185d2:	4298      	cmp	r0, r3
 80185d4:	d817      	bhi.n	8018606 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80185d6:	1e48      	subs	r0, r1, #1
 80185d8:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80185dc:	4298      	cmp	r0, r3
 80185de:	d312      	bcc.n	8018606 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80185e0:	2400      	movs	r4, #0
 80185e2:	428c      	cmp	r4, r1
 80185e4:	d20f      	bcs.n	8018606 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80185e6:	1860      	adds	r0, r4, r1
 80185e8:	1040      	asrs	r0, r0, #1
 80185ea:	0085      	lsls	r5, r0, #2
 80185ec:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80185f0:	42b3      	cmp	r3, r6
 80185f2:	d902      	bls.n	80185fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80185f4:	3001      	adds	r0, #1
 80185f6:	b284      	uxth	r4, r0
 80185f8:	e7f3      	b.n	80185e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80185fa:	d201      	bcs.n	8018600 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80185fc:	b281      	uxth	r1, r0
 80185fe:	e7f0      	b.n	80185e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018600:	442a      	add	r2, r5
 8018602:	8850      	ldrh	r0, [r2, #2]
 8018604:	bd70      	pop	{r4, r5, r6, pc}
 8018606:	2000      	movs	r0, #0
 8018608:	e7fc      	b.n	8018604 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801860a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801860a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801860e:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018610:	886f      	ldrh	r7, [r5, #2]
 8018612:	4604      	mov	r4, r0
 8018614:	087f      	lsrs	r7, r7, #1
 8018616:	260b      	movs	r6, #11
 8018618:	3e01      	subs	r6, #1
 801861a:	d013      	beq.n	8018644 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801861c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801861e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018622:	462a      	mov	r2, r5
 8018624:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018628:	4639      	mov	r1, r7
 801862a:	4643      	mov	r3, r8
 801862c:	4620      	mov	r0, r4
 801862e:	f7ff ffce 	bl	80185ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018632:	b138      	cbz	r0, 8018644 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018634:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018638:	4642      	mov	r2, r8
 801863a:	4620      	mov	r0, r4
 801863c:	f7ff ff93 	bl	8018566 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018640:	2800      	cmp	r0, #0
 8018642:	d1e9      	bne.n	8018618 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018648 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018648:	b570      	push	{r4, r5, r6, lr}
 801864a:	694a      	ldr	r2, [r1, #20]
 801864c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801864e:	684b      	ldr	r3, [r1, #4]
 8018650:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8018652:	1b54      	subs	r4, r2, r5
 8018654:	f000 8106 	beq.w	8018864 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018658:	1b9b      	subs	r3, r3, r6
 801865a:	d003      	beq.n	8018664 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801865c:	4363      	muls	r3, r4
 801865e:	2210      	movs	r2, #16
 8018660:	fb93 f3f2 	sdiv	r3, r3, r2
 8018664:	680c      	ldr	r4, [r1, #0]
 8018666:	698a      	ldr	r2, [r1, #24]
 8018668:	1b65      	subs	r5, r4, r5
 801866a:	f000 80fd 	beq.w	8018868 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801866e:	1b92      	subs	r2, r2, r6
 8018670:	d003      	beq.n	801867a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018672:	436a      	muls	r2, r5
 8018674:	2410      	movs	r4, #16
 8018676:	fb92 f2f4 	sdiv	r2, r2, r4
 801867a:	1a9b      	subs	r3, r3, r2
 801867c:	ee07 3a90 	vmov	s15, r3
 8018680:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80188a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018684:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018688:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801868c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018690:	460a      	mov	r2, r1
 8018692:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018696:	4603      	mov	r3, r0
 8018698:	f100 040c 	add.w	r4, r0, #12
 801869c:	eeb1 6a43 	vneg.f32	s12, s6
 80186a0:	edd2 7a02 	vldr	s15, [r2, #8]
 80186a4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80186a8:	3214      	adds	r2, #20
 80186aa:	ece3 6a01 	vstmia	r3!, {s13}
 80186ae:	ed52 7a02 	vldr	s15, [r2, #-8]
 80186b2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80186b6:	429c      	cmp	r4, r3
 80186b8:	edc3 7a02 	vstr	s15, [r3, #8]
 80186bc:	ed52 7a01 	vldr	s15, [r2, #-4]
 80186c0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80186c4:	edc3 7a05 	vstr	s15, [r3, #20]
 80186c8:	d1ea      	bne.n	80186a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80186ca:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80186cc:	698b      	ldr	r3, [r1, #24]
 80186ce:	edd0 4a02 	vldr	s9, [r0, #8]
 80186d2:	edd0 3a00 	vldr	s7, [r0]
 80186d6:	edd0 6a01 	vldr	s13, [r0, #4]
 80186da:	ed90 5a05 	vldr	s10, [r0, #20]
 80186de:	ed90 2a03 	vldr	s4, [r0, #12]
 80186e2:	edd0 5a04 	vldr	s11, [r0, #16]
 80186e6:	ed90 1a07 	vldr	s2, [r0, #28]
 80186ea:	edd0 2a06 	vldr	s5, [r0, #24]
 80186ee:	1a9b      	subs	r3, r3, r2
 80186f0:	ee07 3a90 	vmov	s15, r3
 80186f4:	684b      	ldr	r3, [r1, #4]
 80186f6:	1a9b      	subs	r3, r3, r2
 80186f8:	ee07 3a10 	vmov	s14, r3
 80186fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018700:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018704:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018708:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801870c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018710:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018714:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018718:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801871c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018720:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018724:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018728:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801872c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801872e:	694a      	ldr	r2, [r1, #20]
 8018730:	1b13      	subs	r3, r2, r4
 8018732:	ee07 3a10 	vmov	s14, r3
 8018736:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801873a:	680b      	ldr	r3, [r1, #0]
 801873c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018740:	1b1b      	subs	r3, r3, r4
 8018742:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018746:	ee07 3a10 	vmov	s14, r3
 801874a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801874e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018752:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018756:	ee64 4a86 	vmul.f32	s9, s9, s12
 801875a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801875e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018760:	698b      	ldr	r3, [r1, #24]
 8018762:	1a9b      	subs	r3, r3, r2
 8018764:	ee06 3a90 	vmov	s13, r3
 8018768:	684b      	ldr	r3, [r1, #4]
 801876a:	1a9b      	subs	r3, r3, r2
 801876c:	ee07 3a10 	vmov	s14, r3
 8018770:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018774:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018778:	ee66 6a84 	vmul.f32	s13, s13, s8
 801877c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018780:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018784:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018788:	ee66 6a83 	vmul.f32	s13, s13, s6
 801878c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8018790:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018792:	694a      	ldr	r2, [r1, #20]
 8018794:	1b13      	subs	r3, r2, r4
 8018796:	ee07 3a10 	vmov	s14, r3
 801879a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801879e:	680b      	ldr	r3, [r1, #0]
 80187a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80187a4:	1b1b      	subs	r3, r3, r4
 80187a6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80187aa:	ee07 3a10 	vmov	s14, r3
 80187ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80187b2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80187b6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80187ba:	edd0 5a08 	vldr	s11, [r0, #32]
 80187be:	ee25 5a06 	vmul.f32	s10, s10, s12
 80187c2:	ee31 1a65 	vsub.f32	s2, s2, s11
 80187c6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80187ca:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80187cc:	698b      	ldr	r3, [r1, #24]
 80187ce:	1a9b      	subs	r3, r3, r2
 80187d0:	ee07 3a10 	vmov	s14, r3
 80187d4:	684b      	ldr	r3, [r1, #4]
 80187d6:	1a9b      	subs	r3, r3, r2
 80187d8:	ee01 3a90 	vmov	s3, r3
 80187dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80187e0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80187e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80187e8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80187ec:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80187f0:	ee61 1a84 	vmul.f32	s3, s3, s8
 80187f4:	eea1 7a21 	vfma.f32	s14, s2, s3
 80187f8:	ee27 7a03 	vmul.f32	s14, s14, s6
 80187fc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018800:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8018802:	694a      	ldr	r2, [r1, #20]
 8018804:	1b13      	subs	r3, r2, r4
 8018806:	ee03 3a10 	vmov	s6, r3
 801880a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801880e:	680b      	ldr	r3, [r1, #0]
 8018810:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018814:	1b1b      	subs	r3, r3, r4
 8018816:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801881a:	ee03 3a10 	vmov	s6, r3
 801881e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018822:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018826:	eee1 5a04 	vfma.f32	s11, s2, s8
 801882a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801882e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018832:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018836:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801883a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801883e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018842:	dd13      	ble.n	801886c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018844:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018848:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801884c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801884e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018852:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801885a:	dd15      	ble.n	8018888 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801885c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018860:	6403      	str	r3, [r0, #64]	; 0x40
 8018862:	bd70      	pop	{r4, r5, r6, pc}
 8018864:	4623      	mov	r3, r4
 8018866:	e6fd      	b.n	8018664 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018868:	462a      	mov	r2, r5
 801886a:	e706      	b.n	801867a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801886c:	d502      	bpl.n	8018874 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801886e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8018872:	e7e9      	b.n	8018848 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018874:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018878:	eea3 2a85 	vfma.f32	s4, s7, s10
 801887c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018884:	dade      	bge.n	8018844 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018886:	e7f2      	b.n	801886e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018888:	d502      	bpl.n	8018890 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801888a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801888e:	e7e7      	b.n	8018860 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018890:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018894:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018898:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801889c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80188a0:	dadc      	bge.n	801885c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80188a2:	e7f2      	b.n	801888a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80188a4:	3d800000 	.word	0x3d800000

080188a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80188a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80188ac:	2714      	movs	r7, #20
 80188ae:	435f      	muls	r7, r3
 80188b0:	eb02 0c07 	add.w	ip, r2, r7
 80188b4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80188b8:	f115 0e0f 	adds.w	lr, r5, #15
 80188bc:	f100 80a2 	bmi.w	8018a04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80188c0:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80188c4:	9c08      	ldr	r4, [sp, #32]
 80188c6:	f8c0 e014 	str.w	lr, [r0, #20]
 80188ca:	2614      	movs	r6, #20
 80188cc:	4366      	muls	r6, r4
 80188ce:	eb02 0806 	add.w	r8, r2, r6
 80188d2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80188d6:	f115 040f 	adds.w	r4, r5, #15
 80188da:	f100 809f 	bmi.w	8018a1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80188de:	1124      	asrs	r4, r4, #4
 80188e0:	eba4 040e 	sub.w	r4, r4, lr
 80188e4:	6184      	str	r4, [r0, #24]
 80188e6:	2c00      	cmp	r4, #0
 80188e8:	f000 808a 	beq.w	8018a00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80188ec:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80188f0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80188f4:	5995      	ldr	r5, [r2, r6]
 80188f6:	eba4 0809 	sub.w	r8, r4, r9
 80188fa:	59d4      	ldr	r4, [r2, r7]
 80188fc:	eba5 0a04 	sub.w	sl, r5, r4
 8018900:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018904:	fb0e fe05 	mul.w	lr, lr, r5
 8018908:	fb0a ee19 	mls	lr, sl, r9, lr
 801890c:	fb08 e404 	mla	r4, r8, r4, lr
 8018910:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018914:	3c01      	subs	r4, #1
 8018916:	19a4      	adds	r4, r4, r6
 8018918:	f100 808c 	bmi.w	8018a34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801891c:	fb94 fef6 	sdiv	lr, r4, r6
 8018920:	f8c0 e000 	str.w	lr, [r0]
 8018924:	fb06 441e 	mls	r4, r6, lr, r4
 8018928:	6104      	str	r4, [r0, #16]
 801892a:	2d00      	cmp	r5, #0
 801892c:	f2c0 8095 	blt.w	8018a5a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018930:	fb95 f4f6 	sdiv	r4, r5, r6
 8018934:	6044      	str	r4, [r0, #4]
 8018936:	fb06 5514 	mls	r5, r6, r4, r5
 801893a:	6085      	str	r5, [r0, #8]
 801893c:	60c6      	str	r6, [r0, #12]
 801893e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018942:	6945      	ldr	r5, [r0, #20]
 8018944:	59d2      	ldr	r2, [r2, r7]
 8018946:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018a7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801894a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801894e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018952:	ee07 4a10 	vmov	s14, r4
 8018956:	6804      	ldr	r4, [r0, #0]
 8018958:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801895c:	ee07 2a90 	vmov	s15, r2
 8018960:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018968:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801896c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018970:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018974:	edd3 6a00 	vldr	s13, [r3]
 8018978:	eee6 6a07 	vfma.f32	s13, s12, s14
 801897c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8018980:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018984:	edc0 6a07 	vstr	s13, [r0, #28]
 8018988:	edd0 6a01 	vldr	s13, [r0, #4]
 801898c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8018990:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018994:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018998:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801899c:	ed80 6a08 	vstr	s12, [r0, #32]
 80189a0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80189a2:	6242      	str	r2, [r0, #36]	; 0x24
 80189a4:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80189a8:	ed93 6a03 	vldr	s12, [r3, #12]
 80189ac:	eea5 6a87 	vfma.f32	s12, s11, s14
 80189b0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80189b4:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80189b8:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80189bc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80189c0:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80189c4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80189c8:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80189cc:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80189ce:	6302      	str	r2, [r0, #48]	; 0x30
 80189d0:	ed93 6a06 	vldr	s12, [r3, #24]
 80189d4:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80189d8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80189dc:	eeb0 7a46 	vmov.f32	s14, s12
 80189e0:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80189e4:	eea6 7a27 	vfma.f32	s14, s12, s15
 80189e8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80189ec:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80189f0:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80189f4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80189f8:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80189fc:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80189fe:	63c3      	str	r3, [r0, #60]	; 0x3c
 8018a00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018a04:	f1c5 0501 	rsb	r5, r5, #1
 8018a08:	f015 050f 	ands.w	r5, r5, #15
 8018a0c:	bf18      	it	ne
 8018a0e:	2501      	movne	r5, #1
 8018a10:	2410      	movs	r4, #16
 8018a12:	fb9e fef4 	sdiv	lr, lr, r4
 8018a16:	ebae 0e05 	sub.w	lr, lr, r5
 8018a1a:	e753      	b.n	80188c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018a1c:	f1c5 0501 	rsb	r5, r5, #1
 8018a20:	f015 050f 	ands.w	r5, r5, #15
 8018a24:	bf18      	it	ne
 8018a26:	2501      	movne	r5, #1
 8018a28:	f04f 0910 	mov.w	r9, #16
 8018a2c:	fb94 f4f9 	sdiv	r4, r4, r9
 8018a30:	1b64      	subs	r4, r4, r5
 8018a32:	e755      	b.n	80188e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018a34:	4264      	negs	r4, r4
 8018a36:	fb94 fef6 	sdiv	lr, r4, r6
 8018a3a:	f1ce 0800 	rsb	r8, lr, #0
 8018a3e:	fb06 441e 	mls	r4, r6, lr, r4
 8018a42:	f8c0 8000 	str.w	r8, [r0]
 8018a46:	6104      	str	r4, [r0, #16]
 8018a48:	2c00      	cmp	r4, #0
 8018a4a:	f43f af6e 	beq.w	801892a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018a4e:	ea6f 0e0e 	mvn.w	lr, lr
 8018a52:	f8c0 e000 	str.w	lr, [r0]
 8018a56:	1b34      	subs	r4, r6, r4
 8018a58:	e766      	b.n	8018928 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018a5a:	426d      	negs	r5, r5
 8018a5c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018a60:	f1c4 0e00 	rsb	lr, r4, #0
 8018a64:	fb06 5514 	mls	r5, r6, r4, r5
 8018a68:	f8c0 e004 	str.w	lr, [r0, #4]
 8018a6c:	6085      	str	r5, [r0, #8]
 8018a6e:	2d00      	cmp	r5, #0
 8018a70:	f43f af64 	beq.w	801893c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018a74:	43e4      	mvns	r4, r4
 8018a76:	6044      	str	r4, [r0, #4]
 8018a78:	1b75      	subs	r5, r6, r5
 8018a7a:	e75e      	b.n	801893a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018a7c:	3d800000 	.word	0x3d800000

08018a80 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8018a80:	4602      	mov	r2, r0
 8018a82:	b148      	cbz	r0, 8018a98 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018a84:	2300      	movs	r3, #0
 8018a86:	b298      	uxth	r0, r3
 8018a88:	3301      	adds	r3, #1
 8018a8a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8018a8e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8018a92:	2900      	cmp	r1, #0
 8018a94:	d1f7      	bne.n	8018a86 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018a96:	4770      	bx	lr
 8018a98:	4770      	bx	lr

08018a9a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018a9a:	b530      	push	{r4, r5, lr}
 8018a9c:	4604      	mov	r4, r0
 8018a9e:	b159      	cbz	r1, 8018ab8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8018aa0:	b148      	cbz	r0, 8018ab6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018aa2:	2300      	movs	r3, #0
 8018aa4:	b298      	uxth	r0, r3
 8018aa6:	4282      	cmp	r2, r0
 8018aa8:	d905      	bls.n	8018ab6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018aaa:	5ccd      	ldrb	r5, [r1, r3]
 8018aac:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8018ab0:	3301      	adds	r3, #1
 8018ab2:	2d00      	cmp	r5, #0
 8018ab4:	d1f6      	bne.n	8018aa4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018ab6:	bd30      	pop	{r4, r5, pc}
 8018ab8:	4608      	mov	r0, r1
 8018aba:	e7fc      	b.n	8018ab6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018abc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018abc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018abe:	b08b      	sub	sp, #44	; 0x2c
 8018ac0:	468c      	mov	ip, r1
 8018ac2:	2100      	movs	r1, #0
 8018ac4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018ac8:	4604      	mov	r4, r0
 8018aca:	261f      	movs	r6, #31
 8018acc:	af01      	add	r7, sp, #4
 8018ace:	fb94 fef3 	sdiv	lr, r4, r3
 8018ad2:	fb03 441e 	mls	r4, r3, lr, r4
 8018ad6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018ada:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8018ade:	b2ec      	uxtb	r4, r5
 8018ae0:	2d09      	cmp	r5, #9
 8018ae2:	bfd4      	ite	le
 8018ae4:	3430      	addle	r4, #48	; 0x30
 8018ae6:	3457      	addgt	r4, #87	; 0x57
 8018ae8:	b2e4      	uxtb	r4, r4
 8018aea:	55bc      	strb	r4, [r7, r6]
 8018aec:	4674      	mov	r4, lr
 8018aee:	1e71      	subs	r1, r6, #1
 8018af0:	b974      	cbnz	r4, 8018b10 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8018af2:	2800      	cmp	r0, #0
 8018af4:	da05      	bge.n	8018b02 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018af6:	ab0a      	add	r3, sp, #40	; 0x28
 8018af8:	4419      	add	r1, r3
 8018afa:	232d      	movs	r3, #45	; 0x2d
 8018afc:	f801 3c24 	strb.w	r3, [r1, #-36]
 8018b00:	1eb1      	subs	r1, r6, #2
 8018b02:	3101      	adds	r1, #1
 8018b04:	4439      	add	r1, r7
 8018b06:	4660      	mov	r0, ip
 8018b08:	f7ff ffc7 	bl	8018a9a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018b0c:	b00b      	add	sp, #44	; 0x2c
 8018b0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018b10:	460e      	mov	r6, r1
 8018b12:	e7dc      	b.n	8018ace <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018b14 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018b14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b16:	b08b      	sub	sp, #44	; 0x2c
 8018b18:	468c      	mov	ip, r1
 8018b1a:	2100      	movs	r1, #0
 8018b1c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018b20:	ae01      	add	r6, sp, #4
 8018b22:	211f      	movs	r1, #31
 8018b24:	fbb0 f7f3 	udiv	r7, r0, r3
 8018b28:	fb03 0517 	mls	r5, r3, r7, r0
 8018b2c:	b2ec      	uxtb	r4, r5
 8018b2e:	2d09      	cmp	r5, #9
 8018b30:	bfd4      	ite	le
 8018b32:	3430      	addle	r4, #48	; 0x30
 8018b34:	3457      	addgt	r4, #87	; 0x57
 8018b36:	b2e4      	uxtb	r4, r4
 8018b38:	558c      	strb	r4, [r1, r6]
 8018b3a:	4638      	mov	r0, r7
 8018b3c:	1e4c      	subs	r4, r1, #1
 8018b3e:	b92f      	cbnz	r7, 8018b4c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8018b40:	4431      	add	r1, r6
 8018b42:	4660      	mov	r0, ip
 8018b44:	f7ff ffa9 	bl	8018a9a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018b48:	b00b      	add	sp, #44	; 0x2c
 8018b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018b4c:	4621      	mov	r1, r4
 8018b4e:	e7e9      	b.n	8018b24 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08018b50 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8018b50:	b410      	push	{r4}
 8018b52:	b131      	cbz	r1, 8018b62 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018b54:	1e9c      	subs	r4, r3, #2
 8018b56:	2c22      	cmp	r4, #34	; 0x22
 8018b58:	d803      	bhi.n	8018b62 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018b5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018b5e:	f7ff bfad 	b.w	8018abc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018b62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018b66:	4770      	bx	lr

08018b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b6c:	4691      	mov	r9, r2
 8018b6e:	b085      	sub	sp, #20
 8018b70:	6802      	ldr	r2, [r0, #0]
 8018b72:	9201      	str	r2, [sp, #4]
 8018b74:	4688      	mov	r8, r1
 8018b76:	4683      	mov	fp, r0
 8018b78:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018b7c:	9103      	str	r1, [sp, #12]
 8018b7e:	4610      	mov	r0, r2
 8018b80:	461c      	mov	r4, r3
 8018b82:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018b86:	9302      	str	r3, [sp, #8]
 8018b88:	f7ff ff7a 	bl	8018a80 <_ZN8touchgfx7Unicode6strlenEPKt>
 8018b8c:	f1b8 0f00 	cmp.w	r8, #0
 8018b90:	bf0c      	ite	eq
 8018b92:	4684      	moveq	ip, r0
 8018b94:	f100 0c01 	addne.w	ip, r0, #1
 8018b98:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018b9c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8018ba0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018ba2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018ba4:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018ba8:	9903      	ldr	r1, [sp, #12]
 8018baa:	fa1f fc8c 	uxth.w	ip, ip
 8018bae:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8018bb2:	d041      	beq.n	8018c38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018bb4:	d834      	bhi.n	8018c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018bb6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018bba:	d059      	beq.n	8018c70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018bbc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8018bc0:	d03a      	beq.n	8018c38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018bc2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018bc6:	d034      	beq.n	8018c32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018bc8:	2400      	movs	r4, #0
 8018bca:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8018bce:	3a01      	subs	r2, #1
 8018bd0:	b169      	cbz	r1, 8018bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018bd2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018bd4:	458c      	cmp	ip, r1
 8018bd6:	da09      	bge.n	8018bec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018bd8:	eba1 010c 	sub.w	r1, r1, ip
 8018bdc:	b289      	uxth	r1, r1
 8018bde:	b933      	cbnz	r3, 8018bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018be0:	2e00      	cmp	r6, #0
 8018be2:	d051      	beq.n	8018c88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018be4:	2800      	cmp	r0, #0
 8018be6:	d04f      	beq.n	8018c88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018be8:	440c      	add	r4, r1
 8018bea:	b2a4      	uxth	r4, r4
 8018bec:	2100      	movs	r1, #0
 8018bee:	682b      	ldr	r3, [r5, #0]
 8018bf0:	4293      	cmp	r3, r2
 8018bf2:	da07      	bge.n	8018c04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018bf4:	f1b8 0f00 	cmp.w	r8, #0
 8018bf8:	d004      	beq.n	8018c04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018bfa:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8018bfe:	682b      	ldr	r3, [r5, #0]
 8018c00:	3301      	adds	r3, #1
 8018c02:	602b      	str	r3, [r5, #0]
 8018c04:	2730      	movs	r7, #48	; 0x30
 8018c06:	2c00      	cmp	r4, #0
 8018c08:	d04e      	beq.n	8018ca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018c0a:	682e      	ldr	r6, [r5, #0]
 8018c0c:	3c01      	subs	r4, #1
 8018c0e:	42b2      	cmp	r2, r6
 8018c10:	b2a4      	uxth	r4, r4
 8018c12:	dd49      	ble.n	8018ca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018c14:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018c18:	682b      	ldr	r3, [r5, #0]
 8018c1a:	3301      	adds	r3, #1
 8018c1c:	602b      	str	r3, [r5, #0]
 8018c1e:	e7f2      	b.n	8018c06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8018c20:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018c24:	d01d      	beq.n	8018c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018c26:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018c2a:	d002      	beq.n	8018c32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018c2c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018c30:	e7c9      	b.n	8018bc6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018c32:	4684      	mov	ip, r0
 8018c34:	f04f 0800 	mov.w	r8, #0
 8018c38:	2c00      	cmp	r4, #0
 8018c3a:	d0c6      	beq.n	8018bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018c3c:	b947      	cbnz	r7, 8018c50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018c3e:	2801      	cmp	r0, #1
 8018c40:	d106      	bne.n	8018c50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018c42:	8814      	ldrh	r4, [r2, #0]
 8018c44:	2c30      	cmp	r4, #48	; 0x30
 8018c46:	bf02      	ittt	eq
 8018c48:	3202      	addeq	r2, #2
 8018c4a:	f8cb 2000 	streq.w	r2, [fp]
 8018c4e:	4638      	moveq	r0, r7
 8018c50:	45bc      	cmp	ip, r7
 8018c52:	da14      	bge.n	8018c7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018c54:	b2bf      	uxth	r7, r7
 8018c56:	eba7 040c 	sub.w	r4, r7, ip
 8018c5a:	b2a4      	uxth	r4, r4
 8018c5c:	46bc      	mov	ip, r7
 8018c5e:	2600      	movs	r6, #0
 8018c60:	e7b3      	b.n	8018bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018c62:	4684      	mov	ip, r0
 8018c64:	b16c      	cbz	r4, 8018c82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018c66:	42b8      	cmp	r0, r7
 8018c68:	dd00      	ble.n	8018c6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018c6a:	b2b8      	uxth	r0, r7
 8018c6c:	2400      	movs	r4, #0
 8018c6e:	e003      	b.n	8018c78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018c70:	f04f 0c01 	mov.w	ip, #1
 8018c74:	2400      	movs	r4, #0
 8018c76:	4660      	mov	r0, ip
 8018c78:	4626      	mov	r6, r4
 8018c7a:	46a0      	mov	r8, r4
 8018c7c:	e7a5      	b.n	8018bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018c7e:	2400      	movs	r4, #0
 8018c80:	e7ed      	b.n	8018c5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018c82:	4626      	mov	r6, r4
 8018c84:	46a0      	mov	r8, r4
 8018c86:	e7a0      	b.n	8018bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018c88:	2900      	cmp	r1, #0
 8018c8a:	d0b0      	beq.n	8018bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018c8c:	2720      	movs	r7, #32
 8018c8e:	682e      	ldr	r6, [r5, #0]
 8018c90:	2900      	cmp	r1, #0
 8018c92:	d0ac      	beq.n	8018bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018c94:	3901      	subs	r1, #1
 8018c96:	4296      	cmp	r6, r2
 8018c98:	b289      	uxth	r1, r1
 8018c9a:	daa7      	bge.n	8018bec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018c9c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018ca0:	682b      	ldr	r3, [r5, #0]
 8018ca2:	3301      	adds	r3, #1
 8018ca4:	602b      	str	r3, [r5, #0]
 8018ca6:	e7f2      	b.n	8018c8e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018ca8:	b188      	cbz	r0, 8018cce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018caa:	682b      	ldr	r3, [r5, #0]
 8018cac:	3801      	subs	r0, #1
 8018cae:	429a      	cmp	r2, r3
 8018cb0:	b280      	uxth	r0, r0
 8018cb2:	dd0c      	ble.n	8018cce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018cb4:	f8db 3000 	ldr.w	r3, [fp]
 8018cb8:	1c9c      	adds	r4, r3, #2
 8018cba:	f8cb 4000 	str.w	r4, [fp]
 8018cbe:	881c      	ldrh	r4, [r3, #0]
 8018cc0:	682b      	ldr	r3, [r5, #0]
 8018cc2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018cc6:	682b      	ldr	r3, [r5, #0]
 8018cc8:	3301      	adds	r3, #1
 8018cca:	602b      	str	r3, [r5, #0]
 8018ccc:	e7ec      	b.n	8018ca8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018cce:	2620      	movs	r6, #32
 8018cd0:	b151      	cbz	r1, 8018ce8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018cd2:	6828      	ldr	r0, [r5, #0]
 8018cd4:	3901      	subs	r1, #1
 8018cd6:	4282      	cmp	r2, r0
 8018cd8:	b289      	uxth	r1, r1
 8018cda:	dd05      	ble.n	8018ce8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018cdc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8018ce0:	682b      	ldr	r3, [r5, #0]
 8018ce2:	3301      	adds	r3, #1
 8018ce4:	602b      	str	r3, [r5, #0]
 8018ce6:	e7f3      	b.n	8018cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018ce8:	b005      	add	sp, #20
 8018cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018cee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8018cee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018cf2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018cf6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018cfa:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8018cfe:	2400      	movs	r4, #0
 8018d00:	8014      	strh	r4, [r2, #0]
 8018d02:	701c      	strb	r4, [r3, #0]
 8018d04:	f888 4000 	strb.w	r4, [r8]
 8018d08:	f88c 4000 	strb.w	r4, [ip]
 8018d0c:	f88e 4000 	strb.w	r4, [lr]
 8018d10:	703c      	strb	r4, [r7, #0]
 8018d12:	6804      	ldr	r4, [r0, #0]
 8018d14:	b1a4      	cbz	r4, 8018d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018d16:	8824      	ldrh	r4, [r4, #0]
 8018d18:	f04f 0901 	mov.w	r9, #1
 8018d1c:	b314      	cbz	r4, 8018d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018d1e:	2c2b      	cmp	r4, #43	; 0x2b
 8018d20:	d001      	beq.n	8018d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018d22:	2c20      	cmp	r4, #32
 8018d24:	d110      	bne.n	8018d48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018d26:	8014      	strh	r4, [r2, #0]
 8018d28:	6804      	ldr	r4, [r0, #0]
 8018d2a:	b10c      	cbz	r4, 8018d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018d2c:	3402      	adds	r4, #2
 8018d2e:	6004      	str	r4, [r0, #0]
 8018d30:	680c      	ldr	r4, [r1, #0]
 8018d32:	b10c      	cbz	r4, 8018d38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018d34:	3401      	adds	r4, #1
 8018d36:	600c      	str	r4, [r1, #0]
 8018d38:	6804      	ldr	r4, [r0, #0]
 8018d3a:	b17c      	cbz	r4, 8018d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018d3c:	8824      	ldrh	r4, [r4, #0]
 8018d3e:	e7ed      	b.n	8018d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018d40:	680c      	ldr	r4, [r1, #0]
 8018d42:	b17c      	cbz	r4, 8018d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018d44:	7824      	ldrb	r4, [r4, #0]
 8018d46:	e7e7      	b.n	8018d18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018d48:	2c2d      	cmp	r4, #45	; 0x2d
 8018d4a:	d102      	bne.n	8018d52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018d4c:	f883 9000 	strb.w	r9, [r3]
 8018d50:	e7ea      	b.n	8018d28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018d52:	2c23      	cmp	r4, #35	; 0x23
 8018d54:	d107      	bne.n	8018d66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018d56:	f888 9000 	strb.w	r9, [r8]
 8018d5a:	e7e5      	b.n	8018d28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018d5c:	680c      	ldr	r4, [r1, #0]
 8018d5e:	b10c      	cbz	r4, 8018d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018d60:	7824      	ldrb	r4, [r4, #0]
 8018d62:	e7db      	b.n	8018d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018d64:	2400      	movs	r4, #0
 8018d66:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018d6a:	2b09      	cmp	r3, #9
 8018d6c:	d901      	bls.n	8018d72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018d6e:	2c2a      	cmp	r4, #42	; 0x2a
 8018d70:	d122      	bne.n	8018db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018d72:	2301      	movs	r3, #1
 8018d74:	2c30      	cmp	r4, #48	; 0x30
 8018d76:	f88e 3000 	strb.w	r3, [lr]
 8018d7a:	d10d      	bne.n	8018d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018d7c:	f88c 3000 	strb.w	r3, [ip]
 8018d80:	6803      	ldr	r3, [r0, #0]
 8018d82:	b10b      	cbz	r3, 8018d88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018d84:	3302      	adds	r3, #2
 8018d86:	6003      	str	r3, [r0, #0]
 8018d88:	680b      	ldr	r3, [r1, #0]
 8018d8a:	b10b      	cbz	r3, 8018d90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018d8c:	3301      	adds	r3, #1
 8018d8e:	600b      	str	r3, [r1, #0]
 8018d90:	6803      	ldr	r3, [r0, #0]
 8018d92:	2b00      	cmp	r3, #0
 8018d94:	d02f      	beq.n	8018df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018d96:	881c      	ldrh	r4, [r3, #0]
 8018d98:	2c2a      	cmp	r4, #42	; 0x2a
 8018d9a:	d135      	bne.n	8018e08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018d9c:	f04f 33ff 	mov.w	r3, #4294967295
 8018da0:	6033      	str	r3, [r6, #0]
 8018da2:	6803      	ldr	r3, [r0, #0]
 8018da4:	b10b      	cbz	r3, 8018daa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018da6:	3302      	adds	r3, #2
 8018da8:	6003      	str	r3, [r0, #0]
 8018daa:	680b      	ldr	r3, [r1, #0]
 8018dac:	b10b      	cbz	r3, 8018db2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018dae:	3301      	adds	r3, #1
 8018db0:	600b      	str	r3, [r1, #0]
 8018db2:	6803      	ldr	r3, [r0, #0]
 8018db4:	b31b      	cbz	r3, 8018dfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018db6:	881c      	ldrh	r4, [r3, #0]
 8018db8:	2c2e      	cmp	r4, #46	; 0x2e
 8018dba:	d11a      	bne.n	8018df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018dbc:	2301      	movs	r3, #1
 8018dbe:	703b      	strb	r3, [r7, #0]
 8018dc0:	6803      	ldr	r3, [r0, #0]
 8018dc2:	b10b      	cbz	r3, 8018dc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018dc4:	3302      	adds	r3, #2
 8018dc6:	6003      	str	r3, [r0, #0]
 8018dc8:	680b      	ldr	r3, [r1, #0]
 8018dca:	b10b      	cbz	r3, 8018dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018dcc:	3301      	adds	r3, #1
 8018dce:	600b      	str	r3, [r1, #0]
 8018dd0:	6803      	ldr	r3, [r0, #0]
 8018dd2:	2b00      	cmp	r3, #0
 8018dd4:	d036      	beq.n	8018e44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018dd6:	881b      	ldrh	r3, [r3, #0]
 8018dd8:	2b2a      	cmp	r3, #42	; 0x2a
 8018dda:	d137      	bne.n	8018e4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018ddc:	f04f 33ff 	mov.w	r3, #4294967295
 8018de0:	602b      	str	r3, [r5, #0]
 8018de2:	6803      	ldr	r3, [r0, #0]
 8018de4:	b10b      	cbz	r3, 8018dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018de6:	3302      	adds	r3, #2
 8018de8:	6003      	str	r3, [r0, #0]
 8018dea:	680b      	ldr	r3, [r1, #0]
 8018dec:	b10b      	cbz	r3, 8018df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018dee:	3301      	adds	r3, #1
 8018df0:	600b      	str	r3, [r1, #0]
 8018df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018df6:	680c      	ldr	r4, [r1, #0]
 8018df8:	b134      	cbz	r4, 8018e08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018dfa:	7824      	ldrb	r4, [r4, #0]
 8018dfc:	e7cc      	b.n	8018d98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018dfe:	680b      	ldr	r3, [r1, #0]
 8018e00:	2b00      	cmp	r3, #0
 8018e02:	d0f6      	beq.n	8018df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018e04:	781c      	ldrb	r4, [r3, #0]
 8018e06:	e7d7      	b.n	8018db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018e08:	2300      	movs	r3, #0
 8018e0a:	6033      	str	r3, [r6, #0]
 8018e0c:	220a      	movs	r2, #10
 8018e0e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018e12:	fa1f f38c 	uxth.w	r3, ip
 8018e16:	2b09      	cmp	r3, #9
 8018e18:	d8ce      	bhi.n	8018db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018e1a:	6833      	ldr	r3, [r6, #0]
 8018e1c:	fb02 c303 	mla	r3, r2, r3, ip
 8018e20:	6033      	str	r3, [r6, #0]
 8018e22:	6803      	ldr	r3, [r0, #0]
 8018e24:	b10b      	cbz	r3, 8018e2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018e26:	3302      	adds	r3, #2
 8018e28:	6003      	str	r3, [r0, #0]
 8018e2a:	680b      	ldr	r3, [r1, #0]
 8018e2c:	b10b      	cbz	r3, 8018e32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018e2e:	3301      	adds	r3, #1
 8018e30:	600b      	str	r3, [r1, #0]
 8018e32:	6803      	ldr	r3, [r0, #0]
 8018e34:	b10b      	cbz	r3, 8018e3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018e36:	881c      	ldrh	r4, [r3, #0]
 8018e38:	e7e9      	b.n	8018e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018e3a:	680c      	ldr	r4, [r1, #0]
 8018e3c:	2c00      	cmp	r4, #0
 8018e3e:	d0e6      	beq.n	8018e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018e40:	7824      	ldrb	r4, [r4, #0]
 8018e42:	e7e4      	b.n	8018e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018e44:	680b      	ldr	r3, [r1, #0]
 8018e46:	b10b      	cbz	r3, 8018e4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018e48:	781b      	ldrb	r3, [r3, #0]
 8018e4a:	e7c5      	b.n	8018dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018e4c:	2200      	movs	r2, #0
 8018e4e:	602a      	str	r2, [r5, #0]
 8018e50:	240a      	movs	r4, #10
 8018e52:	3b30      	subs	r3, #48	; 0x30
 8018e54:	b29e      	uxth	r6, r3
 8018e56:	2e09      	cmp	r6, #9
 8018e58:	682a      	ldr	r2, [r5, #0]
 8018e5a:	d813      	bhi.n	8018e84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018e5c:	fb04 3302 	mla	r3, r4, r2, r3
 8018e60:	602b      	str	r3, [r5, #0]
 8018e62:	6803      	ldr	r3, [r0, #0]
 8018e64:	b10b      	cbz	r3, 8018e6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018e66:	3302      	adds	r3, #2
 8018e68:	6003      	str	r3, [r0, #0]
 8018e6a:	680b      	ldr	r3, [r1, #0]
 8018e6c:	b10b      	cbz	r3, 8018e72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018e6e:	3301      	adds	r3, #1
 8018e70:	600b      	str	r3, [r1, #0]
 8018e72:	6803      	ldr	r3, [r0, #0]
 8018e74:	b10b      	cbz	r3, 8018e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018e76:	881b      	ldrh	r3, [r3, #0]
 8018e78:	e7eb      	b.n	8018e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018e7a:	680b      	ldr	r3, [r1, #0]
 8018e7c:	2b00      	cmp	r3, #0
 8018e7e:	d0e8      	beq.n	8018e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018e80:	781b      	ldrb	r3, [r3, #0]
 8018e82:	e7e6      	b.n	8018e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018e84:	2a06      	cmp	r2, #6
 8018e86:	bfa8      	it	ge
 8018e88:	2206      	movge	r2, #6
 8018e8a:	602a      	str	r2, [r5, #0]
 8018e8c:	e7b1      	b.n	8018df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018e8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e92:	b0a3      	sub	sp, #140	; 0x8c
 8018e94:	2600      	movs	r6, #0
 8018e96:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018e9a:	4607      	mov	r7, r0
 8018e9c:	4688      	mov	r8, r1
 8018e9e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018ea2:	4631      	mov	r1, r6
 8018ea4:	2242      	movs	r2, #66	; 0x42
 8018ea6:	4648      	mov	r0, r9
 8018ea8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018eaa:	960d      	str	r6, [sp, #52]	; 0x34
 8018eac:	f012 f881 	bl	802afb2 <memset>
 8018eb0:	b15f      	cbz	r7, 8018eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018eb2:	f108 3aff 	add.w	sl, r8, #4294967295
 8018eb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018eb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018eba:	b152      	cbz	r2, 8018ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018ebc:	8812      	ldrh	r2, [r2, #0]
 8018ebe:	b10a      	cbz	r2, 8018ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018ec0:	459a      	cmp	sl, r3
 8018ec2:	dc2e      	bgt.n	8018f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018ec4:	2200      	movs	r2, #0
 8018ec6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018eca:	4638      	mov	r0, r7
 8018ecc:	b023      	add	sp, #140	; 0x8c
 8018ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ed2:	9a08      	ldr	r2, [sp, #32]
 8018ed4:	2a00      	cmp	r2, #0
 8018ed6:	d0f5      	beq.n	8018ec4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018ed8:	7812      	ldrb	r2, [r2, #0]
 8018eda:	e7f0      	b.n	8018ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018edc:	2d00      	cmp	r5, #0
 8018ede:	d0ea      	beq.n	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ee0:	782a      	ldrb	r2, [r5, #0]
 8018ee2:	b142      	cbz	r2, 8018ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018ee4:	2a25      	cmp	r2, #37	; 0x25
 8018ee6:	d001      	beq.n	8018eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018ee8:	459a      	cmp	sl, r3
 8018eea:	dc08      	bgt.n	8018efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018eec:	f1bb 0f00 	cmp.w	fp, #0
 8018ef0:	d121      	bne.n	8018f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018ef2:	2d00      	cmp	r5, #0
 8018ef4:	d0df      	beq.n	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ef6:	782a      	ldrb	r2, [r5, #0]
 8018ef8:	f04f 0b00 	mov.w	fp, #0
 8018efc:	e01d      	b.n	8018f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018efe:	f1bb 0f00 	cmp.w	fp, #0
 8018f02:	d078      	beq.n	8018ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018f04:	f8bb 2000 	ldrh.w	r2, [fp]
 8018f08:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018f0c:	f1bb 0f00 	cmp.w	fp, #0
 8018f10:	d002      	beq.n	8018f18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018f12:	f10b 0202 	add.w	r2, fp, #2
 8018f16:	9209      	str	r2, [sp, #36]	; 0x24
 8018f18:	b10d      	cbz	r5, 8018f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018f1a:	3501      	adds	r5, #1
 8018f1c:	9508      	str	r5, [sp, #32]
 8018f1e:	3301      	adds	r3, #1
 8018f20:	930d      	str	r3, [sp, #52]	; 0x34
 8018f22:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018f26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f28:	f1bb 0f00 	cmp.w	fp, #0
 8018f2c:	d0d6      	beq.n	8018edc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018f2e:	f8bb 2000 	ldrh.w	r2, [fp]
 8018f32:	2a00      	cmp	r2, #0
 8018f34:	d1d6      	bne.n	8018ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018f36:	f8bb 2000 	ldrh.w	r2, [fp]
 8018f3a:	2a00      	cmp	r2, #0
 8018f3c:	d0bb      	beq.n	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f3e:	459a      	cmp	sl, r3
 8018f40:	ddb9      	ble.n	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018f42:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018f46:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018f4a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018f4e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018f52:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018f56:	960e      	str	r6, [sp, #56]	; 0x38
 8018f58:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018f5c:	960f      	str	r6, [sp, #60]	; 0x3c
 8018f5e:	f1bb 0f00 	cmp.w	fp, #0
 8018f62:	d002      	beq.n	8018f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018f64:	f10b 0302 	add.w	r3, fp, #2
 8018f68:	9309      	str	r3, [sp, #36]	; 0x24
 8018f6a:	b10d      	cbz	r5, 8018f70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018f6c:	1c6b      	adds	r3, r5, #1
 8018f6e:	9308      	str	r3, [sp, #32]
 8018f70:	ab0f      	add	r3, sp, #60	; 0x3c
 8018f72:	9305      	str	r3, [sp, #20]
 8018f74:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018f78:	9304      	str	r3, [sp, #16]
 8018f7a:	ab0e      	add	r3, sp, #56	; 0x38
 8018f7c:	9303      	str	r3, [sp, #12]
 8018f7e:	ab0c      	add	r3, sp, #48	; 0x30
 8018f80:	9302      	str	r3, [sp, #8]
 8018f82:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018f86:	9301      	str	r3, [sp, #4]
 8018f88:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018f8c:	9300      	str	r3, [sp, #0]
 8018f8e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018f92:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018f96:	a908      	add	r1, sp, #32
 8018f98:	a809      	add	r0, sp, #36	; 0x24
 8018f9a:	f7ff fea8 	bl	8018cee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fa0:	2b00      	cmp	r3, #0
 8018fa2:	bfbe      	ittt	lt
 8018fa4:	6823      	ldrlt	r3, [r4, #0]
 8018fa6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018faa:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018fac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018fae:	bfb8      	it	lt
 8018fb0:	3404      	addlt	r4, #4
 8018fb2:	2b00      	cmp	r3, #0
 8018fb4:	bfb8      	it	lt
 8018fb6:	6823      	ldrlt	r3, [r4, #0]
 8018fb8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018fbc:	bfbe      	ittt	lt
 8018fbe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018fc2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018fc4:	3404      	addlt	r4, #4
 8018fc6:	b1d9      	cbz	r1, 8019000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018fc8:	880b      	ldrh	r3, [r1, #0]
 8018fca:	2b69      	cmp	r3, #105	; 0x69
 8018fcc:	d01f      	beq.n	801900e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018fce:	d82f      	bhi.n	8019030 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018fd0:	2b58      	cmp	r3, #88	; 0x58
 8018fd2:	d01c      	beq.n	801900e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018fd4:	d818      	bhi.n	8019008 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018fd6:	2b25      	cmp	r3, #37	; 0x25
 8018fd8:	d034      	beq.n	8019044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018fda:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018fde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fe0:	f1bb 0f00 	cmp.w	fp, #0
 8018fe4:	f000 80b8 	beq.w	8019158 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018fe8:	f8bb 5000 	ldrh.w	r5, [fp]
 8018fec:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018ff0:	3301      	adds	r3, #1
 8018ff2:	930d      	str	r3, [sp, #52]	; 0x34
 8018ff4:	e029      	b.n	801904a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018ff6:	b10d      	cbz	r5, 8018ffc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018ff8:	782a      	ldrb	r2, [r5, #0]
 8018ffa:	e785      	b.n	8018f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018ffc:	462a      	mov	r2, r5
 8018ffe:	e783      	b.n	8018f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019000:	2a00      	cmp	r2, #0
 8019002:	d0ea      	beq.n	8018fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019004:	7813      	ldrb	r3, [r2, #0]
 8019006:	e7e0      	b.n	8018fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019008:	3b63      	subs	r3, #99	; 0x63
 801900a:	2b01      	cmp	r3, #1
 801900c:	d8e5      	bhi.n	8018fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801900e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019012:	b329      	cbz	r1, 8019060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019014:	880b      	ldrh	r3, [r1, #0]
 8019016:	2b69      	cmp	r3, #105	; 0x69
 8019018:	d063      	beq.n	80190e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801901a:	d825      	bhi.n	8019068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801901c:	2b63      	cmp	r3, #99	; 0x63
 801901e:	d038      	beq.n	8019092 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019020:	2b64      	cmp	r3, #100	; 0x64
 8019022:	d05e      	beq.n	80190e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019024:	2b58      	cmp	r3, #88	; 0x58
 8019026:	d07b      	beq.n	8019120 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019028:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801902c:	4625      	mov	r5, r4
 801902e:	e036      	b.n	801909e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019030:	2b73      	cmp	r3, #115	; 0x73
 8019032:	d0ec      	beq.n	801900e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019034:	d802      	bhi.n	801903c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019036:	2b6f      	cmp	r3, #111	; 0x6f
 8019038:	d1cf      	bne.n	8018fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801903a:	e7e8      	b.n	801900e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801903c:	2b75      	cmp	r3, #117	; 0x75
 801903e:	d0e6      	beq.n	801900e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019040:	2b78      	cmp	r3, #120	; 0x78
 8019042:	e7f9      	b.n	8019038 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019044:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019046:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801904a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801904c:	b10b      	cbz	r3, 8019052 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801904e:	3302      	adds	r3, #2
 8019050:	9309      	str	r3, [sp, #36]	; 0x24
 8019052:	9b08      	ldr	r3, [sp, #32]
 8019054:	2b00      	cmp	r3, #0
 8019056:	f43f af2e 	beq.w	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801905a:	3301      	adds	r3, #1
 801905c:	9308      	str	r3, [sp, #32]
 801905e:	e72a      	b.n	8018eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019060:	2a00      	cmp	r2, #0
 8019062:	d0e1      	beq.n	8019028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019064:	7813      	ldrb	r3, [r2, #0]
 8019066:	e7d6      	b.n	8019016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019068:	2b73      	cmp	r3, #115	; 0x73
 801906a:	d036      	beq.n	80190da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801906c:	d807      	bhi.n	801907e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801906e:	2b6f      	cmp	r3, #111	; 0x6f
 8019070:	d1da      	bne.n	8019028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019072:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019074:	1d25      	adds	r5, r4, #4
 8019076:	eba8 0202 	sub.w	r2, r8, r2
 801907a:	2308      	movs	r3, #8
 801907c:	e04a      	b.n	8019114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801907e:	2b75      	cmp	r3, #117	; 0x75
 8019080:	d043      	beq.n	801910a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019082:	2b78      	cmp	r3, #120	; 0x78
 8019084:	d1d0      	bne.n	8019028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019086:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019088:	1d25      	adds	r5, r4, #4
 801908a:	eba8 0202 	sub.w	r2, r8, r2
 801908e:	2310      	movs	r3, #16
 8019090:	e040      	b.n	8019114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019092:	6823      	ldr	r3, [r4, #0]
 8019094:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019098:	1d25      	adds	r5, r4, #4
 801909a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801909e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80190a0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80190a4:	2b00      	cmp	r3, #0
 80190a6:	d052      	beq.n	801914e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80190a8:	881a      	ldrh	r2, [r3, #0]
 80190aa:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80190ae:	a80d      	add	r0, sp, #52	; 0x34
 80190b0:	9005      	str	r0, [sp, #20]
 80190b2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80190b6:	9004      	str	r0, [sp, #16]
 80190b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80190ba:	9003      	str	r0, [sp, #12]
 80190bc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80190c0:	9002      	str	r0, [sp, #8]
 80190c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80190c4:	9001      	str	r0, [sp, #4]
 80190c6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80190ca:	9000      	str	r0, [sp, #0]
 80190cc:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80190d0:	a810      	add	r0, sp, #64	; 0x40
 80190d2:	f7ff fd49 	bl	8018b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80190d6:	462c      	mov	r4, r5
 80190d8:	e7b7      	b.n	801904a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80190da:	6823      	ldr	r3, [r4, #0]
 80190dc:	1d25      	adds	r5, r4, #4
 80190de:	9310      	str	r3, [sp, #64]	; 0x40
 80190e0:	e7dd      	b.n	801909e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80190e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80190e4:	6820      	ldr	r0, [r4, #0]
 80190e6:	eba8 0202 	sub.w	r2, r8, r2
 80190ea:	230a      	movs	r3, #10
 80190ec:	b292      	uxth	r2, r2
 80190ee:	4649      	mov	r1, r9
 80190f0:	f7ff fce4 	bl	8018abc <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80190f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80190f8:	2b2d      	cmp	r3, #45	; 0x2d
 80190fa:	f104 0504 	add.w	r5, r4, #4
 80190fe:	d1ce      	bne.n	801909e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019100:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019104:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019106:	3302      	adds	r3, #2
 8019108:	e7e9      	b.n	80190de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801910a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801910c:	1d25      	adds	r5, r4, #4
 801910e:	eba8 0202 	sub.w	r2, r8, r2
 8019112:	230a      	movs	r3, #10
 8019114:	b292      	uxth	r2, r2
 8019116:	4649      	mov	r1, r9
 8019118:	6820      	ldr	r0, [r4, #0]
 801911a:	f7ff fcfb 	bl	8018b14 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801911e:	e7be      	b.n	801909e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019120:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019122:	6820      	ldr	r0, [r4, #0]
 8019124:	eba8 0202 	sub.w	r2, r8, r2
 8019128:	b292      	uxth	r2, r2
 801912a:	2310      	movs	r3, #16
 801912c:	4649      	mov	r1, r9
 801912e:	f7ff fcf1 	bl	8018b14 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019132:	1d25      	adds	r5, r4, #4
 8019134:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019138:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801913c:	2b00      	cmp	r3, #0
 801913e:	d0ae      	beq.n	801909e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019140:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019144:	2919      	cmp	r1, #25
 8019146:	d8f7      	bhi.n	8019138 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019148:	3b20      	subs	r3, #32
 801914a:	8013      	strh	r3, [r2, #0]
 801914c:	e7f4      	b.n	8019138 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801914e:	9a08      	ldr	r2, [sp, #32]
 8019150:	2a00      	cmp	r2, #0
 8019152:	d0aa      	beq.n	80190aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019154:	7812      	ldrb	r2, [r2, #0]
 8019156:	e7a8      	b.n	80190aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019158:	2d00      	cmp	r5, #0
 801915a:	f43f af47 	beq.w	8018fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801915e:	782d      	ldrb	r5, [r5, #0]
 8019160:	e744      	b.n	8018fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019162 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019162:	b507      	push	{r0, r1, r2, lr}
 8019164:	9300      	str	r3, [sp, #0]
 8019166:	4613      	mov	r3, r2
 8019168:	2200      	movs	r2, #0
 801916a:	f7ff fe90 	bl	8018e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801916e:	b003      	add	sp, #12
 8019170:	f85d fb04 	ldr.w	pc, [sp], #4

08019174 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019174:	b40c      	push	{r2, r3}
 8019176:	b507      	push	{r0, r1, r2, lr}
 8019178:	ab04      	add	r3, sp, #16
 801917a:	f853 2b04 	ldr.w	r2, [r3], #4
 801917e:	9301      	str	r3, [sp, #4]
 8019180:	f7ff ffef 	bl	8019162 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019184:	b003      	add	sp, #12
 8019186:	f85d eb04 	ldr.w	lr, [sp], #4
 801918a:	b002      	add	sp, #8
 801918c:	4770      	bx	lr
	...

08019190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019194:	b0c5      	sub	sp, #276	; 0x114
 8019196:	2400      	movs	r4, #0
 8019198:	af11      	add	r7, sp, #68	; 0x44
 801919a:	4606      	mov	r6, r0
 801919c:	468a      	mov	sl, r1
 801919e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80191a2:	4621      	mov	r1, r4
 80191a4:	22c8      	movs	r2, #200	; 0xc8
 80191a6:	4638      	mov	r0, r7
 80191a8:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80191ac:	940d      	str	r4, [sp, #52]	; 0x34
 80191ae:	f011 ff00 	bl	802afb2 <memset>
 80191b2:	b16e      	cbz	r6, 80191d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80191b4:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80191b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80191bc:	b162      	cbz	r2, 80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80191be:	8812      	ldrh	r2, [r2, #0]
 80191c0:	b11a      	cbz	r2, 80191ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80191c2:	f10a 31ff 	add.w	r1, sl, #4294967295
 80191c6:	4299      	cmp	r1, r3
 80191c8:	dc2e      	bgt.n	8019228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80191ca:	2200      	movs	r2, #0
 80191cc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80191d0:	4630      	mov	r0, r6
 80191d2:	b045      	add	sp, #276	; 0x114
 80191d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191d8:	9a08      	ldr	r2, [sp, #32]
 80191da:	2a00      	cmp	r2, #0
 80191dc:	d0f5      	beq.n	80191ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80191de:	7812      	ldrb	r2, [r2, #0]
 80191e0:	e7ee      	b.n	80191c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80191e2:	2d00      	cmp	r5, #0
 80191e4:	d0e8      	beq.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80191e6:	782a      	ldrb	r2, [r5, #0]
 80191e8:	b142      	cbz	r2, 80191fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80191ea:	2a25      	cmp	r2, #37	; 0x25
 80191ec:	d001      	beq.n	80191f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80191ee:	4299      	cmp	r1, r3
 80191f0:	dc08      	bgt.n	8019204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80191f2:	f1b8 0f00 	cmp.w	r8, #0
 80191f6:	d121      	bne.n	801923c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80191f8:	2d00      	cmp	r5, #0
 80191fa:	d0dd      	beq.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80191fc:	782a      	ldrb	r2, [r5, #0]
 80191fe:	f04f 0800 	mov.w	r8, #0
 8019202:	e01d      	b.n	8019240 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019204:	f1b8 0f00 	cmp.w	r8, #0
 8019208:	d07f      	beq.n	801930a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801920a:	f8b8 2000 	ldrh.w	r2, [r8]
 801920e:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019212:	f1b8 0f00 	cmp.w	r8, #0
 8019216:	d002      	beq.n	801921e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019218:	f108 0202 	add.w	r2, r8, #2
 801921c:	9209      	str	r2, [sp, #36]	; 0x24
 801921e:	b10d      	cbz	r5, 8019224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019220:	3501      	adds	r5, #1
 8019222:	9508      	str	r5, [sp, #32]
 8019224:	3301      	adds	r3, #1
 8019226:	930d      	str	r3, [sp, #52]	; 0x34
 8019228:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801922c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801922e:	f1b8 0f00 	cmp.w	r8, #0
 8019232:	d0d6      	beq.n	80191e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019234:	f8b8 2000 	ldrh.w	r2, [r8]
 8019238:	2a00      	cmp	r2, #0
 801923a:	d1d6      	bne.n	80191ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801923c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019240:	2a00      	cmp	r2, #0
 8019242:	d0b9      	beq.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019244:	4299      	cmp	r1, r3
 8019246:	ddb7      	ble.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019248:	2300      	movs	r3, #0
 801924a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801924e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8019252:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019256:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801925a:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801925e:	930e      	str	r3, [sp, #56]	; 0x38
 8019260:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019264:	930f      	str	r3, [sp, #60]	; 0x3c
 8019266:	f1b8 0f00 	cmp.w	r8, #0
 801926a:	d002      	beq.n	8019272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801926c:	f108 0302 	add.w	r3, r8, #2
 8019270:	9309      	str	r3, [sp, #36]	; 0x24
 8019272:	b10d      	cbz	r5, 8019278 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019274:	1c6b      	adds	r3, r5, #1
 8019276:	9308      	str	r3, [sp, #32]
 8019278:	ab0f      	add	r3, sp, #60	; 0x3c
 801927a:	9305      	str	r3, [sp, #20]
 801927c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019280:	9304      	str	r3, [sp, #16]
 8019282:	ab0e      	add	r3, sp, #56	; 0x38
 8019284:	9303      	str	r3, [sp, #12]
 8019286:	ab0c      	add	r3, sp, #48	; 0x30
 8019288:	9302      	str	r3, [sp, #8]
 801928a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801928e:	9301      	str	r3, [sp, #4]
 8019290:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019294:	9300      	str	r3, [sp, #0]
 8019296:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801929a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801929e:	a908      	add	r1, sp, #32
 80192a0:	a809      	add	r0, sp, #36	; 0x24
 80192a2:	f7ff fd24 	bl	8018cee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80192a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192a8:	2b00      	cmp	r3, #0
 80192aa:	da0b      	bge.n	80192c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80192ac:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80192b0:	edd3 7a00 	vldr	s15, [r3]
 80192b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80192b8:	3401      	adds	r4, #1
 80192ba:	ee17 3a90 	vmov	r3, s15
 80192be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192c2:	930e      	str	r3, [sp, #56]	; 0x38
 80192c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80192c6:	2b00      	cmp	r3, #0
 80192c8:	da0b      	bge.n	80192e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80192ca:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80192ce:	edd3 7a00 	vldr	s15, [r3]
 80192d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80192d6:	3401      	adds	r4, #1
 80192d8:	ee17 3a90 	vmov	r3, s15
 80192dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80192e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80192e4:	b1b3      	cbz	r3, 8019314 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80192e6:	881a      	ldrh	r2, [r3, #0]
 80192e8:	2a25      	cmp	r2, #37	; 0x25
 80192ea:	d018      	beq.n	801931e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80192ec:	2a66      	cmp	r2, #102	; 0x66
 80192ee:	d01c      	beq.n	801932a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80192f0:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80192f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80192f6:	f1b8 0f00 	cmp.w	r8, #0
 80192fa:	f000 8121 	beq.w	8019540 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80192fe:	f8b8 5000 	ldrh.w	r5, [r8]
 8019302:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019306:	3301      	adds	r3, #1
 8019308:	e00d      	b.n	8019326 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801930a:	b10d      	cbz	r5, 8019310 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801930c:	782a      	ldrb	r2, [r5, #0]
 801930e:	e77e      	b.n	801920e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019310:	462a      	mov	r2, r5
 8019312:	e77c      	b.n	801920e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019314:	9b08      	ldr	r3, [sp, #32]
 8019316:	2b00      	cmp	r3, #0
 8019318:	d0ea      	beq.n	80192f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801931a:	781a      	ldrb	r2, [r3, #0]
 801931c:	e7e4      	b.n	80192e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801931e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019320:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019324:	3302      	adds	r3, #2
 8019326:	930d      	str	r3, [sp, #52]	; 0x34
 8019328:	e041      	b.n	80193ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801932a:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801932e:	edd3 7a00 	vldr	s15, [r3]
 8019332:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019336:	9710      	str	r7, [sp, #64]	; 0x40
 8019338:	3401      	adds	r4, #1
 801933a:	b923      	cbnz	r3, 8019346 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801933c:	2301      	movs	r3, #1
 801933e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019342:	2306      	movs	r3, #6
 8019344:	930f      	str	r3, [sp, #60]	; 0x3c
 8019346:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801934a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801934e:	bf48      	it	mi
 8019350:	eef1 7a67 	vnegmi.f32	s15, s15
 8019354:	eeb0 7ae7 	vabs.f32	s14, s15
 8019358:	bf48      	it	mi
 801935a:	232d      	movmi	r3, #45	; 0x2d
 801935c:	eeb4 7a45 	vcmp.f32	s14, s10
 8019360:	bf48      	it	mi
 8019362:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801936a:	dd2b      	ble.n	80193c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801936c:	4b3b      	ldr	r3, [pc, #236]	; (801945c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801936e:	9311      	str	r3, [sp, #68]	; 0x44
 8019370:	2366      	movs	r3, #102	; 0x66
 8019372:	9312      	str	r3, [sp, #72]	; 0x48
 8019374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019376:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801937a:	2b00      	cmp	r3, #0
 801937c:	f000 80da 	beq.w	8019534 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019380:	881a      	ldrh	r2, [r3, #0]
 8019382:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019386:	a80d      	add	r0, sp, #52	; 0x34
 8019388:	9005      	str	r0, [sp, #20]
 801938a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801938e:	9004      	str	r0, [sp, #16]
 8019390:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019392:	9003      	str	r0, [sp, #12]
 8019394:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019398:	9002      	str	r0, [sp, #8]
 801939a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801939c:	9001      	str	r0, [sp, #4]
 801939e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80193a2:	9000      	str	r0, [sp, #0]
 80193a4:	e9cd a606 	strd	sl, r6, [sp, #24]
 80193a8:	a810      	add	r0, sp, #64	; 0x40
 80193aa:	f7ff fbdd 	bl	8018b68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80193ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80193b0:	b10b      	cbz	r3, 80193b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80193b2:	3302      	adds	r3, #2
 80193b4:	9309      	str	r3, [sp, #36]	; 0x24
 80193b6:	9b08      	ldr	r3, [sp, #32]
 80193b8:	2b00      	cmp	r3, #0
 80193ba:	f43f aefd 	beq.w	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80193be:	3301      	adds	r3, #1
 80193c0:	9308      	str	r3, [sp, #32]
 80193c2:	e6f9      	b.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80193c4:	eef4 7a67 	vcmp.f32	s15, s15
 80193c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193cc:	d63a      	bvs.n	8019444 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80193ce:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80193d2:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80193d6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80193da:	eeb0 6a67 	vmov.f32	s12, s15
 80193de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80193e2:	eef0 5a47 	vmov.f32	s11, s14
 80193e6:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80193ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80193ee:	da2d      	bge.n	801944c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80193f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80193f2:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80193f6:	2100      	movs	r1, #0
 80193f8:	eef0 4a46 	vmov.f32	s9, s12
 80193fc:	ebaa 0202 	sub.w	r2, sl, r2
 8019400:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019408:	b28d      	uxth	r5, r1
 801940a:	db2c      	blt.n	8019466 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801940c:	1a53      	subs	r3, r2, r1
 801940e:	2b00      	cmp	r3, #0
 8019410:	dd29      	ble.n	8019466 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019412:	3101      	adds	r1, #1
 8019414:	2964      	cmp	r1, #100	; 0x64
 8019416:	d025      	beq.n	8019464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019418:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801941c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019420:	ee17 3a10 	vmov	r3, s14
 8019424:	2b09      	cmp	r3, #9
 8019426:	bfa8      	it	ge
 8019428:	2309      	movge	r3, #9
 801942a:	ee07 3a10 	vmov	s14, r3
 801942e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019432:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019436:	eee7 7a66 	vfms.f32	s15, s14, s13
 801943a:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801943e:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019442:	e7dd      	b.n	8019400 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019444:	4b06      	ldr	r3, [pc, #24]	; (8019460 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019446:	9311      	str	r3, [sp, #68]	; 0x44
 8019448:	236e      	movs	r3, #110	; 0x6e
 801944a:	e792      	b.n	8019372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801944c:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019450:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019454:	e7c7      	b.n	80193e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019456:	bf00      	nop
 8019458:	7f7fffff 	.word	0x7f7fffff
 801945c:	006e0069 	.word	0x006e0069
 8019460:	0061006e 	.word	0x0061006e
 8019464:	2563      	movs	r5, #99	; 0x63
 8019466:	2a63      	cmp	r2, #99	; 0x63
 8019468:	bfd4      	ite	le
 801946a:	ebc5 0202 	rsble	r2, r5, r2
 801946e:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019472:	2a00      	cmp	r2, #0
 8019474:	dd43      	ble.n	80194fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019476:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019478:	2b00      	cmp	r3, #0
 801947a:	dd40      	ble.n	80194fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801947c:	f04f 0901 	mov.w	r9, #1
 8019480:	210a      	movs	r1, #10
 8019482:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019486:	d30c      	bcc.n	80194a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019488:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801948c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019490:	ee17 0a10 	vmov	r0, s14
 8019494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019498:	fb01 0909 	mla	r9, r1, r9, r0
 801949c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80194a0:	e7ef      	b.n	8019482 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80194a2:	3501      	adds	r5, #1
 80194a4:	930f      	str	r3, [sp, #60]	; 0x3c
 80194a6:	b292      	uxth	r2, r2
 80194a8:	230a      	movs	r3, #10
 80194aa:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80194ae:	4648      	mov	r0, r9
 80194b0:	f7ff fb4e 	bl	8018b50 <_ZN8touchgfx7Unicode4itoaElPtti>
 80194b4:	f1b9 0f01 	cmp.w	r9, #1
 80194b8:	dc1f      	bgt.n	80194fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80194ba:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80194be:	2b00      	cmp	r3, #0
 80194c0:	bf0c      	ite	eq
 80194c2:	2300      	moveq	r3, #0
 80194c4:	232e      	movne	r3, #46	; 0x2e
 80194c6:	aa44      	add	r2, sp, #272	; 0x110
 80194c8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80194cc:	eef4 7ae4 	vcmpe.f32	s15, s9
 80194d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194d4:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80194d8:	f6ff af4c 	blt.w	8019374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80194dc:	2300      	movs	r3, #0
 80194de:	f838 2b02 	ldrh.w	r2, [r8], #2
 80194e2:	1c59      	adds	r1, r3, #1
 80194e4:	b98a      	cbnz	r2, 801950a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80194e6:	b29b      	uxth	r3, r3
 80194e8:	2130      	movs	r1, #48	; 0x30
 80194ea:	b983      	cbnz	r3, 801950e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80194ec:	2331      	movs	r3, #49	; 0x31
 80194ee:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80194f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194f4:	3b02      	subs	r3, #2
 80194f6:	9310      	str	r3, [sp, #64]	; 0x40
 80194f8:	e73c      	b.n	8019374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80194fa:	232e      	movs	r3, #46	; 0x2e
 80194fc:	e7e3      	b.n	80194c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80194fe:	ab44      	add	r3, sp, #272	; 0x110
 8019500:	3501      	adds	r5, #1
 8019502:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019506:	2300      	movs	r3, #0
 8019508:	e7e0      	b.n	80194cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801950a:	460b      	mov	r3, r1
 801950c:	e7e7      	b.n	80194de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801950e:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019512:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019516:	2808      	cmp	r0, #8
 8019518:	d806      	bhi.n	8019528 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801951a:	a944      	add	r1, sp, #272	; 0x110
 801951c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019520:	3201      	adds	r2, #1
 8019522:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019526:	e725      	b.n	8019374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019528:	2a39      	cmp	r2, #57	; 0x39
 801952a:	bf08      	it	eq
 801952c:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019530:	3b01      	subs	r3, #1
 8019532:	e7da      	b.n	80194ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019534:	9a08      	ldr	r2, [sp, #32]
 8019536:	2a00      	cmp	r2, #0
 8019538:	f43f af23 	beq.w	8019382 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801953c:	7812      	ldrb	r2, [r2, #0]
 801953e:	e720      	b.n	8019382 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019540:	2d00      	cmp	r5, #0
 8019542:	f43f aede 	beq.w	8019302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019546:	782d      	ldrb	r5, [r5, #0]
 8019548:	e6db      	b.n	8019302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801954a:	bf00      	nop

0801954c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801954c:	b507      	push	{r0, r1, r2, lr}
 801954e:	9300      	str	r3, [sp, #0]
 8019550:	4613      	mov	r3, r2
 8019552:	2200      	movs	r2, #0
 8019554:	f7ff fe1c 	bl	8019190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019558:	b003      	add	sp, #12
 801955a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019560 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019560:	4b01      	ldr	r3, [pc, #4]	; (8019568 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019562:	6018      	str	r0, [r3, #0]
 8019564:	4770      	bx	lr
 8019566:	bf00      	nop
 8019568:	2001302c 	.word	0x2001302c

0801956c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801956c:	4b06      	ldr	r3, [pc, #24]	; (8019588 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801956e:	881a      	ldrh	r2, [r3, #0]
 8019570:	4282      	cmp	r2, r0
 8019572:	d807      	bhi.n	8019584 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019574:	4b05      	ldr	r3, [pc, #20]	; (801958c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019576:	881b      	ldrh	r3, [r3, #0]
 8019578:	4413      	add	r3, r2
 801957a:	4298      	cmp	r0, r3
 801957c:	bfac      	ite	ge
 801957e:	2000      	movge	r0, #0
 8019580:	2001      	movlt	r0, #1
 8019582:	4770      	bx	lr
 8019584:	2000      	movs	r0, #0
 8019586:	4770      	bx	lr
 8019588:	2001304c 	.word	0x2001304c
 801958c:	20013050 	.word	0x20013050

08019590 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019590:	b508      	push	{r3, lr}
 8019592:	4601      	mov	r1, r0
 8019594:	f7ff ffea 	bl	801956c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019598:	b118      	cbz	r0, 80195a2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801959a:	4b02      	ldr	r3, [pc, #8]	; (80195a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801959c:	681b      	ldr	r3, [r3, #0]
 801959e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80195a2:	bd08      	pop	{r3, pc}
 80195a4:	20013030 	.word	0x20013030

080195a8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80195a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80195aa:	4c24      	ldr	r4, [pc, #144]	; (801963c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80195ac:	6823      	ldr	r3, [r4, #0]
 80195ae:	2b00      	cmp	r3, #0
 80195b0:	d042      	beq.n	8019638 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80195b2:	4a23      	ldr	r2, [pc, #140]	; (8019640 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80195b4:	4d23      	ldr	r5, [pc, #140]	; (8019644 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80195b6:	8811      	ldrh	r1, [r2, #0]
 80195b8:	f8b5 c000 	ldrh.w	ip, [r5]
 80195bc:	4822      	ldr	r0, [pc, #136]	; (8019648 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80195be:	4461      	add	r1, ip
 80195c0:	1c4a      	adds	r2, r1, #1
 80195c2:	f022 0201 	bic.w	r2, r2, #1
 80195c6:	008f      	lsls	r7, r1, #2
 80195c8:	0412      	lsls	r2, r2, #16
 80195ca:	19de      	adds	r6, r3, r7
 80195cc:	0c12      	lsrs	r2, r2, #16
 80195ce:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80195d2:	6006      	str	r6, [r0, #0]
 80195d4:	4e1d      	ldr	r6, [pc, #116]	; (801964c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80195d6:	19da      	adds	r2, r3, r7
 80195d8:	6032      	str	r2, [r6, #0]
 80195da:	220e      	movs	r2, #14
 80195dc:	fb02 f20c 	mul.w	r2, r2, ip
 80195e0:	3203      	adds	r2, #3
 80195e2:	f022 0203 	bic.w	r2, r2, #3
 80195e6:	443a      	add	r2, r7
 80195e8:	4f19      	ldr	r7, [pc, #100]	; (8019650 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80195ea:	4413      	add	r3, r2
 80195ec:	603b      	str	r3, [r7, #0]
 80195ee:	4f19      	ldr	r7, [pc, #100]	; (8019654 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80195f0:	2300      	movs	r3, #0
 80195f2:	803b      	strh	r3, [r7, #0]
 80195f4:	4f18      	ldr	r7, [pc, #96]	; (8019658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80195f6:	683f      	ldr	r7, [r7, #0]
 80195f8:	1aba      	subs	r2, r7, r2
 80195fa:	4f18      	ldr	r7, [pc, #96]	; (801965c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80195fc:	603a      	str	r2, [r7, #0]
 80195fe:	4a18      	ldr	r2, [pc, #96]	; (8019660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019600:	469c      	mov	ip, r3
 8019602:	8013      	strh	r3, [r2, #0]
 8019604:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019608:	428b      	cmp	r3, r1
 801960a:	d10d      	bne.n	8019628 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801960c:	882d      	ldrh	r5, [r5, #0]
 801960e:	6830      	ldr	r0, [r6, #0]
 8019610:	2300      	movs	r3, #0
 8019612:	240e      	movs	r4, #14
 8019614:	429d      	cmp	r5, r3
 8019616:	d90f      	bls.n	8019638 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019618:	fb04 0203 	mla	r2, r4, r3, r0
 801961c:	3301      	adds	r3, #1
 801961e:	7b11      	ldrb	r1, [r2, #12]
 8019620:	f36f 1145 	bfc	r1, #5, #1
 8019624:	7311      	strb	r1, [r2, #12]
 8019626:	e7f5      	b.n	8019614 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019628:	6822      	ldr	r2, [r4, #0]
 801962a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801962e:	6802      	ldr	r2, [r0, #0]
 8019630:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019634:	3301      	adds	r3, #1
 8019636:	e7e7      	b.n	8019608 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019638:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801963a:	bf00      	nop
 801963c:	20013030 	.word	0x20013030
 8019640:	2001304c 	.word	0x2001304c
 8019644:	20013050 	.word	0x20013050
 8019648:	20013044 	.word	0x20013044
 801964c:	20013034 	.word	0x20013034
 8019650:	2001303c 	.word	0x2001303c
 8019654:	2001304e 	.word	0x2001304e
 8019658:	20013038 	.word	0x20013038
 801965c:	20013048 	.word	0x20013048
 8019660:	20013040 	.word	0x20013040

08019664 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019664:	4b06      	ldr	r3, [pc, #24]	; (8019680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019666:	681b      	ldr	r3, [r3, #0]
 8019668:	b943      	cbnz	r3, 801967c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801966a:	b139      	cbz	r1, 801967c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801966c:	4b05      	ldr	r3, [pc, #20]	; (8019684 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801966e:	801a      	strh	r2, [r3, #0]
 8019670:	4b05      	ldr	r3, [pc, #20]	; (8019688 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8019672:	6019      	str	r1, [r3, #0]
 8019674:	4b05      	ldr	r3, [pc, #20]	; (801968c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019676:	6018      	str	r0, [r3, #0]
 8019678:	f7ff bf96 	b.w	80195a8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801967c:	4770      	bx	lr
 801967e:	bf00      	nop
 8019680:	2001303c 	.word	0x2001303c
 8019684:	20013050 	.word	0x20013050
 8019688:	20013038 	.word	0x20013038
 801968c:	20013030 	.word	0x20013030

08019690 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8019690:	b470      	push	{r4, r5, r6}
 8019692:	4c07      	ldr	r4, [pc, #28]	; (80196b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019694:	6826      	ldr	r6, [r4, #0]
 8019696:	4605      	mov	r5, r0
 8019698:	4610      	mov	r0, r2
 801969a:	9a03      	ldr	r2, [sp, #12]
 801969c:	b936      	cbnz	r6, 80196ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801969e:	6025      	str	r5, [r4, #0]
 80196a0:	4c04      	ldr	r4, [pc, #16]	; (80196b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80196a2:	8021      	strh	r1, [r4, #0]
 80196a4:	bc70      	pop	{r4, r5, r6}
 80196a6:	4619      	mov	r1, r3
 80196a8:	f7ff bfdc 	b.w	8019664 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80196ac:	bc70      	pop	{r4, r5, r6}
 80196ae:	4770      	bx	lr
 80196b0:	20013054 	.word	0x20013054
 80196b4:	2001304c 	.word	0x2001304c

080196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80196b8:	4a12      	ldr	r2, [pc, #72]	; (8019704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80196ba:	8803      	ldrh	r3, [r0, #0]
 80196bc:	8812      	ldrh	r2, [r2, #0]
 80196be:	4293      	cmp	r3, r2
 80196c0:	d207      	bcs.n	80196d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80196c2:	4a11      	ldr	r2, [pc, #68]	; (8019708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80196c4:	6812      	ldr	r2, [r2, #0]
 80196c6:	2114      	movs	r1, #20
 80196c8:	fb01 2303 	mla	r3, r1, r3, r2
 80196cc:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80196d0:	4770      	bx	lr
 80196d2:	490e      	ldr	r1, [pc, #56]	; (801970c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80196d4:	8809      	ldrh	r1, [r1, #0]
 80196d6:	4411      	add	r1, r2
 80196d8:	428b      	cmp	r3, r1
 80196da:	da04      	bge.n	80196e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80196dc:	1a9b      	subs	r3, r3, r2
 80196de:	4a0c      	ldr	r2, [pc, #48]	; (8019710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80196e0:	210e      	movs	r1, #14
 80196e2:	6812      	ldr	r2, [r2, #0]
 80196e4:	e7f0      	b.n	80196c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80196e6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196ea:	4293      	cmp	r3, r2
 80196ec:	d108      	bne.n	8019700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80196ee:	4b09      	ldr	r3, [pc, #36]	; (8019714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80196f0:	781b      	ldrb	r3, [r3, #0]
 80196f2:	b91b      	cbnz	r3, 80196fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80196f4:	4b08      	ldr	r3, [pc, #32]	; (8019718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80196f6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80196fa:	4770      	bx	lr
 80196fc:	4b07      	ldr	r3, [pc, #28]	; (801971c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80196fe:	e7fa      	b.n	80196f6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8019700:	2000      	movs	r0, #0
 8019702:	4770      	bx	lr
 8019704:	2001304c 	.word	0x2001304c
 8019708:	20013054 	.word	0x20013054
 801970c:	20013050 	.word	0x20013050
 8019710:	20013034 	.word	0x20013034
 8019714:	20012fbc 	.word	0x20012fbc
 8019718:	20012fbe 	.word	0x20012fbe
 801971c:	20012fc0 	.word	0x20012fc0

08019720 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8019720:	4a12      	ldr	r2, [pc, #72]	; (801976c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8019722:	8803      	ldrh	r3, [r0, #0]
 8019724:	8812      	ldrh	r2, [r2, #0]
 8019726:	4293      	cmp	r3, r2
 8019728:	d207      	bcs.n	801973a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801972a:	4a11      	ldr	r2, [pc, #68]	; (8019770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801972c:	6812      	ldr	r2, [r2, #0]
 801972e:	2114      	movs	r1, #20
 8019730:	fb01 2303 	mla	r3, r1, r3, r2
 8019734:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019738:	4770      	bx	lr
 801973a:	490e      	ldr	r1, [pc, #56]	; (8019774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801973c:	8809      	ldrh	r1, [r1, #0]
 801973e:	4411      	add	r1, r2
 8019740:	428b      	cmp	r3, r1
 8019742:	da04      	bge.n	801974e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019744:	1a9b      	subs	r3, r3, r2
 8019746:	4a0c      	ldr	r2, [pc, #48]	; (8019778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019748:	210e      	movs	r1, #14
 801974a:	6812      	ldr	r2, [r2, #0]
 801974c:	e7f0      	b.n	8019730 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801974e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019752:	4293      	cmp	r3, r2
 8019754:	d108      	bne.n	8019768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019756:	4b09      	ldr	r3, [pc, #36]	; (801977c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019758:	781b      	ldrb	r3, [r3, #0]
 801975a:	b91b      	cbnz	r3, 8019764 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801975c:	4b08      	ldr	r3, [pc, #32]	; (8019780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801975e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019762:	4770      	bx	lr
 8019764:	4b07      	ldr	r3, [pc, #28]	; (8019784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019766:	e7fa      	b.n	801975e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019768:	2000      	movs	r0, #0
 801976a:	4770      	bx	lr
 801976c:	2001304c 	.word	0x2001304c
 8019770:	20013054 	.word	0x20013054
 8019774:	20013050 	.word	0x20013050
 8019778:	20013034 	.word	0x20013034
 801977c:	20012fbc 	.word	0x20012fbc
 8019780:	20012fc0 	.word	0x20012fc0
 8019784:	20012fbe 	.word	0x20012fbe

08019788 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019788:	b510      	push	{r4, lr}
 801978a:	4a1f      	ldr	r2, [pc, #124]	; (8019808 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801978c:	880b      	ldrh	r3, [r1, #0]
 801978e:	8812      	ldrh	r2, [r2, #0]
 8019790:	4293      	cmp	r3, r2
 8019792:	d213      	bcs.n	80197bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019794:	4a1d      	ldr	r2, [pc, #116]	; (801980c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019796:	6812      	ldr	r2, [r2, #0]
 8019798:	2114      	movs	r1, #20
 801979a:	fb01 2303 	mla	r3, r1, r3, r2
 801979e:	8a1a      	ldrh	r2, [r3, #16]
 80197a0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80197a4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80197a8:	8a5b      	ldrh	r3, [r3, #18]
 80197aa:	8004      	strh	r4, [r0, #0]
 80197ac:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80197b0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80197b4:	8041      	strh	r1, [r0, #2]
 80197b6:	8082      	strh	r2, [r0, #4]
 80197b8:	80c3      	strh	r3, [r0, #6]
 80197ba:	e00e      	b.n	80197da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80197bc:	4914      	ldr	r1, [pc, #80]	; (8019810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80197be:	8809      	ldrh	r1, [r1, #0]
 80197c0:	4411      	add	r1, r2
 80197c2:	428b      	cmp	r3, r1
 80197c4:	da0a      	bge.n	80197dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80197c6:	1a9b      	subs	r3, r3, r2
 80197c8:	4a12      	ldr	r2, [pc, #72]	; (8019814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80197ca:	6812      	ldr	r2, [r2, #0]
 80197cc:	210e      	movs	r1, #14
 80197ce:	fb01 2303 	mla	r3, r1, r3, r2
 80197d2:	681a      	ldr	r2, [r3, #0]
 80197d4:	6002      	str	r2, [r0, #0]
 80197d6:	685a      	ldr	r2, [r3, #4]
 80197d8:	6042      	str	r2, [r0, #4]
 80197da:	bd10      	pop	{r4, pc}
 80197dc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80197e0:	4293      	cmp	r3, r2
 80197e2:	d10b      	bne.n	80197fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80197e4:	4b0c      	ldr	r3, [pc, #48]	; (8019818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80197e6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80197ea:	4b0c      	ldr	r3, [pc, #48]	; (801981c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80197ec:	8081      	strh	r1, [r0, #4]
 80197ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80197f2:	80c2      	strh	r2, [r0, #6]
 80197f4:	2300      	movs	r3, #0
 80197f6:	8003      	strh	r3, [r0, #0]
 80197f8:	8043      	strh	r3, [r0, #2]
 80197fa:	e7ee      	b.n	80197da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80197fc:	2300      	movs	r3, #0
 80197fe:	8003      	strh	r3, [r0, #0]
 8019800:	8043      	strh	r3, [r0, #2]
 8019802:	8083      	strh	r3, [r0, #4]
 8019804:	e7d8      	b.n	80197b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019806:	bf00      	nop
 8019808:	2001304c 	.word	0x2001304c
 801980c:	20013054 	.word	0x20013054
 8019810:	20013050 	.word	0x20013050
 8019814:	20013034 	.word	0x20013034
 8019818:	20012fb8 	.word	0x20012fb8
 801981c:	20012fba 	.word	0x20012fba

08019820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019820:	4a17      	ldr	r2, [pc, #92]	; (8019880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019822:	8803      	ldrh	r3, [r0, #0]
 8019824:	8812      	ldrh	r2, [r2, #0]
 8019826:	4293      	cmp	r3, r2
 8019828:	d213      	bcs.n	8019852 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801982a:	4a16      	ldr	r2, [pc, #88]	; (8019884 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801982c:	6812      	ldr	r2, [r2, #0]
 801982e:	2114      	movs	r1, #20
 8019830:	fb01 2303 	mla	r3, r1, r3, r2
 8019834:	8a1a      	ldrh	r2, [r3, #16]
 8019836:	8919      	ldrh	r1, [r3, #8]
 8019838:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801983c:	428a      	cmp	r2, r1
 801983e:	db1d      	blt.n	801987c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019840:	8a58      	ldrh	r0, [r3, #18]
 8019842:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019846:	895b      	ldrh	r3, [r3, #10]
 8019848:	4298      	cmp	r0, r3
 801984a:	bfac      	ite	ge
 801984c:	2000      	movge	r0, #0
 801984e:	2001      	movlt	r0, #1
 8019850:	4770      	bx	lr
 8019852:	490d      	ldr	r1, [pc, #52]	; (8019888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019854:	8809      	ldrh	r1, [r1, #0]
 8019856:	4411      	add	r1, r2
 8019858:	428b      	cmp	r3, r1
 801985a:	da0d      	bge.n	8019878 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801985c:	1a9b      	subs	r3, r3, r2
 801985e:	4a0b      	ldr	r2, [pc, #44]	; (801988c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019860:	6812      	ldr	r2, [r2, #0]
 8019862:	210e      	movs	r1, #14
 8019864:	fb01 2303 	mla	r3, r1, r3, r2
 8019868:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801986c:	891a      	ldrh	r2, [r3, #8]
 801986e:	4291      	cmp	r1, r2
 8019870:	db04      	blt.n	801987c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019872:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019876:	e7e6      	b.n	8019846 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019878:	2000      	movs	r0, #0
 801987a:	4770      	bx	lr
 801987c:	2001      	movs	r0, #1
 801987e:	4770      	bx	lr
 8019880:	2001304c 	.word	0x2001304c
 8019884:	20013054 	.word	0x20013054
 8019888:	20013050 	.word	0x20013050
 801988c:	20013034 	.word	0x20013034

08019890 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8019890:	4a12      	ldr	r2, [pc, #72]	; (80198dc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8019892:	8803      	ldrh	r3, [r0, #0]
 8019894:	8811      	ldrh	r1, [r2, #0]
 8019896:	428b      	cmp	r3, r1
 8019898:	d20b      	bcs.n	80198b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801989a:	4a11      	ldr	r2, [pc, #68]	; (80198e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801989c:	6812      	ldr	r2, [r2, #0]
 801989e:	b112      	cbz	r2, 80198a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80198a0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80198a4:	b9c0      	cbnz	r0, 80198d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80198a6:	4a0f      	ldr	r2, [pc, #60]	; (80198e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80198a8:	6811      	ldr	r1, [r2, #0]
 80198aa:	2214      	movs	r2, #20
 80198ac:	4353      	muls	r3, r2
 80198ae:	58c8      	ldr	r0, [r1, r3]
 80198b0:	4770      	bx	lr
 80198b2:	4a0d      	ldr	r2, [pc, #52]	; (80198e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80198b4:	8812      	ldrh	r2, [r2, #0]
 80198b6:	440a      	add	r2, r1
 80198b8:	4293      	cmp	r3, r2
 80198ba:	da04      	bge.n	80198c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80198bc:	4a08      	ldr	r2, [pc, #32]	; (80198e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80198be:	6812      	ldr	r2, [r2, #0]
 80198c0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80198c4:	4770      	bx	lr
 80198c6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80198ca:	4293      	cmp	r3, r2
 80198cc:	d103      	bne.n	80198d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80198ce:	4b07      	ldr	r3, [pc, #28]	; (80198ec <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80198d0:	681b      	ldr	r3, [r3, #0]
 80198d2:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80198d4:	4770      	bx	lr
 80198d6:	2000      	movs	r0, #0
 80198d8:	4770      	bx	lr
 80198da:	bf00      	nop
 80198dc:	2001304c 	.word	0x2001304c
 80198e0:	20013030 	.word	0x20013030
 80198e4:	20013054 	.word	0x20013054
 80198e8:	20013050 	.word	0x20013050
 80198ec:	20012fc4 	.word	0x20012fc4

080198f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80198f0:	4b24      	ldr	r3, [pc, #144]	; (8019984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80198f2:	8802      	ldrh	r2, [r0, #0]
 80198f4:	8818      	ldrh	r0, [r3, #0]
 80198f6:	4282      	cmp	r2, r0
 80198f8:	d221      	bcs.n	801993e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80198fa:	4b23      	ldr	r3, [pc, #140]	; (8019988 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80198fc:	6819      	ldr	r1, [r3, #0]
 80198fe:	2314      	movs	r3, #20
 8019900:	fb03 1302 	mla	r3, r3, r2, r1
 8019904:	6858      	ldr	r0, [r3, #4]
 8019906:	2800      	cmp	r0, #0
 8019908:	d03a      	beq.n	8019980 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801990a:	4920      	ldr	r1, [pc, #128]	; (801998c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801990c:	6809      	ldr	r1, [r1, #0]
 801990e:	2900      	cmp	r1, #0
 8019910:	d036      	beq.n	8019980 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019912:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019916:	2900      	cmp	r1, #0
 8019918:	d032      	beq.n	8019980 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801991a:	891a      	ldrh	r2, [r3, #8]
 801991c:	8958      	ldrh	r0, [r3, #10]
 801991e:	4350      	muls	r0, r2
 8019920:	7c5a      	ldrb	r2, [r3, #17]
 8019922:	7cdb      	ldrb	r3, [r3, #19]
 8019924:	0952      	lsrs	r2, r2, #5
 8019926:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801992a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801992e:	2b0b      	cmp	r3, #11
 8019930:	bf18      	it	ne
 8019932:	0040      	lslne	r0, r0, #1
 8019934:	3003      	adds	r0, #3
 8019936:	f020 0003 	bic.w	r0, r0, #3
 801993a:	4408      	add	r0, r1
 801993c:	4770      	bx	lr
 801993e:	4b14      	ldr	r3, [pc, #80]	; (8019990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019940:	881b      	ldrh	r3, [r3, #0]
 8019942:	4403      	add	r3, r0
 8019944:	429a      	cmp	r2, r3
 8019946:	da1a      	bge.n	801997e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019948:	4b12      	ldr	r3, [pc, #72]	; (8019994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801994a:	681b      	ldr	r3, [r3, #0]
 801994c:	1a10      	subs	r0, r2, r0
 801994e:	210e      	movs	r1, #14
 8019950:	fb01 3000 	mla	r0, r1, r0, r3
 8019954:	7b03      	ldrb	r3, [r0, #12]
 8019956:	f003 031f 	and.w	r3, r3, #31
 801995a:	2b0b      	cmp	r3, #11
 801995c:	d10b      	bne.n	8019976 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801995e:	8903      	ldrh	r3, [r0, #8]
 8019960:	8940      	ldrh	r0, [r0, #10]
 8019962:	4358      	muls	r0, r3
 8019964:	4b09      	ldr	r3, [pc, #36]	; (801998c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019966:	6819      	ldr	r1, [r3, #0]
 8019968:	3003      	adds	r0, #3
 801996a:	f020 0303 	bic.w	r3, r0, #3
 801996e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019972:	4418      	add	r0, r3
 8019974:	4770      	bx	lr
 8019976:	2b0d      	cmp	r3, #13
 8019978:	d101      	bne.n	801997e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801997a:	300d      	adds	r0, #13
 801997c:	4770      	bx	lr
 801997e:	2000      	movs	r0, #0
 8019980:	4770      	bx	lr
 8019982:	bf00      	nop
 8019984:	2001304c 	.word	0x2001304c
 8019988:	20013054 	.word	0x20013054
 801998c:	20013030 	.word	0x20013030
 8019990:	20013050 	.word	0x20013050
 8019994:	20013034 	.word	0x20013034

08019998 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019998:	b510      	push	{r4, lr}
 801999a:	4a17      	ldr	r2, [pc, #92]	; (80199f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801999c:	8803      	ldrh	r3, [r0, #0]
 801999e:	8812      	ldrh	r2, [r2, #0]
 80199a0:	4293      	cmp	r3, r2
 80199a2:	d20c      	bcs.n	80199be <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80199a4:	4a15      	ldr	r2, [pc, #84]	; (80199fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80199a6:	6812      	ldr	r2, [r2, #0]
 80199a8:	2114      	movs	r1, #20
 80199aa:	fb01 2303 	mla	r3, r1, r3, r2
 80199ae:	7c58      	ldrb	r0, [r3, #17]
 80199b0:	0942      	lsrs	r2, r0, #5
 80199b2:	7cd8      	ldrb	r0, [r3, #19]
 80199b4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80199b8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80199bc:	bd10      	pop	{r4, pc}
 80199be:	4910      	ldr	r1, [pc, #64]	; (8019a00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80199c0:	8809      	ldrh	r1, [r1, #0]
 80199c2:	4411      	add	r1, r2
 80199c4:	428b      	cmp	r3, r1
 80199c6:	da09      	bge.n	80199dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80199c8:	1a9b      	subs	r3, r3, r2
 80199ca:	4a0e      	ldr	r2, [pc, #56]	; (8019a04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80199cc:	6812      	ldr	r2, [r2, #0]
 80199ce:	210e      	movs	r1, #14
 80199d0:	fb01 2303 	mla	r3, r1, r3, r2
 80199d4:	7b18      	ldrb	r0, [r3, #12]
 80199d6:	f000 001f 	and.w	r0, r0, #31
 80199da:	e7ef      	b.n	80199bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80199dc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80199e0:	4293      	cmp	r3, r2
 80199e2:	d106      	bne.n	80199f2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80199e4:	f7ea f994 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80199e8:	6803      	ldr	r3, [r0, #0]
 80199ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80199ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80199f0:	4718      	bx	r3
 80199f2:	2000      	movs	r0, #0
 80199f4:	e7e2      	b.n	80199bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80199f6:	bf00      	nop
 80199f8:	2001304c 	.word	0x2001304c
 80199fc:	20013054 	.word	0x20013054
 8019a00:	20013050 	.word	0x20013050
 8019a04:	20013034 	.word	0x20013034

08019a08 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019a08:	2010      	movs	r0, #16
 8019a0a:	4770      	bx	lr

08019a0c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019a0c:	2000      	movs	r0, #0
 8019a0e:	4770      	bx	lr

08019a10 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019a10:	4b02      	ldr	r3, [pc, #8]	; (8019a1c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8019a12:	8818      	ldrh	r0, [r3, #0]
 8019a14:	0040      	lsls	r0, r0, #1
 8019a16:	b280      	uxth	r0, r0
 8019a18:	4770      	bx	lr
 8019a1a:	bf00      	nop
 8019a1c:	20012fbe 	.word	0x20012fbe

08019a20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019a20:	2bff      	cmp	r3, #255	; 0xff
 8019a22:	d050      	beq.n	8019ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019a24:	2a0b      	cmp	r2, #11
 8019a26:	d04a      	beq.n	8019abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019a28:	d80e      	bhi.n	8019a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019a2a:	2a03      	cmp	r2, #3
 8019a2c:	d03f      	beq.n	8019aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8019a2e:	d804      	bhi.n	8019a3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019a30:	2a01      	cmp	r2, #1
 8019a32:	d03e      	beq.n	8019ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019a34:	d93f      	bls.n	8019ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019a36:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019a38:	4770      	bx	lr
 8019a3a:	2a09      	cmp	r2, #9
 8019a3c:	d03f      	beq.n	8019abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019a3e:	d83c      	bhi.n	8019aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019a40:	2a08      	cmp	r2, #8
 8019a42:	d03a      	beq.n	8019aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019a44:	2000      	movs	r0, #0
 8019a46:	4770      	bx	lr
 8019a48:	2a2f      	cmp	r2, #47	; 0x2f
 8019a4a:	d024      	beq.n	8019a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019a4c:	d80d      	bhi.n	8019a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8019a4e:	2a2d      	cmp	r2, #45	; 0x2d
 8019a50:	d014      	beq.n	8019a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8019a52:	d826      	bhi.n	8019aa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019a54:	2a2c      	cmp	r2, #44	; 0x2c
 8019a56:	d1f5      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a58:	684b      	ldr	r3, [r1, #4]
 8019a5a:	781b      	ldrb	r3, [r3, #0]
 8019a5c:	2b01      	cmp	r3, #1
 8019a5e:	d018      	beq.n	8019a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8019a60:	d323      	bcc.n	8019aaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8019a62:	2b02      	cmp	r3, #2
 8019a64:	d1ee      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a66:	6880      	ldr	r0, [r0, #8]
 8019a68:	4770      	bx	lr
 8019a6a:	2a31      	cmp	r2, #49	; 0x31
 8019a6c:	d004      	beq.n	8019a78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8019a6e:	d328      	bcc.n	8019ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019a70:	2a32      	cmp	r2, #50	; 0x32
 8019a72:	d026      	beq.n	8019ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019a74:	2a33      	cmp	r2, #51	; 0x33
 8019a76:	d1e5      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a78:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019a7a:	4770      	bx	lr
 8019a7c:	684b      	ldr	r3, [r1, #4]
 8019a7e:	781b      	ldrb	r3, [r3, #0]
 8019a80:	2b01      	cmp	r3, #1
 8019a82:	d004      	beq.n	8019a8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019a84:	d30b      	bcc.n	8019a9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019a86:	2b02      	cmp	r3, #2
 8019a88:	d1dc      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a8a:	6900      	ldr	r0, [r0, #16]
 8019a8c:	4770      	bx	lr
 8019a8e:	6a00      	ldr	r0, [r0, #32]
 8019a90:	4770      	bx	lr
 8019a92:	6980      	ldr	r0, [r0, #24]
 8019a94:	4770      	bx	lr
 8019a96:	684b      	ldr	r3, [r1, #4]
 8019a98:	781b      	ldrb	r3, [r3, #0]
 8019a9a:	2b00      	cmp	r3, #0
 8019a9c:	d1d2      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019a9e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019aa0:	4770      	bx	lr
 8019aa2:	684b      	ldr	r3, [r1, #4]
 8019aa4:	781b      	ldrb	r3, [r3, #0]
 8019aa6:	2b00      	cmp	r3, #0
 8019aa8:	d1cc      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019aaa:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019aac:	4770      	bx	lr
 8019aae:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8019ab0:	4770      	bx	lr
 8019ab2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019ab4:	4770      	bx	lr
 8019ab6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019ab8:	4770      	bx	lr
 8019aba:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019abc:	4770      	bx	lr
 8019abe:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8019ac0:	4770      	bx	lr
 8019ac2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019ac4:	4770      	bx	lr
 8019ac6:	2a0b      	cmp	r2, #11
 8019ac8:	d049      	beq.n	8019b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019aca:	d80e      	bhi.n	8019aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019acc:	2a03      	cmp	r2, #3
 8019ace:	d040      	beq.n	8019b52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8019ad0:	d804      	bhi.n	8019adc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8019ad2:	2a01      	cmp	r2, #1
 8019ad4:	d03f      	beq.n	8019b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019ad6:	d940      	bls.n	8019b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019ad8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019ada:	4770      	bx	lr
 8019adc:	2a09      	cmp	r2, #9
 8019ade:	d03e      	beq.n	8019b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019ae0:	d801      	bhi.n	8019ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8019ae2:	2a08      	cmp	r2, #8
 8019ae4:	d1ae      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019ae6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019ae8:	4770      	bx	lr
 8019aea:	2a2f      	cmp	r2, #47	; 0x2f
 8019aec:	d024      	beq.n	8019b38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8019aee:	d80d      	bhi.n	8019b0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8019af0:	2a2d      	cmp	r2, #45	; 0x2d
 8019af2:	d014      	beq.n	8019b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019af4:	d826      	bhi.n	8019b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019af6:	2a2c      	cmp	r2, #44	; 0x2c
 8019af8:	d1a4      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019afa:	684b      	ldr	r3, [r1, #4]
 8019afc:	781b      	ldrb	r3, [r3, #0]
 8019afe:	2b01      	cmp	r3, #1
 8019b00:	d018      	beq.n	8019b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8019b02:	d324      	bcc.n	8019b4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019b04:	2b02      	cmp	r3, #2
 8019b06:	d19d      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b08:	68c0      	ldr	r0, [r0, #12]
 8019b0a:	4770      	bx	lr
 8019b0c:	2a31      	cmp	r2, #49	; 0x31
 8019b0e:	d004      	beq.n	8019b1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8019b10:	d327      	bcc.n	8019b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b12:	2a32      	cmp	r2, #50	; 0x32
 8019b14:	d025      	beq.n	8019b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019b16:	2a33      	cmp	r2, #51	; 0x33
 8019b18:	d194      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b1a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019b1c:	4770      	bx	lr
 8019b1e:	684b      	ldr	r3, [r1, #4]
 8019b20:	781b      	ldrb	r3, [r3, #0]
 8019b22:	2b01      	cmp	r3, #1
 8019b24:	d004      	beq.n	8019b30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019b26:	d30b      	bcc.n	8019b40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019b28:	2b02      	cmp	r3, #2
 8019b2a:	d18b      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b2c:	6940      	ldr	r0, [r0, #20]
 8019b2e:	4770      	bx	lr
 8019b30:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8019b32:	4770      	bx	lr
 8019b34:	69c0      	ldr	r0, [r0, #28]
 8019b36:	4770      	bx	lr
 8019b38:	684b      	ldr	r3, [r1, #4]
 8019b3a:	781b      	ldrb	r3, [r3, #0]
 8019b3c:	2b00      	cmp	r3, #0
 8019b3e:	d181      	bne.n	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b40:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8019b42:	4770      	bx	lr
 8019b44:	684b      	ldr	r3, [r1, #4]
 8019b46:	781b      	ldrb	r3, [r3, #0]
 8019b48:	2b00      	cmp	r3, #0
 8019b4a:	f47f af7b 	bne.w	8019a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019b4e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8019b50:	4770      	bx	lr
 8019b52:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019b54:	4770      	bx	lr
 8019b56:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019b58:	4770      	bx	lr
 8019b5a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019b5c:	4770      	bx	lr
 8019b5e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8019b60:	4770      	bx	lr
 8019b62:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019b64:	4770      	bx	lr

08019b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b6a:	b087      	sub	sp, #28
 8019b6c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019b6e:	9205      	str	r2, [sp, #20]
 8019b70:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019b74:	9202      	str	r2, [sp, #8]
 8019b76:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019b7a:	9101      	str	r1, [sp, #4]
 8019b7c:	6841      	ldr	r1, [r0, #4]
 8019b7e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019b82:	fb01 2404 	mla	r4, r1, r4, r2
 8019b86:	6802      	ldr	r2, [r0, #0]
 8019b88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b8c:	f8de 2000 	ldr.w	r2, [lr]
 8019b90:	9203      	str	r2, [sp, #12]
 8019b92:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019b96:	3204      	adds	r2, #4
 8019b98:	9204      	str	r2, [sp, #16]
 8019b9a:	9a02      	ldr	r2, [sp, #8]
 8019b9c:	43d6      	mvns	r6, r2
 8019b9e:	b2f6      	uxtb	r6, r6
 8019ba0:	9a01      	ldr	r2, [sp, #4]
 8019ba2:	2a00      	cmp	r2, #0
 8019ba4:	dc03      	bgt.n	8019bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019ba6:	9a05      	ldr	r2, [sp, #20]
 8019ba8:	2a00      	cmp	r2, #0
 8019baa:	f340 8129 	ble.w	8019e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019bae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019bb0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019bb4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019bb8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019bbe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bc2:	2b00      	cmp	r3, #0
 8019bc4:	dd0e      	ble.n	8019be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019bc6:	1408      	asrs	r0, r1, #16
 8019bc8:	d405      	bmi.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bca:	4560      	cmp	r0, ip
 8019bcc:	da03      	bge.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bce:	1410      	asrs	r0, r2, #16
 8019bd0:	d401      	bmi.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019bd2:	42b8      	cmp	r0, r7
 8019bd4:	db07      	blt.n	8019be6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019bd6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019bd8:	4401      	add	r1, r0
 8019bda:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019bdc:	3b01      	subs	r3, #1
 8019bde:	4402      	add	r2, r0
 8019be0:	3402      	adds	r4, #2
 8019be2:	e7ee      	b.n	8019bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019be4:	d071      	beq.n	8019cca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019be6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019be8:	1e58      	subs	r0, r3, #1
 8019bea:	fb05 1500 	mla	r5, r5, r0, r1
 8019bee:	142d      	asrs	r5, r5, #16
 8019bf0:	d45f      	bmi.n	8019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019bf2:	4565      	cmp	r5, ip
 8019bf4:	da5d      	bge.n	8019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019bf6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019bf8:	fb05 2000 	mla	r0, r5, r0, r2
 8019bfc:	1400      	asrs	r0, r0, #16
 8019bfe:	d458      	bmi.n	8019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c00:	42b8      	cmp	r0, r7
 8019c02:	da56      	bge.n	8019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019c04:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019c08:	4699      	mov	r9, r3
 8019c0a:	46a2      	mov	sl, r4
 8019c0c:	f1b9 0f00 	cmp.w	r9, #0
 8019c10:	dd57      	ble.n	8019cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019c12:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019c16:	9803      	ldr	r0, [sp, #12]
 8019c18:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019c1c:	140d      	asrs	r5, r1, #16
 8019c1e:	fb07 000c 	mla	r0, r7, ip, r0
 8019c22:	f109 39ff 	add.w	r9, r9, #4294967295
 8019c26:	5d40      	ldrb	r0, [r0, r5]
 8019c28:	9d04      	ldr	r5, [sp, #16]
 8019c2a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c2e:	f8ba 5000 	ldrh.w	r5, [sl]
 8019c32:	122f      	asrs	r7, r5, #8
 8019c34:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019c38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c3c:	fb17 f706 	smulbb	r7, r7, r6
 8019c40:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019c44:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c48:	00ed      	lsls	r5, r5, #3
 8019c4a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019c4e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019c52:	10c7      	asrs	r7, r0, #3
 8019c54:	b2ed      	uxtb	r5, r5
 8019c56:	00c0      	lsls	r0, r0, #3
 8019c58:	fb18 f806 	smulbb	r8, r8, r6
 8019c5c:	fb15 f506 	smulbb	r5, r5, r6
 8019c60:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c64:	b2c0      	uxtb	r0, r0
 8019c66:	fa1f fc8c 	uxth.w	ip, ip
 8019c6a:	fb07 870b 	mla	r7, r7, fp, r8
 8019c6e:	fb00 500b 	mla	r0, r0, fp, r5
 8019c72:	b280      	uxth	r0, r0
 8019c74:	b2bf      	uxth	r7, r7
 8019c76:	f10c 0501 	add.w	r5, ip, #1
 8019c7a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019c7e:	f107 0801 	add.w	r8, r7, #1
 8019c82:	1c45      	adds	r5, r0, #1
 8019c84:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019c88:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019c8c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019c96:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019c9a:	ea45 0c0c 	orr.w	ip, r5, ip
 8019c9e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019ca2:	4401      	add	r1, r0
 8019ca4:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019ca6:	ea4c 0c08 	orr.w	ip, ip, r8
 8019caa:	f82a cb02 	strh.w	ip, [sl], #2
 8019cae:	4402      	add	r2, r0
 8019cb0:	e7ac      	b.n	8019c0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019cb2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019cb6:	f04f 0800 	mov.w	r8, #0
 8019cba:	eb03 0008 	add.w	r0, r3, r8
 8019cbe:	2800      	cmp	r0, #0
 8019cc0:	dc41      	bgt.n	8019d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019cc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019cca:	9b01      	ldr	r3, [sp, #4]
 8019ccc:	2b00      	cmp	r3, #0
 8019cce:	f340 8097 	ble.w	8019e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019cd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019cda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019cde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ce0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ce4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ce8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cec:	eef0 6a62 	vmov.f32	s13, s5
 8019cf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019cf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019cf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cfc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019d00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d04:	eef0 6a43 	vmov.f32	s13, s6
 8019d08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d0c:	ee12 2a90 	vmov	r2, s5
 8019d10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d14:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d18:	ee13 2a10 	vmov	r2, s6
 8019d1c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d20:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d24:	9314      	str	r3, [sp, #80]	; 0x50
 8019d26:	9b01      	ldr	r3, [sp, #4]
 8019d28:	9a05      	ldr	r2, [sp, #20]
 8019d2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d2e:	3b01      	subs	r3, #1
 8019d30:	9301      	str	r3, [sp, #4]
 8019d32:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019d36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d38:	eeb0 3a67 	vmov.f32	s6, s15
 8019d3c:	bf08      	it	eq
 8019d3e:	4613      	moveq	r3, r2
 8019d40:	eef0 2a47 	vmov.f32	s5, s14
 8019d44:	e72c      	b.n	8019ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019d46:	140f      	asrs	r7, r1, #16
 8019d48:	d453      	bmi.n	8019df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019d4e:	42bd      	cmp	r5, r7
 8019d50:	dd4f      	ble.n	8019df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019d56:	d44c      	bmi.n	8019df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d58:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019d5c:	4560      	cmp	r0, ip
 8019d5e:	dd48      	ble.n	8019df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019d60:	9803      	ldr	r0, [sp, #12]
 8019d62:	b22d      	sxth	r5, r5
 8019d64:	fb0c 0505 	mla	r5, ip, r5, r0
 8019d68:	5de8      	ldrb	r0, [r5, r7]
 8019d6a:	9d04      	ldr	r5, [sp, #16]
 8019d6c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d70:	f06f 0501 	mvn.w	r5, #1
 8019d74:	fb05 fb08 	mul.w	fp, r5, r8
 8019d78:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d7c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019d80:	122f      	asrs	r7, r5, #8
 8019d82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d86:	fb17 f706 	smulbb	r7, r7, r6
 8019d8a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019d8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d92:	00ed      	lsls	r5, r5, #3
 8019d94:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019d98:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019d9c:	10c7      	asrs	r7, r0, #3
 8019d9e:	b2ed      	uxtb	r5, r5
 8019da0:	00c0      	lsls	r0, r0, #3
 8019da2:	fb19 f906 	smulbb	r9, r9, r6
 8019da6:	fb15 f506 	smulbb	r5, r5, r6
 8019daa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dae:	b2c0      	uxtb	r0, r0
 8019db0:	fa1f fc8c 	uxth.w	ip, ip
 8019db4:	fb07 970a 	mla	r7, r7, sl, r9
 8019db8:	fb00 500a 	mla	r0, r0, sl, r5
 8019dbc:	b2bf      	uxth	r7, r7
 8019dbe:	b280      	uxth	r0, r0
 8019dc0:	f10c 0501 	add.w	r5, ip, #1
 8019dc4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019dc8:	f107 0901 	add.w	r9, r7, #1
 8019dcc:	1c45      	adds	r5, r0, #1
 8019dce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019dd2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019dd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019dda:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019dde:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019de2:	ea45 0c0c 	orr.w	ip, r5, ip
 8019de6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019dea:	ea4c 0c09 	orr.w	ip, ip, r9
 8019dee:	f824 c00b 	strh.w	ip, [r4, fp]
 8019df2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019df4:	4401      	add	r1, r0
 8019df6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019df8:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dfc:	4402      	add	r2, r0
 8019dfe:	e75c      	b.n	8019cba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019e00:	b007      	add	sp, #28
 8019e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e0a:	b085      	sub	sp, #20
 8019e0c:	4693      	mov	fp, r2
 8019e0e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e10:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e12:	6870      	ldr	r0, [r6, #4]
 8019e14:	9100      	str	r1, [sp, #0]
 8019e16:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e1a:	fb00 2404 	mla	r4, r0, r4, r2
 8019e1e:	6832      	ldr	r2, [r6, #0]
 8019e20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e24:	682a      	ldr	r2, [r5, #0]
 8019e26:	9201      	str	r2, [sp, #4]
 8019e28:	686a      	ldr	r2, [r5, #4]
 8019e2a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019e2e:	3204      	adds	r2, #4
 8019e30:	9202      	str	r2, [sp, #8]
 8019e32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e36:	9a00      	ldr	r2, [sp, #0]
 8019e38:	2a00      	cmp	r2, #0
 8019e3a:	dc03      	bgt.n	8019e44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019e3c:	f1bb 0f00 	cmp.w	fp, #0
 8019e40:	f340 80a0 	ble.w	8019f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019e44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019e4a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019e4e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019e52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019e54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e58:	2b00      	cmp	r3, #0
 8019e5a:	dd0c      	ble.n	8019e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019e5c:	1406      	asrs	r6, r0, #16
 8019e5e:	d405      	bmi.n	8019e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e60:	454e      	cmp	r6, r9
 8019e62:	da03      	bge.n	8019e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e64:	1416      	asrs	r6, r2, #16
 8019e66:	d401      	bmi.n	8019e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019e68:	4546      	cmp	r6, r8
 8019e6a:	db05      	blt.n	8019e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e6c:	4470      	add	r0, lr
 8019e6e:	4462      	add	r2, ip
 8019e70:	3b01      	subs	r3, #1
 8019e72:	3402      	adds	r4, #2
 8019e74:	e7f0      	b.n	8019e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019e76:	d00f      	beq.n	8019e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019e78:	1e5e      	subs	r6, r3, #1
 8019e7a:	fb0e 0706 	mla	r7, lr, r6, r0
 8019e7e:	143f      	asrs	r7, r7, #16
 8019e80:	d541      	bpl.n	8019f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019e82:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019e86:	4698      	mov	r8, r3
 8019e88:	9603      	str	r6, [sp, #12]
 8019e8a:	f1b8 0f00 	cmp.w	r8, #0
 8019e8e:	dc59      	bgt.n	8019f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019e90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e98:	9b00      	ldr	r3, [sp, #0]
 8019e9a:	2b00      	cmp	r3, #0
 8019e9c:	dd72      	ble.n	8019f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019e9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ea2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ea6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019eaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019eac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019eb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019eb4:	eeb0 6a62 	vmov.f32	s12, s5
 8019eb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ebc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ec0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ec4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019ec8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ecc:	eeb0 6a43 	vmov.f32	s12, s6
 8019ed0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ed4:	ee12 2a90 	vmov	r2, s5
 8019ed8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019edc:	fb92 fef3 	sdiv	lr, r2, r3
 8019ee0:	ee13 2a10 	vmov	r2, s6
 8019ee4:	fb92 fcf3 	sdiv	ip, r2, r3
 8019ee8:	9b00      	ldr	r3, [sp, #0]
 8019eea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019eee:	3b01      	subs	r3, #1
 8019ef0:	9300      	str	r3, [sp, #0]
 8019ef2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ef8:	eeb0 3a67 	vmov.f32	s6, s15
 8019efc:	bf08      	it	eq
 8019efe:	465b      	moveq	r3, fp
 8019f00:	eef0 2a47 	vmov.f32	s5, s14
 8019f04:	e797      	b.n	8019e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019f06:	454f      	cmp	r7, r9
 8019f08:	dabb      	bge.n	8019e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f0a:	fb0c 2606 	mla	r6, ip, r6, r2
 8019f0e:	1436      	asrs	r6, r6, #16
 8019f10:	d4b7      	bmi.n	8019e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f12:	4546      	cmp	r6, r8
 8019f14:	dab5      	bge.n	8019e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f16:	461e      	mov	r6, r3
 8019f18:	46a0      	mov	r8, r4
 8019f1a:	2e00      	cmp	r6, #0
 8019f1c:	ddb8      	ble.n	8019e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019f1e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019f22:	9901      	ldr	r1, [sp, #4]
 8019f24:	1417      	asrs	r7, r2, #16
 8019f26:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019f2a:	fb0a 1707 	mla	r7, sl, r7, r1
 8019f2e:	9902      	ldr	r1, [sp, #8]
 8019f30:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019f34:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019f38:	f828 7b02 	strh.w	r7, [r8], #2
 8019f3c:	4470      	add	r0, lr
 8019f3e:	4462      	add	r2, ip
 8019f40:	3e01      	subs	r6, #1
 8019f42:	e7ea      	b.n	8019f1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019f44:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019f48:	d417      	bmi.n	8019f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f4a:	68ae      	ldr	r6, [r5, #8]
 8019f4c:	454e      	cmp	r6, r9
 8019f4e:	dd14      	ble.n	8019f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f50:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019f54:	d411      	bmi.n	8019f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f56:	68ef      	ldr	r7, [r5, #12]
 8019f58:	4557      	cmp	r7, sl
 8019f5a:	dd0e      	ble.n	8019f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019f5c:	9f01      	ldr	r7, [sp, #4]
 8019f5e:	b236      	sxth	r6, r6
 8019f60:	fb0a 7606 	mla	r6, sl, r6, r7
 8019f64:	9f02      	ldr	r7, [sp, #8]
 8019f66:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019f6a:	f06f 0101 	mvn.w	r1, #1
 8019f6e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019f72:	fb01 f608 	mul.w	r6, r1, r8
 8019f76:	9903      	ldr	r1, [sp, #12]
 8019f78:	538f      	strh	r7, [r1, r6]
 8019f7a:	4470      	add	r0, lr
 8019f7c:	4462      	add	r2, ip
 8019f7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f82:	e782      	b.n	8019e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019f84:	b005      	add	sp, #20
 8019f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f8e:	b087      	sub	sp, #28
 8019f90:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019f92:	9205      	str	r2, [sp, #20]
 8019f94:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019f98:	9203      	str	r2, [sp, #12]
 8019f9a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019f9e:	9102      	str	r1, [sp, #8]
 8019fa0:	6861      	ldr	r1, [r4, #4]
 8019fa2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019fa6:	fb01 2000 	mla	r0, r1, r0, r2
 8019faa:	6822      	ldr	r2, [r4, #0]
 8019fac:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019fb0:	9200      	str	r2, [sp, #0]
 8019fb2:	f8dc 2000 	ldr.w	r2, [ip]
 8019fb6:	9204      	str	r2, [sp, #16]
 8019fb8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019fbc:	3204      	adds	r2, #4
 8019fbe:	9201      	str	r2, [sp, #4]
 8019fc0:	9a03      	ldr	r2, [sp, #12]
 8019fc2:	43d5      	mvns	r5, r2
 8019fc4:	b2ed      	uxtb	r5, r5
 8019fc6:	9a02      	ldr	r2, [sp, #8]
 8019fc8:	2a00      	cmp	r2, #0
 8019fca:	dc03      	bgt.n	8019fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019fcc:	9a05      	ldr	r2, [sp, #20]
 8019fce:	2a00      	cmp	r2, #0
 8019fd0:	f340 812c 	ble.w	801a22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019fd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019fd6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019fda:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019fde:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fe2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019fe4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fe8:	2b00      	cmp	r3, #0
 8019fea:	dd10      	ble.n	801a00e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fec:	140c      	asrs	r4, r1, #16
 8019fee:	d405      	bmi.n	8019ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ff0:	4574      	cmp	r4, lr
 8019ff2:	da03      	bge.n	8019ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ff4:	1414      	asrs	r4, r2, #16
 8019ff6:	d401      	bmi.n	8019ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ff8:	42bc      	cmp	r4, r7
 8019ffa:	db09      	blt.n	801a010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ffc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019ffe:	9800      	ldr	r0, [sp, #0]
 801a000:	4421      	add	r1, r4
 801a002:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a004:	3002      	adds	r0, #2
 801a006:	4422      	add	r2, r4
 801a008:	3b01      	subs	r3, #1
 801a00a:	9000      	str	r0, [sp, #0]
 801a00c:	e7ec      	b.n	8019fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a00e:	d071      	beq.n	801a0f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a010:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a012:	1e5c      	subs	r4, r3, #1
 801a014:	fb06 1604 	mla	r6, r6, r4, r1
 801a018:	1436      	asrs	r6, r6, #16
 801a01a:	d45d      	bmi.n	801a0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a01c:	4576      	cmp	r6, lr
 801a01e:	da5b      	bge.n	801a0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a020:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a022:	fb06 2404 	mla	r4, r6, r4, r2
 801a026:	1424      	asrs	r4, r4, #16
 801a028:	d456      	bmi.n	801a0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a02a:	42bc      	cmp	r4, r7
 801a02c:	da54      	bge.n	801a0d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a02e:	f8dd 9000 	ldr.w	r9, [sp]
 801a032:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a036:	4698      	mov	r8, r3
 801a038:	f1b8 0f00 	cmp.w	r8, #0
 801a03c:	dd54      	ble.n	801a0e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a03e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a042:	9804      	ldr	r0, [sp, #16]
 801a044:	1414      	asrs	r4, r2, #16
 801a046:	fb07 0404 	mla	r4, r7, r4, r0
 801a04a:	140e      	asrs	r6, r1, #16
 801a04c:	9801      	ldr	r0, [sp, #4]
 801a04e:	f814 e006 	ldrb.w	lr, [r4, r6]
 801a052:	f8b9 4000 	ldrh.w	r4, [r9]
 801a056:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a05a:	eb00 0b0e 	add.w	fp, r0, lr
 801a05e:	1227      	asrs	r7, r4, #8
 801a060:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a064:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a068:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801a06c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a06e:	fb16 f60a 	smulbb	r6, r6, sl
 801a072:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a076:	fb07 6705 	mla	r7, r7, r5, r6
 801a07a:	10e6      	asrs	r6, r4, #3
 801a07c:	00e4      	lsls	r4, r4, #3
 801a07e:	b2e4      	uxtb	r4, r4
 801a080:	fb1b fb0a 	smulbb	fp, fp, sl
 801a084:	fb14 f405 	smulbb	r4, r4, r5
 801a088:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a08c:	b2bf      	uxth	r7, r7
 801a08e:	fb06 b605 	mla	r6, r6, r5, fp
 801a092:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801a096:	b2b6      	uxth	r6, r6
 801a098:	fa1f fe8e 	uxth.w	lr, lr
 801a09c:	1c7c      	adds	r4, r7, #1
 801a09e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a0a2:	f106 0b01 	add.w	fp, r6, #1
 801a0a6:	f10e 0401 	add.w	r4, lr, #1
 801a0aa:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801a0ae:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a0b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a0b6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a0ba:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a0be:	4327      	orrs	r7, r4
 801a0c0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a0c4:	4401      	add	r1, r0
 801a0c6:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a0c8:	ea47 070b 	orr.w	r7, r7, fp
 801a0cc:	f829 7b02 	strh.w	r7, [r9], #2
 801a0d0:	4402      	add	r2, r0
 801a0d2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0d6:	e7af      	b.n	801a038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a0d8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801a0dc:	f04f 0e00 	mov.w	lr, #0
 801a0e0:	eb03 040e 	add.w	r4, r3, lr
 801a0e4:	2c00      	cmp	r4, #0
 801a0e6:	dc43      	bgt.n	801a170 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a0e8:	9a00      	ldr	r2, [sp, #0]
 801a0ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a0f2:	9300      	str	r3, [sp, #0]
 801a0f4:	9b02      	ldr	r3, [sp, #8]
 801a0f6:	2b00      	cmp	r3, #0
 801a0f8:	f340 8098 	ble.w	801a22c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a0fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a100:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a104:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a108:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a10a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a10e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a112:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a116:	eef0 6a62 	vmov.f32	s13, s5
 801a11a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a11e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a122:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a126:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a12a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a12e:	eef0 6a43 	vmov.f32	s13, s6
 801a132:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a136:	ee12 2a90 	vmov	r2, s5
 801a13a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a13e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a142:	ee13 2a10 	vmov	r2, s6
 801a146:	9313      	str	r3, [sp, #76]	; 0x4c
 801a148:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a14a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a14e:	9314      	str	r3, [sp, #80]	; 0x50
 801a150:	9b02      	ldr	r3, [sp, #8]
 801a152:	9a05      	ldr	r2, [sp, #20]
 801a154:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a158:	3b01      	subs	r3, #1
 801a15a:	9302      	str	r3, [sp, #8]
 801a15c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a160:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a162:	eeb0 3a67 	vmov.f32	s6, s15
 801a166:	bf08      	it	eq
 801a168:	4613      	moveq	r3, r2
 801a16a:	eef0 2a47 	vmov.f32	s5, s14
 801a16e:	e72a      	b.n	8019fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a170:	140f      	asrs	r7, r1, #16
 801a172:	d454      	bmi.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a174:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801a178:	42be      	cmp	r6, r7
 801a17a:	dd50      	ble.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a17c:	ea5f 4822 	movs.w	r8, r2, asr #16
 801a180:	d44d      	bmi.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a182:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801a186:	4544      	cmp	r4, r8
 801a188:	dd49      	ble.n	801a21e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a18a:	9c04      	ldr	r4, [sp, #16]
 801a18c:	b236      	sxth	r6, r6
 801a18e:	fb08 4606 	mla	r6, r8, r6, r4
 801a192:	f06f 0001 	mvn.w	r0, #1
 801a196:	f816 8007 	ldrb.w	r8, [r6, r7]
 801a19a:	9c01      	ldr	r4, [sp, #4]
 801a19c:	fb00 fa0e 	mul.w	sl, r0, lr
 801a1a0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a1a4:	9800      	ldr	r0, [sp, #0]
 801a1a6:	eb04 0b08 	add.w	fp, r4, r8
 801a1aa:	f830 400a 	ldrh.w	r4, [r0, sl]
 801a1ae:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801a1b2:	9801      	ldr	r0, [sp, #4]
 801a1b4:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a1b8:	f810 8008 	ldrb.w	r8, [r0, r8]
 801a1bc:	9800      	ldr	r0, [sp, #0]
 801a1be:	1227      	asrs	r7, r4, #8
 801a1c0:	fb16 f609 	smulbb	r6, r6, r9
 801a1c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a1c8:	fb07 6705 	mla	r7, r7, r5, r6
 801a1cc:	10e6      	asrs	r6, r4, #3
 801a1ce:	00e4      	lsls	r4, r4, #3
 801a1d0:	b2e4      	uxtb	r4, r4
 801a1d2:	fb1b fb09 	smulbb	fp, fp, r9
 801a1d6:	fb14 f405 	smulbb	r4, r4, r5
 801a1da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a1de:	b2bf      	uxth	r7, r7
 801a1e0:	fb06 b605 	mla	r6, r6, r5, fp
 801a1e4:	fb08 4809 	mla	r8, r8, r9, r4
 801a1e8:	b2b6      	uxth	r6, r6
 801a1ea:	fa1f f888 	uxth.w	r8, r8
 801a1ee:	1c7c      	adds	r4, r7, #1
 801a1f0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801a1f4:	f106 0b01 	add.w	fp, r6, #1
 801a1f8:	f108 0401 	add.w	r4, r8, #1
 801a1fc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801a200:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801a204:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a208:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801a20c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801a210:	4327      	orrs	r7, r4
 801a212:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a216:	ea47 070b 	orr.w	r7, r7, fp
 801a21a:	f820 700a 	strh.w	r7, [r0, sl]
 801a21e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a220:	4401      	add	r1, r0
 801a222:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a224:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a228:	4402      	add	r2, r0
 801a22a:	e759      	b.n	801a0e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a22c:	b007      	add	sp, #28
 801a22e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a234 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a238:	b085      	sub	sp, #20
 801a23a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a23e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a240:	9203      	str	r2, [sp, #12]
 801a242:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a246:	6870      	ldr	r0, [r6, #4]
 801a248:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a24a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801a24e:	686f      	ldr	r7, [r5, #4]
 801a250:	9101      	str	r1, [sp, #4]
 801a252:	fb00 2404 	mla	r4, r0, r4, r2
 801a256:	6832      	ldr	r2, [r6, #0]
 801a258:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a25c:	682a      	ldr	r2, [r5, #0]
 801a25e:	9202      	str	r2, [sp, #8]
 801a260:	3704      	adds	r7, #4
 801a262:	9a01      	ldr	r2, [sp, #4]
 801a264:	2a00      	cmp	r2, #0
 801a266:	dc03      	bgt.n	801a270 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a268:	9a03      	ldr	r2, [sp, #12]
 801a26a:	2a00      	cmp	r2, #0
 801a26c:	f340 80cc 	ble.w	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a270:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a272:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a276:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a27a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a27e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a280:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a284:	2b00      	cmp	r3, #0
 801a286:	dd0d      	ble.n	801a2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a288:	1406      	asrs	r6, r0, #16
 801a28a:	d405      	bmi.n	801a298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a28c:	454e      	cmp	r6, r9
 801a28e:	da03      	bge.n	801a298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a290:	1416      	asrs	r6, r2, #16
 801a292:	d401      	bmi.n	801a298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801a294:	4546      	cmp	r6, r8
 801a296:	db06      	blt.n	801a2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a298:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801a29a:	4460      	add	r0, ip
 801a29c:	4432      	add	r2, r6
 801a29e:	3b01      	subs	r3, #1
 801a2a0:	3402      	adds	r4, #2
 801a2a2:	e7ef      	b.n	801a284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a2a4:	d00f      	beq.n	801a2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2a6:	1e5e      	subs	r6, r3, #1
 801a2a8:	fb0c 0e06 	mla	lr, ip, r6, r0
 801a2ac:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801a2b0:	d543      	bpl.n	801a33a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a2b2:	4698      	mov	r8, r3
 801a2b4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801a2b8:	f1b8 0f00 	cmp.w	r8, #0
 801a2bc:	dc71      	bgt.n	801a3a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a2be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a2c6:	9b01      	ldr	r3, [sp, #4]
 801a2c8:	2b00      	cmp	r3, #0
 801a2ca:	f340 809d 	ble.w	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801a2ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a2da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2e4:	eeb0 6a62 	vmov.f32	s12, s5
 801a2e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2f4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a2f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2fc:	eeb0 6a43 	vmov.f32	s12, s6
 801a300:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a304:	ee12 2a90 	vmov	r2, s5
 801a308:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a30c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a310:	ee13 2a10 	vmov	r2, s6
 801a314:	fb92 f3f3 	sdiv	r3, r2, r3
 801a318:	9312      	str	r3, [sp, #72]	; 0x48
 801a31a:	9b01      	ldr	r3, [sp, #4]
 801a31c:	9a03      	ldr	r2, [sp, #12]
 801a31e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a322:	3b01      	subs	r3, #1
 801a324:	9301      	str	r3, [sp, #4]
 801a326:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a32a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a32c:	eeb0 3a67 	vmov.f32	s6, s15
 801a330:	bf08      	it	eq
 801a332:	4613      	moveq	r3, r2
 801a334:	eef0 2a47 	vmov.f32	s5, s14
 801a338:	e793      	b.n	801a262 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a33a:	45ce      	cmp	lr, r9
 801a33c:	dab9      	bge.n	801a2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a33e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a340:	fb01 2606 	mla	r6, r1, r6, r2
 801a344:	1436      	asrs	r6, r6, #16
 801a346:	d4b4      	bmi.n	801a2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a348:	4546      	cmp	r6, r8
 801a34a:	dab2      	bge.n	801a2b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a34c:	4698      	mov	r8, r3
 801a34e:	46a2      	mov	sl, r4
 801a350:	f1b8 0f00 	cmp.w	r8, #0
 801a354:	ddb3      	ble.n	801a2be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a356:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a35a:	9902      	ldr	r1, [sp, #8]
 801a35c:	1416      	asrs	r6, r2, #16
 801a35e:	fb09 1606 	mla	r6, r9, r6, r1
 801a362:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a366:	492a      	ldr	r1, [pc, #168]	; (801a410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a368:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a36c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a370:	eb07 0b0e 	add.w	fp, r7, lr
 801a374:	4460      	add	r0, ip
 801a376:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a37a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a37e:	00f6      	lsls	r6, r6, #3
 801a380:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a384:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a388:	ea49 0606 	orr.w	r6, r9, r6
 801a38c:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a390:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a392:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a396:	f82a 6b02 	strh.w	r6, [sl], #2
 801a39a:	440a      	add	r2, r1
 801a39c:	f108 38ff 	add.w	r8, r8, #4294967295
 801a3a0:	e7d6      	b.n	801a350 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a3a2:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a3a6:	d429      	bmi.n	801a3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3a8:	68ae      	ldr	r6, [r5, #8]
 801a3aa:	454e      	cmp	r6, r9
 801a3ac:	dd26      	ble.n	801a3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3ae:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a3b2:	d423      	bmi.n	801a3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3b4:	68e9      	ldr	r1, [r5, #12]
 801a3b6:	4559      	cmp	r1, fp
 801a3b8:	dd20      	ble.n	801a3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a3ba:	9902      	ldr	r1, [sp, #8]
 801a3bc:	fa0f fe86 	sxth.w	lr, r6
 801a3c0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a3c4:	f06f 0101 	mvn.w	r1, #1
 801a3c8:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a3cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a3d0:	eb07 060e 	add.w	r6, r7, lr
 801a3d4:	fb01 f908 	mul.w	r9, r1, r8
 801a3d8:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a3dc:	7876      	ldrb	r6, [r6, #1]
 801a3de:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a3e2:	00f6      	lsls	r6, r6, #3
 801a3e4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a3e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a3ec:	ea4b 0606 	orr.w	r6, fp, r6
 801a3f0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a3f4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a3f8:	f82a 6009 	strh.w	r6, [sl, r9]
 801a3fc:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a3fe:	4460      	add	r0, ip
 801a400:	440a      	add	r2, r1
 801a402:	f108 38ff 	add.w	r8, r8, #4294967295
 801a406:	e757      	b.n	801a2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a408:	b005      	add	sp, #20
 801a40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a40e:	bf00      	nop
 801a410:	fffff800 	.word	0xfffff800

0801a414 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a418:	b087      	sub	sp, #28
 801a41a:	468b      	mov	fp, r1
 801a41c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a41e:	9204      	str	r2, [sp, #16]
 801a420:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a424:	9205      	str	r2, [sp, #20]
 801a426:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a42a:	6841      	ldr	r1, [r0, #4]
 801a42c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a430:	fb01 2404 	mla	r4, r1, r4, r2
 801a434:	6802      	ldr	r2, [r0, #0]
 801a436:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a43a:	f8dc 2000 	ldr.w	r2, [ip]
 801a43e:	9201      	str	r2, [sp, #4]
 801a440:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a444:	3204      	adds	r2, #4
 801a446:	9202      	str	r2, [sp, #8]
 801a448:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a44c:	f1bb 0f00 	cmp.w	fp, #0
 801a450:	dc03      	bgt.n	801a45a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a452:	9a04      	ldr	r2, [sp, #16]
 801a454:	2a00      	cmp	r2, #0
 801a456:	f340 8138 	ble.w	801a6ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a45a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a45c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a460:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a464:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a468:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a46a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a46e:	2b00      	cmp	r3, #0
 801a470:	dd0e      	ble.n	801a490 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a472:	1402      	asrs	r2, r0, #16
 801a474:	d405      	bmi.n	801a482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a476:	42ba      	cmp	r2, r7
 801a478:	da03      	bge.n	801a482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a47a:	140a      	asrs	r2, r1, #16
 801a47c:	d401      	bmi.n	801a482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a47e:	42b2      	cmp	r2, r6
 801a480:	db07      	blt.n	801a492 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a482:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a484:	4410      	add	r0, r2
 801a486:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a488:	3b01      	subs	r3, #1
 801a48a:	4411      	add	r1, r2
 801a48c:	3402      	adds	r4, #2
 801a48e:	e7ee      	b.n	801a46e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a490:	d019      	beq.n	801a4c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a492:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a494:	1e5a      	subs	r2, r3, #1
 801a496:	fb05 0502 	mla	r5, r5, r2, r0
 801a49a:	142d      	asrs	r5, r5, #16
 801a49c:	d409      	bmi.n	801a4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a49e:	42bd      	cmp	r5, r7
 801a4a0:	da07      	bge.n	801a4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a4a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a4a4:	fb05 1202 	mla	r2, r5, r2, r1
 801a4a8:	1412      	asrs	r2, r2, #16
 801a4aa:	d402      	bmi.n	801a4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a4ac:	42b2      	cmp	r2, r6
 801a4ae:	f2c0 80ac 	blt.w	801a60a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a4b2:	f04f 0e00 	mov.w	lr, #0
 801a4b6:	eb03 020e 	add.w	r2, r3, lr
 801a4ba:	2a00      	cmp	r2, #0
 801a4bc:	dc3e      	bgt.n	801a53c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a4be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a4c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a4c6:	f1bb 0f00 	cmp.w	fp, #0
 801a4ca:	f340 80fe 	ble.w	801a6ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a4ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a4da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4dc:	f1bb 0b01 	subs.w	fp, fp, #1
 801a4e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4e8:	eeb0 6a62 	vmov.f32	s12, s5
 801a4ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4f8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a4fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a500:	eeb0 6a43 	vmov.f32	s12, s6
 801a504:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a508:	ee12 2a90 	vmov	r2, s5
 801a50c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a510:	fb92 f3f3 	sdiv	r3, r2, r3
 801a514:	ee13 2a10 	vmov	r2, s6
 801a518:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a51c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a51e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a520:	fb92 f3f3 	sdiv	r3, r2, r3
 801a524:	9a04      	ldr	r2, [sp, #16]
 801a526:	9314      	str	r3, [sp, #80]	; 0x50
 801a528:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a52c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a52e:	eeb0 3a67 	vmov.f32	s6, s15
 801a532:	bf08      	it	eq
 801a534:	4613      	moveq	r3, r2
 801a536:	eef0 2a47 	vmov.f32	s5, s14
 801a53a:	e787      	b.n	801a44c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a53c:	1406      	asrs	r6, r0, #16
 801a53e:	d45d      	bmi.n	801a5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a540:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a544:	42b5      	cmp	r5, r6
 801a546:	dd59      	ble.n	801a5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a548:	140f      	asrs	r7, r1, #16
 801a54a:	d457      	bmi.n	801a5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a54c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a550:	42ba      	cmp	r2, r7
 801a552:	dd53      	ble.n	801a5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a554:	9a01      	ldr	r2, [sp, #4]
 801a556:	b22d      	sxth	r5, r5
 801a558:	fb07 2505 	mla	r5, r7, r5, r2
 801a55c:	5daa      	ldrb	r2, [r5, r6]
 801a55e:	9d02      	ldr	r5, [sp, #8]
 801a560:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a564:	0e2e      	lsrs	r6, r5, #24
 801a566:	d049      	beq.n	801a5fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a568:	f06f 0201 	mvn.w	r2, #1
 801a56c:	fb02 f20e 	mul.w	r2, r2, lr
 801a570:	9203      	str	r2, [sp, #12]
 801a572:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a576:	9a05      	ldr	r2, [sp, #20]
 801a578:	4356      	muls	r6, r2
 801a57a:	1c72      	adds	r2, r6, #1
 801a57c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a580:	1212      	asrs	r2, r2, #8
 801a582:	fa1f f982 	uxth.w	r9, r2
 801a586:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a58a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a58e:	43d2      	mvns	r2, r2
 801a590:	b2d2      	uxtb	r2, r2
 801a592:	fb16 f609 	smulbb	r6, r6, r9
 801a596:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a59a:	fb07 6702 	mla	r7, r7, r2, r6
 801a59e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a5a2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a5a6:	b2ed      	uxtb	r5, r5
 801a5a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a5ac:	fa5f f888 	uxtb.w	r8, r8
 801a5b0:	fb15 f509 	smulbb	r5, r5, r9
 801a5b4:	fb08 5502 	mla	r5, r8, r2, r5
 801a5b8:	b2bf      	uxth	r7, r7
 801a5ba:	fb1a fa09 	smulbb	sl, sl, r9
 801a5be:	b2ad      	uxth	r5, r5
 801a5c0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a5c4:	fb06 a602 	mla	r6, r6, r2, sl
 801a5c8:	1c7a      	adds	r2, r7, #1
 801a5ca:	f105 0a01 	add.w	sl, r5, #1
 801a5ce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a5d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5d6:	b2b6      	uxth	r6, r6
 801a5d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a5e0:	ea4a 0707 	orr.w	r7, sl, r7
 801a5e4:	f106 0a01 	add.w	sl, r6, #1
 801a5e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5f4:	9a03      	ldr	r2, [sp, #12]
 801a5f6:	ea47 070a 	orr.w	r7, r7, sl
 801a5fa:	52a7      	strh	r7, [r4, r2]
 801a5fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5fe:	4410      	add	r0, r2
 801a600:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a602:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a606:	4411      	add	r1, r2
 801a608:	e755      	b.n	801a4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a60a:	f04f 0800 	mov.w	r8, #0
 801a60e:	eba3 0208 	sub.w	r2, r3, r8
 801a612:	2a00      	cmp	r2, #0
 801a614:	f77f af53 	ble.w	801a4be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a618:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a61c:	9f01      	ldr	r7, [sp, #4]
 801a61e:	140a      	asrs	r2, r1, #16
 801a620:	1405      	asrs	r5, r0, #16
 801a622:	fb06 7202 	mla	r2, r6, r2, r7
 801a626:	5d52      	ldrb	r2, [r2, r5]
 801a628:	9d02      	ldr	r5, [sp, #8]
 801a62a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a62e:	0e2e      	lsrs	r6, r5, #24
 801a630:	d044      	beq.n	801a6bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a632:	9a05      	ldr	r2, [sp, #20]
 801a634:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a638:	4356      	muls	r6, r2
 801a63a:	1c72      	adds	r2, r6, #1
 801a63c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a640:	1212      	asrs	r2, r2, #8
 801a642:	fa1f f982 	uxth.w	r9, r2
 801a646:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a64a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a64e:	43d2      	mvns	r2, r2
 801a650:	b2d2      	uxtb	r2, r2
 801a652:	fb16 f609 	smulbb	r6, r6, r9
 801a656:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a65a:	fb07 6702 	mla	r7, r7, r2, r6
 801a65e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a662:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a666:	b2ed      	uxtb	r5, r5
 801a668:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a66c:	fa5f fe8e 	uxtb.w	lr, lr
 801a670:	fb15 f509 	smulbb	r5, r5, r9
 801a674:	fb0e 5502 	mla	r5, lr, r2, r5
 801a678:	b2bf      	uxth	r7, r7
 801a67a:	fb1a fa09 	smulbb	sl, sl, r9
 801a67e:	b2ad      	uxth	r5, r5
 801a680:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a684:	fb06 a602 	mla	r6, r6, r2, sl
 801a688:	1c7a      	adds	r2, r7, #1
 801a68a:	f105 0a01 	add.w	sl, r5, #1
 801a68e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a692:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a696:	b2b6      	uxth	r6, r6
 801a698:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a69c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6a0:	ea4a 0707 	orr.w	r7, sl, r7
 801a6a4:	f106 0a01 	add.w	sl, r6, #1
 801a6a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a6ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6b4:	ea47 070a 	orr.w	r7, r7, sl
 801a6b8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a6bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6be:	4410      	add	r0, r2
 801a6c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6c2:	f108 0801 	add.w	r8, r8, #1
 801a6c6:	4411      	add	r1, r2
 801a6c8:	e7a1      	b.n	801a60e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a6ca:	b007      	add	sp, #28
 801a6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6d4:	b085      	sub	sp, #20
 801a6d6:	468b      	mov	fp, r1
 801a6d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a6da:	9203      	str	r2, [sp, #12]
 801a6dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a6e0:	6841      	ldr	r1, [r0, #4]
 801a6e2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a6e6:	fb01 2404 	mla	r4, r1, r4, r2
 801a6ea:	6802      	ldr	r2, [r0, #0]
 801a6ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a6f0:	f8de 2000 	ldr.w	r2, [lr]
 801a6f4:	9200      	str	r2, [sp, #0]
 801a6f6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a6fa:	3204      	adds	r2, #4
 801a6fc:	9201      	str	r2, [sp, #4]
 801a6fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a702:	f1bb 0f00 	cmp.w	fp, #0
 801a706:	dc03      	bgt.n	801a710 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a708:	9a03      	ldr	r2, [sp, #12]
 801a70a:	2a00      	cmp	r2, #0
 801a70c:	f340 8153 	ble.w	801a9b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a710:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a712:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a716:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a71a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a71e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a720:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a724:	2b00      	cmp	r3, #0
 801a726:	dd0e      	ble.n	801a746 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a728:	1408      	asrs	r0, r1, #16
 801a72a:	d405      	bmi.n	801a738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a72c:	42b8      	cmp	r0, r7
 801a72e:	da03      	bge.n	801a738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a730:	1410      	asrs	r0, r2, #16
 801a732:	d401      	bmi.n	801a738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a734:	42b0      	cmp	r0, r6
 801a736:	db07      	blt.n	801a748 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a738:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a73a:	4401      	add	r1, r0
 801a73c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a73e:	3b01      	subs	r3, #1
 801a740:	4402      	add	r2, r0
 801a742:	3402      	adds	r4, #2
 801a744:	e7ee      	b.n	801a724 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a746:	d017      	beq.n	801a778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a748:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a74a:	1e58      	subs	r0, r3, #1
 801a74c:	fb05 1500 	mla	r5, r5, r0, r1
 801a750:	142d      	asrs	r5, r5, #16
 801a752:	d409      	bmi.n	801a768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a754:	42bd      	cmp	r5, r7
 801a756:	da07      	bge.n	801a768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a758:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a75a:	fb05 2000 	mla	r0, r5, r0, r2
 801a75e:	1400      	asrs	r0, r0, #16
 801a760:	d402      	bmi.n	801a768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a762:	42b0      	cmp	r0, r6
 801a764:	f2c0 80bc 	blt.w	801a8e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a768:	2600      	movs	r6, #0
 801a76a:	1998      	adds	r0, r3, r6
 801a76c:	2800      	cmp	r0, #0
 801a76e:	dc3e      	bgt.n	801a7ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a770:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a774:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a778:	f1bb 0f00 	cmp.w	fp, #0
 801a77c:	f340 811b 	ble.w	801a9b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a780:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a784:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a788:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a78c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a78e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a792:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a796:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a79a:	eeb0 6a62 	vmov.f32	s12, s5
 801a79e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a7ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7b2:	eeb0 6a43 	vmov.f32	s12, s6
 801a7b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7ba:	ee12 2a90 	vmov	r2, s5
 801a7be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7c6:	ee13 2a10 	vmov	r2, s6
 801a7ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7ce:	9311      	str	r3, [sp, #68]	; 0x44
 801a7d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7d6:	9a03      	ldr	r2, [sp, #12]
 801a7d8:	9312      	str	r3, [sp, #72]	; 0x48
 801a7da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a7de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a7e0:	eeb0 3a67 	vmov.f32	s6, s15
 801a7e4:	bf08      	it	eq
 801a7e6:	4613      	moveq	r3, r2
 801a7e8:	eef0 2a47 	vmov.f32	s5, s14
 801a7ec:	e789      	b.n	801a702 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a7ee:	140f      	asrs	r7, r1, #16
 801a7f0:	d426      	bmi.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a7f2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a7f6:	42bd      	cmp	r5, r7
 801a7f8:	dd22      	ble.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a7fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a7fe:	d41f      	bmi.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a800:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a804:	4560      	cmp	r0, ip
 801a806:	dd1b      	ble.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a808:	9800      	ldr	r0, [sp, #0]
 801a80a:	b22d      	sxth	r5, r5
 801a80c:	fb0c 0505 	mla	r5, ip, r5, r0
 801a810:	5de8      	ldrb	r0, [r5, r7]
 801a812:	9d01      	ldr	r5, [sp, #4]
 801a814:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a818:	0e07      	lsrs	r7, r0, #24
 801a81a:	2fff      	cmp	r7, #255	; 0xff
 801a81c:	d116      	bne.n	801a84c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a81e:	f06f 0501 	mvn.w	r5, #1
 801a822:	fb05 f706 	mul.w	r7, r5, r6
 801a826:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a82a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a82e:	0945      	lsrs	r5, r0, #5
 801a830:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a834:	ea4c 0505 	orr.w	r5, ip, r5
 801a838:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a83c:	4305      	orrs	r5, r0
 801a83e:	53e5      	strh	r5, [r4, r7]
 801a840:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a842:	4401      	add	r1, r0
 801a844:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a846:	3e01      	subs	r6, #1
 801a848:	4402      	add	r2, r0
 801a84a:	e78e      	b.n	801a76a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a84c:	b2fd      	uxtb	r5, r7
 801a84e:	2f00      	cmp	r7, #0
 801a850:	d0f6      	beq.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a852:	f06f 0701 	mvn.w	r7, #1
 801a856:	4377      	muls	r7, r6
 801a858:	fa1f f985 	uxth.w	r9, r5
 801a85c:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a860:	9702      	str	r7, [sp, #8]
 801a862:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a866:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a86a:	43ed      	mvns	r5, r5
 801a86c:	b2ed      	uxtb	r5, r5
 801a86e:	fb17 f709 	smulbb	r7, r7, r9
 801a872:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a876:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a87a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a87e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a882:	b2c0      	uxtb	r0, r0
 801a884:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a888:	fa5f f888 	uxtb.w	r8, r8
 801a88c:	fb10 f009 	smulbb	r0, r0, r9
 801a890:	fb08 0005 	mla	r0, r8, r5, r0
 801a894:	b280      	uxth	r0, r0
 801a896:	fa1f fc8c 	uxth.w	ip, ip
 801a89a:	fb1a fa09 	smulbb	sl, sl, r9
 801a89e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8a2:	fb07 a705 	mla	r7, r7, r5, sl
 801a8a6:	f100 0a01 	add.w	sl, r0, #1
 801a8aa:	f10c 0501 	add.w	r5, ip, #1
 801a8ae:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a8b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a8b6:	b2bf      	uxth	r7, r7
 801a8b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8c0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a8c4:	f107 0a01 	add.w	sl, r7, #1
 801a8c8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a8cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8d4:	9802      	ldr	r0, [sp, #8]
 801a8d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a8da:	f824 c000 	strh.w	ip, [r4, r0]
 801a8de:	e7af      	b.n	801a840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a8e0:	f04f 0800 	mov.w	r8, #0
 801a8e4:	eba3 0008 	sub.w	r0, r3, r8
 801a8e8:	2800      	cmp	r0, #0
 801a8ea:	f77f af41 	ble.w	801a770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a8ee:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a8f2:	9f00      	ldr	r7, [sp, #0]
 801a8f4:	1410      	asrs	r0, r2, #16
 801a8f6:	140d      	asrs	r5, r1, #16
 801a8f8:	fb06 7000 	mla	r0, r6, r0, r7
 801a8fc:	5d40      	ldrb	r0, [r0, r5]
 801a8fe:	9d01      	ldr	r5, [sp, #4]
 801a900:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a904:	0e2e      	lsrs	r6, r5, #24
 801a906:	2eff      	cmp	r6, #255	; 0xff
 801a908:	d112      	bne.n	801a930 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a90a:	482c      	ldr	r0, [pc, #176]	; (801a9bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a90c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a910:	0968      	lsrs	r0, r5, #5
 801a912:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a916:	4330      	orrs	r0, r6
 801a918:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a91c:	4328      	orrs	r0, r5
 801a91e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a922:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a924:	4401      	add	r1, r0
 801a926:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a928:	f108 0801 	add.w	r8, r8, #1
 801a92c:	4402      	add	r2, r0
 801a92e:	e7d9      	b.n	801a8e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a930:	b2f0      	uxtb	r0, r6
 801a932:	2e00      	cmp	r6, #0
 801a934:	d0f5      	beq.n	801a922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a936:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a93a:	fa1f f980 	uxth.w	r9, r0
 801a93e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a942:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a946:	43c0      	mvns	r0, r0
 801a948:	b2c0      	uxtb	r0, r0
 801a94a:	fb16 f609 	smulbb	r6, r6, r9
 801a94e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a952:	fb07 6700 	mla	r7, r7, r0, r6
 801a956:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a95a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a95e:	b2ed      	uxtb	r5, r5
 801a960:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a964:	fa5f fc8c 	uxtb.w	ip, ip
 801a968:	fb15 f509 	smulbb	r5, r5, r9
 801a96c:	fb0c 5500 	mla	r5, ip, r0, r5
 801a970:	b2bf      	uxth	r7, r7
 801a972:	fb1a fa09 	smulbb	sl, sl, r9
 801a976:	b2ad      	uxth	r5, r5
 801a978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a97c:	fb06 a600 	mla	r6, r6, r0, sl
 801a980:	1c78      	adds	r0, r7, #1
 801a982:	f105 0a01 	add.w	sl, r5, #1
 801a986:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a98a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a98e:	b2b6      	uxth	r6, r6
 801a990:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a994:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a998:	ea4a 0707 	orr.w	r7, sl, r7
 801a99c:	f106 0a01 	add.w	sl, r6, #1
 801a9a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a9a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a9a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a9ac:	ea47 070a 	orr.w	r7, r7, sl
 801a9b0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a9b4:	e7b5      	b.n	801a922 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a9b6:	b005      	add	sp, #20
 801a9b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9bc:	fffff800 	.word	0xfffff800

0801a9c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9c4:	b087      	sub	sp, #28
 801a9c6:	468b      	mov	fp, r1
 801a9c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a9ca:	9204      	str	r2, [sp, #16]
 801a9cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a9d0:	9205      	str	r2, [sp, #20]
 801a9d2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a9d6:	6861      	ldr	r1, [r4, #4]
 801a9d8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a9dc:	fb01 2000 	mla	r0, r1, r0, r2
 801a9e0:	6822      	ldr	r2, [r4, #0]
 801a9e2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a9e6:	f8de 2000 	ldr.w	r2, [lr]
 801a9ea:	9201      	str	r2, [sp, #4]
 801a9ec:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a9f0:	9202      	str	r2, [sp, #8]
 801a9f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a9f6:	f1bb 0f00 	cmp.w	fp, #0
 801a9fa:	dc03      	bgt.n	801aa04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a9fc:	9a04      	ldr	r2, [sp, #16]
 801a9fe:	2a00      	cmp	r2, #0
 801aa00:	f340 8142 	ble.w	801ac88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aa04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aa0a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801aa0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa12:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa18:	2b00      	cmp	r3, #0
 801aa1a:	dd0e      	ble.n	801aa3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa1c:	140c      	asrs	r4, r1, #16
 801aa1e:	d405      	bmi.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa20:	42bc      	cmp	r4, r7
 801aa22:	da03      	bge.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa24:	1414      	asrs	r4, r2, #16
 801aa26:	d401      	bmi.n	801aa2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aa28:	42b4      	cmp	r4, r6
 801aa2a:	db07      	blt.n	801aa3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aa2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aa2e:	4421      	add	r1, r4
 801aa30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aa32:	3b01      	subs	r3, #1
 801aa34:	4422      	add	r2, r4
 801aa36:	3002      	adds	r0, #2
 801aa38:	e7ee      	b.n	801aa18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aa3a:	d019      	beq.n	801aa70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801aa3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa3e:	1e5c      	subs	r4, r3, #1
 801aa40:	fb05 1504 	mla	r5, r5, r4, r1
 801aa44:	142d      	asrs	r5, r5, #16
 801aa46:	d409      	bmi.n	801aa5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa48:	42bd      	cmp	r5, r7
 801aa4a:	da07      	bge.n	801aa5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa4e:	fb05 2404 	mla	r4, r5, r4, r2
 801aa52:	1424      	asrs	r4, r4, #16
 801aa54:	d402      	bmi.n	801aa5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801aa56:	42b4      	cmp	r4, r6
 801aa58:	f2c0 80b1 	blt.w	801abbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801aa5c:	f04f 0800 	mov.w	r8, #0
 801aa60:	eb03 0408 	add.w	r4, r3, r8
 801aa64:	2c00      	cmp	r4, #0
 801aa66:	dc3e      	bgt.n	801aae6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801aa68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa70:	f1bb 0f00 	cmp.w	fp, #0
 801aa74:	f340 8108 	ble.w	801ac88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801aa78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa86:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa92:	eeb0 6a62 	vmov.f32	s12, s5
 801aa96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aaa2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aaa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aaaa:	eeb0 6a43 	vmov.f32	s12, s6
 801aaae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aab2:	ee12 2a90 	vmov	r2, s5
 801aab6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aaba:	fb92 f3f3 	sdiv	r3, r2, r3
 801aabe:	ee13 2a10 	vmov	r2, s6
 801aac2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aac6:	9313      	str	r3, [sp, #76]	; 0x4c
 801aac8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aaca:	fb92 f3f3 	sdiv	r3, r2, r3
 801aace:	9a04      	ldr	r2, [sp, #16]
 801aad0:	9314      	str	r3, [sp, #80]	; 0x50
 801aad2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aad6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aad8:	eeb0 3a67 	vmov.f32	s6, s15
 801aadc:	bf08      	it	eq
 801aade:	4613      	moveq	r3, r2
 801aae0:	eef0 2a47 	vmov.f32	s5, s14
 801aae4:	e787      	b.n	801a9f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801aae6:	140e      	asrs	r6, r1, #16
 801aae8:	d462      	bmi.n	801abb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aaea:	f8de 5008 	ldr.w	r5, [lr, #8]
 801aaee:	42b5      	cmp	r5, r6
 801aaf0:	dd5e      	ble.n	801abb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aaf2:	1417      	asrs	r7, r2, #16
 801aaf4:	d45c      	bmi.n	801abb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aaf6:	f8de 400c 	ldr.w	r4, [lr, #12]
 801aafa:	42bc      	cmp	r4, r7
 801aafc:	dd58      	ble.n	801abb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801aafe:	b22d      	sxth	r5, r5
 801ab00:	fb07 6505 	mla	r5, r7, r5, r6
 801ab04:	9c02      	ldr	r4, [sp, #8]
 801ab06:	5d66      	ldrb	r6, [r4, r5]
 801ab08:	2e00      	cmp	r6, #0
 801ab0a:	d051      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ab0c:	9c01      	ldr	r4, [sp, #4]
 801ab0e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ab12:	f06f 0401 	mvn.w	r4, #1
 801ab16:	fb04 f408 	mul.w	r4, r4, r8
 801ab1a:	9403      	str	r4, [sp, #12]
 801ab1c:	5b05      	ldrh	r5, [r0, r4]
 801ab1e:	9c05      	ldr	r4, [sp, #20]
 801ab20:	4366      	muls	r6, r4
 801ab22:	1c74      	adds	r4, r6, #1
 801ab24:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ab28:	1224      	asrs	r4, r4, #8
 801ab2a:	b2a7      	uxth	r7, r4
 801ab2c:	122e      	asrs	r6, r5, #8
 801ab2e:	43e4      	mvns	r4, r4
 801ab30:	b2e4      	uxtb	r4, r4
 801ab32:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801ab36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab3a:	fb16 f604 	smulbb	r6, r6, r4
 801ab3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab46:	00ed      	lsls	r5, r5, #3
 801ab48:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ab4c:	b2ed      	uxtb	r5, r5
 801ab4e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801ab52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ab56:	fb15 f504 	smulbb	r5, r5, r4
 801ab5a:	fa5f f989 	uxtb.w	r9, r9
 801ab5e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab62:	fb09 5507 	mla	r5, r9, r7, r5
 801ab66:	fb1a fa04 	smulbb	sl, sl, r4
 801ab6a:	fa1f fc8c 	uxth.w	ip, ip
 801ab6e:	b2ad      	uxth	r5, r5
 801ab70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab74:	fb06 a607 	mla	r6, r6, r7, sl
 801ab78:	f10c 0401 	add.w	r4, ip, #1
 801ab7c:	f105 0a01 	add.w	sl, r5, #1
 801ab80:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ab84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab88:	b2b6      	uxth	r6, r6
 801ab8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab92:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ab96:	f106 0a01 	add.w	sl, r6, #1
 801ab9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aba2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aba6:	9c03      	ldr	r4, [sp, #12]
 801aba8:	ea4c 0c0a 	orr.w	ip, ip, sl
 801abac:	f820 c004 	strh.w	ip, [r0, r4]
 801abb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801abb2:	4421      	add	r1, r4
 801abb4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801abb6:	f108 38ff 	add.w	r8, r8, #4294967295
 801abba:	4422      	add	r2, r4
 801abbc:	e750      	b.n	801aa60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801abbe:	f04f 0900 	mov.w	r9, #0
 801abc2:	eba3 0409 	sub.w	r4, r3, r9
 801abc6:	2c00      	cmp	r4, #0
 801abc8:	f77f af4e 	ble.w	801aa68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801abcc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801abd0:	140d      	asrs	r5, r1, #16
 801abd2:	1414      	asrs	r4, r2, #16
 801abd4:	fb06 5404 	mla	r4, r6, r4, r5
 801abd8:	9d02      	ldr	r5, [sp, #8]
 801abda:	5d2e      	ldrb	r6, [r5, r4]
 801abdc:	2e00      	cmp	r6, #0
 801abde:	d04c      	beq.n	801ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801abe0:	9d01      	ldr	r5, [sp, #4]
 801abe2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801abe6:	9c05      	ldr	r4, [sp, #20]
 801abe8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801abec:	4366      	muls	r6, r4
 801abee:	1c74      	adds	r4, r6, #1
 801abf0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801abf4:	1224      	asrs	r4, r4, #8
 801abf6:	b2a7      	uxth	r7, r4
 801abf8:	122e      	asrs	r6, r5, #8
 801abfa:	43e4      	mvns	r4, r4
 801abfc:	b2e4      	uxtb	r4, r4
 801abfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801ac02:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac06:	fb16 f604 	smulbb	r6, r6, r4
 801ac0a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac12:	00ed      	lsls	r5, r5, #3
 801ac14:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ac18:	b2ed      	uxtb	r5, r5
 801ac1a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801ac1e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ac22:	fb15 f504 	smulbb	r5, r5, r4
 801ac26:	fa5f f888 	uxtb.w	r8, r8
 801ac2a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ac2e:	fb08 5507 	mla	r5, r8, r7, r5
 801ac32:	fb1a fa04 	smulbb	sl, sl, r4
 801ac36:	fa1f fc8c 	uxth.w	ip, ip
 801ac3a:	b2ad      	uxth	r5, r5
 801ac3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac40:	fb06 a607 	mla	r6, r6, r7, sl
 801ac44:	f10c 0401 	add.w	r4, ip, #1
 801ac48:	f105 0a01 	add.w	sl, r5, #1
 801ac4c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ac50:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac54:	b2b6      	uxth	r6, r6
 801ac56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac5e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac62:	f106 0a01 	add.w	sl, r6, #1
 801ac66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac72:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ac76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ac7a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac7c:	4421      	add	r1, r4
 801ac7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ac80:	f109 0901 	add.w	r9, r9, #1
 801ac84:	4422      	add	r2, r4
 801ac86:	e79c      	b.n	801abc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801ac88:	b007      	add	sp, #28
 801ac8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac92:	b085      	sub	sp, #20
 801ac94:	468b      	mov	fp, r1
 801ac96:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ac98:	9203      	str	r2, [sp, #12]
 801ac9a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801ac9e:	6861      	ldr	r1, [r4, #4]
 801aca0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801aca4:	fb01 2000 	mla	r0, r1, r0, r2
 801aca8:	6822      	ldr	r2, [r4, #0]
 801acaa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801acae:	f8d8 2000 	ldr.w	r2, [r8]
 801acb2:	9200      	str	r2, [sp, #0]
 801acb4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801acb8:	9201      	str	r2, [sp, #4]
 801acba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acbe:	f1bb 0f00 	cmp.w	fp, #0
 801acc2:	dc03      	bgt.n	801accc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801acc4:	9a03      	ldr	r2, [sp, #12]
 801acc6:	2a00      	cmp	r2, #0
 801acc8:	f340 8146 	ble.w	801af58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801accc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801acd2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801acd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801acda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801acdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	dd0e      	ble.n	801ad02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ace4:	140c      	asrs	r4, r1, #16
 801ace6:	d405      	bmi.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ace8:	42bc      	cmp	r4, r7
 801acea:	da03      	bge.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801acec:	1414      	asrs	r4, r2, #16
 801acee:	d401      	bmi.n	801acf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801acf0:	42b4      	cmp	r4, r6
 801acf2:	db07      	blt.n	801ad04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801acf4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801acf6:	4421      	add	r1, r4
 801acf8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801acfa:	3b01      	subs	r3, #1
 801acfc:	4422      	add	r2, r4
 801acfe:	3002      	adds	r0, #2
 801ad00:	e7ee      	b.n	801ace0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad02:	d017      	beq.n	801ad34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad04:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad06:	1e5c      	subs	r4, r3, #1
 801ad08:	fb05 1504 	mla	r5, r5, r4, r1
 801ad0c:	142d      	asrs	r5, r5, #16
 801ad0e:	d409      	bmi.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad10:	42bd      	cmp	r5, r7
 801ad12:	da07      	bge.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ad16:	fb05 2404 	mla	r4, r5, r4, r2
 801ad1a:	1424      	asrs	r4, r4, #16
 801ad1c:	d402      	bmi.n	801ad24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ad1e:	42b4      	cmp	r4, r6
 801ad20:	f2c0 80b3 	blt.w	801ae8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801ad24:	2600      	movs	r6, #0
 801ad26:	199c      	adds	r4, r3, r6
 801ad28:	2c00      	cmp	r4, #0
 801ad2a:	dc3e      	bgt.n	801adaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ad2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad34:	f1bb 0f00 	cmp.w	fp, #0
 801ad38:	f340 810e 	ble.w	801af58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ad3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad4a:	f1bb 0b01 	subs.w	fp, fp, #1
 801ad4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad56:	eeb0 6a62 	vmov.f32	s12, s5
 801ad5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad62:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad66:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad6e:	eeb0 6a43 	vmov.f32	s12, s6
 801ad72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad76:	ee12 2a90 	vmov	r2, s5
 801ad7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad82:	ee13 2a10 	vmov	r2, s6
 801ad86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad8a:	9311      	str	r3, [sp, #68]	; 0x44
 801ad8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad8e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad92:	9a03      	ldr	r2, [sp, #12]
 801ad94:	9312      	str	r3, [sp, #72]	; 0x48
 801ad96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ad9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad9c:	eeb0 3a67 	vmov.f32	s6, s15
 801ada0:	bf08      	it	eq
 801ada2:	4613      	moveq	r3, r2
 801ada4:	eef0 2a47 	vmov.f32	s5, s14
 801ada8:	e789      	b.n	801acbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801adaa:	140f      	asrs	r7, r1, #16
 801adac:	d418      	bmi.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adae:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801adb2:	42bd      	cmp	r5, r7
 801adb4:	dd14      	ble.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801adba:	d411      	bmi.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adbc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801adc0:	4564      	cmp	r4, ip
 801adc2:	dd0d      	ble.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adc4:	b22d      	sxth	r5, r5
 801adc6:	fb0c 7505 	mla	r5, ip, r5, r7
 801adca:	9c01      	ldr	r4, [sp, #4]
 801adcc:	5d64      	ldrb	r4, [r4, r5]
 801adce:	2cff      	cmp	r4, #255	; 0xff
 801add0:	d10c      	bne.n	801adec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801add2:	9c00      	ldr	r4, [sp, #0]
 801add4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801add8:	f06f 0401 	mvn.w	r4, #1
 801addc:	4374      	muls	r4, r6
 801adde:	5305      	strh	r5, [r0, r4]
 801ade0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ade2:	4421      	add	r1, r4
 801ade4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ade6:	3e01      	subs	r6, #1
 801ade8:	4422      	add	r2, r4
 801adea:	e79c      	b.n	801ad26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801adec:	2c00      	cmp	r4, #0
 801adee:	d0f7      	beq.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801adf0:	9f00      	ldr	r7, [sp, #0]
 801adf2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801adf6:	f06f 0501 	mvn.w	r5, #1
 801adfa:	4375      	muls	r5, r6
 801adfc:	9502      	str	r5, [sp, #8]
 801adfe:	5b45      	ldrh	r5, [r0, r5]
 801ae00:	fa1f fc84 	uxth.w	ip, r4
 801ae04:	122f      	asrs	r7, r5, #8
 801ae06:	43e4      	mvns	r4, r4
 801ae08:	b2e4      	uxtb	r4, r4
 801ae0a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801ae0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae12:	fb17 f704 	smulbb	r7, r7, r4
 801ae16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ae1a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ae1e:	00ed      	lsls	r5, r5, #3
 801ae20:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ae24:	b2ed      	uxtb	r5, r5
 801ae26:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ae2a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ae2e:	fb15 f504 	smulbb	r5, r5, r4
 801ae32:	fa5f f989 	uxtb.w	r9, r9
 801ae36:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ae3a:	fb09 550c 	mla	r5, r9, ip, r5
 801ae3e:	fb1a fa04 	smulbb	sl, sl, r4
 801ae42:	fa1f fe8e 	uxth.w	lr, lr
 801ae46:	b2ad      	uxth	r5, r5
 801ae48:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae4c:	fb07 a70c 	mla	r7, r7, ip, sl
 801ae50:	f10e 0401 	add.w	r4, lr, #1
 801ae54:	f105 0a01 	add.w	sl, r5, #1
 801ae58:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ae5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ae60:	b2bf      	uxth	r7, r7
 801ae62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae66:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ae6a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ae6e:	f107 0a01 	add.w	sl, r7, #1
 801ae72:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ae76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae7a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae7e:	9c02      	ldr	r4, [sp, #8]
 801ae80:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ae84:	f820 e004 	strh.w	lr, [r0, r4]
 801ae88:	e7aa      	b.n	801ade0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ae8a:	f04f 0900 	mov.w	r9, #0
 801ae8e:	eba3 0409 	sub.w	r4, r3, r9
 801ae92:	2c00      	cmp	r4, #0
 801ae94:	f77f af4a 	ble.w	801ad2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ae98:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ae9c:	1414      	asrs	r4, r2, #16
 801ae9e:	140d      	asrs	r5, r1, #16
 801aea0:	fb06 5504 	mla	r5, r6, r4, r5
 801aea4:	9c01      	ldr	r4, [sp, #4]
 801aea6:	5d64      	ldrb	r4, [r4, r5]
 801aea8:	2cff      	cmp	r4, #255	; 0xff
 801aeaa:	d10b      	bne.n	801aec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801aeac:	9c00      	ldr	r4, [sp, #0]
 801aeae:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801aeb2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801aeb6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aeb8:	4421      	add	r1, r4
 801aeba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aebc:	f109 0901 	add.w	r9, r9, #1
 801aec0:	4422      	add	r2, r4
 801aec2:	e7e4      	b.n	801ae8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801aec4:	2c00      	cmp	r4, #0
 801aec6:	d0f6      	beq.n	801aeb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801aec8:	9e00      	ldr	r6, [sp, #0]
 801aeca:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801aece:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801aed2:	b2a7      	uxth	r7, r4
 801aed4:	122e      	asrs	r6, r5, #8
 801aed6:	43e4      	mvns	r4, r4
 801aed8:	b2e4      	uxtb	r4, r4
 801aeda:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801aede:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aee2:	fb16 f604 	smulbb	r6, r6, r4
 801aee6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aeea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aeee:	00ed      	lsls	r5, r5, #3
 801aef0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801aef4:	b2ed      	uxtb	r5, r5
 801aef6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801aefa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aefe:	fb15 f504 	smulbb	r5, r5, r4
 801af02:	fa5f fe8e 	uxtb.w	lr, lr
 801af06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801af0a:	fb0e 5507 	mla	r5, lr, r7, r5
 801af0e:	fb1a fa04 	smulbb	sl, sl, r4
 801af12:	fa1f fc8c 	uxth.w	ip, ip
 801af16:	b2ad      	uxth	r5, r5
 801af18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af1c:	fb06 a607 	mla	r6, r6, r7, sl
 801af20:	f10c 0401 	add.w	r4, ip, #1
 801af24:	f105 0a01 	add.w	sl, r5, #1
 801af28:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801af2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af30:	b2b6      	uxth	r6, r6
 801af32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801af3a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801af3e:	f106 0a01 	add.w	sl, r6, #1
 801af42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af4e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801af52:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801af56:	e7ae      	b.n	801aeb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801af58:	b005      	add	sp, #20
 801af5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af62:	b085      	sub	sp, #20
 801af64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801af66:	9203      	str	r2, [sp, #12]
 801af68:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801af6c:	9201      	str	r2, [sp, #4]
 801af6e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801af72:	9100      	str	r1, [sp, #0]
 801af74:	6841      	ldr	r1, [r0, #4]
 801af76:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801af7a:	fb01 2404 	mla	r4, r1, r4, r2
 801af7e:	6802      	ldr	r2, [r0, #0]
 801af80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801af84:	f8de 2000 	ldr.w	r2, [lr]
 801af88:	9202      	str	r2, [sp, #8]
 801af8a:	9a01      	ldr	r2, [sp, #4]
 801af8c:	43d6      	mvns	r6, r2
 801af8e:	b2f6      	uxtb	r6, r6
 801af90:	9a00      	ldr	r2, [sp, #0]
 801af92:	2a00      	cmp	r2, #0
 801af94:	dc03      	bgt.n	801af9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801af96:	9a03      	ldr	r2, [sp, #12]
 801af98:	2a00      	cmp	r2, #0
 801af9a:	f340 8124 	ble.w	801b1e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801af9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801afa0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801afa4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801afa8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801afac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801afae:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801afb2:	2b00      	cmp	r3, #0
 801afb4:	dd0e      	ble.n	801afd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801afb6:	1408      	asrs	r0, r1, #16
 801afb8:	d405      	bmi.n	801afc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afba:	4560      	cmp	r0, ip
 801afbc:	da03      	bge.n	801afc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afbe:	1410      	asrs	r0, r2, #16
 801afc0:	d401      	bmi.n	801afc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801afc2:	42b8      	cmp	r0, r7
 801afc4:	db07      	blt.n	801afd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801afc6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801afc8:	4401      	add	r1, r0
 801afca:	9812      	ldr	r0, [sp, #72]	; 0x48
 801afcc:	3b01      	subs	r3, #1
 801afce:	4402      	add	r2, r0
 801afd0:	3402      	adds	r4, #2
 801afd2:	e7ee      	b.n	801afb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801afd4:	d06e      	beq.n	801b0b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801afd6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801afd8:	1e58      	subs	r0, r3, #1
 801afda:	fb05 1500 	mla	r5, r5, r0, r1
 801afde:	142d      	asrs	r5, r5, #16
 801afe0:	d45c      	bmi.n	801b09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801afe2:	4565      	cmp	r5, ip
 801afe4:	da5a      	bge.n	801b09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801afe6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801afe8:	fb05 2000 	mla	r0, r5, r0, r2
 801afec:	1400      	asrs	r0, r0, #16
 801afee:	d455      	bmi.n	801b09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aff0:	42b8      	cmp	r0, r7
 801aff2:	da53      	bge.n	801b09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aff4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801aff8:	4699      	mov	r9, r3
 801affa:	46a2      	mov	sl, r4
 801affc:	f1b9 0f00 	cmp.w	r9, #0
 801b000:	dd54      	ble.n	801b0ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b002:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b006:	140d      	asrs	r5, r1, #16
 801b008:	1410      	asrs	r0, r2, #16
 801b00a:	fb07 5000 	mla	r0, r7, r0, r5
 801b00e:	9d02      	ldr	r5, [sp, #8]
 801b010:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b014:	f8ba 5000 	ldrh.w	r5, [sl]
 801b018:	122f      	asrs	r7, r5, #8
 801b01a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b01e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b022:	fb17 f706 	smulbb	r7, r7, r6
 801b026:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b02a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b02e:	00ed      	lsls	r5, r5, #3
 801b030:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b034:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b038:	10c7      	asrs	r7, r0, #3
 801b03a:	b2ed      	uxtb	r5, r5
 801b03c:	00c0      	lsls	r0, r0, #3
 801b03e:	fb18 f806 	smulbb	r8, r8, r6
 801b042:	fb15 f506 	smulbb	r5, r5, r6
 801b046:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b04a:	b2c0      	uxtb	r0, r0
 801b04c:	fa1f fc8c 	uxth.w	ip, ip
 801b050:	fb07 870b 	mla	r7, r7, fp, r8
 801b054:	fb00 500b 	mla	r0, r0, fp, r5
 801b058:	b280      	uxth	r0, r0
 801b05a:	b2bf      	uxth	r7, r7
 801b05c:	f10c 0501 	add.w	r5, ip, #1
 801b060:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b064:	f107 0801 	add.w	r8, r7, #1
 801b068:	1c45      	adds	r5, r0, #1
 801b06a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b06e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b072:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b074:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b078:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b07c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b080:	ea45 0c0c 	orr.w	ip, r5, ip
 801b084:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b088:	4401      	add	r1, r0
 801b08a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b08c:	ea4c 0c08 	orr.w	ip, ip, r8
 801b090:	f82a cb02 	strh.w	ip, [sl], #2
 801b094:	4402      	add	r2, r0
 801b096:	f109 39ff 	add.w	r9, r9, #4294967295
 801b09a:	e7af      	b.n	801affc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b09c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801b0a0:	f04f 0800 	mov.w	r8, #0
 801b0a4:	eb03 0008 	add.w	r0, r3, r8
 801b0a8:	2800      	cmp	r0, #0
 801b0aa:	dc41      	bgt.n	801b130 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b0ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0b4:	9b00      	ldr	r3, [sp, #0]
 801b0b6:	2b00      	cmp	r3, #0
 801b0b8:	f340 8095 	ble.w	801b1e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b0bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b0c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b0c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0d6:	eef0 6a62 	vmov.f32	s13, s5
 801b0da:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0e6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801b0ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0ee:	eef0 6a43 	vmov.f32	s13, s6
 801b0f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0f6:	ee12 2a90 	vmov	r2, s5
 801b0fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801b102:	ee13 2a10 	vmov	r2, s6
 801b106:	9311      	str	r3, [sp, #68]	; 0x44
 801b108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b10a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b10e:	9312      	str	r3, [sp, #72]	; 0x48
 801b110:	9b00      	ldr	r3, [sp, #0]
 801b112:	9a03      	ldr	r2, [sp, #12]
 801b114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b118:	3b01      	subs	r3, #1
 801b11a:	9300      	str	r3, [sp, #0]
 801b11c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801b120:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b122:	eeb0 3a67 	vmov.f32	s6, s15
 801b126:	bf08      	it	eq
 801b128:	4613      	moveq	r3, r2
 801b12a:	eef0 2a47 	vmov.f32	s5, s14
 801b12e:	e72f      	b.n	801af90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b130:	140f      	asrs	r7, r1, #16
 801b132:	d451      	bmi.n	801b1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b134:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b138:	42bd      	cmp	r5, r7
 801b13a:	dd4d      	ble.n	801b1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b13c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b140:	d44a      	bmi.n	801b1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b142:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b146:	4560      	cmp	r0, ip
 801b148:	dd46      	ble.n	801b1d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801b14a:	b22d      	sxth	r5, r5
 801b14c:	fb0c 7505 	mla	r5, ip, r5, r7
 801b150:	9802      	ldr	r0, [sp, #8]
 801b152:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801b156:	f06f 0501 	mvn.w	r5, #1
 801b15a:	fb05 fb08 	mul.w	fp, r5, r8
 801b15e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b162:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b166:	122f      	asrs	r7, r5, #8
 801b168:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b16c:	fb17 f706 	smulbb	r7, r7, r6
 801b170:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b174:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b178:	00ed      	lsls	r5, r5, #3
 801b17a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b17e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b182:	10c7      	asrs	r7, r0, #3
 801b184:	b2ed      	uxtb	r5, r5
 801b186:	00c0      	lsls	r0, r0, #3
 801b188:	fb19 f906 	smulbb	r9, r9, r6
 801b18c:	fb15 f506 	smulbb	r5, r5, r6
 801b190:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b194:	b2c0      	uxtb	r0, r0
 801b196:	fa1f fc8c 	uxth.w	ip, ip
 801b19a:	fb07 970a 	mla	r7, r7, sl, r9
 801b19e:	fb00 500a 	mla	r0, r0, sl, r5
 801b1a2:	b2bf      	uxth	r7, r7
 801b1a4:	b280      	uxth	r0, r0
 801b1a6:	f10c 0501 	add.w	r5, ip, #1
 801b1aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b1ae:	f107 0901 	add.w	r9, r7, #1
 801b1b2:	1c45      	adds	r5, r0, #1
 801b1b4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b1b8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b1bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b1c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b1c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b1c8:	ea45 0c0c 	orr.w	ip, r5, ip
 801b1cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b1d0:	ea4c 0c09 	orr.w	ip, ip, r9
 801b1d4:	f824 c00b 	strh.w	ip, [r4, fp]
 801b1d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b1da:	4401      	add	r1, r0
 801b1dc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b1de:	f108 38ff 	add.w	r8, r8, #4294967295
 801b1e2:	4402      	add	r2, r0
 801b1e4:	e75e      	b.n	801b0a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801b1e6:	b005      	add	sp, #20
 801b1e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1f0:	b085      	sub	sp, #20
 801b1f2:	4693      	mov	fp, r2
 801b1f4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b1f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b1f8:	6870      	ldr	r0, [r6, #4]
 801b1fa:	9101      	str	r1, [sp, #4]
 801b1fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b200:	fb00 2404 	mla	r4, r0, r4, r2
 801b204:	6832      	ldr	r2, [r6, #0]
 801b206:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801b20a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b20e:	682a      	ldr	r2, [r5, #0]
 801b210:	9202      	str	r2, [sp, #8]
 801b212:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b216:	9a01      	ldr	r2, [sp, #4]
 801b218:	2a00      	cmp	r2, #0
 801b21a:	dc03      	bgt.n	801b224 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b21c:	f1bb 0f00 	cmp.w	fp, #0
 801b220:	f340 809a 	ble.w	801b358 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b224:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b226:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b22a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b22e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b232:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b234:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b238:	2b00      	cmp	r3, #0
 801b23a:	dd0c      	ble.n	801b256 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b23c:	1406      	asrs	r6, r0, #16
 801b23e:	d405      	bmi.n	801b24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b240:	454e      	cmp	r6, r9
 801b242:	da03      	bge.n	801b24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b244:	1416      	asrs	r6, r2, #16
 801b246:	d401      	bmi.n	801b24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b248:	4546      	cmp	r6, r8
 801b24a:	db05      	blt.n	801b258 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b24c:	4470      	add	r0, lr
 801b24e:	4462      	add	r2, ip
 801b250:	3b01      	subs	r3, #1
 801b252:	3402      	adds	r4, #2
 801b254:	e7f0      	b.n	801b238 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b256:	d00f      	beq.n	801b278 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b258:	1e5e      	subs	r6, r3, #1
 801b25a:	fb0e 0706 	mla	r7, lr, r6, r0
 801b25e:	143f      	asrs	r7, r7, #16
 801b260:	d541      	bpl.n	801b2e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801b262:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b266:	4698      	mov	r8, r3
 801b268:	9603      	str	r6, [sp, #12]
 801b26a:	f1b8 0f00 	cmp.w	r8, #0
 801b26e:	dc56      	bgt.n	801b31e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801b270:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b274:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b278:	9b01      	ldr	r3, [sp, #4]
 801b27a:	2b00      	cmp	r3, #0
 801b27c:	dd6c      	ble.n	801b358 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801b27e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b282:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b286:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b28a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b28c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b290:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b294:	eeb0 6a62 	vmov.f32	s12, s5
 801b298:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b29c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b2a4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b2a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2ac:	eeb0 6a43 	vmov.f32	s12, s6
 801b2b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2b4:	ee12 2a90 	vmov	r2, s5
 801b2b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2bc:	fb92 fef3 	sdiv	lr, r2, r3
 801b2c0:	ee13 2a10 	vmov	r2, s6
 801b2c4:	fb92 fcf3 	sdiv	ip, r2, r3
 801b2c8:	9b01      	ldr	r3, [sp, #4]
 801b2ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2ce:	3b01      	subs	r3, #1
 801b2d0:	9301      	str	r3, [sp, #4]
 801b2d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b2d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b2d8:	eeb0 3a67 	vmov.f32	s6, s15
 801b2dc:	bf08      	it	eq
 801b2de:	465b      	moveq	r3, fp
 801b2e0:	eef0 2a47 	vmov.f32	s5, s14
 801b2e4:	e797      	b.n	801b216 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b2e6:	454f      	cmp	r7, r9
 801b2e8:	dabb      	bge.n	801b262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b2ea:	fb0c 2606 	mla	r6, ip, r6, r2
 801b2ee:	1436      	asrs	r6, r6, #16
 801b2f0:	d4b7      	bmi.n	801b262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b2f2:	4546      	cmp	r6, r8
 801b2f4:	dab5      	bge.n	801b262 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b2f6:	461e      	mov	r6, r3
 801b2f8:	46a0      	mov	r8, r4
 801b2fa:	2e00      	cmp	r6, #0
 801b2fc:	ddb8      	ble.n	801b270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b2fe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b302:	9902      	ldr	r1, [sp, #8]
 801b304:	1417      	asrs	r7, r2, #16
 801b306:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b30a:	fb0a 9707 	mla	r7, sl, r7, r9
 801b30e:	4470      	add	r0, lr
 801b310:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b314:	f828 7b02 	strh.w	r7, [r8], #2
 801b318:	4462      	add	r2, ip
 801b31a:	3e01      	subs	r6, #1
 801b31c:	e7ed      	b.n	801b2fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b31e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b322:	d414      	bmi.n	801b34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b324:	68ae      	ldr	r6, [r5, #8]
 801b326:	454e      	cmp	r6, r9
 801b328:	dd11      	ble.n	801b34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b32a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b32e:	d40e      	bmi.n	801b34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b330:	68ef      	ldr	r7, [r5, #12]
 801b332:	4557      	cmp	r7, sl
 801b334:	dd0b      	ble.n	801b34e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b336:	b236      	sxth	r6, r6
 801b338:	fb0a 9606 	mla	r6, sl, r6, r9
 801b33c:	9f02      	ldr	r7, [sp, #8]
 801b33e:	f06f 0101 	mvn.w	r1, #1
 801b342:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b346:	fb01 f608 	mul.w	r6, r1, r8
 801b34a:	9903      	ldr	r1, [sp, #12]
 801b34c:	538f      	strh	r7, [r1, r6]
 801b34e:	4470      	add	r0, lr
 801b350:	4462      	add	r2, ip
 801b352:	f108 38ff 	add.w	r8, r8, #4294967295
 801b356:	e788      	b.n	801b26a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b358:	b005      	add	sp, #20
 801b35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b35e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b35e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b362:	b087      	sub	sp, #28
 801b364:	468b      	mov	fp, r1
 801b366:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b368:	9203      	str	r2, [sp, #12]
 801b36a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b36e:	9204      	str	r2, [sp, #16]
 801b370:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b374:	6841      	ldr	r1, [r0, #4]
 801b376:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b37a:	fb01 2505 	mla	r5, r1, r5, r2
 801b37e:	6802      	ldr	r2, [r0, #0]
 801b380:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b384:	f8d9 2000 	ldr.w	r2, [r9]
 801b388:	9201      	str	r2, [sp, #4]
 801b38a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b38e:	f1bb 0f00 	cmp.w	fp, #0
 801b392:	dc03      	bgt.n	801b39c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b394:	9a03      	ldr	r2, [sp, #12]
 801b396:	2a00      	cmp	r2, #0
 801b398:	f340 8159 	ble.w	801b64e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b39c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b39e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b3a2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b3a6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b3aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b3ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b3b0:	2b00      	cmp	r3, #0
 801b3b2:	dd0e      	ble.n	801b3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b3b4:	1402      	asrs	r2, r0, #16
 801b3b6:	d405      	bmi.n	801b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3b8:	42ba      	cmp	r2, r7
 801b3ba:	da03      	bge.n	801b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3bc:	140a      	asrs	r2, r1, #16
 801b3be:	d401      	bmi.n	801b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3c0:	42b2      	cmp	r2, r6
 801b3c2:	db07      	blt.n	801b3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b3c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3c6:	4410      	add	r0, r2
 801b3c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3ca:	3b01      	subs	r3, #1
 801b3cc:	4411      	add	r1, r2
 801b3ce:	3502      	adds	r5, #2
 801b3d0:	e7ee      	b.n	801b3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b3d2:	d017      	beq.n	801b404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b3d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b3d6:	1e5a      	subs	r2, r3, #1
 801b3d8:	fb04 0402 	mla	r4, r4, r2, r0
 801b3dc:	1424      	asrs	r4, r4, #16
 801b3de:	d409      	bmi.n	801b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b3e0:	42bc      	cmp	r4, r7
 801b3e2:	da07      	bge.n	801b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b3e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b3e6:	fb04 1202 	mla	r2, r4, r2, r1
 801b3ea:	1412      	asrs	r2, r2, #16
 801b3ec:	d402      	bmi.n	801b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b3ee:	42b2      	cmp	r2, r6
 801b3f0:	f2c0 80bf 	blt.w	801b572 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b3f4:	2700      	movs	r7, #0
 801b3f6:	19da      	adds	r2, r3, r7
 801b3f8:	2a00      	cmp	r2, #0
 801b3fa:	dc3e      	bgt.n	801b47a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b3fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b400:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b404:	f1bb 0f00 	cmp.w	fp, #0
 801b408:	f340 8121 	ble.w	801b64e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b40c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b410:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b414:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b418:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b41a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b41e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b422:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b426:	eeb0 6a62 	vmov.f32	s12, s5
 801b42a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b42e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b432:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b436:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b43a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b43e:	eeb0 6a43 	vmov.f32	s12, s6
 801b442:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b446:	ee12 2a90 	vmov	r2, s5
 801b44a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b44e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b452:	ee13 2a10 	vmov	r2, s6
 801b456:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b45a:	9313      	str	r3, [sp, #76]	; 0x4c
 801b45c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b45e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b462:	9a03      	ldr	r2, [sp, #12]
 801b464:	9314      	str	r3, [sp, #80]	; 0x50
 801b466:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b46a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b46c:	eeb0 3a67 	vmov.f32	s6, s15
 801b470:	bf08      	it	eq
 801b472:	4613      	moveq	r3, r2
 801b474:	eef0 2a47 	vmov.f32	s5, s14
 801b478:	e789      	b.n	801b38e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b47a:	1406      	asrs	r6, r0, #16
 801b47c:	d42d      	bmi.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b47e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b482:	42b4      	cmp	r4, r6
 801b484:	dd29      	ble.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b486:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b48a:	d426      	bmi.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b48c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b490:	4562      	cmp	r2, ip
 801b492:	dd22      	ble.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b494:	b224      	sxth	r4, r4
 801b496:	9a01      	ldr	r2, [sp, #4]
 801b498:	fb0c 6404 	mla	r4, ip, r4, r6
 801b49c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b4a0:	0e22      	lsrs	r2, r4, #24
 801b4a2:	d01a      	beq.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b4a4:	9e04      	ldr	r6, [sp, #16]
 801b4a6:	4372      	muls	r2, r6
 801b4a8:	1c56      	adds	r6, r2, #1
 801b4aa:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b4ae:	1212      	asrs	r2, r2, #8
 801b4b0:	0a26      	lsrs	r6, r4, #8
 801b4b2:	2aff      	cmp	r2, #255	; 0xff
 801b4b4:	9605      	str	r6, [sp, #20]
 801b4b6:	d116      	bne.n	801b4e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b4b8:	f06f 0201 	mvn.w	r2, #1
 801b4bc:	fb02 fc07 	mul.w	ip, r2, r7
 801b4c0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b4c4:	0962      	lsrs	r2, r4, #5
 801b4c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4ca:	f026 0607 	bic.w	r6, r6, #7
 801b4ce:	4316      	orrs	r6, r2
 801b4d0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b4d4:	4326      	orrs	r6, r4
 801b4d6:	f825 600c 	strh.w	r6, [r5, ip]
 801b4da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4dc:	4410      	add	r0, r2
 801b4de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4e0:	3f01      	subs	r7, #1
 801b4e2:	4411      	add	r1, r2
 801b4e4:	e787      	b.n	801b3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b4e6:	f06f 0601 	mvn.w	r6, #1
 801b4ea:	437e      	muls	r6, r7
 801b4ec:	fa1f fa82 	uxth.w	sl, r2
 801b4f0:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b4f4:	9602      	str	r6, [sp, #8]
 801b4f6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b4fa:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b4fe:	43d2      	mvns	r2, r2
 801b500:	b2d2      	uxtb	r2, r2
 801b502:	fb1c fc0a 	smulbb	ip, ip, sl
 801b506:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b50a:	fb0e ce02 	mla	lr, lr, r2, ip
 801b50e:	b2e4      	uxtb	r4, r4
 801b510:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b514:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b518:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b51c:	fa5f f888 	uxtb.w	r8, r8
 801b520:	fb14 f40a 	smulbb	r4, r4, sl
 801b524:	fb08 4402 	mla	r4, r8, r2, r4
 801b528:	fa1f fe8e 	uxth.w	lr, lr
 801b52c:	fb16 f60a 	smulbb	r6, r6, sl
 801b530:	b2a4      	uxth	r4, r4
 801b532:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b536:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b53a:	f10e 0201 	add.w	r2, lr, #1
 801b53e:	1c66      	adds	r6, r4, #1
 801b540:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b544:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b548:	fa1f fc8c 	uxth.w	ip, ip
 801b54c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b550:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b554:	ea46 0e0e 	orr.w	lr, r6, lr
 801b558:	f10c 0601 	add.w	r6, ip, #1
 801b55c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b560:	0976      	lsrs	r6, r6, #5
 801b562:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b566:	9a02      	ldr	r2, [sp, #8]
 801b568:	ea4e 0e06 	orr.w	lr, lr, r6
 801b56c:	f825 e002 	strh.w	lr, [r5, r2]
 801b570:	e7b3      	b.n	801b4da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b572:	f04f 0800 	mov.w	r8, #0
 801b576:	eba3 0208 	sub.w	r2, r3, r8
 801b57a:	2a00      	cmp	r2, #0
 801b57c:	f77f af3e 	ble.w	801b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b580:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b584:	1404      	asrs	r4, r0, #16
 801b586:	140a      	asrs	r2, r1, #16
 801b588:	fb06 4202 	mla	r2, r6, r2, r4
 801b58c:	9c01      	ldr	r4, [sp, #4]
 801b58e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b592:	0e22      	lsrs	r2, r4, #24
 801b594:	d016      	beq.n	801b5c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b596:	9e04      	ldr	r6, [sp, #16]
 801b598:	4372      	muls	r2, r6
 801b59a:	1c56      	adds	r6, r2, #1
 801b59c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b5a0:	1212      	asrs	r2, r2, #8
 801b5a2:	2aff      	cmp	r2, #255	; 0xff
 801b5a4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b5a8:	d113      	bne.n	801b5d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b5aa:	0962      	lsrs	r2, r4, #5
 801b5ac:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b5b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5b4:	f026 0607 	bic.w	r6, r6, #7
 801b5b8:	4316      	orrs	r6, r2
 801b5ba:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b5be:	4326      	orrs	r6, r4
 801b5c0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b5c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b5c6:	4410      	add	r0, r2
 801b5c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b5ca:	f108 0801 	add.w	r8, r8, #1
 801b5ce:	4411      	add	r1, r2
 801b5d0:	e7d1      	b.n	801b576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b5d2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b5d6:	fa1f fa82 	uxth.w	sl, r2
 801b5da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b5de:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b5e2:	43d2      	mvns	r2, r2
 801b5e4:	b2d2      	uxtb	r2, r2
 801b5e6:	fb17 f70a 	smulbb	r7, r7, sl
 801b5ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b5ee:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b5f2:	b2e4      	uxtb	r4, r4
 801b5f4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b5f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b5fc:	fa5f fe8e 	uxtb.w	lr, lr
 801b600:	fb14 f40a 	smulbb	r4, r4, sl
 801b604:	fb0e 4402 	mla	r4, lr, r2, r4
 801b608:	b2f6      	uxtb	r6, r6
 801b60a:	fa1f fc8c 	uxth.w	ip, ip
 801b60e:	fb16 f60a 	smulbb	r6, r6, sl
 801b612:	b2a4      	uxth	r4, r4
 801b614:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b618:	fb07 6702 	mla	r7, r7, r2, r6
 801b61c:	f10c 0201 	add.w	r2, ip, #1
 801b620:	1c66      	adds	r6, r4, #1
 801b622:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b626:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b62a:	b2bf      	uxth	r7, r7
 801b62c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b630:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b634:	ea46 0c0c 	orr.w	ip, r6, ip
 801b638:	1c7e      	adds	r6, r7, #1
 801b63a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b63e:	0976      	lsrs	r6, r6, #5
 801b640:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b644:	ea4c 0c06 	orr.w	ip, ip, r6
 801b648:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b64c:	e7ba      	b.n	801b5c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b64e:	b007      	add	sp, #28
 801b650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b654 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b658:	b085      	sub	sp, #20
 801b65a:	468b      	mov	fp, r1
 801b65c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b65e:	9203      	str	r2, [sp, #12]
 801b660:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b664:	6841      	ldr	r1, [r0, #4]
 801b666:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b66a:	fb01 2404 	mla	r4, r1, r4, r2
 801b66e:	6802      	ldr	r2, [r0, #0]
 801b670:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b674:	f8d8 2000 	ldr.w	r2, [r8]
 801b678:	9201      	str	r2, [sp, #4]
 801b67a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b67e:	f1bb 0f00 	cmp.w	fp, #0
 801b682:	dc03      	bgt.n	801b68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b684:	9a03      	ldr	r2, [sp, #12]
 801b686:	2a00      	cmp	r2, #0
 801b688:	f340 814f 	ble.w	801b92a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b68c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b68e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b692:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b696:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b69a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b69c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b6a0:	2b00      	cmp	r3, #0
 801b6a2:	dd0e      	ble.n	801b6c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b6a4:	1408      	asrs	r0, r1, #16
 801b6a6:	d405      	bmi.n	801b6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6a8:	42b8      	cmp	r0, r7
 801b6aa:	da03      	bge.n	801b6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6ac:	1410      	asrs	r0, r2, #16
 801b6ae:	d401      	bmi.n	801b6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b6b0:	42b0      	cmp	r0, r6
 801b6b2:	db07      	blt.n	801b6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b6b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6b6:	4401      	add	r1, r0
 801b6b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6ba:	3b01      	subs	r3, #1
 801b6bc:	4402      	add	r2, r0
 801b6be:	3402      	adds	r4, #2
 801b6c0:	e7ee      	b.n	801b6a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b6c2:	d017      	beq.n	801b6f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b6c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b6c6:	1e58      	subs	r0, r3, #1
 801b6c8:	fb05 1500 	mla	r5, r5, r0, r1
 801b6cc:	142d      	asrs	r5, r5, #16
 801b6ce:	d409      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b6d0:	42bd      	cmp	r5, r7
 801b6d2:	da07      	bge.n	801b6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b6d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b6d6:	fb05 2000 	mla	r0, r5, r0, r2
 801b6da:	1400      	asrs	r0, r0, #16
 801b6dc:	d402      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b6de:	42b0      	cmp	r0, r6
 801b6e0:	f2c0 80ba 	blt.w	801b858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b6e4:	2600      	movs	r6, #0
 801b6e6:	1998      	adds	r0, r3, r6
 801b6e8:	2800      	cmp	r0, #0
 801b6ea:	dc3e      	bgt.n	801b76a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b6ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b6f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b6f4:	f1bb 0f00 	cmp.w	fp, #0
 801b6f8:	f340 8117 	ble.w	801b92a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b6fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b700:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b704:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b708:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b70a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b70e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b712:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b716:	eeb0 6a62 	vmov.f32	s12, s5
 801b71a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b71e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b722:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b726:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b72a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b72e:	eeb0 6a43 	vmov.f32	s12, s6
 801b732:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b736:	ee12 2a90 	vmov	r2, s5
 801b73a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b73e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b742:	ee13 2a10 	vmov	r2, s6
 801b746:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b74a:	9311      	str	r3, [sp, #68]	; 0x44
 801b74c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b74e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b752:	9a03      	ldr	r2, [sp, #12]
 801b754:	9312      	str	r3, [sp, #72]	; 0x48
 801b756:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b75a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b75c:	eeb0 3a67 	vmov.f32	s6, s15
 801b760:	bf08      	it	eq
 801b762:	4613      	moveq	r3, r2
 801b764:	eef0 2a47 	vmov.f32	s5, s14
 801b768:	e789      	b.n	801b67e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b76a:	140f      	asrs	r7, r1, #16
 801b76c:	d424      	bmi.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b76e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b772:	42bd      	cmp	r5, r7
 801b774:	dd20      	ble.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b776:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b77a:	d41d      	bmi.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b77c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b780:	4560      	cmp	r0, ip
 801b782:	dd19      	ble.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b784:	b22d      	sxth	r5, r5
 801b786:	fb0c 7505 	mla	r5, ip, r5, r7
 801b78a:	9801      	ldr	r0, [sp, #4]
 801b78c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b790:	0e07      	lsrs	r7, r0, #24
 801b792:	2fff      	cmp	r7, #255	; 0xff
 801b794:	d116      	bne.n	801b7c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b796:	f06f 0501 	mvn.w	r5, #1
 801b79a:	fb05 f706 	mul.w	r7, r5, r6
 801b79e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b7a2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b7a6:	0945      	lsrs	r5, r0, #5
 801b7a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b7ac:	ea4c 0505 	orr.w	r5, ip, r5
 801b7b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b7b4:	4305      	orrs	r5, r0
 801b7b6:	53e5      	strh	r5, [r4, r7]
 801b7b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7ba:	4401      	add	r1, r0
 801b7bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7be:	3e01      	subs	r6, #1
 801b7c0:	4402      	add	r2, r0
 801b7c2:	e790      	b.n	801b6e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7c4:	b2fd      	uxtb	r5, r7
 801b7c6:	2f00      	cmp	r7, #0
 801b7c8:	d0f6      	beq.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b7ca:	f06f 0701 	mvn.w	r7, #1
 801b7ce:	4377      	muls	r7, r6
 801b7d0:	fa1f f985 	uxth.w	r9, r5
 801b7d4:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b7d8:	9702      	str	r7, [sp, #8]
 801b7da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b7de:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b7e2:	43ed      	mvns	r5, r5
 801b7e4:	b2ed      	uxtb	r5, r5
 801b7e6:	fb17 f709 	smulbb	r7, r7, r9
 801b7ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b7ee:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b7f2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b7f6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b7fa:	b2c0      	uxtb	r0, r0
 801b7fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b800:	fa5f fe8e 	uxtb.w	lr, lr
 801b804:	fb10 f009 	smulbb	r0, r0, r9
 801b808:	fb0e 0005 	mla	r0, lr, r5, r0
 801b80c:	b280      	uxth	r0, r0
 801b80e:	fa1f fc8c 	uxth.w	ip, ip
 801b812:	fb1a fa09 	smulbb	sl, sl, r9
 801b816:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b81a:	fb07 a705 	mla	r7, r7, r5, sl
 801b81e:	f100 0a01 	add.w	sl, r0, #1
 801b822:	f10c 0501 	add.w	r5, ip, #1
 801b826:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b82a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b82e:	b2bf      	uxth	r7, r7
 801b830:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b834:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b838:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b83c:	f107 0a01 	add.w	sl, r7, #1
 801b840:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b844:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b848:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b84c:	9802      	ldr	r0, [sp, #8]
 801b84e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b852:	f824 c000 	strh.w	ip, [r4, r0]
 801b856:	e7af      	b.n	801b7b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b858:	f04f 0e00 	mov.w	lr, #0
 801b85c:	eba3 000e 	sub.w	r0, r3, lr
 801b860:	2800      	cmp	r0, #0
 801b862:	f77f af43 	ble.w	801b6ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b866:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b86a:	140d      	asrs	r5, r1, #16
 801b86c:	1410      	asrs	r0, r2, #16
 801b86e:	fb06 5000 	mla	r0, r6, r0, r5
 801b872:	9d01      	ldr	r5, [sp, #4]
 801b874:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b878:	0e2e      	lsrs	r6, r5, #24
 801b87a:	2eff      	cmp	r6, #255	; 0xff
 801b87c:	d112      	bne.n	801b8a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b87e:	482c      	ldr	r0, [pc, #176]	; (801b930 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b880:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b884:	0968      	lsrs	r0, r5, #5
 801b886:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b88a:	4330      	orrs	r0, r6
 801b88c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b890:	4328      	orrs	r0, r5
 801b892:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b896:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b898:	4401      	add	r1, r0
 801b89a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b89c:	f10e 0e01 	add.w	lr, lr, #1
 801b8a0:	4402      	add	r2, r0
 801b8a2:	e7db      	b.n	801b85c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b8a4:	b2f0      	uxtb	r0, r6
 801b8a6:	2e00      	cmp	r6, #0
 801b8a8:	d0f5      	beq.n	801b896 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b8aa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b8ae:	fa1f f980 	uxth.w	r9, r0
 801b8b2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b8b6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b8ba:	43c0      	mvns	r0, r0
 801b8bc:	b2c0      	uxtb	r0, r0
 801b8be:	fb16 f609 	smulbb	r6, r6, r9
 801b8c2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b8c6:	fb07 6700 	mla	r7, r7, r0, r6
 801b8ca:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b8ce:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b8d2:	b2ed      	uxtb	r5, r5
 801b8d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b8d8:	fa5f fc8c 	uxtb.w	ip, ip
 801b8dc:	fb15 f509 	smulbb	r5, r5, r9
 801b8e0:	fb0c 5500 	mla	r5, ip, r0, r5
 801b8e4:	b2bf      	uxth	r7, r7
 801b8e6:	fb1a fa09 	smulbb	sl, sl, r9
 801b8ea:	b2ad      	uxth	r5, r5
 801b8ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b8f0:	fb06 a600 	mla	r6, r6, r0, sl
 801b8f4:	1c78      	adds	r0, r7, #1
 801b8f6:	f105 0a01 	add.w	sl, r5, #1
 801b8fa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b8fe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b902:	b2b6      	uxth	r6, r6
 801b904:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b908:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b90c:	ea4a 0707 	orr.w	r7, sl, r7
 801b910:	f106 0a01 	add.w	sl, r6, #1
 801b914:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b918:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b91c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b920:	ea47 070a 	orr.w	r7, r7, sl
 801b924:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b928:	e7b5      	b.n	801b896 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b92a:	b005      	add	sp, #20
 801b92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b930:	fffff800 	.word	0xfffff800

0801b934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b938:	b087      	sub	sp, #28
 801b93a:	468b      	mov	fp, r1
 801b93c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b93e:	9203      	str	r2, [sp, #12]
 801b940:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b944:	9204      	str	r2, [sp, #16]
 801b946:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b94a:	6841      	ldr	r1, [r0, #4]
 801b94c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b950:	fb01 2404 	mla	r4, r1, r4, r2
 801b954:	6802      	ldr	r2, [r0, #0]
 801b956:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b95a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b95e:	3201      	adds	r2, #1
 801b960:	f022 0201 	bic.w	r2, r2, #1
 801b964:	9200      	str	r2, [sp, #0]
 801b966:	f8d9 2000 	ldr.w	r2, [r9]
 801b96a:	9201      	str	r2, [sp, #4]
 801b96c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b970:	f1bb 0f00 	cmp.w	fp, #0
 801b974:	dc03      	bgt.n	801b97e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b976:	9a03      	ldr	r2, [sp, #12]
 801b978:	2a00      	cmp	r2, #0
 801b97a:	f340 8169 	ble.w	801bc50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b97e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b980:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b984:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b988:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b98c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b98e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b992:	2b00      	cmp	r3, #0
 801b994:	dd0e      	ble.n	801b9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b996:	1402      	asrs	r2, r0, #16
 801b998:	d405      	bmi.n	801b9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b99a:	42ba      	cmp	r2, r7
 801b99c:	da03      	bge.n	801b9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b99e:	140a      	asrs	r2, r1, #16
 801b9a0:	d401      	bmi.n	801b9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b9a2:	42b2      	cmp	r2, r6
 801b9a4:	db07      	blt.n	801b9b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b9a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9a8:	4410      	add	r0, r2
 801b9aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9ac:	3b01      	subs	r3, #1
 801b9ae:	4411      	add	r1, r2
 801b9b0:	3402      	adds	r4, #2
 801b9b2:	e7ee      	b.n	801b992 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b9b4:	d017      	beq.n	801b9e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b9b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b9b8:	1e5a      	subs	r2, r3, #1
 801b9ba:	fb05 0502 	mla	r5, r5, r2, r0
 801b9be:	142d      	asrs	r5, r5, #16
 801b9c0:	d409      	bmi.n	801b9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9c2:	42bd      	cmp	r5, r7
 801b9c4:	da07      	bge.n	801b9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9c8:	fb05 1202 	mla	r2, r5, r2, r1
 801b9cc:	1412      	asrs	r2, r2, #16
 801b9ce:	d402      	bmi.n	801b9d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b9d0:	42b2      	cmp	r2, r6
 801b9d2:	f2c0 80c7 	blt.w	801bb64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b9d6:	2700      	movs	r7, #0
 801b9d8:	19da      	adds	r2, r3, r7
 801b9da:	2a00      	cmp	r2, #0
 801b9dc:	dc3e      	bgt.n	801ba5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b9de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b9e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b9e6:	f1bb 0f00 	cmp.w	fp, #0
 801b9ea:	f340 8131 	ble.w	801bc50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b9ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b9fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b9fc:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba00:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba08:	eeb0 6a62 	vmov.f32	s12, s5
 801ba0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba14:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba18:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba20:	eeb0 6a43 	vmov.f32	s12, s6
 801ba24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba28:	ee12 2a90 	vmov	r2, s5
 801ba2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba30:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba34:	ee13 2a10 	vmov	r2, s6
 801ba38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba3c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba40:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba44:	9a03      	ldr	r2, [sp, #12]
 801ba46:	9314      	str	r3, [sp, #80]	; 0x50
 801ba48:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ba4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba4e:	eeb0 3a67 	vmov.f32	s6, s15
 801ba52:	bf08      	it	eq
 801ba54:	4613      	moveq	r3, r2
 801ba56:	eef0 2a47 	vmov.f32	s5, s14
 801ba5a:	e789      	b.n	801b970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ba5c:	1405      	asrs	r5, r0, #16
 801ba5e:	d435      	bmi.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba60:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ba64:	42aa      	cmp	r2, r5
 801ba66:	dd31      	ble.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba68:	140e      	asrs	r6, r1, #16
 801ba6a:	d42f      	bmi.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba6c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ba70:	42b2      	cmp	r2, r6
 801ba72:	dd2b      	ble.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba74:	9a00      	ldr	r2, [sp, #0]
 801ba76:	fb06 5502 	mla	r5, r6, r2, r5
 801ba7a:	086a      	lsrs	r2, r5, #1
 801ba7c:	9e01      	ldr	r6, [sp, #4]
 801ba7e:	5cb2      	ldrb	r2, [r6, r2]
 801ba80:	07ee      	lsls	r6, r5, #31
 801ba82:	bf54      	ite	pl
 801ba84:	f002 020f 	andpl.w	r2, r2, #15
 801ba88:	1112      	asrmi	r2, r2, #4
 801ba8a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba8e:	b2d2      	uxtb	r2, r2
 801ba90:	b1e2      	cbz	r2, 801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba92:	9d04      	ldr	r5, [sp, #16]
 801ba94:	436a      	muls	r2, r5
 801ba96:	1c55      	adds	r5, r2, #1
 801ba98:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ba9c:	4d6e      	ldr	r5, [pc, #440]	; (801bc58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ba9e:	682d      	ldr	r5, [r5, #0]
 801baa0:	1212      	asrs	r2, r2, #8
 801baa2:	0a2e      	lsrs	r6, r5, #8
 801baa4:	2aff      	cmp	r2, #255	; 0xff
 801baa6:	9605      	str	r6, [sp, #20]
 801baa8:	d116      	bne.n	801bad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801baaa:	f06f 0201 	mvn.w	r2, #1
 801baae:	fb02 fc07 	mul.w	ip, r2, r7
 801bab2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bab6:	096a      	lsrs	r2, r5, #5
 801bab8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801babc:	f026 0607 	bic.w	r6, r6, #7
 801bac0:	4316      	orrs	r6, r2
 801bac2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bac6:	432e      	orrs	r6, r5
 801bac8:	f824 600c 	strh.w	r6, [r4, ip]
 801bacc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bace:	4410      	add	r0, r2
 801bad0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bad2:	3f01      	subs	r7, #1
 801bad4:	4411      	add	r1, r2
 801bad6:	e77f      	b.n	801b9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801bad8:	f06f 0601 	mvn.w	r6, #1
 801badc:	437e      	muls	r6, r7
 801bade:	fa1f fa82 	uxth.w	sl, r2
 801bae2:	f834 8006 	ldrh.w	r8, [r4, r6]
 801bae6:	9602      	str	r6, [sp, #8]
 801bae8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801baec:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801baf0:	43d2      	mvns	r2, r2
 801baf2:	b2d2      	uxtb	r2, r2
 801baf4:	fb1c fc0a 	smulbb	ip, ip, sl
 801baf8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bafc:	fb0e ce02 	mla	lr, lr, r2, ip
 801bb00:	b2ed      	uxtb	r5, r5
 801bb02:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801bb06:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bb0a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bb0e:	fa5f f888 	uxtb.w	r8, r8
 801bb12:	fb15 f50a 	smulbb	r5, r5, sl
 801bb16:	fb08 5502 	mla	r5, r8, r2, r5
 801bb1a:	fa1f fe8e 	uxth.w	lr, lr
 801bb1e:	fb16 f60a 	smulbb	r6, r6, sl
 801bb22:	b2ad      	uxth	r5, r5
 801bb24:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bb28:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bb2c:	f10e 0201 	add.w	r2, lr, #1
 801bb30:	1c6e      	adds	r6, r5, #1
 801bb32:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801bb36:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801bb3a:	fa1f fc8c 	uxth.w	ip, ip
 801bb3e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bb42:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bb46:	ea46 0e0e 	orr.w	lr, r6, lr
 801bb4a:	f10c 0601 	add.w	r6, ip, #1
 801bb4e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bb52:	0976      	lsrs	r6, r6, #5
 801bb54:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bb58:	9a02      	ldr	r2, [sp, #8]
 801bb5a:	ea4e 0e06 	orr.w	lr, lr, r6
 801bb5e:	f824 e002 	strh.w	lr, [r4, r2]
 801bb62:	e7b3      	b.n	801bacc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bb64:	f04f 0800 	mov.w	r8, #0
 801bb68:	eba3 0208 	sub.w	r2, r3, r8
 801bb6c:	2a00      	cmp	r2, #0
 801bb6e:	f77f af36 	ble.w	801b9de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bb72:	9e00      	ldr	r6, [sp, #0]
 801bb74:	1402      	asrs	r2, r0, #16
 801bb76:	140d      	asrs	r5, r1, #16
 801bb78:	fb06 2505 	mla	r5, r6, r5, r2
 801bb7c:	086a      	lsrs	r2, r5, #1
 801bb7e:	9e01      	ldr	r6, [sp, #4]
 801bb80:	5cb2      	ldrb	r2, [r6, r2]
 801bb82:	07ed      	lsls	r5, r5, #31
 801bb84:	bf54      	ite	pl
 801bb86:	f002 020f 	andpl.w	r2, r2, #15
 801bb8a:	1112      	asrmi	r2, r2, #4
 801bb8c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bb90:	b2d2      	uxtb	r2, r2
 801bb92:	b1c2      	cbz	r2, 801bbc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bb94:	9d04      	ldr	r5, [sp, #16]
 801bb96:	436a      	muls	r2, r5
 801bb98:	1c55      	adds	r5, r2, #1
 801bb9a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801bb9e:	4d2e      	ldr	r5, [pc, #184]	; (801bc58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801bba0:	1212      	asrs	r2, r2, #8
 801bba2:	682e      	ldr	r6, [r5, #0]
 801bba4:	2aff      	cmp	r2, #255	; 0xff
 801bba6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801bbaa:	d113      	bne.n	801bbd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801bbac:	0972      	lsrs	r2, r6, #5
 801bbae:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bbb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbb6:	f025 0507 	bic.w	r5, r5, #7
 801bbba:	4315      	orrs	r5, r2
 801bbbc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801bbc0:	4335      	orrs	r5, r6
 801bbc2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801bbc6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbc8:	4410      	add	r0, r2
 801bbca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbcc:	f108 0801 	add.w	r8, r8, #1
 801bbd0:	4411      	add	r1, r2
 801bbd2:	e7c9      	b.n	801bb68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801bbd4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bbd8:	fa1f fa82 	uxth.w	sl, r2
 801bbdc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bbe0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801bbe4:	43d2      	mvns	r2, r2
 801bbe6:	b2d2      	uxtb	r2, r2
 801bbe8:	fb17 f70a 	smulbb	r7, r7, sl
 801bbec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bbf0:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bbf4:	b2f6      	uxtb	r6, r6
 801bbf6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bbfa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bbfe:	fa5f fe8e 	uxtb.w	lr, lr
 801bc02:	fb16 f60a 	smulbb	r6, r6, sl
 801bc06:	fb0e 6602 	mla	r6, lr, r2, r6
 801bc0a:	b2ed      	uxtb	r5, r5
 801bc0c:	fa1f fc8c 	uxth.w	ip, ip
 801bc10:	fb15 f50a 	smulbb	r5, r5, sl
 801bc14:	b2b6      	uxth	r6, r6
 801bc16:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc1a:	fb07 5702 	mla	r7, r7, r2, r5
 801bc1e:	f10c 0201 	add.w	r2, ip, #1
 801bc22:	1c75      	adds	r5, r6, #1
 801bc24:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bc28:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bc2c:	b2bf      	uxth	r7, r7
 801bc2e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bc32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc36:	ea45 0c0c 	orr.w	ip, r5, ip
 801bc3a:	1c7d      	adds	r5, r7, #1
 801bc3c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801bc40:	096d      	lsrs	r5, r5, #5
 801bc42:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bc46:	ea4c 0c05 	orr.w	ip, ip, r5
 801bc4a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801bc4e:	e7ba      	b.n	801bbc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bc50:	b007      	add	sp, #28
 801bc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc56:	bf00      	nop
 801bc58:	20012fd4 	.word	0x20012fd4

0801bc5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc60:	b087      	sub	sp, #28
 801bc62:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bf70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801bc66:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bc68:	9205      	str	r2, [sp, #20]
 801bc6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bc6e:	9101      	str	r1, [sp, #4]
 801bc70:	6841      	ldr	r1, [r0, #4]
 801bc72:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801bc76:	fb01 2404 	mla	r4, r1, r4, r2
 801bc7a:	6802      	ldr	r2, [r0, #0]
 801bc7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bc80:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bc84:	3201      	adds	r2, #1
 801bc86:	f022 0201 	bic.w	r2, r2, #1
 801bc8a:	9202      	str	r2, [sp, #8]
 801bc8c:	f8db 2000 	ldr.w	r2, [fp]
 801bc90:	9203      	str	r2, [sp, #12]
 801bc92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bc96:	9a01      	ldr	r2, [sp, #4]
 801bc98:	2a00      	cmp	r2, #0
 801bc9a:	dc03      	bgt.n	801bca4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bc9c:	9a05      	ldr	r2, [sp, #20]
 801bc9e:	2a00      	cmp	r2, #0
 801bca0:	f340 8162 	ble.w	801bf68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bca4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bca6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801bcaa:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801bcae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bcb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bcb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bcb8:	2b00      	cmp	r3, #0
 801bcba:	dd0e      	ble.n	801bcda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bcbc:	1402      	asrs	r2, r0, #16
 801bcbe:	d405      	bmi.n	801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcc0:	42ba      	cmp	r2, r7
 801bcc2:	da03      	bge.n	801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcc4:	140a      	asrs	r2, r1, #16
 801bcc6:	d401      	bmi.n	801bccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bcc8:	42b2      	cmp	r2, r6
 801bcca:	db07      	blt.n	801bcdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bccc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bcce:	4410      	add	r0, r2
 801bcd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcd2:	3b01      	subs	r3, #1
 801bcd4:	4411      	add	r1, r2
 801bcd6:	3402      	adds	r4, #2
 801bcd8:	e7ee      	b.n	801bcb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bcda:	d017      	beq.n	801bd0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801bcdc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bcde:	1e5a      	subs	r2, r3, #1
 801bce0:	fb05 0502 	mla	r5, r5, r2, r0
 801bce4:	142d      	asrs	r5, r5, #16
 801bce6:	d409      	bmi.n	801bcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bce8:	42bd      	cmp	r5, r7
 801bcea:	da07      	bge.n	801bcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bcec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bcee:	fb05 1202 	mla	r2, r5, r2, r1
 801bcf2:	1412      	asrs	r2, r2, #16
 801bcf4:	d402      	bmi.n	801bcfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bcf6:	42b2      	cmp	r2, r6
 801bcf8:	f2c0 80c3 	blt.w	801be82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801bcfc:	2500      	movs	r5, #0
 801bcfe:	195a      	adds	r2, r3, r5
 801bd00:	2a00      	cmp	r2, #0
 801bd02:	dc3f      	bgt.n	801bd84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801bd04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd0c:	9b01      	ldr	r3, [sp, #4]
 801bd0e:	2b00      	cmp	r3, #0
 801bd10:	f340 812a 	ble.w	801bf68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801bd14:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd22:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd2a:	eeb0 6a62 	vmov.f32	s12, s5
 801bd2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd36:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd3a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bd3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd42:	eeb0 6a43 	vmov.f32	s12, s6
 801bd46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd4a:	ee12 2a90 	vmov	r2, s5
 801bd4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd52:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd56:	ee13 2a10 	vmov	r2, s6
 801bd5a:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd62:	9314      	str	r3, [sp, #80]	; 0x50
 801bd64:	9b01      	ldr	r3, [sp, #4]
 801bd66:	9a05      	ldr	r2, [sp, #20]
 801bd68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd6c:	3b01      	subs	r3, #1
 801bd6e:	9301      	str	r3, [sp, #4]
 801bd70:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bd74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd76:	eeb0 3a67 	vmov.f32	s6, s15
 801bd7a:	bf08      	it	eq
 801bd7c:	4613      	moveq	r3, r2
 801bd7e:	eef0 2a47 	vmov.f32	s5, s14
 801bd82:	e788      	b.n	801bc96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bd84:	1406      	asrs	r6, r0, #16
 801bd86:	d42c      	bmi.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd88:	f8db 2008 	ldr.w	r2, [fp, #8]
 801bd8c:	42b2      	cmp	r2, r6
 801bd8e:	dd28      	ble.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd90:	140f      	asrs	r7, r1, #16
 801bd92:	d426      	bmi.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd94:	f8db 200c 	ldr.w	r2, [fp, #12]
 801bd98:	42ba      	cmp	r2, r7
 801bd9a:	dd22      	ble.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bd9c:	9a02      	ldr	r2, [sp, #8]
 801bd9e:	fb07 6602 	mla	r6, r7, r2, r6
 801bda2:	0872      	lsrs	r2, r6, #1
 801bda4:	9f03      	ldr	r7, [sp, #12]
 801bda6:	5cba      	ldrb	r2, [r7, r2]
 801bda8:	07f6      	lsls	r6, r6, #31
 801bdaa:	bf54      	ite	pl
 801bdac:	f002 020f 	andpl.w	r2, r2, #15
 801bdb0:	1112      	asrmi	r2, r2, #4
 801bdb2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bdb6:	b2d2      	uxtb	r2, r2
 801bdb8:	2aff      	cmp	r2, #255	; 0xff
 801bdba:	d118      	bne.n	801bdee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801bdbc:	f8d8 2000 	ldr.w	r2, [r8]
 801bdc0:	f06f 0601 	mvn.w	r6, #1
 801bdc4:	fb06 f705 	mul.w	r7, r6, r5
 801bdc8:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bdcc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801bdd0:	0956      	lsrs	r6, r2, #5
 801bdd2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bdd6:	ea4c 0606 	orr.w	r6, ip, r6
 801bdda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bdde:	4316      	orrs	r6, r2
 801bde0:	53e6      	strh	r6, [r4, r7]
 801bde2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bde4:	4410      	add	r0, r2
 801bde6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bde8:	3d01      	subs	r5, #1
 801bdea:	4411      	add	r1, r2
 801bdec:	e787      	b.n	801bcfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bdee:	2a00      	cmp	r2, #0
 801bdf0:	d0f7      	beq.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bdf2:	f06f 0601 	mvn.w	r6, #1
 801bdf6:	436e      	muls	r6, r5
 801bdf8:	f8d8 c000 	ldr.w	ip, [r8]
 801bdfc:	f834 e006 	ldrh.w	lr, [r4, r6]
 801be00:	9604      	str	r6, [sp, #16]
 801be02:	fa1f f982 	uxth.w	r9, r2
 801be06:	ea4f 272e 	mov.w	r7, lr, asr #8
 801be0a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801be0e:	43d2      	mvns	r2, r2
 801be10:	b2d2      	uxtb	r2, r2
 801be12:	fb16 f609 	smulbb	r6, r6, r9
 801be16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801be1a:	fb07 6702 	mla	r7, r7, r2, r6
 801be1e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801be22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801be26:	fa5f fc8c 	uxtb.w	ip, ip
 801be2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801be2e:	fa5f fe8e 	uxtb.w	lr, lr
 801be32:	fb1c fc09 	smulbb	ip, ip, r9
 801be36:	fb0e cc02 	mla	ip, lr, r2, ip
 801be3a:	b2bf      	uxth	r7, r7
 801be3c:	fb1a fa09 	smulbb	sl, sl, r9
 801be40:	fa1f fc8c 	uxth.w	ip, ip
 801be44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801be48:	fb06 a602 	mla	r6, r6, r2, sl
 801be4c:	1c7a      	adds	r2, r7, #1
 801be4e:	f10c 0a01 	add.w	sl, ip, #1
 801be52:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801be56:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801be5a:	b2b6      	uxth	r6, r6
 801be5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be60:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801be64:	ea4a 0707 	orr.w	r7, sl, r7
 801be68:	f106 0a01 	add.w	sl, r6, #1
 801be6c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801be70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be74:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801be78:	9a04      	ldr	r2, [sp, #16]
 801be7a:	ea47 070a 	orr.w	r7, r7, sl
 801be7e:	52a7      	strh	r7, [r4, r2]
 801be80:	e7af      	b.n	801bde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801be82:	f04f 0e00 	mov.w	lr, #0
 801be86:	eba3 020e 	sub.w	r2, r3, lr
 801be8a:	2a00      	cmp	r2, #0
 801be8c:	f77f af3a 	ble.w	801bd04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801be90:	9e02      	ldr	r6, [sp, #8]
 801be92:	1402      	asrs	r2, r0, #16
 801be94:	140d      	asrs	r5, r1, #16
 801be96:	fb06 2505 	mla	r5, r6, r5, r2
 801be9a:	086a      	lsrs	r2, r5, #1
 801be9c:	9e03      	ldr	r6, [sp, #12]
 801be9e:	5cb2      	ldrb	r2, [r6, r2]
 801bea0:	07ed      	lsls	r5, r5, #31
 801bea2:	bf54      	ite	pl
 801bea4:	f002 020f 	andpl.w	r2, r2, #15
 801bea8:	1112      	asrmi	r2, r2, #4
 801beaa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801beae:	b2d2      	uxtb	r2, r2
 801beb0:	2aff      	cmp	r2, #255	; 0xff
 801beb2:	d115      	bne.n	801bee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801beb4:	f8d8 5000 	ldr.w	r5, [r8]
 801beb8:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bebc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bec0:	096a      	lsrs	r2, r5, #5
 801bec2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bec6:	4332      	orrs	r2, r6
 801bec8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801becc:	432a      	orrs	r2, r5
 801bece:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bed2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bed4:	4410      	add	r0, r2
 801bed6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bed8:	f10e 0e01 	add.w	lr, lr, #1
 801bedc:	4411      	add	r1, r2
 801bede:	e7d2      	b.n	801be86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bee0:	2a00      	cmp	r2, #0
 801bee2:	d0f6      	beq.n	801bed2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bee4:	f8d8 7000 	ldr.w	r7, [r8]
 801bee8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801beec:	fa1f f982 	uxth.w	r9, r2
 801bef0:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bef4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bef8:	43d2      	mvns	r2, r2
 801befa:	b2d2      	uxtb	r2, r2
 801befc:	fb15 f509 	smulbb	r5, r5, r9
 801bf00:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf04:	fb06 5602 	mla	r6, r6, r2, r5
 801bf08:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bf0c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bf10:	b2ff      	uxtb	r7, r7
 801bf12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf16:	fa5f fc8c 	uxtb.w	ip, ip
 801bf1a:	fb17 f709 	smulbb	r7, r7, r9
 801bf1e:	fb0c 7702 	mla	r7, ip, r2, r7
 801bf22:	b2b6      	uxth	r6, r6
 801bf24:	fb1a fa09 	smulbb	sl, sl, r9
 801bf28:	b2bf      	uxth	r7, r7
 801bf2a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf2e:	fb05 a502 	mla	r5, r5, r2, sl
 801bf32:	1c72      	adds	r2, r6, #1
 801bf34:	f107 0a01 	add.w	sl, r7, #1
 801bf38:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bf3c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bf40:	b2ad      	uxth	r5, r5
 801bf42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bf46:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bf4a:	ea4a 0606 	orr.w	r6, sl, r6
 801bf4e:	f105 0a01 	add.w	sl, r5, #1
 801bf52:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf5e:	ea46 060a 	orr.w	r6, r6, sl
 801bf62:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bf66:	e7b4      	b.n	801bed2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bf68:	b007      	add	sp, #28
 801bf6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf6e:	bf00      	nop
 801bf70:	20012fd4 	.word	0x20012fd4

0801bf74 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bf74:	4770      	bx	lr

0801bf76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bf76:	4770      	bx	lr

0801bf78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bf78:	4770      	bx	lr

0801bf7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bf7a:	4770      	bx	lr

0801bf7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bf7c:	4770      	bx	lr

0801bf7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bf7e:	4770      	bx	lr

0801bf80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bf80:	4770      	bx	lr

0801bf82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bf82:	4770      	bx	lr

0801bf84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bf84:	4770      	bx	lr

0801bf86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bf86:	4770      	bx	lr

0801bf88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bf88:	4770      	bx	lr

0801bf8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bf8a:	4770      	bx	lr

0801bf8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bf8c:	4770      	bx	lr

0801bf8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bf8e:	4770      	bx	lr

0801bf90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bf90:	4770      	bx	lr

0801bf92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bf92:	4770      	bx	lr

0801bf94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bf94:	4770      	bx	lr

0801bf96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bf96:	4770      	bx	lr

0801bf98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bf98:	4770      	bx	lr

0801bf9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bf9a:	4770      	bx	lr

0801bf9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bf9c:	4770      	bx	lr

0801bf9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bf9e:	4770      	bx	lr

0801bfa0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bfa0:	4770      	bx	lr

0801bfa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bfa2:	4770      	bx	lr

0801bfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bfa4:	4770      	bx	lr

0801bfa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bfa6:	4770      	bx	lr

0801bfa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bfa8:	4770      	bx	lr

0801bfaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bfaa:	4770      	bx	lr

0801bfac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bfac:	4770      	bx	lr

0801bfae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bfae:	4770      	bx	lr

0801bfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bfb0:	4770      	bx	lr

0801bfb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bfb2:	4770      	bx	lr

0801bfb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bfb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bfb8:	b088      	sub	sp, #32
 801bfba:	ac08      	add	r4, sp, #32
 801bfbc:	4606      	mov	r6, r0
 801bfbe:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bfc2:	4620      	mov	r0, r4
 801bfc4:	4688      	mov	r8, r1
 801bfc6:	4691      	mov	r9, r2
 801bfc8:	f7fd fc62 	bl	8019890 <_ZNK8touchgfx6Bitmap7getDataEv>
 801bfcc:	6833      	ldr	r3, [r6, #0]
 801bfce:	4605      	mov	r5, r0
 801bfd0:	4620      	mov	r0, r4
 801bfd2:	699f      	ldr	r7, [r3, #24]
 801bfd4:	f7fd fb70 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bfd8:	4682      	mov	sl, r0
 801bfda:	4620      	mov	r0, r4
 801bfdc:	f7fd fba0 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bfe0:	9500      	str	r5, [sp, #0]
 801bfe2:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bfe6:	464b      	mov	r3, r9
 801bfe8:	a806      	add	r0, sp, #24
 801bfea:	4642      	mov	r2, r8
 801bfec:	4631      	mov	r1, r6
 801bfee:	47b8      	blx	r7
 801bff0:	4628      	mov	r0, r5
 801bff2:	b008      	add	sp, #32
 801bff4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bff8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bff8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bffc:	2300      	movs	r3, #0
 801bffe:	9300      	str	r3, [sp, #0]
 801c000:	4b3d      	ldr	r3, [pc, #244]	; (801c0f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c002:	781b      	ldrb	r3, [r3, #0]
 801c004:	2b00      	cmp	r3, #0
 801c006:	d137      	bne.n	801c078 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c008:	4a3c      	ldr	r2, [pc, #240]	; (801c0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c00a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c00e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c012:	2b00      	cmp	r3, #0
 801c014:	d132      	bne.n	801c07c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c016:	4b3a      	ldr	r3, [pc, #232]	; (801c100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c018:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c01c:	6808      	ldr	r0, [r1, #0]
 801c01e:	6849      	ldr	r1, [r1, #4]
 801c020:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c024:	ac02      	add	r4, sp, #8
 801c026:	ab02      	add	r3, sp, #8
 801c028:	c303      	stmia	r3!, {r0, r1}
 801c02a:	4669      	mov	r1, sp
 801c02c:	4620      	mov	r0, r4
 801c02e:	f7f9 fd83 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c032:	4668      	mov	r0, sp
 801c034:	f7f9 fd3c 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c038:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c03c:	f8bd 2000 	ldrh.w	r2, [sp]
 801c040:	4d30      	ldr	r5, [pc, #192]	; (801c104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c042:	4413      	add	r3, r2
 801c044:	f8ad 3008 	strh.w	r3, [sp, #8]
 801c048:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c04c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801c050:	6828      	ldr	r0, [r5, #0]
 801c052:	4413      	add	r3, r2
 801c054:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c058:	6803      	ldr	r3, [r0, #0]
 801c05a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c05c:	4798      	blx	r3
 801c05e:	f010 0f01 	tst.w	r0, #1
 801c062:	462f      	mov	r7, r5
 801c064:	d00c      	beq.n	801c080 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801c066:	6828      	ldr	r0, [r5, #0]
 801c068:	6803      	ldr	r3, [r0, #0]
 801c06a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801c06e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c070:	4798      	blx	r3
 801c072:	b004      	add	sp, #16
 801c074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c078:	4a21      	ldr	r2, [pc, #132]	; (801c100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c07a:	e7c6      	b.n	801c00a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801c07c:	4b1f      	ldr	r3, [pc, #124]	; (801c0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c07e:	e7cb      	b.n	801c018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801c080:	6838      	ldr	r0, [r7, #0]
 801c082:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c086:	6803      	ldr	r3, [r0, #0]
 801c088:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801c08c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c08e:	4798      	blx	r3
 801c090:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801c094:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c098:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801c09c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801c0a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c0a4:	6838      	ldr	r0, [r7, #0]
 801c0a6:	6803      	ldr	r3, [r0, #0]
 801c0a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0aa:	4798      	blx	r3
 801c0ac:	4a13      	ldr	r2, [pc, #76]	; (801c0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c0ae:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801c0b2:	8813      	ldrh	r3, [r2, #0]
 801c0b4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c0b8:	fb03 1404 	mla	r4, r3, r4, r1
 801c0bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c0c0:	435d      	muls	r5, r3
 801c0c2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c0c6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801c0ca:	4691      	mov	r9, r2
 801c0cc:	6838      	ldr	r0, [r7, #0]
 801c0ce:	42ac      	cmp	r4, r5
 801c0d0:	6803      	ldr	r3, [r0, #0]
 801c0d2:	d20e      	bcs.n	801c0f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801c0d4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801c0d8:	4632      	mov	r2, r6
 801c0da:	4643      	mov	r3, r8
 801c0dc:	4621      	mov	r1, r4
 801c0de:	47d0      	blx	sl
 801c0e0:	f8b9 3000 	ldrh.w	r3, [r9]
 801c0e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c0e8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801c0ec:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c0f0:	e7ec      	b.n	801c0cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801c0f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c0f4:	4798      	blx	r3
 801c0f6:	e7bc      	b.n	801c072 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801c0f8:	20012fbc 	.word	0x20012fbc
 801c0fc:	20012fbe 	.word	0x20012fbe
 801c100:	20012fc0 	.word	0x20012fc0
 801c104:	20012fc4 	.word	0x20012fc4

0801c108 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801c108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c10c:	b08b      	sub	sp, #44	; 0x2c
 801c10e:	460f      	mov	r7, r1
 801c110:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801c114:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801c118:	4616      	mov	r6, r2
 801c11a:	f1bb 0f00 	cmp.w	fp, #0
 801c11e:	d04a      	beq.n	801c1b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c120:	6810      	ldr	r0, [r2, #0]
 801c122:	6851      	ldr	r1, [r2, #4]
 801c124:	ad06      	add	r5, sp, #24
 801c126:	c503      	stmia	r5!, {r0, r1}
 801c128:	6818      	ldr	r0, [r3, #0]
 801c12a:	6859      	ldr	r1, [r3, #4]
 801c12c:	ad08      	add	r5, sp, #32
 801c12e:	c503      	stmia	r5!, {r0, r1}
 801c130:	a806      	add	r0, sp, #24
 801c132:	f7f9 fcbd 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c136:	4631      	mov	r1, r6
 801c138:	a808      	add	r0, sp, #32
 801c13a:	f7f9 fcfd 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c13e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801c142:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801c146:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801c14a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801c14e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801c152:	fb16 2103 	smlabb	r1, r6, r3, r2
 801c156:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801c15a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801c15e:	4f5f      	ldr	r7, [pc, #380]	; (801c2dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c160:	440a      	add	r2, r1
 801c162:	f8ad 2020 	strh.w	r2, [sp, #32]
 801c166:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c16a:	6838      	ldr	r0, [r7, #0]
 801c16c:	4413      	add	r3, r2
 801c16e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801c172:	6803      	ldr	r3, [r0, #0]
 801c174:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c176:	4798      	blx	r3
 801c178:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c17c:	46b9      	mov	r9, r7
 801c17e:	d11d      	bne.n	801c1bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801c180:	b9fc      	cbnz	r4, 801c1c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c182:	f010 0f01 	tst.w	r0, #1
 801c186:	d01c      	beq.n	801c1c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801c188:	f8d9 0000 	ldr.w	r0, [r9]
 801c18c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801c190:	6801      	ldr	r1, [r0, #0]
 801c192:	f8cd b00c 	str.w	fp, [sp, #12]
 801c196:	2700      	movs	r7, #0
 801c198:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801c19c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801c1a0:	9402      	str	r4, [sp, #8]
 801c1a2:	b2ad      	uxth	r5, r5
 801c1a4:	fa1f f488 	uxth.w	r4, r8
 801c1a8:	9501      	str	r5, [sp, #4]
 801c1aa:	9400      	str	r4, [sp, #0]
 801c1ac:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801c1ae:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c1b2:	4631      	mov	r1, r6
 801c1b4:	47a0      	blx	r4
 801c1b6:	b00b      	add	sp, #44	; 0x2c
 801c1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1bc:	f010 0f04 	tst.w	r0, #4
 801c1c0:	e7e1      	b.n	801c186 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801c1c2:	f8d9 0000 	ldr.w	r0, [r9]
 801c1c6:	6803      	ldr	r3, [r0, #0]
 801c1c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c1ca:	4798      	blx	r3
 801c1cc:	4b44      	ldr	r3, [pc, #272]	; (801c2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801c1ce:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801c1d2:	881a      	ldrh	r2, [r3, #0]
 801c1d4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801c1d8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c1dc:	fb02 1404 	mla	r4, r2, r4, r1
 801c1e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c1e4:	469a      	mov	sl, r3
 801c1e6:	fb05 f502 	mul.w	r5, r5, r2
 801c1ea:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801c1ee:	d059      	beq.n	801c2a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801c1f0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801c1f4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c1f8:	fa1f f28b 	uxth.w	r2, fp
 801c1fc:	fa1f f989 	uxth.w	r9, r9
 801c200:	469e      	mov	lr, r3
 801c202:	42ac      	cmp	r4, r5
 801c204:	d264      	bcs.n	801c2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c206:	eb04 0a07 	add.w	sl, r4, r7
 801c20a:	4554      	cmp	r4, sl
 801c20c:	d23d      	bcs.n	801c28a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801c20e:	8821      	ldrh	r1, [r4, #0]
 801c210:	f836 3b02 	ldrh.w	r3, [r6], #2
 801c214:	1208      	asrs	r0, r1, #8
 801c216:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c21a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c21e:	fb10 f009 	smulbb	r0, r0, r9
 801c222:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801c226:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c22a:	00c9      	lsls	r1, r1, #3
 801c22c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801c230:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c234:	10d8      	asrs	r0, r3, #3
 801c236:	b2c9      	uxtb	r1, r1
 801c238:	00db      	lsls	r3, r3, #3
 801c23a:	fa1f fc8c 	uxth.w	ip, ip
 801c23e:	fb1b fb09 	smulbb	fp, fp, r9
 801c242:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c246:	b2db      	uxtb	r3, r3
 801c248:	fb11 f109 	smulbb	r1, r1, r9
 801c24c:	fb00 b002 	mla	r0, r0, r2, fp
 801c250:	fb03 1302 	mla	r3, r3, r2, r1
 801c254:	f10c 0b01 	add.w	fp, ip, #1
 801c258:	b29b      	uxth	r3, r3
 801c25a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801c25e:	b280      	uxth	r0, r0
 801c260:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801c264:	f103 0c01 	add.w	ip, r3, #1
 801c268:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c26c:	1c43      	adds	r3, r0, #1
 801c26e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c272:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c276:	0940      	lsrs	r0, r0, #5
 801c278:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c27c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c280:	ea4c 0c00 	orr.w	ip, ip, r0
 801c284:	f824 cb02 	strh.w	ip, [r4], #2
 801c288:	e7bf      	b.n	801c20a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801c28a:	f8be 3000 	ldrh.w	r3, [lr]
 801c28e:	eba3 0308 	sub.w	r3, r3, r8
 801c292:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c296:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c29a:	eba3 0308 	sub.w	r3, r3, r8
 801c29e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c2a2:	e7ae      	b.n	801c202 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801c2a4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801c2a8:	f8d9 0000 	ldr.w	r0, [r9]
 801c2ac:	42ac      	cmp	r4, r5
 801c2ae:	6803      	ldr	r3, [r0, #0]
 801c2b0:	d20e      	bcs.n	801c2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801c2b2:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801c2b6:	4632      	mov	r2, r6
 801c2b8:	463b      	mov	r3, r7
 801c2ba:	4621      	mov	r1, r4
 801c2bc:	47c0      	blx	r8
 801c2be:	f8ba 3000 	ldrh.w	r3, [sl]
 801c2c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c2c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801c2ca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801c2ce:	e7eb      	b.n	801c2a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801c2d0:	4b02      	ldr	r3, [pc, #8]	; (801c2dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801c2d2:	6818      	ldr	r0, [r3, #0]
 801c2d4:	6803      	ldr	r3, [r0, #0]
 801c2d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c2d8:	4798      	blx	r3
 801c2da:	e76c      	b.n	801c1b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801c2dc:	20012fc4 	.word	0x20012fc4
 801c2e0:	20012fbe 	.word	0x20012fbe

0801c2e4 <_ZN8touchgfx8LCD16bppD0Ev>:
 801c2e4:	b510      	push	{r4, lr}
 801c2e6:	2184      	movs	r1, #132	; 0x84
 801c2e8:	4604      	mov	r4, r0
 801c2ea:	f00d fe4a 	bl	8029f82 <_ZdlPvj>
 801c2ee:	4620      	mov	r0, r4
 801c2f0:	bd10      	pop	{r4, pc}

0801c2f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801c2f2:	b510      	push	{r4, lr}
 801c2f4:	2104      	movs	r1, #4
 801c2f6:	4604      	mov	r4, r0
 801c2f8:	f00d fe43 	bl	8029f82 <_ZdlPvj>
 801c2fc:	4620      	mov	r0, r4
 801c2fe:	bd10      	pop	{r4, pc}

0801c300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801c300:	b510      	push	{r4, lr}
 801c302:	2104      	movs	r1, #4
 801c304:	4604      	mov	r4, r0
 801c306:	f00d fe3c 	bl	8029f82 <_ZdlPvj>
 801c30a:	4620      	mov	r0, r4
 801c30c:	bd10      	pop	{r4, pc}

0801c30e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801c30e:	b510      	push	{r4, lr}
 801c310:	f640 0144 	movw	r1, #2116	; 0x844
 801c314:	4604      	mov	r4, r0
 801c316:	f00d fe34 	bl	8029f82 <_ZdlPvj>
 801c31a:	4620      	mov	r0, r4
 801c31c:	bd10      	pop	{r4, pc}

0801c31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c31e:	b510      	push	{r4, lr}
 801c320:	2104      	movs	r1, #4
 801c322:	4604      	mov	r4, r0
 801c324:	f00d fe2d 	bl	8029f82 <_ZdlPvj>
 801c328:	4620      	mov	r0, r4
 801c32a:	bd10      	pop	{r4, pc}

0801c32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c32c:	b510      	push	{r4, lr}
 801c32e:	2104      	movs	r1, #4
 801c330:	4604      	mov	r4, r0
 801c332:	f00d fe26 	bl	8029f82 <_ZdlPvj>
 801c336:	4620      	mov	r0, r4
 801c338:	bd10      	pop	{r4, pc}

0801c33a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c33a:	b510      	push	{r4, lr}
 801c33c:	2104      	movs	r1, #4
 801c33e:	4604      	mov	r4, r0
 801c340:	f00d fe1f 	bl	8029f82 <_ZdlPvj>
 801c344:	4620      	mov	r0, r4
 801c346:	bd10      	pop	{r4, pc}

0801c348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c348:	b510      	push	{r4, lr}
 801c34a:	2104      	movs	r1, #4
 801c34c:	4604      	mov	r4, r0
 801c34e:	f00d fe18 	bl	8029f82 <_ZdlPvj>
 801c352:	4620      	mov	r0, r4
 801c354:	bd10      	pop	{r4, pc}

0801c356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c356:	b510      	push	{r4, lr}
 801c358:	2104      	movs	r1, #4
 801c35a:	4604      	mov	r4, r0
 801c35c:	f00d fe11 	bl	8029f82 <_ZdlPvj>
 801c360:	4620      	mov	r0, r4
 801c362:	bd10      	pop	{r4, pc}

0801c364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c364:	b510      	push	{r4, lr}
 801c366:	2104      	movs	r1, #4
 801c368:	4604      	mov	r4, r0
 801c36a:	f00d fe0a 	bl	8029f82 <_ZdlPvj>
 801c36e:	4620      	mov	r0, r4
 801c370:	bd10      	pop	{r4, pc}

0801c372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c372:	b510      	push	{r4, lr}
 801c374:	2104      	movs	r1, #4
 801c376:	4604      	mov	r4, r0
 801c378:	f00d fe03 	bl	8029f82 <_ZdlPvj>
 801c37c:	4620      	mov	r0, r4
 801c37e:	bd10      	pop	{r4, pc}

0801c380 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c380:	b510      	push	{r4, lr}
 801c382:	2104      	movs	r1, #4
 801c384:	4604      	mov	r4, r0
 801c386:	f00d fdfc 	bl	8029f82 <_ZdlPvj>
 801c38a:	4620      	mov	r0, r4
 801c38c:	bd10      	pop	{r4, pc}

0801c38e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c38e:	b510      	push	{r4, lr}
 801c390:	2104      	movs	r1, #4
 801c392:	4604      	mov	r4, r0
 801c394:	f00d fdf5 	bl	8029f82 <_ZdlPvj>
 801c398:	4620      	mov	r0, r4
 801c39a:	bd10      	pop	{r4, pc}

0801c39c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c39c:	b510      	push	{r4, lr}
 801c39e:	2104      	movs	r1, #4
 801c3a0:	4604      	mov	r4, r0
 801c3a2:	f00d fdee 	bl	8029f82 <_ZdlPvj>
 801c3a6:	4620      	mov	r0, r4
 801c3a8:	bd10      	pop	{r4, pc}

0801c3aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c3aa:	b510      	push	{r4, lr}
 801c3ac:	2104      	movs	r1, #4
 801c3ae:	4604      	mov	r4, r0
 801c3b0:	f00d fde7 	bl	8029f82 <_ZdlPvj>
 801c3b4:	4620      	mov	r0, r4
 801c3b6:	bd10      	pop	{r4, pc}

0801c3b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c3b8:	b510      	push	{r4, lr}
 801c3ba:	2104      	movs	r1, #4
 801c3bc:	4604      	mov	r4, r0
 801c3be:	f00d fde0 	bl	8029f82 <_ZdlPvj>
 801c3c2:	4620      	mov	r0, r4
 801c3c4:	bd10      	pop	{r4, pc}

0801c3c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c3c6:	b510      	push	{r4, lr}
 801c3c8:	2104      	movs	r1, #4
 801c3ca:	4604      	mov	r4, r0
 801c3cc:	f00d fdd9 	bl	8029f82 <_ZdlPvj>
 801c3d0:	4620      	mov	r0, r4
 801c3d2:	bd10      	pop	{r4, pc}

0801c3d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c3d4:	b510      	push	{r4, lr}
 801c3d6:	2104      	movs	r1, #4
 801c3d8:	4604      	mov	r4, r0
 801c3da:	f00d fdd2 	bl	8029f82 <_ZdlPvj>
 801c3de:	4620      	mov	r0, r4
 801c3e0:	bd10      	pop	{r4, pc}

0801c3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c3e2:	b510      	push	{r4, lr}
 801c3e4:	2104      	movs	r1, #4
 801c3e6:	4604      	mov	r4, r0
 801c3e8:	f00d fdcb 	bl	8029f82 <_ZdlPvj>
 801c3ec:	4620      	mov	r0, r4
 801c3ee:	bd10      	pop	{r4, pc}

0801c3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c3f0:	b510      	push	{r4, lr}
 801c3f2:	2104      	movs	r1, #4
 801c3f4:	4604      	mov	r4, r0
 801c3f6:	f00d fdc4 	bl	8029f82 <_ZdlPvj>
 801c3fa:	4620      	mov	r0, r4
 801c3fc:	bd10      	pop	{r4, pc}

0801c3fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c3fe:	b510      	push	{r4, lr}
 801c400:	2104      	movs	r1, #4
 801c402:	4604      	mov	r4, r0
 801c404:	f00d fdbd 	bl	8029f82 <_ZdlPvj>
 801c408:	4620      	mov	r0, r4
 801c40a:	bd10      	pop	{r4, pc}

0801c40c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c40c:	b510      	push	{r4, lr}
 801c40e:	2104      	movs	r1, #4
 801c410:	4604      	mov	r4, r0
 801c412:	f00d fdb6 	bl	8029f82 <_ZdlPvj>
 801c416:	4620      	mov	r0, r4
 801c418:	bd10      	pop	{r4, pc}

0801c41a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c41a:	b510      	push	{r4, lr}
 801c41c:	2104      	movs	r1, #4
 801c41e:	4604      	mov	r4, r0
 801c420:	f00d fdaf 	bl	8029f82 <_ZdlPvj>
 801c424:	4620      	mov	r0, r4
 801c426:	bd10      	pop	{r4, pc}

0801c428 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c428:	b510      	push	{r4, lr}
 801c42a:	2104      	movs	r1, #4
 801c42c:	4604      	mov	r4, r0
 801c42e:	f00d fda8 	bl	8029f82 <_ZdlPvj>
 801c432:	4620      	mov	r0, r4
 801c434:	bd10      	pop	{r4, pc}

0801c436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c436:	b510      	push	{r4, lr}
 801c438:	2104      	movs	r1, #4
 801c43a:	4604      	mov	r4, r0
 801c43c:	f00d fda1 	bl	8029f82 <_ZdlPvj>
 801c440:	4620      	mov	r0, r4
 801c442:	bd10      	pop	{r4, pc}

0801c444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c444:	b510      	push	{r4, lr}
 801c446:	2104      	movs	r1, #4
 801c448:	4604      	mov	r4, r0
 801c44a:	f00d fd9a 	bl	8029f82 <_ZdlPvj>
 801c44e:	4620      	mov	r0, r4
 801c450:	bd10      	pop	{r4, pc}

0801c452 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c452:	b510      	push	{r4, lr}
 801c454:	2104      	movs	r1, #4
 801c456:	4604      	mov	r4, r0
 801c458:	f00d fd93 	bl	8029f82 <_ZdlPvj>
 801c45c:	4620      	mov	r0, r4
 801c45e:	bd10      	pop	{r4, pc}

0801c460 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c460:	b510      	push	{r4, lr}
 801c462:	2104      	movs	r1, #4
 801c464:	4604      	mov	r4, r0
 801c466:	f00d fd8c 	bl	8029f82 <_ZdlPvj>
 801c46a:	4620      	mov	r0, r4
 801c46c:	bd10      	pop	{r4, pc}

0801c46e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c46e:	b510      	push	{r4, lr}
 801c470:	2104      	movs	r1, #4
 801c472:	4604      	mov	r4, r0
 801c474:	f00d fd85 	bl	8029f82 <_ZdlPvj>
 801c478:	4620      	mov	r0, r4
 801c47a:	bd10      	pop	{r4, pc}

0801c47c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c47c:	b510      	push	{r4, lr}
 801c47e:	2104      	movs	r1, #4
 801c480:	4604      	mov	r4, r0
 801c482:	f00d fd7e 	bl	8029f82 <_ZdlPvj>
 801c486:	4620      	mov	r0, r4
 801c488:	bd10      	pop	{r4, pc}

0801c48a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c48a:	b510      	push	{r4, lr}
 801c48c:	2104      	movs	r1, #4
 801c48e:	4604      	mov	r4, r0
 801c490:	f00d fd77 	bl	8029f82 <_ZdlPvj>
 801c494:	4620      	mov	r0, r4
 801c496:	bd10      	pop	{r4, pc}

0801c498 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c498:	b510      	push	{r4, lr}
 801c49a:	2104      	movs	r1, #4
 801c49c:	4604      	mov	r4, r0
 801c49e:	f00d fd70 	bl	8029f82 <_ZdlPvj>
 801c4a2:	4620      	mov	r0, r4
 801c4a4:	bd10      	pop	{r4, pc}
	...

0801c4a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4ac:	b08f      	sub	sp, #60	; 0x3c
 801c4ae:	461c      	mov	r4, r3
 801c4b0:	9205      	str	r2, [sp, #20]
 801c4b2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c4b6:	9100      	str	r1, [sp, #0]
 801c4b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c4ba:	9201      	str	r2, [sp, #4]
 801c4bc:	2a00      	cmp	r2, #0
 801c4be:	f000 8115 	beq.w	801c6ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c4c2:	6820      	ldr	r0, [r4, #0]
 801c4c4:	6861      	ldr	r1, [r4, #4]
 801c4c6:	aa0a      	add	r2, sp, #40	; 0x28
 801c4c8:	c203      	stmia	r2!, {r0, r1}
 801c4ca:	6818      	ldr	r0, [r3, #0]
 801c4cc:	6859      	ldr	r1, [r3, #4]
 801c4ce:	aa0c      	add	r2, sp, #48	; 0x30
 801c4d0:	c203      	stmia	r2!, {r0, r1}
 801c4d2:	a80a      	add	r0, sp, #40	; 0x28
 801c4d4:	f7f9 faec 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4d8:	4621      	mov	r1, r4
 801c4da:	a80c      	add	r0, sp, #48	; 0x30
 801c4dc:	f7f9 fb2c 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c4e0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c4e4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c4e8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c4ec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c4f0:	bfde      	ittt	le
 801c4f2:	b2b3      	uxthle	r3, r6
 801c4f4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c4f8:	fb92 f3f3 	sdivle	r3, r2, r3
 801c4fc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c500:	bfc8      	it	gt
 801c502:	2301      	movgt	r3, #1
 801c504:	fb92 f1f3 	sdiv	r1, r2, r3
 801c508:	fa1f fc81 	uxth.w	ip, r1
 801c50c:	fb0c 2413 	mls	r4, ip, r3, r2
 801c510:	fb14 f406 	smulbb	r4, r4, r6
 801c514:	441d      	add	r5, r3
 801c516:	4404      	add	r4, r0
 801c518:	4661      	mov	r1, ip
 801c51a:	3d01      	subs	r5, #1
 801c51c:	b2a4      	uxth	r4, r4
 801c51e:	fb95 f5f3 	sdiv	r5, r5, r3
 801c522:	b131      	cbz	r1, 801c532 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c524:	9b05      	ldr	r3, [sp, #20]
 801c526:	9900      	ldr	r1, [sp, #0]
 801c528:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c52c:	ba1b      	rev	r3, r3
 801c52e:	4419      	add	r1, r3
 801c530:	9100      	str	r1, [sp, #0]
 801c532:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c536:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c53a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c53e:	4418      	add	r0, r3
 801c540:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c544:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c548:	441a      	add	r2, r3
 801c54a:	4b6a      	ldr	r3, [pc, #424]	; (801c6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c54c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c550:	6818      	ldr	r0, [r3, #0]
 801c552:	6803      	ldr	r3, [r0, #0]
 801c554:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c556:	4798      	blx	r3
 801c558:	4967      	ldr	r1, [pc, #412]	; (801c6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c55a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c55e:	880b      	ldrh	r3, [r1, #0]
 801c560:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c564:	9109      	str	r1, [sp, #36]	; 0x24
 801c566:	fb03 c202 	mla	r2, r3, r2, ip
 801c56a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c56e:	4373      	muls	r3, r6
 801c570:	b2ad      	uxth	r5, r5
 801c572:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c576:	00ad      	lsls	r5, r5, #2
 801c578:	9306      	str	r3, [sp, #24]
 801c57a:	1d2b      	adds	r3, r5, #4
 801c57c:	9307      	str	r3, [sp, #28]
 801c57e:	9b01      	ldr	r3, [sp, #4]
 801c580:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c584:	9103      	str	r1, [sp, #12]
 801c586:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c58a:	2c00      	cmp	r4, #0
 801c58c:	bf0c      	ite	eq
 801c58e:	46c6      	moveq	lr, r8
 801c590:	f04f 0e00 	movne.w	lr, #0
 801c594:	2300      	movs	r3, #0
 801c596:	b292      	uxth	r2, r2
 801c598:	fa1f fe8e 	uxth.w	lr, lr
 801c59c:	9302      	str	r3, [sp, #8]
 801c59e:	9204      	str	r2, [sp, #16]
 801c5a0:	9a06      	ldr	r2, [sp, #24]
 801c5a2:	4282      	cmp	r2, r0
 801c5a4:	f240 809d 	bls.w	801c6e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c5a8:	b963      	cbnz	r3, 801c5c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c5aa:	9b00      	ldr	r3, [sp, #0]
 801c5ac:	781a      	ldrb	r2, [r3, #0]
 801c5ae:	0993      	lsrs	r3, r2, #6
 801c5b0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c5b4:	9202      	str	r2, [sp, #8]
 801c5b6:	1e5a      	subs	r2, r3, #1
 801c5b8:	2a02      	cmp	r2, #2
 801c5ba:	d815      	bhi.n	801c5e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c5bc:	9a00      	ldr	r2, [sp, #0]
 801c5be:	3201      	adds	r2, #1
 801c5c0:	9200      	str	r2, [sp, #0]
 801c5c2:	b29b      	uxth	r3, r3
 801c5c4:	b1b4      	cbz	r4, 801c5f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c5c6:	429c      	cmp	r4, r3
 801c5c8:	bf95      	itete	ls
 801c5ca:	1b1c      	subls	r4, r3, r4
 801c5cc:	1ae4      	subhi	r4, r4, r3
 801c5ce:	fa1f fa84 	uxthls.w	sl, r4
 801c5d2:	b2a4      	uxthhi	r4, r4
 801c5d4:	bf87      	ittee	hi
 801c5d6:	4671      	movhi	r1, lr
 801c5d8:	f04f 0a00 	movhi.w	sl, #0
 801c5dc:	fa1f f188 	uxthls.w	r1, r8
 801c5e0:	2400      	movls	r4, #0
 801c5e2:	4653      	mov	r3, sl
 801c5e4:	468e      	mov	lr, r1
 801c5e6:	e7db      	b.n	801c5a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c5e8:	9a00      	ldr	r2, [sp, #0]
 801c5ea:	9b00      	ldr	r3, [sp, #0]
 801c5ec:	3202      	adds	r2, #2
 801c5ee:	785b      	ldrb	r3, [r3, #1]
 801c5f0:	9200      	str	r2, [sp, #0]
 801c5f2:	e7e7      	b.n	801c5c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c5f4:	2202      	movs	r2, #2
 801c5f6:	4615      	mov	r5, r2
 801c5f8:	9907      	ldr	r1, [sp, #28]
 801c5fa:	9a02      	ldr	r2, [sp, #8]
 801c5fc:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c600:	9905      	ldr	r1, [sp, #20]
 801c602:	4573      	cmp	r3, lr
 801c604:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c608:	9a01      	ldr	r2, [sp, #4]
 801c60a:	bf2b      	itete	cs
 801c60c:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c610:	ebae 0103 	subcc.w	r1, lr, r3
 801c614:	46f1      	movcs	r9, lr
 801c616:	4699      	movcc	r9, r3
 801c618:	bf27      	ittee	cs
 801c61a:	fa1f fa8a 	uxthcs.w	sl, sl
 801c61e:	4621      	movcs	r1, r4
 801c620:	b289      	uxthcc	r1, r1
 801c622:	46a2      	movcc	sl, r4
 801c624:	2aff      	cmp	r2, #255	; 0xff
 801c626:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c62a:	d105      	bne.n	801c638 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c62c:	4481      	add	r9, r0
 801c62e:	4581      	cmp	r9, r0
 801c630:	d045      	beq.n	801c6be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c632:	f820 cb02 	strh.w	ip, [r0], #2
 801c636:	e7fa      	b.n	801c62e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c638:	9d03      	ldr	r5, [sp, #12]
 801c63a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c63e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c642:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c646:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c64a:	436a      	muls	r2, r5
 801c64c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c650:	fa5f fc8c 	uxtb.w	ip, ip
 801c654:	9208      	str	r2, [sp, #32]
 801c656:	fb0b fb05 	mul.w	fp, fp, r5
 801c65a:	fb0c fc05 	mul.w	ip, ip, r5
 801c65e:	4481      	add	r9, r0
 801c660:	4581      	cmp	r9, r0
 801c662:	d02c      	beq.n	801c6be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c664:	8802      	ldrh	r2, [r0, #0]
 801c666:	9d04      	ldr	r5, [sp, #16]
 801c668:	9f04      	ldr	r7, [sp, #16]
 801c66a:	1216      	asrs	r6, r2, #8
 801c66c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c670:	fb16 f605 	smulbb	r6, r6, r5
 801c674:	9d08      	ldr	r5, [sp, #32]
 801c676:	442e      	add	r6, r5
 801c678:	10d5      	asrs	r5, r2, #3
 801c67a:	00d2      	lsls	r2, r2, #3
 801c67c:	b2d2      	uxtb	r2, r2
 801c67e:	fb12 f207 	smulbb	r2, r2, r7
 801c682:	b2b6      	uxth	r6, r6
 801c684:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c688:	4462      	add	r2, ip
 801c68a:	fb15 f507 	smulbb	r5, r5, r7
 801c68e:	b292      	uxth	r2, r2
 801c690:	1c77      	adds	r7, r6, #1
 801c692:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c696:	1c57      	adds	r7, r2, #1
 801c698:	445d      	add	r5, fp
 801c69a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c69e:	b2ad      	uxth	r5, r5
 801c6a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c6a4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c6a8:	4316      	orrs	r6, r2
 801c6aa:	1c6a      	adds	r2, r5, #1
 801c6ac:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c6b0:	096d      	lsrs	r5, r5, #5
 801c6b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c6b6:	432e      	orrs	r6, r5
 801c6b8:	f820 6b02 	strh.w	r6, [r0], #2
 801c6bc:	e7d0      	b.n	801c660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c6be:	4573      	cmp	r3, lr
 801c6c0:	d38f      	bcc.n	801c5e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c6c2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c6c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6c8:	fa1f f188 	uxth.w	r1, r8
 801c6cc:	1a64      	subs	r4, r4, r1
 801c6ce:	881b      	ldrh	r3, [r3, #0]
 801c6d0:	b2a4      	uxth	r4, r4
 801c6d2:	2c00      	cmp	r4, #0
 801c6d4:	eba3 0308 	sub.w	r3, r3, r8
 801c6d8:	bf18      	it	ne
 801c6da:	2100      	movne	r1, #0
 801c6dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c6e0:	e77f      	b.n	801c5e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c6e2:	4b04      	ldr	r3, [pc, #16]	; (801c6f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c6e4:	6818      	ldr	r0, [r3, #0]
 801c6e6:	6803      	ldr	r3, [r0, #0]
 801c6e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6ea:	4798      	blx	r3
 801c6ec:	b00f      	add	sp, #60	; 0x3c
 801c6ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6f2:	bf00      	nop
 801c6f4:	20012fc4 	.word	0x20012fc4
 801c6f8:	20012fbe 	.word	0x20012fbe

0801c6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c700:	b09f      	sub	sp, #124	; 0x7c
 801c702:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c706:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c70a:	9209      	str	r2, [sp, #36]	; 0x24
 801c70c:	461d      	mov	r5, r3
 801c70e:	4604      	mov	r4, r0
 801c710:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c712:	2a00      	cmp	r2, #0
 801c714:	f000 81eb 	beq.w	801caee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c718:	6828      	ldr	r0, [r5, #0]
 801c71a:	6869      	ldr	r1, [r5, #4]
 801c71c:	aa1a      	add	r2, sp, #104	; 0x68
 801c71e:	c203      	stmia	r2!, {r0, r1}
 801c720:	6818      	ldr	r0, [r3, #0]
 801c722:	6859      	ldr	r1, [r3, #4]
 801c724:	aa1c      	add	r2, sp, #112	; 0x70
 801c726:	c203      	stmia	r2!, {r0, r1}
 801c728:	a81a      	add	r0, sp, #104	; 0x68
 801c72a:	f7f9 f9c1 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c72e:	4629      	mov	r1, r5
 801c730:	a81c      	add	r0, sp, #112	; 0x70
 801c732:	f7f9 fa01 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c736:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c73a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c73e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c742:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c746:	bfd7      	itett	le
 801c748:	b29a      	uxthle	r2, r3
 801c74a:	2201      	movgt	r2, #1
 801c74c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c750:	fb91 f2f2 	sdivle	r2, r1, r2
 801c754:	9202      	str	r2, [sp, #8]
 801c756:	9802      	ldr	r0, [sp, #8]
 801c758:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c75c:	fb92 f0f0 	sdiv	r0, r2, r0
 801c760:	b280      	uxth	r0, r0
 801c762:	9010      	str	r0, [sp, #64]	; 0x40
 801c764:	9902      	ldr	r1, [sp, #8]
 801c766:	9802      	ldr	r0, [sp, #8]
 801c768:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c76a:	4488      	add	r8, r1
 801c76c:	fb05 2510 	mls	r5, r5, r0, r2
 801c770:	fb15 f503 	smulbb	r5, r5, r3
 801c774:	f108 38ff 	add.w	r8, r8, #4294967295
 801c778:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c77c:	fb98 f8f1 	sdiv	r8, r8, r1
 801c780:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c784:	440d      	add	r5, r1
 801c786:	4419      	add	r1, r3
 801c788:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c78c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c790:	441a      	add	r2, r3
 801c792:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c796:	9304      	str	r3, [sp, #16]
 801c798:	4b95      	ldr	r3, [pc, #596]	; (801c9f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c79a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c79e:	6818      	ldr	r0, [r3, #0]
 801c7a0:	6803      	ldr	r3, [r0, #0]
 801c7a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c7a4:	4798      	blx	r3
 801c7a6:	4b93      	ldr	r3, [pc, #588]	; (801c9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c7a8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c7ac:	881a      	ldrh	r2, [r3, #0]
 801c7ae:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c7b2:	9318      	str	r3, [sp, #96]	; 0x60
 801c7b4:	fb02 7101 	mla	r1, r2, r1, r7
 801c7b8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c7bc:	4356      	muls	r6, r2
 801c7be:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c7c2:	f108 0801 	add.w	r8, r8, #1
 801c7c6:	920a      	str	r2, [sp, #40]	; 0x28
 801c7c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c7ca:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c7ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801c7d0:	fa1f f888 	uxth.w	r8, r8
 801c7d4:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c7d8:	f108 0204 	add.w	r2, r8, #4
 801c7dc:	9211      	str	r2, [sp, #68]	; 0x44
 801c7de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c7e0:	4b85      	ldr	r3, [pc, #532]	; (801c9f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c7e2:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c7e6:	b2ad      	uxth	r5, r5
 801c7e8:	9215      	str	r2, [sp, #84]	; 0x54
 801c7ea:	2d00      	cmp	r5, #0
 801c7ec:	9a04      	ldr	r2, [sp, #16]
 801c7ee:	f04f 0100 	mov.w	r1, #0
 801c7f2:	bf18      	it	ne
 801c7f4:	2200      	movne	r2, #0
 801c7f6:	1b1b      	subs	r3, r3, r4
 801c7f8:	b292      	uxth	r2, r2
 801c7fa:	910d      	str	r1, [sp, #52]	; 0x34
 801c7fc:	9319      	str	r3, [sp, #100]	; 0x64
 801c7fe:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c800:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c802:	fa11 f383 	uxtah	r3, r1, r3
 801c806:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c808:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c80c:	3304      	adds	r3, #4
 801c80e:	9306      	str	r3, [sp, #24]
 801c810:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c812:	4283      	cmp	r3, r0
 801c814:	f240 8166 	bls.w	801cae4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c818:	9902      	ldr	r1, [sp, #8]
 801c81a:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c81e:	fbb5 f3f3 	udiv	r3, r5, r3
 801c822:	1acb      	subs	r3, r1, r3
 801c824:	b29b      	uxth	r3, r3
 801c826:	9316      	str	r3, [sp, #88]	; 0x58
 801c828:	9b06      	ldr	r3, [sp, #24]
 801c82a:	9e06      	ldr	r6, [sp, #24]
 801c82c:	7859      	ldrb	r1, [r3, #1]
 801c82e:	789b      	ldrb	r3, [r3, #2]
 801c830:	7836      	ldrb	r6, [r6, #0]
 801c832:	9612      	str	r6, [sp, #72]	; 0x48
 801c834:	021b      	lsls	r3, r3, #8
 801c836:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c83a:	9906      	ldr	r1, [sp, #24]
 801c83c:	78c9      	ldrb	r1, [r1, #3]
 801c83e:	430b      	orrs	r3, r1
 801c840:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c842:	3601      	adds	r6, #1
 801c844:	4419      	add	r1, r3
 801c846:	9605      	str	r6, [sp, #20]
 801c848:	1c4e      	adds	r6, r1, #1
 801c84a:	9603      	str	r6, [sp, #12]
 801c84c:	7849      	ldrb	r1, [r1, #1]
 801c84e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c850:	0209      	lsls	r1, r1, #8
 801c852:	5cf3      	ldrb	r3, [r6, r3]
 801c854:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c858:	4319      	orrs	r1, r3
 801c85a:	b28b      	uxth	r3, r1
 801c85c:	930c      	str	r3, [sp, #48]	; 0x30
 801c85e:	2300      	movs	r3, #0
 801c860:	f04f 0a01 	mov.w	sl, #1
 801c864:	9307      	str	r3, [sp, #28]
 801c866:	469c      	mov	ip, r3
 801c868:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c86c:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c870:	46d3      	mov	fp, sl
 801c872:	4657      	mov	r7, sl
 801c874:	930e      	str	r3, [sp, #56]	; 0x38
 801c876:	2d00      	cmp	r5, #0
 801c878:	d07e      	beq.n	801c978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c87a:	42af      	cmp	r7, r5
 801c87c:	d26e      	bcs.n	801c95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c87e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c880:	9201      	str	r2, [sp, #4]
 801c882:	1bed      	subs	r5, r5, r7
 801c884:	4283      	cmp	r3, r0
 801c886:	b2ad      	uxth	r5, r5
 801c888:	d802      	bhi.n	801c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c88a:	e073      	b.n	801c974 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c88c:	2b00      	cmp	r3, #0
 801c88e:	d15f      	bne.n	801c950 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c890:	9b03      	ldr	r3, [sp, #12]
 801c892:	785b      	ldrb	r3, [r3, #1]
 801c894:	f1cb 0207 	rsb	r2, fp, #7
 801c898:	4093      	lsls	r3, r2
 801c89a:	005b      	lsls	r3, r3, #1
 801c89c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c8a0:	9b03      	ldr	r3, [sp, #12]
 801c8a2:	781b      	ldrb	r3, [r3, #0]
 801c8a4:	fa43 f30b 	asr.w	r3, r3, fp
 801c8a8:	b2db      	uxtb	r3, r3
 801c8aa:	4313      	orrs	r3, r2
 801c8ac:	f10b 0201 	add.w	r2, fp, #1
 801c8b0:	fa5f fb82 	uxtb.w	fp, r2
 801c8b4:	9a03      	ldr	r2, [sp, #12]
 801c8b6:	f1bb 0f08 	cmp.w	fp, #8
 801c8ba:	bf15      	itete	ne
 801c8bc:	3201      	addne	r2, #1
 801c8be:	3202      	addeq	r2, #2
 801c8c0:	9203      	strne	r2, [sp, #12]
 801c8c2:	9203      	streq	r2, [sp, #12]
 801c8c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c8c6:	b29f      	uxth	r7, r3
 801c8c8:	bf08      	it	eq
 801c8ca:	f04f 0b00 	moveq.w	fp, #0
 801c8ce:	42ba      	cmp	r2, r7
 801c8d0:	d309      	bcc.n	801c8e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c8d2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c8d6:	2301      	movs	r3, #1
 801c8d8:	9a05      	ldr	r2, [sp, #20]
 801c8da:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c8de:	d30e      	bcc.n	801c8fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c8e0:	469a      	mov	sl, r3
 801c8e2:	2600      	movs	r6, #0
 801c8e4:	e035      	b.n	801c952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c8e6:	9b05      	ldr	r3, [sp, #20]
 801c8e8:	429f      	cmp	r7, r3
 801c8ea:	d318      	bcc.n	801c91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c8ec:	eb04 030a 	add.w	r3, r4, sl
 801c8f0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c8f4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c8f8:	f10a 0301 	add.w	r3, sl, #1
 801c8fc:	b29b      	uxth	r3, r3
 801c8fe:	9a05      	ldr	r2, [sp, #20]
 801c900:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c904:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c906:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c90a:	7116      	strb	r6, [r2, #4]
 801c90c:	f10a 0601 	add.w	r6, sl, #1
 801c910:	80d1      	strh	r1, [r2, #6]
 801c912:	7156      	strb	r6, [r2, #5]
 801c914:	9a05      	ldr	r2, [sp, #20]
 801c916:	3201      	adds	r2, #1
 801c918:	b292      	uxth	r2, r2
 801c91a:	9205      	str	r2, [sp, #20]
 801c91c:	e7e0      	b.n	801c8e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c91e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c922:	463a      	mov	r2, r7
 801c924:	795b      	ldrb	r3, [r3, #5]
 801c926:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c92a:	4426      	add	r6, r4
 801c92c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c92e:	eb01 0c06 	add.w	ip, r1, r6
 801c932:	f1bc 0f00 	cmp.w	ip, #0
 801c936:	dd07      	ble.n	801c948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c938:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c93c:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c940:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c944:	88d2      	ldrh	r2, [r2, #6]
 801c946:	e7f1      	b.n	801c92c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c948:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c94c:	b29b      	uxth	r3, r3
 801c94e:	e7c3      	b.n	801c8d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c950:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c952:	970c      	str	r7, [sp, #48]	; 0x30
 801c954:	9a01      	ldr	r2, [sp, #4]
 801c956:	46b4      	mov	ip, r6
 801c958:	461f      	mov	r7, r3
 801c95a:	e78c      	b.n	801c876 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c95c:	1b7b      	subs	r3, r7, r5
 801c95e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c962:	9201      	str	r2, [sp, #4]
 801c964:	eb0c 0605 	add.w	r6, ip, r5
 801c968:	b29b      	uxth	r3, r3
 801c96a:	b2b6      	uxth	r6, r6
 801c96c:	2500      	movs	r5, #0
 801c96e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c970:	4282      	cmp	r2, r0
 801c972:	d88b      	bhi.n	801c88c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c974:	9a01      	ldr	r2, [sp, #4]
 801c976:	e74b      	b.n	801c810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c978:	4297      	cmp	r7, r2
 801c97a:	d332      	bcc.n	801c9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c97c:	1abb      	subs	r3, r7, r2
 801c97e:	b29b      	uxth	r3, r3
 801c980:	9208      	str	r2, [sp, #32]
 801c982:	9501      	str	r5, [sp, #4]
 801c984:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c986:	29ff      	cmp	r1, #255	; 0xff
 801c988:	9908      	ldr	r1, [sp, #32]
 801c98a:	eb0c 0601 	add.w	r6, ip, r1
 801c98e:	d135      	bne.n	801c9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c990:	f1a0 0e02 	sub.w	lr, r0, #2
 801c994:	b2b6      	uxth	r6, r6
 801c996:	45b4      	cmp	ip, r6
 801c998:	f040 808c 	bne.w	801cab4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c99c:	9908      	ldr	r1, [sp, #32]
 801c99e:	4297      	cmp	r7, r2
 801c9a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c9a4:	d3e2      	bcc.n	801c96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c9a6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c9a8:	9904      	ldr	r1, [sp, #16]
 801c9aa:	8812      	ldrh	r2, [r2, #0]
 801c9ac:	1a52      	subs	r2, r2, r1
 801c9ae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c9b2:	9a07      	ldr	r2, [sp, #28]
 801c9b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c9b6:	3201      	adds	r2, #1
 801c9b8:	428a      	cmp	r2, r1
 801c9ba:	9207      	str	r2, [sp, #28]
 801c9bc:	f040 8087 	bne.w	801cace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c9c0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c9c4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c9c8:	9b04      	ldr	r3, [sp, #16]
 801c9ca:	1bed      	subs	r5, r5, r7
 801c9cc:	b2ad      	uxth	r5, r5
 801c9ce:	2d00      	cmp	r5, #0
 801c9d0:	bf08      	it	eq
 801c9d2:	461a      	moveq	r2, r3
 801c9d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c9d6:	bf18      	it	ne
 801c9d8:	2200      	movne	r2, #0
 801c9da:	3301      	adds	r3, #1
 801c9dc:	930d      	str	r3, [sp, #52]	; 0x34
 801c9de:	b292      	uxth	r2, r2
 801c9e0:	e70d      	b.n	801c7fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c9e2:	1bd1      	subs	r1, r2, r7
 801c9e4:	b28b      	uxth	r3, r1
 801c9e6:	9301      	str	r3, [sp, #4]
 801c9e8:	9708      	str	r7, [sp, #32]
 801c9ea:	462b      	mov	r3, r5
 801c9ec:	e7ca      	b.n	801c984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c9ee:	bf00      	nop
 801c9f0:	20012fc4 	.word	0x20012fc4
 801c9f4:	20012fbe 	.word	0x20012fbe
 801c9f8:	fffff7fb 	.word	0xfffff7fb
 801c9fc:	b2b6      	uxth	r6, r6
 801c9fe:	900b      	str	r0, [sp, #44]	; 0x2c
 801ca00:	45b4      	cmp	ip, r6
 801ca02:	d0cb      	beq.n	801c99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ca04:	f10c 0101 	add.w	r1, ip, #1
 801ca08:	44a4      	add	ip, r4
 801ca0a:	9117      	str	r1, [sp, #92]	; 0x5c
 801ca0c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ca10:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ca12:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ca16:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ca18:	f8b1 c000 	ldrh.w	ip, [r1]
 801ca1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ca1e:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ca22:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ca26:	fb1e fe01 	smulbb	lr, lr, r1
 801ca2a:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ca2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ca30:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ca34:	fb08 e801 	mla	r8, r8, r1, lr
 801ca38:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ca3c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ca3e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ca42:	fb19 f901 	smulbb	r9, r9, r1
 801ca46:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ca4a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ca4c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ca50:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ca54:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ca58:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ca5a:	fa5f fc8c 	uxtb.w	ip, ip
 801ca5e:	fb1c fc01 	smulbb	ip, ip, r1
 801ca62:	00ed      	lsls	r5, r5, #3
 801ca64:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ca66:	b2ed      	uxtb	r5, r5
 801ca68:	fb05 c501 	mla	r5, r5, r1, ip
 801ca6c:	fa1f f888 	uxth.w	r8, r8
 801ca70:	fa1f fe8e 	uxth.w	lr, lr
 801ca74:	b2ad      	uxth	r5, r5
 801ca76:	f108 0c01 	add.w	ip, r8, #1
 801ca7a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ca7e:	f10e 0901 	add.w	r9, lr, #1
 801ca82:	f105 0c01 	add.w	ip, r5, #1
 801ca86:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ca8a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801ca8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ca92:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ca96:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ca9a:	ea4c 0808 	orr.w	r8, ip, r8
 801ca9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801caa0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801caa4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801caa8:	ea48 0809 	orr.w	r8, r8, r9
 801caac:	f821 8b02 	strh.w	r8, [r1], #2
 801cab0:	910b      	str	r1, [sp, #44]	; 0x2c
 801cab2:	e7a5      	b.n	801ca00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801cab4:	f10c 0801 	add.w	r8, ip, #1
 801cab8:	44a4      	add	ip, r4
 801caba:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cabc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801cac0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801cac4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801cac8:	fa1f fc88 	uxth.w	ip, r8
 801cacc:	e763      	b.n	801c996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801cace:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cad2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cad6:	1aad      	subs	r5, r5, r2
 801cad8:	b2ad      	uxth	r5, r5
 801cada:	2d00      	cmp	r5, #0
 801cadc:	bf18      	it	ne
 801cade:	2200      	movne	r2, #0
 801cae0:	9201      	str	r2, [sp, #4]
 801cae2:	e744      	b.n	801c96e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801cae4:	4b03      	ldr	r3, [pc, #12]	; (801caf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801cae6:	6818      	ldr	r0, [r3, #0]
 801cae8:	6803      	ldr	r3, [r0, #0]
 801caea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801caec:	4798      	blx	r3
 801caee:	b01f      	add	sp, #124	; 0x7c
 801caf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801caf4:	20012fc4 	.word	0x20012fc4

0801caf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801caf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cafc:	b08f      	sub	sp, #60	; 0x3c
 801cafe:	461c      	mov	r4, r3
 801cb00:	9203      	str	r2, [sp, #12]
 801cb02:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cb06:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cb08:	9202      	str	r2, [sp, #8]
 801cb0a:	460f      	mov	r7, r1
 801cb0c:	2a00      	cmp	r2, #0
 801cb0e:	f000 8128 	beq.w	801cd62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801cb12:	6820      	ldr	r0, [r4, #0]
 801cb14:	6861      	ldr	r1, [r4, #4]
 801cb16:	aa0a      	add	r2, sp, #40	; 0x28
 801cb18:	c203      	stmia	r2!, {r0, r1}
 801cb1a:	6818      	ldr	r0, [r3, #0]
 801cb1c:	6859      	ldr	r1, [r3, #4]
 801cb1e:	aa0c      	add	r2, sp, #48	; 0x30
 801cb20:	c203      	stmia	r2!, {r0, r1}
 801cb22:	a80a      	add	r0, sp, #40	; 0x28
 801cb24:	f7f8 ffc4 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb28:	4621      	mov	r1, r4
 801cb2a:	a80c      	add	r0, sp, #48	; 0x30
 801cb2c:	f7f9 f804 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb30:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801cb34:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cb38:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cb3c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cb40:	bfde      	ittt	le
 801cb42:	b2b3      	uxthle	r3, r6
 801cb44:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cb48:	fb92 f3f3 	sdivle	r3, r2, r3
 801cb4c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cb50:	bfc8      	it	gt
 801cb52:	2301      	movgt	r3, #1
 801cb54:	fb92 f1f3 	sdiv	r1, r2, r3
 801cb58:	fa1f fc81 	uxth.w	ip, r1
 801cb5c:	fb0c 2413 	mls	r4, ip, r3, r2
 801cb60:	fb14 f406 	smulbb	r4, r4, r6
 801cb64:	441d      	add	r5, r3
 801cb66:	4404      	add	r4, r0
 801cb68:	4661      	mov	r1, ip
 801cb6a:	3d01      	subs	r5, #1
 801cb6c:	b2a4      	uxth	r4, r4
 801cb6e:	fb95 f5f3 	sdiv	r5, r5, r3
 801cb72:	b121      	cbz	r1, 801cb7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801cb74:	9b03      	ldr	r3, [sp, #12]
 801cb76:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cb7a:	ba1b      	rev	r3, r3
 801cb7c:	441f      	add	r7, r3
 801cb7e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cb82:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801cb86:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cb8a:	4418      	add	r0, r3
 801cb8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cb90:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cb94:	441a      	add	r2, r3
 801cb96:	4b74      	ldr	r3, [pc, #464]	; (801cd68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cb98:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cb9c:	6818      	ldr	r0, [r3, #0]
 801cb9e:	6803      	ldr	r3, [r0, #0]
 801cba0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cba2:	4798      	blx	r3
 801cba4:	4a71      	ldr	r2, [pc, #452]	; (801cd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801cba6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801cbaa:	8813      	ldrh	r3, [r2, #0]
 801cbac:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cbb0:	9209      	str	r2, [sp, #36]	; 0x24
 801cbb2:	fb03 c101 	mla	r1, r3, r1, ip
 801cbb6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cbba:	4373      	muls	r3, r6
 801cbbc:	b2ad      	uxth	r5, r5
 801cbbe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cbc2:	00ad      	lsls	r5, r5, #2
 801cbc4:	2c00      	cmp	r4, #0
 801cbc6:	9304      	str	r3, [sp, #16]
 801cbc8:	f105 0304 	add.w	r3, r5, #4
 801cbcc:	9305      	str	r3, [sp, #20]
 801cbce:	bf0c      	ite	eq
 801cbd0:	46c8      	moveq	r8, r9
 801cbd2:	f04f 0800 	movne.w	r8, #0
 801cbd6:	2300      	movs	r3, #0
 801cbd8:	fa1f f888 	uxth.w	r8, r8
 801cbdc:	9301      	str	r3, [sp, #4]
 801cbde:	9a04      	ldr	r2, [sp, #16]
 801cbe0:	4282      	cmp	r2, r0
 801cbe2:	f240 80b9 	bls.w	801cd58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801cbe6:	b95b      	cbnz	r3, 801cc00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801cbe8:	783a      	ldrb	r2, [r7, #0]
 801cbea:	0993      	lsrs	r3, r2, #6
 801cbec:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cbf0:	9201      	str	r2, [sp, #4]
 801cbf2:	1e5a      	subs	r2, r3, #1
 801cbf4:	2a02      	cmp	r2, #2
 801cbf6:	bf8d      	iteet	hi
 801cbf8:	787b      	ldrbhi	r3, [r7, #1]
 801cbfa:	3701      	addls	r7, #1
 801cbfc:	b29b      	uxthls	r3, r3
 801cbfe:	3702      	addhi	r7, #2
 801cc00:	b184      	cbz	r4, 801cc24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801cc02:	429c      	cmp	r4, r3
 801cc04:	bf95      	itete	ls
 801cc06:	1b1c      	subls	r4, r3, r4
 801cc08:	1ae4      	subhi	r4, r4, r3
 801cc0a:	fa1f fa84 	uxthls.w	sl, r4
 801cc0e:	b2a4      	uxthhi	r4, r4
 801cc10:	bf87      	ittee	hi
 801cc12:	46c4      	movhi	ip, r8
 801cc14:	f04f 0a00 	movhi.w	sl, #0
 801cc18:	fa1f fc89 	uxthls.w	ip, r9
 801cc1c:	2400      	movls	r4, #0
 801cc1e:	4653      	mov	r3, sl
 801cc20:	46e0      	mov	r8, ip
 801cc22:	e7dc      	b.n	801cbde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801cc24:	2204      	movs	r2, #4
 801cc26:	4615      	mov	r5, r2
 801cc28:	9905      	ldr	r1, [sp, #20]
 801cc2a:	9a01      	ldr	r2, [sp, #4]
 801cc2c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cc30:	9903      	ldr	r1, [sp, #12]
 801cc32:	588a      	ldr	r2, [r1, r2]
 801cc34:	4543      	cmp	r3, r8
 801cc36:	bf27      	ittee	cs
 801cc38:	eba3 0a08 	subcs.w	sl, r3, r8
 801cc3c:	46c6      	movcs	lr, r8
 801cc3e:	eba8 0c03 	subcc.w	ip, r8, r3
 801cc42:	469e      	movcc	lr, r3
 801cc44:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801cc48:	bf27      	ittee	cs
 801cc4a:	fa1f fa8a 	uxthcs.w	sl, sl
 801cc4e:	46a4      	movcs	ip, r4
 801cc50:	fa1f fc8c 	uxthcc.w	ip, ip
 801cc54:	46a2      	movcc	sl, r4
 801cc56:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801cc5a:	2900      	cmp	r1, #0
 801cc5c:	d066      	beq.n	801cd2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801cc5e:	29ff      	cmp	r1, #255	; 0xff
 801cc60:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801cc64:	d114      	bne.n	801cc90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cc66:	9d02      	ldr	r5, [sp, #8]
 801cc68:	2dff      	cmp	r5, #255	; 0xff
 801cc6a:	d111      	bne.n	801cc90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801cc6c:	0951      	lsrs	r1, r2, #5
 801cc6e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cc72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cc76:	f026 0607 	bic.w	r6, r6, #7
 801cc7a:	430e      	orrs	r6, r1
 801cc7c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc80:	4316      	orrs	r6, r2
 801cc82:	b2b6      	uxth	r6, r6
 801cc84:	4486      	add	lr, r0
 801cc86:	4586      	cmp	lr, r0
 801cc88:	d051      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cc8a:	f820 6b02 	strh.w	r6, [r0], #2
 801cc8e:	e7fa      	b.n	801cc86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801cc90:	9d02      	ldr	r5, [sp, #8]
 801cc92:	4369      	muls	r1, r5
 801cc94:	1c4d      	adds	r5, r1, #1
 801cc96:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801cc9a:	122d      	asrs	r5, r5, #8
 801cc9c:	ea6f 0b05 	mvn.w	fp, r5
 801cca0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801cca4:	b2ad      	uxth	r5, r5
 801cca6:	b2f6      	uxtb	r6, r6
 801cca8:	b2d2      	uxtb	r2, r2
 801ccaa:	fb11 f105 	smulbb	r1, r1, r5
 801ccae:	fb16 f605 	smulbb	r6, r6, r5
 801ccb2:	fb12 f205 	smulbb	r2, r2, r5
 801ccb6:	b289      	uxth	r1, r1
 801ccb8:	b2b6      	uxth	r6, r6
 801ccba:	b292      	uxth	r2, r2
 801ccbc:	9106      	str	r1, [sp, #24]
 801ccbe:	9607      	str	r6, [sp, #28]
 801ccc0:	9208      	str	r2, [sp, #32]
 801ccc2:	4486      	add	lr, r0
 801ccc4:	fa5f fb8b 	uxtb.w	fp, fp
 801ccc8:	4586      	cmp	lr, r0
 801ccca:	d030      	beq.n	801cd2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cccc:	8802      	ldrh	r2, [r0, #0]
 801ccce:	9906      	ldr	r1, [sp, #24]
 801ccd0:	1216      	asrs	r6, r2, #8
 801ccd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ccd6:	10d5      	asrs	r5, r2, #3
 801ccd8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ccdc:	fb06 160b 	mla	r6, r6, fp, r1
 801cce0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cce4:	9907      	ldr	r1, [sp, #28]
 801cce6:	00d2      	lsls	r2, r2, #3
 801cce8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ccec:	fb05 150b 	mla	r5, r5, fp, r1
 801ccf0:	b2d2      	uxtb	r2, r2
 801ccf2:	9908      	ldr	r1, [sp, #32]
 801ccf4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ccf8:	b2b6      	uxth	r6, r6
 801ccfa:	fb02 120b 	mla	r2, r2, fp, r1
 801ccfe:	b292      	uxth	r2, r2
 801cd00:	1c71      	adds	r1, r6, #1
 801cd02:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801cd06:	1c51      	adds	r1, r2, #1
 801cd08:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cd0c:	b2ad      	uxth	r5, r5
 801cd0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cd12:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cd16:	4316      	orrs	r6, r2
 801cd18:	1c6a      	adds	r2, r5, #1
 801cd1a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801cd1e:	096d      	lsrs	r5, r5, #5
 801cd20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd24:	432e      	orrs	r6, r5
 801cd26:	f820 6b02 	strh.w	r6, [r0], #2
 801cd2a:	e7cd      	b.n	801ccc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801cd2c:	4470      	add	r0, lr
 801cd2e:	4543      	cmp	r3, r8
 801cd30:	f4ff af75 	bcc.w	801cc1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cd34:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801cd38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd3a:	fa1f fc89 	uxth.w	ip, r9
 801cd3e:	eba4 040c 	sub.w	r4, r4, ip
 801cd42:	881b      	ldrh	r3, [r3, #0]
 801cd44:	b2a4      	uxth	r4, r4
 801cd46:	2c00      	cmp	r4, #0
 801cd48:	eba3 0309 	sub.w	r3, r3, r9
 801cd4c:	bf18      	it	ne
 801cd4e:	f04f 0c00 	movne.w	ip, #0
 801cd52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd56:	e762      	b.n	801cc1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801cd58:	4b03      	ldr	r3, [pc, #12]	; (801cd68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cd5a:	6818      	ldr	r0, [r3, #0]
 801cd5c:	6803      	ldr	r3, [r0, #0]
 801cd5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd60:	4798      	blx	r3
 801cd62:	b00f      	add	sp, #60	; 0x3c
 801cd64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd68:	20012fc4 	.word	0x20012fc4
 801cd6c:	20012fbe 	.word	0x20012fbe

0801cd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801cd70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd74:	b093      	sub	sp, #76	; 0x4c
 801cd76:	461c      	mov	r4, r3
 801cd78:	9205      	str	r2, [sp, #20]
 801cd7a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801cd7e:	9101      	str	r1, [sp, #4]
 801cd80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cd82:	9202      	str	r2, [sp, #8]
 801cd84:	2a00      	cmp	r2, #0
 801cd86:	f000 812c 	beq.w	801cfe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cd8a:	6820      	ldr	r0, [r4, #0]
 801cd8c:	6861      	ldr	r1, [r4, #4]
 801cd8e:	aa0e      	add	r2, sp, #56	; 0x38
 801cd90:	c203      	stmia	r2!, {r0, r1}
 801cd92:	6818      	ldr	r0, [r3, #0]
 801cd94:	6859      	ldr	r1, [r3, #4]
 801cd96:	aa10      	add	r2, sp, #64	; 0x40
 801cd98:	c203      	stmia	r2!, {r0, r1}
 801cd9a:	a80e      	add	r0, sp, #56	; 0x38
 801cd9c:	f7f8 fe88 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cda0:	4621      	mov	r1, r4
 801cda2:	a810      	add	r0, sp, #64	; 0x40
 801cda4:	f7f8 fec8 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cda8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cdac:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801cdb0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801cdb4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cdb8:	bfde      	ittt	le
 801cdba:	b2b3      	uxthle	r3, r6
 801cdbc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801cdc0:	fb92 f3f3 	sdivle	r3, r2, r3
 801cdc4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cdc8:	bfc8      	it	gt
 801cdca:	2301      	movgt	r3, #1
 801cdcc:	fb92 f1f3 	sdiv	r1, r2, r3
 801cdd0:	fa1f fc81 	uxth.w	ip, r1
 801cdd4:	fb0c 2413 	mls	r4, ip, r3, r2
 801cdd8:	fb14 f406 	smulbb	r4, r4, r6
 801cddc:	441d      	add	r5, r3
 801cdde:	4404      	add	r4, r0
 801cde0:	4661      	mov	r1, ip
 801cde2:	3d01      	subs	r5, #1
 801cde4:	b2a4      	uxth	r4, r4
 801cde6:	fb95 f5f3 	sdiv	r5, r5, r3
 801cdea:	b131      	cbz	r1, 801cdfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cdec:	9b05      	ldr	r3, [sp, #20]
 801cdee:	9901      	ldr	r1, [sp, #4]
 801cdf0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cdf4:	ba1b      	rev	r3, r3
 801cdf6:	4419      	add	r1, r3
 801cdf8:	9101      	str	r1, [sp, #4]
 801cdfa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cdfe:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ce02:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801ce06:	4418      	add	r0, r3
 801ce08:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ce0c:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801ce10:	441a      	add	r2, r3
 801ce12:	4b75      	ldr	r3, [pc, #468]	; (801cfe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ce14:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801ce18:	6818      	ldr	r0, [r3, #0]
 801ce1a:	6803      	ldr	r3, [r0, #0]
 801ce1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce1e:	4798      	blx	r3
 801ce20:	4972      	ldr	r1, [pc, #456]	; (801cfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801ce22:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801ce26:	880b      	ldrh	r3, [r1, #0]
 801ce28:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ce2c:	910d      	str	r1, [sp, #52]	; 0x34
 801ce2e:	fb03 c202 	mla	r2, r3, r2, ip
 801ce32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ce36:	4373      	muls	r3, r6
 801ce38:	b2ad      	uxth	r5, r5
 801ce3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ce3e:	00ad      	lsls	r5, r5, #2
 801ce40:	9308      	str	r3, [sp, #32]
 801ce42:	1d2b      	adds	r3, r5, #4
 801ce44:	9309      	str	r3, [sp, #36]	; 0x24
 801ce46:	9b02      	ldr	r3, [sp, #8]
 801ce48:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ce4c:	9106      	str	r1, [sp, #24]
 801ce4e:	43da      	mvns	r2, r3
 801ce50:	2c00      	cmp	r4, #0
 801ce52:	bf0c      	ite	eq
 801ce54:	46dc      	moveq	ip, fp
 801ce56:	f04f 0c00 	movne.w	ip, #0
 801ce5a:	2300      	movs	r3, #0
 801ce5c:	b2d2      	uxtb	r2, r2
 801ce5e:	fa1f fc8c 	uxth.w	ip, ip
 801ce62:	9303      	str	r3, [sp, #12]
 801ce64:	9207      	str	r2, [sp, #28]
 801ce66:	9a08      	ldr	r2, [sp, #32]
 801ce68:	4282      	cmp	r2, r0
 801ce6a:	f240 80b5 	bls.w	801cfd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801ce6e:	b963      	cbnz	r3, 801ce8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ce70:	9b01      	ldr	r3, [sp, #4]
 801ce72:	781a      	ldrb	r2, [r3, #0]
 801ce74:	0993      	lsrs	r3, r2, #6
 801ce76:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ce7a:	9203      	str	r2, [sp, #12]
 801ce7c:	1e5a      	subs	r2, r3, #1
 801ce7e:	2a02      	cmp	r2, #2
 801ce80:	d815      	bhi.n	801ceae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801ce82:	9a01      	ldr	r2, [sp, #4]
 801ce84:	3201      	adds	r2, #1
 801ce86:	9201      	str	r2, [sp, #4]
 801ce88:	b29b      	uxth	r3, r3
 801ce8a:	b1b4      	cbz	r4, 801ceba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801ce8c:	429c      	cmp	r4, r3
 801ce8e:	bf95      	itete	ls
 801ce90:	1b1c      	subls	r4, r3, r4
 801ce92:	1ae4      	subhi	r4, r4, r3
 801ce94:	fa1f f884 	uxthls.w	r8, r4
 801ce98:	b2a4      	uxthhi	r4, r4
 801ce9a:	bf87      	ittee	hi
 801ce9c:	4666      	movhi	r6, ip
 801ce9e:	f04f 0800 	movhi.w	r8, #0
 801cea2:	fa1f f68b 	uxthls.w	r6, fp
 801cea6:	2400      	movls	r4, #0
 801cea8:	4643      	mov	r3, r8
 801ceaa:	46b4      	mov	ip, r6
 801ceac:	e7db      	b.n	801ce66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801ceae:	9a01      	ldr	r2, [sp, #4]
 801ceb0:	9b01      	ldr	r3, [sp, #4]
 801ceb2:	3202      	adds	r2, #2
 801ceb4:	785b      	ldrb	r3, [r3, #1]
 801ceb6:	9201      	str	r2, [sp, #4]
 801ceb8:	e7e7      	b.n	801ce8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ceba:	2203      	movs	r2, #3
 801cebc:	4615      	mov	r5, r2
 801cebe:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cec0:	9a03      	ldr	r2, [sp, #12]
 801cec2:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cec6:	9905      	ldr	r1, [sp, #20]
 801cec8:	4563      	cmp	r3, ip
 801ceca:	eb01 0502 	add.w	r5, r1, r2
 801cece:	9902      	ldr	r1, [sp, #8]
 801ced0:	bf29      	itett	cs
 801ced2:	eba3 080c 	subcs.w	r8, r3, ip
 801ced6:	ebac 0603 	subcc.w	r6, ip, r3
 801ceda:	fa1f f888 	uxthcs.w	r8, r8
 801cede:	46e1      	movcs	r9, ip
 801cee0:	bf2f      	iteee	cs
 801cee2:	4626      	movcs	r6, r4
 801cee4:	b2b6      	uxthcc	r6, r6
 801cee6:	4699      	movcc	r9, r3
 801cee8:	46a0      	movcc	r8, r4
 801ceea:	29ff      	cmp	r1, #255	; 0xff
 801ceec:	d04a      	beq.n	801cf84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801ceee:	9f06      	ldr	r7, [sp, #24]
 801cef0:	78a9      	ldrb	r1, [r5, #2]
 801cef2:	9004      	str	r0, [sp, #16]
 801cef4:	4379      	muls	r1, r7
 801cef6:	910a      	str	r1, [sp, #40]	; 0x28
 801cef8:	7869      	ldrb	r1, [r5, #1]
 801cefa:	4379      	muls	r1, r7
 801cefc:	910b      	str	r1, [sp, #44]	; 0x2c
 801cefe:	9905      	ldr	r1, [sp, #20]
 801cf00:	5c8a      	ldrb	r2, [r1, r2]
 801cf02:	437a      	muls	r2, r7
 801cf04:	920c      	str	r2, [sp, #48]	; 0x30
 801cf06:	46ca      	mov	sl, r9
 801cf08:	f1ba 0f00 	cmp.w	sl, #0
 801cf0c:	d03d      	beq.n	801cf8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cf0e:	9a04      	ldr	r2, [sp, #16]
 801cf10:	9f07      	ldr	r7, [sp, #28]
 801cf12:	8812      	ldrh	r2, [r2, #0]
 801cf14:	1215      	asrs	r5, r2, #8
 801cf16:	46be      	mov	lr, r7
 801cf18:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cf1c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cf1e:	10d1      	asrs	r1, r2, #3
 801cf20:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cf24:	fb05 750e 	mla	r5, r5, lr, r7
 801cf28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cf2c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cf2e:	00d2      	lsls	r2, r2, #3
 801cf30:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cf34:	fb01 710e 	mla	r1, r1, lr, r7
 801cf38:	b2d2      	uxtb	r2, r2
 801cf3a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cf3c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cf40:	b2ad      	uxth	r5, r5
 801cf42:	fb02 720e 	mla	r2, r2, lr, r7
 801cf46:	b292      	uxth	r2, r2
 801cf48:	f105 0e01 	add.w	lr, r5, #1
 801cf4c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cf50:	f102 0e01 	add.w	lr, r2, #1
 801cf54:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cf58:	b289      	uxth	r1, r1
 801cf5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cf5e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cf62:	4315      	orrs	r5, r2
 801cf64:	1c4a      	adds	r2, r1, #1
 801cf66:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf6a:	0949      	lsrs	r1, r1, #5
 801cf6c:	9a04      	ldr	r2, [sp, #16]
 801cf6e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cf72:	430d      	orrs	r5, r1
 801cf74:	f822 5b02 	strh.w	r5, [r2], #2
 801cf78:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cf7c:	9204      	str	r2, [sp, #16]
 801cf7e:	fa1f fa8a 	uxth.w	sl, sl
 801cf82:	e7c1      	b.n	801cf08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cf84:	4649      	mov	r1, r9
 801cf86:	4686      	mov	lr, r0
 801cf88:	b999      	cbnz	r1, 801cfb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cf8a:	4563      	cmp	r3, ip
 801cf8c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801cf90:	d38a      	bcc.n	801cea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cf92:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801cf96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf98:	fa1f f68b 	uxth.w	r6, fp
 801cf9c:	1ba4      	subs	r4, r4, r6
 801cf9e:	881b      	ldrh	r3, [r3, #0]
 801cfa0:	b2a4      	uxth	r4, r4
 801cfa2:	2c00      	cmp	r4, #0
 801cfa4:	eba3 030b 	sub.w	r3, r3, fp
 801cfa8:	bf18      	it	ne
 801cfaa:	2600      	movne	r6, #0
 801cfac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cfb0:	e77a      	b.n	801cea8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cfb2:	78aa      	ldrb	r2, [r5, #2]
 801cfb4:	4f0e      	ldr	r7, [pc, #56]	; (801cff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cfb6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cfba:	786a      	ldrb	r2, [r5, #1]
 801cfbc:	00d2      	lsls	r2, r2, #3
 801cfbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cfc2:	ea4a 0202 	orr.w	r2, sl, r2
 801cfc6:	f895 a000 	ldrb.w	sl, [r5]
 801cfca:	3901      	subs	r1, #1
 801cfcc:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cfd0:	f82e 2b02 	strh.w	r2, [lr], #2
 801cfd4:	b289      	uxth	r1, r1
 801cfd6:	e7d7      	b.n	801cf88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cfd8:	4b03      	ldr	r3, [pc, #12]	; (801cfe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cfda:	6818      	ldr	r0, [r3, #0]
 801cfdc:	6803      	ldr	r3, [r0, #0]
 801cfde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cfe0:	4798      	blx	r3
 801cfe2:	b013      	add	sp, #76	; 0x4c
 801cfe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfe8:	20012fc4 	.word	0x20012fc4
 801cfec:	20012fbe 	.word	0x20012fbe
 801cff0:	fffff800 	.word	0xfffff800

0801cff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cff8:	b09d      	sub	sp, #116	; 0x74
 801cffa:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cffe:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d002:	920e      	str	r2, [sp, #56]	; 0x38
 801d004:	461c      	mov	r4, r3
 801d006:	4683      	mov	fp, r0
 801d008:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d00a:	2a00      	cmp	r2, #0
 801d00c:	f000 81e0 	beq.w	801d3d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d010:	6820      	ldr	r0, [r4, #0]
 801d012:	6861      	ldr	r1, [r4, #4]
 801d014:	aa18      	add	r2, sp, #96	; 0x60
 801d016:	c203      	stmia	r2!, {r0, r1}
 801d018:	6818      	ldr	r0, [r3, #0]
 801d01a:	6859      	ldr	r1, [r3, #4]
 801d01c:	aa1a      	add	r2, sp, #104	; 0x68
 801d01e:	c203      	stmia	r2!, {r0, r1}
 801d020:	a818      	add	r0, sp, #96	; 0x60
 801d022:	f7f8 fd45 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d026:	4621      	mov	r1, r4
 801d028:	a81a      	add	r0, sp, #104	; 0x68
 801d02a:	f7f8 fd85 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d02e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d032:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d036:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d03a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d03e:	bfd7      	itett	le
 801d040:	b29a      	uxthle	r2, r3
 801d042:	2201      	movgt	r2, #1
 801d044:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d048:	fb91 f2f2 	sdivle	r2, r1, r2
 801d04c:	9202      	str	r2, [sp, #8]
 801d04e:	9802      	ldr	r0, [sp, #8]
 801d050:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801d054:	fb92 f0f0 	sdiv	r0, r2, r0
 801d058:	b280      	uxth	r0, r0
 801d05a:	900f      	str	r0, [sp, #60]	; 0x3c
 801d05c:	9902      	ldr	r1, [sp, #8]
 801d05e:	9802      	ldr	r0, [sp, #8]
 801d060:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d062:	440c      	add	r4, r1
 801d064:	fb05 2510 	mls	r5, r5, r0, r2
 801d068:	fb15 f503 	smulbb	r5, r5, r3
 801d06c:	3c01      	subs	r4, #1
 801d06e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801d072:	fb94 f4f1 	sdiv	r4, r4, r1
 801d076:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801d07a:	440d      	add	r5, r1
 801d07c:	4419      	add	r1, r3
 801d07e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801d082:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801d086:	441a      	add	r2, r3
 801d088:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d08c:	9306      	str	r3, [sp, #24]
 801d08e:	4bb3      	ldr	r3, [pc, #716]	; (801d35c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801d090:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801d094:	6818      	ldr	r0, [r3, #0]
 801d096:	6803      	ldr	r3, [r0, #0]
 801d098:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d09a:	4798      	blx	r3
 801d09c:	4bb0      	ldr	r3, [pc, #704]	; (801d360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801d09e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801d0a2:	881a      	ldrh	r2, [r3, #0]
 801d0a4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801d0a8:	9316      	str	r3, [sp, #88]	; 0x58
 801d0aa:	fb02 7101 	mla	r1, r2, r1, r7
 801d0ae:	3401      	adds	r4, #1
 801d0b0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d0b4:	b2a4      	uxth	r4, r4
 801d0b6:	4356      	muls	r6, r2
 801d0b8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d0bc:	00a4      	lsls	r4, r4, #2
 801d0be:	920a      	str	r2, [sp, #40]	; 0x28
 801d0c0:	1d22      	adds	r2, r4, #4
 801d0c2:	b2ad      	uxth	r5, r5
 801d0c4:	9213      	str	r2, [sp, #76]	; 0x4c
 801d0c6:	4ba7      	ldr	r3, [pc, #668]	; (801d364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d0c8:	9a06      	ldr	r2, [sp, #24]
 801d0ca:	2d00      	cmp	r5, #0
 801d0cc:	bf0c      	ite	eq
 801d0ce:	4611      	moveq	r1, r2
 801d0d0:	2100      	movne	r1, #0
 801d0d2:	2200      	movs	r2, #0
 801d0d4:	eba3 030b 	sub.w	r3, r3, fp
 801d0d8:	b289      	uxth	r1, r1
 801d0da:	920d      	str	r2, [sp, #52]	; 0x34
 801d0dc:	9317      	str	r3, [sp, #92]	; 0x5c
 801d0de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d0e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d0e2:	fa12 f383 	uxtah	r3, r2, r3
 801d0e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d0e8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d0ec:	3304      	adds	r3, #4
 801d0ee:	9308      	str	r3, [sp, #32]
 801d0f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d0f2:	4543      	cmp	r3, r8
 801d0f4:	f240 8167 	bls.w	801d3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d0f8:	9a02      	ldr	r2, [sp, #8]
 801d0fa:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801d0fe:	fbb5 f3f3 	udiv	r3, r5, r3
 801d102:	1ad3      	subs	r3, r2, r3
 801d104:	b29b      	uxth	r3, r3
 801d106:	9314      	str	r3, [sp, #80]	; 0x50
 801d108:	9b08      	ldr	r3, [sp, #32]
 801d10a:	9808      	ldr	r0, [sp, #32]
 801d10c:	785a      	ldrb	r2, [r3, #1]
 801d10e:	789b      	ldrb	r3, [r3, #2]
 801d110:	7800      	ldrb	r0, [r0, #0]
 801d112:	9010      	str	r0, [sp, #64]	; 0x40
 801d114:	021b      	lsls	r3, r3, #8
 801d116:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d11a:	9a08      	ldr	r2, [sp, #32]
 801d11c:	78d2      	ldrb	r2, [r2, #3]
 801d11e:	4313      	orrs	r3, r2
 801d120:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d122:	3001      	adds	r0, #1
 801d124:	441a      	add	r2, r3
 801d126:	9007      	str	r0, [sp, #28]
 801d128:	1c50      	adds	r0, r2, #1
 801d12a:	9005      	str	r0, [sp, #20]
 801d12c:	7852      	ldrb	r2, [r2, #1]
 801d12e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d130:	0212      	lsls	r2, r2, #8
 801d132:	5cc3      	ldrb	r3, [r0, r3]
 801d134:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d138:	431a      	orrs	r2, r3
 801d13a:	b293      	uxth	r3, r2
 801d13c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d13e:	2300      	movs	r3, #0
 801d140:	9309      	str	r3, [sp, #36]	; 0x24
 801d142:	2301      	movs	r3, #1
 801d144:	9301      	str	r3, [sp, #4]
 801d146:	9304      	str	r3, [sp, #16]
 801d148:	2300      	movs	r3, #0
 801d14a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801d14e:	9303      	str	r3, [sp, #12]
 801d150:	f04f 0e01 	mov.w	lr, #1
 801d154:	2d00      	cmp	r5, #0
 801d156:	d07c      	beq.n	801d252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801d158:	45ae      	cmp	lr, r5
 801d15a:	d26b      	bcs.n	801d234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d15c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d15e:	eba5 050e 	sub.w	r5, r5, lr
 801d162:	4543      	cmp	r3, r8
 801d164:	b2ad      	uxth	r5, r5
 801d166:	460c      	mov	r4, r1
 801d168:	d802      	bhi.n	801d170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801d16a:	e070      	b.n	801d24e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d16c:	2b00      	cmp	r3, #0
 801d16e:	d15c      	bne.n	801d22a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d170:	9b05      	ldr	r3, [sp, #20]
 801d172:	9a04      	ldr	r2, [sp, #16]
 801d174:	785b      	ldrb	r3, [r3, #1]
 801d176:	9904      	ldr	r1, [sp, #16]
 801d178:	f1c2 0207 	rsb	r2, r2, #7
 801d17c:	4093      	lsls	r3, r2
 801d17e:	005b      	lsls	r3, r3, #1
 801d180:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d184:	9b05      	ldr	r3, [sp, #20]
 801d186:	781b      	ldrb	r3, [r3, #0]
 801d188:	410b      	asrs	r3, r1
 801d18a:	3101      	adds	r1, #1
 801d18c:	b2c9      	uxtb	r1, r1
 801d18e:	2908      	cmp	r1, #8
 801d190:	9104      	str	r1, [sp, #16]
 801d192:	9905      	ldr	r1, [sp, #20]
 801d194:	bf0a      	itet	eq
 801d196:	3102      	addeq	r1, #2
 801d198:	3101      	addne	r1, #1
 801d19a:	9105      	streq	r1, [sp, #20]
 801d19c:	b2db      	uxtb	r3, r3
 801d19e:	bf0a      	itet	eq
 801d1a0:	2100      	moveq	r1, #0
 801d1a2:	9105      	strne	r1, [sp, #20]
 801d1a4:	9104      	streq	r1, [sp, #16]
 801d1a6:	4313      	orrs	r3, r2
 801d1a8:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d1aa:	b29a      	uxth	r2, r3
 801d1ac:	4291      	cmp	r1, r2
 801d1ae:	d30a      	bcc.n	801d1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d1b0:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801d1b4:	2301      	movs	r3, #1
 801d1b6:	9907      	ldr	r1, [sp, #28]
 801d1b8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d1bc:	d30f      	bcc.n	801d1de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d1be:	2100      	movs	r1, #0
 801d1c0:	9301      	str	r3, [sp, #4]
 801d1c2:	9103      	str	r1, [sp, #12]
 801d1c4:	e032      	b.n	801d22c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801d1c6:	9b07      	ldr	r3, [sp, #28]
 801d1c8:	429a      	cmp	r2, r3
 801d1ca:	d318      	bcc.n	801d1fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801d1cc:	9b01      	ldr	r3, [sp, #4]
 801d1ce:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801d1d2:	445b      	add	r3, fp
 801d1d4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d1d8:	9b01      	ldr	r3, [sp, #4]
 801d1da:	3301      	adds	r3, #1
 801d1dc:	b29b      	uxth	r3, r3
 801d1de:	9907      	ldr	r1, [sp, #28]
 801d1e0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801d1e4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d1e8:	7108      	strb	r0, [r1, #4]
 801d1ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d1ec:	80c8      	strh	r0, [r1, #6]
 801d1ee:	9801      	ldr	r0, [sp, #4]
 801d1f0:	3001      	adds	r0, #1
 801d1f2:	7148      	strb	r0, [r1, #5]
 801d1f4:	9907      	ldr	r1, [sp, #28]
 801d1f6:	3101      	adds	r1, #1
 801d1f8:	b289      	uxth	r1, r1
 801d1fa:	9107      	str	r1, [sp, #28]
 801d1fc:	e7df      	b.n	801d1be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d1fe:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d202:	4611      	mov	r1, r2
 801d204:	795b      	ldrb	r3, [r3, #5]
 801d206:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801d20a:	4458      	add	r0, fp
 801d20c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801d20e:	4406      	add	r6, r0
 801d210:	2e00      	cmp	r6, #0
 801d212:	dd06      	ble.n	801d222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801d214:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d218:	790e      	ldrb	r6, [r1, #4]
 801d21a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d21e:	88c9      	ldrh	r1, [r1, #6]
 801d220:	e7f4      	b.n	801d20c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801d222:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801d226:	b29b      	uxth	r3, r3
 801d228:	e7c5      	b.n	801d1b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801d22a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d22c:	920b      	str	r2, [sp, #44]	; 0x2c
 801d22e:	4621      	mov	r1, r4
 801d230:	469e      	mov	lr, r3
 801d232:	e78f      	b.n	801d154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801d234:	9a03      	ldr	r2, [sp, #12]
 801d236:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d23a:	442a      	add	r2, r5
 801d23c:	ebae 0305 	sub.w	r3, lr, r5
 801d240:	b292      	uxth	r2, r2
 801d242:	b29b      	uxth	r3, r3
 801d244:	9203      	str	r2, [sp, #12]
 801d246:	2500      	movs	r5, #0
 801d248:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d24a:	4542      	cmp	r2, r8
 801d24c:	d88e      	bhi.n	801d16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801d24e:	4621      	mov	r1, r4
 801d250:	e74e      	b.n	801d0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801d252:	458e      	cmp	lr, r1
 801d254:	bf29      	itett	cs
 801d256:	ebae 0301 	subcs.w	r3, lr, r1
 801d25a:	eba1 040e 	subcc.w	r4, r1, lr
 801d25e:	b29b      	uxthcs	r3, r3
 801d260:	910c      	strcs	r1, [sp, #48]	; 0x30
 801d262:	bf2f      	iteee	cs
 801d264:	462c      	movcs	r4, r5
 801d266:	b2a4      	uxthcc	r4, r4
 801d268:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801d26c:	462b      	movcc	r3, r5
 801d26e:	f04f 0900 	mov.w	r9, #0
 801d272:	9a03      	ldr	r2, [sp, #12]
 801d274:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d276:	444a      	add	r2, r9
 801d278:	4548      	cmp	r0, r9
 801d27a:	b292      	uxth	r2, r2
 801d27c:	d074      	beq.n	801d368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801d27e:	445a      	add	r2, fp
 801d280:	2004      	movs	r0, #4
 801d282:	4605      	mov	r5, r0
 801d284:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801d288:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d28a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d28e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d290:	5880      	ldr	r0, [r0, r2]
 801d292:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d296:	d014      	beq.n	801d2c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d298:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d29c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d2a0:	d112      	bne.n	801d2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d2a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d2a4:	2aff      	cmp	r2, #255	; 0xff
 801d2a6:	d10f      	bne.n	801d2c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801d2a8:	0942      	lsrs	r2, r0, #5
 801d2aa:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801d2ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d2b2:	f025 0507 	bic.w	r5, r5, #7
 801d2b6:	4315      	orrs	r5, r2
 801d2b8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d2bc:	4305      	orrs	r5, r0
 801d2be:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d2c2:	f109 0901 	add.w	r9, r9, #1
 801d2c6:	e7d4      	b.n	801d272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d2c8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d2cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d2d0:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801d2d4:	9215      	str	r2, [sp, #84]	; 0x54
 801d2d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d2d8:	fb02 fa0a 	mul.w	sl, r2, sl
 801d2dc:	f10a 0201 	add.w	r2, sl, #1
 801d2e0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d2e4:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d2e8:	1212      	asrs	r2, r2, #8
 801d2ea:	fa1f fa82 	uxth.w	sl, r2
 801d2ee:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d2f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d2f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d2fa:	43d2      	mvns	r2, r2
 801d2fc:	b2d2      	uxtb	r2, r2
 801d2fe:	fb16 f60a 	smulbb	r6, r6, sl
 801d302:	fa5f fc8c 	uxtb.w	ip, ip
 801d306:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d30a:	b2c0      	uxtb	r0, r0
 801d30c:	fb07 6702 	mla	r7, r7, r2, r6
 801d310:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d314:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d316:	fb10 f00a 	smulbb	r0, r0, sl
 801d31a:	fb0c 0002 	mla	r0, ip, r2, r0
 801d31e:	b2ed      	uxtb	r5, r5
 801d320:	b2bf      	uxth	r7, r7
 801d322:	fb15 f50a 	smulbb	r5, r5, sl
 801d326:	b280      	uxth	r0, r0
 801d328:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d32c:	fb06 5602 	mla	r6, r6, r2, r5
 801d330:	1c7a      	adds	r2, r7, #1
 801d332:	1c45      	adds	r5, r0, #1
 801d334:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d338:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d33c:	b2b6      	uxth	r6, r6
 801d33e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d342:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d346:	432f      	orrs	r7, r5
 801d348:	1c75      	adds	r5, r6, #1
 801d34a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d34e:	096d      	lsrs	r5, r5, #5
 801d350:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d354:	432f      	orrs	r7, r5
 801d356:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d35a:	e7b2      	b.n	801d2c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d35c:	20012fc4 	.word	0x20012fc4
 801d360:	20012fbe 	.word	0x20012fbe
 801d364:	fffff7fb 	.word	0xfffff7fb
 801d368:	9203      	str	r2, [sp, #12]
 801d36a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d36c:	458e      	cmp	lr, r1
 801d36e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d372:	f4ff af68 	bcc.w	801d246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d376:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d378:	9906      	ldr	r1, [sp, #24]
 801d37a:	8812      	ldrh	r2, [r2, #0]
 801d37c:	1a52      	subs	r2, r2, r1
 801d37e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d382:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d384:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d386:	3201      	adds	r2, #1
 801d388:	428a      	cmp	r2, r1
 801d38a:	9209      	str	r2, [sp, #36]	; 0x24
 801d38c:	d111      	bne.n	801d3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d38e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d392:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d396:	9b06      	ldr	r3, [sp, #24]
 801d398:	eba5 0509 	sub.w	r5, r5, r9
 801d39c:	b2ad      	uxth	r5, r5
 801d39e:	2d00      	cmp	r5, #0
 801d3a0:	bf08      	it	eq
 801d3a2:	4619      	moveq	r1, r3
 801d3a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d3a6:	bf18      	it	ne
 801d3a8:	2100      	movne	r1, #0
 801d3aa:	3301      	adds	r3, #1
 801d3ac:	930d      	str	r3, [sp, #52]	; 0x34
 801d3ae:	b289      	uxth	r1, r1
 801d3b0:	e695      	b.n	801d0de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d3b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d3b6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d3ba:	1b2d      	subs	r5, r5, r4
 801d3bc:	b2ad      	uxth	r5, r5
 801d3be:	2d00      	cmp	r5, #0
 801d3c0:	bf18      	it	ne
 801d3c2:	2400      	movne	r4, #0
 801d3c4:	e740      	b.n	801d248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d3c6:	4b04      	ldr	r3, [pc, #16]	; (801d3d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d3c8:	6818      	ldr	r0, [r3, #0]
 801d3ca:	6803      	ldr	r3, [r0, #0]
 801d3cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d3ce:	4798      	blx	r3
 801d3d0:	b01d      	add	sp, #116	; 0x74
 801d3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3d6:	bf00      	nop
 801d3d8:	20012fc4 	.word	0x20012fc4

0801d3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3e0:	b09f      	sub	sp, #124	; 0x7c
 801d3e2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d3e6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d3ea:	920a      	str	r2, [sp, #40]	; 0x28
 801d3ec:	461d      	mov	r5, r3
 801d3ee:	4604      	mov	r4, r0
 801d3f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d3f2:	2a00      	cmp	r2, #0
 801d3f4:	f000 81fa 	beq.w	801d7ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d3f8:	6828      	ldr	r0, [r5, #0]
 801d3fa:	6869      	ldr	r1, [r5, #4]
 801d3fc:	aa1a      	add	r2, sp, #104	; 0x68
 801d3fe:	c203      	stmia	r2!, {r0, r1}
 801d400:	6818      	ldr	r0, [r3, #0]
 801d402:	6859      	ldr	r1, [r3, #4]
 801d404:	aa1c      	add	r2, sp, #112	; 0x70
 801d406:	c203      	stmia	r2!, {r0, r1}
 801d408:	a81a      	add	r0, sp, #104	; 0x68
 801d40a:	f7f8 fb51 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d40e:	4629      	mov	r1, r5
 801d410:	a81c      	add	r0, sp, #112	; 0x70
 801d412:	f7f8 fb91 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d416:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d41a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d41e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d422:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d426:	bfd7      	itett	le
 801d428:	b29a      	uxthle	r2, r3
 801d42a:	2201      	movgt	r2, #1
 801d42c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d430:	fb91 f2f2 	sdivle	r2, r1, r2
 801d434:	9201      	str	r2, [sp, #4]
 801d436:	9801      	ldr	r0, [sp, #4]
 801d438:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d43c:	fb92 f0f0 	sdiv	r0, r2, r0
 801d440:	b280      	uxth	r0, r0
 801d442:	9010      	str	r0, [sp, #64]	; 0x40
 801d444:	9901      	ldr	r1, [sp, #4]
 801d446:	9801      	ldr	r0, [sp, #4]
 801d448:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d44a:	440e      	add	r6, r1
 801d44c:	fb05 2510 	mls	r5, r5, r0, r2
 801d450:	fb15 f503 	smulbb	r5, r5, r3
 801d454:	3e01      	subs	r6, #1
 801d456:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d45a:	fb96 f6f1 	sdiv	r6, r6, r1
 801d45e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d462:	440d      	add	r5, r1
 801d464:	4419      	add	r1, r3
 801d466:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d46a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d46e:	441a      	add	r2, r3
 801d470:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d474:	9304      	str	r3, [sp, #16]
 801d476:	4b96      	ldr	r3, [pc, #600]	; (801d6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d478:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d47c:	6818      	ldr	r0, [r3, #0]
 801d47e:	6803      	ldr	r3, [r0, #0]
 801d480:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d482:	4798      	blx	r3
 801d484:	4b93      	ldr	r3, [pc, #588]	; (801d6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d486:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d48a:	881a      	ldrh	r2, [r3, #0]
 801d48c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d490:	9318      	str	r3, [sp, #96]	; 0x60
 801d492:	fb02 c101 	mla	r1, r2, r1, ip
 801d496:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d49a:	4357      	muls	r7, r2
 801d49c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d4a0:	3601      	adds	r6, #1
 801d4a2:	920b      	str	r2, [sp, #44]	; 0x2c
 801d4a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d4a6:	4b8c      	ldr	r3, [pc, #560]	; (801d6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d4a8:	b2b6      	uxth	r6, r6
 801d4aa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d4ae:	1d32      	adds	r2, r6, #4
 801d4b0:	9206      	str	r2, [sp, #24]
 801d4b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d4b4:	43d2      	mvns	r2, r2
 801d4b6:	b2d2      	uxtb	r2, r2
 801d4b8:	b2ad      	uxth	r5, r5
 801d4ba:	9215      	str	r2, [sp, #84]	; 0x54
 801d4bc:	9a04      	ldr	r2, [sp, #16]
 801d4be:	2d00      	cmp	r5, #0
 801d4c0:	bf0c      	ite	eq
 801d4c2:	4611      	moveq	r1, r2
 801d4c4:	2100      	movne	r1, #0
 801d4c6:	2200      	movs	r2, #0
 801d4c8:	1b1b      	subs	r3, r3, r4
 801d4ca:	b289      	uxth	r1, r1
 801d4cc:	920d      	str	r2, [sp, #52]	; 0x34
 801d4ce:	9319      	str	r3, [sp, #100]	; 0x64
 801d4d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d4d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d4d4:	fa12 f383 	uxtah	r3, r2, r3
 801d4d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d4da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d4de:	3304      	adds	r3, #4
 801d4e0:	9307      	str	r3, [sp, #28]
 801d4e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4e4:	455b      	cmp	r3, fp
 801d4e6:	f240 817c 	bls.w	801d7e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d4ea:	9a01      	ldr	r2, [sp, #4]
 801d4ec:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d4f0:	fbb5 f3f3 	udiv	r3, r5, r3
 801d4f4:	1ad3      	subs	r3, r2, r3
 801d4f6:	b29b      	uxth	r3, r3
 801d4f8:	9316      	str	r3, [sp, #88]	; 0x58
 801d4fa:	9b07      	ldr	r3, [sp, #28]
 801d4fc:	9807      	ldr	r0, [sp, #28]
 801d4fe:	785a      	ldrb	r2, [r3, #1]
 801d500:	789b      	ldrb	r3, [r3, #2]
 801d502:	7800      	ldrb	r0, [r0, #0]
 801d504:	9011      	str	r0, [sp, #68]	; 0x44
 801d506:	021b      	lsls	r3, r3, #8
 801d508:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d50c:	9a07      	ldr	r2, [sp, #28]
 801d50e:	78d2      	ldrb	r2, [r2, #3]
 801d510:	4313      	orrs	r3, r2
 801d512:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d514:	3001      	adds	r0, #1
 801d516:	441a      	add	r2, r3
 801d518:	9005      	str	r0, [sp, #20]
 801d51a:	1c50      	adds	r0, r2, #1
 801d51c:	9003      	str	r0, [sp, #12]
 801d51e:	7852      	ldrb	r2, [r2, #1]
 801d520:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d522:	0212      	lsls	r2, r2, #8
 801d524:	5cc3      	ldrb	r3, [r0, r3]
 801d526:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d52a:	431a      	orrs	r2, r3
 801d52c:	b293      	uxth	r3, r2
 801d52e:	930c      	str	r3, [sp, #48]	; 0x30
 801d530:	2300      	movs	r3, #0
 801d532:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d536:	9308      	str	r3, [sp, #32]
 801d538:	461a      	mov	r2, r3
 801d53a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d53e:	930e      	str	r3, [sp, #56]	; 0x38
 801d540:	f04f 0801 	mov.w	r8, #1
 801d544:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d548:	f8cd 8008 	str.w	r8, [sp, #8]
 801d54c:	46c4      	mov	ip, r8
 801d54e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d550:	2d00      	cmp	r5, #0
 801d552:	d07c      	beq.n	801d64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d554:	45ac      	cmp	ip, r5
 801d556:	d26c      	bcs.n	801d632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d558:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d55a:	eba5 050c 	sub.w	r5, r5, ip
 801d55e:	455b      	cmp	r3, fp
 801d560:	b2ad      	uxth	r5, r5
 801d562:	4608      	mov	r0, r1
 801d564:	d802      	bhi.n	801d56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d566:	e070      	b.n	801d64a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d568:	2b00      	cmp	r3, #0
 801d56a:	d15c      	bne.n	801d626 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d56c:	9b03      	ldr	r3, [sp, #12]
 801d56e:	9a02      	ldr	r2, [sp, #8]
 801d570:	785b      	ldrb	r3, [r3, #1]
 801d572:	9902      	ldr	r1, [sp, #8]
 801d574:	f1c2 0207 	rsb	r2, r2, #7
 801d578:	4093      	lsls	r3, r2
 801d57a:	005b      	lsls	r3, r3, #1
 801d57c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d580:	9b03      	ldr	r3, [sp, #12]
 801d582:	781b      	ldrb	r3, [r3, #0]
 801d584:	410b      	asrs	r3, r1
 801d586:	3101      	adds	r1, #1
 801d588:	b2c9      	uxtb	r1, r1
 801d58a:	2908      	cmp	r1, #8
 801d58c:	9102      	str	r1, [sp, #8]
 801d58e:	9903      	ldr	r1, [sp, #12]
 801d590:	bf0a      	itet	eq
 801d592:	3102      	addeq	r1, #2
 801d594:	3101      	addne	r1, #1
 801d596:	9103      	streq	r1, [sp, #12]
 801d598:	b2db      	uxtb	r3, r3
 801d59a:	bf0a      	itet	eq
 801d59c:	2100      	moveq	r1, #0
 801d59e:	9103      	strne	r1, [sp, #12]
 801d5a0:	9102      	streq	r1, [sp, #8]
 801d5a2:	4313      	orrs	r3, r2
 801d5a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d5a6:	b29a      	uxth	r2, r3
 801d5a8:	4291      	cmp	r1, r2
 801d5aa:	d30a      	bcc.n	801d5c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d5ac:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d5b0:	2301      	movs	r3, #1
 801d5b2:	9905      	ldr	r1, [sp, #20]
 801d5b4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d5b8:	d30f      	bcc.n	801d5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d5ba:	2100      	movs	r1, #0
 801d5bc:	4698      	mov	r8, r3
 801d5be:	9100      	str	r1, [sp, #0]
 801d5c0:	e032      	b.n	801d628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d5c2:	9b05      	ldr	r3, [sp, #20]
 801d5c4:	429a      	cmp	r2, r3
 801d5c6:	d318      	bcc.n	801d5fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d5c8:	eb04 0308 	add.w	r3, r4, r8
 801d5cc:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d5d0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d5d4:	f108 0301 	add.w	r3, r8, #1
 801d5d8:	b29b      	uxth	r3, r3
 801d5da:	9905      	ldr	r1, [sp, #20]
 801d5dc:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d5e0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d5e4:	710e      	strb	r6, [r1, #4]
 801d5e6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d5e8:	80ce      	strh	r6, [r1, #6]
 801d5ea:	f108 0601 	add.w	r6, r8, #1
 801d5ee:	714e      	strb	r6, [r1, #5]
 801d5f0:	9905      	ldr	r1, [sp, #20]
 801d5f2:	3101      	adds	r1, #1
 801d5f4:	b289      	uxth	r1, r1
 801d5f6:	9105      	str	r1, [sp, #20]
 801d5f8:	e7df      	b.n	801d5ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d5fa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d5fe:	4611      	mov	r1, r2
 801d600:	795b      	ldrb	r3, [r3, #5]
 801d602:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d606:	4426      	add	r6, r4
 801d608:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d60a:	4437      	add	r7, r6
 801d60c:	2f00      	cmp	r7, #0
 801d60e:	dd06      	ble.n	801d61e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d610:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d614:	790f      	ldrb	r7, [r1, #4]
 801d616:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d61a:	88c9      	ldrh	r1, [r1, #6]
 801d61c:	e7f4      	b.n	801d608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d61e:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d622:	b29b      	uxth	r3, r3
 801d624:	e7c5      	b.n	801d5b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d626:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d628:	920c      	str	r2, [sp, #48]	; 0x30
 801d62a:	4601      	mov	r1, r0
 801d62c:	9a00      	ldr	r2, [sp, #0]
 801d62e:	469c      	mov	ip, r3
 801d630:	e78e      	b.n	801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d632:	1957      	adds	r7, r2, r5
 801d634:	ebac 0305 	sub.w	r3, ip, r5
 801d638:	b2ba      	uxth	r2, r7
 801d63a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d63e:	9200      	str	r2, [sp, #0]
 801d640:	b29b      	uxth	r3, r3
 801d642:	2500      	movs	r5, #0
 801d644:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d646:	455a      	cmp	r2, fp
 801d648:	d88e      	bhi.n	801d568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d64a:	4601      	mov	r1, r0
 801d64c:	e749      	b.n	801d4e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d64e:	458c      	cmp	ip, r1
 801d650:	bf2c      	ite	cs
 801d652:	4628      	movcs	r0, r5
 801d654:	462b      	movcc	r3, r5
 801d656:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d658:	bf27      	ittee	cs
 801d65a:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d65c:	ebac 0301 	subcs.w	r3, ip, r1
 801d660:	eba1 000c 	subcc.w	r0, r1, ip
 801d664:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d668:	bf2c      	ite	cs
 801d66a:	b29b      	uxthcs	r3, r3
 801d66c:	b280      	uxthcc	r0, r0
 801d66e:	2dff      	cmp	r5, #255	; 0xff
 801d670:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d672:	eb02 0705 	add.w	r7, r2, r5
 801d676:	b2bd      	uxth	r5, r7
 801d678:	9500      	str	r5, [sp, #0]
 801d67a:	d12f      	bne.n	801d6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d67c:	465e      	mov	r6, fp
 801d67e:	9d00      	ldr	r5, [sp, #0]
 801d680:	42aa      	cmp	r2, r5
 801d682:	f040 8084 	bne.w	801d78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d688:	458c      	cmp	ip, r1
 801d68a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d68e:	d3d8      	bcc.n	801d642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d690:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d692:	9904      	ldr	r1, [sp, #16]
 801d694:	8812      	ldrh	r2, [r2, #0]
 801d696:	1a52      	subs	r2, r2, r1
 801d698:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d69c:	9a08      	ldr	r2, [sp, #32]
 801d69e:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d6a0:	3201      	adds	r2, #1
 801d6a2:	428a      	cmp	r2, r1
 801d6a4:	9208      	str	r2, [sp, #32]
 801d6a6:	f040 8092 	bne.w	801d7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d6aa:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d6ae:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d6b2:	9b04      	ldr	r3, [sp, #16]
 801d6b4:	eba5 050c 	sub.w	r5, r5, ip
 801d6b8:	b2ad      	uxth	r5, r5
 801d6ba:	2d00      	cmp	r5, #0
 801d6bc:	bf08      	it	eq
 801d6be:	4619      	moveq	r1, r3
 801d6c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d6c2:	bf18      	it	ne
 801d6c4:	2100      	movne	r1, #0
 801d6c6:	3301      	adds	r3, #1
 801d6c8:	930d      	str	r3, [sp, #52]	; 0x34
 801d6ca:	b289      	uxth	r1, r1
 801d6cc:	e700      	b.n	801d4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d6ce:	bf00      	nop
 801d6d0:	20012fc4 	.word	0x20012fc4
 801d6d4:	20012fbe 	.word	0x20012fbe
 801d6d8:	fffff7fb 	.word	0xfffff7fb
 801d6dc:	46d9      	mov	r9, fp
 801d6de:	9d00      	ldr	r5, [sp, #0]
 801d6e0:	42aa      	cmp	r2, r5
 801d6e2:	d0d0      	beq.n	801d686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d6e4:	1c55      	adds	r5, r2, #1
 801d6e6:	4422      	add	r2, r4
 801d6e8:	9517      	str	r5, [sp, #92]	; 0x5c
 801d6ea:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d6ee:	9a06      	ldr	r2, [sp, #24]
 801d6f0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d6f4:	4472      	add	r2, lr
 801d6f6:	9212      	str	r2, [sp, #72]	; 0x48
 801d6f8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d6fa:	f8b9 2000 	ldrh.w	r2, [r9]
 801d6fe:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d702:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d704:	1216      	asrs	r6, r2, #8
 801d706:	fb1a fa07 	smulbb	sl, sl, r7
 801d70a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d70e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d710:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d714:	fb06 a607 	mla	r6, r6, r7, sl
 801d718:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d71a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d71e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d720:	10d5      	asrs	r5, r2, #3
 801d722:	fb1a fa07 	smulbb	sl, sl, r7
 801d726:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d72a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d72c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d730:	fb05 a507 	mla	r5, r5, r7, sl
 801d734:	9f06      	ldr	r7, [sp, #24]
 801d736:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d73a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d73c:	00d2      	lsls	r2, r2, #3
 801d73e:	fb1e fe07 	smulbb	lr, lr, r7
 801d742:	b2d2      	uxtb	r2, r2
 801d744:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d746:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d74a:	b2b6      	uxth	r6, r6
 801d74c:	fb02 e207 	mla	r2, r2, r7, lr
 801d750:	b292      	uxth	r2, r2
 801d752:	b2ad      	uxth	r5, r5
 801d754:	f106 0a01 	add.w	sl, r6, #1
 801d758:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d75c:	f102 0e01 	add.w	lr, r2, #1
 801d760:	f105 0a01 	add.w	sl, r5, #1
 801d764:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d768:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d76c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d770:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d774:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d778:	ea4e 0606 	orr.w	r6, lr, r6
 801d77c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d780:	ea46 060a 	orr.w	r6, r6, sl
 801d784:	f829 6b02 	strh.w	r6, [r9], #2
 801d788:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d78c:	e7a7      	b.n	801d6de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d78e:	f102 0e01 	add.w	lr, r2, #1
 801d792:	4422      	add	r2, r4
 801d794:	9f06      	ldr	r7, [sp, #24]
 801d796:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d79a:	9a06      	ldr	r2, [sp, #24]
 801d79c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d7a0:	eb02 0a05 	add.w	sl, r2, r5
 801d7a4:	4a13      	ldr	r2, [pc, #76]	; (801d7f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d7a6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d7aa:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d7ae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d7b2:	00d2      	lsls	r2, r2, #3
 801d7b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d7b8:	ea49 0202 	orr.w	r2, r9, r2
 801d7bc:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d7c0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d7c4:	f826 2b02 	strh.w	r2, [r6], #2
 801d7c8:	fa1f f28e 	uxth.w	r2, lr
 801d7cc:	e757      	b.n	801d67e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d7ce:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d7d2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d7d6:	1a2d      	subs	r5, r5, r0
 801d7d8:	b2ad      	uxth	r5, r5
 801d7da:	2d00      	cmp	r5, #0
 801d7dc:	bf18      	it	ne
 801d7de:	2000      	movne	r0, #0
 801d7e0:	e730      	b.n	801d644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d7e2:	4b05      	ldr	r3, [pc, #20]	; (801d7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d7e4:	6818      	ldr	r0, [r3, #0]
 801d7e6:	6803      	ldr	r3, [r0, #0]
 801d7e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7ea:	4798      	blx	r3
 801d7ec:	b01f      	add	sp, #124	; 0x7c
 801d7ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7f2:	bf00      	nop
 801d7f4:	fffff800 	.word	0xfffff800
 801d7f8:	20012fc4 	.word	0x20012fc4

0801d7fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d7fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d800:	b091      	sub	sp, #68	; 0x44
 801d802:	469b      	mov	fp, r3
 801d804:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d808:	4616      	mov	r6, r2
 801d80a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d80e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d812:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d816:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d81a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d81e:	4604      	mov	r4, r0
 801d820:	460d      	mov	r5, r1
 801d822:	4640      	mov	r0, r8
 801d824:	4659      	mov	r1, fp
 801d826:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d82a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d82e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d832:	f7f3 f9df 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801d836:	4631      	mov	r1, r6
 801d838:	4640      	mov	r0, r8
 801d83a:	f7f3 f9db 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801d83e:	4b74      	ldr	r3, [pc, #464]	; (801da10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d840:	8818      	ldrh	r0, [r3, #0]
 801d842:	4b74      	ldr	r3, [pc, #464]	; (801da14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d844:	8819      	ldrh	r1, [r3, #0]
 801d846:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d84a:	2b00      	cmp	r3, #0
 801d84c:	b202      	sxth	r2, r0
 801d84e:	b20e      	sxth	r6, r1
 801d850:	da07      	bge.n	801d862 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d852:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d856:	4463      	add	r3, ip
 801d858:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d85c:	2300      	movs	r3, #0
 801d85e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d862:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d866:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d86a:	1ad2      	subs	r2, r2, r3
 801d86c:	4594      	cmp	ip, r2
 801d86e:	bfc4      	itt	gt
 801d870:	1ac2      	subgt	r2, r0, r3
 801d872:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d876:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d87a:	2a00      	cmp	r2, #0
 801d87c:	da07      	bge.n	801d88e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d87e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d882:	4462      	add	r2, ip
 801d884:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d888:	2200      	movs	r2, #0
 801d88a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d88e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d892:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d896:	eba6 060a 	sub.w	r6, r6, sl
 801d89a:	42b2      	cmp	r2, r6
 801d89c:	bfc4      	itt	gt
 801d89e:	eba1 020a 	subgt.w	r2, r1, sl
 801d8a2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d8a6:	4a5c      	ldr	r2, [pc, #368]	; (801da18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d8a8:	7812      	ldrb	r2, [r2, #0]
 801d8aa:	b9a2      	cbnz	r2, 801d8d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d8ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d8b0:	4286      	cmp	r6, r0
 801d8b2:	4640      	mov	r0, r8
 801d8b4:	9303      	str	r3, [sp, #12]
 801d8b6:	bf14      	ite	ne
 801d8b8:	2600      	movne	r6, #0
 801d8ba:	2601      	moveq	r6, #1
 801d8bc:	f7f3 f9dd 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801d8c0:	9b03      	ldr	r3, [sp, #12]
 801d8c2:	b160      	cbz	r0, 801d8de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d8c4:	2300      	movs	r3, #0
 801d8c6:	8023      	strh	r3, [r4, #0]
 801d8c8:	8063      	strh	r3, [r4, #2]
 801d8ca:	80a3      	strh	r3, [r4, #4]
 801d8cc:	4620      	mov	r0, r4
 801d8ce:	80e3      	strh	r3, [r4, #6]
 801d8d0:	b011      	add	sp, #68	; 0x44
 801d8d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8d6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d8da:	428e      	cmp	r6, r1
 801d8dc:	e7e9      	b.n	801d8b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d8de:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d8e2:	9205      	str	r2, [sp, #20]
 801d8e4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d8e8:	9206      	str	r2, [sp, #24]
 801d8ea:	f8bb 2000 	ldrh.w	r2, [fp]
 801d8ee:	900e      	str	r0, [sp, #56]	; 0x38
 801d8f0:	1a9b      	subs	r3, r3, r2
 801d8f2:	b21b      	sxth	r3, r3
 801d8f4:	9303      	str	r3, [sp, #12]
 801d8f6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d8fa:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d8fe:	ebaa 0a03 	sub.w	sl, sl, r3
 801d902:	fa0f f38a 	sxth.w	r3, sl
 801d906:	9304      	str	r3, [sp, #16]
 801d908:	9b03      	ldr	r3, [sp, #12]
 801d90a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d90e:	9b04      	ldr	r3, [sp, #16]
 801d910:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d914:	9b05      	ldr	r3, [sp, #20]
 801d916:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d91a:	a90e      	add	r1, sp, #56	; 0x38
 801d91c:	9b06      	ldr	r3, [sp, #24]
 801d91e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d922:	a80c      	add	r0, sp, #48	; 0x30
 801d924:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d928:	f7f8 f906 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d92c:	4640      	mov	r0, r8
 801d92e:	f7f8 f8bf 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d932:	a80e      	add	r0, sp, #56	; 0x38
 801d934:	f7f8 f8bc 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d938:	4b38      	ldr	r3, [pc, #224]	; (801da1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d93a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d93e:	881b      	ldrh	r3, [r3, #0]
 801d940:	9307      	str	r3, [sp, #28]
 801d942:	682b      	ldr	r3, [r5, #0]
 801d944:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801da20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d948:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d94a:	4628      	mov	r0, r5
 801d94c:	4798      	blx	r3
 801d94e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d952:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d956:	4681      	mov	r9, r0
 801d958:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d95c:	f8db 0000 	ldr.w	r0, [fp]
 801d960:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d962:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d966:	6803      	ldr	r3, [r0, #0]
 801d968:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d96a:	4798      	blx	r3
 801d96c:	4607      	mov	r7, r0
 801d96e:	f8db 0000 	ldr.w	r0, [fp]
 801d972:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d976:	6803      	ldr	r3, [r0, #0]
 801d978:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d97c:	9109      	str	r1, [sp, #36]	; 0x24
 801d97e:	9208      	str	r2, [sp, #32]
 801d980:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d982:	4798      	blx	r3
 801d984:	f010 0f01 	tst.w	r0, #1
 801d988:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d98c:	d012      	beq.n	801d9b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d98e:	f8db 0000 	ldr.w	r0, [fp]
 801d992:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d996:	6803      	ldr	r3, [r0, #0]
 801d998:	9200      	str	r2, [sp, #0]
 801d99a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d99c:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d9a0:	462b      	mov	r3, r5
 801d9a2:	47b0      	blx	r6
 801d9a4:	9b03      	ldr	r3, [sp, #12]
 801d9a6:	8023      	strh	r3, [r4, #0]
 801d9a8:	9b04      	ldr	r3, [sp, #16]
 801d9aa:	8063      	strh	r3, [r4, #2]
 801d9ac:	9b05      	ldr	r3, [sp, #20]
 801d9ae:	80a3      	strh	r3, [r4, #4]
 801d9b0:	9b06      	ldr	r3, [sp, #24]
 801d9b2:	e78b      	b.n	801d8cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d9b4:	fb09 f202 	mul.w	r2, r9, r2
 801d9b8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d9bc:	440f      	add	r7, r1
 801d9be:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d9c2:	b166      	cbz	r6, 801d9de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d9c4:	9a07      	ldr	r2, [sp, #28]
 801d9c6:	4592      	cmp	sl, r2
 801d9c8:	d109      	bne.n	801d9de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d9ca:	f8db 0000 	ldr.w	r0, [fp]
 801d9ce:	6802      	ldr	r2, [r0, #0]
 801d9d0:	fb09 f303 	mul.w	r3, r9, r3
 801d9d4:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d9d6:	4629      	mov	r1, r5
 801d9d8:	463a      	mov	r2, r7
 801d9da:	47b0      	blx	r6
 801d9dc:	e7e2      	b.n	801d9a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d9de:	fb0a f303 	mul.w	r3, sl, r3
 801d9e2:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801da20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d9e6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d9ea:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d9ee:	4545      	cmp	r5, r8
 801d9f0:	d2d8      	bcs.n	801d9a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d9f2:	f8db 0000 	ldr.w	r0, [fp]
 801d9f6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d9fa:	6802      	ldr	r2, [r0, #0]
 801d9fc:	4629      	mov	r1, r5
 801d9fe:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801da02:	005b      	lsls	r3, r3, #1
 801da04:	463a      	mov	r2, r7
 801da06:	47d0      	blx	sl
 801da08:	444f      	add	r7, r9
 801da0a:	4435      	add	r5, r6
 801da0c:	e7ef      	b.n	801d9ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801da0e:	bf00      	nop
 801da10:	20012fb8 	.word	0x20012fb8
 801da14:	20012fba 	.word	0x20012fba
 801da18:	20012fbc 	.word	0x20012fbc
 801da1c:	20012fbe 	.word	0x20012fbe
 801da20:	20012fc4 	.word	0x20012fc4

0801da24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801da24:	b5f0      	push	{r4, r5, r6, r7, lr}
 801da26:	4606      	mov	r6, r0
 801da28:	b087      	sub	sp, #28
 801da2a:	460c      	mov	r4, r1
 801da2c:	4617      	mov	r7, r2
 801da2e:	461d      	mov	r5, r3
 801da30:	b333      	cbz	r3, 801da80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801da32:	4608      	mov	r0, r1
 801da34:	f7f3 f921 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801da38:	bb10      	cbnz	r0, 801da80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801da3a:	6820      	ldr	r0, [r4, #0]
 801da3c:	6861      	ldr	r1, [r4, #4]
 801da3e:	4c1c      	ldr	r4, [pc, #112]	; (801dab0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801da40:	ab04      	add	r3, sp, #16
 801da42:	c303      	stmia	r3!, {r0, r1}
 801da44:	a804      	add	r0, sp, #16
 801da46:	f7f8 f833 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da4a:	6820      	ldr	r0, [r4, #0]
 801da4c:	6803      	ldr	r3, [r0, #0]
 801da4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da50:	4798      	blx	r3
 801da52:	2dff      	cmp	r5, #255	; 0xff
 801da54:	d016      	beq.n	801da84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801da56:	f010 0f08 	tst.w	r0, #8
 801da5a:	6820      	ldr	r0, [r4, #0]
 801da5c:	d015      	beq.n	801da8a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801da5e:	2400      	movs	r4, #0
 801da60:	6801      	ldr	r1, [r0, #0]
 801da62:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801da66:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801da6a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801da6e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801da72:	9401      	str	r4, [sp, #4]
 801da74:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801da78:	9400      	str	r4, [sp, #0]
 801da7a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801da7c:	4639      	mov	r1, r7
 801da7e:	47a0      	blx	r4
 801da80:	b007      	add	sp, #28
 801da82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da84:	f010 0f02 	tst.w	r0, #2
 801da88:	e7e7      	b.n	801da5a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801da8a:	6803      	ldr	r3, [r0, #0]
 801da8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da8e:	4798      	blx	r3
 801da90:	4b08      	ldr	r3, [pc, #32]	; (801dab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801da92:	881a      	ldrh	r2, [r3, #0]
 801da94:	6833      	ldr	r3, [r6, #0]
 801da96:	e9cd 7500 	strd	r7, r5, [sp]
 801da9a:	4601      	mov	r1, r0
 801da9c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801da9e:	4630      	mov	r0, r6
 801daa0:	ab04      	add	r3, sp, #16
 801daa2:	47a8      	blx	r5
 801daa4:	6820      	ldr	r0, [r4, #0]
 801daa6:	6803      	ldr	r3, [r0, #0]
 801daa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801daaa:	4798      	blx	r3
 801daac:	e7e8      	b.n	801da80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801daae:	bf00      	nop
 801dab0:	20012fc4 	.word	0x20012fc4
 801dab4:	20012fbe 	.word	0x20012fbe

0801dab8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801dab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dabc:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801dac0:	9e08      	ldr	r6, [sp, #32]
 801dac2:	4688      	mov	r8, r1
 801dac4:	4614      	mov	r4, r2
 801dac6:	461d      	mov	r5, r3
 801dac8:	2f00      	cmp	r7, #0
 801daca:	f000 80a9 	beq.w	801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dace:	4618      	mov	r0, r3
 801dad0:	f7f3 f8d3 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801dad4:	2800      	cmp	r0, #0
 801dad6:	f040 80a3 	bne.w	801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dada:	f9b5 1000 	ldrsh.w	r1, [r5]
 801dade:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801dae2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801dae6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801daea:	fb04 1303 	mla	r3, r4, r3, r1
 801daee:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801daf2:	4365      	muls	r5, r4
 801daf4:	2fff      	cmp	r7, #255	; 0xff
 801daf6:	eba4 0200 	sub.w	r2, r4, r0
 801dafa:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801dafe:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801db02:	d04a      	beq.n	801db9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801db04:	b2bc      	uxth	r4, r7
 801db06:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801db0a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801db0e:	fa5f f788 	uxtb.w	r7, r8
 801db12:	b2f3      	uxtb	r3, r6
 801db14:	0040      	lsls	r0, r0, #1
 801db16:	fb0e fe04 	mul.w	lr, lr, r4
 801db1a:	4367      	muls	r7, r4
 801db1c:	4363      	muls	r3, r4
 801db1e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801db22:	fa1f fc8c 	uxth.w	ip, ip
 801db26:	42a9      	cmp	r1, r5
 801db28:	d27a      	bcs.n	801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801db2a:	eb01 0900 	add.w	r9, r1, r0
 801db2e:	4549      	cmp	r1, r9
 801db30:	d231      	bcs.n	801db96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801db32:	880a      	ldrh	r2, [r1, #0]
 801db34:	1214      	asrs	r4, r2, #8
 801db36:	10d6      	asrs	r6, r2, #3
 801db38:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801db3c:	00d2      	lsls	r2, r2, #3
 801db3e:	b2d2      	uxtb	r2, r2
 801db40:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801db44:	fb14 f40c 	smulbb	r4, r4, ip
 801db48:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801db4c:	4474      	add	r4, lr
 801db4e:	fb12 f20c 	smulbb	r2, r2, ip
 801db52:	b2a4      	uxth	r4, r4
 801db54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801db58:	441a      	add	r2, r3
 801db5a:	b292      	uxth	r2, r2
 801db5c:	f104 0a01 	add.w	sl, r4, #1
 801db60:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801db64:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801db68:	fb16 f60c 	smulbb	r6, r6, ip
 801db6c:	f102 0a01 	add.w	sl, r2, #1
 801db70:	443e      	add	r6, r7
 801db72:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801db76:	b2b6      	uxth	r6, r6
 801db78:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801db7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801db80:	4322      	orrs	r2, r4
 801db82:	1c74      	adds	r4, r6, #1
 801db84:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801db88:	0976      	lsrs	r6, r6, #5
 801db8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801db8e:	4332      	orrs	r2, r6
 801db90:	f821 2b02 	strh.w	r2, [r1], #2
 801db94:	e7cb      	b.n	801db2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801db96:	4441      	add	r1, r8
 801db98:	e7c5      	b.n	801db26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801db9a:	4f22      	ldr	r7, [pc, #136]	; (801dc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801db9c:	0973      	lsrs	r3, r6, #5
 801db9e:	ea08 0707 	and.w	r7, r8, r7
 801dba2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dba6:	433b      	orrs	r3, r7
 801dba8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dbac:	4333      	orrs	r3, r6
 801dbae:	07e7      	lsls	r7, r4, #31
 801dbb0:	b29b      	uxth	r3, r3
 801dbb2:	d50b      	bpl.n	801dbcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801dbb4:	0040      	lsls	r0, r0, #1
 801dbb6:	0052      	lsls	r2, r2, #1
 801dbb8:	42a9      	cmp	r1, r5
 801dbba:	d231      	bcs.n	801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dbbc:	180c      	adds	r4, r1, r0
 801dbbe:	42a1      	cmp	r1, r4
 801dbc0:	d202      	bcs.n	801dbc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801dbc2:	f821 3b02 	strh.w	r3, [r1], #2
 801dbc6:	e7fa      	b.n	801dbbe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801dbc8:	4411      	add	r1, r2
 801dbca:	e7f5      	b.n	801dbb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801dbcc:	078e      	lsls	r6, r1, #30
 801dbce:	d008      	beq.n	801dbe2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801dbd0:	0066      	lsls	r6, r4, #1
 801dbd2:	460a      	mov	r2, r1
 801dbd4:	42aa      	cmp	r2, r5
 801dbd6:	d202      	bcs.n	801dbde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801dbd8:	8013      	strh	r3, [r2, #0]
 801dbda:	4432      	add	r2, r6
 801dbdc:	e7fa      	b.n	801dbd4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801dbde:	3102      	adds	r1, #2
 801dbe0:	3801      	subs	r0, #1
 801dbe2:	07c2      	lsls	r2, r0, #31
 801dbe4:	d50b      	bpl.n	801dbfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801dbe6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801dbea:	3a01      	subs	r2, #1
 801dbec:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801dbf0:	0066      	lsls	r6, r4, #1
 801dbf2:	42aa      	cmp	r2, r5
 801dbf4:	d202      	bcs.n	801dbfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801dbf6:	8013      	strh	r3, [r2, #0]
 801dbf8:	4432      	add	r2, r6
 801dbfa:	e7fa      	b.n	801dbf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801dbfc:	3801      	subs	r0, #1
 801dbfe:	b178      	cbz	r0, 801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc00:	1040      	asrs	r0, r0, #1
 801dc02:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801dc06:	0080      	lsls	r0, r0, #2
 801dc08:	0064      	lsls	r4, r4, #1
 801dc0a:	42a9      	cmp	r1, r5
 801dc0c:	d208      	bcs.n	801dc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801dc0e:	180e      	adds	r6, r1, r0
 801dc10:	460a      	mov	r2, r1
 801dc12:	42b2      	cmp	r2, r6
 801dc14:	d202      	bcs.n	801dc1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801dc16:	f842 3b04 	str.w	r3, [r2], #4
 801dc1a:	e7fa      	b.n	801dc12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801dc1c:	4421      	add	r1, r4
 801dc1e:	e7f4      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801dc20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dc24:	00fff800 	.word	0x00fff800

0801dc28 <_ZN8touchgfx8LCD16bppC1Ev>:
 801dc28:	2200      	movs	r2, #0
 801dc2a:	4912      	ldr	r1, [pc, #72]	; (801dc74 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801dc2c:	6042      	str	r2, [r0, #4]
 801dc2e:	6001      	str	r1, [r0, #0]
 801dc30:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801dc34:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801dc38:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801dc3c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801dc40:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801dc44:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801dc48:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801dc4c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801dc50:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801dc54:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801dc58:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801dc5c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801dc60:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801dc64:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801dc68:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801dc6c:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801dc70:	4770      	bx	lr
 801dc72:	bf00      	nop
 801dc74:	0802fb9c 	.word	0x0802fb9c

0801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801dc78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc7c:	460d      	mov	r5, r1
 801dc7e:	b08d      	sub	sp, #52	; 0x34
 801dc80:	4604      	mov	r4, r0
 801dc82:	6808      	ldr	r0, [r1, #0]
 801dc84:	6849      	ldr	r1, [r1, #4]
 801dc86:	4699      	mov	r9, r3
 801dc88:	ab08      	add	r3, sp, #32
 801dc8a:	c303      	stmia	r3!, {r0, r1}
 801dc8c:	6810      	ldr	r0, [r2, #0]
 801dc8e:	6851      	ldr	r1, [r2, #4]
 801dc90:	ab0a      	add	r3, sp, #40	; 0x28
 801dc92:	c303      	stmia	r3!, {r0, r1}
 801dc94:	a808      	add	r0, sp, #32
 801dc96:	f7f7 ff0b 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc9a:	4629      	mov	r1, r5
 801dc9c:	a80a      	add	r0, sp, #40	; 0x28
 801dc9e:	f7f7 ff4b 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dca2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801dca6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801dcaa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801dcae:	4d63      	ldr	r5, [pc, #396]	; (801de3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dcb0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801dcb4:	6828      	ldr	r0, [r5, #0]
 801dcb6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801dcba:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dcbe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801dcc2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801dcc6:	440a      	add	r2, r1
 801dcc8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801dccc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801dcd0:	4413      	add	r3, r2
 801dcd2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801dcd6:	6803      	ldr	r3, [r0, #0]
 801dcd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dcda:	4798      	blx	r3
 801dcdc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dce0:	d119      	bne.n	801dd16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801dce2:	f010 0f20 	tst.w	r0, #32
 801dce6:	6828      	ldr	r0, [r5, #0]
 801dce8:	d018      	beq.n	801dd1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801dcea:	2500      	movs	r5, #0
 801dcec:	6801      	ldr	r1, [r0, #0]
 801dcee:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dcf2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801dcf6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801dcfa:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801dcfe:	9502      	str	r5, [sp, #8]
 801dd00:	b2b6      	uxth	r6, r6
 801dd02:	fa1f f588 	uxth.w	r5, r8
 801dd06:	9601      	str	r6, [sp, #4]
 801dd08:	9500      	str	r5, [sp, #0]
 801dd0a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801dd0c:	4621      	mov	r1, r4
 801dd0e:	47a8      	blx	r5
 801dd10:	b00d      	add	sp, #52	; 0x34
 801dd12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd16:	f010 0f40 	tst.w	r0, #64	; 0x40
 801dd1a:	e7e4      	b.n	801dce6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801dd1c:	6803      	ldr	r3, [r0, #0]
 801dd1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dd20:	4798      	blx	r3
 801dd22:	4947      	ldr	r1, [pc, #284]	; (801de40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801dd24:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801dd28:	880b      	ldrh	r3, [r1, #0]
 801dd2a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801dd2e:	fb03 5202 	mla	r2, r3, r2, r5
 801dd32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dd36:	4373      	muls	r3, r6
 801dd38:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dd3c:	9307      	str	r3, [sp, #28]
 801dd3e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801dd42:	9306      	str	r3, [sp, #24]
 801dd44:	468a      	mov	sl, r1
 801dd46:	9b07      	ldr	r3, [sp, #28]
 801dd48:	4298      	cmp	r0, r3
 801dd4a:	d270      	bcs.n	801de2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801dd4c:	9b06      	ldr	r3, [sp, #24]
 801dd4e:	4621      	mov	r1, r4
 801dd50:	eb00 0b03 	add.w	fp, r0, r3
 801dd54:	4558      	cmp	r0, fp
 801dd56:	d25d      	bcs.n	801de14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801dd58:	f851 4b04 	ldr.w	r4, [r1], #4
 801dd5c:	0e23      	lsrs	r3, r4, #24
 801dd5e:	d014      	beq.n	801dd8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801dd60:	2bff      	cmp	r3, #255	; 0xff
 801dd62:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801dd66:	d112      	bne.n	801dd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dd68:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dd6c:	d10f      	bne.n	801dd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801dd6e:	0963      	lsrs	r3, r4, #5
 801dd70:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801dd74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd78:	f02c 0c07 	bic.w	ip, ip, #7
 801dd7c:	ea43 0c0c 	orr.w	ip, r3, ip
 801dd80:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dd84:	ea4c 0404 	orr.w	r4, ip, r4
 801dd88:	8004      	strh	r4, [r0, #0]
 801dd8a:	3002      	adds	r0, #2
 801dd8c:	e7e2      	b.n	801dd54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801dd8e:	fb09 f303 	mul.w	r3, r9, r3
 801dd92:	8807      	ldrh	r7, [r0, #0]
 801dd94:	1c5a      	adds	r2, r3, #1
 801dd96:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801dd9a:	1212      	asrs	r2, r2, #8
 801dd9c:	123e      	asrs	r6, r7, #8
 801dd9e:	b293      	uxth	r3, r2
 801dda0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801dda4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dda8:	43d2      	mvns	r2, r2
 801ddaa:	b2d2      	uxtb	r2, r2
 801ddac:	10fd      	asrs	r5, r7, #3
 801ddae:	fb1e fe03 	smulbb	lr, lr, r3
 801ddb2:	00ff      	lsls	r7, r7, #3
 801ddb4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ddb8:	fb06 e602 	mla	r6, r6, r2, lr
 801ddbc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ddc0:	b2ff      	uxtb	r7, r7
 801ddc2:	fa5f fc8c 	uxtb.w	ip, ip
 801ddc6:	b2e4      	uxtb	r4, r4
 801ddc8:	b2b6      	uxth	r6, r6
 801ddca:	fb1c fc03 	smulbb	ip, ip, r3
 801ddce:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ddd2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ddd6:	fb14 f403 	smulbb	r4, r4, r3
 801ddda:	fb05 c502 	mla	r5, r5, r2, ip
 801ddde:	f106 0e01 	add.w	lr, r6, #1
 801dde2:	fb07 4702 	mla	r7, r7, r2, r4
 801dde6:	b2ad      	uxth	r5, r5
 801dde8:	b2bf      	uxth	r7, r7
 801ddea:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ddee:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ddf2:	f105 0c01 	add.w	ip, r5, #1
 801ddf6:	1c7e      	adds	r6, r7, #1
 801ddf8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ddfc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801de00:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801de04:	096d      	lsrs	r5, r5, #5
 801de06:	ea46 060e 	orr.w	r6, r6, lr
 801de0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de0e:	432e      	orrs	r6, r5
 801de10:	8006      	strh	r6, [r0, #0]
 801de12:	e7ba      	b.n	801dd8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801de14:	f8ba 3000 	ldrh.w	r3, [sl]
 801de18:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801de1c:	eba3 0308 	sub.w	r3, r3, r8
 801de20:	eba4 0408 	sub.w	r4, r4, r8
 801de24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de28:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801de2c:	e78b      	b.n	801dd46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801de2e:	4b03      	ldr	r3, [pc, #12]	; (801de3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801de30:	6818      	ldr	r0, [r3, #0]
 801de32:	6803      	ldr	r3, [r0, #0]
 801de34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de36:	4798      	blx	r3
 801de38:	e76a      	b.n	801dd10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801de3a:	bf00      	nop
 801de3c:	20012fc4 	.word	0x20012fc4
 801de40:	20012fbe 	.word	0x20012fbe

0801de44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801de44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801de48:	460c      	mov	r4, r1
 801de4a:	b085      	sub	sp, #20
 801de4c:	6810      	ldr	r0, [r2, #0]
 801de4e:	6851      	ldr	r1, [r2, #4]
 801de50:	466d      	mov	r5, sp
 801de52:	c503      	stmia	r5!, {r0, r1}
 801de54:	6818      	ldr	r0, [r3, #0]
 801de56:	6859      	ldr	r1, [r3, #4]
 801de58:	4616      	mov	r6, r2
 801de5a:	c503      	stmia	r5!, {r0, r1}
 801de5c:	4668      	mov	r0, sp
 801de5e:	f7f7 fe27 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801de62:	4631      	mov	r1, r6
 801de64:	a802      	add	r0, sp, #8
 801de66:	f7f7 fe67 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de6a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801de6e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801de72:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801de76:	4d28      	ldr	r5, [pc, #160]	; (801df18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801de78:	4e28      	ldr	r6, [pc, #160]	; (801df1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801de7a:	6828      	ldr	r0, [r5, #0]
 801de7c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801de80:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801de84:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de88:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801de8c:	f8bd 1000 	ldrh.w	r1, [sp]
 801de90:	440a      	add	r2, r1
 801de92:	f8ad 2008 	strh.w	r2, [sp, #8]
 801de96:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801de9a:	4413      	add	r3, r2
 801de9c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801dea0:	6803      	ldr	r3, [r0, #0]
 801dea2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dea4:	4798      	blx	r3
 801dea6:	8833      	ldrh	r3, [r6, #0]
 801dea8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801deac:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801deb0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801df20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801deb4:	fb03 1202 	mla	r2, r3, r2, r1
 801deb8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801debc:	fb08 f303 	mul.w	r3, r8, r3
 801dec0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dec4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dec8:	4298      	cmp	r0, r3
 801deca:	d21d      	bcs.n	801df08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801decc:	eb00 080c 	add.w	r8, r0, ip
 801ded0:	4540      	cmp	r0, r8
 801ded2:	d20f      	bcs.n	801def4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ded4:	f854 1b04 	ldr.w	r1, [r4], #4
 801ded8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dedc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dee0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dee4:	ea42 0209 	orr.w	r2, r2, r9
 801dee8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801deec:	430a      	orrs	r2, r1
 801deee:	f820 2b02 	strh.w	r2, [r0], #2
 801def2:	e7ed      	b.n	801ded0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801def4:	8832      	ldrh	r2, [r6, #0]
 801def6:	1bd2      	subs	r2, r2, r7
 801def8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801defc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801df00:	1bd2      	subs	r2, r2, r7
 801df02:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801df06:	e7df      	b.n	801dec8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801df08:	6828      	ldr	r0, [r5, #0]
 801df0a:	6803      	ldr	r3, [r0, #0]
 801df0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df0e:	4798      	blx	r3
 801df10:	b005      	add	sp, #20
 801df12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801df16:	bf00      	nop
 801df18:	20012fc4 	.word	0x20012fc4
 801df1c:	20012fbe 	.word	0x20012fbe
 801df20:	fffff800 	.word	0xfffff800

0801df24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801df24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801df28:	460e      	mov	r6, r1
 801df2a:	b08e      	sub	sp, #56	; 0x38
 801df2c:	4604      	mov	r4, r0
 801df2e:	6808      	ldr	r0, [r1, #0]
 801df30:	6849      	ldr	r1, [r1, #4]
 801df32:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801e10c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801df36:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801e110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801df3a:	461d      	mov	r5, r3
 801df3c:	ab0a      	add	r3, sp, #40	; 0x28
 801df3e:	c303      	stmia	r3!, {r0, r1}
 801df40:	6810      	ldr	r0, [r2, #0]
 801df42:	6851      	ldr	r1, [r2, #4]
 801df44:	ab0c      	add	r3, sp, #48	; 0x30
 801df46:	c303      	stmia	r3!, {r0, r1}
 801df48:	a80a      	add	r0, sp, #40	; 0x28
 801df4a:	f7f7 fdb1 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801df4e:	4631      	mov	r1, r6
 801df50:	a80c      	add	r0, sp, #48	; 0x30
 801df52:	f7f7 fdf1 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801df56:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801df5a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801df5e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801df62:	f8d8 0000 	ldr.w	r0, [r8]
 801df66:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801df6a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801df6e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801df72:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801df76:	440c      	add	r4, r1
 801df78:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801df7c:	440a      	add	r2, r1
 801df7e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801df82:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801df86:	4413      	add	r3, r2
 801df88:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801df8c:	6803      	ldr	r3, [r0, #0]
 801df8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801df90:	4798      	blx	r3
 801df92:	2dff      	cmp	r5, #255	; 0xff
 801df94:	d124      	bne.n	801dfe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801df96:	f010 0f01 	tst.w	r0, #1
 801df9a:	f8d8 0000 	ldr.w	r0, [r8]
 801df9e:	d022      	beq.n	801dfe6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801dfa0:	2100      	movs	r1, #0
 801dfa2:	f8d0 c000 	ldr.w	ip, [r0]
 801dfa6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dfaa:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dfae:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801dfb2:	f04f 0e01 	mov.w	lr, #1
 801dfb6:	f8cd e018 	str.w	lr, [sp, #24]
 801dfba:	f8b9 e000 	ldrh.w	lr, [r9]
 801dfbe:	9503      	str	r5, [sp, #12]
 801dfc0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801dfc4:	b2b6      	uxth	r6, r6
 801dfc6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dfca:	9102      	str	r1, [sp, #8]
 801dfcc:	b2bf      	uxth	r7, r7
 801dfce:	9601      	str	r6, [sp, #4]
 801dfd0:	9700      	str	r7, [sp, #0]
 801dfd2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801dfd6:	4621      	mov	r1, r4
 801dfd8:	47a8      	blx	r5
 801dfda:	b00e      	add	sp, #56	; 0x38
 801dfdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dfe0:	f010 0f04 	tst.w	r0, #4
 801dfe4:	e7d9      	b.n	801df9a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801dfe6:	6803      	ldr	r3, [r0, #0]
 801dfe8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dfea:	4798      	blx	r3
 801dfec:	f8b9 3000 	ldrh.w	r3, [r9]
 801dff0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dff4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801dff8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801dffc:	fb03 1202 	mla	r2, r3, r2, r1
 801e000:	ebac 0c07 	sub.w	ip, ip, r7
 801e004:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e008:	435e      	muls	r6, r3
 801e00a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e00e:	2dff      	cmp	r5, #255	; 0xff
 801e010:	eba3 0707 	sub.w	r7, r3, r7
 801e014:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e018:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e01c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e020:	d049      	beq.n	801e0b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e022:	43eb      	mvns	r3, r5
 801e024:	fa1f f985 	uxth.w	r9, r5
 801e028:	b2db      	uxtb	r3, r3
 801e02a:	42b0      	cmp	r0, r6
 801e02c:	d266      	bcs.n	801e0fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e02e:	eb00 0a0e 	add.w	sl, r0, lr
 801e032:	4550      	cmp	r0, sl
 801e034:	4621      	mov	r1, r4
 801e036:	f104 0403 	add.w	r4, r4, #3
 801e03a:	d25b      	bcs.n	801e0f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e03c:	8802      	ldrh	r2, [r0, #0]
 801e03e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e042:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e046:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801e04a:	fb11 f109 	smulbb	r1, r1, r9
 801e04e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e052:	10d5      	asrs	r5, r2, #3
 801e054:	fb08 1803 	mla	r8, r8, r3, r1
 801e058:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e05c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e060:	fb11 f109 	smulbb	r1, r1, r9
 801e064:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e068:	fb05 1503 	mla	r5, r5, r3, r1
 801e06c:	00d2      	lsls	r2, r2, #3
 801e06e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e072:	b2d2      	uxtb	r2, r2
 801e074:	fb11 f109 	smulbb	r1, r1, r9
 801e078:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e07c:	fa1f f888 	uxth.w	r8, r8
 801e080:	fb02 1203 	mla	r2, r2, r3, r1
 801e084:	b292      	uxth	r2, r2
 801e086:	f108 0101 	add.w	r1, r8, #1
 801e08a:	b2ad      	uxth	r5, r5
 801e08c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e090:	1c51      	adds	r1, r2, #1
 801e092:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e096:	1c69      	adds	r1, r5, #1
 801e098:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e09c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801e0a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e0a4:	096d      	lsrs	r5, r5, #5
 801e0a6:	ea42 0208 	orr.w	r2, r2, r8
 801e0aa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e0ae:	432a      	orrs	r2, r5
 801e0b0:	f820 2b02 	strh.w	r2, [r0], #2
 801e0b4:	e7bd      	b.n	801e032 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e0b6:	4a14      	ldr	r2, [pc, #80]	; (801e108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e0b8:	42b0      	cmp	r0, r6
 801e0ba:	d21f      	bcs.n	801e0fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e0bc:	eb00 050e 	add.w	r5, r0, lr
 801e0c0:	42a8      	cmp	r0, r5
 801e0c2:	4621      	mov	r1, r4
 801e0c4:	f104 0403 	add.w	r4, r4, #3
 801e0c8:	d210      	bcs.n	801e0ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e0ca:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e0ce:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e0d2:	00db      	lsls	r3, r3, #3
 801e0d4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e0d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e0dc:	430b      	orrs	r3, r1
 801e0de:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e0e2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e0e6:	f820 3b02 	strh.w	r3, [r0], #2
 801e0ea:	e7e9      	b.n	801e0c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e0ec:	4438      	add	r0, r7
 801e0ee:	eb01 040c 	add.w	r4, r1, ip
 801e0f2:	e7e1      	b.n	801e0b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e0f4:	4438      	add	r0, r7
 801e0f6:	eb01 040c 	add.w	r4, r1, ip
 801e0fa:	e796      	b.n	801e02a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e0fc:	4b03      	ldr	r3, [pc, #12]	; (801e10c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e0fe:	6818      	ldr	r0, [r3, #0]
 801e100:	6803      	ldr	r3, [r0, #0]
 801e102:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e104:	4798      	blx	r3
 801e106:	e768      	b.n	801dfda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e108:	fffff800 	.word	0xfffff800
 801e10c:	20012fc4 	.word	0x20012fc4
 801e110:	20012fbe 	.word	0x20012fbe

0801e114 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e114:	b4f0      	push	{r4, r5, r6, r7}
 801e116:	4616      	mov	r6, r2
 801e118:	2e01      	cmp	r6, #1
 801e11a:	461c      	mov	r4, r3
 801e11c:	460d      	mov	r5, r1
 801e11e:	9a04      	ldr	r2, [sp, #16]
 801e120:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e124:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e128:	d012      	beq.n	801e150 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e12a:	d303      	bcc.n	801e134 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e12c:	2e02      	cmp	r6, #2
 801e12e:	d00a      	beq.n	801e146 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e130:	bcf0      	pop	{r4, r5, r6, r7}
 801e132:	4770      	bx	lr
 801e134:	6805      	ldr	r5, [r0, #0]
 801e136:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e13a:	68ed      	ldr	r5, [r5, #12]
 801e13c:	4613      	mov	r3, r2
 801e13e:	46ac      	mov	ip, r5
 801e140:	4622      	mov	r2, r4
 801e142:	bcf0      	pop	{r4, r5, r6, r7}
 801e144:	4760      	bx	ip
 801e146:	4621      	mov	r1, r4
 801e148:	4628      	mov	r0, r5
 801e14a:	bcf0      	pop	{r4, r5, r6, r7}
 801e14c:	f7ff bd94 	b.w	801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e150:	4621      	mov	r1, r4
 801e152:	4628      	mov	r0, r5
 801e154:	bcf0      	pop	{r4, r5, r6, r7}
 801e156:	f7ff bee5 	b.w	801df24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e15c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e160:	4681      	mov	r9, r0
 801e162:	b093      	sub	sp, #76	; 0x4c
 801e164:	6810      	ldr	r0, [r2, #0]
 801e166:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801e16a:	4f6d      	ldr	r7, [pc, #436]	; (801e320 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e16c:	4688      	mov	r8, r1
 801e16e:	6851      	ldr	r1, [r2, #4]
 801e170:	ac0e      	add	r4, sp, #56	; 0x38
 801e172:	c403      	stmia	r4!, {r0, r1}
 801e174:	6818      	ldr	r0, [r3, #0]
 801e176:	6859      	ldr	r1, [r3, #4]
 801e178:	ac10      	add	r4, sp, #64	; 0x40
 801e17a:	4616      	mov	r6, r2
 801e17c:	c403      	stmia	r4!, {r0, r1}
 801e17e:	a80e      	add	r0, sp, #56	; 0x38
 801e180:	f7f7 fc96 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e184:	4631      	mov	r1, r6
 801e186:	a810      	add	r0, sp, #64	; 0x40
 801e188:	f7f7 fcd6 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e18c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801e190:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801e194:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801e198:	4e62      	ldr	r6, [pc, #392]	; (801e324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e19a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801e19e:	6830      	ldr	r0, [r6, #0]
 801e1a0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801e1a4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e1a8:	4489      	add	r9, r1
 801e1aa:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801e1ae:	440a      	add	r2, r1
 801e1b0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801e1b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e1b8:	4413      	add	r3, r2
 801e1ba:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801e1be:	6803      	ldr	r3, [r0, #0]
 801e1c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e1c2:	4798      	blx	r3
 801e1c4:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e1c8:	6830      	ldr	r0, [r6, #0]
 801e1ca:	d01d      	beq.n	801e208 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e1cc:	2200      	movs	r2, #0
 801e1ce:	6801      	ldr	r1, [r0, #0]
 801e1d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801e1d4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e1d8:	220b      	movs	r2, #11
 801e1da:	9207      	str	r2, [sp, #28]
 801e1dc:	883a      	ldrh	r2, [r7, #0]
 801e1de:	9206      	str	r2, [sp, #24]
 801e1e0:	2201      	movs	r2, #1
 801e1e2:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e1e6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801e1ea:	9203      	str	r2, [sp, #12]
 801e1ec:	b2a4      	uxth	r4, r4
 801e1ee:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e1f2:	9200      	str	r2, [sp, #0]
 801e1f4:	b2ad      	uxth	r5, r5
 801e1f6:	9502      	str	r5, [sp, #8]
 801e1f8:	9401      	str	r4, [sp, #4]
 801e1fa:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801e1fc:	4642      	mov	r2, r8
 801e1fe:	4649      	mov	r1, r9
 801e200:	47a0      	blx	r4
 801e202:	b013      	add	sp, #76	; 0x4c
 801e204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e208:	6803      	ldr	r3, [r0, #0]
 801e20a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e20c:	4798      	blx	r3
 801e20e:	883b      	ldrh	r3, [r7, #0]
 801e210:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801e214:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801e218:	fb03 1202 	mla	r2, r3, r2, r1
 801e21c:	435d      	muls	r5, r3
 801e21e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e222:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e226:	920c      	str	r2, [sp, #48]	; 0x30
 801e228:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801e22c:	1b12      	subs	r2, r2, r4
 801e22e:	920d      	str	r2, [sp, #52]	; 0x34
 801e230:	0062      	lsls	r2, r4, #1
 801e232:	1b1c      	subs	r4, r3, r4
 801e234:	0063      	lsls	r3, r4, #1
 801e236:	920a      	str	r2, [sp, #40]	; 0x28
 801e238:	930b      	str	r3, [sp, #44]	; 0x2c
 801e23a:	f04f 0e04 	mov.w	lr, #4
 801e23e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e240:	4298      	cmp	r0, r3
 801e242:	d266      	bcs.n	801e312 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e244:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e246:	eb00 0b03 	add.w	fp, r0, r3
 801e24a:	4558      	cmp	r0, fp
 801e24c:	d25c      	bcs.n	801e308 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e24e:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e252:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e256:	f858 2003 	ldr.w	r2, [r8, r3]
 801e25a:	0e11      	lsrs	r1, r2, #24
 801e25c:	d012      	beq.n	801e284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e25e:	29ff      	cmp	r1, #255	; 0xff
 801e260:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e264:	d110      	bne.n	801e288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e266:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e26a:	d10d      	bne.n	801e288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e26c:	0953      	lsrs	r3, r2, #5
 801e26e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801e272:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e276:	f027 0707 	bic.w	r7, r7, #7
 801e27a:	431f      	orrs	r7, r3
 801e27c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e280:	433a      	orrs	r2, r7
 801e282:	8002      	strh	r2, [r0, #0]
 801e284:	3002      	adds	r0, #2
 801e286:	e7e0      	b.n	801e24a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e288:	fb0a f101 	mul.w	r1, sl, r1
 801e28c:	8806      	ldrh	r6, [r0, #0]
 801e28e:	1c4b      	adds	r3, r1, #1
 801e290:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e294:	1235      	asrs	r5, r6, #8
 801e296:	10f4      	asrs	r4, r6, #3
 801e298:	121b      	asrs	r3, r3, #8
 801e29a:	00f6      	lsls	r6, r6, #3
 801e29c:	b299      	uxth	r1, r3
 801e29e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e2a2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e2a6:	b2f6      	uxtb	r6, r6
 801e2a8:	43db      	mvns	r3, r3
 801e2aa:	b2d2      	uxtb	r2, r2
 801e2ac:	b2db      	uxtb	r3, r3
 801e2ae:	fb1c fc01 	smulbb	ip, ip, r1
 801e2b2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e2b6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e2ba:	fb12 f201 	smulbb	r2, r2, r1
 801e2be:	fb05 c503 	mla	r5, r5, r3, ip
 801e2c2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e2c6:	b2ff      	uxtb	r7, r7
 801e2c8:	fb06 2203 	mla	r2, r6, r3, r2
 801e2cc:	b2ad      	uxth	r5, r5
 801e2ce:	fb17 f701 	smulbb	r7, r7, r1
 801e2d2:	b292      	uxth	r2, r2
 801e2d4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e2d8:	fb04 7403 	mla	r4, r4, r3, r7
 801e2dc:	f105 0c01 	add.w	ip, r5, #1
 801e2e0:	1c57      	adds	r7, r2, #1
 801e2e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e2e6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e2ea:	b2a4      	uxth	r4, r4
 801e2ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e2f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e2f4:	433d      	orrs	r5, r7
 801e2f6:	1c67      	adds	r7, r4, #1
 801e2f8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e2fc:	0964      	lsrs	r4, r4, #5
 801e2fe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e302:	4325      	orrs	r5, r4
 801e304:	8005      	strh	r5, [r0, #0]
 801e306:	e7bd      	b.n	801e284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e308:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e30a:	4418      	add	r0, r3
 801e30c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e30e:	4499      	add	r9, r3
 801e310:	e795      	b.n	801e23e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e312:	4b04      	ldr	r3, [pc, #16]	; (801e324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e314:	6818      	ldr	r0, [r3, #0]
 801e316:	6803      	ldr	r3, [r0, #0]
 801e318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e31a:	4798      	blx	r3
 801e31c:	e771      	b.n	801e202 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e31e:	bf00      	nop
 801e320:	20012fbe 	.word	0x20012fbe
 801e324:	20012fc4 	.word	0x20012fc4

0801e328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e32c:	b087      	sub	sp, #28
 801e32e:	4680      	mov	r8, r0
 801e330:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e334:	460d      	mov	r5, r1
 801e336:	4614      	mov	r4, r2
 801e338:	2e00      	cmp	r6, #0
 801e33a:	f000 80b9 	beq.w	801e4b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e33e:	6810      	ldr	r0, [r2, #0]
 801e340:	6851      	ldr	r1, [r2, #4]
 801e342:	af02      	add	r7, sp, #8
 801e344:	c703      	stmia	r7!, {r0, r1}
 801e346:	6818      	ldr	r0, [r3, #0]
 801e348:	6859      	ldr	r1, [r3, #4]
 801e34a:	af04      	add	r7, sp, #16
 801e34c:	c703      	stmia	r7!, {r0, r1}
 801e34e:	a802      	add	r0, sp, #8
 801e350:	f7f7 fbae 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e354:	4621      	mov	r1, r4
 801e356:	a804      	add	r0, sp, #16
 801e358:	f7f7 fbee 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e35c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e360:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e364:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e368:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e36c:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e370:	eb08 0401 	add.w	r4, r8, r1
 801e374:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e378:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e37c:	440a      	add	r2, r1
 801e37e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e382:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e386:	4413      	add	r3, r2
 801e388:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e38c:	4b4a      	ldr	r3, [pc, #296]	; (801e4b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e38e:	6818      	ldr	r0, [r3, #0]
 801e390:	6803      	ldr	r3, [r0, #0]
 801e392:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e394:	4798      	blx	r3
 801e396:	4b49      	ldr	r3, [pc, #292]	; (801e4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e398:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e39c:	881a      	ldrh	r2, [r3, #0]
 801e39e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e3a2:	2eff      	cmp	r6, #255	; 0xff
 801e3a4:	fb02 c101 	mla	r1, r2, r1, ip
 801e3a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e3ac:	fb02 f207 	mul.w	r2, r2, r7
 801e3b0:	f105 0104 	add.w	r1, r5, #4
 801e3b4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e3b8:	461d      	mov	r5, r3
 801e3ba:	d05a      	beq.n	801e472 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e3bc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e3c0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e3c4:	b2b6      	uxth	r6, r6
 801e3c6:	fa1f fe8e 	uxth.w	lr, lr
 801e3ca:	9301      	str	r3, [sp, #4]
 801e3cc:	4282      	cmp	r2, r0
 801e3ce:	d96a      	bls.n	801e4a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e3d0:	eb00 0b0a 	add.w	fp, r0, sl
 801e3d4:	4583      	cmp	fp, r0
 801e3d6:	d940      	bls.n	801e45a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e3d8:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e3dc:	8805      	ldrh	r5, [r0, #0]
 801e3de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e3e2:	122f      	asrs	r7, r5, #8
 801e3e4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e3e8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e3ec:	fb17 f70e 	smulbb	r7, r7, lr
 801e3f0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e3f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e3f8:	00ed      	lsls	r5, r5, #3
 801e3fa:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e3fe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e402:	10df      	asrs	r7, r3, #3
 801e404:	b2ed      	uxtb	r5, r5
 801e406:	00db      	lsls	r3, r3, #3
 801e408:	fa1f fc8c 	uxth.w	ip, ip
 801e40c:	fb19 f90e 	smulbb	r9, r9, lr
 801e410:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e414:	b2db      	uxtb	r3, r3
 801e416:	fb15 f50e 	smulbb	r5, r5, lr
 801e41a:	fb07 9706 	mla	r7, r7, r6, r9
 801e41e:	fb03 5306 	mla	r3, r3, r6, r5
 801e422:	f10c 0901 	add.w	r9, ip, #1
 801e426:	b29b      	uxth	r3, r3
 801e428:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e42c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e430:	f103 0c01 	add.w	ip, r3, #1
 801e434:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e438:	b2bf      	uxth	r7, r7
 801e43a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e43e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e442:	f107 0901 	add.w	r9, r7, #1
 801e446:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e44a:	097f      	lsrs	r7, r7, #5
 801e44c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e450:	ea4c 0c07 	orr.w	ip, ip, r7
 801e454:	f820 cb02 	strh.w	ip, [r0], #2
 801e458:	e7bc      	b.n	801e3d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e45a:	9b01      	ldr	r3, [sp, #4]
 801e45c:	881b      	ldrh	r3, [r3, #0]
 801e45e:	eba3 0308 	sub.w	r3, r3, r8
 801e462:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e466:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e46a:	eba3 0308 	sub.w	r3, r3, r8
 801e46e:	441c      	add	r4, r3
 801e470:	e7ac      	b.n	801e3cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e472:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e476:	4282      	cmp	r2, r0
 801e478:	d915      	bls.n	801e4a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e47a:	eb00 060a 	add.w	r6, r0, sl
 801e47e:	4286      	cmp	r6, r0
 801e480:	d906      	bls.n	801e490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e482:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e486:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e48a:	f820 3b02 	strh.w	r3, [r0], #2
 801e48e:	e7f6      	b.n	801e47e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e490:	882b      	ldrh	r3, [r5, #0]
 801e492:	eba3 0308 	sub.w	r3, r3, r8
 801e496:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e49a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e49e:	eba3 0308 	sub.w	r3, r3, r8
 801e4a2:	441c      	add	r4, r3
 801e4a4:	e7e7      	b.n	801e476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e4a6:	4b04      	ldr	r3, [pc, #16]	; (801e4b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e4a8:	6818      	ldr	r0, [r3, #0]
 801e4aa:	6803      	ldr	r3, [r0, #0]
 801e4ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e4ae:	4798      	blx	r3
 801e4b0:	b007      	add	sp, #28
 801e4b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4b6:	bf00      	nop
 801e4b8:	20012fc4 	.word	0x20012fc4
 801e4bc:	20012fbe 	.word	0x20012fbe

0801e4c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4c4:	b091      	sub	sp, #68	; 0x44
 801e4c6:	4680      	mov	r8, r0
 801e4c8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e4cc:	460f      	mov	r7, r1
 801e4ce:	4614      	mov	r4, r2
 801e4d0:	2d00      	cmp	r5, #0
 801e4d2:	d051      	beq.n	801e578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e4d4:	6810      	ldr	r0, [r2, #0]
 801e4d6:	6851      	ldr	r1, [r2, #4]
 801e4d8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e4dc:	ae0c      	add	r6, sp, #48	; 0x30
 801e4de:	c603      	stmia	r6!, {r0, r1}
 801e4e0:	6818      	ldr	r0, [r3, #0]
 801e4e2:	6859      	ldr	r1, [r3, #4]
 801e4e4:	ae0e      	add	r6, sp, #56	; 0x38
 801e4e6:	c603      	stmia	r6!, {r0, r1}
 801e4e8:	a80c      	add	r0, sp, #48	; 0x30
 801e4ea:	f7f7 fae1 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4ee:	4621      	mov	r1, r4
 801e4f0:	a80e      	add	r0, sp, #56	; 0x38
 801e4f2:	f7f7 fb21 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4f6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e4fa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e4fe:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e502:	f8d9 0000 	ldr.w	r0, [r9]
 801e506:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e50a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e50e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e512:	eb08 0401 	add.w	r4, r8, r1
 801e516:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e51a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e6e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e51e:	440a      	add	r2, r1
 801e520:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e524:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e528:	4413      	add	r3, r2
 801e52a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e52e:	6803      	ldr	r3, [r0, #0]
 801e530:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e532:	4798      	blx	r3
 801e534:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e538:	f8d9 0000 	ldr.w	r0, [r9]
 801e53c:	d01f      	beq.n	801e57e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e53e:	2200      	movs	r2, #0
 801e540:	6801      	ldr	r1, [r0, #0]
 801e542:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e546:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e54a:	220b      	movs	r2, #11
 801e54c:	9207      	str	r2, [sp, #28]
 801e54e:	f8b8 2000 	ldrh.w	r2, [r8]
 801e552:	9206      	str	r2, [sp, #24]
 801e554:	2201      	movs	r2, #1
 801e556:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e55a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e55e:	9203      	str	r2, [sp, #12]
 801e560:	fa1f f28a 	uxth.w	r2, sl
 801e564:	9202      	str	r2, [sp, #8]
 801e566:	b2b6      	uxth	r6, r6
 801e568:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e56c:	9200      	str	r2, [sp, #0]
 801e56e:	9601      	str	r6, [sp, #4]
 801e570:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e572:	463a      	mov	r2, r7
 801e574:	4621      	mov	r1, r4
 801e576:	47a8      	blx	r5
 801e578:	b011      	add	sp, #68	; 0x44
 801e57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e57e:	6803      	ldr	r3, [r0, #0]
 801e580:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e582:	4798      	blx	r3
 801e584:	f8b8 2000 	ldrh.w	r2, [r8]
 801e588:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e58c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e590:	2dff      	cmp	r5, #255	; 0xff
 801e592:	fb02 1303 	mla	r3, r2, r3, r1
 801e596:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e59a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e59e:	fb0a fa02 	mul.w	sl, sl, r2
 801e5a2:	d062      	beq.n	801e66a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e5a4:	ea6f 0c05 	mvn.w	ip, r5
 801e5a8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e5ac:	930a      	str	r3, [sp, #40]	; 0x28
 801e5ae:	b2ad      	uxth	r5, r5
 801e5b0:	fa5f fc8c 	uxtb.w	ip, ip
 801e5b4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e5b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e5ba:	4298      	cmp	r0, r3
 801e5bc:	f080 8085 	bcs.w	801e6ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e5c0:	eb00 0b09 	add.w	fp, r0, r9
 801e5c4:	4558      	cmp	r0, fp
 801e5c6:	d246      	bcs.n	801e656 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e5c8:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e5cc:	2303      	movs	r3, #3
 801e5ce:	2204      	movs	r2, #4
 801e5d0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e5d4:	eb07 0a0e 	add.w	sl, r7, lr
 801e5d8:	8803      	ldrh	r3, [r0, #0]
 801e5da:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e5de:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e5e2:	1219      	asrs	r1, r3, #8
 801e5e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e5e8:	fb18 f805 	smulbb	r8, r8, r5
 801e5ec:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e5f0:	10da      	asrs	r2, r3, #3
 801e5f2:	fb01 810c 	mla	r1, r1, ip, r8
 801e5f6:	00db      	lsls	r3, r3, #3
 801e5f8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e5fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e600:	b2db      	uxtb	r3, r3
 801e602:	fb18 f805 	smulbb	r8, r8, r5
 801e606:	fb1e fe05 	smulbb	lr, lr, r5
 801e60a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e60e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e612:	b289      	uxth	r1, r1
 801e614:	fb02 820c 	mla	r2, r2, ip, r8
 801e618:	fb03 e30c 	mla	r3, r3, ip, lr
 801e61c:	b292      	uxth	r2, r2
 801e61e:	b29b      	uxth	r3, r3
 801e620:	f101 0801 	add.w	r8, r1, #1
 801e624:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e628:	f103 0e01 	add.w	lr, r3, #1
 801e62c:	f102 0801 	add.w	r8, r2, #1
 801e630:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e634:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e638:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e63c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e640:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e644:	ea4e 0101 	orr.w	r1, lr, r1
 801e648:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e64c:	ea41 0108 	orr.w	r1, r1, r8
 801e650:	f820 1b02 	strh.w	r1, [r0], #2
 801e654:	e7b6      	b.n	801e5c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e658:	881b      	ldrh	r3, [r3, #0]
 801e65a:	1b9b      	subs	r3, r3, r6
 801e65c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e660:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e664:	1b9b      	subs	r3, r3, r6
 801e666:	441c      	add	r4, r3
 801e668:	e7a6      	b.n	801e5b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e66a:	491b      	ldr	r1, [pc, #108]	; (801e6d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e66c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e670:	2203      	movs	r2, #3
 801e672:	2504      	movs	r5, #4
 801e674:	4550      	cmp	r0, sl
 801e676:	d228      	bcs.n	801e6ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e678:	eb00 0c09 	add.w	ip, r0, r9
 801e67c:	4560      	cmp	r0, ip
 801e67e:	4623      	mov	r3, r4
 801e680:	d219      	bcs.n	801e6b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e682:	f893 e000 	ldrb.w	lr, [r3]
 801e686:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e68a:	eb07 0b0e 	add.w	fp, r7, lr
 801e68e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e692:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e696:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e69a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e69e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e6a2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e6a6:	ea43 030b 	orr.w	r3, r3, fp
 801e6aa:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e6ae:	3401      	adds	r4, #1
 801e6b0:	f820 3b02 	strh.w	r3, [r0], #2
 801e6b4:	e7e2      	b.n	801e67c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e6b6:	f8b8 3000 	ldrh.w	r3, [r8]
 801e6ba:	1b9b      	subs	r3, r3, r6
 801e6bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e6c0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e6c4:	1b9b      	subs	r3, r3, r6
 801e6c6:	441c      	add	r4, r3
 801e6c8:	e7d4      	b.n	801e674 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e6ca:	4b04      	ldr	r3, [pc, #16]	; (801e6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e6cc:	6818      	ldr	r0, [r3, #0]
 801e6ce:	6803      	ldr	r3, [r0, #0]
 801e6d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e6d2:	4798      	blx	r3
 801e6d4:	e750      	b.n	801e578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e6d6:	bf00      	nop
 801e6d8:	fffff800 	.word	0xfffff800
 801e6dc:	20012fc4 	.word	0x20012fc4
 801e6e0:	20012fbe 	.word	0x20012fbe

0801e6e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e6e4:	b4f0      	push	{r4, r5, r6, r7}
 801e6e6:	460c      	mov	r4, r1
 801e6e8:	4611      	mov	r1, r2
 801e6ea:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e6ee:	780f      	ldrb	r7, [r1, #0]
 801e6f0:	784e      	ldrb	r6, [r1, #1]
 801e6f2:	2f01      	cmp	r7, #1
 801e6f4:	461a      	mov	r2, r3
 801e6f6:	9b04      	ldr	r3, [sp, #16]
 801e6f8:	d036      	beq.n	801e768 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e6fa:	d31e      	bcc.n	801e73a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e6fc:	2f02      	cmp	r7, #2
 801e6fe:	d14a      	bne.n	801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e700:	2e03      	cmp	r6, #3
 801e702:	d848      	bhi.n	801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e704:	e8df f006 	tbb	[pc, r6]
 801e708:	16140702 	.word	0x16140702
 801e70c:	9504      	str	r5, [sp, #16]
 801e70e:	4620      	mov	r0, r4
 801e710:	bcf0      	pop	{r4, r5, r6, r7}
 801e712:	f7ff be09 	b.w	801e328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e716:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e718:	2800      	cmp	r0, #0
 801e71a:	d03c      	beq.n	801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e71c:	6806      	ldr	r6, [r0, #0]
 801e71e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e722:	68b5      	ldr	r5, [r6, #8]
 801e724:	4613      	mov	r3, r2
 801e726:	46ac      	mov	ip, r5
 801e728:	460a      	mov	r2, r1
 801e72a:	4621      	mov	r1, r4
 801e72c:	bcf0      	pop	{r4, r5, r6, r7}
 801e72e:	4760      	bx	ip
 801e730:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e732:	e7f1      	b.n	801e718 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e734:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e738:	e7ee      	b.n	801e718 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e73a:	2e03      	cmp	r6, #3
 801e73c:	d82b      	bhi.n	801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e73e:	e8df f006 	tbb	[pc, r6]
 801e742:	0702      	.short	0x0702
 801e744:	100e      	.short	0x100e
 801e746:	9504      	str	r5, [sp, #16]
 801e748:	4620      	mov	r0, r4
 801e74a:	bcf0      	pop	{r4, r5, r6, r7}
 801e74c:	f7ff bd06 	b.w	801e15c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e750:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e752:	b300      	cbz	r0, 801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e754:	6806      	ldr	r6, [r0, #0]
 801e756:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e75a:	68f5      	ldr	r5, [r6, #12]
 801e75c:	e7e2      	b.n	801e724 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e75e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e760:	e7f7      	b.n	801e752 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e762:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e766:	e7f4      	b.n	801e752 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e768:	2e03      	cmp	r6, #3
 801e76a:	d814      	bhi.n	801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e76c:	e8df f006 	tbb	[pc, r6]
 801e770:	100e0702 	.word	0x100e0702
 801e774:	9504      	str	r5, [sp, #16]
 801e776:	4620      	mov	r0, r4
 801e778:	bcf0      	pop	{r4, r5, r6, r7}
 801e77a:	f7ff bea1 	b.w	801e4c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e77e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e780:	b148      	cbz	r0, 801e796 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e782:	6806      	ldr	r6, [r0, #0]
 801e784:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e788:	6935      	ldr	r5, [r6, #16]
 801e78a:	e7cb      	b.n	801e724 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e78c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e78e:	e7f7      	b.n	801e780 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e790:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e794:	e7f4      	b.n	801e780 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e796:	bcf0      	pop	{r4, r5, r6, r7}
 801e798:	4770      	bx	lr
	...

0801e79c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7a0:	4604      	mov	r4, r0
 801e7a2:	b087      	sub	sp, #28
 801e7a4:	6810      	ldr	r0, [r2, #0]
 801e7a6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e7aa:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e7ae:	460e      	mov	r6, r1
 801e7b0:	6851      	ldr	r1, [r2, #4]
 801e7b2:	ad02      	add	r5, sp, #8
 801e7b4:	c503      	stmia	r5!, {r0, r1}
 801e7b6:	6818      	ldr	r0, [r3, #0]
 801e7b8:	6859      	ldr	r1, [r3, #4]
 801e7ba:	ad04      	add	r5, sp, #16
 801e7bc:	4617      	mov	r7, r2
 801e7be:	c503      	stmia	r5!, {r0, r1}
 801e7c0:	a802      	add	r0, sp, #8
 801e7c2:	f7f7 f975 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7c6:	4639      	mov	r1, r7
 801e7c8:	a804      	add	r0, sp, #16
 801e7ca:	f7f7 f9b5 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e7d2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e7d6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e7da:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e7de:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e7e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e7e6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e7ea:	440e      	add	r6, r1
 801e7ec:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e7f0:	440a      	add	r2, r1
 801e7f2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e7f6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e7fa:	4413      	add	r3, r2
 801e7fc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e800:	4b77      	ldr	r3, [pc, #476]	; (801e9e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e802:	6818      	ldr	r0, [r3, #0]
 801e804:	6803      	ldr	r3, [r0, #0]
 801e806:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e808:	4798      	blx	r3
 801e80a:	f8b9 b000 	ldrh.w	fp, [r9]
 801e80e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e812:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e816:	fb0b 2303 	mla	r3, fp, r3, r2
 801e81a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e81e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e822:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e826:	fb05 f50b 	mul.w	r5, r5, fp
 801e82a:	9300      	str	r3, [sp, #0]
 801e82c:	d069      	beq.n	801e902 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e82e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e832:	4558      	cmp	r0, fp
 801e834:	f080 80cc 	bcs.w	801e9d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e838:	9b00      	ldr	r3, [sp, #0]
 801e83a:	18c3      	adds	r3, r0, r3
 801e83c:	9301      	str	r3, [sp, #4]
 801e83e:	4631      	mov	r1, r6
 801e840:	9b01      	ldr	r3, [sp, #4]
 801e842:	4298      	cmp	r0, r3
 801e844:	d24f      	bcs.n	801e8e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e846:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e84a:	2a00      	cmp	r2, #0
 801e84c:	d048      	beq.n	801e8e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e84e:	fb0a f202 	mul.w	r2, sl, r2
 801e852:	1c53      	adds	r3, r2, #1
 801e854:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e858:	121b      	asrs	r3, r3, #8
 801e85a:	d041      	beq.n	801e8e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e85c:	8802      	ldrh	r2, [r0, #0]
 801e85e:	f8b4 c000 	ldrh.w	ip, [r4]
 801e862:	b29e      	uxth	r6, r3
 801e864:	1215      	asrs	r5, r2, #8
 801e866:	43db      	mvns	r3, r3
 801e868:	b2db      	uxtb	r3, r3
 801e86a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e86e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e872:	fb15 f503 	smulbb	r5, r5, r3
 801e876:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e87a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e87e:	00d2      	lsls	r2, r2, #3
 801e880:	fb07 5706 	mla	r7, r7, r6, r5
 801e884:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e888:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e88c:	b2d2      	uxtb	r2, r2
 801e88e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e892:	b2bf      	uxth	r7, r7
 801e894:	fb1e fe03 	smulbb	lr, lr, r3
 801e898:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e89c:	fa5f fc8c 	uxtb.w	ip, ip
 801e8a0:	fb12 f203 	smulbb	r2, r2, r3
 801e8a4:	fb05 e506 	mla	r5, r5, r6, lr
 801e8a8:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e8ac:	f107 0e01 	add.w	lr, r7, #1
 801e8b0:	fa1f fc8c 	uxth.w	ip, ip
 801e8b4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e8b8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e8bc:	f10c 0701 	add.w	r7, ip, #1
 801e8c0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e8c4:	b2ad      	uxth	r5, r5
 801e8c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e8ca:	ea47 070e 	orr.w	r7, r7, lr
 801e8ce:	f105 0e01 	add.w	lr, r5, #1
 801e8d2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e8d6:	096d      	lsrs	r5, r5, #5
 801e8d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e8dc:	432f      	orrs	r7, r5
 801e8de:	8007      	strh	r7, [r0, #0]
 801e8e0:	3002      	adds	r0, #2
 801e8e2:	3402      	adds	r4, #2
 801e8e4:	e7ac      	b.n	801e840 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e8e6:	f8b9 3000 	ldrh.w	r3, [r9]
 801e8ea:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e8ee:	eba3 0308 	sub.w	r3, r3, r8
 801e8f2:	eba6 0608 	sub.w	r6, r6, r8
 801e8f6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e8fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8fe:	440e      	add	r6, r1
 801e900:	e797      	b.n	801e832 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e902:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e906:	42a8      	cmp	r0, r5
 801e908:	d262      	bcs.n	801e9d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e90a:	9b00      	ldr	r3, [sp, #0]
 801e90c:	4631      	mov	r1, r6
 801e90e:	eb00 0b03 	add.w	fp, r0, r3
 801e912:	4558      	cmp	r0, fp
 801e914:	d24e      	bcs.n	801e9b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e916:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e91a:	b12b      	cbz	r3, 801e928 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e91c:	2bff      	cmp	r3, #255	; 0xff
 801e91e:	f8b4 e000 	ldrh.w	lr, [r4]
 801e922:	d104      	bne.n	801e92e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e924:	f8a0 e000 	strh.w	lr, [r0]
 801e928:	3002      	adds	r0, #2
 801e92a:	3402      	adds	r4, #2
 801e92c:	e7f1      	b.n	801e912 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e92e:	8802      	ldrh	r2, [r0, #0]
 801e930:	b29f      	uxth	r7, r3
 801e932:	1216      	asrs	r6, r2, #8
 801e934:	43db      	mvns	r3, r3
 801e936:	b2db      	uxtb	r3, r3
 801e938:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e93c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e940:	fb16 f603 	smulbb	r6, r6, r3
 801e944:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e948:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e94c:	00d2      	lsls	r2, r2, #3
 801e94e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e952:	b2d2      	uxtb	r2, r2
 801e954:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e958:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e95c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e960:	fb1a fa03 	smulbb	sl, sl, r3
 801e964:	fa1f fc8c 	uxth.w	ip, ip
 801e968:	fb12 f303 	smulbb	r3, r2, r3
 801e96c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e970:	fa5f fe8e 	uxtb.w	lr, lr
 801e974:	fb06 a607 	mla	r6, r6, r7, sl
 801e978:	f10c 0201 	add.w	r2, ip, #1
 801e97c:	fb0e 3307 	mla	r3, lr, r7, r3
 801e980:	b2b6      	uxth	r6, r6
 801e982:	b29b      	uxth	r3, r3
 801e984:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e988:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e98c:	f106 0a01 	add.w	sl, r6, #1
 801e990:	f103 0c01 	add.w	ip, r3, #1
 801e994:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e998:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e99c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e9a0:	0976      	lsrs	r6, r6, #5
 801e9a2:	ea4c 0c02 	orr.w	ip, ip, r2
 801e9a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e9aa:	ea4c 0c06 	orr.w	ip, ip, r6
 801e9ae:	f8a0 c000 	strh.w	ip, [r0]
 801e9b2:	e7b9      	b.n	801e928 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e9b4:	f8b9 3000 	ldrh.w	r3, [r9]
 801e9b8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e9bc:	eba3 0308 	sub.w	r3, r3, r8
 801e9c0:	eba6 0608 	sub.w	r6, r6, r8
 801e9c4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e9c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e9cc:	440e      	add	r6, r1
 801e9ce:	e79a      	b.n	801e906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e9d0:	4b03      	ldr	r3, [pc, #12]	; (801e9e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e9d2:	6818      	ldr	r0, [r3, #0]
 801e9d4:	6803      	ldr	r3, [r0, #0]
 801e9d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e9d8:	4798      	blx	r3
 801e9da:	b007      	add	sp, #28
 801e9dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9e0:	20012fc4 	.word	0x20012fc4
 801e9e4:	20012fbe 	.word	0x20012fbe

0801e9e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9ec:	b089      	sub	sp, #36	; 0x24
 801e9ee:	4682      	mov	sl, r0
 801e9f0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e9f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e9f6:	460f      	mov	r7, r1
 801e9f8:	4691      	mov	r9, r2
 801e9fa:	4698      	mov	r8, r3
 801e9fc:	2e00      	cmp	r6, #0
 801e9fe:	d03d      	beq.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea00:	4608      	mov	r0, r1
 801ea02:	f7fa fe59 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ea06:	4605      	mov	r5, r0
 801ea08:	4638      	mov	r0, r7
 801ea0a:	f7fa fe89 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ea0e:	f8ad 000e 	strh.w	r0, [sp, #14]
 801ea12:	4638      	mov	r0, r7
 801ea14:	f8ad 9008 	strh.w	r9, [sp, #8]
 801ea18:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ea1c:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ea20:	f7fa ff36 	bl	8019890 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ea24:	4605      	mov	r5, r0
 801ea26:	4638      	mov	r0, r7
 801ea28:	f7fa ff62 	bl	80198f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801ea2c:	4681      	mov	r9, r0
 801ea2e:	4638      	mov	r0, r7
 801ea30:	f7fa ffb2 	bl	8019998 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801ea34:	280b      	cmp	r0, #11
 801ea36:	d821      	bhi.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea38:	e8df f000 	tbb	[pc, r0]
 801ea3c:	2006aebe 	.word	0x2006aebe
 801ea40:	20202020 	.word	0x20202020
 801ea44:	b5202020 	.word	0xb5202020
 801ea48:	4bb0      	ldr	r3, [pc, #704]	; (801ed0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801ea4a:	6818      	ldr	r0, [r3, #0]
 801ea4c:	6803      	ldr	r3, [r0, #0]
 801ea4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ea50:	4798      	blx	r3
 801ea52:	2eff      	cmp	r6, #255	; 0xff
 801ea54:	d101      	bne.n	801ea5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801ea56:	0683      	lsls	r3, r0, #26
 801ea58:	d506      	bpl.n	801ea68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801ea5a:	4633      	mov	r3, r6
 801ea5c:	4622      	mov	r2, r4
 801ea5e:	a902      	add	r1, sp, #8
 801ea60:	4628      	mov	r0, r5
 801ea62:	f7ff f909 	bl	801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ea66:	e009      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ea68:	4638      	mov	r0, r7
 801ea6a:	f7fa fed9 	bl	8019820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ea6e:	b940      	cbnz	r0, 801ea82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801ea70:	4623      	mov	r3, r4
 801ea72:	aa02      	add	r2, sp, #8
 801ea74:	4629      	mov	r1, r5
 801ea76:	4650      	mov	r0, sl
 801ea78:	f7ff f9e4 	bl	801de44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ea7c:	b009      	add	sp, #36	; 0x24
 801ea7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea82:	f10d 0818 	add.w	r8, sp, #24
 801ea86:	4639      	mov	r1, r7
 801ea88:	4640      	mov	r0, r8
 801ea8a:	f7fa fe7d 	bl	8019788 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ea8e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ea92:	af04      	add	r7, sp, #16
 801ea94:	e887 0003 	stmia.w	r7, {r0, r1}
 801ea98:	4638      	mov	r0, r7
 801ea9a:	4621      	mov	r1, r4
 801ea9c:	f7f2 f8aa 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801eaa0:	4638      	mov	r0, r7
 801eaa2:	f7f2 f8ea 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801eaa6:	2800      	cmp	r0, #0
 801eaa8:	d1d7      	bne.n	801ea5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801eaaa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801eaae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801eab2:	4293      	cmp	r3, r2
 801eab4:	dd12      	ble.n	801eadc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801eab6:	1a9b      	subs	r3, r3, r2
 801eab8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801eabc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801eac0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801eac4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801eac8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801eacc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ead0:	4642      	mov	r2, r8
 801ead2:	4633      	mov	r3, r6
 801ead4:	a902      	add	r1, sp, #8
 801ead6:	4628      	mov	r0, r5
 801ead8:	f7ff f8ce 	bl	801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eadc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801eae0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801eae4:	4293      	cmp	r3, r2
 801eae6:	dd12      	ble.n	801eb0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801eae8:	1a9b      	subs	r3, r3, r2
 801eaea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801eaee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801eaf2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801eaf6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801eafa:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eafe:	f8ad 101e 	strh.w	r1, [sp, #30]
 801eb02:	23ff      	movs	r3, #255	; 0xff
 801eb04:	4642      	mov	r2, r8
 801eb06:	a902      	add	r1, sp, #8
 801eb08:	4628      	mov	r0, r5
 801eb0a:	f7ff f8b5 	bl	801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eb0e:	463b      	mov	r3, r7
 801eb10:	aa02      	add	r2, sp, #8
 801eb12:	4629      	mov	r1, r5
 801eb14:	4650      	mov	r0, sl
 801eb16:	f7ff f995 	bl	801de44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801eb1a:	88a2      	ldrh	r2, [r4, #4]
 801eb1c:	8823      	ldrh	r3, [r4, #0]
 801eb1e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801eb22:	4413      	add	r3, r2
 801eb24:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801eb28:	440a      	add	r2, r1
 801eb2a:	b29b      	uxth	r3, r3
 801eb2c:	b292      	uxth	r2, r2
 801eb2e:	b211      	sxth	r1, r2
 801eb30:	b218      	sxth	r0, r3
 801eb32:	4288      	cmp	r0, r1
 801eb34:	dd12      	ble.n	801eb5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801eb36:	1a9b      	subs	r3, r3, r2
 801eb38:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801eb3c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801eb40:	f8ad 1018 	strh.w	r1, [sp, #24]
 801eb44:	f8ad 301c 	strh.w	r3, [sp, #28]
 801eb48:	f8ad 001e 	strh.w	r0, [sp, #30]
 801eb4c:	23ff      	movs	r3, #255	; 0xff
 801eb4e:	4642      	mov	r2, r8
 801eb50:	a902      	add	r1, sp, #8
 801eb52:	4628      	mov	r0, r5
 801eb54:	f8ad 601a 	strh.w	r6, [sp, #26]
 801eb58:	f7ff f88e 	bl	801dc78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eb5c:	88e2      	ldrh	r2, [r4, #6]
 801eb5e:	8863      	ldrh	r3, [r4, #2]
 801eb60:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801eb64:	4413      	add	r3, r2
 801eb66:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801eb6a:	440a      	add	r2, r1
 801eb6c:	b29b      	uxth	r3, r3
 801eb6e:	b292      	uxth	r2, r2
 801eb70:	b211      	sxth	r1, r2
 801eb72:	b218      	sxth	r0, r3
 801eb74:	4288      	cmp	r0, r1
 801eb76:	dd81      	ble.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eb78:	1a9b      	subs	r3, r3, r2
 801eb7a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801eb7e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801eb82:	f8ad 301e 	strh.w	r3, [sp, #30]
 801eb86:	f8ad 6018 	strh.w	r6, [sp, #24]
 801eb8a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801eb8e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801eb92:	23ff      	movs	r3, #255	; 0xff
 801eb94:	4642      	mov	r2, r8
 801eb96:	e762      	b.n	801ea5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801eb98:	4633      	mov	r3, r6
 801eb9a:	4622      	mov	r2, r4
 801eb9c:	a902      	add	r1, sp, #8
 801eb9e:	4628      	mov	r0, r5
 801eba0:	f7ff f9c0 	bl	801df24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801eba4:	e76a      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801eba6:	e9cd 4600 	strd	r4, r6, [sp]
 801ebaa:	ab02      	add	r3, sp, #8
 801ebac:	464a      	mov	r2, r9
 801ebae:	4629      	mov	r1, r5
 801ebb0:	4650      	mov	r0, sl
 801ebb2:	f7ff fd97 	bl	801e6e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801ebb6:	e761      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ebb8:	4638      	mov	r0, r7
 801ebba:	f7fa fe31 	bl	8019820 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ebbe:	b950      	cbnz	r0, 801ebd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801ebc0:	e9cd 6000 	strd	r6, r0, [sp]
 801ebc4:	f8da 3000 	ldr.w	r3, [sl]
 801ebc8:	aa02      	add	r2, sp, #8
 801ebca:	68de      	ldr	r6, [r3, #12]
 801ebcc:	4629      	mov	r1, r5
 801ebce:	4623      	mov	r3, r4
 801ebd0:	4650      	mov	r0, sl
 801ebd2:	47b0      	blx	r6
 801ebd4:	e752      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ebd6:	f10d 0818 	add.w	r8, sp, #24
 801ebda:	4639      	mov	r1, r7
 801ebdc:	4640      	mov	r0, r8
 801ebde:	f7fa fdd3 	bl	8019788 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ebe2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801ebe6:	af04      	add	r7, sp, #16
 801ebe8:	e887 0003 	stmia.w	r7, {r0, r1}
 801ebec:	4638      	mov	r0, r7
 801ebee:	4621      	mov	r1, r4
 801ebf0:	f7f2 f800 	bl	8010bf4 <_ZN8touchgfx4RectaNERKS0_>
 801ebf4:	4638      	mov	r0, r7
 801ebf6:	f7f2 f840 	bl	8010c7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801ebfa:	b138      	cbz	r0, 801ec0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801ebfc:	9600      	str	r6, [sp, #0]
 801ebfe:	4623      	mov	r3, r4
 801ec00:	aa02      	add	r2, sp, #8
 801ec02:	4649      	mov	r1, r9
 801ec04:	4628      	mov	r0, r5
 801ec06:	f7ff fdc9 	bl	801e79c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ec0a:	e737      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ec0c:	e9cd 6000 	strd	r6, r0, [sp]
 801ec10:	f8da 3000 	ldr.w	r3, [sl]
 801ec14:	aa02      	add	r2, sp, #8
 801ec16:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801ec1a:	4629      	mov	r1, r5
 801ec1c:	463b      	mov	r3, r7
 801ec1e:	4650      	mov	r0, sl
 801ec20:	47d8      	blx	fp
 801ec22:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ec26:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ec2a:	4293      	cmp	r3, r2
 801ec2c:	dd13      	ble.n	801ec56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801ec2e:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ec32:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ec36:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ec3a:	1a9b      	subs	r3, r3, r2
 801ec3c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ec40:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ec44:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ec48:	9600      	str	r6, [sp, #0]
 801ec4a:	4643      	mov	r3, r8
 801ec4c:	aa02      	add	r2, sp, #8
 801ec4e:	4649      	mov	r1, r9
 801ec50:	4628      	mov	r0, r5
 801ec52:	f7ff fda3 	bl	801e79c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ec56:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ec5a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ec5e:	4293      	cmp	r3, r2
 801ec60:	dd13      	ble.n	801ec8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801ec62:	1a9b      	subs	r3, r3, r2
 801ec64:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ec68:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ec6c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ec70:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ec74:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ec78:	f8ad 101e 	strh.w	r1, [sp, #30]
 801ec7c:	9600      	str	r6, [sp, #0]
 801ec7e:	4643      	mov	r3, r8
 801ec80:	aa02      	add	r2, sp, #8
 801ec82:	4649      	mov	r1, r9
 801ec84:	4628      	mov	r0, r5
 801ec86:	f7ff fd89 	bl	801e79c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ec8a:	88a2      	ldrh	r2, [r4, #4]
 801ec8c:	8823      	ldrh	r3, [r4, #0]
 801ec8e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801ec92:	4413      	add	r3, r2
 801ec94:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ec98:	440a      	add	r2, r1
 801ec9a:	b29b      	uxth	r3, r3
 801ec9c:	b292      	uxth	r2, r2
 801ec9e:	b211      	sxth	r1, r2
 801eca0:	b218      	sxth	r0, r3
 801eca2:	4288      	cmp	r0, r1
 801eca4:	dd13      	ble.n	801ecce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801eca6:	1a9b      	subs	r3, r3, r2
 801eca8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801ecac:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801ecb0:	f8ad 1018 	strh.w	r1, [sp, #24]
 801ecb4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ecb8:	f8ad 001e 	strh.w	r0, [sp, #30]
 801ecbc:	9600      	str	r6, [sp, #0]
 801ecbe:	4643      	mov	r3, r8
 801ecc0:	aa02      	add	r2, sp, #8
 801ecc2:	4649      	mov	r1, r9
 801ecc4:	4628      	mov	r0, r5
 801ecc6:	f8ad 701a 	strh.w	r7, [sp, #26]
 801ecca:	f7ff fd67 	bl	801e79c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801ecce:	88e2      	ldrh	r2, [r4, #6]
 801ecd0:	8863      	ldrh	r3, [r4, #2]
 801ecd2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801ecd6:	4413      	add	r3, r2
 801ecd8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801ecdc:	440a      	add	r2, r1
 801ecde:	b29b      	uxth	r3, r3
 801ece0:	b292      	uxth	r2, r2
 801ece2:	b211      	sxth	r1, r2
 801ece4:	b218      	sxth	r0, r3
 801ece6:	4288      	cmp	r0, r1
 801ece8:	f77f aec8 	ble.w	801ea7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ecec:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ecf0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ecf4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801ecf8:	1a9b      	subs	r3, r3, r2
 801ecfa:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ecfe:	f8ad 101a 	strh.w	r1, [sp, #26]
 801ed02:	f8ad 001c 	strh.w	r0, [sp, #28]
 801ed06:	9600      	str	r6, [sp, #0]
 801ed08:	4643      	mov	r3, r8
 801ed0a:	e779      	b.n	801ec00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801ed0c:	20012fc4 	.word	0x20012fc4

0801ed10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801ed10:	b180      	cbz	r0, 801ed34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801ed12:	2903      	cmp	r1, #3
 801ed14:	d81c      	bhi.n	801ed50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ed16:	e8df f001 	tbb	[pc, r1]
 801ed1a:	1d02      	.short	0x1d02
 801ed1c:	1f08      	.short	0x1f08
 801ed1e:	4b10      	ldr	r3, [pc, #64]	; (801ed60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ed20:	8818      	ldrh	r0, [r3, #0]
 801ed22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ed26:	4240      	negs	r0, r0
 801ed28:	4770      	bx	lr
 801ed2a:	4b0d      	ldr	r3, [pc, #52]	; (801ed60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ed2c:	8818      	ldrh	r0, [r3, #0]
 801ed2e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ed32:	4770      	bx	lr
 801ed34:	2903      	cmp	r1, #3
 801ed36:	d80b      	bhi.n	801ed50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ed38:	a301      	add	r3, pc, #4	; (adr r3, 801ed40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ed3a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ed3e:	bf00      	nop
 801ed40:	0801ed55 	.word	0x0801ed55
 801ed44:	0801ed2b 	.word	0x0801ed2b
 801ed48:	0801ed59 	.word	0x0801ed59
 801ed4c:	0801ed1f 	.word	0x0801ed1f
 801ed50:	2000      	movs	r0, #0
 801ed52:	4770      	bx	lr
 801ed54:	2001      	movs	r0, #1
 801ed56:	4770      	bx	lr
 801ed58:	f04f 30ff 	mov.w	r0, #4294967295
 801ed5c:	4770      	bx	lr
 801ed5e:	bf00      	nop
 801ed60:	20012fbe 	.word	0x20012fbe

0801ed64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ed64:	b180      	cbz	r0, 801ed88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ed66:	2903      	cmp	r1, #3
 801ed68:	d81c      	bhi.n	801eda4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ed6a:	e8df f001 	tbb	[pc, r1]
 801ed6e:	021d      	.short	0x021d
 801ed70:	071f      	.short	0x071f
 801ed72:	4b10      	ldr	r3, [pc, #64]	; (801edb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ed74:	8818      	ldrh	r0, [r3, #0]
 801ed76:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ed7a:	4770      	bx	lr
 801ed7c:	4b0d      	ldr	r3, [pc, #52]	; (801edb4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ed7e:	8818      	ldrh	r0, [r3, #0]
 801ed80:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ed84:	4240      	negs	r0, r0
 801ed86:	4770      	bx	lr
 801ed88:	2903      	cmp	r1, #3
 801ed8a:	d80b      	bhi.n	801eda4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ed8c:	a301      	add	r3, pc, #4	; (adr r3, 801ed94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ed8e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ed92:	bf00      	nop
 801ed94:	0801ed73 	.word	0x0801ed73
 801ed98:	0801edad 	.word	0x0801edad
 801ed9c:	0801ed7d 	.word	0x0801ed7d
 801eda0:	0801eda9 	.word	0x0801eda9
 801eda4:	2000      	movs	r0, #0
 801eda6:	4770      	bx	lr
 801eda8:	2001      	movs	r0, #1
 801edaa:	4770      	bx	lr
 801edac:	f04f 30ff 	mov.w	r0, #4294967295
 801edb0:	4770      	bx	lr
 801edb2:	bf00      	nop
 801edb4:	20012fbe 	.word	0x20012fbe

0801edb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801edb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edbc:	b099      	sub	sp, #100	; 0x64
 801edbe:	910b      	str	r1, [sp, #44]	; 0x2c
 801edc0:	a914      	add	r1, sp, #80	; 0x50
 801edc2:	e881 000c 	stmia.w	r1, {r2, r3}
 801edc6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801edca:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801edce:	f891 900d 	ldrb.w	r9, [r1, #13]
 801edd2:	9309      	str	r3, [sp, #36]	; 0x24
 801edd4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801edd8:	9310      	str	r3, [sp, #64]	; 0x40
 801edda:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801edde:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ede2:	930c      	str	r3, [sp, #48]	; 0x30
 801ede4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ede8:	798f      	ldrb	r7, [r1, #6]
 801edea:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801edee:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801edf2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801edf6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801edfa:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801edfe:	431f      	orrs	r7, r3
 801ee00:	f000 8195 	beq.w	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee04:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ee08:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ee0c:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ee10:	ea59 0903 	orrs.w	r9, r9, r3
 801ee14:	f000 818b 	beq.w	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee18:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ee1c:	b29b      	uxth	r3, r3
 801ee1e:	2d00      	cmp	r5, #0
 801ee20:	f000 812e 	beq.w	801f080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ee24:	1aed      	subs	r5, r5, r3
 801ee26:	b2ad      	uxth	r5, r5
 801ee28:	042b      	lsls	r3, r5, #16
 801ee2a:	d502      	bpl.n	801ee32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ee2c:	1b64      	subs	r4, r4, r5
 801ee2e:	b224      	sxth	r4, r4
 801ee30:	2500      	movs	r5, #0
 801ee32:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ee36:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801ee3a:	428c      	cmp	r4, r1
 801ee3c:	b28b      	uxth	r3, r1
 801ee3e:	bfbf      	itttt	lt
 801ee40:	18ed      	addlt	r5, r5, r3
 801ee42:	1b2c      	sublt	r4, r5, r4
 801ee44:	b2a5      	uxthlt	r5, r4
 801ee46:	460c      	movlt	r4, r1
 801ee48:	8891      	ldrh	r1, [r2, #4]
 801ee4a:	440b      	add	r3, r1
 801ee4c:	b21b      	sxth	r3, r3
 801ee4e:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee50:	88d3      	ldrh	r3, [r2, #6]
 801ee52:	8852      	ldrh	r2, [r2, #2]
 801ee54:	4413      	add	r3, r2
 801ee56:	b21b      	sxth	r3, r3
 801ee58:	930d      	str	r3, [sp, #52]	; 0x34
 801ee5a:	4bbe      	ldr	r3, [pc, #760]	; (801f154 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801ee5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ee5e:	f893 b000 	ldrb.w	fp, [r3]
 801ee62:	f10b 3cff 	add.w	ip, fp, #4294967295
 801ee66:	f1dc 0300 	rsbs	r3, ip, #0
 801ee6a:	eb43 030c 	adc.w	r3, r3, ip
 801ee6e:	930e      	str	r3, [sp, #56]	; 0x38
 801ee70:	4621      	mov	r1, r4
 801ee72:	4653      	mov	r3, sl
 801ee74:	a814      	add	r0, sp, #80	; 0x50
 801ee76:	f7f6 fc90 	bl	801579a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801ee7a:	4621      	mov	r1, r4
 801ee7c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801ee80:	4653      	mov	r3, sl
 801ee82:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ee84:	a814      	add	r0, sp, #80	; 0x50
 801ee86:	f7f6 fca5 	bl	80157d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801ee8a:	a918      	add	r1, sp, #96	; 0x60
 801ee8c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801ee90:	a817      	add	r0, sp, #92	; 0x5c
 801ee92:	f7f6 fdcb 	bl	8015a2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801ee96:	f1ba 0f00 	cmp.w	sl, #0
 801ee9a:	f040 80f4 	bne.w	801f086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801ee9e:	f1bb 0f01 	cmp.w	fp, #1
 801eea2:	f040 80f8 	bne.w	801f096 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801eea6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eea8:	2b00      	cmp	r3, #0
 801eeaa:	f040 8145 	bne.w	801f138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801eeae:	b2ba      	uxth	r2, r7
 801eeb0:	b905      	cbnz	r5, 801eeb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801eeb2:	b16e      	cbz	r6, 801eed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801eeb4:	fb06 5302 	mla	r3, r6, r2, r5
 801eeb8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801eeba:	fb08 f303 	mul.w	r3, r8, r3
 801eebe:	4631      	mov	r1, r6
 801eec0:	f003 0607 	and.w	r6, r3, #7
 801eec4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801eec8:	9328      	str	r3, [sp, #160]	; 0xa0
 801eeca:	eba9 0301 	sub.w	r3, r9, r1
 801eece:	930a      	str	r3, [sp, #40]	; 0x28
 801eed0:	4651      	mov	r1, sl
 801eed2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801eed4:	f7ff ff1c 	bl	801ed10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801eed8:	4681      	mov	r9, r0
 801eeda:	980e      	ldr	r0, [sp, #56]	; 0x38
 801eedc:	f7ff ff42 	bl	801ed64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801eee0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eee2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eee4:	eba3 0a01 	sub.w	sl, r3, r1
 801eee8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eeea:	459a      	cmp	sl, r3
 801eeec:	bfa8      	it	ge
 801eeee:	469a      	movge	sl, r3
 801eef0:	f1ba 0f00 	cmp.w	sl, #0
 801eef4:	4683      	mov	fp, r0
 801eef6:	f340 811a 	ble.w	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eefa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eefc:	1b64      	subs	r4, r4, r5
 801eefe:	1b1c      	subs	r4, r3, r4
 801ef00:	42bc      	cmp	r4, r7
 801ef02:	bfd4      	ite	le
 801ef04:	ebc5 0504 	rsble	r5, r5, r4
 801ef08:	ebc5 0507 	rsbgt	r5, r5, r7
 801ef0c:	2d00      	cmp	r5, #0
 801ef0e:	f340 810e 	ble.w	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ef12:	1b52      	subs	r2, r2, r5
 801ef14:	fb08 f302 	mul.w	r3, r8, r2
 801ef18:	930f      	str	r3, [sp, #60]	; 0x3c
 801ef1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ef1c:	2b00      	cmp	r3, #0
 801ef1e:	f040 8116 	bne.w	801f14e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ef22:	4b8d      	ldr	r3, [pc, #564]	; (801f158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ef24:	6818      	ldr	r0, [r3, #0]
 801ef26:	6803      	ldr	r3, [r0, #0]
 801ef28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ef2a:	4798      	blx	r3
 801ef2c:	2301      	movs	r3, #1
 801ef2e:	fa03 f308 	lsl.w	r3, r3, r8
 801ef32:	4a8a      	ldr	r2, [pc, #552]	; (801f15c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ef34:	3b01      	subs	r3, #1
 801ef36:	b2db      	uxtb	r3, r3
 801ef38:	8811      	ldrh	r1, [r2, #0]
 801ef3a:	930e      	str	r3, [sp, #56]	; 0x38
 801ef3c:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ef40:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ef44:	fb01 2303 	mla	r3, r1, r3, r2
 801ef48:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ef4c:	930a      	str	r3, [sp, #40]	; 0x28
 801ef4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ef50:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ef54:	9313      	str	r3, [sp, #76]	; 0x4c
 801ef56:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ef58:	0a19      	lsrs	r1, r3, #8
 801ef5a:	b2cb      	uxtb	r3, r1
 801ef5c:	9312      	str	r3, [sp, #72]	; 0x48
 801ef5e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ef60:	b2db      	uxtb	r3, r3
 801ef62:	9311      	str	r3, [sp, #68]	; 0x44
 801ef64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ef66:	095a      	lsrs	r2, r3, #5
 801ef68:	4b7d      	ldr	r3, [pc, #500]	; (801f160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ef6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef6e:	400b      	ands	r3, r1
 801ef70:	4313      	orrs	r3, r2
 801ef72:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ef74:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ef78:	4313      	orrs	r3, r2
 801ef7a:	b29b      	uxth	r3, r3
 801ef7c:	9310      	str	r3, [sp, #64]	; 0x40
 801ef7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ef80:	781a      	ldrb	r2, [r3, #0]
 801ef82:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ef86:	4132      	asrs	r2, r6
 801ef88:	fb05 b919 	mls	r9, r5, r9, fp
 801ef8c:	fb03 fb05 	mul.w	fp, r3, r5
 801ef90:	b2d2      	uxtb	r2, r2
 801ef92:	930d      	str	r3, [sp, #52]	; 0x34
 801ef94:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ef98:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ef9c:	f0c0 80f5 	bcc.w	801f18a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801efa0:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801efa4:	46ae      	mov	lr, r5
 801efa6:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801efaa:	f0c0 80dd 	bcc.w	801f168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801efae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efb0:	4013      	ands	r3, r2
 801efb2:	d055      	beq.n	801f060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801efb4:	20ff      	movs	r0, #255	; 0xff
 801efb6:	990e      	ldr	r1, [sp, #56]	; 0x38
 801efb8:	fb90 f1f1 	sdiv	r1, r0, r1
 801efbc:	434b      	muls	r3, r1
 801efbe:	2bfe      	cmp	r3, #254	; 0xfe
 801efc0:	dd03      	ble.n	801efca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801efc2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801efc4:	4281      	cmp	r1, r0
 801efc6:	f000 80cd 	beq.w	801f164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801efca:	990c      	ldr	r1, [sp, #48]	; 0x30
 801efcc:	f8bc 4000 	ldrh.w	r4, [ip]
 801efd0:	fb11 f303 	smulbb	r3, r1, r3
 801efd4:	b29b      	uxth	r3, r3
 801efd6:	1c59      	adds	r1, r3, #1
 801efd8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801efdc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801efe0:	b29f      	uxth	r7, r3
 801efe2:	43db      	mvns	r3, r3
 801efe4:	b2db      	uxtb	r3, r3
 801efe6:	9309      	str	r3, [sp, #36]	; 0x24
 801efe8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801efea:	1220      	asrs	r0, r4, #8
 801efec:	fb13 f907 	smulbb	r9, r3, r7
 801eff0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eff6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801effa:	fb00 9003 	mla	r0, r0, r3, r9
 801effe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f000:	10e1      	asrs	r1, r4, #3
 801f002:	fb13 f907 	smulbb	r9, r3, r7
 801f006:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f00a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f00c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f010:	fb01 9103 	mla	r1, r1, r3, r9
 801f014:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f016:	00e4      	lsls	r4, r4, #3
 801f018:	fb13 f707 	smulbb	r7, r3, r7
 801f01c:	b2e4      	uxtb	r4, r4
 801f01e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f020:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f024:	fb04 7403 	mla	r4, r4, r3, r7
 801f028:	b280      	uxth	r0, r0
 801f02a:	b2a4      	uxth	r4, r4
 801f02c:	1c43      	adds	r3, r0, #1
 801f02e:	f104 0901 	add.w	r9, r4, #1
 801f032:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f036:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f03a:	b289      	uxth	r1, r1
 801f03c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f040:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f044:	ea49 0000 	orr.w	r0, r9, r0
 801f048:	f101 0901 	add.w	r9, r1, #1
 801f04c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f050:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f054:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f058:	ea40 0009 	orr.w	r0, r0, r9
 801f05c:	f8ac 0000 	strh.w	r0, [ip]
 801f060:	4446      	add	r6, r8
 801f062:	b2b6      	uxth	r6, r6
 801f064:	2e07      	cmp	r6, #7
 801f066:	bf81      	itttt	hi
 801f068:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801f06a:	785a      	ldrbhi	r2, [r3, #1]
 801f06c:	3301      	addhi	r3, #1
 801f06e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801f070:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f072:	bf9a      	itte	ls
 801f074:	fa42 f208 	asrls.w	r2, r2, r8
 801f078:	b2d2      	uxtbls	r2, r2
 801f07a:	2600      	movhi	r6, #0
 801f07c:	449c      	add	ip, r3
 801f07e:	e792      	b.n	801efa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f080:	441c      	add	r4, r3
 801f082:	b224      	sxth	r4, r4
 801f084:	e6d5      	b.n	801ee32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f086:	f1ba 0f01 	cmp.w	sl, #1
 801f08a:	f47f af0c 	bne.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f08e:	f1bb 0f01 	cmp.w	fp, #1
 801f092:	f47f af08 	bne.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f096:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801f158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801f09a:	f8db 0000 	ldr.w	r0, [fp]
 801f09e:	6803      	ldr	r3, [r0, #0]
 801f0a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f0a2:	4798      	blx	r3
 801f0a4:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801f0a8:	465a      	mov	r2, fp
 801f0aa:	d006      	beq.n	801f0ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f0ac:	f1b8 0f04 	cmp.w	r8, #4
 801f0b0:	d140      	bne.n	801f134 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f0b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f0b4:	3300      	adds	r3, #0
 801f0b6:	bf18      	it	ne
 801f0b8:	2301      	movne	r3, #1
 801f0ba:	0580      	lsls	r0, r0, #22
 801f0bc:	d56e      	bpl.n	801f19c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f0be:	f1b8 0f08 	cmp.w	r8, #8
 801f0c2:	d16b      	bne.n	801f19c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f0c4:	2b00      	cmp	r3, #0
 801f0c6:	bf0c      	ite	eq
 801f0c8:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801f0cc:	f44f 7180 	movne.w	r1, #256	; 0x100
 801f0d0:	2d00      	cmp	r5, #0
 801f0d2:	f47f aee8 	bne.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0d6:	2e00      	cmp	r6, #0
 801f0d8:	f47f aee5 	bne.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0dc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f0de:	19e3      	adds	r3, r4, r7
 801f0e0:	4283      	cmp	r3, r0
 801f0e2:	f73f aee0 	bgt.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0e8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f0ea:	444b      	add	r3, r9
 801f0ec:	4283      	cmp	r3, r0
 801f0ee:	f73f aeda 	bgt.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f0f2:	6810      	ldr	r0, [r2, #0]
 801f0f4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801f0f8:	6804      	ldr	r4, [r0, #0]
 801f0fa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801f0fe:	b2bf      	uxth	r7, r7
 801f100:	f1b8 0f08 	cmp.w	r8, #8
 801f104:	f04f 0500 	mov.w	r5, #0
 801f108:	bf18      	it	ne
 801f10a:	3701      	addne	r7, #1
 801f10c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f110:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f112:	9104      	str	r1, [sp, #16]
 801f114:	bf18      	it	ne
 801f116:	f027 0701 	bicne.w	r7, r7, #1
 801f11a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f11c:	bf18      	it	ne
 801f11e:	b2bf      	uxthne	r7, r7
 801f120:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f124:	e9cd 7900 	strd	r7, r9, [sp]
 801f128:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f12a:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801f12c:	47a0      	blx	r4
 801f12e:	b019      	add	sp, #100	; 0x64
 801f130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f134:	2300      	movs	r3, #0
 801f136:	e7c0      	b.n	801f0ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f138:	2208      	movs	r2, #8
 801f13a:	fb92 f3f8 	sdiv	r3, r2, r8
 801f13e:	1e5a      	subs	r2, r3, #1
 801f140:	443a      	add	r2, r7
 801f142:	fb92 f2f3 	sdiv	r2, r2, r3
 801f146:	fb12 f203 	smulbb	r2, r2, r3
 801f14a:	b292      	uxth	r2, r2
 801f14c:	e6b0      	b.n	801eeb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f14e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f150:	e6ec      	b.n	801ef2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f152:	bf00      	nop
 801f154:	20012fbc 	.word	0x20012fbc
 801f158:	20012fc4 	.word	0x20012fc4
 801f15c:	20012fbe 	.word	0x20012fbe
 801f160:	00fff800 	.word	0x00fff800
 801f164:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f166:	e779      	b.n	801f05c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f168:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f16a:	b153      	cbz	r3, 801f182 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f16c:	441e      	add	r6, r3
 801f16e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f170:	b2b6      	uxth	r6, r6
 801f172:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f176:	f006 0607 	and.w	r6, r6, #7
 801f17a:	781a      	ldrb	r2, [r3, #0]
 801f17c:	9328      	str	r3, [sp, #160]	; 0xa0
 801f17e:	4132      	asrs	r2, r6
 801f180:	b2d2      	uxtb	r2, r2
 801f182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f184:	445b      	add	r3, fp
 801f186:	930a      	str	r3, [sp, #40]	; 0x28
 801f188:	e706      	b.n	801ef98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f18a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f18c:	2b00      	cmp	r3, #0
 801f18e:	d1ce      	bne.n	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f190:	4b05      	ldr	r3, [pc, #20]	; (801f1a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f192:	6818      	ldr	r0, [r3, #0]
 801f194:	6803      	ldr	r3, [r0, #0]
 801f196:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f198:	4798      	blx	r3
 801f19a:	e7c8      	b.n	801f12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f19c:	2b00      	cmp	r3, #0
 801f19e:	f43f ae82 	beq.w	801eea6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f1a2:	f44f 7180 	mov.w	r1, #256	; 0x100
 801f1a6:	e793      	b.n	801f0d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f1a8:	20012fc4 	.word	0x20012fc4

0801f1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f1ac:	b538      	push	{r3, r4, r5, lr}
 801f1ae:	4c15      	ldr	r4, [pc, #84]	; (801f204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f1b0:	7823      	ldrb	r3, [r4, #0]
 801f1b2:	f3bf 8f5b 	dmb	ish
 801f1b6:	07da      	lsls	r2, r3, #31
 801f1b8:	4605      	mov	r5, r0
 801f1ba:	d40b      	bmi.n	801f1d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f1bc:	4620      	mov	r0, r4
 801f1be:	f00a fee2 	bl	8029f86 <__cxa_guard_acquire>
 801f1c2:	b138      	cbz	r0, 801f1d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f1c4:	4620      	mov	r0, r4
 801f1c6:	f00a feea 	bl	8029f9e <__cxa_guard_release>
 801f1ca:	4a0f      	ldr	r2, [pc, #60]	; (801f208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f1cc:	490f      	ldr	r1, [pc, #60]	; (801f20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f1ce:	4810      	ldr	r0, [pc, #64]	; (801f210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f1d0:	f00a fed2 	bl	8029f78 <__aeabi_atexit>
 801f1d4:	4c0f      	ldr	r4, [pc, #60]	; (801f214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f1d6:	7823      	ldrb	r3, [r4, #0]
 801f1d8:	f3bf 8f5b 	dmb	ish
 801f1dc:	07db      	lsls	r3, r3, #31
 801f1de:	d40b      	bmi.n	801f1f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f1e0:	4620      	mov	r0, r4
 801f1e2:	f00a fed0 	bl	8029f86 <__cxa_guard_acquire>
 801f1e6:	b138      	cbz	r0, 801f1f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f1e8:	4620      	mov	r0, r4
 801f1ea:	f00a fed8 	bl	8029f9e <__cxa_guard_release>
 801f1ee:	4a06      	ldr	r2, [pc, #24]	; (801f208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f1f0:	4909      	ldr	r1, [pc, #36]	; (801f218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f1f2:	480a      	ldr	r0, [pc, #40]	; (801f21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f1f4:	f00a fec0 	bl	8029f78 <__aeabi_atexit>
 801f1f8:	4b05      	ldr	r3, [pc, #20]	; (801f210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f1fa:	612b      	str	r3, [r5, #16]
 801f1fc:	4b07      	ldr	r3, [pc, #28]	; (801f21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f1fe:	616b      	str	r3, [r5, #20]
 801f200:	bd38      	pop	{r3, r4, r5, pc}
 801f202:	bf00      	nop
 801f204:	200130a4 	.word	0x200130a4
 801f208:	20000000 	.word	0x20000000
 801f20c:	0801bfaf 	.word	0x0801bfaf
 801f210:	200000d4 	.word	0x200000d4
 801f214:	200130a8 	.word	0x200130a8
 801f218:	0801bfad 	.word	0x0801bfad
 801f21c:	200000d8 	.word	0x200000d8

0801f220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f220:	b538      	push	{r3, r4, r5, lr}
 801f222:	4c15      	ldr	r4, [pc, #84]	; (801f278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f224:	7823      	ldrb	r3, [r4, #0]
 801f226:	f3bf 8f5b 	dmb	ish
 801f22a:	07da      	lsls	r2, r3, #31
 801f22c:	4605      	mov	r5, r0
 801f22e:	d40b      	bmi.n	801f248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f230:	4620      	mov	r0, r4
 801f232:	f00a fea8 	bl	8029f86 <__cxa_guard_acquire>
 801f236:	b138      	cbz	r0, 801f248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f238:	4620      	mov	r0, r4
 801f23a:	f00a feb0 	bl	8029f9e <__cxa_guard_release>
 801f23e:	4a0f      	ldr	r2, [pc, #60]	; (801f27c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f240:	490f      	ldr	r1, [pc, #60]	; (801f280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f242:	4810      	ldr	r0, [pc, #64]	; (801f284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f244:	f00a fe98 	bl	8029f78 <__aeabi_atexit>
 801f248:	4c0f      	ldr	r4, [pc, #60]	; (801f288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f24a:	7823      	ldrb	r3, [r4, #0]
 801f24c:	f3bf 8f5b 	dmb	ish
 801f250:	07db      	lsls	r3, r3, #31
 801f252:	d40b      	bmi.n	801f26c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f254:	4620      	mov	r0, r4
 801f256:	f00a fe96 	bl	8029f86 <__cxa_guard_acquire>
 801f25a:	b138      	cbz	r0, 801f26c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f25c:	4620      	mov	r0, r4
 801f25e:	f00a fe9e 	bl	8029f9e <__cxa_guard_release>
 801f262:	4a06      	ldr	r2, [pc, #24]	; (801f27c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f264:	4909      	ldr	r1, [pc, #36]	; (801f28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f266:	480a      	ldr	r0, [pc, #40]	; (801f290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f268:	f00a fe86 	bl	8029f78 <__aeabi_atexit>
 801f26c:	4b05      	ldr	r3, [pc, #20]	; (801f284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f26e:	60ab      	str	r3, [r5, #8]
 801f270:	4b07      	ldr	r3, [pc, #28]	; (801f290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f272:	60eb      	str	r3, [r5, #12]
 801f274:	bd38      	pop	{r3, r4, r5, pc}
 801f276:	bf00      	nop
 801f278:	2001307c 	.word	0x2001307c
 801f27c:	20000000 	.word	0x20000000
 801f280:	0801bfb3 	.word	0x0801bfb3
 801f284:	200000ac 	.word	0x200000ac
 801f288:	20013080 	.word	0x20013080
 801f28c:	0801bfb1 	.word	0x0801bfb1
 801f290:	200000b0 	.word	0x200000b0

0801f294 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f294:	b510      	push	{r4, lr}
 801f296:	4604      	mov	r4, r0
 801f298:	f7ff ff88 	bl	801f1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f29c:	4620      	mov	r0, r4
 801f29e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f2a2:	f7ff bfbd 	b.w	801f220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f2a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f2a8:	b538      	push	{r3, r4, r5, lr}
 801f2aa:	4c15      	ldr	r4, [pc, #84]	; (801f300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f2ac:	7823      	ldrb	r3, [r4, #0]
 801f2ae:	f3bf 8f5b 	dmb	ish
 801f2b2:	07da      	lsls	r2, r3, #31
 801f2b4:	4605      	mov	r5, r0
 801f2b6:	d40b      	bmi.n	801f2d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f2b8:	4620      	mov	r0, r4
 801f2ba:	f00a fe64 	bl	8029f86 <__cxa_guard_acquire>
 801f2be:	b138      	cbz	r0, 801f2d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f2c0:	4620      	mov	r0, r4
 801f2c2:	f00a fe6c 	bl	8029f9e <__cxa_guard_release>
 801f2c6:	4a0f      	ldr	r2, [pc, #60]	; (801f304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f2c8:	490f      	ldr	r1, [pc, #60]	; (801f308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f2ca:	4810      	ldr	r0, [pc, #64]	; (801f30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f2cc:	f00a fe54 	bl	8029f78 <__aeabi_atexit>
 801f2d0:	4c0f      	ldr	r4, [pc, #60]	; (801f310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f2d2:	7823      	ldrb	r3, [r4, #0]
 801f2d4:	f3bf 8f5b 	dmb	ish
 801f2d8:	07db      	lsls	r3, r3, #31
 801f2da:	d40b      	bmi.n	801f2f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f2dc:	4620      	mov	r0, r4
 801f2de:	f00a fe52 	bl	8029f86 <__cxa_guard_acquire>
 801f2e2:	b138      	cbz	r0, 801f2f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f2e4:	4620      	mov	r0, r4
 801f2e6:	f00a fe5a 	bl	8029f9e <__cxa_guard_release>
 801f2ea:	4a06      	ldr	r2, [pc, #24]	; (801f304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f2ec:	4909      	ldr	r1, [pc, #36]	; (801f314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f2ee:	480a      	ldr	r0, [pc, #40]	; (801f318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f2f0:	f00a fe42 	bl	8029f78 <__aeabi_atexit>
 801f2f4:	4b05      	ldr	r3, [pc, #20]	; (801f30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f2f6:	622b      	str	r3, [r5, #32]
 801f2f8:	4b07      	ldr	r3, [pc, #28]	; (801f318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f2fa:	626b      	str	r3, [r5, #36]	; 0x24
 801f2fc:	bd38      	pop	{r3, r4, r5, pc}
 801f2fe:	bf00      	nop
 801f300:	200130ac 	.word	0x200130ac
 801f304:	20000000 	.word	0x20000000
 801f308:	0801bfa7 	.word	0x0801bfa7
 801f30c:	200000dc 	.word	0x200000dc
 801f310:	200130b0 	.word	0x200130b0
 801f314:	0801bfa5 	.word	0x0801bfa5
 801f318:	200000e0 	.word	0x200000e0

0801f31c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f31c:	b538      	push	{r3, r4, r5, lr}
 801f31e:	4c15      	ldr	r4, [pc, #84]	; (801f374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f320:	7823      	ldrb	r3, [r4, #0]
 801f322:	f3bf 8f5b 	dmb	ish
 801f326:	07da      	lsls	r2, r3, #31
 801f328:	4605      	mov	r5, r0
 801f32a:	d40b      	bmi.n	801f344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f32c:	4620      	mov	r0, r4
 801f32e:	f00a fe2a 	bl	8029f86 <__cxa_guard_acquire>
 801f332:	b138      	cbz	r0, 801f344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f334:	4620      	mov	r0, r4
 801f336:	f00a fe32 	bl	8029f9e <__cxa_guard_release>
 801f33a:	4a0f      	ldr	r2, [pc, #60]	; (801f378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f33c:	490f      	ldr	r1, [pc, #60]	; (801f37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f33e:	4810      	ldr	r0, [pc, #64]	; (801f380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f340:	f00a fe1a 	bl	8029f78 <__aeabi_atexit>
 801f344:	4c0f      	ldr	r4, [pc, #60]	; (801f384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f346:	7823      	ldrb	r3, [r4, #0]
 801f348:	f3bf 8f5b 	dmb	ish
 801f34c:	07db      	lsls	r3, r3, #31
 801f34e:	d40b      	bmi.n	801f368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f350:	4620      	mov	r0, r4
 801f352:	f00a fe18 	bl	8029f86 <__cxa_guard_acquire>
 801f356:	b138      	cbz	r0, 801f368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f358:	4620      	mov	r0, r4
 801f35a:	f00a fe20 	bl	8029f9e <__cxa_guard_release>
 801f35e:	4a06      	ldr	r2, [pc, #24]	; (801f378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f360:	4909      	ldr	r1, [pc, #36]	; (801f388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f362:	480a      	ldr	r0, [pc, #40]	; (801f38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f364:	f00a fe08 	bl	8029f78 <__aeabi_atexit>
 801f368:	4b05      	ldr	r3, [pc, #20]	; (801f380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f36a:	61ab      	str	r3, [r5, #24]
 801f36c:	4b07      	ldr	r3, [pc, #28]	; (801f38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f36e:	61eb      	str	r3, [r5, #28]
 801f370:	bd38      	pop	{r3, r4, r5, pc}
 801f372:	bf00      	nop
 801f374:	20013084 	.word	0x20013084
 801f378:	20000000 	.word	0x20000000
 801f37c:	0801bfab 	.word	0x0801bfab
 801f380:	200000b4 	.word	0x200000b4
 801f384:	20013088 	.word	0x20013088
 801f388:	0801bfa9 	.word	0x0801bfa9
 801f38c:	200000b8 	.word	0x200000b8

0801f390 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f390:	b510      	push	{r4, lr}
 801f392:	4604      	mov	r4, r0
 801f394:	f7ff ff88 	bl	801f2a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f398:	4620      	mov	r0, r4
 801f39a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f39e:	f7ff bfbd 	b.w	801f31c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f3a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f3a4:	b538      	push	{r3, r4, r5, lr}
 801f3a6:	4c15      	ldr	r4, [pc, #84]	; (801f3fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f3a8:	7823      	ldrb	r3, [r4, #0]
 801f3aa:	f3bf 8f5b 	dmb	ish
 801f3ae:	07da      	lsls	r2, r3, #31
 801f3b0:	4605      	mov	r5, r0
 801f3b2:	d40b      	bmi.n	801f3cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f3b4:	4620      	mov	r0, r4
 801f3b6:	f00a fde6 	bl	8029f86 <__cxa_guard_acquire>
 801f3ba:	b138      	cbz	r0, 801f3cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f3bc:	4620      	mov	r0, r4
 801f3be:	f00a fdee 	bl	8029f9e <__cxa_guard_release>
 801f3c2:	4a0f      	ldr	r2, [pc, #60]	; (801f400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f3c4:	490f      	ldr	r1, [pc, #60]	; (801f404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f3c6:	4810      	ldr	r0, [pc, #64]	; (801f408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f3c8:	f00a fdd6 	bl	8029f78 <__aeabi_atexit>
 801f3cc:	4c0f      	ldr	r4, [pc, #60]	; (801f40c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f3ce:	7823      	ldrb	r3, [r4, #0]
 801f3d0:	f3bf 8f5b 	dmb	ish
 801f3d4:	07db      	lsls	r3, r3, #31
 801f3d6:	d40b      	bmi.n	801f3f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f3d8:	4620      	mov	r0, r4
 801f3da:	f00a fdd4 	bl	8029f86 <__cxa_guard_acquire>
 801f3de:	b138      	cbz	r0, 801f3f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f3e0:	4620      	mov	r0, r4
 801f3e2:	f00a fddc 	bl	8029f9e <__cxa_guard_release>
 801f3e6:	4a06      	ldr	r2, [pc, #24]	; (801f400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f3e8:	4909      	ldr	r1, [pc, #36]	; (801f410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f3ea:	480a      	ldr	r0, [pc, #40]	; (801f414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f3ec:	f00a fdc4 	bl	8029f78 <__aeabi_atexit>
 801f3f0:	4b05      	ldr	r3, [pc, #20]	; (801f408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f3f2:	632b      	str	r3, [r5, #48]	; 0x30
 801f3f4:	4b07      	ldr	r3, [pc, #28]	; (801f414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f3f6:	636b      	str	r3, [r5, #52]	; 0x34
 801f3f8:	bd38      	pop	{r3, r4, r5, pc}
 801f3fa:	bf00      	nop
 801f3fc:	200130bc 	.word	0x200130bc
 801f400:	20000000 	.word	0x20000000
 801f404:	0801bf9f 	.word	0x0801bf9f
 801f408:	200000ec 	.word	0x200000ec
 801f40c:	200130c0 	.word	0x200130c0
 801f410:	0801bf9d 	.word	0x0801bf9d
 801f414:	200000f0 	.word	0x200000f0

0801f418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f418:	b538      	push	{r3, r4, r5, lr}
 801f41a:	4c15      	ldr	r4, [pc, #84]	; (801f470 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f41c:	7823      	ldrb	r3, [r4, #0]
 801f41e:	f3bf 8f5b 	dmb	ish
 801f422:	07da      	lsls	r2, r3, #31
 801f424:	4605      	mov	r5, r0
 801f426:	d40b      	bmi.n	801f440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f428:	4620      	mov	r0, r4
 801f42a:	f00a fdac 	bl	8029f86 <__cxa_guard_acquire>
 801f42e:	b138      	cbz	r0, 801f440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f430:	4620      	mov	r0, r4
 801f432:	f00a fdb4 	bl	8029f9e <__cxa_guard_release>
 801f436:	4a0f      	ldr	r2, [pc, #60]	; (801f474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f438:	490f      	ldr	r1, [pc, #60]	; (801f478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f43a:	4810      	ldr	r0, [pc, #64]	; (801f47c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f43c:	f00a fd9c 	bl	8029f78 <__aeabi_atexit>
 801f440:	4c0f      	ldr	r4, [pc, #60]	; (801f480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f442:	7823      	ldrb	r3, [r4, #0]
 801f444:	f3bf 8f5b 	dmb	ish
 801f448:	07db      	lsls	r3, r3, #31
 801f44a:	d40b      	bmi.n	801f464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f44c:	4620      	mov	r0, r4
 801f44e:	f00a fd9a 	bl	8029f86 <__cxa_guard_acquire>
 801f452:	b138      	cbz	r0, 801f464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f454:	4620      	mov	r0, r4
 801f456:	f00a fda2 	bl	8029f9e <__cxa_guard_release>
 801f45a:	4a06      	ldr	r2, [pc, #24]	; (801f474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f45c:	4909      	ldr	r1, [pc, #36]	; (801f484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f45e:	480a      	ldr	r0, [pc, #40]	; (801f488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f460:	f00a fd8a 	bl	8029f78 <__aeabi_atexit>
 801f464:	4b05      	ldr	r3, [pc, #20]	; (801f47c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f466:	62ab      	str	r3, [r5, #40]	; 0x28
 801f468:	4b07      	ldr	r3, [pc, #28]	; (801f488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f46a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f46c:	bd38      	pop	{r3, r4, r5, pc}
 801f46e:	bf00      	nop
 801f470:	2001308c 	.word	0x2001308c
 801f474:	20000000 	.word	0x20000000
 801f478:	0801bfa3 	.word	0x0801bfa3
 801f47c:	200000bc 	.word	0x200000bc
 801f480:	20013090 	.word	0x20013090
 801f484:	0801bfa1 	.word	0x0801bfa1
 801f488:	200000c0 	.word	0x200000c0

0801f48c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f48c:	b510      	push	{r4, lr}
 801f48e:	4604      	mov	r4, r0
 801f490:	f7ff ff88 	bl	801f3a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f494:	4620      	mov	r0, r4
 801f496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f49a:	f7ff bfbd 	b.w	801f418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f4a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f4a0:	b538      	push	{r3, r4, r5, lr}
 801f4a2:	4c15      	ldr	r4, [pc, #84]	; (801f4f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f4a4:	7823      	ldrb	r3, [r4, #0]
 801f4a6:	f3bf 8f5b 	dmb	ish
 801f4aa:	07da      	lsls	r2, r3, #31
 801f4ac:	4605      	mov	r5, r0
 801f4ae:	d40b      	bmi.n	801f4c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f4b0:	4620      	mov	r0, r4
 801f4b2:	f00a fd68 	bl	8029f86 <__cxa_guard_acquire>
 801f4b6:	b138      	cbz	r0, 801f4c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f4b8:	4620      	mov	r0, r4
 801f4ba:	f00a fd70 	bl	8029f9e <__cxa_guard_release>
 801f4be:	4a0f      	ldr	r2, [pc, #60]	; (801f4fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f4c0:	490f      	ldr	r1, [pc, #60]	; (801f500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f4c2:	4810      	ldr	r0, [pc, #64]	; (801f504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f4c4:	f00a fd58 	bl	8029f78 <__aeabi_atexit>
 801f4c8:	4c0f      	ldr	r4, [pc, #60]	; (801f508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f4ca:	7823      	ldrb	r3, [r4, #0]
 801f4cc:	f3bf 8f5b 	dmb	ish
 801f4d0:	07db      	lsls	r3, r3, #31
 801f4d2:	d40b      	bmi.n	801f4ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f4d4:	4620      	mov	r0, r4
 801f4d6:	f00a fd56 	bl	8029f86 <__cxa_guard_acquire>
 801f4da:	b138      	cbz	r0, 801f4ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f4dc:	4620      	mov	r0, r4
 801f4de:	f00a fd5e 	bl	8029f9e <__cxa_guard_release>
 801f4e2:	4a06      	ldr	r2, [pc, #24]	; (801f4fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f4e4:	4909      	ldr	r1, [pc, #36]	; (801f50c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f4e6:	480a      	ldr	r0, [pc, #40]	; (801f510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f4e8:	f00a fd46 	bl	8029f78 <__aeabi_atexit>
 801f4ec:	4b05      	ldr	r3, [pc, #20]	; (801f504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f4ee:	652b      	str	r3, [r5, #80]	; 0x50
 801f4f0:	4b07      	ldr	r3, [pc, #28]	; (801f510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f4f2:	656b      	str	r3, [r5, #84]	; 0x54
 801f4f4:	bd38      	pop	{r3, r4, r5, pc}
 801f4f6:	bf00      	nop
 801f4f8:	200130c4 	.word	0x200130c4
 801f4fc:	20000000 	.word	0x20000000
 801f500:	0801bf8f 	.word	0x0801bf8f
 801f504:	200000f4 	.word	0x200000f4
 801f508:	200130c8 	.word	0x200130c8
 801f50c:	0801bf8d 	.word	0x0801bf8d
 801f510:	200000f8 	.word	0x200000f8

0801f514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f514:	b538      	push	{r3, r4, r5, lr}
 801f516:	4c15      	ldr	r4, [pc, #84]	; (801f56c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f518:	7823      	ldrb	r3, [r4, #0]
 801f51a:	f3bf 8f5b 	dmb	ish
 801f51e:	07da      	lsls	r2, r3, #31
 801f520:	4605      	mov	r5, r0
 801f522:	d40b      	bmi.n	801f53c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f524:	4620      	mov	r0, r4
 801f526:	f00a fd2e 	bl	8029f86 <__cxa_guard_acquire>
 801f52a:	b138      	cbz	r0, 801f53c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f52c:	4620      	mov	r0, r4
 801f52e:	f00a fd36 	bl	8029f9e <__cxa_guard_release>
 801f532:	4a0f      	ldr	r2, [pc, #60]	; (801f570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f534:	490f      	ldr	r1, [pc, #60]	; (801f574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f536:	4810      	ldr	r0, [pc, #64]	; (801f578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f538:	f00a fd1e 	bl	8029f78 <__aeabi_atexit>
 801f53c:	4c0f      	ldr	r4, [pc, #60]	; (801f57c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f53e:	7823      	ldrb	r3, [r4, #0]
 801f540:	f3bf 8f5b 	dmb	ish
 801f544:	07db      	lsls	r3, r3, #31
 801f546:	d40b      	bmi.n	801f560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f548:	4620      	mov	r0, r4
 801f54a:	f00a fd1c 	bl	8029f86 <__cxa_guard_acquire>
 801f54e:	b138      	cbz	r0, 801f560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f550:	4620      	mov	r0, r4
 801f552:	f00a fd24 	bl	8029f9e <__cxa_guard_release>
 801f556:	4a06      	ldr	r2, [pc, #24]	; (801f570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f558:	4909      	ldr	r1, [pc, #36]	; (801f580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f55a:	480a      	ldr	r0, [pc, #40]	; (801f584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f55c:	f00a fd0c 	bl	8029f78 <__aeabi_atexit>
 801f560:	4b05      	ldr	r3, [pc, #20]	; (801f578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f562:	64ab      	str	r3, [r5, #72]	; 0x48
 801f564:	4b07      	ldr	r3, [pc, #28]	; (801f584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f566:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f568:	bd38      	pop	{r3, r4, r5, pc}
 801f56a:	bf00      	nop
 801f56c:	200130cc 	.word	0x200130cc
 801f570:	20000000 	.word	0x20000000
 801f574:	0801bf93 	.word	0x0801bf93
 801f578:	200000fc 	.word	0x200000fc
 801f57c:	200130d0 	.word	0x200130d0
 801f580:	0801bf91 	.word	0x0801bf91
 801f584:	20000100 	.word	0x20000100

0801f588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f588:	b538      	push	{r3, r4, r5, lr}
 801f58a:	4c15      	ldr	r4, [pc, #84]	; (801f5e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f58c:	7823      	ldrb	r3, [r4, #0]
 801f58e:	f3bf 8f5b 	dmb	ish
 801f592:	07da      	lsls	r2, r3, #31
 801f594:	4605      	mov	r5, r0
 801f596:	d40b      	bmi.n	801f5b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f598:	4620      	mov	r0, r4
 801f59a:	f00a fcf4 	bl	8029f86 <__cxa_guard_acquire>
 801f59e:	b138      	cbz	r0, 801f5b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f5a0:	4620      	mov	r0, r4
 801f5a2:	f00a fcfc 	bl	8029f9e <__cxa_guard_release>
 801f5a6:	4a0f      	ldr	r2, [pc, #60]	; (801f5e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f5a8:	490f      	ldr	r1, [pc, #60]	; (801f5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f5aa:	4810      	ldr	r0, [pc, #64]	; (801f5ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f5ac:	f00a fce4 	bl	8029f78 <__aeabi_atexit>
 801f5b0:	4c0f      	ldr	r4, [pc, #60]	; (801f5f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f5b2:	7823      	ldrb	r3, [r4, #0]
 801f5b4:	f3bf 8f5b 	dmb	ish
 801f5b8:	07db      	lsls	r3, r3, #31
 801f5ba:	d40b      	bmi.n	801f5d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f5bc:	4620      	mov	r0, r4
 801f5be:	f00a fce2 	bl	8029f86 <__cxa_guard_acquire>
 801f5c2:	b138      	cbz	r0, 801f5d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f5c4:	4620      	mov	r0, r4
 801f5c6:	f00a fcea 	bl	8029f9e <__cxa_guard_release>
 801f5ca:	4a06      	ldr	r2, [pc, #24]	; (801f5e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f5cc:	4909      	ldr	r1, [pc, #36]	; (801f5f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f5ce:	480a      	ldr	r0, [pc, #40]	; (801f5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f5d0:	f00a fcd2 	bl	8029f78 <__aeabi_atexit>
 801f5d4:	4b05      	ldr	r3, [pc, #20]	; (801f5ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f5d6:	642b      	str	r3, [r5, #64]	; 0x40
 801f5d8:	4b07      	ldr	r3, [pc, #28]	; (801f5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f5da:	646b      	str	r3, [r5, #68]	; 0x44
 801f5dc:	bd38      	pop	{r3, r4, r5, pc}
 801f5de:	bf00      	nop
 801f5e0:	20013094 	.word	0x20013094
 801f5e4:	20000000 	.word	0x20000000
 801f5e8:	0801bf97 	.word	0x0801bf97
 801f5ec:	200000c4 	.word	0x200000c4
 801f5f0:	20013098 	.word	0x20013098
 801f5f4:	0801bf95 	.word	0x0801bf95
 801f5f8:	200000c8 	.word	0x200000c8

0801f5fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f5fc:	b538      	push	{r3, r4, r5, lr}
 801f5fe:	4c15      	ldr	r4, [pc, #84]	; (801f654 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f600:	7823      	ldrb	r3, [r4, #0]
 801f602:	f3bf 8f5b 	dmb	ish
 801f606:	07da      	lsls	r2, r3, #31
 801f608:	4605      	mov	r5, r0
 801f60a:	d40b      	bmi.n	801f624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f60c:	4620      	mov	r0, r4
 801f60e:	f00a fcba 	bl	8029f86 <__cxa_guard_acquire>
 801f612:	b138      	cbz	r0, 801f624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f614:	4620      	mov	r0, r4
 801f616:	f00a fcc2 	bl	8029f9e <__cxa_guard_release>
 801f61a:	4a0f      	ldr	r2, [pc, #60]	; (801f658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f61c:	490f      	ldr	r1, [pc, #60]	; (801f65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f61e:	4810      	ldr	r0, [pc, #64]	; (801f660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f620:	f00a fcaa 	bl	8029f78 <__aeabi_atexit>
 801f624:	4c0f      	ldr	r4, [pc, #60]	; (801f664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f626:	7823      	ldrb	r3, [r4, #0]
 801f628:	f3bf 8f5b 	dmb	ish
 801f62c:	07db      	lsls	r3, r3, #31
 801f62e:	d40b      	bmi.n	801f648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f630:	4620      	mov	r0, r4
 801f632:	f00a fca8 	bl	8029f86 <__cxa_guard_acquire>
 801f636:	b138      	cbz	r0, 801f648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f638:	4620      	mov	r0, r4
 801f63a:	f00a fcb0 	bl	8029f9e <__cxa_guard_release>
 801f63e:	4a06      	ldr	r2, [pc, #24]	; (801f658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f640:	4909      	ldr	r1, [pc, #36]	; (801f668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f642:	480a      	ldr	r0, [pc, #40]	; (801f66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f644:	f00a fc98 	bl	8029f78 <__aeabi_atexit>
 801f648:	4b05      	ldr	r3, [pc, #20]	; (801f660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f64a:	63ab      	str	r3, [r5, #56]	; 0x38
 801f64c:	4b07      	ldr	r3, [pc, #28]	; (801f66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f64e:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f650:	bd38      	pop	{r3, r4, r5, pc}
 801f652:	bf00      	nop
 801f654:	200130b4 	.word	0x200130b4
 801f658:	20000000 	.word	0x20000000
 801f65c:	0801bf9b 	.word	0x0801bf9b
 801f660:	200000e4 	.word	0x200000e4
 801f664:	200130b8 	.word	0x200130b8
 801f668:	0801bf99 	.word	0x0801bf99
 801f66c:	200000e8 	.word	0x200000e8

0801f670 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f670:	b510      	push	{r4, lr}
 801f672:	4604      	mov	r4, r0
 801f674:	f7ff ff14 	bl	801f4a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f678:	4620      	mov	r0, r4
 801f67a:	f7ff ff85 	bl	801f588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f67e:	4620      	mov	r0, r4
 801f680:	f7ff ff48 	bl	801f514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f684:	4620      	mov	r0, r4
 801f686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f68a:	f7ff bfb7 	b.w	801f5fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f690:	b538      	push	{r3, r4, r5, lr}
 801f692:	4c15      	ldr	r4, [pc, #84]	; (801f6e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f694:	7823      	ldrb	r3, [r4, #0]
 801f696:	f3bf 8f5b 	dmb	ish
 801f69a:	07da      	lsls	r2, r3, #31
 801f69c:	4605      	mov	r5, r0
 801f69e:	d40b      	bmi.n	801f6b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f6a0:	4620      	mov	r0, r4
 801f6a2:	f00a fc70 	bl	8029f86 <__cxa_guard_acquire>
 801f6a6:	b138      	cbz	r0, 801f6b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f6a8:	4620      	mov	r0, r4
 801f6aa:	f00a fc78 	bl	8029f9e <__cxa_guard_release>
 801f6ae:	4a0f      	ldr	r2, [pc, #60]	; (801f6ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f6b0:	490f      	ldr	r1, [pc, #60]	; (801f6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f6b2:	4810      	ldr	r0, [pc, #64]	; (801f6f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f6b4:	f00a fc60 	bl	8029f78 <__aeabi_atexit>
 801f6b8:	4c0f      	ldr	r4, [pc, #60]	; (801f6f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f6ba:	7823      	ldrb	r3, [r4, #0]
 801f6bc:	f3bf 8f5b 	dmb	ish
 801f6c0:	07db      	lsls	r3, r3, #31
 801f6c2:	d40b      	bmi.n	801f6dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f6c4:	4620      	mov	r0, r4
 801f6c6:	f00a fc5e 	bl	8029f86 <__cxa_guard_acquire>
 801f6ca:	b138      	cbz	r0, 801f6dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f6cc:	4620      	mov	r0, r4
 801f6ce:	f00a fc66 	bl	8029f9e <__cxa_guard_release>
 801f6d2:	4a06      	ldr	r2, [pc, #24]	; (801f6ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f6d4:	4909      	ldr	r1, [pc, #36]	; (801f6fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f6d6:	480a      	ldr	r0, [pc, #40]	; (801f700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f6d8:	f00a fc4e 	bl	8029f78 <__aeabi_atexit>
 801f6dc:	4b05      	ldr	r3, [pc, #20]	; (801f6f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f6de:	662b      	str	r3, [r5, #96]	; 0x60
 801f6e0:	4b07      	ldr	r3, [pc, #28]	; (801f700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f6e2:	666b      	str	r3, [r5, #100]	; 0x64
 801f6e4:	bd38      	pop	{r3, r4, r5, pc}
 801f6e6:	bf00      	nop
 801f6e8:	2001309c 	.word	0x2001309c
 801f6ec:	20000000 	.word	0x20000000
 801f6f0:	0801bf87 	.word	0x0801bf87
 801f6f4:	200000cc 	.word	0x200000cc
 801f6f8:	200130a0 	.word	0x200130a0
 801f6fc:	0801bf85 	.word	0x0801bf85
 801f700:	200000d0 	.word	0x200000d0

0801f704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f704:	b538      	push	{r3, r4, r5, lr}
 801f706:	4c15      	ldr	r4, [pc, #84]	; (801f75c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f708:	7823      	ldrb	r3, [r4, #0]
 801f70a:	f3bf 8f5b 	dmb	ish
 801f70e:	07da      	lsls	r2, r3, #31
 801f710:	4605      	mov	r5, r0
 801f712:	d40b      	bmi.n	801f72c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f714:	4620      	mov	r0, r4
 801f716:	f00a fc36 	bl	8029f86 <__cxa_guard_acquire>
 801f71a:	b138      	cbz	r0, 801f72c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f71c:	4620      	mov	r0, r4
 801f71e:	f00a fc3e 	bl	8029f9e <__cxa_guard_release>
 801f722:	4a0f      	ldr	r2, [pc, #60]	; (801f760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f724:	490f      	ldr	r1, [pc, #60]	; (801f764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f726:	4810      	ldr	r0, [pc, #64]	; (801f768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f728:	f00a fc26 	bl	8029f78 <__aeabi_atexit>
 801f72c:	4c0f      	ldr	r4, [pc, #60]	; (801f76c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f72e:	7823      	ldrb	r3, [r4, #0]
 801f730:	f3bf 8f5b 	dmb	ish
 801f734:	07db      	lsls	r3, r3, #31
 801f736:	d40b      	bmi.n	801f750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f738:	4620      	mov	r0, r4
 801f73a:	f00a fc24 	bl	8029f86 <__cxa_guard_acquire>
 801f73e:	b138      	cbz	r0, 801f750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f740:	4620      	mov	r0, r4
 801f742:	f00a fc2c 	bl	8029f9e <__cxa_guard_release>
 801f746:	4a06      	ldr	r2, [pc, #24]	; (801f760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f748:	4909      	ldr	r1, [pc, #36]	; (801f770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f74a:	480a      	ldr	r0, [pc, #40]	; (801f774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f74c:	f00a fc14 	bl	8029f78 <__aeabi_atexit>
 801f750:	4b05      	ldr	r3, [pc, #20]	; (801f768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f752:	65ab      	str	r3, [r5, #88]	; 0x58
 801f754:	4b07      	ldr	r3, [pc, #28]	; (801f774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f756:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f758:	bd38      	pop	{r3, r4, r5, pc}
 801f75a:	bf00      	nop
 801f75c:	20013074 	.word	0x20013074
 801f760:	20000000 	.word	0x20000000
 801f764:	0801bf8b 	.word	0x0801bf8b
 801f768:	200000a4 	.word	0x200000a4
 801f76c:	20013078 	.word	0x20013078
 801f770:	0801bf89 	.word	0x0801bf89
 801f774:	200000a8 	.word	0x200000a8

0801f778 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f778:	b510      	push	{r4, lr}
 801f77a:	4604      	mov	r4, r0
 801f77c:	f7ff ff88 	bl	801f690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f780:	4620      	mov	r0, r4
 801f782:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f786:	f7ff bfbd 	b.w	801f704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f78c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f78c:	b538      	push	{r3, r4, r5, lr}
 801f78e:	4c15      	ldr	r4, [pc, #84]	; (801f7e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f790:	7823      	ldrb	r3, [r4, #0]
 801f792:	f3bf 8f5b 	dmb	ish
 801f796:	07da      	lsls	r2, r3, #31
 801f798:	4605      	mov	r5, r0
 801f79a:	d40b      	bmi.n	801f7b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f79c:	4620      	mov	r0, r4
 801f79e:	f00a fbf2 	bl	8029f86 <__cxa_guard_acquire>
 801f7a2:	b138      	cbz	r0, 801f7b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f7a4:	4620      	mov	r0, r4
 801f7a6:	f00a fbfa 	bl	8029f9e <__cxa_guard_release>
 801f7aa:	4a0f      	ldr	r2, [pc, #60]	; (801f7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f7ac:	490f      	ldr	r1, [pc, #60]	; (801f7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f7ae:	4810      	ldr	r0, [pc, #64]	; (801f7f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f7b0:	f00a fbe2 	bl	8029f78 <__aeabi_atexit>
 801f7b4:	4c0f      	ldr	r4, [pc, #60]	; (801f7f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f7b6:	7823      	ldrb	r3, [r4, #0]
 801f7b8:	f3bf 8f5b 	dmb	ish
 801f7bc:	07db      	lsls	r3, r3, #31
 801f7be:	d40b      	bmi.n	801f7d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f7c0:	4620      	mov	r0, r4
 801f7c2:	f00a fbe0 	bl	8029f86 <__cxa_guard_acquire>
 801f7c6:	b138      	cbz	r0, 801f7d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f7c8:	4620      	mov	r0, r4
 801f7ca:	f00a fbe8 	bl	8029f9e <__cxa_guard_release>
 801f7ce:	4a06      	ldr	r2, [pc, #24]	; (801f7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f7d0:	4909      	ldr	r1, [pc, #36]	; (801f7f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f7d2:	480a      	ldr	r0, [pc, #40]	; (801f7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f7d4:	f00a fbd0 	bl	8029f78 <__aeabi_atexit>
 801f7d8:	4b05      	ldr	r3, [pc, #20]	; (801f7f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f7da:	672b      	str	r3, [r5, #112]	; 0x70
 801f7dc:	4b07      	ldr	r3, [pc, #28]	; (801f7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f7de:	676b      	str	r3, [r5, #116]	; 0x74
 801f7e0:	bd38      	pop	{r3, r4, r5, pc}
 801f7e2:	bf00      	nop
 801f7e4:	2001306c 	.word	0x2001306c
 801f7e8:	20000000 	.word	0x20000000
 801f7ec:	0801bf7f 	.word	0x0801bf7f
 801f7f0:	2000009c 	.word	0x2000009c
 801f7f4:	20013070 	.word	0x20013070
 801f7f8:	0801bf7d 	.word	0x0801bf7d
 801f7fc:	200000a0 	.word	0x200000a0

0801f800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f800:	b538      	push	{r3, r4, r5, lr}
 801f802:	4c15      	ldr	r4, [pc, #84]	; (801f858 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f804:	7823      	ldrb	r3, [r4, #0]
 801f806:	f3bf 8f5b 	dmb	ish
 801f80a:	07da      	lsls	r2, r3, #31
 801f80c:	4605      	mov	r5, r0
 801f80e:	d40b      	bmi.n	801f828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f810:	4620      	mov	r0, r4
 801f812:	f00a fbb8 	bl	8029f86 <__cxa_guard_acquire>
 801f816:	b138      	cbz	r0, 801f828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f818:	4620      	mov	r0, r4
 801f81a:	f00a fbc0 	bl	8029f9e <__cxa_guard_release>
 801f81e:	4a0f      	ldr	r2, [pc, #60]	; (801f85c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f820:	490f      	ldr	r1, [pc, #60]	; (801f860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f822:	4810      	ldr	r0, [pc, #64]	; (801f864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f824:	f00a fba8 	bl	8029f78 <__aeabi_atexit>
 801f828:	4c0f      	ldr	r4, [pc, #60]	; (801f868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f82a:	7823      	ldrb	r3, [r4, #0]
 801f82c:	f3bf 8f5b 	dmb	ish
 801f830:	07db      	lsls	r3, r3, #31
 801f832:	d40b      	bmi.n	801f84c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f834:	4620      	mov	r0, r4
 801f836:	f00a fba6 	bl	8029f86 <__cxa_guard_acquire>
 801f83a:	b138      	cbz	r0, 801f84c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f83c:	4620      	mov	r0, r4
 801f83e:	f00a fbae 	bl	8029f9e <__cxa_guard_release>
 801f842:	4a06      	ldr	r2, [pc, #24]	; (801f85c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f844:	4909      	ldr	r1, [pc, #36]	; (801f86c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f846:	480a      	ldr	r0, [pc, #40]	; (801f870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f848:	f00a fb96 	bl	8029f78 <__aeabi_atexit>
 801f84c:	4b05      	ldr	r3, [pc, #20]	; (801f864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f84e:	66ab      	str	r3, [r5, #104]	; 0x68
 801f850:	4b07      	ldr	r3, [pc, #28]	; (801f870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f852:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f854:	bd38      	pop	{r3, r4, r5, pc}
 801f856:	bf00      	nop
 801f858:	20013064 	.word	0x20013064
 801f85c:	20000000 	.word	0x20000000
 801f860:	0801bf83 	.word	0x0801bf83
 801f864:	20000094 	.word	0x20000094
 801f868:	20013068 	.word	0x20013068
 801f86c:	0801bf81 	.word	0x0801bf81
 801f870:	20000098 	.word	0x20000098

0801f874 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f874:	b510      	push	{r4, lr}
 801f876:	4604      	mov	r4, r0
 801f878:	f7ff ff88 	bl	801f78c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f87c:	4620      	mov	r0, r4
 801f87e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f882:	f7ff bfbd 	b.w	801f800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f886 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f886:	b510      	push	{r4, lr}
 801f888:	4604      	mov	r4, r0
 801f88a:	f7ff fff3 	bl	801f874 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f88e:	4620      	mov	r0, r4
 801f890:	f7ff ff72 	bl	801f778 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f894:	4620      	mov	r0, r4
 801f896:	f7ff fdf9 	bl	801f48c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f89a:	4620      	mov	r0, r4
 801f89c:	f7ff fcfa 	bl	801f294 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f8a0:	4620      	mov	r0, r4
 801f8a2:	f7ff fd75 	bl	801f390 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f8a6:	4620      	mov	r0, r4
 801f8a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f8ac:	f7ff bee0 	b.w	801f670 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f8b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f8b0:	b538      	push	{r3, r4, r5, lr}
 801f8b2:	4c0b      	ldr	r4, [pc, #44]	; (801f8e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f8b4:	7823      	ldrb	r3, [r4, #0]
 801f8b6:	f3bf 8f5b 	dmb	ish
 801f8ba:	07db      	lsls	r3, r3, #31
 801f8bc:	4605      	mov	r5, r0
 801f8be:	d40b      	bmi.n	801f8d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f8c0:	4620      	mov	r0, r4
 801f8c2:	f00a fb60 	bl	8029f86 <__cxa_guard_acquire>
 801f8c6:	b138      	cbz	r0, 801f8d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f8c8:	4620      	mov	r0, r4
 801f8ca:	f00a fb68 	bl	8029f9e <__cxa_guard_release>
 801f8ce:	4a05      	ldr	r2, [pc, #20]	; (801f8e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f8d0:	4905      	ldr	r1, [pc, #20]	; (801f8e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f8d2:	4806      	ldr	r0, [pc, #24]	; (801f8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f8d4:	f00a fb50 	bl	8029f78 <__aeabi_atexit>
 801f8d8:	4b04      	ldr	r3, [pc, #16]	; (801f8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f8da:	67ab      	str	r3, [r5, #120]	; 0x78
 801f8dc:	bd38      	pop	{r3, r4, r5, pc}
 801f8de:	bf00      	nop
 801f8e0:	20013058 	.word	0x20013058
 801f8e4:	20000000 	.word	0x20000000
 801f8e8:	0801bf7b 	.word	0x0801bf7b
 801f8ec:	2000008c 	.word	0x2000008c

0801f8f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f8f0:	b538      	push	{r3, r4, r5, lr}
 801f8f2:	4c0b      	ldr	r4, [pc, #44]	; (801f920 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f8f4:	7823      	ldrb	r3, [r4, #0]
 801f8f6:	f3bf 8f5b 	dmb	ish
 801f8fa:	07db      	lsls	r3, r3, #31
 801f8fc:	4605      	mov	r5, r0
 801f8fe:	d40b      	bmi.n	801f918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f900:	4620      	mov	r0, r4
 801f902:	f00a fb40 	bl	8029f86 <__cxa_guard_acquire>
 801f906:	b138      	cbz	r0, 801f918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f908:	4620      	mov	r0, r4
 801f90a:	f00a fb48 	bl	8029f9e <__cxa_guard_release>
 801f90e:	4a05      	ldr	r2, [pc, #20]	; (801f924 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f910:	4905      	ldr	r1, [pc, #20]	; (801f928 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f912:	4806      	ldr	r0, [pc, #24]	; (801f92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f914:	f00a fb30 	bl	8029f78 <__aeabi_atexit>
 801f918:	4b04      	ldr	r3, [pc, #16]	; (801f92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f91a:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f91c:	bd38      	pop	{r3, r4, r5, pc}
 801f91e:	bf00      	nop
 801f920:	2001305c 	.word	0x2001305c
 801f924:	20000000 	.word	0x20000000
 801f928:	0801bf79 	.word	0x0801bf79
 801f92c:	20000090 	.word	0x20000090

0801f930 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f930:	b570      	push	{r4, r5, r6, lr}
 801f932:	4d0d      	ldr	r5, [pc, #52]	; (801f968 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f934:	4c0d      	ldr	r4, [pc, #52]	; (801f96c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f936:	782b      	ldrb	r3, [r5, #0]
 801f938:	f3bf 8f5b 	dmb	ish
 801f93c:	f013 0f01 	tst.w	r3, #1
 801f940:	4606      	mov	r6, r0
 801f942:	d10d      	bne.n	801f960 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f944:	4628      	mov	r0, r5
 801f946:	f00a fb1e 	bl	8029f86 <__cxa_guard_acquire>
 801f94a:	b148      	cbz	r0, 801f960 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f94c:	4b08      	ldr	r3, [pc, #32]	; (801f970 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f94e:	6023      	str	r3, [r4, #0]
 801f950:	4628      	mov	r0, r5
 801f952:	f00a fb24 	bl	8029f9e <__cxa_guard_release>
 801f956:	4a07      	ldr	r2, [pc, #28]	; (801f974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f958:	4907      	ldr	r1, [pc, #28]	; (801f978 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f95a:	4620      	mov	r0, r4
 801f95c:	f00a fb0c 	bl	8029f78 <__aeabi_atexit>
 801f960:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f964:	bd70      	pop	{r4, r5, r6, pc}
 801f966:	bf00      	nop
 801f968:	20013060 	.word	0x20013060
 801f96c:	200130d4 	.word	0x200130d4
 801f970:	0802f950 	.word	0x0802f950
 801f974:	20000000 	.word	0x20000000
 801f978:	0801bf77 	.word	0x0801bf77

0801f97c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f97c:	b510      	push	{r4, lr}
 801f97e:	4604      	mov	r4, r0
 801f980:	f7ff ff96 	bl	801f8b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f984:	4620      	mov	r0, r4
 801f986:	f7ff ffb3 	bl	801f8f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f98a:	4620      	mov	r0, r4
 801f98c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f990:	f7ff bfce 	b.w	801f930 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f998:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f99c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f9a0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f9a4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f9a8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f9ac:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f9b0:	8808      	ldrh	r0, [r1, #0]
 801f9b2:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f9b6:	2d00      	cmp	r5, #0
 801f9b8:	eb02 0a0c 	add.w	sl, r2, ip
 801f9bc:	f2c0 80b0 	blt.w	801fb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f9c0:	45ab      	cmp	fp, r5
 801f9c2:	f340 80ad 	ble.w	801fb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f9c6:	2c00      	cmp	r4, #0
 801f9c8:	f2c0 80a8 	blt.w	801fb1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f9cc:	45a6      	cmp	lr, r4
 801f9ce:	f340 80a5 	ble.w	801fb1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f9d2:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f9d6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f9da:	1c62      	adds	r2, r4, #1
 801f9dc:	f100 80a3 	bmi.w	801fb26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f9e0:	4596      	cmp	lr, r2
 801f9e2:	f340 80a0 	ble.w	801fb26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f9e6:	f1b9 0f00 	cmp.w	r9, #0
 801f9ea:	f000 809c 	beq.w	801fb26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f9ee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f9f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f9f6:	3501      	adds	r5, #1
 801f9f8:	f100 8099 	bmi.w	801fb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f9fc:	45ab      	cmp	fp, r5
 801f9fe:	f340 8096 	ble.w	801fb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fa02:	2f00      	cmp	r7, #0
 801fa04:	f000 8093 	beq.w	801fb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801fa08:	2c00      	cmp	r4, #0
 801fa0a:	f2c0 808e 	blt.w	801fb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fa0e:	45a6      	cmp	lr, r4
 801fa10:	f340 808b 	ble.w	801fb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801fa14:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801fa18:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801fa1c:	3401      	adds	r4, #1
 801fa1e:	f100 8089 	bmi.w	801fb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fa22:	45a6      	cmp	lr, r4
 801fa24:	f340 8086 	ble.w	801fb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fa28:	f1b9 0f00 	cmp.w	r9, #0
 801fa2c:	f000 8082 	beq.w	801fb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801fa30:	44d6      	add	lr, sl
 801fa32:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fa36:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801fa3a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801fa3e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fa42:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801fa46:	fb19 fe07 	smulbb	lr, r9, r7
 801fa4a:	ea44 0808 	orr.w	r8, r4, r8
 801fa4e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801fa52:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801fa56:	f1c7 0210 	rsb	r2, r7, #16
 801fa5a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801fa5e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fa62:	ea44 0c0c 	orr.w	ip, r4, ip
 801fa66:	eba2 0209 	sub.w	r2, r2, r9
 801fa6a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801fa6e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801fa72:	fb04 f40c 	mul.w	r4, r4, ip
 801fa76:	fb02 4808 	mla	r8, r2, r8, r4
 801fa7a:	041a      	lsls	r2, r3, #16
 801fa7c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fa80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fa84:	4313      	orrs	r3, r2
 801fa86:	042a      	lsls	r2, r5, #16
 801fa88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fa8c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fa90:	fb0e 8303 	mla	r3, lr, r3, r8
 801fa94:	432a      	orrs	r2, r5
 801fa96:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801fa9a:	fb07 3202 	mla	r2, r7, r2, r3
 801fa9e:	0d53      	lsrs	r3, r2, #21
 801faa0:	0952      	lsrs	r2, r2, #5
 801faa2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801faa6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801faaa:	431a      	orrs	r2, r3
 801faac:	b293      	uxth	r3, r2
 801faae:	b2b4      	uxth	r4, r6
 801fab0:	1202      	asrs	r2, r0, #8
 801fab2:	43f6      	mvns	r6, r6
 801fab4:	b2f6      	uxtb	r6, r6
 801fab6:	121d      	asrs	r5, r3, #8
 801fab8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fabc:	fb12 f206 	smulbb	r2, r2, r6
 801fac0:	10c7      	asrs	r7, r0, #3
 801fac2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fac6:	00c0      	lsls	r0, r0, #3
 801fac8:	fb05 2504 	mla	r5, r5, r4, r2
 801facc:	b2c0      	uxtb	r0, r0
 801face:	10da      	asrs	r2, r3, #3
 801fad0:	00db      	lsls	r3, r3, #3
 801fad2:	b2db      	uxtb	r3, r3
 801fad4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fad8:	fb10 f006 	smulbb	r0, r0, r6
 801fadc:	b2ad      	uxth	r5, r5
 801fade:	fb03 0004 	mla	r0, r3, r4, r0
 801fae2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fae6:	fb17 f706 	smulbb	r7, r7, r6
 801faea:	b280      	uxth	r0, r0
 801faec:	1c6b      	adds	r3, r5, #1
 801faee:	fb02 7204 	mla	r2, r2, r4, r7
 801faf2:	b292      	uxth	r2, r2
 801faf4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801faf8:	1c43      	adds	r3, r0, #1
 801fafa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801fafe:	1c50      	adds	r0, r2, #1
 801fb00:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801fb04:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fb08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb0c:	0952      	lsrs	r2, r2, #5
 801fb0e:	432b      	orrs	r3, r5
 801fb10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb14:	4313      	orrs	r3, r2
 801fb16:	800b      	strh	r3, [r1, #0]
 801fb18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb1c:	4680      	mov	r8, r0
 801fb1e:	e75c      	b.n	801f9da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801fb20:	4684      	mov	ip, r0
 801fb22:	4680      	mov	r8, r0
 801fb24:	e767      	b.n	801f9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fb26:	4684      	mov	ip, r0
 801fb28:	e765      	b.n	801f9f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801fb2a:	4605      	mov	r5, r0
 801fb2c:	e776      	b.n	801fa1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801fb2e:	4603      	mov	r3, r0
 801fb30:	4605      	mov	r5, r0
 801fb32:	e782      	b.n	801fa3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801fb34:	4603      	mov	r3, r0
 801fb36:	e780      	b.n	801fa3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801fb38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb3c:	b099      	sub	sp, #100	; 0x64
 801fb3e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801fb42:	9215      	str	r2, [sp, #84]	; 0x54
 801fb44:	9309      	str	r3, [sp, #36]	; 0x24
 801fb46:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801fb48:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801fb4c:	930d      	str	r3, [sp, #52]	; 0x34
 801fb4e:	910c      	str	r1, [sp, #48]	; 0x30
 801fb50:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801fb54:	9016      	str	r0, [sp, #88]	; 0x58
 801fb56:	6850      	ldr	r0, [r2, #4]
 801fb58:	6812      	ldr	r2, [r2, #0]
 801fb5a:	fb00 1303 	mla	r3, r0, r3, r1
 801fb5e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801fb62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb64:	681b      	ldr	r3, [r3, #0]
 801fb66:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb6a:	685e      	ldr	r6, [r3, #4]
 801fb6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb6e:	43db      	mvns	r3, r3
 801fb70:	b2db      	uxtb	r3, r3
 801fb72:	3604      	adds	r6, #4
 801fb74:	930a      	str	r3, [sp, #40]	; 0x28
 801fb76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb78:	2b00      	cmp	r3, #0
 801fb7a:	dc03      	bgt.n	801fb84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801fb7c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801fb7e:	2b00      	cmp	r3, #0
 801fb80:	f340 8225 	ble.w	801ffce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fb84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fb8e:	1e48      	subs	r0, r1, #1
 801fb90:	1e57      	subs	r7, r2, #1
 801fb92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb94:	2b00      	cmp	r3, #0
 801fb96:	f340 80e3 	ble.w	801fd60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fb9a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801fb9e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fba2:	d406      	bmi.n	801fbb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fba4:	4584      	cmp	ip, r0
 801fba6:	da04      	bge.n	801fbb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fba8:	2b00      	cmp	r3, #0
 801fbaa:	db02      	blt.n	801fbb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbac:	42bb      	cmp	r3, r7
 801fbae:	f2c0 80d8 	blt.w	801fd62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fbb2:	f11c 0c01 	adds.w	ip, ip, #1
 801fbb6:	f100 80c9 	bmi.w	801fd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fbba:	4561      	cmp	r1, ip
 801fbbc:	f2c0 80c6 	blt.w	801fd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fbc0:	3301      	adds	r3, #1
 801fbc2:	f100 80c3 	bmi.w	801fd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fbc6:	429a      	cmp	r2, r3
 801fbc8:	f2c0 80c0 	blt.w	801fd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801fbcc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fbd0:	4647      	mov	r7, r8
 801fbd2:	f1bb 0f00 	cmp.w	fp, #0
 801fbd6:	f340 80e3 	ble.w	801fda0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801fbda:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fbdc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fbde:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fbe2:	689b      	ldr	r3, [r3, #8]
 801fbe4:	ea5f 422a 	movs.w	r2, sl, asr #16
 801fbe8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fbec:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801fbf0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fbf4:	f100 8121 	bmi.w	801fe3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fbf8:	f103 39ff 	add.w	r9, r3, #4294967295
 801fbfc:	454a      	cmp	r2, r9
 801fbfe:	f280 811c 	bge.w	801fe3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fc02:	f1bc 0f00 	cmp.w	ip, #0
 801fc06:	f2c0 8118 	blt.w	801fe3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fc0a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801fc0e:	45cc      	cmp	ip, r9
 801fc10:	f280 8113 	bge.w	801fe3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801fc14:	b21b      	sxth	r3, r3
 801fc16:	fb0c 2203 	mla	r2, ip, r3, r2
 801fc1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fc1c:	eb04 0902 	add.w	r9, r4, r2
 801fc20:	5ca2      	ldrb	r2, [r4, r2]
 801fc22:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801fc26:	2800      	cmp	r0, #0
 801fc28:	f000 80fe 	beq.w	801fe28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801fc2c:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fc30:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fc34:	9211      	str	r2, [sp, #68]	; 0x44
 801fc36:	b151      	cbz	r1, 801fc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fc38:	eb09 0203 	add.w	r2, r9, r3
 801fc3c:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fc40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc44:	930f      	str	r3, [sp, #60]	; 0x3c
 801fc46:	7853      	ldrb	r3, [r2, #1]
 801fc48:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc4c:	9312      	str	r3, [sp, #72]	; 0x48
 801fc4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fc50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fc52:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fc56:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fc5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fc5e:	ea4c 0c03 	orr.w	ip, ip, r3
 801fc62:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fc64:	041b      	lsls	r3, r3, #16
 801fc66:	fb10 f201 	smulbb	r2, r0, r1
 801fc6a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801fc6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fc72:	10d2      	asrs	r2, r2, #3
 801fc74:	4323      	orrs	r3, r4
 801fc76:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801fc7a:	4353      	muls	r3, r2
 801fc7c:	fb09 330c 	mla	r3, r9, ip, r3
 801fc80:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801fc84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fc88:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801fc8c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801fc90:	f1c1 0c10 	rsb	ip, r1, #16
 801fc94:	ebac 0c00 	sub.w	ip, ip, r0
 801fc98:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fc9c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fca0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fca2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fca4:	0418      	lsls	r0, r3, #16
 801fca6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fcaa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fcae:	4318      	orrs	r0, r3
 801fcb0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801fcb4:	fb02 c200 	mla	r2, r2, r0, ip
 801fcb8:	0d53      	lsrs	r3, r2, #21
 801fcba:	0952      	lsrs	r2, r2, #5
 801fcbc:	8838      	ldrh	r0, [r7, #0]
 801fcbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fcc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fcc6:	431a      	orrs	r2, r3
 801fcc8:	b292      	uxth	r2, r2
 801fcca:	1201      	asrs	r1, r0, #8
 801fccc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801fcd0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801fcd4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fcd8:	fb11 f104 	smulbb	r1, r1, r4
 801fcdc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801fce0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fce4:	00c0      	lsls	r0, r0, #3
 801fce6:	fb0c 1c03 	mla	ip, ip, r3, r1
 801fcea:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801fcee:	10d1      	asrs	r1, r2, #3
 801fcf0:	b2c0      	uxtb	r0, r0
 801fcf2:	00d2      	lsls	r2, r2, #3
 801fcf4:	b2d2      	uxtb	r2, r2
 801fcf6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fcfa:	fb1e fe04 	smulbb	lr, lr, r4
 801fcfe:	fb10 f004 	smulbb	r0, r0, r4
 801fd02:	fa1f fc8c 	uxth.w	ip, ip
 801fd06:	fb01 e103 	mla	r1, r1, r3, lr
 801fd0a:	fb02 0303 	mla	r3, r2, r3, r0
 801fd0e:	b29a      	uxth	r2, r3
 801fd10:	f10c 0301 	add.w	r3, ip, #1
 801fd14:	b289      	uxth	r1, r1
 801fd16:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fd1a:	1c53      	adds	r3, r2, #1
 801fd1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fd20:	1c4a      	adds	r2, r1, #1
 801fd22:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fd26:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fd2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fd2e:	0949      	lsrs	r1, r1, #5
 801fd30:	ea43 030c 	orr.w	r3, r3, ip
 801fd34:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd38:	430b      	orrs	r3, r1
 801fd3a:	803b      	strh	r3, [r7, #0]
 801fd3c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fd3e:	449a      	add	sl, r3
 801fd40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fd42:	3702      	adds	r7, #2
 801fd44:	441d      	add	r5, r3
 801fd46:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fd4a:	e742      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fd4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fd4e:	449a      	add	sl, r3
 801fd50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fd52:	441d      	add	r5, r3
 801fd54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd56:	3b01      	subs	r3, #1
 801fd58:	9309      	str	r3, [sp, #36]	; 0x24
 801fd5a:	f108 0802 	add.w	r8, r8, #2
 801fd5e:	e718      	b.n	801fb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fd60:	d023      	beq.n	801fdaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fd62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fd64:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fd66:	3b01      	subs	r3, #1
 801fd68:	fb00 a003 	mla	r0, r0, r3, sl
 801fd6c:	1400      	asrs	r0, r0, #16
 801fd6e:	f53f af2d 	bmi.w	801fbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fd72:	3901      	subs	r1, #1
 801fd74:	4288      	cmp	r0, r1
 801fd76:	f6bf af29 	bge.w	801fbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fd7a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fd7c:	fb01 5303 	mla	r3, r1, r3, r5
 801fd80:	141b      	asrs	r3, r3, #16
 801fd82:	f53f af23 	bmi.w	801fbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fd86:	3a01      	subs	r2, #1
 801fd88:	4293      	cmp	r3, r2
 801fd8a:	f6bf af1f 	bge.w	801fbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fd8e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fd92:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fd96:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fd9a:	f1be 0f00 	cmp.w	lr, #0
 801fd9e:	dc6c      	bgt.n	801fe7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fda0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fda2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fda6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fdaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fdac:	2b00      	cmp	r3, #0
 801fdae:	f340 810e 	ble.w	801ffce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fdb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fdb6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fdba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fdbe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fdc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fdc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdcc:	eef0 6a62 	vmov.f32	s13, s5
 801fdd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fddc:	ee16 aa90 	vmov	sl, s13
 801fde0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fde4:	eef0 6a43 	vmov.f32	s13, s6
 801fde8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fdec:	ee12 2a90 	vmov	r2, s5
 801fdf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fdf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdf8:	ee13 2a10 	vmov	r2, s6
 801fdfc:	9325      	str	r3, [sp, #148]	; 0x94
 801fdfe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fe00:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe04:	9326      	str	r3, [sp, #152]	; 0x98
 801fe06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe08:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fe0a:	3b01      	subs	r3, #1
 801fe0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fe10:	930c      	str	r3, [sp, #48]	; 0x30
 801fe12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fe14:	bf08      	it	eq
 801fe16:	4613      	moveq	r3, r2
 801fe18:	ee16 5a90 	vmov	r5, s13
 801fe1c:	9309      	str	r3, [sp, #36]	; 0x24
 801fe1e:	eeb0 3a67 	vmov.f32	s6, s15
 801fe22:	eef0 2a47 	vmov.f32	s5, s14
 801fe26:	e6a6      	b.n	801fb76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fe28:	2900      	cmp	r1, #0
 801fe2a:	f43f af10 	beq.w	801fc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fe2e:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fe32:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fe36:	930f      	str	r3, [sp, #60]	; 0x3c
 801fe38:	e709      	b.n	801fc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fe3a:	f112 0901 	adds.w	r9, r2, #1
 801fe3e:	f53f af7d 	bmi.w	801fd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fe42:	454b      	cmp	r3, r9
 801fe44:	f6ff af7a 	blt.w	801fd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fe48:	f11c 0901 	adds.w	r9, ip, #1
 801fe4c:	f53f af76 	bmi.w	801fd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fe50:	45ce      	cmp	lr, r9
 801fe52:	f6ff af73 	blt.w	801fd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fe56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe58:	9202      	str	r2, [sp, #8]
 801fe5a:	b21b      	sxth	r3, r3
 801fe5c:	fa0f f28e 	sxth.w	r2, lr
 801fe60:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fe64:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fe68:	9201      	str	r2, [sp, #4]
 801fe6a:	9300      	str	r3, [sp, #0]
 801fe6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fe6e:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fe70:	4633      	mov	r3, r6
 801fe72:	4639      	mov	r1, r7
 801fe74:	f7ff fd8e 	bl	801f994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fe78:	e760      	b.n	801fd3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fe7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe7c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fe7e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fe82:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fe86:	1429      	asrs	r1, r5, #16
 801fe88:	fb03 2101 	mla	r1, r3, r1, r2
 801fe8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fe8e:	440a      	add	r2, r1
 801fe90:	5c61      	ldrb	r1, [r4, r1]
 801fe92:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fe96:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fe9a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fe9e:	f1bc 0f00 	cmp.w	ip, #0
 801fea2:	f000 808c 	beq.w	801ffbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fea6:	7857      	ldrb	r7, [r2, #1]
 801fea8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801feac:	9413      	str	r4, [sp, #76]	; 0x4c
 801feae:	b140      	cbz	r0, 801fec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801feb0:	18d7      	adds	r7, r2, r3
 801feb2:	5cd3      	ldrb	r3, [r2, r3]
 801feb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801feb8:	9310      	str	r3, [sp, #64]	; 0x40
 801feba:	787b      	ldrb	r3, [r7, #1]
 801febc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fec0:	9314      	str	r3, [sp, #80]	; 0x50
 801fec2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fec4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fec6:	fb1c f200 	smulbb	r2, ip, r0
 801feca:	041f      	lsls	r7, r3, #16
 801fecc:	10d2      	asrs	r2, r2, #3
 801fece:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fed2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fed6:	431f      	orrs	r7, r3
 801fed8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fedc:	9317      	str	r3, [sp, #92]	; 0x5c
 801fede:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fee0:	041b      	lsls	r3, r3, #16
 801fee2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fee6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801feea:	ea43 030b 	orr.w	r3, r3, fp
 801feee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fef0:	4353      	muls	r3, r2
 801fef2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fef6:	fb04 3707 	mla	r7, r4, r7, r3
 801fefa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fefe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ff02:	ea43 0b01 	orr.w	fp, r3, r1
 801ff06:	f1c0 0110 	rsb	r1, r0, #16
 801ff0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff0c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ff0e:	eba1 0c0c 	sub.w	ip, r1, ip
 801ff12:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ff16:	fb0c 770b 	mla	r7, ip, fp, r7
 801ff1a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ff1e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ff22:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ff26:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ff2a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ff2e:	fb02 770c 	mla	r7, r2, ip, r7
 801ff32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff34:	0d79      	lsrs	r1, r7, #21
 801ff36:	097f      	lsrs	r7, r7, #5
 801ff38:	8812      	ldrh	r2, [r2, #0]
 801ff3a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ff3e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ff42:	430f      	orrs	r7, r1
 801ff44:	b2bb      	uxth	r3, r7
 801ff46:	1211      	asrs	r1, r2, #8
 801ff48:	1218      	asrs	r0, r3, #8
 801ff4a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ff4e:	fb11 f104 	smulbb	r1, r1, r4
 801ff52:	10d7      	asrs	r7, r2, #3
 801ff54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ff58:	00d2      	lsls	r2, r2, #3
 801ff5a:	fb00 1009 	mla	r0, r0, r9, r1
 801ff5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ff62:	10d9      	asrs	r1, r3, #3
 801ff64:	b2d2      	uxtb	r2, r2
 801ff66:	00db      	lsls	r3, r3, #3
 801ff68:	fb17 f704 	smulbb	r7, r7, r4
 801ff6c:	fb12 f204 	smulbb	r2, r2, r4
 801ff70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ff74:	b2db      	uxtb	r3, r3
 801ff76:	b280      	uxth	r0, r0
 801ff78:	fb01 7109 	mla	r1, r1, r9, r7
 801ff7c:	fb03 2309 	mla	r3, r3, r9, r2
 801ff80:	b29b      	uxth	r3, r3
 801ff82:	b289      	uxth	r1, r1
 801ff84:	1c42      	adds	r2, r0, #1
 801ff86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ff8a:	1c4f      	adds	r7, r1, #1
 801ff8c:	1c5a      	adds	r2, r3, #1
 801ff8e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ff92:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ff96:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ff9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ff9e:	0949      	lsrs	r1, r1, #5
 801ffa0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ffa2:	4310      	orrs	r0, r2
 801ffa4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ffa8:	4308      	orrs	r0, r1
 801ffaa:	f823 0b02 	strh.w	r0, [r3], #2
 801ffae:	930e      	str	r3, [sp, #56]	; 0x38
 801ffb0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ffb2:	449a      	add	sl, r3
 801ffb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ffb6:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ffba:	441d      	add	r5, r3
 801ffbc:	e6ed      	b.n	801fd9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ffbe:	2800      	cmp	r0, #0
 801ffc0:	f43f af7f 	beq.w	801fec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ffc4:	5cd3      	ldrb	r3, [r2, r3]
 801ffc6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ffca:	9310      	str	r3, [sp, #64]	; 0x40
 801ffcc:	e779      	b.n	801fec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ffce:	b019      	add	sp, #100	; 0x64
 801ffd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ffd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ffd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ffd8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ffdc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ffe0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ffe4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ffe8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ffec:	8808      	ldrh	r0, [r1, #0]
 801ffee:	fb08 470e 	mla	r7, r8, lr, r4
 801fff2:	f1b8 0f00 	cmp.w	r8, #0
 801fff6:	eb02 0907 	add.w	r9, r2, r7
 801fffa:	db67      	blt.n	80200cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fffc:	45c2      	cmp	sl, r8
 801fffe:	dd65      	ble.n	80200cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020000:	2c00      	cmp	r4, #0
 8020002:	db61      	blt.n	80200c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020004:	45a6      	cmp	lr, r4
 8020006:	dd5f      	ble.n	80200c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020008:	5dd2      	ldrb	r2, [r2, r7]
 802000a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802000e:	1c62      	adds	r2, r4, #1
 8020010:	d45f      	bmi.n	80200d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020012:	4596      	cmp	lr, r2
 8020014:	dd5d      	ble.n	80200d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020016:	2d00      	cmp	r5, #0
 8020018:	d05b      	beq.n	80200d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802001a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802001e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020022:	f118 0801 	adds.w	r8, r8, #1
 8020026:	d458      	bmi.n	80200da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020028:	45c2      	cmp	sl, r8
 802002a:	dd56      	ble.n	80200da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802002c:	2e00      	cmp	r6, #0
 802002e:	d054      	beq.n	80200da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020030:	2c00      	cmp	r4, #0
 8020032:	db50      	blt.n	80200d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020034:	45a6      	cmp	lr, r4
 8020036:	dd4e      	ble.n	80200d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020038:	f819 200e 	ldrb.w	r2, [r9, lr]
 802003c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020040:	3401      	adds	r4, #1
 8020042:	d407      	bmi.n	8020054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020044:	45a6      	cmp	lr, r4
 8020046:	dd05      	ble.n	8020054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020048:	b125      	cbz	r5, 8020054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802004a:	44ce      	add	lr, r9
 802004c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020050:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020054:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020058:	fb15 f406 	smulbb	r4, r5, r6
 802005c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020060:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020064:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020068:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802006c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020070:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020074:	f1c6 0310 	rsb	r3, r6, #16
 8020078:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802007c:	1b5b      	subs	r3, r3, r5
 802007e:	ea4e 0707 	orr.w	r7, lr, r7
 8020082:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020086:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802008a:	437d      	muls	r5, r7
 802008c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020090:	0403      	lsls	r3, r0, #16
 8020092:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020096:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802009a:	4318      	orrs	r0, r3
 802009c:	0413      	lsls	r3, r2, #16
 802009e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80200a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80200a6:	4313      	orrs	r3, r2
 80200a8:	fb04 c000 	mla	r0, r4, r0, ip
 80200ac:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80200b0:	fb06 0003 	mla	r0, r6, r3, r0
 80200b4:	0d43      	lsrs	r3, r0, #21
 80200b6:	0940      	lsrs	r0, r0, #5
 80200b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80200c0:	4318      	orrs	r0, r3
 80200c2:	8008      	strh	r0, [r1, #0]
 80200c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80200c8:	4684      	mov	ip, r0
 80200ca:	e7a0      	b.n	802000e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80200cc:	4607      	mov	r7, r0
 80200ce:	4684      	mov	ip, r0
 80200d0:	e7a7      	b.n	8020022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80200d2:	4607      	mov	r7, r0
 80200d4:	e7a5      	b.n	8020022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80200d6:	4602      	mov	r2, r0
 80200d8:	e7b2      	b.n	8020040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80200da:	4602      	mov	r2, r0
 80200dc:	e7ba      	b.n	8020054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080200de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200e2:	b093      	sub	sp, #76	; 0x4c
 80200e4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80200e8:	920f      	str	r2, [sp, #60]	; 0x3c
 80200ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80200ec:	9108      	str	r1, [sp, #32]
 80200ee:	9306      	str	r3, [sp, #24]
 80200f0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80200f4:	9010      	str	r0, [sp, #64]	; 0x40
 80200f6:	6850      	ldr	r0, [r2, #4]
 80200f8:	6812      	ldr	r2, [r2, #0]
 80200fa:	fb00 1303 	mla	r3, r0, r3, r1
 80200fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020102:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020104:	681b      	ldr	r3, [r3, #0]
 8020106:	9307      	str	r3, [sp, #28]
 8020108:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802010a:	685f      	ldr	r7, [r3, #4]
 802010c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020110:	3704      	adds	r7, #4
 8020112:	9b08      	ldr	r3, [sp, #32]
 8020114:	2b00      	cmp	r3, #0
 8020116:	dc03      	bgt.n	8020120 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020118:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802011a:	2b00      	cmp	r3, #0
 802011c:	f340 81b2 	ble.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020120:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020122:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020126:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802012a:	1e48      	subs	r0, r1, #1
 802012c:	f102 3cff 	add.w	ip, r2, #4294967295
 8020130:	9b06      	ldr	r3, [sp, #24]
 8020132:	2b00      	cmp	r3, #0
 8020134:	f340 80a9 	ble.w	802028a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020138:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802013c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020140:	d406      	bmi.n	8020150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020142:	4586      	cmp	lr, r0
 8020144:	da04      	bge.n	8020150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020146:	2b00      	cmp	r3, #0
 8020148:	db02      	blt.n	8020150 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802014a:	4563      	cmp	r3, ip
 802014c:	f2c0 809e 	blt.w	802028c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020150:	f11e 0e01 	adds.w	lr, lr, #1
 8020154:	f100 808f 	bmi.w	8020276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020158:	4571      	cmp	r1, lr
 802015a:	f2c0 808c 	blt.w	8020276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802015e:	3301      	adds	r3, #1
 8020160:	f100 8089 	bmi.w	8020276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020164:	429a      	cmp	r2, r3
 8020166:	f2c0 8086 	blt.w	8020276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802016a:	f8dd b018 	ldr.w	fp, [sp, #24]
 802016e:	46c8      	mov	r8, r9
 8020170:	f1bb 0f00 	cmp.w	fp, #0
 8020174:	f340 80a6 	ble.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020178:	9a24      	ldr	r2, [sp, #144]	; 0x90
 802017a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802017c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020180:	689b      	ldr	r3, [r3, #8]
 8020182:	1422      	asrs	r2, r4, #16
 8020184:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020188:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802018c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020190:	f100 80e3 	bmi.w	802035a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020194:	f103 3aff 	add.w	sl, r3, #4294967295
 8020198:	4552      	cmp	r2, sl
 802019a:	f280 80de 	bge.w	802035a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802019e:	f1bc 0f00 	cmp.w	ip, #0
 80201a2:	f2c0 80da 	blt.w	802035a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80201a6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80201aa:	45d4      	cmp	ip, sl
 80201ac:	f280 80d5 	bge.w	802035a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80201b0:	b21b      	sxth	r3, r3
 80201b2:	fb0c 2203 	mla	r2, ip, r3, r2
 80201b6:	9d07      	ldr	r5, [sp, #28]
 80201b8:	eb05 0a02 	add.w	sl, r5, r2
 80201bc:	5caa      	ldrb	r2, [r5, r2]
 80201be:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80201c2:	2800      	cmp	r0, #0
 80201c4:	f000 80c0 	beq.w	8020348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80201c8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80201cc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80201d0:	920b      	str	r2, [sp, #44]	; 0x2c
 80201d2:	b151      	cbz	r1, 80201ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80201d4:	eb0a 0203 	add.w	r2, sl, r3
 80201d8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80201dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201e0:	9309      	str	r3, [sp, #36]	; 0x24
 80201e2:	7853      	ldrb	r3, [r2, #1]
 80201e4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80201e8:	930c      	str	r3, [sp, #48]	; 0x30
 80201ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80201ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80201f2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80201f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80201fa:	ea4c 0c03 	orr.w	ip, ip, r3
 80201fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020200:	041b      	lsls	r3, r3, #16
 8020202:	fb10 f201 	smulbb	r2, r0, r1
 8020206:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802020a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802020e:	10d2      	asrs	r2, r2, #3
 8020210:	432b      	orrs	r3, r5
 8020212:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020216:	4353      	muls	r3, r2
 8020218:	fb0a 330c 	mla	r3, sl, ip, r3
 802021c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020220:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020224:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020228:	ea4c 0e0e 	orr.w	lr, ip, lr
 802022c:	f1c1 0c10 	rsb	ip, r1, #16
 8020230:	ebac 0c00 	sub.w	ip, ip, r0
 8020234:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020238:	fb0c 3c0e 	mla	ip, ip, lr, r3
 802023c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802023e:	0418      	lsls	r0, r3, #16
 8020240:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020244:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020248:	4318      	orrs	r0, r3
 802024a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802024e:	fb02 c200 	mla	r2, r2, r0, ip
 8020252:	0d53      	lsrs	r3, r2, #21
 8020254:	0952      	lsrs	r2, r2, #5
 8020256:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802025a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802025e:	431a      	orrs	r2, r3
 8020260:	f8a8 2000 	strh.w	r2, [r8]
 8020264:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020266:	441c      	add	r4, r3
 8020268:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802026a:	f108 0802 	add.w	r8, r8, #2
 802026e:	441e      	add	r6, r3
 8020270:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020274:	e77c      	b.n	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020276:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020278:	441c      	add	r4, r3
 802027a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802027c:	441e      	add	r6, r3
 802027e:	9b06      	ldr	r3, [sp, #24]
 8020280:	3b01      	subs	r3, #1
 8020282:	9306      	str	r3, [sp, #24]
 8020284:	f109 0902 	add.w	r9, r9, #2
 8020288:	e752      	b.n	8020130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802028a:	d020      	beq.n	80202ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 802028c:	9b06      	ldr	r3, [sp, #24]
 802028e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020290:	3b01      	subs	r3, #1
 8020292:	fb00 4003 	mla	r0, r0, r3, r4
 8020296:	1400      	asrs	r0, r0, #16
 8020298:	f53f af67 	bmi.w	802016a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802029c:	3901      	subs	r1, #1
 802029e:	4288      	cmp	r0, r1
 80202a0:	f6bf af63 	bge.w	802016a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80202a4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80202a6:	fb01 6303 	mla	r3, r1, r3, r6
 80202aa:	141b      	asrs	r3, r3, #16
 80202ac:	f53f af5d 	bmi.w	802016a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80202b0:	3a01      	subs	r2, #1
 80202b2:	4293      	cmp	r3, r2
 80202b4:	f6bf af59 	bge.w	802016a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80202b8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80202bc:	46ca      	mov	sl, r9
 80202be:	f1b8 0f00 	cmp.w	r8, #0
 80202c2:	dc67      	bgt.n	8020394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80202c4:	9b06      	ldr	r3, [sp, #24]
 80202c6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80202ca:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80202ce:	9b08      	ldr	r3, [sp, #32]
 80202d0:	2b00      	cmp	r3, #0
 80202d2:	f340 80d7 	ble.w	8020484 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80202d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80202e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80202e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202ec:	eeb0 6a62 	vmov.f32	s12, s5
 80202f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80202f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202fc:	ee16 4a10 	vmov	r4, s12
 8020300:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020304:	eeb0 6a43 	vmov.f32	s12, s6
 8020308:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802030c:	ee12 2a90 	vmov	r2, s5
 8020310:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020314:	fb92 f3f3 	sdiv	r3, r2, r3
 8020318:	ee13 2a10 	vmov	r2, s6
 802031c:	931f      	str	r3, [sp, #124]	; 0x7c
 802031e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020320:	fb92 f3f3 	sdiv	r3, r2, r3
 8020324:	9320      	str	r3, [sp, #128]	; 0x80
 8020326:	9b08      	ldr	r3, [sp, #32]
 8020328:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802032a:	3b01      	subs	r3, #1
 802032c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020330:	9308      	str	r3, [sp, #32]
 8020332:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020334:	bf08      	it	eq
 8020336:	4613      	moveq	r3, r2
 8020338:	ee16 6a10 	vmov	r6, s12
 802033c:	9306      	str	r3, [sp, #24]
 802033e:	eeb0 3a67 	vmov.f32	s6, s15
 8020342:	eef0 2a47 	vmov.f32	s5, s14
 8020346:	e6e4      	b.n	8020112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020348:	2900      	cmp	r1, #0
 802034a:	f43f af4e 	beq.w	80201ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802034e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020352:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020356:	9309      	str	r3, [sp, #36]	; 0x24
 8020358:	e747      	b.n	80201ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802035a:	f112 0a01 	adds.w	sl, r2, #1
 802035e:	d481      	bmi.n	8020264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020360:	4553      	cmp	r3, sl
 8020362:	f6ff af7f 	blt.w	8020264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020366:	f11c 0a01 	adds.w	sl, ip, #1
 802036a:	f53f af7b 	bmi.w	8020264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802036e:	45d6      	cmp	lr, sl
 8020370:	f6ff af78 	blt.w	8020264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020374:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020378:	b21b      	sxth	r3, r3
 802037a:	fa0f f28e 	sxth.w	r2, lr
 802037e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020382:	9201      	str	r2, [sp, #4]
 8020384:	9300      	str	r3, [sp, #0]
 8020386:	9a07      	ldr	r2, [sp, #28]
 8020388:	9810      	ldr	r0, [sp, #64]	; 0x40
 802038a:	463b      	mov	r3, r7
 802038c:	4641      	mov	r1, r8
 802038e:	f7ff fe21 	bl	801ffd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020392:	e767      	b.n	8020264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020394:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020396:	9d07      	ldr	r5, [sp, #28]
 8020398:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802039c:	1422      	asrs	r2, r4, #16
 802039e:	1431      	asrs	r1, r6, #16
 80203a0:	fb03 2101 	mla	r1, r3, r1, r2
 80203a4:	9a07      	ldr	r2, [sp, #28]
 80203a6:	440a      	add	r2, r1
 80203a8:	5c69      	ldrb	r1, [r5, r1]
 80203aa:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80203ae:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80203b2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80203b6:	f1be 0f00 	cmp.w	lr, #0
 80203ba:	d05c      	beq.n	8020476 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80203bc:	f892 c001 	ldrb.w	ip, [r2, #1]
 80203c0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80203c4:	950d      	str	r5, [sp, #52]	; 0x34
 80203c6:	b150      	cbz	r0, 80203de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80203c8:	eb02 0c03 	add.w	ip, r2, r3
 80203cc:	5cd3      	ldrb	r3, [r2, r3]
 80203ce:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80203d2:	930a      	str	r3, [sp, #40]	; 0x28
 80203d4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80203d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80203dc:	930e      	str	r3, [sp, #56]	; 0x38
 80203de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80203e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80203e2:	fb1e f200 	smulbb	r2, lr, r0
 80203e6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80203ea:	10d2      	asrs	r2, r2, #3
 80203ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80203f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80203f4:	ea4c 0c03 	orr.w	ip, ip, r3
 80203f8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80203fc:	9311      	str	r3, [sp, #68]	; 0x44
 80203fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020400:	041b      	lsls	r3, r3, #16
 8020402:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020406:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802040a:	ea43 030b 	orr.w	r3, r3, fp
 802040e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020410:	4353      	muls	r3, r2
 8020412:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020416:	fb05 3c0c 	mla	ip, r5, ip, r3
 802041a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802041e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020422:	ea43 0b01 	orr.w	fp, r3, r1
 8020426:	f1c0 0110 	rsb	r1, r0, #16
 802042a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802042c:	eba1 0e0e 	sub.w	lr, r1, lr
 8020430:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020434:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020438:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 802043c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020440:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020444:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020448:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 802044c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020450:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020454:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020458:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802045c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020460:	ea43 0c0c 	orr.w	ip, r3, ip
 8020464:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020466:	f82a cb02 	strh.w	ip, [sl], #2
 802046a:	441c      	add	r4, r3
 802046c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802046e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020472:	441e      	add	r6, r3
 8020474:	e723      	b.n	80202be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020476:	2800      	cmp	r0, #0
 8020478:	d0b1      	beq.n	80203de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802047a:	5cd3      	ldrb	r3, [r2, r3]
 802047c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020480:	930a      	str	r3, [sp, #40]	; 0x28
 8020482:	e7ac      	b.n	80203de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020484:	b013      	add	sp, #76	; 0x4c
 8020486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802048a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802048a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802048e:	880d      	ldrh	r5, [r1, #0]
 8020490:	b087      	sub	sp, #28
 8020492:	10ef      	asrs	r7, r5, #3
 8020494:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020498:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802049c:	00ed      	lsls	r5, r5, #3
 802049e:	9701      	str	r7, [sp, #4]
 80204a0:	b2ed      	uxtb	r5, r5
 80204a2:	9502      	str	r5, [sp, #8]
 80204a4:	9d01      	ldr	r5, [sp, #4]
 80204a6:	9103      	str	r1, [sp, #12]
 80204a8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80204ac:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80204b0:	9902      	ldr	r1, [sp, #8]
 80204b2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80204b6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80204ba:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80204be:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80204c2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80204c6:	022d      	lsls	r5, r5, #8
 80204c8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80204cc:	fb06 0709 	mla	r7, r6, r9, r0
 80204d0:	430d      	orrs	r5, r1
 80204d2:	2e00      	cmp	r6, #0
 80204d4:	eb02 0c07 	add.w	ip, r2, r7
 80204d8:	9505      	str	r5, [sp, #20]
 80204da:	f2c0 80b6 	blt.w	802064a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80204de:	45b3      	cmp	fp, r6
 80204e0:	f340 80b3 	ble.w	802064a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80204e4:	2800      	cmp	r0, #0
 80204e6:	f2c0 80ae 	blt.w	8020646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80204ea:	4581      	cmp	r9, r0
 80204ec:	f340 80ab 	ble.w	8020646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80204f0:	5dd7      	ldrb	r7, [r2, r7]
 80204f2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80204f6:	441f      	add	r7, r3
 80204f8:	1c42      	adds	r2, r0, #1
 80204fa:	f100 80a9 	bmi.w	8020650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80204fe:	4591      	cmp	r9, r2
 8020500:	f340 80a6 	ble.w	8020650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020504:	2c00      	cmp	r4, #0
 8020506:	f000 80a3 	beq.w	8020650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802050a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802050e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020512:	441d      	add	r5, r3
 8020514:	3601      	adds	r6, #1
 8020516:	f100 809f 	bmi.w	8020658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802051a:	45b3      	cmp	fp, r6
 802051c:	f340 809c 	ble.w	8020658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020520:	f1be 0f00 	cmp.w	lr, #0
 8020524:	f000 8098 	beq.w	8020658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020528:	2800      	cmp	r0, #0
 802052a:	f2c0 8093 	blt.w	8020654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802052e:	4581      	cmp	r9, r0
 8020530:	f340 8090 	ble.w	8020654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020534:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020538:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802053c:	441e      	add	r6, r3
 802053e:	3001      	adds	r0, #1
 8020540:	f100 808d 	bmi.w	802065e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020544:	4581      	cmp	r9, r0
 8020546:	f340 808a 	ble.w	802065e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802054a:	2c00      	cmp	r4, #0
 802054c:	f000 8087 	beq.w	802065e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020550:	44e1      	add	r9, ip
 8020552:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020556:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802055a:	4413      	add	r3, r2
 802055c:	b2a4      	uxth	r4, r4
 802055e:	fa1f fe8e 	uxth.w	lr, lr
 8020562:	fb04 fb0e 	mul.w	fp, r4, lr
 8020566:	0124      	lsls	r4, r4, #4
 8020568:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 802056c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020570:	eba4 040b 	sub.w	r4, r4, fp
 8020574:	fa1f f08e 	uxth.w	r0, lr
 8020578:	b2a2      	uxth	r2, r4
 802057a:	78ac      	ldrb	r4, [r5, #2]
 802057c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020580:	9901      	ldr	r1, [sp, #4]
 8020582:	eba9 0900 	sub.w	r9, r9, r0
 8020586:	fa1f f989 	uxth.w	r9, r9
 802058a:	4354      	muls	r4, r2
 802058c:	fb09 440c 	mla	r4, r9, ip, r4
 8020590:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020594:	fb00 440c 	mla	r4, r0, ip, r4
 8020598:	f893 c002 	ldrb.w	ip, [r3, #2]
 802059c:	fa1f fe88 	uxth.w	lr, r8
 80205a0:	ea6f 0808 	mvn.w	r8, r8
 80205a4:	fa5f f888 	uxtb.w	r8, r8
 80205a8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80205ac:	fb1a fa08 	smulbb	sl, sl, r8
 80205b0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80205b4:	fb0c ac0e 	mla	ip, ip, lr, sl
 80205b8:	f895 a001 	ldrb.w	sl, [r5, #1]
 80205bc:	787c      	ldrb	r4, [r7, #1]
 80205be:	782d      	ldrb	r5, [r5, #0]
 80205c0:	783f      	ldrb	r7, [r7, #0]
 80205c2:	fb02 fa0a 	mul.w	sl, r2, sl
 80205c6:	fb09 aa04 	mla	sl, r9, r4, sl
 80205ca:	7874      	ldrb	r4, [r6, #1]
 80205cc:	436a      	muls	r2, r5
 80205ce:	7835      	ldrb	r5, [r6, #0]
 80205d0:	fb00 aa04 	mla	sl, r0, r4, sl
 80205d4:	fb09 2207 	mla	r2, r9, r7, r2
 80205d8:	785c      	ldrb	r4, [r3, #1]
 80205da:	781b      	ldrb	r3, [r3, #0]
 80205dc:	fb00 2005 	mla	r0, r0, r5, r2
 80205e0:	fb0b a404 	mla	r4, fp, r4, sl
 80205e4:	fb0b 0b03 	mla	fp, fp, r3, r0
 80205e8:	9b02      	ldr	r3, [sp, #8]
 80205ea:	fb11 fa08 	smulbb	sl, r1, r8
 80205ee:	fa1f fc8c 	uxth.w	ip, ip
 80205f2:	fb13 f808 	smulbb	r8, r3, r8
 80205f6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80205fa:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80205fe:	fb04 a40e 	mla	r4, r4, lr, sl
 8020602:	f10c 0301 	add.w	r3, ip, #1
 8020606:	fb0b 8e0e 	mla	lr, fp, lr, r8
 802060a:	fa1f fe8e 	uxth.w	lr, lr
 802060e:	b2a4      	uxth	r4, r4
 8020610:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020614:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020618:	f104 0a01 	add.w	sl, r4, #1
 802061c:	f10e 0c01 	add.w	ip, lr, #1
 8020620:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020624:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020628:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802062c:	0964      	lsrs	r4, r4, #5
 802062e:	ea4c 0c03 	orr.w	ip, ip, r3
 8020632:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020636:	9b03      	ldr	r3, [sp, #12]
 8020638:	ea4c 0c04 	orr.w	ip, ip, r4
 802063c:	f8a3 c000 	strh.w	ip, [r3]
 8020640:	b007      	add	sp, #28
 8020642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020646:	af05      	add	r7, sp, #20
 8020648:	e756      	b.n	80204f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802064a:	ad05      	add	r5, sp, #20
 802064c:	462f      	mov	r7, r5
 802064e:	e761      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020650:	ad05      	add	r5, sp, #20
 8020652:	e75f      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020654:	ae05      	add	r6, sp, #20
 8020656:	e772      	b.n	802053e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020658:	ab05      	add	r3, sp, #20
 802065a:	461e      	mov	r6, r3
 802065c:	e77e      	b.n	802055c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 802065e:	ab05      	add	r3, sp, #20
 8020660:	e77c      	b.n	802055c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08020662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020662:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020666:	b095      	sub	sp, #84	; 0x54
 8020668:	9212      	str	r2, [sp, #72]	; 0x48
 802066a:	9309      	str	r3, [sp, #36]	; 0x24
 802066c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802066e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8020672:	930f      	str	r3, [sp, #60]	; 0x3c
 8020674:	910e      	str	r1, [sp, #56]	; 0x38
 8020676:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 802067a:	9013      	str	r0, [sp, #76]	; 0x4c
 802067c:	6850      	ldr	r0, [r2, #4]
 802067e:	6812      	ldr	r2, [r2, #0]
 8020680:	fb00 1303 	mla	r3, r0, r3, r1
 8020684:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020688:	930a      	str	r3, [sp, #40]	; 0x28
 802068a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802068c:	681b      	ldr	r3, [r3, #0]
 802068e:	930d      	str	r3, [sp, #52]	; 0x34
 8020690:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020692:	685c      	ldr	r4, [r3, #4]
 8020694:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020696:	43db      	mvns	r3, r3
 8020698:	b2db      	uxtb	r3, r3
 802069a:	3404      	adds	r4, #4
 802069c:	930b      	str	r3, [sp, #44]	; 0x2c
 802069e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80206a0:	2b00      	cmp	r3, #0
 80206a2:	dc03      	bgt.n	80206ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80206a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80206a6:	2b00      	cmp	r3, #0
 80206a8:	f340 8255 	ble.w	8020b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80206ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80206ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80206b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80206b6:	1e48      	subs	r0, r1, #1
 80206b8:	1e55      	subs	r5, r2, #1
 80206ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206bc:	2b00      	cmp	r3, #0
 80206be:	f340 80f9 	ble.w	80208b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80206c2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80206c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80206c6:	1436      	asrs	r6, r6, #16
 80206c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80206cc:	d406      	bmi.n	80206dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80206ce:	4286      	cmp	r6, r0
 80206d0:	da04      	bge.n	80206dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80206d2:	2b00      	cmp	r3, #0
 80206d4:	db02      	blt.n	80206dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80206d6:	42ab      	cmp	r3, r5
 80206d8:	f2c0 80ed 	blt.w	80208b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80206dc:	3601      	adds	r6, #1
 80206de:	f100 80da 	bmi.w	8020896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80206e2:	42b1      	cmp	r1, r6
 80206e4:	f2c0 80d7 	blt.w	8020896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80206e8:	3301      	adds	r3, #1
 80206ea:	f100 80d4 	bmi.w	8020896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80206ee:	429a      	cmp	r2, r3
 80206f0:	f2c0 80d1 	blt.w	8020896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80206f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206f6:	9311      	str	r3, [sp, #68]	; 0x44
 80206f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80206fa:	930c      	str	r3, [sp, #48]	; 0x30
 80206fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80206fe:	2b00      	cmp	r3, #0
 8020700:	f340 80fa 	ble.w	80208f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020704:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020706:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020708:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802070a:	68c6      	ldr	r6, [r0, #12]
 802070c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802070e:	141d      	asrs	r5, r3, #16
 8020710:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020714:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020716:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020718:	1400      	asrs	r0, r0, #16
 802071a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802071e:	6892      	ldr	r2, [r2, #8]
 8020720:	f100 813e 	bmi.w	80209a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020724:	1e57      	subs	r7, r2, #1
 8020726:	42b8      	cmp	r0, r7
 8020728:	f280 813a 	bge.w	80209a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802072c:	2d00      	cmp	r5, #0
 802072e:	f2c0 8137 	blt.w	80209a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020732:	1e77      	subs	r7, r6, #1
 8020734:	42bd      	cmp	r5, r7
 8020736:	f280 8133 	bge.w	80209a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802073a:	b212      	sxth	r2, r2
 802073c:	fb05 0002 	mla	r0, r5, r2, r0
 8020740:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020742:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020746:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802074a:	182e      	adds	r6, r5, r0
 802074c:	eb04 050a 	add.w	r5, r4, sl
 8020750:	2b00      	cmp	r3, #0
 8020752:	f000 8117 	beq.w	8020984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020756:	f896 c001 	ldrb.w	ip, [r6, #1]
 802075a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802075e:	44a4      	add	ip, r4
 8020760:	2900      	cmp	r1, #0
 8020762:	f000 8117 	beq.w	8020994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020766:	18b0      	adds	r0, r6, r2
 8020768:	5cb2      	ldrb	r2, [r6, r2]
 802076a:	7840      	ldrb	r0, [r0, #1]
 802076c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020770:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020774:	4422      	add	r2, r4
 8020776:	4420      	add	r0, r4
 8020778:	b29b      	uxth	r3, r3
 802077a:	b289      	uxth	r1, r1
 802077c:	fb03 f901 	mul.w	r9, r3, r1
 8020780:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020784:	011b      	lsls	r3, r3, #4
 8020786:	b289      	uxth	r1, r1
 8020788:	f89c 7002 	ldrb.w	r7, [ip, #2]
 802078c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020790:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020792:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020796:	f8b6 e000 	ldrh.w	lr, [r6]
 802079a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802079e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80207a2:	eba3 0309 	sub.w	r3, r3, r9
 80207a6:	b29b      	uxth	r3, r3
 80207a8:	eba8 0801 	sub.w	r8, r8, r1
 80207ac:	fa1f f888 	uxth.w	r8, r8
 80207b0:	435f      	muls	r7, r3
 80207b2:	fb08 770b 	mla	r7, r8, fp, r7
 80207b6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80207ba:	9310      	str	r3, [sp, #64]	; 0x40
 80207bc:	fb01 770b 	mla	r7, r1, fp, r7
 80207c0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80207c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80207c6:	fb09 770b 	mla	r7, r9, fp, r7
 80207ca:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80207ce:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80207d2:	fb1b fb03 	smulbb	fp, fp, r3
 80207d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80207da:	fb07 b706 	mla	r7, r7, r6, fp
 80207de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80207e0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80207e4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80207e8:	f89c c000 	ldrb.w	ip, [ip]
 80207ec:	435d      	muls	r5, r3
 80207ee:	fb08 550b 	mla	r5, r8, fp, r5
 80207f2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80207f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80207f8:	fb01 550b 	mla	r5, r1, fp, r5
 80207fc:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020800:	fb09 550b 	mla	r5, r9, fp, r5
 8020804:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020808:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 802080c:	fb1b fb03 	smulbb	fp, fp, r3
 8020810:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020812:	fb03 f30c 	mul.w	r3, r3, ip
 8020816:	f892 c000 	ldrb.w	ip, [r2]
 802081a:	fb08 330a 	mla	r3, r8, sl, r3
 802081e:	fb01 330c 	mla	r3, r1, ip, r3
 8020822:	f890 c000 	ldrb.w	ip, [r0]
 8020826:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802082a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802082e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020830:	fa5f fe8e 	uxtb.w	lr, lr
 8020834:	b2bf      	uxth	r7, r7
 8020836:	fb1e fe03 	smulbb	lr, lr, r3
 802083a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802083e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020842:	fb05 b506 	mla	r5, r5, r6, fp
 8020846:	1c7b      	adds	r3, r7, #1
 8020848:	fb0c e606 	mla	r6, ip, r6, lr
 802084c:	b2ad      	uxth	r5, r5
 802084e:	b2b6      	uxth	r6, r6
 8020850:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020854:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020858:	f105 0b01 	add.w	fp, r5, #1
 802085c:	1c77      	adds	r7, r6, #1
 802085e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8020862:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020866:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802086a:	096d      	lsrs	r5, r5, #5
 802086c:	431f      	orrs	r7, r3
 802086e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020872:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020874:	433d      	orrs	r5, r7
 8020876:	801d      	strh	r5, [r3, #0]
 8020878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802087a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802087c:	3302      	adds	r3, #2
 802087e:	930c      	str	r3, [sp, #48]	; 0x30
 8020880:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020882:	4413      	add	r3, r2
 8020884:	931f      	str	r3, [sp, #124]	; 0x7c
 8020886:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020888:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802088a:	4413      	add	r3, r2
 802088c:	9320      	str	r3, [sp, #128]	; 0x80
 802088e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020890:	3b01      	subs	r3, #1
 8020892:	9311      	str	r3, [sp, #68]	; 0x44
 8020894:	e732      	b.n	80206fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020896:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020898:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802089a:	4433      	add	r3, r6
 802089c:	931f      	str	r3, [sp, #124]	; 0x7c
 802089e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80208a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80208a2:	4433      	add	r3, r6
 80208a4:	9320      	str	r3, [sp, #128]	; 0x80
 80208a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208a8:	3b01      	subs	r3, #1
 80208aa:	9309      	str	r3, [sp, #36]	; 0x24
 80208ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80208ae:	3302      	adds	r3, #2
 80208b0:	930a      	str	r3, [sp, #40]	; 0x28
 80208b2:	e702      	b.n	80206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80208b4:	d027      	beq.n	8020906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80208b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208b8:	9821      	ldr	r0, [sp, #132]	; 0x84
 80208ba:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80208bc:	3b01      	subs	r3, #1
 80208be:	fb00 5003 	mla	r0, r0, r3, r5
 80208c2:	1400      	asrs	r0, r0, #16
 80208c4:	f53f af16 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80208c8:	3901      	subs	r1, #1
 80208ca:	4288      	cmp	r0, r1
 80208cc:	f6bf af12 	bge.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80208d0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80208d2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80208d4:	fb01 0303 	mla	r3, r1, r3, r0
 80208d8:	141b      	asrs	r3, r3, #16
 80208da:	f53f af0b 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80208de:	3a01      	subs	r2, #1
 80208e0:	4293      	cmp	r3, r2
 80208e2:	f6bf af07 	bge.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80208e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208e8:	9311      	str	r3, [sp, #68]	; 0x44
 80208ea:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80208ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80208f0:	930c      	str	r3, [sp, #48]	; 0x30
 80208f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80208f4:	2b00      	cmp	r3, #0
 80208f6:	dc70      	bgt.n	80209da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80208f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80208fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020900:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020904:	930a      	str	r3, [sp, #40]	; 0x28
 8020906:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020908:	2b00      	cmp	r3, #0
 802090a:	f340 8124 	ble.w	8020b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802090e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020912:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020916:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802091a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802091c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020920:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020924:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020928:	eef0 6a62 	vmov.f32	s13, s5
 802092c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020930:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020934:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020938:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802093c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020940:	eef0 6a43 	vmov.f32	s13, s6
 8020944:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020948:	ee12 2a90 	vmov	r2, s5
 802094c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020950:	fb92 f3f3 	sdiv	r3, r2, r3
 8020954:	ee13 2a10 	vmov	r2, s6
 8020958:	9321      	str	r3, [sp, #132]	; 0x84
 802095a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802095c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020960:	9322      	str	r3, [sp, #136]	; 0x88
 8020962:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020964:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020966:	3b01      	subs	r3, #1
 8020968:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802096c:	930e      	str	r3, [sp, #56]	; 0x38
 802096e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020970:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020974:	bf08      	it	eq
 8020976:	4613      	moveq	r3, r2
 8020978:	9309      	str	r3, [sp, #36]	; 0x24
 802097a:	eeb0 3a67 	vmov.f32	s6, s15
 802097e:	eef0 2a47 	vmov.f32	s5, s14
 8020982:	e68c      	b.n	802069e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020984:	b149      	cbz	r1, 802099a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020986:	5cb2      	ldrb	r2, [r6, r2]
 8020988:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802098c:	4422      	add	r2, r4
 802098e:	4628      	mov	r0, r5
 8020990:	46ac      	mov	ip, r5
 8020992:	e6f1      	b.n	8020778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020994:	4628      	mov	r0, r5
 8020996:	462a      	mov	r2, r5
 8020998:	e6ee      	b.n	8020778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802099a:	4628      	mov	r0, r5
 802099c:	462a      	mov	r2, r5
 802099e:	e7f7      	b.n	8020990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80209a0:	1c47      	adds	r7, r0, #1
 80209a2:	f53f af69 	bmi.w	8020878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80209a6:	42ba      	cmp	r2, r7
 80209a8:	f6ff af66 	blt.w	8020878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80209ac:	1c6f      	adds	r7, r5, #1
 80209ae:	f53f af63 	bmi.w	8020878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80209b2:	42be      	cmp	r6, r7
 80209b4:	f6ff af60 	blt.w	8020878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80209b8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80209ba:	9002      	str	r0, [sp, #8]
 80209bc:	b236      	sxth	r6, r6
 80209be:	b212      	sxth	r2, r2
 80209c0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80209c4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80209c8:	9200      	str	r2, [sp, #0]
 80209ca:	9601      	str	r6, [sp, #4]
 80209cc:	4623      	mov	r3, r4
 80209ce:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80209d2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80209d4:	f7ff fd59 	bl	802048a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80209d8:	e74e      	b.n	8020878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80209da:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80209dc:	9820      	ldr	r0, [sp, #128]	; 0x80
 80209de:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80209e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80209e2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80209e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80209e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80209ec:	142d      	asrs	r5, r5, #16
 80209ee:	1400      	asrs	r0, r0, #16
 80209f0:	fb02 5000 	mla	r0, r2, r0, r5
 80209f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80209f6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80209fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80209fe:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8020a02:	182e      	adds	r6, r5, r0
 8020a04:	eb04 0509 	add.w	r5, r4, r9
 8020a08:	2b00      	cmp	r3, #0
 8020a0a:	f000 8096 	beq.w	8020b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020a0e:	7877      	ldrb	r7, [r6, #1]
 8020a10:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020a14:	4427      	add	r7, r4
 8020a16:	2900      	cmp	r1, #0
 8020a18:	f000 8097 	beq.w	8020b4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020a1c:	18b0      	adds	r0, r6, r2
 8020a1e:	5cb2      	ldrb	r2, [r6, r2]
 8020a20:	7840      	ldrb	r0, [r0, #1]
 8020a22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020a2a:	4422      	add	r2, r4
 8020a2c:	4420      	add	r0, r4
 8020a2e:	b29b      	uxth	r3, r3
 8020a30:	b289      	uxth	r1, r1
 8020a32:	fb03 f801 	mul.w	r8, r3, r1
 8020a36:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020a38:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020a3c:	f8b6 c000 	ldrh.w	ip, [r6]
 8020a40:	78be      	ldrb	r6, [r7, #2]
 8020a42:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020a46:	011b      	lsls	r3, r3, #4
 8020a48:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020a4c:	b289      	uxth	r1, r1
 8020a4e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020a52:	eba3 0308 	sub.w	r3, r3, r8
 8020a56:	b29b      	uxth	r3, r3
 8020a58:	ebae 0e01 	sub.w	lr, lr, r1
 8020a5c:	fa1f fe8e 	uxth.w	lr, lr
 8020a60:	435e      	muls	r6, r3
 8020a62:	fb0e 660b 	mla	r6, lr, fp, r6
 8020a66:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020a6a:	9310      	str	r3, [sp, #64]	; 0x40
 8020a6c:	fb01 660b 	mla	r6, r1, fp, r6
 8020a70:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020a74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020a76:	fb08 660b 	mla	r6, r8, fp, r6
 8020a7a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020a7e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8020a82:	fb1b fb03 	smulbb	fp, fp, r3
 8020a86:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020a8a:	fb06 b60a 	mla	r6, r6, sl, fp
 8020a8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020a90:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020a94:	787d      	ldrb	r5, [r7, #1]
 8020a96:	783f      	ldrb	r7, [r7, #0]
 8020a98:	435d      	muls	r5, r3
 8020a9a:	fb0e 550b 	mla	r5, lr, fp, r5
 8020a9e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020aa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020aa4:	fb01 550b 	mla	r5, r1, fp, r5
 8020aa8:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020aac:	fb08 550b 	mla	r5, r8, fp, r5
 8020ab0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020ab4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020ab8:	fb1b fb03 	smulbb	fp, fp, r3
 8020abc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020abe:	437b      	muls	r3, r7
 8020ac0:	7817      	ldrb	r7, [r2, #0]
 8020ac2:	fb0e 3309 	mla	r3, lr, r9, r3
 8020ac6:	fb01 3307 	mla	r3, r1, r7, r3
 8020aca:	7807      	ldrb	r7, [r0, #0]
 8020acc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020ad0:	fb08 3707 	mla	r7, r8, r7, r3
 8020ad4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ad6:	fa5f fc8c 	uxtb.w	ip, ip
 8020ada:	fb1c fc03 	smulbb	ip, ip, r3
 8020ade:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020ae2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020ae6:	fb05 b50a 	mla	r5, r5, sl, fp
 8020aea:	fb07 c70a 	mla	r7, r7, sl, ip
 8020aee:	b2b6      	uxth	r6, r6
 8020af0:	b2ad      	uxth	r5, r5
 8020af2:	b2bf      	uxth	r7, r7
 8020af4:	1c73      	adds	r3, r6, #1
 8020af6:	1c7a      	adds	r2, r7, #1
 8020af8:	f105 0b01 	add.w	fp, r5, #1
 8020afc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020b00:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020b04:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020b08:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020b0c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020b10:	096d      	lsrs	r5, r5, #5
 8020b12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020b14:	4316      	orrs	r6, r2
 8020b16:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020b1a:	432e      	orrs	r6, r5
 8020b1c:	f823 6b02 	strh.w	r6, [r3], #2
 8020b20:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020b22:	930c      	str	r3, [sp, #48]	; 0x30
 8020b24:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020b26:	4413      	add	r3, r2
 8020b28:	931f      	str	r3, [sp, #124]	; 0x7c
 8020b2a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020b2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020b2e:	4413      	add	r3, r2
 8020b30:	9320      	str	r3, [sp, #128]	; 0x80
 8020b32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020b34:	3b01      	subs	r3, #1
 8020b36:	9311      	str	r3, [sp, #68]	; 0x44
 8020b38:	e6db      	b.n	80208f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020b3a:	b149      	cbz	r1, 8020b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020b3c:	5cb2      	ldrb	r2, [r6, r2]
 8020b3e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020b42:	4422      	add	r2, r4
 8020b44:	4628      	mov	r0, r5
 8020b46:	462f      	mov	r7, r5
 8020b48:	e771      	b.n	8020a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020b4a:	4628      	mov	r0, r5
 8020b4c:	462a      	mov	r2, r5
 8020b4e:	e76e      	b.n	8020a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020b50:	4628      	mov	r0, r5
 8020b52:	462a      	mov	r2, r5
 8020b54:	e7f7      	b.n	8020b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020b56:	b015      	add	sp, #84	; 0x54
 8020b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020b5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b60:	880f      	ldrh	r7, [r1, #0]
 8020b62:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020b66:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020b6a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8020b6e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8020b72:	023c      	lsls	r4, r7, #8
 8020b74:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020b78:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020b7c:	017c      	lsls	r4, r7, #5
 8020b7e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8020b82:	00ff      	lsls	r7, r7, #3
 8020b84:	ea4b 0404 	orr.w	r4, fp, r4
 8020b88:	b2ff      	uxtb	r7, r7
 8020b8a:	fb05 ca0e 	mla	sl, r5, lr, ip
 8020b8e:	4327      	orrs	r7, r4
 8020b90:	2d00      	cmp	r5, #0
 8020b92:	eb02 080a 	add.w	r8, r2, sl
 8020b96:	9701      	str	r7, [sp, #4]
 8020b98:	db7e      	blt.n	8020c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020b9a:	45a9      	cmp	r9, r5
 8020b9c:	dd7c      	ble.n	8020c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020b9e:	f1bc 0f00 	cmp.w	ip, #0
 8020ba2:	db77      	blt.n	8020c94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ba4:	45e6      	cmp	lr, ip
 8020ba6:	dd75      	ble.n	8020c94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020ba8:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020bac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020bb0:	441f      	add	r7, r3
 8020bb2:	f11c 0201 	adds.w	r2, ip, #1
 8020bb6:	d472      	bmi.n	8020c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020bb8:	4596      	cmp	lr, r2
 8020bba:	dd70      	ble.n	8020c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020bbc:	2800      	cmp	r0, #0
 8020bbe:	d06e      	beq.n	8020c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020bc0:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020bc4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020bc8:	441c      	add	r4, r3
 8020bca:	3501      	adds	r5, #1
 8020bcc:	d46b      	bmi.n	8020ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020bce:	45a9      	cmp	r9, r5
 8020bd0:	dd69      	ble.n	8020ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020bd2:	2e00      	cmp	r6, #0
 8020bd4:	d067      	beq.n	8020ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020bd6:	f1bc 0f00 	cmp.w	ip, #0
 8020bda:	db62      	blt.n	8020ca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020bdc:	45e6      	cmp	lr, ip
 8020bde:	dd60      	ble.n	8020ca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020be0:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020be4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020be8:	441d      	add	r5, r3
 8020bea:	f11c 0201 	adds.w	r2, ip, #1
 8020bee:	d45d      	bmi.n	8020cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020bf0:	4596      	cmp	lr, r2
 8020bf2:	dd5b      	ble.n	8020cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020bf4:	2800      	cmp	r0, #0
 8020bf6:	d059      	beq.n	8020cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020bf8:	44c6      	add	lr, r8
 8020bfa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020bfe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c02:	4413      	add	r3, r2
 8020c04:	b280      	uxth	r0, r0
 8020c06:	b2b2      	uxth	r2, r6
 8020c08:	fb00 f602 	mul.w	r6, r0, r2
 8020c0c:	0100      	lsls	r0, r0, #4
 8020c0e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8020c12:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020c16:	1b80      	subs	r0, r0, r6
 8020c18:	fa1f fc82 	uxth.w	ip, r2
 8020c1c:	b282      	uxth	r2, r0
 8020c1e:	78a0      	ldrb	r0, [r4, #2]
 8020c20:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020c24:	f897 9000 	ldrb.w	r9, [r7]
 8020c28:	787f      	ldrb	r7, [r7, #1]
 8020c2a:	eba8 080c 	sub.w	r8, r8, ip
 8020c2e:	fa1f f888 	uxth.w	r8, r8
 8020c32:	4350      	muls	r0, r2
 8020c34:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020c38:	78a8      	ldrb	r0, [r5, #2]
 8020c3a:	fb0c e000 	mla	r0, ip, r0, lr
 8020c3e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020c42:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020c46:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020c4a:	f894 e000 	ldrb.w	lr, [r4]
 8020c4e:	fb02 fe0e 	mul.w	lr, r2, lr
 8020c52:	fb08 e909 	mla	r9, r8, r9, lr
 8020c56:	f895 e000 	ldrb.w	lr, [r5]
 8020c5a:	fb0c 990e 	mla	r9, ip, lr, r9
 8020c5e:	f893 e000 	ldrb.w	lr, [r3]
 8020c62:	785b      	ldrb	r3, [r3, #1]
 8020c64:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020c68:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020c6c:	ea4e 0e00 	orr.w	lr, lr, r0
 8020c70:	7860      	ldrb	r0, [r4, #1]
 8020c72:	4350      	muls	r0, r2
 8020c74:	786a      	ldrb	r2, [r5, #1]
 8020c76:	fb08 0007 	mla	r0, r8, r7, r0
 8020c7a:	fb0c 0202 	mla	r2, ip, r2, r0
 8020c7e:	fb06 2303 	mla	r3, r6, r3, r2
 8020c82:	095b      	lsrs	r3, r3, #5
 8020c84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c88:	ea4e 0303 	orr.w	r3, lr, r3
 8020c8c:	800b      	strh	r3, [r1, #0]
 8020c8e:	b003      	add	sp, #12
 8020c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c94:	af01      	add	r7, sp, #4
 8020c96:	e78c      	b.n	8020bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020c98:	ac01      	add	r4, sp, #4
 8020c9a:	4627      	mov	r7, r4
 8020c9c:	e795      	b.n	8020bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020c9e:	ac01      	add	r4, sp, #4
 8020ca0:	e793      	b.n	8020bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020ca2:	ad01      	add	r5, sp, #4
 8020ca4:	e7a1      	b.n	8020bea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020ca6:	ab01      	add	r3, sp, #4
 8020ca8:	461d      	mov	r5, r3
 8020caa:	e7ab      	b.n	8020c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020cac:	ab01      	add	r3, sp, #4
 8020cae:	e7a9      	b.n	8020c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020cb4:	b08f      	sub	sp, #60	; 0x3c
 8020cb6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020cba:	920c      	str	r2, [sp, #48]	; 0x30
 8020cbc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8020cbe:	910a      	str	r1, [sp, #40]	; 0x28
 8020cc0:	9306      	str	r3, [sp, #24]
 8020cc2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020cc6:	900d      	str	r0, [sp, #52]	; 0x34
 8020cc8:	6850      	ldr	r0, [r2, #4]
 8020cca:	6812      	ldr	r2, [r2, #0]
 8020ccc:	fb00 1303 	mla	r3, r0, r3, r1
 8020cd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020cd4:	9307      	str	r3, [sp, #28]
 8020cd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020cd8:	681b      	ldr	r3, [r3, #0]
 8020cda:	9308      	str	r3, [sp, #32]
 8020cdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020cde:	685c      	ldr	r4, [r3, #4]
 8020ce0:	3404      	adds	r4, #4
 8020ce2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ce4:	2b00      	cmp	r3, #0
 8020ce6:	dc03      	bgt.n	8020cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020ce8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020cea:	2b00      	cmp	r3, #0
 8020cec:	f340 81d6 	ble.w	802109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020cf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020cf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cf6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cfa:	1e48      	subs	r0, r1, #1
 8020cfc:	1e56      	subs	r6, r2, #1
 8020cfe:	9b06      	ldr	r3, [sp, #24]
 8020d00:	2b00      	cmp	r3, #0
 8020d02:	f340 80b7 	ble.w	8020e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020d06:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020d0a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020d0e:	d406      	bmi.n	8020d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d10:	4287      	cmp	r7, r0
 8020d12:	da04      	bge.n	8020d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d14:	2b00      	cmp	r3, #0
 8020d16:	db02      	blt.n	8020d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d18:	42b3      	cmp	r3, r6
 8020d1a:	f2c0 80ac 	blt.w	8020e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020d1e:	3701      	adds	r7, #1
 8020d20:	f100 809d 	bmi.w	8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020d24:	42b9      	cmp	r1, r7
 8020d26:	f2c0 809a 	blt.w	8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020d2a:	3301      	adds	r3, #1
 8020d2c:	f100 8097 	bmi.w	8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020d30:	429a      	cmp	r2, r3
 8020d32:	f2c0 8094 	blt.w	8020e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020d36:	9b06      	ldr	r3, [sp, #24]
 8020d38:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d3a:	9b07      	ldr	r3, [sp, #28]
 8020d3c:	9309      	str	r3, [sp, #36]	; 0x24
 8020d3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d40:	2b00      	cmp	r3, #0
 8020d42:	f340 80b5 	ble.w	8020eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020d46:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020d48:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020d4a:	68c7      	ldr	r7, [r0, #12]
 8020d4c:	6892      	ldr	r2, [r2, #8]
 8020d4e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020d52:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020d56:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020d5a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020d5e:	f100 80fb 	bmi.w	8020f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020d62:	f102 3cff 	add.w	ip, r2, #4294967295
 8020d66:	4560      	cmp	r0, ip
 8020d68:	f280 80f6 	bge.w	8020f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020d6c:	2e00      	cmp	r6, #0
 8020d6e:	f2c0 80f3 	blt.w	8020f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020d72:	f107 3cff 	add.w	ip, r7, #4294967295
 8020d76:	4566      	cmp	r6, ip
 8020d78:	f280 80ee 	bge.w	8020f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020d7c:	b212      	sxth	r2, r2
 8020d7e:	fb06 0002 	mla	r0, r6, r2, r0
 8020d82:	9e08      	ldr	r6, [sp, #32]
 8020d84:	1837      	adds	r7, r6, r0
 8020d86:	5c30      	ldrb	r0, [r6, r0]
 8020d88:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020d8c:	eb04 0c08 	add.w	ip, r4, r8
 8020d90:	2b00      	cmp	r3, #0
 8020d92:	f000 80d3 	beq.w	8020f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020d96:	787e      	ldrb	r6, [r7, #1]
 8020d98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020d9c:	4426      	add	r6, r4
 8020d9e:	2900      	cmp	r1, #0
 8020da0:	f000 80d4 	beq.w	8020f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020da4:	18b8      	adds	r0, r7, r2
 8020da6:	5cba      	ldrb	r2, [r7, r2]
 8020da8:	7840      	ldrb	r0, [r0, #1]
 8020daa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020dae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020db2:	4422      	add	r2, r4
 8020db4:	4420      	add	r0, r4
 8020db6:	b29b      	uxth	r3, r3
 8020db8:	b289      	uxth	r1, r1
 8020dba:	fb03 f901 	mul.w	r9, r3, r1
 8020dbe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020dc2:	011b      	lsls	r3, r3, #4
 8020dc4:	b289      	uxth	r1, r1
 8020dc6:	78b7      	ldrb	r7, [r6, #2]
 8020dc8:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020dcc:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020dd0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020dd4:	eba3 0309 	sub.w	r3, r3, r9
 8020dd8:	b29b      	uxth	r3, r3
 8020dda:	ebae 0e01 	sub.w	lr, lr, r1
 8020dde:	fa1f fe8e 	uxth.w	lr, lr
 8020de2:	435f      	muls	r7, r3
 8020de4:	fb0e 770a 	mla	r7, lr, sl, r7
 8020de8:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020dec:	fb01 770a 	mla	r7, r1, sl, r7
 8020df0:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020df4:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020df8:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020dfc:	f896 8000 	ldrb.w	r8, [r6]
 8020e00:	7876      	ldrb	r6, [r6, #1]
 8020e02:	fb03 f808 	mul.w	r8, r3, r8
 8020e06:	fb0e 8807 	mla	r8, lr, r7, r8
 8020e0a:	7817      	ldrb	r7, [r2, #0]
 8020e0c:	fb01 8807 	mla	r8, r1, r7, r8
 8020e10:	7807      	ldrb	r7, [r0, #0]
 8020e12:	fb09 8707 	mla	r7, r9, r7, r8
 8020e16:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020e1a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e1e:	ea47 070a 	orr.w	r7, r7, sl
 8020e22:	4373      	muls	r3, r6
 8020e24:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020e28:	fb0e 330c 	mla	r3, lr, ip, r3
 8020e2c:	fb01 310a 	mla	r1, r1, sl, r3
 8020e30:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020e34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e36:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020e3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020e3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020e42:	ea47 070a 	orr.w	r7, r7, sl
 8020e46:	801f      	strh	r7, [r3, #0]
 8020e48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020e4a:	3302      	adds	r3, #2
 8020e4c:	9309      	str	r3, [sp, #36]	; 0x24
 8020e4e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020e50:	449b      	add	fp, r3
 8020e52:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020e54:	441d      	add	r5, r3
 8020e56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e58:	3b01      	subs	r3, #1
 8020e5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e5c:	e76f      	b.n	8020d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020e5e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020e60:	449b      	add	fp, r3
 8020e62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020e64:	441d      	add	r5, r3
 8020e66:	9b06      	ldr	r3, [sp, #24]
 8020e68:	3b01      	subs	r3, #1
 8020e6a:	9306      	str	r3, [sp, #24]
 8020e6c:	9b07      	ldr	r3, [sp, #28]
 8020e6e:	3302      	adds	r3, #2
 8020e70:	9307      	str	r3, [sp, #28]
 8020e72:	e744      	b.n	8020cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020e74:	d023      	beq.n	8020ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020e76:	9b06      	ldr	r3, [sp, #24]
 8020e78:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020e7a:	3b01      	subs	r3, #1
 8020e7c:	fb00 b003 	mla	r0, r0, r3, fp
 8020e80:	1400      	asrs	r0, r0, #16
 8020e82:	f53f af58 	bmi.w	8020d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020e86:	3901      	subs	r1, #1
 8020e88:	4288      	cmp	r0, r1
 8020e8a:	f6bf af54 	bge.w	8020d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020e8e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020e90:	fb01 5303 	mla	r3, r1, r3, r5
 8020e94:	141b      	asrs	r3, r3, #16
 8020e96:	f53f af4e 	bmi.w	8020d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020e9a:	3a01      	subs	r2, #1
 8020e9c:	4293      	cmp	r3, r2
 8020e9e:	f6bf af4a 	bge.w	8020d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020ea2:	9b06      	ldr	r3, [sp, #24]
 8020ea4:	9309      	str	r3, [sp, #36]	; 0x24
 8020ea6:	9b07      	ldr	r3, [sp, #28]
 8020ea8:	930b      	str	r3, [sp, #44]	; 0x2c
 8020eaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020eac:	2b00      	cmp	r3, #0
 8020eae:	dc70      	bgt.n	8020f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020eb0:	9b06      	ldr	r3, [sp, #24]
 8020eb2:	9a07      	ldr	r2, [sp, #28]
 8020eb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020eb8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ebc:	9307      	str	r3, [sp, #28]
 8020ebe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ec0:	2b00      	cmp	r3, #0
 8020ec2:	f340 80eb 	ble.w	802109c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020ec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020eca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020ece:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020ed2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020ed4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ed8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020edc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ee0:	eef0 6a62 	vmov.f32	s13, s5
 8020ee4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020ee8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020eec:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020ef0:	ee16 ba90 	vmov	fp, s13
 8020ef4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020ef8:	eef0 6a43 	vmov.f32	s13, s6
 8020efc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f00:	ee12 2a90 	vmov	r2, s5
 8020f04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f08:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f0c:	ee13 2a10 	vmov	r2, s6
 8020f10:	931b      	str	r3, [sp, #108]	; 0x6c
 8020f12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020f14:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f18:	931c      	str	r3, [sp, #112]	; 0x70
 8020f1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020f1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020f1e:	3b01      	subs	r3, #1
 8020f20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f24:	930a      	str	r3, [sp, #40]	; 0x28
 8020f26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020f28:	bf08      	it	eq
 8020f2a:	4613      	moveq	r3, r2
 8020f2c:	ee16 5a90 	vmov	r5, s13
 8020f30:	9306      	str	r3, [sp, #24]
 8020f32:	eeb0 3a67 	vmov.f32	s6, s15
 8020f36:	eef0 2a47 	vmov.f32	s5, s14
 8020f3a:	e6d2      	b.n	8020ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020f3c:	b149      	cbz	r1, 8020f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020f3e:	5cba      	ldrb	r2, [r7, r2]
 8020f40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f44:	4422      	add	r2, r4
 8020f46:	4660      	mov	r0, ip
 8020f48:	4666      	mov	r6, ip
 8020f4a:	e734      	b.n	8020db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020f4c:	4660      	mov	r0, ip
 8020f4e:	4662      	mov	r2, ip
 8020f50:	e731      	b.n	8020db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020f52:	4660      	mov	r0, ip
 8020f54:	4662      	mov	r2, ip
 8020f56:	e7f7      	b.n	8020f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020f58:	f110 0c01 	adds.w	ip, r0, #1
 8020f5c:	f53f af74 	bmi.w	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f60:	4562      	cmp	r2, ip
 8020f62:	f6ff af71 	blt.w	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f66:	f116 0c01 	adds.w	ip, r6, #1
 8020f6a:	f53f af6d 	bmi.w	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f6e:	4567      	cmp	r7, ip
 8020f70:	f6ff af6a 	blt.w	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f74:	b23f      	sxth	r7, r7
 8020f76:	b212      	sxth	r2, r2
 8020f78:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020f7c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020f80:	9200      	str	r2, [sp, #0]
 8020f82:	9701      	str	r7, [sp, #4]
 8020f84:	4623      	mov	r3, r4
 8020f86:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020f8a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020f8c:	f7ff fde6 	bl	8020b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020f90:	e75a      	b.n	8020e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020f92:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020f94:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020f98:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020f9c:	1428      	asrs	r0, r5, #16
 8020f9e:	fb02 6000 	mla	r0, r2, r0, r6
 8020fa2:	9e08      	ldr	r6, [sp, #32]
 8020fa4:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020fa8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020fac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020fb0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020fb4:	1837      	adds	r7, r6, r0
 8020fb6:	eb04 0c08 	add.w	ip, r4, r8
 8020fba:	2b00      	cmp	r3, #0
 8020fbc:	d060      	beq.n	8021080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020fbe:	787e      	ldrb	r6, [r7, #1]
 8020fc0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020fc4:	4426      	add	r6, r4
 8020fc6:	2900      	cmp	r1, #0
 8020fc8:	d062      	beq.n	8021090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020fca:	18b8      	adds	r0, r7, r2
 8020fcc:	5cba      	ldrb	r2, [r7, r2]
 8020fce:	7840      	ldrb	r0, [r0, #1]
 8020fd0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020fd4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020fd8:	4422      	add	r2, r4
 8020fda:	4420      	add	r0, r4
 8020fdc:	b29b      	uxth	r3, r3
 8020fde:	b289      	uxth	r1, r1
 8020fe0:	fb03 f901 	mul.w	r9, r3, r1
 8020fe4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020fe8:	011b      	lsls	r3, r3, #4
 8020fea:	b289      	uxth	r1, r1
 8020fec:	78b7      	ldrb	r7, [r6, #2]
 8020fee:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020ff2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020ff6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020ffa:	eba3 0309 	sub.w	r3, r3, r9
 8020ffe:	b29b      	uxth	r3, r3
 8021000:	ebae 0e01 	sub.w	lr, lr, r1
 8021004:	fa1f fe8e 	uxth.w	lr, lr
 8021008:	435f      	muls	r7, r3
 802100a:	fb0e 770a 	mla	r7, lr, sl, r7
 802100e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021012:	fb01 770a 	mla	r7, r1, sl, r7
 8021016:	f890 a002 	ldrb.w	sl, [r0, #2]
 802101a:	fb09 7a0a 	mla	sl, r9, sl, r7
 802101e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021022:	f896 8000 	ldrb.w	r8, [r6]
 8021026:	7876      	ldrb	r6, [r6, #1]
 8021028:	fb03 f808 	mul.w	r8, r3, r8
 802102c:	fb0e 8807 	mla	r8, lr, r7, r8
 8021030:	7817      	ldrb	r7, [r2, #0]
 8021032:	fb01 8807 	mla	r8, r1, r7, r8
 8021036:	7807      	ldrb	r7, [r0, #0]
 8021038:	fb09 8707 	mla	r7, r9, r7, r8
 802103c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021040:	4373      	muls	r3, r6
 8021042:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021046:	7856      	ldrb	r6, [r2, #1]
 8021048:	ea47 070a 	orr.w	r7, r7, sl
 802104c:	fb0e 330c 	mla	r3, lr, ip, r3
 8021050:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021054:	fb01 3306 	mla	r3, r1, r6, r3
 8021058:	fb09 3a0a 	mla	sl, r9, sl, r3
 802105c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021060:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021062:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021066:	ea47 070a 	orr.w	r7, r7, sl
 802106a:	f823 7b02 	strh.w	r7, [r3], #2
 802106e:	930b      	str	r3, [sp, #44]	; 0x2c
 8021070:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021072:	449b      	add	fp, r3
 8021074:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021076:	441d      	add	r5, r3
 8021078:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802107a:	3b01      	subs	r3, #1
 802107c:	9309      	str	r3, [sp, #36]	; 0x24
 802107e:	e714      	b.n	8020eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021080:	b149      	cbz	r1, 8021096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021082:	5cba      	ldrb	r2, [r7, r2]
 8021084:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021088:	4422      	add	r2, r4
 802108a:	4660      	mov	r0, ip
 802108c:	4666      	mov	r6, ip
 802108e:	e7a5      	b.n	8020fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021090:	4660      	mov	r0, ip
 8021092:	4662      	mov	r2, ip
 8021094:	e7a2      	b.n	8020fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021096:	4660      	mov	r0, ip
 8021098:	4662      	mov	r2, ip
 802109a:	e7f7      	b.n	802108c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 802109c:	b00f      	add	sp, #60	; 0x3c
 802109e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080210a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80210a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210a6:	b085      	sub	sp, #20
 80210a8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80210ac:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80210b0:	9102      	str	r1, [sp, #8]
 80210b2:	2c00      	cmp	r4, #0
 80210b4:	fb04 710c 	mla	r1, r4, ip, r7
 80210b8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80210bc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80210c0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80210c4:	eb02 0e01 	add.w	lr, r2, r1
 80210c8:	f2c0 8122 	blt.w	8021310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80210cc:	45a0      	cmp	r8, r4
 80210ce:	f340 811f 	ble.w	8021310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80210d2:	2f00      	cmp	r7, #0
 80210d4:	f2c0 811a 	blt.w	802130c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80210d8:	45bc      	cmp	ip, r7
 80210da:	f340 8117 	ble.w	802130c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80210de:	5c52      	ldrb	r2, [r2, r1]
 80210e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80210e4:	1c7a      	adds	r2, r7, #1
 80210e6:	f100 8116 	bmi.w	8021316 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80210ea:	4594      	cmp	ip, r2
 80210ec:	f340 8113 	ble.w	8021316 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80210f0:	2e00      	cmp	r6, #0
 80210f2:	f000 8112 	beq.w	802131a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80210f6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80210fa:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80210fe:	3401      	adds	r4, #1
 8021100:	f100 810f 	bmi.w	8021322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021104:	45a0      	cmp	r8, r4
 8021106:	f340 810c 	ble.w	8021322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802110a:	2800      	cmp	r0, #0
 802110c:	f000 810c 	beq.w	8021328 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021110:	2f00      	cmp	r7, #0
 8021112:	f2c0 8104 	blt.w	802131e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021116:	45bc      	cmp	ip, r7
 8021118:	f340 8101 	ble.w	802131e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802111c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021120:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021124:	3701      	adds	r7, #1
 8021126:	f100 8102 	bmi.w	802132e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802112a:	45bc      	cmp	ip, r7
 802112c:	f340 80ff 	ble.w	802132e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021130:	2e00      	cmp	r6, #0
 8021132:	f000 80fe 	beq.w	8021332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021136:	44f4      	add	ip, lr
 8021138:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802113c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021140:	b2b6      	uxth	r6, r6
 8021142:	b280      	uxth	r0, r0
 8021144:	fb00 fe06 	mul.w	lr, r0, r6
 8021148:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802114c:	0136      	lsls	r6, r6, #4
 802114e:	eba6 070e 	sub.w	r7, r6, lr
 8021152:	b280      	uxth	r0, r0
 8021154:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021158:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802115c:	b2bf      	uxth	r7, r7
 802115e:	1a1b      	subs	r3, r3, r0
 8021160:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021164:	b29b      	uxth	r3, r3
 8021166:	fb0a f607 	mul.w	r6, sl, r7
 802116a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802116e:	fb0b 6603 	mla	r6, fp, r3, r6
 8021172:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021176:	fb00 6609 	mla	r6, r0, r9, r6
 802117a:	fb0e 6608 	mla	r6, lr, r8, r6
 802117e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021182:	9600      	str	r6, [sp, #0]
 8021184:	2e00      	cmp	r6, #0
 8021186:	f000 80be 	beq.w	8021306 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802118a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802118e:	fb0b fc0c 	mul.w	ip, fp, ip
 8021192:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021196:	fb0b f505 	mul.w	r5, fp, r5
 802119a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802119e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80211a2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80211a6:	44dc      	add	ip, fp
 80211a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211ac:	9501      	str	r5, [sp, #4]
 80211ae:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80211b2:	9503      	str	r5, [sp, #12]
 80211b4:	9d01      	ldr	r5, [sp, #4]
 80211b6:	9e02      	ldr	r6, [sp, #8]
 80211b8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80211bc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80211c0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80211c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80211c8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80211cc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80211d0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80211d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80211d8:	4465      	add	r5, ip
 80211da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80211de:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80211e2:	fb09 fc0c 	mul.w	ip, r9, ip
 80211e6:	fb09 f904 	mul.w	r9, r9, r4
 80211ea:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80211ee:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80211f2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80211f6:	fb08 f404 	mul.w	r4, r8, r4
 80211fa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80211fe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021202:	fb08 f802 	mul.w	r8, r8, r2
 8021206:	fb0a fa01 	mul.w	sl, sl, r1
 802120a:	0a22      	lsrs	r2, r4, #8
 802120c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021210:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021214:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021218:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802121c:	4414      	add	r4, r2
 802121e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021222:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021226:	0a2d      	lsrs	r5, r5, #8
 8021228:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802122c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021230:	9a03      	ldr	r2, [sp, #12]
 8021232:	8836      	ldrh	r6, [r6, #0]
 8021234:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021238:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802123c:	437d      	muls	r5, r7
 802123e:	4461      	add	r1, ip
 8021240:	0a24      	lsrs	r4, r4, #8
 8021242:	fb02 5503 	mla	r5, r2, r3, r5
 8021246:	0a09      	lsrs	r1, r1, #8
 8021248:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802124c:	fb04 540e 	mla	r4, r4, lr, r5
 8021250:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021254:	fb01 4100 	mla	r1, r1, r0, r4
 8021258:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802125c:	0a09      	lsrs	r1, r1, #8
 802125e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021262:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021266:	fb07 f70a 	mul.w	r7, r7, sl
 802126a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802126e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021272:	fb03 7101 	mla	r1, r3, r1, r7
 8021276:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802127a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802127e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021282:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021286:	fb00 e101 	mla	r1, r0, r1, lr
 802128a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802128e:	9a00      	ldr	r2, [sp, #0]
 8021290:	b287      	uxth	r7, r0
 8021292:	437a      	muls	r2, r7
 8021294:	0a09      	lsrs	r1, r1, #8
 8021296:	1c53      	adds	r3, r2, #1
 8021298:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802129c:	4321      	orrs	r1, r4
 802129e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80212a2:	1235      	asrs	r5, r6, #8
 80212a4:	0c0a      	lsrs	r2, r1, #16
 80212a6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80212aa:	b2db      	uxtb	r3, r3
 80212ac:	fb12 f207 	smulbb	r2, r2, r7
 80212b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80212b4:	fb05 2503 	mla	r5, r5, r3, r2
 80212b8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80212bc:	10f2      	asrs	r2, r6, #3
 80212be:	b2c8      	uxtb	r0, r1
 80212c0:	00f6      	lsls	r6, r6, #3
 80212c2:	fb14 f407 	smulbb	r4, r4, r7
 80212c6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80212ca:	b2f6      	uxtb	r6, r6
 80212cc:	fb10 f007 	smulbb	r0, r0, r7
 80212d0:	fb02 4203 	mla	r2, r2, r3, r4
 80212d4:	b2ad      	uxth	r5, r5
 80212d6:	fb06 0303 	mla	r3, r6, r3, r0
 80212da:	b299      	uxth	r1, r3
 80212dc:	b294      	uxth	r4, r2
 80212de:	1c6b      	adds	r3, r5, #1
 80212e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212e4:	1c62      	adds	r2, r4, #1
 80212e6:	1c4b      	adds	r3, r1, #1
 80212e8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80212ec:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80212f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80212f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80212f8:	0952      	lsrs	r2, r2, #5
 80212fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80212fe:	432b      	orrs	r3, r5
 8021300:	4313      	orrs	r3, r2
 8021302:	9a02      	ldr	r2, [sp, #8]
 8021304:	8013      	strh	r3, [r2, #0]
 8021306:	b005      	add	sp, #20
 8021308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802130c:	2500      	movs	r5, #0
 802130e:	e6e9      	b.n	80210e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021310:	2100      	movs	r1, #0
 8021312:	460d      	mov	r5, r1
 8021314:	e6f3      	b.n	80210fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021316:	2100      	movs	r1, #0
 8021318:	e6f1      	b.n	80210fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802131a:	4631      	mov	r1, r6
 802131c:	e6ef      	b.n	80210fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802131e:	2400      	movs	r4, #0
 8021320:	e700      	b.n	8021124 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021322:	2200      	movs	r2, #0
 8021324:	4614      	mov	r4, r2
 8021326:	e70b      	b.n	8021140 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021328:	4602      	mov	r2, r0
 802132a:	4604      	mov	r4, r0
 802132c:	e708      	b.n	8021140 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802132e:	2200      	movs	r2, #0
 8021330:	e706      	b.n	8021140 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021332:	4632      	mov	r2, r6
 8021334:	e704      	b.n	8021140 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021336 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802133a:	b09f      	sub	sp, #124	; 0x7c
 802133c:	921b      	str	r2, [sp, #108]	; 0x6c
 802133e:	9309      	str	r3, [sp, #36]	; 0x24
 8021340:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021342:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021346:	931c      	str	r3, [sp, #112]	; 0x70
 8021348:	9119      	str	r1, [sp, #100]	; 0x64
 802134a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802134e:	901d      	str	r0, [sp, #116]	; 0x74
 8021350:	6850      	ldr	r0, [r2, #4]
 8021352:	6812      	ldr	r2, [r2, #0]
 8021354:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021356:	fb00 1303 	mla	r3, r0, r3, r1
 802135a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802135e:	930c      	str	r3, [sp, #48]	; 0x30
 8021360:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021362:	681b      	ldr	r3, [r3, #0]
 8021364:	9312      	str	r3, [sp, #72]	; 0x48
 8021366:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021368:	685e      	ldr	r6, [r3, #4]
 802136a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802136e:	930d      	str	r3, [sp, #52]	; 0x34
 8021370:	3604      	adds	r6, #4
 8021372:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021374:	2b00      	cmp	r3, #0
 8021376:	dc03      	bgt.n	8021380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021378:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802137a:	2b00      	cmp	r3, #0
 802137c:	f340 8388 	ble.w	8021a90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021380:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021382:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021386:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802138a:	1e48      	subs	r0, r1, #1
 802138c:	1e57      	subs	r7, r2, #1
 802138e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021390:	2b00      	cmp	r3, #0
 8021392:	f340 8195 	ble.w	80216c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021396:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021398:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802139c:	ea4f 4325 	mov.w	r3, r5, asr #16
 80213a0:	d406      	bmi.n	80213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80213a2:	4584      	cmp	ip, r0
 80213a4:	da04      	bge.n	80213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80213a6:	2b00      	cmp	r3, #0
 80213a8:	db02      	blt.n	80213b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80213aa:	42bb      	cmp	r3, r7
 80213ac:	f2c0 8189 	blt.w	80216c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80213b0:	f11c 0c01 	adds.w	ip, ip, #1
 80213b4:	f100 8177 	bmi.w	80216a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80213b8:	4561      	cmp	r1, ip
 80213ba:	f2c0 8174 	blt.w	80216a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80213be:	3301      	adds	r3, #1
 80213c0:	f100 8171 	bmi.w	80216a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80213c4:	429a      	cmp	r2, r3
 80213c6:	f2c0 816e 	blt.w	80216a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80213ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80213cc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80213ce:	931a      	str	r3, [sp, #104]	; 0x68
 80213d0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80213d2:	2b00      	cmp	r3, #0
 80213d4:	f340 8193 	ble.w	80216fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80213d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80213da:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80213de:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80213e0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80213e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80213e6:	141b      	asrs	r3, r3, #16
 80213e8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80213ec:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80213f0:	f100 81d6 	bmi.w	80217a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80213f4:	f100 38ff 	add.w	r8, r0, #4294967295
 80213f8:	4543      	cmp	r3, r8
 80213fa:	f280 81d1 	bge.w	80217a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80213fe:	f1bc 0f00 	cmp.w	ip, #0
 8021402:	f2c0 81cd 	blt.w	80217a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021406:	f10e 38ff 	add.w	r8, lr, #4294967295
 802140a:	45c4      	cmp	ip, r8
 802140c:	f280 81c8 	bge.w	80217a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021410:	b200      	sxth	r0, r0
 8021412:	fb0c 3300 	mla	r3, ip, r0, r3
 8021416:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021418:	eb04 0803 	add.w	r8, r4, r3
 802141c:	5ce3      	ldrb	r3, [r4, r3]
 802141e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021422:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021426:	2a00      	cmp	r2, #0
 8021428:	f000 81af 	beq.w	802178a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802142c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021430:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021434:	940e      	str	r4, [sp, #56]	; 0x38
 8021436:	0e24      	lsrs	r4, r4, #24
 8021438:	9415      	str	r4, [sp, #84]	; 0x54
 802143a:	b179      	cbz	r1, 802145c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802143c:	eb08 0c00 	add.w	ip, r8, r0
 8021440:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021444:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021448:	900a      	str	r0, [sp, #40]	; 0x28
 802144a:	0e00      	lsrs	r0, r0, #24
 802144c:	9013      	str	r0, [sp, #76]	; 0x4c
 802144e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021452:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021456:	900f      	str	r0, [sp, #60]	; 0x3c
 8021458:	0e00      	lsrs	r0, r0, #24
 802145a:	9016      	str	r0, [sp, #88]	; 0x58
 802145c:	b292      	uxth	r2, r2
 802145e:	b289      	uxth	r1, r1
 8021460:	fb02 f901 	mul.w	r9, r2, r1
 8021464:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021468:	0112      	lsls	r2, r2, #4
 802146a:	eba2 0809 	sub.w	r8, r2, r9
 802146e:	b289      	uxth	r1, r1
 8021470:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021474:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021476:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021478:	fa1f f888 	uxth.w	r8, r8
 802147c:	1a52      	subs	r2, r2, r1
 802147e:	b292      	uxth	r2, r2
 8021480:	fb08 f000 	mul.w	r0, r8, r0
 8021484:	fb02 000e 	mla	r0, r2, lr, r0
 8021488:	fb01 0004 	mla	r0, r1, r4, r0
 802148c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802148e:	fb09 0004 	mla	r0, r9, r4, r0
 8021492:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021496:	2800      	cmp	r0, #0
 8021498:	f000 80fa 	beq.w	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802149c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80214a0:	d01b      	beq.n	80214da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80214a2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80214a6:	fb0e fa0a 	mul.w	sl, lr, sl
 80214aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80214ae:	fb0e fe03 	mul.w	lr, lr, r3
 80214b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80214b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80214ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80214be:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80214c2:	4453      	add	r3, sl
 80214c4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80214c8:	0a1b      	lsrs	r3, r3, #8
 80214ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80214ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80214d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80214d6:	ea43 030c 	orr.w	r3, r3, ip
 80214da:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80214dc:	2cff      	cmp	r4, #255	; 0xff
 80214de:	d021      	beq.n	8021524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80214e0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214e2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80214e6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80214e8:	fb04 fb0b 	mul.w	fp, r4, fp
 80214ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214ee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80214f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80214f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80214fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021500:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021504:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021508:	44de      	add	lr, fp
 802150a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802150e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021512:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021516:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802151a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802151e:	ea4e 040a 	orr.w	r4, lr, sl
 8021522:	940e      	str	r4, [sp, #56]	; 0x38
 8021524:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021526:	2cff      	cmp	r4, #255	; 0xff
 8021528:	d021      	beq.n	802156e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802152a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802152c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021530:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021532:	fb04 fb0b 	mul.w	fp, r4, fp
 8021536:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021538:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802153c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802153e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021542:	fb04 fa0a 	mul.w	sl, r4, sl
 8021546:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802154a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802154e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021552:	44de      	add	lr, fp
 8021554:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021558:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802155c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021560:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021564:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021568:	ea4e 040a 	orr.w	r4, lr, sl
 802156c:	940a      	str	r4, [sp, #40]	; 0x28
 802156e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021570:	2cff      	cmp	r4, #255	; 0xff
 8021572:	d021      	beq.n	80215b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021574:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021576:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802157a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802157c:	fb04 fb0b 	mul.w	fp, r4, fp
 8021580:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021582:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021586:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021588:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802158c:	fb04 fa0a 	mul.w	sl, r4, sl
 8021590:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021594:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021598:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802159c:	44de      	add	lr, fp
 802159e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80215a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80215a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80215aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80215ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80215b2:	ea4e 040a 	orr.w	r4, lr, sl
 80215b6:	940f      	str	r4, [sp, #60]	; 0x3c
 80215b8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80215be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80215c0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80215c4:	fb08 fc0c 	mul.w	ip, r8, ip
 80215c8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80215cc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80215d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80215d2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80215d6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80215da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215dc:	fb09 cc0e 	mla	ip, r9, lr, ip
 80215e0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80215e4:	fb08 f80e 	mul.w	r8, r8, lr
 80215e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215ec:	fb02 8303 	mla	r3, r2, r3, r8
 80215f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80215f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80215f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80215f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80215fa:	fb01 330a 	mla	r3, r1, sl, r3
 80215fe:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021602:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021604:	fb09 3901 	mla	r9, r9, r1, r3
 8021608:	4342      	muls	r2, r0
 802160a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802160e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021612:	883b      	ldrh	r3, [r7, #0]
 8021614:	1c50      	adds	r0, r2, #1
 8021616:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802161a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802161e:	ea4c 0c09 	orr.w	ip, ip, r9
 8021622:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021626:	1219      	asrs	r1, r3, #8
 8021628:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802162c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021630:	b2c0      	uxtb	r0, r0
 8021632:	fb12 f204 	smulbb	r2, r2, r4
 8021636:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802163a:	fb01 2100 	mla	r1, r1, r0, r2
 802163e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021642:	10da      	asrs	r2, r3, #3
 8021644:	fa5f fc8c 	uxtb.w	ip, ip
 8021648:	00db      	lsls	r3, r3, #3
 802164a:	fb1c fc04 	smulbb	ip, ip, r4
 802164e:	b2db      	uxtb	r3, r3
 8021650:	b289      	uxth	r1, r1
 8021652:	fb03 c300 	mla	r3, r3, r0, ip
 8021656:	fa1f fc83 	uxth.w	ip, r3
 802165a:	1c4b      	adds	r3, r1, #1
 802165c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021660:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021664:	fb1e fe04 	smulbb	lr, lr, r4
 8021668:	f10c 0301 	add.w	r3, ip, #1
 802166c:	fb02 e200 	mla	r2, r2, r0, lr
 8021670:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021674:	b292      	uxth	r2, r2
 8021676:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802167a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802167e:	430b      	orrs	r3, r1
 8021680:	1c51      	adds	r1, r2, #1
 8021682:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021686:	0952      	lsrs	r2, r2, #5
 8021688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802168c:	4313      	orrs	r3, r2
 802168e:	803b      	strh	r3, [r7, #0]
 8021690:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021692:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021694:	441a      	add	r2, r3
 8021696:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021698:	9229      	str	r2, [sp, #164]	; 0xa4
 802169a:	441d      	add	r5, r3
 802169c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802169e:	3b01      	subs	r3, #1
 80216a0:	3702      	adds	r7, #2
 80216a2:	931a      	str	r3, [sp, #104]	; 0x68
 80216a4:	e694      	b.n	80213d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80216a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80216a8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80216aa:	441c      	add	r4, r3
 80216ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80216ae:	9429      	str	r4, [sp, #164]	; 0xa4
 80216b0:	441d      	add	r5, r3
 80216b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216b4:	3b01      	subs	r3, #1
 80216b6:	9309      	str	r3, [sp, #36]	; 0x24
 80216b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216ba:	3302      	adds	r3, #2
 80216bc:	930c      	str	r3, [sp, #48]	; 0x30
 80216be:	e666      	b.n	802138e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80216c0:	d024      	beq.n	802170c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80216c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216c4:	982b      	ldr	r0, [sp, #172]	; 0xac
 80216c6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80216c8:	3b01      	subs	r3, #1
 80216ca:	fb00 4003 	mla	r0, r0, r3, r4
 80216ce:	1400      	asrs	r0, r0, #16
 80216d0:	f53f ae7b 	bmi.w	80213ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80216d4:	3901      	subs	r1, #1
 80216d6:	4288      	cmp	r0, r1
 80216d8:	f6bf ae77 	bge.w	80213ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80216dc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80216de:	fb01 5303 	mla	r3, r1, r3, r5
 80216e2:	141b      	asrs	r3, r3, #16
 80216e4:	f53f ae71 	bmi.w	80213ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80216e8:	3a01      	subs	r2, #1
 80216ea:	4293      	cmp	r3, r2
 80216ec:	f6bf ae6d 	bge.w	80213ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80216f0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80216f4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80216f8:	f1bb 0f00 	cmp.w	fp, #0
 80216fc:	dc70      	bgt.n	80217e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80216fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021700:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021704:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021706:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802170a:	930c      	str	r3, [sp, #48]	; 0x30
 802170c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802170e:	2b00      	cmp	r3, #0
 8021710:	f340 81be 	ble.w	8021a90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021714:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021718:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802171c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021720:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021726:	ee31 1a05 	vadd.f32	s2, s2, s10
 802172a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802172e:	eef0 6a62 	vmov.f32	s13, s5
 8021732:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021736:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802173a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802173e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8021742:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021746:	eef0 6a43 	vmov.f32	s13, s6
 802174a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802174e:	ee12 2a90 	vmov	r2, s5
 8021752:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021756:	fb92 f3f3 	sdiv	r3, r2, r3
 802175a:	ee13 2a10 	vmov	r2, s6
 802175e:	932b      	str	r3, [sp, #172]	; 0xac
 8021760:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021762:	fb92 f3f3 	sdiv	r3, r2, r3
 8021766:	932c      	str	r3, [sp, #176]	; 0xb0
 8021768:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802176a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 802176c:	3b01      	subs	r3, #1
 802176e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021772:	9319      	str	r3, [sp, #100]	; 0x64
 8021774:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021776:	bf08      	it	eq
 8021778:	4613      	moveq	r3, r2
 802177a:	ee16 5a90 	vmov	r5, s13
 802177e:	9309      	str	r3, [sp, #36]	; 0x24
 8021780:	eeb0 3a67 	vmov.f32	s6, s15
 8021784:	eef0 2a47 	vmov.f32	s5, s14
 8021788:	e5f3      	b.n	8021372 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802178a:	2900      	cmp	r1, #0
 802178c:	f43f ae66 	beq.w	802145c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021790:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021794:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021798:	900a      	str	r0, [sp, #40]	; 0x28
 802179a:	0e00      	lsrs	r0, r0, #24
 802179c:	9013      	str	r0, [sp, #76]	; 0x4c
 802179e:	e65d      	b.n	802145c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80217a0:	f113 0801 	adds.w	r8, r3, #1
 80217a4:	f53f af74 	bmi.w	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80217a8:	4540      	cmp	r0, r8
 80217aa:	f6ff af71 	blt.w	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80217ae:	f11c 0801 	adds.w	r8, ip, #1
 80217b2:	f53f af6d 	bmi.w	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80217b6:	45c6      	cmp	lr, r8
 80217b8:	f6ff af6a 	blt.w	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80217bc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80217be:	9302      	str	r3, [sp, #8]
 80217c0:	b200      	sxth	r0, r0
 80217c2:	fa0f f38e 	sxth.w	r3, lr
 80217c6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80217ca:	e9cd c203 	strd	ip, r2, [sp, #12]
 80217ce:	9301      	str	r3, [sp, #4]
 80217d0:	9000      	str	r0, [sp, #0]
 80217d2:	4633      	mov	r3, r6
 80217d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80217d6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80217d8:	4639      	mov	r1, r7
 80217da:	f7ff fc62 	bl	80210a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80217de:	e757      	b.n	8021690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80217e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80217e2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80217e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80217e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80217ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217ee:	1427      	asrs	r7, r4, #16
 80217f0:	142b      	asrs	r3, r5, #16
 80217f2:	fb01 7303 	mla	r3, r1, r3, r7
 80217f6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80217f8:	18e7      	adds	r7, r4, r3
 80217fa:	5ce3      	ldrb	r3, [r4, r3]
 80217fc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021800:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021804:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021808:	2a00      	cmp	r2, #0
 802180a:	f000 8137 	beq.w	8021a7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802180e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021812:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021816:	9410      	str	r4, [sp, #64]	; 0x40
 8021818:	0e24      	lsrs	r4, r4, #24
 802181a:	9417      	str	r4, [sp, #92]	; 0x5c
 802181c:	b170      	cbz	r0, 802183c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802181e:	eb07 0e01 	add.w	lr, r7, r1
 8021822:	5c79      	ldrb	r1, [r7, r1]
 8021824:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021828:	910b      	str	r1, [sp, #44]	; 0x2c
 802182a:	0e09      	lsrs	r1, r1, #24
 802182c:	9114      	str	r1, [sp, #80]	; 0x50
 802182e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021832:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021836:	9111      	str	r1, [sp, #68]	; 0x44
 8021838:	0e09      	lsrs	r1, r1, #24
 802183a:	9118      	str	r1, [sp, #96]	; 0x60
 802183c:	b292      	uxth	r2, r2
 802183e:	b280      	uxth	r0, r0
 8021840:	fb02 f800 	mul.w	r8, r2, r0
 8021844:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021848:	0112      	lsls	r2, r2, #4
 802184a:	eba2 0e08 	sub.w	lr, r2, r8
 802184e:	b280      	uxth	r0, r0
 8021850:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021854:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8021856:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021858:	fa1f fe8e 	uxth.w	lr, lr
 802185c:	1a12      	subs	r2, r2, r0
 802185e:	b292      	uxth	r2, r2
 8021860:	fb0e f101 	mul.w	r1, lr, r1
 8021864:	fb02 110c 	mla	r1, r2, ip, r1
 8021868:	fb00 1104 	mla	r1, r0, r4, r1
 802186c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802186e:	fb08 1104 	mla	r1, r8, r4, r1
 8021872:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021876:	2900      	cmp	r1, #0
 8021878:	f000 80f5 	beq.w	8021a66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802187c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021880:	d019      	beq.n	80218b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8021882:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021886:	fb0c fa0a 	mul.w	sl, ip, sl
 802188a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802188e:	fb0c fc03 	mul.w	ip, ip, r3
 8021892:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021896:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802189a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802189e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80218a2:	4453      	add	r3, sl
 80218a4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80218a8:	0a1b      	lsrs	r3, r3, #8
 80218aa:	0a3f      	lsrs	r7, r7, #8
 80218ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80218b0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80218b4:	433b      	orrs	r3, r7
 80218b6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80218b8:	2cff      	cmp	r4, #255	; 0xff
 80218ba:	d020      	beq.n	80218fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80218bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80218be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80218c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80218c4:	4367      	muls	r7, r4
 80218c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80218c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80218cc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80218ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80218d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80218d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80218da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218de:	44bc      	add	ip, r7
 80218e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80218e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80218e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218f8:	ea4c 040a 	orr.w	r4, ip, sl
 80218fc:	9410      	str	r4, [sp, #64]	; 0x40
 80218fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021900:	2cff      	cmp	r4, #255	; 0xff
 8021902:	d020      	beq.n	8021946 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021904:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021906:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802190a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802190c:	4367      	muls	r7, r4
 802190e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021910:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021914:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021916:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802191a:	fb04 fa0a 	mul.w	sl, r4, sl
 802191e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021922:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021926:	44bc      	add	ip, r7
 8021928:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802192c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021930:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021934:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021938:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802193c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021940:	ea4c 040a 	orr.w	r4, ip, sl
 8021944:	940b      	str	r4, [sp, #44]	; 0x2c
 8021946:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021948:	2cff      	cmp	r4, #255	; 0xff
 802194a:	d020      	beq.n	802198e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 802194c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802194e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021952:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021954:	4367      	muls	r7, r4
 8021956:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021958:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802195c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802195e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021962:	fb04 fa0a 	mul.w	sl, r4, sl
 8021966:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802196a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802196e:	44bc      	add	ip, r7
 8021970:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021974:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021978:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802197c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021980:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021984:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021988:	ea4c 040a 	orr.w	r4, ip, sl
 802198c:	9411      	str	r4, [sp, #68]	; 0x44
 802198e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021990:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021994:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021996:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802199a:	fb0e f707 	mul.w	r7, lr, r7
 802199e:	fb02 770c 	mla	r7, r2, ip, r7
 80219a2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80219a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80219a8:	fb00 770c 	mla	r7, r0, ip, r7
 80219ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80219b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80219b2:	fb08 770c 	mla	r7, r8, ip, r7
 80219b6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80219ba:	fb0e fe0c 	mul.w	lr, lr, ip
 80219be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80219c2:	fb02 e303 	mla	r3, r2, r3, lr
 80219c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80219c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80219ca:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80219ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80219d0:	fb00 330a 	mla	r3, r0, sl, r3
 80219d4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80219d8:	fb08 3c0c 	mla	ip, r8, ip, r3
 80219dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80219de:	f8b9 0000 	ldrh.w	r0, [r9]
 80219e2:	434b      	muls	r3, r1
 80219e4:	0a3f      	lsrs	r7, r7, #8
 80219e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80219ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80219ee:	1c59      	adds	r1, r3, #1
 80219f0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80219f4:	ea47 070c 	orr.w	r7, r7, ip
 80219f8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80219fc:	1202      	asrs	r2, r0, #8
 80219fe:	0c3b      	lsrs	r3, r7, #16
 8021a00:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021a04:	b2c9      	uxtb	r1, r1
 8021a06:	fb13 f304 	smulbb	r3, r3, r4
 8021a0a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021a0e:	fb02 3201 	mla	r2, r2, r1, r3
 8021a12:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021a16:	10c3      	asrs	r3, r0, #3
 8021a18:	b2ff      	uxtb	r7, r7
 8021a1a:	00c0      	lsls	r0, r0, #3
 8021a1c:	b292      	uxth	r2, r2
 8021a1e:	fb1c fc04 	smulbb	ip, ip, r4
 8021a22:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021a26:	b2c0      	uxtb	r0, r0
 8021a28:	fb17 f704 	smulbb	r7, r7, r4
 8021a2c:	fb03 c301 	mla	r3, r3, r1, ip
 8021a30:	fb00 7001 	mla	r0, r0, r1, r7
 8021a34:	f102 0c01 	add.w	ip, r2, #1
 8021a38:	b280      	uxth	r0, r0
 8021a3a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8021a3e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8021a42:	1c42      	adds	r2, r0, #1
 8021a44:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021a48:	b29b      	uxth	r3, r3
 8021a4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021a4e:	ea42 020c 	orr.w	r2, r2, ip
 8021a52:	f103 0c01 	add.w	ip, r3, #1
 8021a56:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021a5a:	095b      	lsrs	r3, r3, #5
 8021a5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021a60:	431a      	orrs	r2, r3
 8021a62:	f8a9 2000 	strh.w	r2, [r9]
 8021a66:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021a68:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021a6a:	441a      	add	r2, r3
 8021a6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a6e:	9229      	str	r2, [sp, #164]	; 0xa4
 8021a70:	f109 0902 	add.w	r9, r9, #2
 8021a74:	441d      	add	r5, r3
 8021a76:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a7a:	e63d      	b.n	80216f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021a7c:	2800      	cmp	r0, #0
 8021a7e:	f43f aedd 	beq.w	802183c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021a82:	5c79      	ldrb	r1, [r7, r1]
 8021a84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021a88:	910b      	str	r1, [sp, #44]	; 0x2c
 8021a8a:	0e09      	lsrs	r1, r1, #24
 8021a8c:	9114      	str	r1, [sp, #80]	; 0x50
 8021a8e:	e6d5      	b.n	802183c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8021a90:	b01f      	add	sp, #124	; 0x7c
 8021a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a9a:	b089      	sub	sp, #36	; 0x24
 8021a9c:	9101      	str	r1, [sp, #4]
 8021a9e:	9801      	ldr	r0, [sp, #4]
 8021aa0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021aa4:	8800      	ldrh	r0, [r0, #0]
 8021aa6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021aaa:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8021aae:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8021ab2:	1206      	asrs	r6, r0, #8
 8021ab4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021ab8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021abc:	9602      	str	r6, [sp, #8]
 8021abe:	10c6      	asrs	r6, r0, #3
 8021ac0:	00c0      	lsls	r0, r0, #3
 8021ac2:	b2c0      	uxtb	r0, r0
 8021ac4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021ac8:	9004      	str	r0, [sp, #16]
 8021aca:	2f00      	cmp	r7, #0
 8021acc:	fb07 100c 	mla	r0, r7, ip, r1
 8021ad0:	9603      	str	r6, [sp, #12]
 8021ad2:	eb02 0e00 	add.w	lr, r2, r0
 8021ad6:	f2c0 810a 	blt.w	8021cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021ada:	45b8      	cmp	r8, r7
 8021adc:	f340 8107 	ble.w	8021cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021ae0:	2900      	cmp	r1, #0
 8021ae2:	f2c0 8102 	blt.w	8021cea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021ae6:	458c      	cmp	ip, r1
 8021ae8:	f340 80ff 	ble.w	8021cea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021aec:	5c12      	ldrb	r2, [r2, r0]
 8021aee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8021af2:	1c4a      	adds	r2, r1, #1
 8021af4:	f100 80fe 	bmi.w	8021cf4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021af8:	4594      	cmp	ip, r2
 8021afa:	f340 80fb 	ble.w	8021cf4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021afe:	2d00      	cmp	r5, #0
 8021b00:	f000 80fa 	beq.w	8021cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021b04:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021b08:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021b0c:	3701      	adds	r7, #1
 8021b0e:	f100 80f7 	bmi.w	8021d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021b12:	45b8      	cmp	r8, r7
 8021b14:	f340 80f4 	ble.w	8021d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021b18:	2c00      	cmp	r4, #0
 8021b1a:	f000 80f4 	beq.w	8021d06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8021b1e:	2900      	cmp	r1, #0
 8021b20:	eb0e 020c 	add.w	r2, lr, ip
 8021b24:	f2c0 80ea 	blt.w	8021cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021b28:	458c      	cmp	ip, r1
 8021b2a:	f340 80e7 	ble.w	8021cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021b2e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8021b32:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021b36:	3101      	adds	r1, #1
 8021b38:	f100 80e8 	bmi.w	8021d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021b3c:	458c      	cmp	ip, r1
 8021b3e:	f340 80e5 	ble.w	8021d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021b42:	2d00      	cmp	r5, #0
 8021b44:	f000 80e4 	beq.w	8021d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021b48:	7852      	ldrb	r2, [r2, #1]
 8021b4a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021b4e:	0e0b      	lsrs	r3, r1, #24
 8021b50:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021b54:	9300      	str	r3, [sp, #0]
 8021b56:	b2a4      	uxth	r4, r4
 8021b58:	b2ab      	uxth	r3, r5
 8021b5a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8021b5e:	fb03 f904 	mul.w	r9, r3, r4
 8021b62:	fb0a f505 	mul.w	r5, sl, r5
 8021b66:	011b      	lsls	r3, r3, #4
 8021b68:	eba3 0e09 	sub.w	lr, r3, r9
 8021b6c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8021b70:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021b74:	0a28      	lsrs	r0, r5, #8
 8021b76:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021b7a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8021b7e:	4405      	add	r5, r0
 8021b80:	0a2d      	lsrs	r5, r5, #8
 8021b82:	fb0a f303 	mul.w	r3, sl, r3
 8021b86:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021b8a:	9005      	str	r0, [sp, #20]
 8021b8c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8021b90:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021b94:	0a1b      	lsrs	r3, r3, #8
 8021b96:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021b9a:	9306      	str	r3, [sp, #24]
 8021b9c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8021ba0:	fb0b f303 	mul.w	r3, fp, r3
 8021ba4:	0a1d      	lsrs	r5, r3, #8
 8021ba6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021baa:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8021bae:	fb0b f606 	mul.w	r6, fp, r6
 8021bb2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021bb6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021bba:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021bbe:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021bc2:	fb08 f707 	mul.w	r7, r8, r7
 8021bc6:	441d      	add	r5, r3
 8021bc8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021bcc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021bd0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021bd4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021bd8:	fb08 fc0c 	mul.w	ip, r8, ip
 8021bdc:	0a1b      	lsrs	r3, r3, #8
 8021bde:	9307      	str	r3, [sp, #28]
 8021be0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021be4:	0e0b      	lsrs	r3, r1, #24
 8021be6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021bea:	435f      	muls	r7, r3
 8021bec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021bf0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021bf4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021bf8:	4460      	add	r0, ip
 8021bfa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021bfe:	b2a4      	uxth	r4, r4
 8021c00:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021c04:	0a2d      	lsrs	r5, r5, #8
 8021c06:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c0e:	fa1f fe8e 	uxth.w	lr, lr
 8021c12:	4359      	muls	r1, r3
 8021c14:	1b12      	subs	r2, r2, r4
 8021c16:	9b05      	ldr	r3, [sp, #20]
 8021c18:	44bc      	add	ip, r7
 8021c1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021c1e:	b292      	uxth	r2, r2
 8021c20:	fb05 f50e 	mul.w	r5, r5, lr
 8021c24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c28:	fb03 5502 	mla	r5, r3, r2, r5
 8021c2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c30:	9b06      	ldr	r3, [sp, #24]
 8021c32:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021c36:	0a36      	lsrs	r6, r6, #8
 8021c38:	0a00      	lsrs	r0, r0, #8
 8021c3a:	fb0c 5509 	mla	r5, ip, r9, r5
 8021c3e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021c42:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021c46:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021c4a:	fb00 5504 	mla	r5, r0, r4, r5
 8021c4e:	fb0e f606 	mul.w	r6, lr, r6
 8021c52:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021c56:	0a09      	lsrs	r1, r1, #8
 8021c58:	9b07      	ldr	r3, [sp, #28]
 8021c5a:	fb02 6000 	mla	r0, r2, r0, r6
 8021c5e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021c62:	fb09 0001 	mla	r0, r9, r1, r0
 8021c66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021c6a:	fb0e fe0b 	mul.w	lr, lr, fp
 8021c6e:	fb04 0003 	mla	r0, r4, r3, r0
 8021c72:	fb02 e20a 	mla	r2, r2, sl, lr
 8021c76:	9b00      	ldr	r3, [sp, #0]
 8021c78:	fb04 2408 	mla	r4, r4, r8, r2
 8021c7c:	fb09 4903 	mla	r9, r9, r3, r4
 8021c80:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021c84:	9b02      	ldr	r3, [sp, #8]
 8021c86:	9a04      	ldr	r2, [sp, #16]
 8021c88:	fa5f f989 	uxtb.w	r9, r9
 8021c8c:	fb03 f109 	mul.w	r1, r3, r9
 8021c90:	9b03      	ldr	r3, [sp, #12]
 8021c92:	0a2d      	lsrs	r5, r5, #8
 8021c94:	0a00      	lsrs	r0, r0, #8
 8021c96:	fb03 f309 	mul.w	r3, r3, r9
 8021c9a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021c9e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021ca2:	4305      	orrs	r5, r0
 8021ca4:	fb02 f909 	mul.w	r9, r2, r9
 8021ca8:	1c58      	adds	r0, r3, #1
 8021caa:	1c4a      	adds	r2, r1, #1
 8021cac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021cb0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021cb4:	0a2b      	lsrs	r3, r5, #8
 8021cb6:	0c2a      	lsrs	r2, r5, #16
 8021cb8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021cbc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021cc0:	00db      	lsls	r3, r3, #3
 8021cc2:	0212      	lsls	r2, r2, #8
 8021cc4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021cc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ccc:	4313      	orrs	r3, r2
 8021cce:	f109 0201 	add.w	r2, r9, #1
 8021cd2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021cd6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021cda:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8021cde:	431d      	orrs	r5, r3
 8021ce0:	9b01      	ldr	r3, [sp, #4]
 8021ce2:	801d      	strh	r5, [r3, #0]
 8021ce4:	b009      	add	sp, #36	; 0x24
 8021ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cea:	2000      	movs	r0, #0
 8021cec:	e701      	b.n	8021af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8021cee:	2600      	movs	r6, #0
 8021cf0:	4630      	mov	r0, r6
 8021cf2:	e70b      	b.n	8021b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021cf4:	2600      	movs	r6, #0
 8021cf6:	e709      	b.n	8021b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021cf8:	462e      	mov	r6, r5
 8021cfa:	e707      	b.n	8021b0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021cfc:	2700      	movs	r7, #0
 8021cfe:	e71a      	b.n	8021b36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8021d00:	2100      	movs	r1, #0
 8021d02:	460f      	mov	r7, r1
 8021d04:	e723      	b.n	8021b4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021d06:	4621      	mov	r1, r4
 8021d08:	4627      	mov	r7, r4
 8021d0a:	e720      	b.n	8021b4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021d0c:	2100      	movs	r1, #0
 8021d0e:	e71e      	b.n	8021b4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021d10:	4629      	mov	r1, r5
 8021d12:	e71c      	b.n	8021b4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d18:	b09b      	sub	sp, #108	; 0x6c
 8021d1a:	9218      	str	r2, [sp, #96]	; 0x60
 8021d1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021d1e:	9116      	str	r1, [sp, #88]	; 0x58
 8021d20:	9307      	str	r3, [sp, #28]
 8021d22:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021d26:	9019      	str	r0, [sp, #100]	; 0x64
 8021d28:	6850      	ldr	r0, [r2, #4]
 8021d2a:	6812      	ldr	r2, [r2, #0]
 8021d2c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021d2e:	fb00 1303 	mla	r3, r0, r3, r1
 8021d32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d36:	930a      	str	r3, [sp, #40]	; 0x28
 8021d38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021d3a:	681b      	ldr	r3, [r3, #0]
 8021d3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8021d3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021d40:	685e      	ldr	r6, [r3, #4]
 8021d42:	3604      	adds	r6, #4
 8021d44:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021d46:	2b00      	cmp	r3, #0
 8021d48:	dc03      	bgt.n	8021d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021d4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d4c:	2b00      	cmp	r3, #0
 8021d4e:	f340 8373 	ble.w	8022438 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021d52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021d54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d5c:	1e48      	subs	r0, r1, #1
 8021d5e:	1e57      	subs	r7, r2, #1
 8021d60:	9b07      	ldr	r3, [sp, #28]
 8021d62:	2b00      	cmp	r3, #0
 8021d64:	f340 8190 	ble.w	8022088 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021d68:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021d6a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021d6e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021d72:	d406      	bmi.n	8021d82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d74:	4584      	cmp	ip, r0
 8021d76:	da04      	bge.n	8021d82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d78:	2b00      	cmp	r3, #0
 8021d7a:	db02      	blt.n	8021d82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d7c:	42bb      	cmp	r3, r7
 8021d7e:	f2c0 8184 	blt.w	802208a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021d82:	f11c 0c01 	adds.w	ip, ip, #1
 8021d86:	f100 8172 	bmi.w	802206e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d8a:	4561      	cmp	r1, ip
 8021d8c:	f2c0 816f 	blt.w	802206e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d90:	3301      	adds	r3, #1
 8021d92:	f100 816c 	bmi.w	802206e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d96:	429a      	cmp	r2, r3
 8021d98:	f2c0 8169 	blt.w	802206e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d9c:	9b07      	ldr	r3, [sp, #28]
 8021d9e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021da0:	9317      	str	r3, [sp, #92]	; 0x5c
 8021da2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021da4:	2b00      	cmp	r3, #0
 8021da6:	f340 818e 	ble.w	80220c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021daa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021dac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021db0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021db2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021db6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021db8:	141b      	asrs	r3, r3, #16
 8021dba:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021dbe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021dc2:	f100 81d1 	bmi.w	8022168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021dc6:	f101 38ff 	add.w	r8, r1, #4294967295
 8021dca:	4543      	cmp	r3, r8
 8021dcc:	f280 81cc 	bge.w	8022168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021dd0:	f1bc 0f00 	cmp.w	ip, #0
 8021dd4:	f2c0 81c8 	blt.w	8022168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021dd8:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ddc:	45c4      	cmp	ip, r8
 8021dde:	f280 81c3 	bge.w	8022168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021de2:	b209      	sxth	r1, r1
 8021de4:	fb0c 3301 	mla	r3, ip, r1, r3
 8021de8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021dea:	eb04 0803 	add.w	r8, r4, r3
 8021dee:	5ce3      	ldrb	r3, [r4, r3]
 8021df0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021df4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021df8:	2a00      	cmp	r2, #0
 8021dfa:	f000 81aa 	beq.w	8022152 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021dfe:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021e02:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021e06:	940b      	str	r4, [sp, #44]	; 0x2c
 8021e08:	0e24      	lsrs	r4, r4, #24
 8021e0a:	9412      	str	r4, [sp, #72]	; 0x48
 8021e0c:	b178      	cbz	r0, 8021e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021e0e:	eb08 0c01 	add.w	ip, r8, r1
 8021e12:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021e16:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e1a:	9108      	str	r1, [sp, #32]
 8021e1c:	0e09      	lsrs	r1, r1, #24
 8021e1e:	9110      	str	r1, [sp, #64]	; 0x40
 8021e20:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021e24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e28:	910c      	str	r1, [sp, #48]	; 0x30
 8021e2a:	0e09      	lsrs	r1, r1, #24
 8021e2c:	9113      	str	r1, [sp, #76]	; 0x4c
 8021e2e:	b292      	uxth	r2, r2
 8021e30:	b280      	uxth	r0, r0
 8021e32:	fb02 f900 	mul.w	r9, r2, r0
 8021e36:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021e3a:	0112      	lsls	r2, r2, #4
 8021e3c:	eba2 0809 	sub.w	r8, r2, r9
 8021e40:	b280      	uxth	r0, r0
 8021e42:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021e46:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021e48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021e4a:	fa1f f888 	uxth.w	r8, r8
 8021e4e:	1a12      	subs	r2, r2, r0
 8021e50:	b292      	uxth	r2, r2
 8021e52:	fb08 f101 	mul.w	r1, r8, r1
 8021e56:	fb02 110e 	mla	r1, r2, lr, r1
 8021e5a:	fb00 1104 	mla	r1, r0, r4, r1
 8021e5e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e60:	fb09 1104 	mla	r1, r9, r4, r1
 8021e64:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021e68:	2900      	cmp	r1, #0
 8021e6a:	f000 80f5 	beq.w	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e6e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021e72:	d01b      	beq.n	8021eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e74:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021e78:	fb0e fa0a 	mul.w	sl, lr, sl
 8021e7c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021e80:	fb0e fe03 	mul.w	lr, lr, r3
 8021e84:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021e88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021e8c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021e90:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021e94:	4453      	add	r3, sl
 8021e96:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021e9a:	0a1b      	lsrs	r3, r3, #8
 8021e9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021ea0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021ea4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021ea8:	ea43 030c 	orr.w	r3, r3, ip
 8021eac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021eae:	2cff      	cmp	r4, #255	; 0xff
 8021eb0:	d021      	beq.n	8021ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021eb2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021eb4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021eb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021eba:	fb04 fb0b 	mul.w	fp, r4, fp
 8021ebe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ec0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021ec4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021ec6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021eca:	fb04 fa0a 	mul.w	sl, r4, sl
 8021ece:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021ed2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021ed6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021eda:	44de      	add	lr, fp
 8021edc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ee0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ee4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ee8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021eec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ef0:	ea4e 040a 	orr.w	r4, lr, sl
 8021ef4:	940b      	str	r4, [sp, #44]	; 0x2c
 8021ef6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ef8:	2cff      	cmp	r4, #255	; 0xff
 8021efa:	d021      	beq.n	8021f40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021efc:	9c08      	ldr	r4, [sp, #32]
 8021efe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021f02:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021f04:	fb04 fb0b 	mul.w	fp, r4, fp
 8021f08:	9c08      	ldr	r4, [sp, #32]
 8021f0a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f0e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021f10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021f14:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021f24:	44de      	add	lr, fp
 8021f26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f3a:	ea4e 040a 	orr.w	r4, lr, sl
 8021f3e:	9408      	str	r4, [sp, #32]
 8021f40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021f42:	2cff      	cmp	r4, #255	; 0xff
 8021f44:	d021      	beq.n	8021f8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021f46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021f48:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021f4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021f4e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021f52:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021f54:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021f5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021f5e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021f6e:	44de      	add	lr, fp
 8021f70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f84:	ea4e 040a 	orr.w	r4, lr, sl
 8021f88:	940c      	str	r4, [sp, #48]	; 0x30
 8021f8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021f8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021f90:	9c08      	ldr	r4, [sp, #32]
 8021f92:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021f96:	fb08 fc0c 	mul.w	ip, r8, ip
 8021f9a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021f9e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021fa2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021fa4:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021fa8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021fac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021fae:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021fb2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021fb6:	fb08 f80e 	mul.w	r8, r8, lr
 8021fba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021fbe:	fb02 8303 	mla	r3, r2, r3, r8
 8021fc2:	9a08      	ldr	r2, [sp, #32]
 8021fc4:	f8b7 8000 	ldrh.w	r8, [r7]
 8021fc8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021fcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021fce:	fb00 330a 	mla	r3, r0, sl, r3
 8021fd2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021fd6:	fb09 3900 	mla	r9, r9, r0, r3
 8021fda:	43c9      	mvns	r1, r1
 8021fdc:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021fe0:	fa5f fe81 	uxtb.w	lr, r1
 8021fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fe8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021fec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021ff0:	fb02 f20e 	mul.w	r2, r2, lr
 8021ff4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ff8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021ffc:	ea4c 0c09 	orr.w	ip, ip, r9
 8022000:	1c53      	adds	r3, r2, #1
 8022002:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022006:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802200a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802200e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022012:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022016:	4a63      	ldr	r2, [pc, #396]	; (80221a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022018:	fb00 f00e 	mul.w	r0, r0, lr
 802201c:	b2db      	uxtb	r3, r3
 802201e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022022:	1c43      	adds	r3, r0, #1
 8022024:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022028:	ea4f 231c 	mov.w	r3, ip, lsr #8
 802202c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022030:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022034:	b2c9      	uxtb	r1, r1
 8022036:	00db      	lsls	r3, r3, #3
 8022038:	fb01 f10e 	mul.w	r1, r1, lr
 802203c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022040:	4313      	orrs	r3, r2
 8022042:	1c4a      	adds	r2, r1, #1
 8022044:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022048:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802204c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022050:	ea4c 0c03 	orr.w	ip, ip, r3
 8022054:	f8a7 c000 	strh.w	ip, [r7]
 8022058:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802205a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802205c:	441a      	add	r2, r3
 802205e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022060:	9225      	str	r2, [sp, #148]	; 0x94
 8022062:	441d      	add	r5, r3
 8022064:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022066:	3b01      	subs	r3, #1
 8022068:	3702      	adds	r7, #2
 802206a:	9317      	str	r3, [sp, #92]	; 0x5c
 802206c:	e699      	b.n	8021da2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802206e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022070:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022072:	441c      	add	r4, r3
 8022074:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022076:	9425      	str	r4, [sp, #148]	; 0x94
 8022078:	441d      	add	r5, r3
 802207a:	9b07      	ldr	r3, [sp, #28]
 802207c:	3b01      	subs	r3, #1
 802207e:	9307      	str	r3, [sp, #28]
 8022080:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022082:	3302      	adds	r3, #2
 8022084:	930a      	str	r3, [sp, #40]	; 0x28
 8022086:	e66b      	b.n	8021d60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022088:	d024      	beq.n	80220d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802208a:	9b07      	ldr	r3, [sp, #28]
 802208c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802208e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022090:	3b01      	subs	r3, #1
 8022092:	fb00 4003 	mla	r0, r0, r3, r4
 8022096:	1400      	asrs	r0, r0, #16
 8022098:	f53f ae80 	bmi.w	8021d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802209c:	3901      	subs	r1, #1
 802209e:	4288      	cmp	r0, r1
 80220a0:	f6bf ae7c 	bge.w	8021d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80220a4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80220a6:	fb01 5303 	mla	r3, r1, r3, r5
 80220aa:	141b      	asrs	r3, r3, #16
 80220ac:	f53f ae76 	bmi.w	8021d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80220b0:	3a01      	subs	r2, #1
 80220b2:	4293      	cmp	r3, r2
 80220b4:	f6bf ae72 	bge.w	8021d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80220b8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80220bc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80220c0:	f1bb 0f00 	cmp.w	fp, #0
 80220c4:	dc70      	bgt.n	80221a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80220c6:	9b07      	ldr	r3, [sp, #28]
 80220c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80220cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80220ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80220d2:	930a      	str	r3, [sp, #40]	; 0x28
 80220d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80220d6:	2b00      	cmp	r3, #0
 80220d8:	f340 81ae 	ble.w	8022438 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80220dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80220e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80220ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220f6:	eef0 6a62 	vmov.f32	s13, s5
 80220fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80220fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022102:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022106:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802210a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802210e:	eef0 6a43 	vmov.f32	s13, s6
 8022112:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022116:	ee12 2a90 	vmov	r2, s5
 802211a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802211e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022122:	ee13 2a10 	vmov	r2, s6
 8022126:	9327      	str	r3, [sp, #156]	; 0x9c
 8022128:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802212a:	fb92 f3f3 	sdiv	r3, r2, r3
 802212e:	9328      	str	r3, [sp, #160]	; 0xa0
 8022130:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022132:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022134:	3b01      	subs	r3, #1
 8022136:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802213a:	9316      	str	r3, [sp, #88]	; 0x58
 802213c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802213e:	bf08      	it	eq
 8022140:	4613      	moveq	r3, r2
 8022142:	ee16 5a90 	vmov	r5, s13
 8022146:	9307      	str	r3, [sp, #28]
 8022148:	eeb0 3a67 	vmov.f32	s6, s15
 802214c:	eef0 2a47 	vmov.f32	s5, s14
 8022150:	e5f8      	b.n	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022152:	2800      	cmp	r0, #0
 8022154:	f43f ae6b 	beq.w	8021e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022158:	f818 1001 	ldrb.w	r1, [r8, r1]
 802215c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022160:	9108      	str	r1, [sp, #32]
 8022162:	0e09      	lsrs	r1, r1, #24
 8022164:	9110      	str	r1, [sp, #64]	; 0x40
 8022166:	e662      	b.n	8021e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022168:	f113 0801 	adds.w	r8, r3, #1
 802216c:	f53f af74 	bmi.w	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022170:	4541      	cmp	r1, r8
 8022172:	f6ff af71 	blt.w	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022176:	f11c 0801 	adds.w	r8, ip, #1
 802217a:	f53f af6d 	bmi.w	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802217e:	45c6      	cmp	lr, r8
 8022180:	f6ff af6a 	blt.w	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022184:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022188:	b209      	sxth	r1, r1
 802218a:	fa0f f38e 	sxth.w	r3, lr
 802218e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8022192:	9301      	str	r3, [sp, #4]
 8022194:	9100      	str	r1, [sp, #0]
 8022196:	4633      	mov	r3, r6
 8022198:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802219a:	9819      	ldr	r0, [sp, #100]	; 0x64
 802219c:	4639      	mov	r1, r7
 802219e:	f7ff fc7a 	bl	8021a96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80221a2:	e759      	b.n	8022058 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80221a4:	fffff800 	.word	0xfffff800
 80221a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80221aa:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80221ac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80221b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80221b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80221b6:	1427      	asrs	r7, r4, #16
 80221b8:	142b      	asrs	r3, r5, #16
 80221ba:	fb01 7303 	mla	r3, r1, r3, r7
 80221be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80221c0:	18e7      	adds	r7, r4, r3
 80221c2:	5ce3      	ldrb	r3, [r4, r3]
 80221c4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80221c8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80221cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80221d0:	2a00      	cmp	r2, #0
 80221d2:	f000 8127 	beq.w	8022424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80221d6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80221da:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80221de:	940d      	str	r4, [sp, #52]	; 0x34
 80221e0:	0e24      	lsrs	r4, r4, #24
 80221e2:	9414      	str	r4, [sp, #80]	; 0x50
 80221e4:	b170      	cbz	r0, 8022204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80221e6:	eb07 0e01 	add.w	lr, r7, r1
 80221ea:	5c79      	ldrb	r1, [r7, r1]
 80221ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80221f0:	9109      	str	r1, [sp, #36]	; 0x24
 80221f2:	0e09      	lsrs	r1, r1, #24
 80221f4:	9111      	str	r1, [sp, #68]	; 0x44
 80221f6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80221fa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80221fe:	910e      	str	r1, [sp, #56]	; 0x38
 8022200:	0e09      	lsrs	r1, r1, #24
 8022202:	9115      	str	r1, [sp, #84]	; 0x54
 8022204:	b292      	uxth	r2, r2
 8022206:	b280      	uxth	r0, r0
 8022208:	fb02 f800 	mul.w	r8, r2, r0
 802220c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022210:	0112      	lsls	r2, r2, #4
 8022212:	eba2 0e08 	sub.w	lr, r2, r8
 8022216:	b280      	uxth	r0, r0
 8022218:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802221c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802221e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022220:	fa1f fe8e 	uxth.w	lr, lr
 8022224:	1a09      	subs	r1, r1, r0
 8022226:	b289      	uxth	r1, r1
 8022228:	fb0e f202 	mul.w	r2, lr, r2
 802222c:	fb01 220c 	mla	r2, r1, ip, r2
 8022230:	fb00 2204 	mla	r2, r0, r4, r2
 8022234:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022236:	fb08 2204 	mla	r2, r8, r4, r2
 802223a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802223e:	2a00      	cmp	r2, #0
 8022240:	f000 80e5 	beq.w	802240e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022244:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022248:	d019      	beq.n	802227e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802224a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802224e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022252:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022256:	fb0c fc03 	mul.w	ip, ip, r3
 802225a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802225e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022262:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022266:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802226a:	4453      	add	r3, sl
 802226c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022270:	0a1b      	lsrs	r3, r3, #8
 8022272:	0a3f      	lsrs	r7, r7, #8
 8022274:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022278:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802227c:	433b      	orrs	r3, r7
 802227e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022280:	2cff      	cmp	r4, #255	; 0xff
 8022282:	d020      	beq.n	80222c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022284:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022286:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802228a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802228c:	4367      	muls	r7, r4
 802228e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022290:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022294:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022296:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802229a:	fb04 fa0a 	mul.w	sl, r4, sl
 802229e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80222a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222a6:	44bc      	add	ip, r7
 80222a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80222ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80222b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80222c0:	ea4c 040a 	orr.w	r4, ip, sl
 80222c4:	940d      	str	r4, [sp, #52]	; 0x34
 80222c6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80222c8:	2cff      	cmp	r4, #255	; 0xff
 80222ca:	d020      	beq.n	802230e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80222cc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80222ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80222d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80222d4:	4367      	muls	r7, r4
 80222d6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80222d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80222dc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80222de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80222e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80222e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80222ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222ee:	44bc      	add	ip, r7
 80222f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80222f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80222f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022300:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022304:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022308:	ea4c 040a 	orr.w	r4, ip, sl
 802230c:	9409      	str	r4, [sp, #36]	; 0x24
 802230e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022310:	2cff      	cmp	r4, #255	; 0xff
 8022312:	d020      	beq.n	8022356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022314:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022316:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802231a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802231c:	4367      	muls	r7, r4
 802231e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022320:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022324:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022326:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802232a:	fb04 fa0a 	mul.w	sl, r4, sl
 802232e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022332:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022336:	44bc      	add	ip, r7
 8022338:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802233c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022340:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022344:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022348:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802234c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022350:	ea4c 040a 	orr.w	r4, ip, sl
 8022354:	940e      	str	r4, [sp, #56]	; 0x38
 8022356:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022358:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802235c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802235e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022362:	fb0e f707 	mul.w	r7, lr, r7
 8022366:	fb01 770c 	mla	r7, r1, ip, r7
 802236a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802236e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022370:	fb00 770c 	mla	r7, r0, ip, r7
 8022374:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022378:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802237a:	fb08 770c 	mla	r7, r8, ip, r7
 802237e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022382:	fb0e fe0c 	mul.w	lr, lr, ip
 8022386:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802238a:	fb01 e303 	mla	r3, r1, r3, lr
 802238e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022390:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022394:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022396:	fb00 330a 	mla	r3, r0, sl, r3
 802239a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802239e:	fb08 3c0c 	mla	ip, r8, ip, r3
 80223a2:	f8b9 3000 	ldrh.w	r3, [r9]
 80223a6:	43d2      	mvns	r2, r2
 80223a8:	1218      	asrs	r0, r3, #8
 80223aa:	b2d2      	uxtb	r2, r2
 80223ac:	10d9      	asrs	r1, r3, #3
 80223ae:	0a3f      	lsrs	r7, r7, #8
 80223b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80223b8:	00db      	lsls	r3, r3, #3
 80223ba:	4350      	muls	r0, r2
 80223bc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80223c0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80223c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80223c8:	b2db      	uxtb	r3, r3
 80223ca:	ea47 070c 	orr.w	r7, r7, ip
 80223ce:	4351      	muls	r1, r2
 80223d0:	4353      	muls	r3, r2
 80223d2:	1c42      	adds	r2, r0, #1
 80223d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80223d8:	0c3a      	lsrs	r2, r7, #16
 80223da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80223de:	4a18      	ldr	r2, [pc, #96]	; (8022440 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80223e0:	b2c0      	uxtb	r0, r0
 80223e2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80223e6:	1c4a      	adds	r2, r1, #1
 80223e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80223ec:	0a3a      	lsrs	r2, r7, #8
 80223ee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80223f2:	00c9      	lsls	r1, r1, #3
 80223f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80223f8:	4301      	orrs	r1, r0
 80223fa:	1c58      	adds	r0, r3, #1
 80223fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022400:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022404:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022408:	4308      	orrs	r0, r1
 802240a:	f8a9 0000 	strh.w	r0, [r9]
 802240e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022410:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022412:	441a      	add	r2, r3
 8022414:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022416:	9225      	str	r2, [sp, #148]	; 0x94
 8022418:	f109 0902 	add.w	r9, r9, #2
 802241c:	441d      	add	r5, r3
 802241e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022422:	e64d      	b.n	80220c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022424:	2800      	cmp	r0, #0
 8022426:	f43f aeed 	beq.w	8022204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802242a:	5c79      	ldrb	r1, [r7, r1]
 802242c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022430:	9109      	str	r1, [sp, #36]	; 0x24
 8022432:	0e09      	lsrs	r1, r1, #24
 8022434:	9111      	str	r1, [sp, #68]	; 0x44
 8022436:	e6e5      	b.n	8022204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022438:	b01b      	add	sp, #108	; 0x6c
 802243a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802243e:	bf00      	nop
 8022440:	fffff800 	.word	0xfffff800

08022444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022448:	b085      	sub	sp, #20
 802244a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802244e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022452:	9103      	str	r1, [sp, #12]
 8022454:	fb00 7406 	mla	r4, r0, r6, r7
 8022458:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 802245c:	2800      	cmp	r0, #0
 802245e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022462:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022466:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802246a:	9501      	str	r5, [sp, #4]
 802246c:	eb03 0904 	add.w	r9, r3, r4
 8022470:	f2c0 8150 	blt.w	8022714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022474:	4583      	cmp	fp, r0
 8022476:	f340 814d 	ble.w	8022714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802247a:	2f00      	cmp	r7, #0
 802247c:	f2c0 8146 	blt.w	802270c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022480:	42be      	cmp	r6, r7
 8022482:	f340 8143 	ble.w	802270c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022486:	f813 c004 	ldrb.w	ip, [r3, r4]
 802248a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802248e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022492:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022496:	4355      	muls	r5, r2
 8022498:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802249c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80224a0:	fb0c f203 	mul.w	r2, ip, r3
 80224a4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80224a8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80224ac:	441d      	add	r5, r3
 80224ae:	f102 0320 	add.w	r3, r2, #32
 80224b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80224b6:	0a1b      	lsrs	r3, r3, #8
 80224b8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80224bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224c0:	431c      	orrs	r4, r3
 80224c2:	1c7b      	adds	r3, r7, #1
 80224c4:	f100 812b 	bmi.w	802271e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80224c8:	429e      	cmp	r6, r3
 80224ca:	f340 8128 	ble.w	802271e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80224ce:	2900      	cmp	r1, #0
 80224d0:	f000 8128 	beq.w	8022724 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80224d4:	9a01      	ldr	r2, [sp, #4]
 80224d6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80224da:	8855      	ldrh	r5, [r2, #2]
 80224dc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80224e0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80224e4:	fb08 f802 	mul.w	r8, r8, r2
 80224e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80224ec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80224f0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80224f4:	435d      	muls	r5, r3
 80224f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80224fa:	44d0      	add	r8, sl
 80224fc:	f105 0a20 	add.w	sl, r5, #32
 8022500:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022504:	0a2d      	lsrs	r5, r5, #8
 8022506:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802250a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802250e:	432a      	orrs	r2, r5
 8022510:	3001      	adds	r0, #1
 8022512:	f100 810d 	bmi.w	8022730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022516:	4583      	cmp	fp, r0
 8022518:	f340 810a 	ble.w	8022730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802251c:	f1be 0f00 	cmp.w	lr, #0
 8022520:	f000 810b 	beq.w	802273a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022524:	2f00      	cmp	r7, #0
 8022526:	f2c0 8100 	blt.w	802272a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802252a:	42be      	cmp	r6, r7
 802252c:	f340 80fd 	ble.w	802272a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022530:	9801      	ldr	r0, [sp, #4]
 8022532:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022536:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802253a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802253e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022542:	fb0a fa00 	mul.w	sl, sl, r0
 8022546:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802254a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802254e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022552:	fb05 f808 	mul.w	r8, r5, r8
 8022556:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802255a:	4482      	add	sl, r0
 802255c:	f108 0020 	add.w	r0, r8, #32
 8022560:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022564:	0a00      	lsrs	r0, r0, #8
 8022566:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802256a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802256e:	ea4b 0b00 	orr.w	fp, fp, r0
 8022572:	3701      	adds	r7, #1
 8022574:	f100 80e6 	bmi.w	8022744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022578:	42be      	cmp	r6, r7
 802257a:	f340 80e3 	ble.w	8022744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802257e:	2900      	cmp	r1, #0
 8022580:	f000 80e3 	beq.w	802274a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022584:	3601      	adds	r6, #1
 8022586:	9801      	ldr	r0, [sp, #4]
 8022588:	f819 7006 	ldrb.w	r7, [r9, r6]
 802258c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022590:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022594:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022598:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802259c:	fb09 f906 	mul.w	r9, r9, r6
 80225a0:	fb07 f800 	mul.w	r8, r7, r0
 80225a4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80225a8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80225ac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80225b0:	44d1      	add	r9, sl
 80225b2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80225b6:	f108 0020 	add.w	r0, r8, #32
 80225ba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80225be:	0a00      	lsrs	r0, r0, #8
 80225c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225c4:	4330      	orrs	r0, r6
 80225c6:	b28e      	uxth	r6, r1
 80225c8:	fa1f f98e 	uxth.w	r9, lr
 80225cc:	fb06 f809 	mul.w	r8, r6, r9
 80225d0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80225d4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80225d8:	0136      	lsls	r6, r6, #4
 80225da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225de:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80225e2:	9601      	str	r6, [sp, #4]
 80225e4:	ea4a 0404 	orr.w	r4, sl, r4
 80225e8:	fa1f f689 	uxth.w	r6, r9
 80225ec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80225f0:	fb11 f90e 	smulbb	r9, r1, lr
 80225f4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80225f8:	9602      	str	r6, [sp, #8]
 80225fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225fe:	4626      	mov	r6, r4
 8022600:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022604:	f1ce 0410 	rsb	r4, lr, #16
 8022608:	1a64      	subs	r4, r4, r1
 802260a:	ea4a 0202 	orr.w	r2, sl, r2
 802260e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022612:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022616:	434a      	muls	r2, r1
 8022618:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802261c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022620:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022624:	fb04 2406 	mla	r4, r4, r6, r2
 8022628:	ea4a 0000 	orr.w	r0, sl, r0
 802262c:	fb09 4200 	mla	r2, r9, r0, r4
 8022630:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022634:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022638:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802263c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022640:	9c01      	ldr	r4, [sp, #4]
 8022642:	9e02      	ldr	r6, [sp, #8]
 8022644:	9903      	ldr	r1, [sp, #12]
 8022646:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802264a:	1ba4      	subs	r4, r4, r6
 802264c:	9e01      	ldr	r6, [sp, #4]
 802264e:	8808      	ldrh	r0, [r1, #0]
 8022650:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022654:	eba6 0608 	sub.w	r6, r6, r8
 8022658:	b2b6      	uxth	r6, r6
 802265a:	b2a4      	uxth	r4, r4
 802265c:	4373      	muls	r3, r6
 802265e:	fb0c 3304 	mla	r3, ip, r4, r3
 8022662:	9c02      	ldr	r4, [sp, #8]
 8022664:	fb04 3505 	mla	r5, r4, r5, r3
 8022668:	fb08 5707 	mla	r7, r8, r7, r5
 802266c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022670:	b289      	uxth	r1, r1
 8022672:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022676:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802267a:	434f      	muls	r7, r1
 802267c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022680:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022684:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022688:	1c7b      	adds	r3, r7, #1
 802268a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802268e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022692:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022696:	fa1f f28e 	uxth.w	r2, lr
 802269a:	1203      	asrs	r3, r0, #8
 802269c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80226a0:	b2ff      	uxtb	r7, r7
 80226a2:	1215      	asrs	r5, r2, #8
 80226a4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80226a8:	fb13 f307 	smulbb	r3, r3, r7
 80226ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80226b0:	fb05 3501 	mla	r5, r5, r1, r3
 80226b4:	10c3      	asrs	r3, r0, #3
 80226b6:	10d4      	asrs	r4, r2, #3
 80226b8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80226bc:	fb13 f307 	smulbb	r3, r3, r7
 80226c0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80226c4:	fb04 3401 	mla	r4, r4, r1, r3
 80226c8:	00c3      	lsls	r3, r0, #3
 80226ca:	00d2      	lsls	r2, r2, #3
 80226cc:	b2db      	uxtb	r3, r3
 80226ce:	fb13 f307 	smulbb	r3, r3, r7
 80226d2:	b2d2      	uxtb	r2, r2
 80226d4:	fb02 3101 	mla	r1, r2, r1, r3
 80226d8:	b2ad      	uxth	r5, r5
 80226da:	b289      	uxth	r1, r1
 80226dc:	b2a4      	uxth	r4, r4
 80226de:	1c6b      	adds	r3, r5, #1
 80226e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80226e4:	1c62      	adds	r2, r4, #1
 80226e6:	1c4b      	adds	r3, r1, #1
 80226e8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80226ec:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80226f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80226f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226f8:	0964      	lsrs	r4, r4, #5
 80226fa:	432b      	orrs	r3, r5
 80226fc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022700:	9a03      	ldr	r2, [sp, #12]
 8022702:	4323      	orrs	r3, r4
 8022704:	8013      	strh	r3, [r2, #0]
 8022706:	b005      	add	sp, #20
 8022708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802270c:	f04f 0c00 	mov.w	ip, #0
 8022710:	4664      	mov	r4, ip
 8022712:	e6d6      	b.n	80224c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022714:	2300      	movs	r3, #0
 8022716:	469c      	mov	ip, r3
 8022718:	461a      	mov	r2, r3
 802271a:	461c      	mov	r4, r3
 802271c:	e6f8      	b.n	8022510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802271e:	2300      	movs	r3, #0
 8022720:	461a      	mov	r2, r3
 8022722:	e6f5      	b.n	8022510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022724:	460b      	mov	r3, r1
 8022726:	460a      	mov	r2, r1
 8022728:	e6f2      	b.n	8022510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802272a:	2500      	movs	r5, #0
 802272c:	46ab      	mov	fp, r5
 802272e:	e720      	b.n	8022572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022730:	2700      	movs	r7, #0
 8022732:	463d      	mov	r5, r7
 8022734:	4638      	mov	r0, r7
 8022736:	46bb      	mov	fp, r7
 8022738:	e745      	b.n	80225c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802273a:	4677      	mov	r7, lr
 802273c:	4675      	mov	r5, lr
 802273e:	4670      	mov	r0, lr
 8022740:	46f3      	mov	fp, lr
 8022742:	e740      	b.n	80225c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022744:	2700      	movs	r7, #0
 8022746:	4638      	mov	r0, r7
 8022748:	e73d      	b.n	80225c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802274a:	460f      	mov	r7, r1
 802274c:	4608      	mov	r0, r1
 802274e:	e73a      	b.n	80225c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022754:	b097      	sub	sp, #92	; 0x5c
 8022756:	9214      	str	r2, [sp, #80]	; 0x50
 8022758:	9308      	str	r3, [sp, #32]
 802275a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802275c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8022760:	9312      	str	r3, [sp, #72]	; 0x48
 8022762:	9111      	str	r1, [sp, #68]	; 0x44
 8022764:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022768:	9015      	str	r0, [sp, #84]	; 0x54
 802276a:	6850      	ldr	r0, [r2, #4]
 802276c:	6812      	ldr	r2, [r2, #0]
 802276e:	fb00 1303 	mla	r3, r0, r3, r1
 8022772:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022776:	9309      	str	r3, [sp, #36]	; 0x24
 8022778:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802277a:	681b      	ldr	r3, [r3, #0]
 802277c:	930b      	str	r3, [sp, #44]	; 0x2c
 802277e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022780:	685b      	ldr	r3, [r3, #4]
 8022782:	930c      	str	r3, [sp, #48]	; 0x30
 8022784:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022788:	930a      	str	r3, [sp, #40]	; 0x28
 802278a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802278c:	2b00      	cmp	r3, #0
 802278e:	dc03      	bgt.n	8022798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022790:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022792:	2b00      	cmp	r3, #0
 8022794:	f340 83cb 	ble.w	8022f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022798:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802279a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802279e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227a2:	1e48      	subs	r0, r1, #1
 80227a4:	1e55      	subs	r5, r2, #1
 80227a6:	9b08      	ldr	r3, [sp, #32]
 80227a8:	2b00      	cmp	r3, #0
 80227aa:	f340 81a3 	ble.w	8022af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80227ae:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80227b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80227b2:	1436      	asrs	r6, r6, #16
 80227b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80227b8:	d406      	bmi.n	80227c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80227ba:	4286      	cmp	r6, r0
 80227bc:	da04      	bge.n	80227c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80227be:	2b00      	cmp	r3, #0
 80227c0:	db02      	blt.n	80227c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80227c2:	42ab      	cmp	r3, r5
 80227c4:	f2c0 8197 	blt.w	8022af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80227c8:	3601      	adds	r6, #1
 80227ca:	f100 8184 	bmi.w	8022ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80227ce:	42b1      	cmp	r1, r6
 80227d0:	f2c0 8181 	blt.w	8022ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80227d4:	3301      	adds	r3, #1
 80227d6:	f100 817e 	bmi.w	8022ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80227da:	429a      	cmp	r2, r3
 80227dc:	f2c0 817b 	blt.w	8022ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80227e0:	9b08      	ldr	r3, [sp, #32]
 80227e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80227e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80227e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80227ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80227ec:	2b00      	cmp	r3, #0
 80227ee:	f340 81a4 	ble.w	8022b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80227f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80227f4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80227f6:	1418      	asrs	r0, r3, #16
 80227f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80227fa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80227fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022800:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022804:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022806:	142d      	asrs	r5, r5, #16
 8022808:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802280c:	f100 81f8 	bmi.w	8022c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022810:	f102 3eff 	add.w	lr, r2, #4294967295
 8022814:	4575      	cmp	r5, lr
 8022816:	f280 81f3 	bge.w	8022c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802281a:	2800      	cmp	r0, #0
 802281c:	f2c0 81f0 	blt.w	8022c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022820:	f103 3eff 	add.w	lr, r3, #4294967295
 8022824:	4570      	cmp	r0, lr
 8022826:	f280 81eb 	bge.w	8022c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802282a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802282c:	b212      	sxth	r2, r2
 802282e:	fb00 5002 	mla	r0, r0, r2, r5
 8022832:	fa1f fe81 	uxth.w	lr, r1
 8022836:	eb03 0a00 	add.w	sl, r3, r0
 802283a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802283e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022842:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022846:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802284a:	b29b      	uxth	r3, r3
 802284c:	f1bc 0f00 	cmp.w	ip, #0
 8022850:	f000 81b9 	beq.w	8022bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8022854:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022858:	940d      	str	r4, [sp, #52]	; 0x34
 802285a:	eb0a 0b02 	add.w	fp, sl, r2
 802285e:	fa1f fa8c 	uxth.w	sl, ip
 8022862:	fb0a fe0e 	mul.w	lr, sl, lr
 8022866:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802286a:	fa1f fa8a 	uxth.w	sl, sl
 802286e:	eba5 050e 	sub.w	r5, r5, lr
 8022872:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022876:	940e      	str	r4, [sp, #56]	; 0x38
 8022878:	eba3 030a 	sub.w	r3, r3, sl
 802287c:	b2ad      	uxth	r5, r5
 802287e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022880:	b29b      	uxth	r3, r3
 8022882:	fb08 f505 	mul.w	r5, r8, r5
 8022886:	fb09 5303 	mla	r3, r9, r3, r5
 802288a:	fb0a 3304 	mla	r3, sl, r4, r3
 802288e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022890:	fb0e 3304 	mla	r3, lr, r4, r3
 8022894:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022898:	2b00      	cmp	r3, #0
 802289a:	f000 810f 	beq.w	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802289e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80228a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80228a4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80228a8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80228ac:	f000 8190 	beq.w	8022bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80228b0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80228b4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80228b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80228bc:	fb09 f000 	mul.w	r0, r9, r0
 80228c0:	fb0a fe0e 	mul.w	lr, sl, lr
 80228c4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80228c8:	f100 0b20 	add.w	fp, r0, #32
 80228cc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80228d0:	44ce      	add	lr, r9
 80228d2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80228d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80228da:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80228de:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80228e2:	ea4e 0909 	orr.w	r9, lr, r9
 80228e6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80228ea:	8868      	ldrh	r0, [r5, #2]
 80228ec:	d019      	beq.n	8022922 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80228ee:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80228f2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80228f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80228fa:	fb08 f800 	mul.w	r8, r8, r0
 80228fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8022902:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022906:	f108 0b20 	add.w	fp, r8, #32
 802290a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802290e:	4486      	add	lr, r0
 8022910:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022914:	0a00      	lsrs	r0, r0, #8
 8022916:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802291a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802291e:	ea4e 0000 	orr.w	r0, lr, r0
 8022922:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022926:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802292a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802292e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022932:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022936:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802293a:	ea4e 0909 	orr.w	r9, lr, r9
 802293e:	ea4a 0000 	orr.w	r0, sl, r0
 8022942:	f1bc 0f00 	cmp.w	ip, #0
 8022946:	f000 8145 	beq.w	8022bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802294a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802294e:	3a01      	subs	r2, #1
 8022950:	0052      	lsls	r2, r2, #1
 8022952:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022954:	3202      	adds	r2, #2
 8022956:	2cff      	cmp	r4, #255	; 0xff
 8022958:	eb05 0e02 	add.w	lr, r5, r2
 802295c:	5aaa      	ldrh	r2, [r5, r2]
 802295e:	d018      	beq.n	8022992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8022960:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022964:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022968:	fb04 fa02 	mul.w	sl, r4, r2
 802296c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022970:	fb08 f805 	mul.w	r8, r8, r5
 8022974:	f10a 0520 	add.w	r5, sl, #32
 8022978:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802297c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022980:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022984:	4442      	add	r2, r8
 8022986:	0a2d      	lsrs	r5, r5, #8
 8022988:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802298c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022990:	432a      	orrs	r2, r5
 8022992:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022994:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022998:	2cff      	cmp	r4, #255	; 0xff
 802299a:	d01a      	beq.n	80229d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802299c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80229a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80229a4:	fb04 fa05 	mul.w	sl, r4, r5
 80229a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80229ac:	fb08 f80e 	mul.w	r8, r8, lr
 80229b0:	f10a 0e20 	add.w	lr, sl, #32
 80229b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80229b8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80229bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80229c0:	4445      	add	r5, r8
 80229c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80229c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80229ca:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80229ce:	ea45 050e 	orr.w	r5, r5, lr
 80229d2:	fb1c fe01 	smulbb	lr, ip, r1
 80229d6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80229da:	f1cc 0810 	rsb	r8, ip, #16
 80229de:	eba8 0801 	sub.w	r8, r8, r1
 80229e2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80229e6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80229ea:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80229ee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80229f2:	4341      	muls	r1, r0
 80229f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80229f8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80229fc:	ea4a 0202 	orr.w	r2, sl, r2
 8022a00:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022a04:	fb09 1108 	mla	r1, r9, r8, r1
 8022a08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022a0c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022a10:	fb0c 1102 	mla	r1, ip, r2, r1
 8022a14:	ea4b 0505 	orr.w	r5, fp, r5
 8022a18:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022a1c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022a20:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022a24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a28:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022a2c:	ea42 0e0e 	orr.w	lr, r2, lr
 8022a30:	fa1f f28e 	uxth.w	r2, lr
 8022a34:	2bff      	cmp	r3, #255	; 0xff
 8022a36:	d103      	bne.n	8022a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022a38:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022a3a:	29ff      	cmp	r1, #255	; 0xff
 8022a3c:	f000 80de 	beq.w	8022bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8022a40:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022a42:	8838      	ldrh	r0, [r7, #0]
 8022a44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022a46:	434b      	muls	r3, r1
 8022a48:	f103 0c01 	add.w	ip, r3, #1
 8022a4c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8022a50:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022a54:	fa5f fc83 	uxtb.w	ip, r3
 8022a58:	1203      	asrs	r3, r0, #8
 8022a5a:	1215      	asrs	r5, r2, #8
 8022a5c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022a60:	fb13 f30c 	smulbb	r3, r3, ip
 8022a64:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022a68:	fb05 3501 	mla	r5, r5, r1, r3
 8022a6c:	10c3      	asrs	r3, r0, #3
 8022a6e:	10d1      	asrs	r1, r2, #3
 8022a70:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022a74:	fb13 f30c 	smulbb	r3, r3, ip
 8022a78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022a7c:	fb01 3104 	mla	r1, r1, r4, r3
 8022a80:	00c3      	lsls	r3, r0, #3
 8022a82:	00d2      	lsls	r2, r2, #3
 8022a84:	b2db      	uxtb	r3, r3
 8022a86:	b2d2      	uxtb	r2, r2
 8022a88:	fb13 f30c 	smulbb	r3, r3, ip
 8022a8c:	b2ad      	uxth	r5, r5
 8022a8e:	fb02 3304 	mla	r3, r2, r4, r3
 8022a92:	b29a      	uxth	r2, r3
 8022a94:	1c6b      	adds	r3, r5, #1
 8022a96:	b289      	uxth	r1, r1
 8022a98:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022a9c:	1c53      	adds	r3, r2, #1
 8022a9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022aa2:	1c4a      	adds	r2, r1, #1
 8022aa4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022aa8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022aac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022ab0:	0949      	lsrs	r1, r1, #5
 8022ab2:	432b      	orrs	r3, r5
 8022ab4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ab8:	430b      	orrs	r3, r1
 8022aba:	803b      	strh	r3, [r7, #0]
 8022abc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022abe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022ac0:	4413      	add	r3, r2
 8022ac2:	9321      	str	r3, [sp, #132]	; 0x84
 8022ac4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022ac6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ac8:	441a      	add	r2, r3
 8022aca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022acc:	9222      	str	r2, [sp, #136]	; 0x88
 8022ace:	3b01      	subs	r3, #1
 8022ad0:	3702      	adds	r7, #2
 8022ad2:	9313      	str	r3, [sp, #76]	; 0x4c
 8022ad4:	e689      	b.n	80227ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022ad6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022ad8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022ada:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022adc:	4433      	add	r3, r6
 8022ade:	9321      	str	r3, [sp, #132]	; 0x84
 8022ae0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ae2:	441c      	add	r4, r3
 8022ae4:	9b08      	ldr	r3, [sp, #32]
 8022ae6:	9422      	str	r4, [sp, #136]	; 0x88
 8022ae8:	3b01      	subs	r3, #1
 8022aea:	9308      	str	r3, [sp, #32]
 8022aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022aee:	3302      	adds	r3, #2
 8022af0:	9309      	str	r3, [sp, #36]	; 0x24
 8022af2:	e658      	b.n	80227a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022af4:	d028      	beq.n	8022b48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022af6:	9b08      	ldr	r3, [sp, #32]
 8022af8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022afa:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022afc:	3b01      	subs	r3, #1
 8022afe:	fb00 5003 	mla	r0, r0, r3, r5
 8022b02:	1400      	asrs	r0, r0, #16
 8022b04:	f53f ae6c 	bmi.w	80227e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b08:	3901      	subs	r1, #1
 8022b0a:	4288      	cmp	r0, r1
 8022b0c:	f6bf ae68 	bge.w	80227e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b10:	9924      	ldr	r1, [sp, #144]	; 0x90
 8022b12:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022b14:	fb01 0303 	mla	r3, r1, r3, r0
 8022b18:	141b      	asrs	r3, r3, #16
 8022b1a:	f53f ae61 	bmi.w	80227e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b1e:	3a01      	subs	r2, #1
 8022b20:	4293      	cmp	r3, r2
 8022b22:	f6bf ae5d 	bge.w	80227e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b26:	9b08      	ldr	r3, [sp, #32]
 8022b28:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022b2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8022b2e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022b32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022b34:	2b00      	cmp	r3, #0
 8022b36:	f300 8082 	bgt.w	8022c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022b3a:	9b08      	ldr	r3, [sp, #32]
 8022b3c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022b42:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022b46:	9309      	str	r3, [sp, #36]	; 0x24
 8022b48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022b4a:	2b00      	cmp	r3, #0
 8022b4c:	f340 81ef 	ble.w	8022f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022b50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b58:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b6a:	eef0 6a62 	vmov.f32	s13, s5
 8022b6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b7a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8022b7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b82:	eef0 6a43 	vmov.f32	s13, s6
 8022b86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b8a:	ee12 2a90 	vmov	r2, s5
 8022b8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b96:	ee13 2a10 	vmov	r2, s6
 8022b9a:	9323      	str	r3, [sp, #140]	; 0x8c
 8022b9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ba2:	9324      	str	r3, [sp, #144]	; 0x90
 8022ba4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022ba6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022ba8:	3b01      	subs	r3, #1
 8022baa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bae:	9311      	str	r3, [sp, #68]	; 0x44
 8022bb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022bb2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022bb6:	bf08      	it	eq
 8022bb8:	4613      	moveq	r3, r2
 8022bba:	9308      	str	r3, [sp, #32]
 8022bbc:	eeb0 3a67 	vmov.f32	s6, s15
 8022bc0:	eef0 2a47 	vmov.f32	s5, s14
 8022bc4:	e5e1      	b.n	802278a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022bc6:	fb08 f505 	mul.w	r5, r8, r5
 8022bca:	fb09 5303 	mla	r3, r9, r3, r5
 8022bce:	e661      	b.n	8022894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8022bd0:	4681      	mov	r9, r0
 8022bd2:	e688      	b.n	80228e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022bd4:	f1c1 0210 	rsb	r2, r1, #16
 8022bd8:	4341      	muls	r1, r0
 8022bda:	fb09 1902 	mla	r9, r9, r2, r1
 8022bde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022be2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022be6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022bea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022bee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022bf2:	ea42 0909 	orr.w	r9, r2, r9
 8022bf6:	fa1f f289 	uxth.w	r2, r9
 8022bfa:	e71b      	b.n	8022a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022bfc:	803a      	strh	r2, [r7, #0]
 8022bfe:	e75d      	b.n	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c00:	f115 0e01 	adds.w	lr, r5, #1
 8022c04:	f53f af5a 	bmi.w	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c08:	4572      	cmp	r2, lr
 8022c0a:	f6ff af57 	blt.w	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c0e:	f110 0e01 	adds.w	lr, r0, #1
 8022c12:	f53f af53 	bmi.w	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c16:	4573      	cmp	r3, lr
 8022c18:	f6ff af50 	blt.w	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022c1e:	9502      	str	r5, [sp, #8]
 8022c20:	b21b      	sxth	r3, r3
 8022c22:	b212      	sxth	r2, r2
 8022c24:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022c28:	9301      	str	r3, [sp, #4]
 8022c2a:	9200      	str	r2, [sp, #0]
 8022c2c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022c30:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022c34:	4639      	mov	r1, r7
 8022c36:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022c38:	f7ff fc04 	bl	8022444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022c3c:	e73e      	b.n	8022abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022c3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c40:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c44:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022c46:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022c4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022c4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c50:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022c52:	141f      	asrs	r7, r3, #16
 8022c54:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022c56:	141b      	asrs	r3, r3, #16
 8022c58:	fb01 3707 	mla	r7, r1, r7, r3
 8022c5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022c5e:	fa1f fc82 	uxth.w	ip, r2
 8022c62:	eb03 0a07 	add.w	sl, r3, r7
 8022c66:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022c6a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022c6e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022c72:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022c76:	b29b      	uxth	r3, r3
 8022c78:	2d00      	cmp	r5, #0
 8022c7a:	f000 813d 	beq.w	8022ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022c7e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022c82:	940f      	str	r4, [sp, #60]	; 0x3c
 8022c84:	eb0a 0b01 	add.w	fp, sl, r1
 8022c88:	fa1f fa85 	uxth.w	sl, r5
 8022c8c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022c90:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022c94:	fa1f fa8a 	uxth.w	sl, sl
 8022c98:	eba0 000c 	sub.w	r0, r0, ip
 8022c9c:	eba3 030a 	sub.w	r3, r3, sl
 8022ca0:	b280      	uxth	r0, r0
 8022ca2:	fb08 f000 	mul.w	r0, r8, r0
 8022ca6:	b29b      	uxth	r3, r3
 8022ca8:	fb09 0303 	mla	r3, r9, r3, r0
 8022cac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022cae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022cb2:	9410      	str	r4, [sp, #64]	; 0x40
 8022cb4:	fb0a 3300 	mla	r3, sl, r0, r3
 8022cb8:	fb0c 3304 	mla	r3, ip, r4, r3
 8022cbc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022cc0:	2b00      	cmp	r3, #0
 8022cc2:	f000 810b 	beq.w	8022edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022cc6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022cc8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022cca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022cce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022cd2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022cd6:	f000 8114 	beq.w	8022f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022cda:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022cde:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022ce2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ce6:	fb09 f707 	mul.w	r7, r9, r7
 8022cea:	fb0a fc0c 	mul.w	ip, sl, ip
 8022cee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022cf2:	f107 0b20 	add.w	fp, r7, #32
 8022cf6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022cfa:	44cc      	add	ip, r9
 8022cfc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022d00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022d04:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022d08:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022d0c:	ea4c 0909 	orr.w	r9, ip, r9
 8022d10:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022d14:	8847      	ldrh	r7, [r0, #2]
 8022d16:	d019      	beq.n	8022d4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022d18:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022d1c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022d20:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d24:	fb08 f807 	mul.w	r8, r8, r7
 8022d28:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d2c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022d30:	f108 0b20 	add.w	fp, r8, #32
 8022d34:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022d38:	44bc      	add	ip, r7
 8022d3a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022d3e:	0a3f      	lsrs	r7, r7, #8
 8022d40:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022d44:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d48:	ea4c 0707 	orr.w	r7, ip, r7
 8022d4c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022d50:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022d54:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d58:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022d5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d60:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022d64:	ea4c 0909 	orr.w	r9, ip, r9
 8022d68:	ea4a 0707 	orr.w	r7, sl, r7
 8022d6c:	2d00      	cmp	r5, #0
 8022d6e:	f000 80ca 	beq.w	8022f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022d72:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022d76:	3901      	subs	r1, #1
 8022d78:	0049      	lsls	r1, r1, #1
 8022d7a:	3102      	adds	r1, #2
 8022d7c:	eb00 0c01 	add.w	ip, r0, r1
 8022d80:	5a41      	ldrh	r1, [r0, r1]
 8022d82:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022d84:	28ff      	cmp	r0, #255	; 0xff
 8022d86:	d019      	beq.n	8022dbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022d88:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022d8a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022d8e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d92:	fb04 fa01 	mul.w	sl, r4, r1
 8022d96:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022d9a:	fb08 f800 	mul.w	r8, r8, r0
 8022d9e:	f10a 0020 	add.w	r0, sl, #32
 8022da2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022da6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022daa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022dae:	4441      	add	r1, r8
 8022db0:	0a00      	lsrs	r0, r0, #8
 8022db2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022db6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022dba:	4301      	orrs	r1, r0
 8022dbc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022dbe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022dc2:	2cff      	cmp	r4, #255	; 0xff
 8022dc4:	d01a      	beq.n	8022dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022dc6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022dca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022dce:	fb04 fa00 	mul.w	sl, r4, r0
 8022dd2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022dd6:	fb08 f80c 	mul.w	r8, r8, ip
 8022dda:	f10a 0c20 	add.w	ip, sl, #32
 8022dde:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022de2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022de6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022dea:	4440      	add	r0, r8
 8022dec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022df0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022df4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022df8:	ea40 000c 	orr.w	r0, r0, ip
 8022dfc:	fb15 fc02 	smulbb	ip, r5, r2
 8022e00:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022e04:	f1c5 0810 	rsb	r8, r5, #16
 8022e08:	eba8 0802 	sub.w	r8, r8, r2
 8022e0c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022e10:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022e14:	437a      	muls	r2, r7
 8022e16:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022e1a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022e1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022e22:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022e26:	fb09 2208 	mla	r2, r9, r8, r2
 8022e2a:	ea4a 0101 	orr.w	r1, sl, r1
 8022e2e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022e32:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022e36:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e3a:	fb05 2201 	mla	r2, r5, r1, r2
 8022e3e:	ea4b 0000 	orr.w	r0, fp, r0
 8022e42:	fb0c 2200 	mla	r2, ip, r0, r2
 8022e46:	0d57      	lsrs	r7, r2, #21
 8022e48:	0952      	lsrs	r2, r2, #5
 8022e4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022e4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e52:	433a      	orrs	r2, r7
 8022e54:	2bff      	cmp	r3, #255	; 0xff
 8022e56:	b292      	uxth	r2, r2
 8022e58:	d102      	bne.n	8022e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022e5a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022e5c:	29ff      	cmp	r1, #255	; 0xff
 8022e5e:	d063      	beq.n	8022f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022e60:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022e62:	f8be 1000 	ldrh.w	r1, [lr]
 8022e66:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022e68:	4343      	muls	r3, r0
 8022e6a:	1c58      	adds	r0, r3, #1
 8022e6c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022e70:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022e74:	1208      	asrs	r0, r1, #8
 8022e76:	b2db      	uxtb	r3, r3
 8022e78:	1215      	asrs	r5, r2, #8
 8022e7a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022e7e:	fb10 f003 	smulbb	r0, r0, r3
 8022e82:	10cf      	asrs	r7, r1, #3
 8022e84:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022e88:	00c9      	lsls	r1, r1, #3
 8022e8a:	fb05 0504 	mla	r5, r5, r4, r0
 8022e8e:	b2c9      	uxtb	r1, r1
 8022e90:	10d0      	asrs	r0, r2, #3
 8022e92:	00d2      	lsls	r2, r2, #3
 8022e94:	fb11 f103 	smulbb	r1, r1, r3
 8022e98:	b2d2      	uxtb	r2, r2
 8022e9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022e9e:	fb02 1204 	mla	r2, r2, r4, r1
 8022ea2:	fb17 f703 	smulbb	r7, r7, r3
 8022ea6:	b2ad      	uxth	r5, r5
 8022ea8:	b292      	uxth	r2, r2
 8022eaa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022eae:	fb00 7004 	mla	r0, r0, r4, r7
 8022eb2:	1c6b      	adds	r3, r5, #1
 8022eb4:	1c57      	adds	r7, r2, #1
 8022eb6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022eba:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022ebe:	b280      	uxth	r0, r0
 8022ec0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022ec4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022ec8:	433d      	orrs	r5, r7
 8022eca:	1c47      	adds	r7, r0, #1
 8022ecc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022ed0:	097f      	lsrs	r7, r7, #5
 8022ed2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ed6:	433d      	orrs	r5, r7
 8022ed8:	f8ae 5000 	strh.w	r5, [lr]
 8022edc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022ede:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022ee0:	4413      	add	r3, r2
 8022ee2:	9321      	str	r3, [sp, #132]	; 0x84
 8022ee4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022ee6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ee8:	441a      	add	r2, r3
 8022eea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022eec:	9222      	str	r2, [sp, #136]	; 0x88
 8022eee:	3b01      	subs	r3, #1
 8022ef0:	f10e 0e02 	add.w	lr, lr, #2
 8022ef4:	9313      	str	r3, [sp, #76]	; 0x4c
 8022ef6:	e61c      	b.n	8022b32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022ef8:	fb08 f000 	mul.w	r0, r8, r0
 8022efc:	fb09 0303 	mla	r3, r9, r3, r0
 8022f00:	e6dc      	b.n	8022cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022f02:	46b9      	mov	r9, r7
 8022f04:	e704      	b.n	8022d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022f06:	f1c2 0110 	rsb	r1, r2, #16
 8022f0a:	437a      	muls	r2, r7
 8022f0c:	fb09 2901 	mla	r9, r9, r1, r2
 8022f10:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022f14:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022f18:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022f1c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f24:	4302      	orrs	r2, r0
 8022f26:	e795      	b.n	8022e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022f28:	f8ae 2000 	strh.w	r2, [lr]
 8022f2c:	e7d6      	b.n	8022edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022f2e:	b017      	add	sp, #92	; 0x5c
 8022f30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022f34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f38:	b085      	sub	sp, #20
 8022f3a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022f3e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022f42:	9103      	str	r1, [sp, #12]
 8022f44:	fb00 7406 	mla	r4, r0, r6, r7
 8022f48:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022f4c:	2800      	cmp	r0, #0
 8022f4e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022f52:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022f56:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022f5a:	9501      	str	r5, [sp, #4]
 8022f5c:	eb02 0904 	add.w	r9, r2, r4
 8022f60:	f2c0 8141 	blt.w	80231e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022f64:	4583      	cmp	fp, r0
 8022f66:	f340 813e 	ble.w	80231e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022f6a:	2f00      	cmp	r7, #0
 8022f6c:	f2c0 8137 	blt.w	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022f70:	42be      	cmp	r6, r7
 8022f72:	f340 8134 	ble.w	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022f76:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022f7a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022f7e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022f82:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022f86:	4355      	muls	r5, r2
 8022f88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022f8c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022f90:	fb0c f203 	mul.w	r2, ip, r3
 8022f94:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022f98:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022f9c:	441d      	add	r5, r3
 8022f9e:	f102 0320 	add.w	r3, r2, #32
 8022fa2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022fa6:	0a1b      	lsrs	r3, r3, #8
 8022fa8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022fac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022fb0:	431c      	orrs	r4, r3
 8022fb2:	1c7b      	adds	r3, r7, #1
 8022fb4:	f100 811c 	bmi.w	80231f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022fb8:	429e      	cmp	r6, r3
 8022fba:	f340 8119 	ble.w	80231f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022fbe:	2900      	cmp	r1, #0
 8022fc0:	f000 8119 	beq.w	80231f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022fc4:	9a01      	ldr	r2, [sp, #4]
 8022fc6:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022fca:	8855      	ldrh	r5, [r2, #2]
 8022fcc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022fd0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022fd4:	fb08 f802 	mul.w	r8, r8, r2
 8022fd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022fdc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022fe0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022fe4:	435d      	muls	r5, r3
 8022fe6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022fea:	44d0      	add	r8, sl
 8022fec:	f105 0a20 	add.w	sl, r5, #32
 8022ff0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022ff4:	0a2d      	lsrs	r5, r5, #8
 8022ff6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022ffa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ffe:	432a      	orrs	r2, r5
 8023000:	3001      	adds	r0, #1
 8023002:	f100 80fe 	bmi.w	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023006:	4583      	cmp	fp, r0
 8023008:	f340 80fb 	ble.w	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802300c:	f1be 0f00 	cmp.w	lr, #0
 8023010:	f000 80fc 	beq.w	802320c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023014:	2f00      	cmp	r7, #0
 8023016:	f2c0 80f1 	blt.w	80231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802301a:	42be      	cmp	r6, r7
 802301c:	f340 80ee 	ble.w	80231fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023020:	9801      	ldr	r0, [sp, #4]
 8023022:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023026:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802302a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802302e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023032:	fb0a fa00 	mul.w	sl, sl, r0
 8023036:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802303a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802303e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023042:	fb05 f808 	mul.w	r8, r5, r8
 8023046:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802304a:	4482      	add	sl, r0
 802304c:	f108 0020 	add.w	r0, r8, #32
 8023050:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023054:	0a00      	lsrs	r0, r0, #8
 8023056:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802305a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802305e:	ea4b 0b00 	orr.w	fp, fp, r0
 8023062:	3701      	adds	r7, #1
 8023064:	f100 80d7 	bmi.w	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023068:	42be      	cmp	r6, r7
 802306a:	f340 80d4 	ble.w	8023216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802306e:	2900      	cmp	r1, #0
 8023070:	f000 80d4 	beq.w	802321c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023074:	3601      	adds	r6, #1
 8023076:	9801      	ldr	r0, [sp, #4]
 8023078:	f819 7006 	ldrb.w	r7, [r9, r6]
 802307c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023080:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023084:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023088:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802308c:	fb09 f906 	mul.w	r9, r9, r6
 8023090:	fb07 f800 	mul.w	r8, r7, r0
 8023094:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023098:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802309c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80230a0:	44d1      	add	r9, sl
 80230a2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80230a6:	f108 0020 	add.w	r0, r8, #32
 80230aa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80230ae:	0a00      	lsrs	r0, r0, #8
 80230b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230b4:	4330      	orrs	r0, r6
 80230b6:	b28e      	uxth	r6, r1
 80230b8:	fa1f f98e 	uxth.w	r9, lr
 80230bc:	fb06 f809 	mul.w	r8, r6, r9
 80230c0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80230c4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80230c8:	0136      	lsls	r6, r6, #4
 80230ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80230ce:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80230d2:	9601      	str	r6, [sp, #4]
 80230d4:	ea4a 0404 	orr.w	r4, sl, r4
 80230d8:	fa1f f689 	uxth.w	r6, r9
 80230dc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80230e0:	fb11 f90e 	smulbb	r9, r1, lr
 80230e4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80230e8:	9602      	str	r6, [sp, #8]
 80230ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80230ee:	4626      	mov	r6, r4
 80230f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80230f4:	f1ce 0410 	rsb	r4, lr, #16
 80230f8:	1a64      	subs	r4, r4, r1
 80230fa:	ea4a 0202 	orr.w	r2, sl, r2
 80230fe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023102:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023106:	434a      	muls	r2, r1
 8023108:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802310c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023110:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023114:	fb04 2406 	mla	r4, r4, r6, r2
 8023118:	ea4a 0000 	orr.w	r0, sl, r0
 802311c:	fb09 4200 	mla	r2, r9, r0, r4
 8023120:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023124:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023128:	9801      	ldr	r0, [sp, #4]
 802312a:	9903      	ldr	r1, [sp, #12]
 802312c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023130:	ea44 0b0b 	orr.w	fp, r4, fp
 8023134:	9c02      	ldr	r4, [sp, #8]
 8023136:	8809      	ldrh	r1, [r1, #0]
 8023138:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802313c:	1b00      	subs	r0, r0, r4
 802313e:	9c01      	ldr	r4, [sp, #4]
 8023140:	eba4 0608 	sub.w	r6, r4, r8
 8023144:	b2b6      	uxth	r6, r6
 8023146:	b280      	uxth	r0, r0
 8023148:	4373      	muls	r3, r6
 802314a:	fb0c 3300 	mla	r3, ip, r0, r3
 802314e:	9802      	ldr	r0, [sp, #8]
 8023150:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023154:	fb00 3505 	mla	r5, r0, r5, r3
 8023158:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802315c:	fb08 5707 	mla	r7, r8, r7, r5
 8023160:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023164:	120b      	asrs	r3, r1, #8
 8023166:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802316a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802316e:	b2ff      	uxtb	r7, r7
 8023170:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023174:	10c8      	asrs	r0, r1, #3
 8023176:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802317a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802317e:	00c9      	lsls	r1, r1, #3
 8023180:	437b      	muls	r3, r7
 8023182:	ea42 0e0e 	orr.w	lr, r2, lr
 8023186:	b2c9      	uxtb	r1, r1
 8023188:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802318c:	fa1f f28e 	uxth.w	r2, lr
 8023190:	4378      	muls	r0, r7
 8023192:	434f      	muls	r7, r1
 8023194:	1c59      	adds	r1, r3, #1
 8023196:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802319a:	1213      	asrs	r3, r2, #8
 802319c:	f023 0307 	bic.w	r3, r3, #7
 80231a0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80231a4:	1c41      	adds	r1, r0, #1
 80231a6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80231aa:	10d1      	asrs	r1, r2, #3
 80231ac:	f021 0103 	bic.w	r1, r1, #3
 80231b0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80231b4:	021b      	lsls	r3, r3, #8
 80231b6:	00c9      	lsls	r1, r1, #3
 80231b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80231bc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80231c0:	430b      	orrs	r3, r1
 80231c2:	1c79      	adds	r1, r7, #1
 80231c4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80231c8:	00d2      	lsls	r2, r2, #3
 80231ca:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80231ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80231d2:	431a      	orrs	r2, r3
 80231d4:	9b03      	ldr	r3, [sp, #12]
 80231d6:	801a      	strh	r2, [r3, #0]
 80231d8:	b005      	add	sp, #20
 80231da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231de:	f04f 0c00 	mov.w	ip, #0
 80231e2:	4664      	mov	r4, ip
 80231e4:	e6e5      	b.n	8022fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80231e6:	2300      	movs	r3, #0
 80231e8:	469c      	mov	ip, r3
 80231ea:	461a      	mov	r2, r3
 80231ec:	461c      	mov	r4, r3
 80231ee:	e707      	b.n	8023000 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80231f0:	2300      	movs	r3, #0
 80231f2:	461a      	mov	r2, r3
 80231f4:	e704      	b.n	8023000 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80231f6:	460b      	mov	r3, r1
 80231f8:	460a      	mov	r2, r1
 80231fa:	e701      	b.n	8023000 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80231fc:	2500      	movs	r5, #0
 80231fe:	46ab      	mov	fp, r5
 8023200:	e72f      	b.n	8023062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023202:	2700      	movs	r7, #0
 8023204:	463d      	mov	r5, r7
 8023206:	4638      	mov	r0, r7
 8023208:	46bb      	mov	fp, r7
 802320a:	e754      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802320c:	4677      	mov	r7, lr
 802320e:	4675      	mov	r5, lr
 8023210:	4670      	mov	r0, lr
 8023212:	46f3      	mov	fp, lr
 8023214:	e74f      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023216:	2700      	movs	r7, #0
 8023218:	4638      	mov	r0, r7
 802321a:	e74c      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802321c:	460f      	mov	r7, r1
 802321e:	4608      	mov	r0, r1
 8023220:	e749      	b.n	80230b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023228:	b093      	sub	sp, #76	; 0x4c
 802322a:	9210      	str	r2, [sp, #64]	; 0x40
 802322c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802322e:	910e      	str	r1, [sp, #56]	; 0x38
 8023230:	9306      	str	r3, [sp, #24]
 8023232:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023236:	9011      	str	r0, [sp, #68]	; 0x44
 8023238:	6850      	ldr	r0, [r2, #4]
 802323a:	6812      	ldr	r2, [r2, #0]
 802323c:	fb00 1303 	mla	r3, r0, r3, r1
 8023240:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023244:	9307      	str	r3, [sp, #28]
 8023246:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023248:	681b      	ldr	r3, [r3, #0]
 802324a:	9308      	str	r3, [sp, #32]
 802324c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802324e:	685b      	ldr	r3, [r3, #4]
 8023250:	9309      	str	r3, [sp, #36]	; 0x24
 8023252:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023254:	2b00      	cmp	r3, #0
 8023256:	dc03      	bgt.n	8023260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023258:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802325a:	2b00      	cmp	r3, #0
 802325c:	f340 83b4 	ble.w	80239c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023260:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023262:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023266:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802326a:	1e48      	subs	r0, r1, #1
 802326c:	1e55      	subs	r5, r2, #1
 802326e:	9b06      	ldr	r3, [sp, #24]
 8023270:	2b00      	cmp	r3, #0
 8023272:	f340 8163 	ble.w	802353c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023276:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023278:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802327a:	1436      	asrs	r6, r6, #16
 802327c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023280:	d406      	bmi.n	8023290 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023282:	4286      	cmp	r6, r0
 8023284:	da04      	bge.n	8023290 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023286:	2b00      	cmp	r3, #0
 8023288:	db02      	blt.n	8023290 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802328a:	42ab      	cmp	r3, r5
 802328c:	f2c0 8157 	blt.w	802353e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023290:	3601      	adds	r6, #1
 8023292:	f100 8144 	bmi.w	802351e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023296:	42b1      	cmp	r1, r6
 8023298:	f2c0 8141 	blt.w	802351e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802329c:	3301      	adds	r3, #1
 802329e:	f100 813e 	bmi.w	802351e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80232a2:	429a      	cmp	r2, r3
 80232a4:	f2c0 813b 	blt.w	802351e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80232a8:	9b06      	ldr	r3, [sp, #24]
 80232aa:	9f07      	ldr	r7, [sp, #28]
 80232ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80232ae:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80232b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80232b4:	2b00      	cmp	r3, #0
 80232b6:	f340 8164 	ble.w	8023582 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80232ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80232bc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80232be:	1418      	asrs	r0, r3, #16
 80232c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80232c2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80232c6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80232c8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80232cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80232ce:	142d      	asrs	r5, r5, #16
 80232d0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80232d4:	f100 81ee 	bmi.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80232d8:	f102 3eff 	add.w	lr, r2, #4294967295
 80232dc:	4575      	cmp	r5, lr
 80232de:	f280 81e9 	bge.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80232e2:	2800      	cmp	r0, #0
 80232e4:	f2c0 81e6 	blt.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80232e8:	f103 3eff 	add.w	lr, r3, #4294967295
 80232ec:	4570      	cmp	r0, lr
 80232ee:	f280 81e1 	bge.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80232f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232f4:	b212      	sxth	r2, r2
 80232f6:	fb00 5002 	mla	r0, r0, r2, r5
 80232fa:	fa1f fe81 	uxth.w	lr, r1
 80232fe:	eb03 0a00 	add.w	sl, r3, r0
 8023302:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023306:	f813 9000 	ldrb.w	r9, [r3, r0]
 802330a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802330e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023312:	b29b      	uxth	r3, r3
 8023314:	f1bc 0f00 	cmp.w	ip, #0
 8023318:	f000 8179 	beq.w	802360e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802331c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023320:	940a      	str	r4, [sp, #40]	; 0x28
 8023322:	eb0a 0b02 	add.w	fp, sl, r2
 8023326:	fa1f fa8c 	uxth.w	sl, ip
 802332a:	fb0a fe0e 	mul.w	lr, sl, lr
 802332e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023332:	fa1f fa8a 	uxth.w	sl, sl
 8023336:	eba5 050e 	sub.w	r5, r5, lr
 802333a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802333e:	940b      	str	r4, [sp, #44]	; 0x2c
 8023340:	eba3 030a 	sub.w	r3, r3, sl
 8023344:	b2ad      	uxth	r5, r5
 8023346:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023348:	b29b      	uxth	r3, r3
 802334a:	fb08 f505 	mul.w	r5, r8, r5
 802334e:	fb09 5303 	mla	r3, r9, r3, r5
 8023352:	fb0a 3304 	mla	r3, sl, r4, r3
 8023356:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023358:	fb0e 3304 	mla	r3, lr, r4, r3
 802335c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023360:	2b00      	cmp	r3, #0
 8023362:	f000 80cf 	beq.w	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023366:	9c08      	ldr	r4, [sp, #32]
 8023368:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802336c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023370:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023374:	f000 8150 	beq.w	8023618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023378:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802337c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023380:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023384:	fb09 f000 	mul.w	r0, r9, r0
 8023388:	fb0a fe0e 	mul.w	lr, sl, lr
 802338c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023390:	f100 0b20 	add.w	fp, r0, #32
 8023394:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023398:	44ce      	add	lr, r9
 802339a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802339e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80233a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80233a6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80233aa:	ea4e 0909 	orr.w	r9, lr, r9
 80233ae:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80233b2:	8868      	ldrh	r0, [r5, #2]
 80233b4:	d019      	beq.n	80233ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80233b6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80233ba:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80233be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80233c2:	fb08 f800 	mul.w	r8, r8, r0
 80233c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80233ca:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80233ce:	f108 0b20 	add.w	fp, r8, #32
 80233d2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80233d6:	4486      	add	lr, r0
 80233d8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80233dc:	0a00      	lsrs	r0, r0, #8
 80233de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80233e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80233e6:	ea4e 0000 	orr.w	r0, lr, r0
 80233ea:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80233ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80233f2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80233f6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80233fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023402:	ea4e 0909 	orr.w	r9, lr, r9
 8023406:	ea4a 0000 	orr.w	r0, sl, r0
 802340a:	f1bc 0f00 	cmp.w	ip, #0
 802340e:	f000 8105 	beq.w	802361c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023412:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023416:	3a01      	subs	r2, #1
 8023418:	0052      	lsls	r2, r2, #1
 802341a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802341c:	3202      	adds	r2, #2
 802341e:	2cff      	cmp	r4, #255	; 0xff
 8023420:	eb05 0e02 	add.w	lr, r5, r2
 8023424:	5aaa      	ldrh	r2, [r5, r2]
 8023426:	d018      	beq.n	802345a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023428:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802342c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023430:	fb04 fa02 	mul.w	sl, r4, r2
 8023434:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023438:	fb08 f805 	mul.w	r8, r8, r5
 802343c:	f10a 0520 	add.w	r5, sl, #32
 8023440:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023444:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023448:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802344c:	4442      	add	r2, r8
 802344e:	0a2d      	lsrs	r5, r5, #8
 8023450:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023454:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023458:	432a      	orrs	r2, r5
 802345a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802345c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023460:	2cff      	cmp	r4, #255	; 0xff
 8023462:	d01a      	beq.n	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023464:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023468:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802346c:	fb04 fa05 	mul.w	sl, r4, r5
 8023470:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023474:	fb08 f80e 	mul.w	r8, r8, lr
 8023478:	f10a 0e20 	add.w	lr, sl, #32
 802347c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023480:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023484:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023488:	4445      	add	r5, r8
 802348a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802348e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023492:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023496:	ea45 050e 	orr.w	r5, r5, lr
 802349a:	fb1c fe01 	smulbb	lr, ip, r1
 802349e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80234a2:	f1cc 0810 	rsb	r8, ip, #16
 80234a6:	eba8 0801 	sub.w	r8, r8, r1
 80234aa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80234ae:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80234b2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80234b6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80234ba:	4341      	muls	r1, r0
 80234bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80234c4:	ea4a 0202 	orr.w	r2, sl, r2
 80234c8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80234cc:	fb09 1108 	mla	r1, r9, r8, r1
 80234d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80234d4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80234d8:	fb0c 1102 	mla	r1, ip, r2, r1
 80234dc:	ea4b 0505 	orr.w	r5, fp, r5
 80234e0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80234e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80234e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80234ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80234f0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80234f4:	ea42 0e0e 	orr.w	lr, r2, lr
 80234f8:	fa1f f28e 	uxth.w	r2, lr
 80234fc:	2bff      	cmp	r3, #255	; 0xff
 80234fe:	f040 80a1 	bne.w	8023644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023502:	803a      	strh	r2, [r7, #0]
 8023504:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023506:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023508:	4413      	add	r3, r2
 802350a:	931d      	str	r3, [sp, #116]	; 0x74
 802350c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802350e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023510:	441a      	add	r2, r3
 8023512:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023514:	921e      	str	r2, [sp, #120]	; 0x78
 8023516:	3b01      	subs	r3, #1
 8023518:	3702      	adds	r7, #2
 802351a:	930f      	str	r3, [sp, #60]	; 0x3c
 802351c:	e6c9      	b.n	80232b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802351e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023520:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023522:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023524:	4433      	add	r3, r6
 8023526:	931d      	str	r3, [sp, #116]	; 0x74
 8023528:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802352a:	441c      	add	r4, r3
 802352c:	9b06      	ldr	r3, [sp, #24]
 802352e:	941e      	str	r4, [sp, #120]	; 0x78
 8023530:	3b01      	subs	r3, #1
 8023532:	9306      	str	r3, [sp, #24]
 8023534:	9b07      	ldr	r3, [sp, #28]
 8023536:	3302      	adds	r3, #2
 8023538:	9307      	str	r3, [sp, #28]
 802353a:	e698      	b.n	802326e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802353c:	d028      	beq.n	8023590 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802353e:	9b06      	ldr	r3, [sp, #24]
 8023540:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023542:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023544:	3b01      	subs	r3, #1
 8023546:	fb00 5003 	mla	r0, r0, r3, r5
 802354a:	1400      	asrs	r0, r0, #16
 802354c:	f53f aeac 	bmi.w	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023550:	3901      	subs	r1, #1
 8023552:	4288      	cmp	r0, r1
 8023554:	f6bf aea8 	bge.w	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023558:	9920      	ldr	r1, [sp, #128]	; 0x80
 802355a:	981e      	ldr	r0, [sp, #120]	; 0x78
 802355c:	fb01 0303 	mla	r3, r1, r3, r0
 8023560:	141b      	asrs	r3, r3, #16
 8023562:	f53f aea1 	bmi.w	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023566:	3a01      	subs	r2, #1
 8023568:	4293      	cmp	r3, r2
 802356a:	f6bf ae9d 	bge.w	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802356e:	9b06      	ldr	r3, [sp, #24]
 8023570:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023574:	930f      	str	r3, [sp, #60]	; 0x3c
 8023576:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802357a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802357c:	2b00      	cmp	r3, #0
 802357e:	f300 80b6 	bgt.w	80236ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8023582:	9b06      	ldr	r3, [sp, #24]
 8023584:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023588:	9b07      	ldr	r3, [sp, #28]
 802358a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802358e:	9307      	str	r3, [sp, #28]
 8023590:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023592:	2b00      	cmp	r3, #0
 8023594:	f340 8218 	ble.w	80239c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023598:	ee30 0a04 	vadd.f32	s0, s0, s8
 802359c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80235a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80235a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80235a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80235aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80235ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80235b2:	eef0 6a62 	vmov.f32	s13, s5
 80235b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80235ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80235c2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80235c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80235ca:	eef0 6a43 	vmov.f32	s13, s6
 80235ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80235d2:	ee12 2a90 	vmov	r2, s5
 80235d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80235da:	fb92 f3f3 	sdiv	r3, r2, r3
 80235de:	ee13 2a10 	vmov	r2, s6
 80235e2:	931f      	str	r3, [sp, #124]	; 0x7c
 80235e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80235e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80235ea:	9320      	str	r3, [sp, #128]	; 0x80
 80235ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80235f0:	3b01      	subs	r3, #1
 80235f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235f6:	930e      	str	r3, [sp, #56]	; 0x38
 80235f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80235fa:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80235fe:	bf08      	it	eq
 8023600:	4613      	moveq	r3, r2
 8023602:	9306      	str	r3, [sp, #24]
 8023604:	eeb0 3a67 	vmov.f32	s6, s15
 8023608:	eef0 2a47 	vmov.f32	s5, s14
 802360c:	e621      	b.n	8023252 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802360e:	fb08 f505 	mul.w	r5, r8, r5
 8023612:	fb09 5303 	mla	r3, r9, r3, r5
 8023616:	e6a1      	b.n	802335c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023618:	4681      	mov	r9, r0
 802361a:	e6c8      	b.n	80233ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802361c:	f1c1 0210 	rsb	r2, r1, #16
 8023620:	4341      	muls	r1, r0
 8023622:	fb09 1902 	mla	r9, r9, r2, r1
 8023626:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802362a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802362e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023632:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023636:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802363a:	ea42 0909 	orr.w	r9, r2, r9
 802363e:	fa1f f289 	uxth.w	r2, r9
 8023642:	e75b      	b.n	80234fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023644:	f8b7 c000 	ldrh.w	ip, [r7]
 8023648:	43db      	mvns	r3, r3
 802364a:	ea4f 202c 	mov.w	r0, ip, asr #8
 802364e:	fa5f fe83 	uxtb.w	lr, r3
 8023652:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023656:	fb00 f00e 	mul.w	r0, r0, lr
 802365a:	1c41      	adds	r1, r0, #1
 802365c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023660:	1211      	asrs	r1, r2, #8
 8023662:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023666:	f021 0107 	bic.w	r1, r1, #7
 802366a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802366e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023672:	48d7      	ldr	r0, [pc, #860]	; (80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023674:	fb05 f50e 	mul.w	r5, r5, lr
 8023678:	b2c9      	uxtb	r1, r1
 802367a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802367e:	1c69      	adds	r1, r5, #1
 8023680:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023684:	10d1      	asrs	r1, r2, #3
 8023686:	f021 0103 	bic.w	r1, r1, #3
 802368a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802368e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023692:	b2db      	uxtb	r3, r3
 8023694:	00c9      	lsls	r1, r1, #3
 8023696:	fb03 f30e 	mul.w	r3, r3, lr
 802369a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802369e:	4301      	orrs	r1, r0
 80236a0:	1c58      	adds	r0, r3, #1
 80236a2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80236a6:	00d2      	lsls	r2, r2, #3
 80236a8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80236ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80236b0:	430a      	orrs	r2, r1
 80236b2:	e726      	b.n	8023502 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80236b4:	f115 0e01 	adds.w	lr, r5, #1
 80236b8:	f53f af24 	bmi.w	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80236bc:	4572      	cmp	r2, lr
 80236be:	f6ff af21 	blt.w	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80236c2:	f110 0e01 	adds.w	lr, r0, #1
 80236c6:	f53f af1d 	bmi.w	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80236ca:	4573      	cmp	r3, lr
 80236cc:	f6ff af1a 	blt.w	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80236d0:	b21b      	sxth	r3, r3
 80236d2:	b212      	sxth	r2, r2
 80236d4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80236d8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80236dc:	9301      	str	r3, [sp, #4]
 80236de:	9200      	str	r2, [sp, #0]
 80236e0:	4639      	mov	r1, r7
 80236e2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80236e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80236e8:	f7ff fc24 	bl	8022f34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80236ec:	e70a      	b.n	8023504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80236ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80236f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80236f4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80236f6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80236fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80236fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023700:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023702:	141f      	asrs	r7, r3, #16
 8023704:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023706:	141b      	asrs	r3, r3, #16
 8023708:	fb01 3707 	mla	r7, r1, r7, r3
 802370c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802370e:	fa1f fc82 	uxth.w	ip, r2
 8023712:	eb03 0a07 	add.w	sl, r3, r7
 8023716:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802371a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802371e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023722:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023726:	b29b      	uxth	r3, r3
 8023728:	2d00      	cmp	r5, #0
 802372a:	f000 80fe 	beq.w	802392a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802372e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023732:	940c      	str	r4, [sp, #48]	; 0x30
 8023734:	eb0a 0b01 	add.w	fp, sl, r1
 8023738:	fa1f fa85 	uxth.w	sl, r5
 802373c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023740:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023744:	fa1f fa8a 	uxth.w	sl, sl
 8023748:	eba0 000c 	sub.w	r0, r0, ip
 802374c:	eba3 030a 	sub.w	r3, r3, sl
 8023750:	b280      	uxth	r0, r0
 8023752:	fb08 f000 	mul.w	r0, r8, r0
 8023756:	b29b      	uxth	r3, r3
 8023758:	fb09 0303 	mla	r3, r9, r3, r0
 802375c:	980c      	ldr	r0, [sp, #48]	; 0x30
 802375e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023762:	940d      	str	r4, [sp, #52]	; 0x34
 8023764:	fb0a 3300 	mla	r3, sl, r0, r3
 8023768:	fb0c 3304 	mla	r3, ip, r4, r3
 802376c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023770:	2b00      	cmp	r3, #0
 8023772:	f000 80cc 	beq.w	802390e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023776:	9808      	ldr	r0, [sp, #32]
 8023778:	9c08      	ldr	r4, [sp, #32]
 802377a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802377e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023782:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023786:	f000 80d5 	beq.w	8023934 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802378a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802378e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023792:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023796:	fb09 f707 	mul.w	r7, r9, r7
 802379a:	fb0a fc0c 	mul.w	ip, sl, ip
 802379e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80237a2:	f107 0b20 	add.w	fp, r7, #32
 80237a6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80237aa:	44cc      	add	ip, r9
 80237ac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80237b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80237b4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80237b8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80237bc:	ea4c 0909 	orr.w	r9, ip, r9
 80237c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80237c4:	8847      	ldrh	r7, [r0, #2]
 80237c6:	d019      	beq.n	80237fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80237c8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80237cc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80237d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80237d4:	fb08 f807 	mul.w	r8, r8, r7
 80237d8:	fb0a fc0c 	mul.w	ip, sl, ip
 80237dc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80237e0:	f108 0b20 	add.w	fp, r8, #32
 80237e4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80237e8:	44bc      	add	ip, r7
 80237ea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80237ee:	0a3f      	lsrs	r7, r7, #8
 80237f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80237f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80237f8:	ea4c 0707 	orr.w	r7, ip, r7
 80237fc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023800:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023804:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023808:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802380c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023810:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023814:	ea4c 0909 	orr.w	r9, ip, r9
 8023818:	ea4a 0707 	orr.w	r7, sl, r7
 802381c:	2d00      	cmp	r5, #0
 802381e:	f000 808b 	beq.w	8023938 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8023822:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023826:	3901      	subs	r1, #1
 8023828:	0049      	lsls	r1, r1, #1
 802382a:	3102      	adds	r1, #2
 802382c:	eb00 0c01 	add.w	ip, r0, r1
 8023830:	5a41      	ldrh	r1, [r0, r1]
 8023832:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023834:	28ff      	cmp	r0, #255	; 0xff
 8023836:	d019      	beq.n	802386c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023838:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802383a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802383e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023842:	fb04 fa01 	mul.w	sl, r4, r1
 8023846:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802384a:	fb08 f800 	mul.w	r8, r8, r0
 802384e:	f10a 0020 	add.w	r0, sl, #32
 8023852:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023856:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802385a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802385e:	4441      	add	r1, r8
 8023860:	0a00      	lsrs	r0, r0, #8
 8023862:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023866:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802386a:	4301      	orrs	r1, r0
 802386c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802386e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023872:	2cff      	cmp	r4, #255	; 0xff
 8023874:	d01a      	beq.n	80238ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023876:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802387a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802387e:	fb04 fa00 	mul.w	sl, r4, r0
 8023882:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023886:	fb08 f80c 	mul.w	r8, r8, ip
 802388a:	f10a 0c20 	add.w	ip, sl, #32
 802388e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023892:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023896:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802389a:	4440      	add	r0, r8
 802389c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238a0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80238a4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80238a8:	ea40 000c 	orr.w	r0, r0, ip
 80238ac:	fb15 fc02 	smulbb	ip, r5, r2
 80238b0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80238b4:	f1c5 0810 	rsb	r8, r5, #16
 80238b8:	eba8 0802 	sub.w	r8, r8, r2
 80238bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80238c0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80238c4:	437a      	muls	r2, r7
 80238c6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80238ca:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80238ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80238d6:	fb09 2208 	mla	r2, r9, r8, r2
 80238da:	ea4a 0101 	orr.w	r1, sl, r1
 80238de:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80238e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80238ea:	fb05 2201 	mla	r2, r5, r1, r2
 80238ee:	ea4b 0000 	orr.w	r0, fp, r0
 80238f2:	fb0c 2200 	mla	r2, ip, r0, r2
 80238f6:	0d57      	lsrs	r7, r2, #21
 80238f8:	0952      	lsrs	r2, r2, #5
 80238fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80238fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023902:	433a      	orrs	r2, r7
 8023904:	2bff      	cmp	r3, #255	; 0xff
 8023906:	b292      	uxth	r2, r2
 8023908:	d127      	bne.n	802395a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802390a:	f8ae 2000 	strh.w	r2, [lr]
 802390e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023910:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023912:	4413      	add	r3, r2
 8023914:	931d      	str	r3, [sp, #116]	; 0x74
 8023916:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023918:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802391a:	441a      	add	r2, r3
 802391c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802391e:	921e      	str	r2, [sp, #120]	; 0x78
 8023920:	3b01      	subs	r3, #1
 8023922:	f10e 0e02 	add.w	lr, lr, #2
 8023926:	930f      	str	r3, [sp, #60]	; 0x3c
 8023928:	e627      	b.n	802357a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802392a:	fb08 f000 	mul.w	r0, r8, r0
 802392e:	fb09 0303 	mla	r3, r9, r3, r0
 8023932:	e71b      	b.n	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023934:	46b9      	mov	r9, r7
 8023936:	e743      	b.n	80237c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023938:	f1c2 0110 	rsb	r1, r2, #16
 802393c:	437a      	muls	r2, r7
 802393e:	fb09 2901 	mla	r9, r9, r1, r2
 8023942:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023946:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802394a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802394e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023952:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023956:	4302      	orrs	r2, r0
 8023958:	e7d4      	b.n	8023904 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802395a:	f8be 7000 	ldrh.w	r7, [lr]
 802395e:	4c1c      	ldr	r4, [pc, #112]	; (80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023960:	43db      	mvns	r3, r3
 8023962:	1238      	asrs	r0, r7, #8
 8023964:	fa5f fc83 	uxtb.w	ip, r3
 8023968:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802396c:	10fd      	asrs	r5, r7, #3
 802396e:	fb00 f00c 	mul.w	r0, r0, ip
 8023972:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023976:	fb05 f10c 	mul.w	r1, r5, ip
 802397a:	1c45      	adds	r5, r0, #1
 802397c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023980:	1215      	asrs	r5, r2, #8
 8023982:	f025 0507 	bic.w	r5, r5, #7
 8023986:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802398a:	1c4d      	adds	r5, r1, #1
 802398c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023990:	10d1      	asrs	r1, r2, #3
 8023992:	f021 0103 	bic.w	r1, r1, #3
 8023996:	00fb      	lsls	r3, r7, #3
 8023998:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802399c:	b2db      	uxtb	r3, r3
 802399e:	b2c0      	uxtb	r0, r0
 80239a0:	00c9      	lsls	r1, r1, #3
 80239a2:	fb03 f30c 	mul.w	r3, r3, ip
 80239a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80239aa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80239ae:	4308      	orrs	r0, r1
 80239b0:	1c59      	adds	r1, r3, #1
 80239b2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80239b6:	00d2      	lsls	r2, r2, #3
 80239b8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80239bc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80239c0:	4318      	orrs	r0, r3
 80239c2:	f8ae 0000 	strh.w	r0, [lr]
 80239c6:	e7a2      	b.n	802390e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80239c8:	b013      	add	sp, #76	; 0x4c
 80239ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239ce:	bf00      	nop
 80239d0:	fffff800 	.word	0xfffff800

080239d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80239d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80239d8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80239dc:	fb05 4c03 	mla	ip, r5, r3, r4
 80239e0:	2d00      	cmp	r5, #0
 80239e2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80239e6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80239ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80239ee:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80239f2:	8808      	ldrh	r0, [r1, #0]
 80239f4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80239f8:	f2c0 80a7 	blt.w	8023b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80239fc:	45aa      	cmp	sl, r5
 80239fe:	f340 80a4 	ble.w	8023b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023a02:	2c00      	cmp	r4, #0
 8023a04:	f2c0 809f 	blt.w	8023b46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023a08:	42a3      	cmp	r3, r4
 8023a0a:	f340 809c 	ble.w	8023b46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023a0e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8023a12:	1c62      	adds	r2, r4, #1
 8023a14:	f100 809c 	bmi.w	8023b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023a18:	4293      	cmp	r3, r2
 8023a1a:	f340 8099 	ble.w	8023b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023a1e:	f1b9 0f00 	cmp.w	r9, #0
 8023a22:	f000 8095 	beq.w	8023b50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023a26:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023a2a:	3501      	adds	r5, #1
 8023a2c:	f100 8094 	bmi.w	8023b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023a30:	45aa      	cmp	sl, r5
 8023a32:	f340 8091 	ble.w	8023b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023a36:	2f00      	cmp	r7, #0
 8023a38:	f000 808e 	beq.w	8023b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023a3c:	2c00      	cmp	r4, #0
 8023a3e:	f2c0 8089 	blt.w	8023b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023a42:	42a3      	cmp	r3, r4
 8023a44:	f340 8086 	ble.w	8023b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023a48:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023a4c:	3401      	adds	r4, #1
 8023a4e:	f100 8086 	bmi.w	8023b5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023a52:	42a3      	cmp	r3, r4
 8023a54:	f340 8083 	ble.w	8023b5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023a58:	f1b9 0f00 	cmp.w	r9, #0
 8023a5c:	d07f      	beq.n	8023b5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023a5e:	3301      	adds	r3, #1
 8023a60:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023a64:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023a68:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023a6c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8023a70:	fb19 fe07 	smulbb	lr, r9, r7
 8023a74:	ea44 0808 	orr.w	r8, r4, r8
 8023a78:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023a7c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023a80:	f1c7 0210 	rsb	r2, r7, #16
 8023a84:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023a88:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023a8c:	ea44 0c0c 	orr.w	ip, r4, ip
 8023a90:	eba2 0209 	sub.w	r2, r2, r9
 8023a94:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023a98:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023a9c:	fb04 f40c 	mul.w	r4, r4, ip
 8023aa0:	fb02 4808 	mla	r8, r2, r8, r4
 8023aa4:	041a      	lsls	r2, r3, #16
 8023aa6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023aaa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023aae:	4313      	orrs	r3, r2
 8023ab0:	042a      	lsls	r2, r5, #16
 8023ab2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023ab6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023aba:	fb0e 8303 	mla	r3, lr, r3, r8
 8023abe:	432a      	orrs	r2, r5
 8023ac0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023ac4:	fb07 3202 	mla	r2, r7, r2, r3
 8023ac8:	0d53      	lsrs	r3, r2, #21
 8023aca:	0952      	lsrs	r2, r2, #5
 8023acc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023ad0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ad4:	431a      	orrs	r2, r3
 8023ad6:	b293      	uxth	r3, r2
 8023ad8:	b2b4      	uxth	r4, r6
 8023ada:	1202      	asrs	r2, r0, #8
 8023adc:	43f6      	mvns	r6, r6
 8023ade:	b2f6      	uxtb	r6, r6
 8023ae0:	121d      	asrs	r5, r3, #8
 8023ae2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023ae6:	fb12 f206 	smulbb	r2, r2, r6
 8023aea:	10c7      	asrs	r7, r0, #3
 8023aec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023af0:	00c0      	lsls	r0, r0, #3
 8023af2:	fb05 2504 	mla	r5, r5, r4, r2
 8023af6:	b2c0      	uxtb	r0, r0
 8023af8:	10da      	asrs	r2, r3, #3
 8023afa:	00db      	lsls	r3, r3, #3
 8023afc:	b2db      	uxtb	r3, r3
 8023afe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023b02:	fb10 f006 	smulbb	r0, r0, r6
 8023b06:	b2ad      	uxth	r5, r5
 8023b08:	fb03 0004 	mla	r0, r3, r4, r0
 8023b0c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023b10:	fb17 f706 	smulbb	r7, r7, r6
 8023b14:	b280      	uxth	r0, r0
 8023b16:	1c6b      	adds	r3, r5, #1
 8023b18:	fb02 7204 	mla	r2, r2, r4, r7
 8023b1c:	b292      	uxth	r2, r2
 8023b1e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023b22:	1c43      	adds	r3, r0, #1
 8023b24:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023b28:	1c50      	adds	r0, r2, #1
 8023b2a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8023b2e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023b32:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023b36:	0952      	lsrs	r2, r2, #5
 8023b38:	432b      	orrs	r3, r5
 8023b3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b3e:	4313      	orrs	r3, r2
 8023b40:	800b      	strh	r3, [r1, #0]
 8023b42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023b46:	4680      	mov	r8, r0
 8023b48:	e763      	b.n	8023a12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023b4a:	4684      	mov	ip, r0
 8023b4c:	4680      	mov	r8, r0
 8023b4e:	e76c      	b.n	8023a2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023b50:	4684      	mov	ip, r0
 8023b52:	e76a      	b.n	8023a2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023b54:	4605      	mov	r5, r0
 8023b56:	e779      	b.n	8023a4c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023b58:	4603      	mov	r3, r0
 8023b5a:	4605      	mov	r5, r0
 8023b5c:	e782      	b.n	8023a64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8023b5e:	4603      	mov	r3, r0
 8023b60:	e780      	b.n	8023a64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08023b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023b62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b66:	b093      	sub	sp, #76	; 0x4c
 8023b68:	461d      	mov	r5, r3
 8023b6a:	9210      	str	r2, [sp, #64]	; 0x40
 8023b6c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023b6e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8023b72:	920b      	str	r2, [sp, #44]	; 0x2c
 8023b74:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023b78:	910a      	str	r1, [sp, #40]	; 0x28
 8023b7a:	6859      	ldr	r1, [r3, #4]
 8023b7c:	681b      	ldr	r3, [r3, #0]
 8023b7e:	9011      	str	r0, [sp, #68]	; 0x44
 8023b80:	fb01 2707 	mla	r7, r1, r7, r2
 8023b84:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023b88:	9307      	str	r3, [sp, #28]
 8023b8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b8c:	681b      	ldr	r3, [r3, #0]
 8023b8e:	9309      	str	r3, [sp, #36]	; 0x24
 8023b90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023b92:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023b96:	43db      	mvns	r3, r3
 8023b98:	b2db      	uxtb	r3, r3
 8023b9a:	9308      	str	r3, [sp, #32]
 8023b9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b9e:	2b00      	cmp	r3, #0
 8023ba0:	dc03      	bgt.n	8023baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023ba2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023ba4:	2b00      	cmp	r3, #0
 8023ba6:	f340 8203 	ble.w	8023fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023baa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023bb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023bb4:	1e48      	subs	r0, r1, #1
 8023bb6:	f102 3cff 	add.w	ip, r2, #4294967295
 8023bba:	2d00      	cmp	r5, #0
 8023bbc:	f340 80da 	ble.w	8023d74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8023bc0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023bc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023bc8:	d406      	bmi.n	8023bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023bca:	4586      	cmp	lr, r0
 8023bcc:	da04      	bge.n	8023bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023bce:	2b00      	cmp	r3, #0
 8023bd0:	db02      	blt.n	8023bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023bd2:	4563      	cmp	r3, ip
 8023bd4:	f2c0 80cf 	blt.w	8023d76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023bd8:	f11e 0e01 	adds.w	lr, lr, #1
 8023bdc:	f100 80c1 	bmi.w	8023d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023be0:	4571      	cmp	r1, lr
 8023be2:	f2c0 80be 	blt.w	8023d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023be6:	3301      	adds	r3, #1
 8023be8:	f100 80bb 	bmi.w	8023d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023bec:	429a      	cmp	r2, r3
 8023bee:	f2c0 80b8 	blt.w	8023d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023bf2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023bf6:	46a9      	mov	r9, r5
 8023bf8:	f1b9 0f00 	cmp.w	r9, #0
 8023bfc:	f340 80d8 	ble.w	8023db0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023c00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c02:	1421      	asrs	r1, r4, #16
 8023c04:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023c08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023c0c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023c10:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023c14:	f100 8111 	bmi.w	8023e3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023c18:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023c1c:	4551      	cmp	r1, sl
 8023c1e:	f280 810c 	bge.w	8023e3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023c22:	2800      	cmp	r0, #0
 8023c24:	f2c0 8109 	blt.w	8023e3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023c28:	f103 3aff 	add.w	sl, r3, #4294967295
 8023c2c:	4550      	cmp	r0, sl
 8023c2e:	f280 8104 	bge.w	8023e3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023c32:	fa0f f38e 	sxth.w	r3, lr
 8023c36:	fb00 1103 	mla	r1, r0, r3, r1
 8023c3a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023c3c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023c40:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023c44:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023c48:	f1bc 0f00 	cmp.w	ip, #0
 8023c4c:	d007      	beq.n	8023c5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023c4e:	005b      	lsls	r3, r3, #1
 8023c50:	eb0a 0003 	add.w	r0, sl, r3
 8023c54:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023c58:	930c      	str	r3, [sp, #48]	; 0x30
 8023c5a:	8843      	ldrh	r3, [r0, #2]
 8023c5c:	930d      	str	r3, [sp, #52]	; 0x34
 8023c5e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023c62:	fb12 f30c 	smulbb	r3, r2, ip
 8023c66:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023c6a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023c6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023c72:	10db      	asrs	r3, r3, #3
 8023c74:	ea40 000e 	orr.w	r0, r0, lr
 8023c78:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023c7c:	f1cc 0e10 	rsb	lr, ip, #16
 8023c80:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023c84:	ebae 0e02 	sub.w	lr, lr, r2
 8023c88:	ea4a 0101 	orr.w	r1, sl, r1
 8023c8c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023c90:	4351      	muls	r1, r2
 8023c92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023c94:	9f08      	ldr	r7, [sp, #32]
 8023c96:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023c9a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023c9e:	0410      	lsls	r0, r2, #16
 8023ca0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023ca4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ca8:	4310      	orrs	r0, r2
 8023caa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023cac:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023cae:	0412      	lsls	r2, r2, #16
 8023cb0:	fb03 e000 	mla	r0, r3, r0, lr
 8023cb4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023cb8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023cbc:	ea42 020e 	orr.w	r2, r2, lr
 8023cc0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023cc4:	fb03 0302 	mla	r3, r3, r2, r0
 8023cc8:	0d5a      	lsrs	r2, r3, #21
 8023cca:	095b      	lsrs	r3, r3, #5
 8023ccc:	f8b8 0000 	ldrh.w	r0, [r8]
 8023cd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023cd4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023cd8:	4313      	orrs	r3, r2
 8023cda:	b29b      	uxth	r3, r3
 8023cdc:	1201      	asrs	r1, r0, #8
 8023cde:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8023ce2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023ce6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023cea:	fb11 f107 	smulbb	r1, r1, r7
 8023cee:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8023cf2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023cf6:	00c0      	lsls	r0, r0, #3
 8023cf8:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023cfc:	b2c0      	uxtb	r0, r0
 8023cfe:	10d9      	asrs	r1, r3, #3
 8023d00:	00db      	lsls	r3, r3, #3
 8023d02:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023d06:	b2db      	uxtb	r3, r3
 8023d08:	fb10 f007 	smulbb	r0, r0, r7
 8023d0c:	fa1f fc8c 	uxth.w	ip, ip
 8023d10:	fb03 0302 	mla	r3, r3, r2, r0
 8023d14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023d18:	fb1e fe07 	smulbb	lr, lr, r7
 8023d1c:	fb01 e102 	mla	r1, r1, r2, lr
 8023d20:	b29a      	uxth	r2, r3
 8023d22:	f10c 0301 	add.w	r3, ip, #1
 8023d26:	b289      	uxth	r1, r1
 8023d28:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023d2c:	1c53      	adds	r3, r2, #1
 8023d2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023d32:	1c4a      	adds	r2, r1, #1
 8023d34:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023d38:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023d3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023d40:	0949      	lsrs	r1, r1, #5
 8023d42:	ea43 030c 	orr.w	r3, r3, ip
 8023d46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023d4a:	430b      	orrs	r3, r1
 8023d4c:	f8a8 3000 	strh.w	r3, [r8]
 8023d50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d52:	441c      	add	r4, r3
 8023d54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d56:	f108 0802 	add.w	r8, r8, #2
 8023d5a:	441e      	add	r6, r3
 8023d5c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023d60:	e74a      	b.n	8023bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023d62:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023d64:	441c      	add	r4, r3
 8023d66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d68:	441e      	add	r6, r3
 8023d6a:	9b07      	ldr	r3, [sp, #28]
 8023d6c:	3302      	adds	r3, #2
 8023d6e:	3d01      	subs	r5, #1
 8023d70:	9307      	str	r3, [sp, #28]
 8023d72:	e722      	b.n	8023bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023d74:	d022      	beq.n	8023dbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023d76:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023d78:	1e6b      	subs	r3, r5, #1
 8023d7a:	fb00 4003 	mla	r0, r0, r3, r4
 8023d7e:	1400      	asrs	r0, r0, #16
 8023d80:	f53f af37 	bmi.w	8023bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d84:	3901      	subs	r1, #1
 8023d86:	4288      	cmp	r0, r1
 8023d88:	f6bf af33 	bge.w	8023bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d8c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023d8e:	fb01 6303 	mla	r3, r1, r3, r6
 8023d92:	141b      	asrs	r3, r3, #16
 8023d94:	f53f af2d 	bmi.w	8023bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023d98:	3a01      	subs	r2, #1
 8023d9a:	4293      	cmp	r3, r2
 8023d9c:	f6bf af29 	bge.w	8023bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023da0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023da4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023da8:	46a8      	mov	r8, r5
 8023daa:	f1b8 0f00 	cmp.w	r8, #0
 8023dae:	dc5e      	bgt.n	8023e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023db0:	9b07      	ldr	r3, [sp, #28]
 8023db2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023db6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023dba:	9307      	str	r3, [sp, #28]
 8023dbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023dbe:	2b00      	cmp	r3, #0
 8023dc0:	f340 80f6 	ble.w	8023fb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023dc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023dc8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023dcc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023dd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023dd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023dd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023dda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023dde:	eef0 6a62 	vmov.f32	s13, s5
 8023de2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023de6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023dea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023dee:	ee16 4a90 	vmov	r4, s13
 8023df2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023df6:	eef0 6a43 	vmov.f32	s13, s6
 8023dfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023dfe:	ee12 2a90 	vmov	r2, s5
 8023e02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023e06:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e0a:	ee13 2a10 	vmov	r2, s6
 8023e0e:	931f      	str	r3, [sp, #124]	; 0x7c
 8023e10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e16:	9320      	str	r3, [sp, #128]	; 0x80
 8023e18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023e1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023e1c:	3b01      	subs	r3, #1
 8023e1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e22:	930a      	str	r3, [sp, #40]	; 0x28
 8023e24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023e26:	ee16 6a90 	vmov	r6, s13
 8023e2a:	bf14      	ite	ne
 8023e2c:	461d      	movne	r5, r3
 8023e2e:	4615      	moveq	r5, r2
 8023e30:	eeb0 3a67 	vmov.f32	s6, s15
 8023e34:	eef0 2a47 	vmov.f32	s5, s14
 8023e38:	e6b0      	b.n	8023b9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023e3a:	f111 0a01 	adds.w	sl, r1, #1
 8023e3e:	d487      	bmi.n	8023d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023e40:	45d6      	cmp	lr, sl
 8023e42:	db85      	blt.n	8023d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023e44:	f110 0a01 	adds.w	sl, r0, #1
 8023e48:	d482      	bmi.n	8023d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023e4a:	4553      	cmp	r3, sl
 8023e4c:	db80      	blt.n	8023d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023e4e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023e50:	9101      	str	r1, [sp, #4]
 8023e52:	b21b      	sxth	r3, r3
 8023e54:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023e58:	9300      	str	r3, [sp, #0]
 8023e5a:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023e5e:	fa0f f38e 	sxth.w	r3, lr
 8023e62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023e64:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023e66:	4641      	mov	r1, r8
 8023e68:	f7ff fdb4 	bl	80239d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023e6c:	e770      	b.n	8023d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023e6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023e70:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023e72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023e76:	1430      	asrs	r0, r6, #16
 8023e78:	1423      	asrs	r3, r4, #16
 8023e7a:	fb01 3000 	mla	r0, r1, r0, r3
 8023e7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023e80:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023e84:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023e88:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023e8c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023e90:	8858      	ldrh	r0, [r3, #2]
 8023e92:	f1be 0f00 	cmp.w	lr, #0
 8023e96:	d00b      	beq.n	8023eb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023e98:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023e9c:	3901      	subs	r1, #1
 8023e9e:	0049      	lsls	r1, r1, #1
 8023ea0:	3102      	adds	r1, #2
 8023ea2:	eb03 0b01 	add.w	fp, r3, r1
 8023ea6:	5a5b      	ldrh	r3, [r3, r1]
 8023ea8:	930e      	str	r3, [sp, #56]	; 0x38
 8023eaa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023eae:	930f      	str	r3, [sp, #60]	; 0x3c
 8023eb0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023eb4:	fb12 f30e 	smulbb	r3, r2, lr
 8023eb8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023ebc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023ec0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023ec4:	10db      	asrs	r3, r3, #3
 8023ec6:	ea41 010c 	orr.w	r1, r1, ip
 8023eca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023ece:	f1ce 0c10 	rsb	ip, lr, #16
 8023ed2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023ed6:	ebac 0c02 	sub.w	ip, ip, r2
 8023eda:	ea4b 0000 	orr.w	r0, fp, r0
 8023ede:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023ee2:	4350      	muls	r0, r2
 8023ee4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023ee6:	9f08      	ldr	r7, [sp, #32]
 8023ee8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023eec:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023ef0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023ef4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023ef8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023efa:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023efc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023f00:	0412      	lsls	r2, r2, #16
 8023f02:	ea4b 0101 	orr.w	r1, fp, r1
 8023f06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023f0a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023f0e:	fb03 c101 	mla	r1, r3, r1, ip
 8023f12:	4302      	orrs	r2, r0
 8023f14:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023f18:	fb03 1202 	mla	r2, r3, r2, r1
 8023f1c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023f20:	0952      	lsrs	r2, r2, #5
 8023f22:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023f26:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023f2a:	f8b9 2000 	ldrh.w	r2, [r9]
 8023f2e:	ea4b 0303 	orr.w	r3, fp, r3
 8023f32:	b29b      	uxth	r3, r3
 8023f34:	1211      	asrs	r1, r2, #8
 8023f36:	1218      	asrs	r0, r3, #8
 8023f38:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023f3c:	fb11 f107 	smulbb	r1, r1, r7
 8023f40:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023f44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023f48:	00d2      	lsls	r2, r2, #3
 8023f4a:	fb00 100a 	mla	r0, r0, sl, r1
 8023f4e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023f52:	10d9      	asrs	r1, r3, #3
 8023f54:	b2d2      	uxtb	r2, r2
 8023f56:	00db      	lsls	r3, r3, #3
 8023f58:	fb1c fc07 	smulbb	ip, ip, r7
 8023f5c:	fb12 f207 	smulbb	r2, r2, r7
 8023f60:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023f64:	b2db      	uxtb	r3, r3
 8023f66:	b280      	uxth	r0, r0
 8023f68:	fb01 c10a 	mla	r1, r1, sl, ip
 8023f6c:	fb03 230a 	mla	r3, r3, sl, r2
 8023f70:	b29b      	uxth	r3, r3
 8023f72:	b289      	uxth	r1, r1
 8023f74:	1c42      	adds	r2, r0, #1
 8023f76:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023f7a:	f101 0c01 	add.w	ip, r1, #1
 8023f7e:	1c5a      	adds	r2, r3, #1
 8023f80:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023f84:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023f88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023f8a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023f8e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023f92:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023f96:	4310      	orrs	r0, r2
 8023f98:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023f9c:	441c      	add	r4, r3
 8023f9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fa0:	ea40 000c 	orr.w	r0, r0, ip
 8023fa4:	f829 0b02 	strh.w	r0, [r9], #2
 8023fa8:	441e      	add	r6, r3
 8023faa:	f108 38ff 	add.w	r8, r8, #4294967295
 8023fae:	e6fc      	b.n	8023daa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023fb0:	b013      	add	sp, #76	; 0x4c
 8023fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023fb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023fb6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023fba:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023fbe:	fb0e 4703 	mla	r7, lr, r3, r4
 8023fc2:	f1be 0f00 	cmp.w	lr, #0
 8023fc6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023fca:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023fce:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023fd2:	8808      	ldrh	r0, [r1, #0]
 8023fd4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023fd8:	db60      	blt.n	802409c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023fda:	45f1      	cmp	r9, lr
 8023fdc:	dd5e      	ble.n	802409c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023fde:	2c00      	cmp	r4, #0
 8023fe0:	db5a      	blt.n	8024098 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023fe2:	42a3      	cmp	r3, r4
 8023fe4:	dd58      	ble.n	8024098 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023fe6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023fea:	1c62      	adds	r2, r4, #1
 8023fec:	d459      	bmi.n	80240a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023fee:	4293      	cmp	r3, r2
 8023ff0:	dd57      	ble.n	80240a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023ff2:	2d00      	cmp	r5, #0
 8023ff4:	d055      	beq.n	80240a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023ff6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023ffa:	f11e 0e01 	adds.w	lr, lr, #1
 8023ffe:	d454      	bmi.n	80240aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024000:	45f1      	cmp	r9, lr
 8024002:	dd52      	ble.n	80240aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024004:	2e00      	cmp	r6, #0
 8024006:	d050      	beq.n	80240aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024008:	2c00      	cmp	r4, #0
 802400a:	db4c      	blt.n	80240a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802400c:	42a3      	cmp	r3, r4
 802400e:	dd4a      	ble.n	80240a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024010:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024014:	3401      	adds	r4, #1
 8024016:	d405      	bmi.n	8024024 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024018:	42a3      	cmp	r3, r4
 802401a:	dd03      	ble.n	8024024 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802401c:	b115      	cbz	r5, 8024024 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802401e:	3301      	adds	r3, #1
 8024020:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024024:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024028:	fb15 f406 	smulbb	r4, r5, r6
 802402c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024030:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024034:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024038:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802403c:	ea43 0c0c 	orr.w	ip, r3, ip
 8024040:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024044:	f1c6 0310 	rsb	r3, r6, #16
 8024048:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802404c:	1b5b      	subs	r3, r3, r5
 802404e:	ea4e 0707 	orr.w	r7, lr, r7
 8024052:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024056:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802405a:	437d      	muls	r5, r7
 802405c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024060:	0403      	lsls	r3, r0, #16
 8024062:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024066:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802406a:	4318      	orrs	r0, r3
 802406c:	0413      	lsls	r3, r2, #16
 802406e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024072:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024076:	4313      	orrs	r3, r2
 8024078:	fb04 c000 	mla	r0, r4, r0, ip
 802407c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024080:	fb06 0003 	mla	r0, r6, r3, r0
 8024084:	0d43      	lsrs	r3, r0, #21
 8024086:	0940      	lsrs	r0, r0, #5
 8024088:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802408c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024090:	4318      	orrs	r0, r3
 8024092:	8008      	strh	r0, [r1, #0]
 8024094:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024098:	4684      	mov	ip, r0
 802409a:	e7a6      	b.n	8023fea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 802409c:	4607      	mov	r7, r0
 802409e:	4684      	mov	ip, r0
 80240a0:	e7ab      	b.n	8023ffa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80240a2:	4607      	mov	r7, r0
 80240a4:	e7a9      	b.n	8023ffa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80240a6:	4602      	mov	r2, r0
 80240a8:	e7b4      	b.n	8024014 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80240aa:	4602      	mov	r2, r0
 80240ac:	e7ba      	b.n	8024024 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080240ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240b2:	b08f      	sub	sp, #60	; 0x3c
 80240b4:	461d      	mov	r5, r3
 80240b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80240b8:	920c      	str	r2, [sp, #48]	; 0x30
 80240ba:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80240be:	9107      	str	r1, [sp, #28]
 80240c0:	6859      	ldr	r1, [r3, #4]
 80240c2:	681b      	ldr	r3, [r3, #0]
 80240c4:	900d      	str	r0, [sp, #52]	; 0x34
 80240c6:	fb01 2707 	mla	r7, r1, r7, r2
 80240ca:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80240ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80240d0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80240d4:	f8d3 8000 	ldr.w	r8, [r3]
 80240d8:	9b07      	ldr	r3, [sp, #28]
 80240da:	2b00      	cmp	r3, #0
 80240dc:	dc03      	bgt.n	80240e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80240de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80240e0:	2b00      	cmp	r3, #0
 80240e2:	f340 8181 	ble.w	80243e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80240e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80240e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80240f0:	1e48      	subs	r0, r1, #1
 80240f2:	f102 3cff 	add.w	ip, r2, #4294967295
 80240f6:	2d00      	cmp	r5, #0
 80240f8:	f340 809b 	ble.w	8024232 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80240fc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024100:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024104:	d406      	bmi.n	8024114 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024106:	4586      	cmp	lr, r0
 8024108:	da04      	bge.n	8024114 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802410a:	2b00      	cmp	r3, #0
 802410c:	db02      	blt.n	8024114 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802410e:	4563      	cmp	r3, ip
 8024110:	f2c0 8090 	blt.w	8024234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024114:	f11e 0e01 	adds.w	lr, lr, #1
 8024118:	f100 8084 	bmi.w	8024224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802411c:	4571      	cmp	r1, lr
 802411e:	f2c0 8081 	blt.w	8024224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024122:	3301      	adds	r3, #1
 8024124:	d47e      	bmi.n	8024224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024126:	429a      	cmp	r2, r3
 8024128:	db7c      	blt.n	8024224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802412a:	46aa      	mov	sl, r5
 802412c:	46b9      	mov	r9, r7
 802412e:	f1ba 0f00 	cmp.w	sl, #0
 8024132:	f340 8099 	ble.w	8024268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024136:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024138:	1421      	asrs	r1, r4, #16
 802413a:	ea4f 4026 	mov.w	r0, r6, asr #16
 802413e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024142:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024146:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802414a:	f100 80d0 	bmi.w	80242ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802414e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024152:	4559      	cmp	r1, fp
 8024154:	f280 80cb 	bge.w	80242ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024158:	2800      	cmp	r0, #0
 802415a:	f2c0 80c8 	blt.w	80242ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802415e:	f103 3bff 	add.w	fp, r3, #4294967295
 8024162:	4558      	cmp	r0, fp
 8024164:	f280 80c3 	bge.w	80242ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024168:	fa0f fe8e 	sxth.w	lr, lr
 802416c:	fb00 110e 	mla	r1, r0, lr, r1
 8024170:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024174:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024178:	8841      	ldrh	r1, [r0, #2]
 802417a:	f1bc 0f00 	cmp.w	ip, #0
 802417e:	d00b      	beq.n	8024198 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024180:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024184:	3b01      	subs	r3, #1
 8024186:	005b      	lsls	r3, r3, #1
 8024188:	3302      	adds	r3, #2
 802418a:	eb00 0e03 	add.w	lr, r0, r3
 802418e:	5ac3      	ldrh	r3, [r0, r3]
 8024190:	9308      	str	r3, [sp, #32]
 8024192:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024196:	9309      	str	r3, [sp, #36]	; 0x24
 8024198:	ea4f 400b 	mov.w	r0, fp, lsl #16
 802419c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80241a0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80241a4:	ea40 000b 	orr.w	r0, r0, fp
 80241a8:	fb12 f30c 	smulbb	r3, r2, ip
 80241ac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80241b0:	10db      	asrs	r3, r3, #3
 80241b2:	f1cc 0e10 	rsb	lr, ip, #16
 80241b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80241ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80241be:	ebae 0e02 	sub.w	lr, lr, r2
 80241c2:	ea4b 0101 	orr.w	r1, fp, r1
 80241c6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80241ca:	4351      	muls	r1, r2
 80241cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80241ce:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80241d2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80241d6:	0410      	lsls	r0, r2, #16
 80241d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80241dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80241e0:	4310      	orrs	r0, r2
 80241e2:	9a08      	ldr	r2, [sp, #32]
 80241e4:	9908      	ldr	r1, [sp, #32]
 80241e6:	0412      	lsls	r2, r2, #16
 80241e8:	fb03 e000 	mla	r0, r3, r0, lr
 80241ec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80241f0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80241f4:	ea42 020e 	orr.w	r2, r2, lr
 80241f8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80241fc:	fb03 0302 	mla	r3, r3, r2, r0
 8024200:	0d5a      	lsrs	r2, r3, #21
 8024202:	095b      	lsrs	r3, r3, #5
 8024204:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024208:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802420c:	4313      	orrs	r3, r2
 802420e:	f8a9 3000 	strh.w	r3, [r9]
 8024212:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024214:	441c      	add	r4, r3
 8024216:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024218:	f109 0902 	add.w	r9, r9, #2
 802421c:	441e      	add	r6, r3
 802421e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024222:	e784      	b.n	802412e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024224:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024226:	441c      	add	r4, r3
 8024228:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802422a:	3d01      	subs	r5, #1
 802422c:	441e      	add	r6, r3
 802422e:	3702      	adds	r7, #2
 8024230:	e761      	b.n	80240f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024232:	d01d      	beq.n	8024270 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024234:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024236:	1e6b      	subs	r3, r5, #1
 8024238:	fb00 4003 	mla	r0, r0, r3, r4
 802423c:	1400      	asrs	r0, r0, #16
 802423e:	f53f af74 	bmi.w	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024242:	3901      	subs	r1, #1
 8024244:	4288      	cmp	r0, r1
 8024246:	f6bf af70 	bge.w	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802424a:	991c      	ldr	r1, [sp, #112]	; 0x70
 802424c:	fb01 6303 	mla	r3, r1, r3, r6
 8024250:	141b      	asrs	r3, r3, #16
 8024252:	f53f af6a 	bmi.w	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024256:	3a01      	subs	r2, #1
 8024258:	4293      	cmp	r3, r2
 802425a:	f6bf af66 	bge.w	802412a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802425e:	46a9      	mov	r9, r5
 8024260:	46ba      	mov	sl, r7
 8024262:	f1b9 0f00 	cmp.w	r9, #0
 8024266:	dc5a      	bgt.n	802431e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024268:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802426c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024270:	9b07      	ldr	r3, [sp, #28]
 8024272:	2b00      	cmp	r3, #0
 8024274:	f340 80b8 	ble.w	80243e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024278:	ee30 0a04 	vadd.f32	s0, s0, s8
 802427c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024280:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024284:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024286:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802428a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802428e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024292:	eef0 6a62 	vmov.f32	s13, s5
 8024296:	ee61 7a27 	vmul.f32	s15, s2, s15
 802429a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802429e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80242a2:	ee16 4a90 	vmov	r4, s13
 80242a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80242aa:	eef0 6a43 	vmov.f32	s13, s6
 80242ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80242b2:	ee12 2a90 	vmov	r2, s5
 80242b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80242ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80242be:	ee13 2a10 	vmov	r2, s6
 80242c2:	931b      	str	r3, [sp, #108]	; 0x6c
 80242c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80242c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80242ca:	931c      	str	r3, [sp, #112]	; 0x70
 80242cc:	9b07      	ldr	r3, [sp, #28]
 80242ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80242d0:	3b01      	subs	r3, #1
 80242d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242d6:	9307      	str	r3, [sp, #28]
 80242d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80242da:	ee16 6a90 	vmov	r6, s13
 80242de:	bf14      	ite	ne
 80242e0:	461d      	movne	r5, r3
 80242e2:	4615      	moveq	r5, r2
 80242e4:	eeb0 3a67 	vmov.f32	s6, s15
 80242e8:	eef0 2a47 	vmov.f32	s5, s14
 80242ec:	e6f4      	b.n	80240d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80242ee:	f111 0b01 	adds.w	fp, r1, #1
 80242f2:	d48e      	bmi.n	8024212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80242f4:	45de      	cmp	lr, fp
 80242f6:	db8c      	blt.n	8024212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80242f8:	f110 0b01 	adds.w	fp, r0, #1
 80242fc:	d489      	bmi.n	8024212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80242fe:	455b      	cmp	r3, fp
 8024300:	db87      	blt.n	8024212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024302:	b21b      	sxth	r3, r3
 8024304:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024308:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802430c:	9300      	str	r3, [sp, #0]
 802430e:	4642      	mov	r2, r8
 8024310:	fa0f f38e 	sxth.w	r3, lr
 8024314:	4649      	mov	r1, r9
 8024316:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024318:	f7ff fe4d 	bl	8023fb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802431c:	e779      	b.n	8024212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802431e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024320:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024324:	1420      	asrs	r0, r4, #16
 8024326:	1431      	asrs	r1, r6, #16
 8024328:	fb03 0101 	mla	r1, r3, r1, r0
 802432c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024330:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024334:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024338:	8841      	ldrh	r1, [r0, #2]
 802433a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802433e:	f1be 0f00 	cmp.w	lr, #0
 8024342:	d00b      	beq.n	802435c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024344:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024348:	3b01      	subs	r3, #1
 802434a:	005b      	lsls	r3, r3, #1
 802434c:	3302      	adds	r3, #2
 802434e:	eb00 0b03 	add.w	fp, r0, r3
 8024352:	5ac3      	ldrh	r3, [r0, r3]
 8024354:	930a      	str	r3, [sp, #40]	; 0x28
 8024356:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802435a:	930b      	str	r3, [sp, #44]	; 0x2c
 802435c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024360:	fb12 f30e 	smulbb	r3, r2, lr
 8024364:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024368:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802436c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024370:	10db      	asrs	r3, r3, #3
 8024372:	ea40 000c 	orr.w	r0, r0, ip
 8024376:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802437a:	f1ce 0c10 	rsb	ip, lr, #16
 802437e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024382:	ebac 0c02 	sub.w	ip, ip, r2
 8024386:	ea4b 0101 	orr.w	r1, fp, r1
 802438a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802438e:	4351      	muls	r1, r2
 8024390:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024392:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024396:	fb0c 1c00 	mla	ip, ip, r0, r1
 802439a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802439e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80243a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80243a4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80243a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80243aa:	0412      	lsls	r2, r2, #16
 80243ac:	ea4b 0000 	orr.w	r0, fp, r0
 80243b0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80243b4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80243b8:	fb03 c000 	mla	r0, r3, r0, ip
 80243bc:	ea42 0b0b 	orr.w	fp, r2, fp
 80243c0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80243c4:	fb03 000b 	mla	r0, r3, fp, r0
 80243c8:	0d43      	lsrs	r3, r0, #21
 80243ca:	0940      	lsrs	r0, r0, #5
 80243cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80243d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80243d4:	4318      	orrs	r0, r3
 80243d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80243d8:	f82a 0b02 	strh.w	r0, [sl], #2
 80243dc:	441c      	add	r4, r3
 80243de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80243e0:	f109 39ff 	add.w	r9, r9, #4294967295
 80243e4:	441e      	add	r6, r3
 80243e6:	e73c      	b.n	8024262 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80243e8:	b00f      	add	sp, #60	; 0x3c
 80243ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080243ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80243ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80243f2:	b085      	sub	sp, #20
 80243f4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80243f8:	9102      	str	r1, [sp, #8]
 80243fa:	2c00      	cmp	r4, #0
 80243fc:	fb04 7103 	mla	r1, r4, r3, r7
 8024400:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024404:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024408:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802440c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024410:	f2c0 811b 	blt.w	802464a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024414:	45a6      	cmp	lr, r4
 8024416:	f340 8118 	ble.w	802464a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802441a:	2f00      	cmp	r7, #0
 802441c:	f2c0 8113 	blt.w	8024646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024420:	42bb      	cmp	r3, r7
 8024422:	f340 8110 	ble.w	8024646 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024426:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802442a:	1c7a      	adds	r2, r7, #1
 802442c:	f100 8110 	bmi.w	8024650 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024430:	4293      	cmp	r3, r2
 8024432:	f340 810d 	ble.w	8024650 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024436:	2e00      	cmp	r6, #0
 8024438:	f000 810c 	beq.w	8024654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802443c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024440:	3401      	adds	r4, #1
 8024442:	f100 810b 	bmi.w	802465c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024446:	45a6      	cmp	lr, r4
 8024448:	f340 8108 	ble.w	802465c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802444c:	2800      	cmp	r0, #0
 802444e:	f000 8108 	beq.w	8024662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024452:	2f00      	cmp	r7, #0
 8024454:	f2c0 8100 	blt.w	8024658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024458:	42bb      	cmp	r3, r7
 802445a:	f340 80fd 	ble.w	8024658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802445e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024462:	3701      	adds	r7, #1
 8024464:	f100 8100 	bmi.w	8024668 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024468:	42bb      	cmp	r3, r7
 802446a:	f340 80fd 	ble.w	8024668 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802446e:	2e00      	cmp	r6, #0
 8024470:	f000 80fc 	beq.w	802466c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024474:	3301      	adds	r3, #1
 8024476:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802447a:	b2b6      	uxth	r6, r6
 802447c:	b280      	uxth	r0, r0
 802447e:	fb00 fe06 	mul.w	lr, r0, r6
 8024482:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024486:	0136      	lsls	r6, r6, #4
 8024488:	eba6 070e 	sub.w	r7, r6, lr
 802448c:	b280      	uxth	r0, r0
 802448e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024492:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024496:	b2bf      	uxth	r7, r7
 8024498:	1a1b      	subs	r3, r3, r0
 802449a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802449e:	b29b      	uxth	r3, r3
 80244a0:	fb0a f607 	mul.w	r6, sl, r7
 80244a4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80244a8:	fb0b 6603 	mla	r6, fp, r3, r6
 80244ac:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80244b0:	fb00 6609 	mla	r6, r0, r9, r6
 80244b4:	fb0e 6608 	mla	r6, lr, r8, r6
 80244b8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80244bc:	9600      	str	r6, [sp, #0]
 80244be:	2e00      	cmp	r6, #0
 80244c0:	f000 80be 	beq.w	8024640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80244c4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80244c8:	fb0b fc0c 	mul.w	ip, fp, ip
 80244cc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80244d0:	fb0b f505 	mul.w	r5, fp, r5
 80244d4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80244d8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80244dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80244e0:	44dc      	add	ip, fp
 80244e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244e6:	9501      	str	r5, [sp, #4]
 80244e8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80244ec:	9503      	str	r5, [sp, #12]
 80244ee:	9d01      	ldr	r5, [sp, #4]
 80244f0:	9e02      	ldr	r6, [sp, #8]
 80244f2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80244f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80244fa:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80244fe:	fb0a fc0c 	mul.w	ip, sl, ip
 8024502:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024506:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802450a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802450e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024512:	4465      	add	r5, ip
 8024514:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024518:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802451c:	fb09 fc0c 	mul.w	ip, r9, ip
 8024520:	fb09 f904 	mul.w	r9, r9, r4
 8024524:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024528:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802452c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024530:	fb08 f404 	mul.w	r4, r8, r4
 8024534:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024538:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802453c:	fb08 f802 	mul.w	r8, r8, r2
 8024540:	fb0a fa01 	mul.w	sl, sl, r1
 8024544:	0a22      	lsrs	r2, r4, #8
 8024546:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802454a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802454e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024552:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024556:	4414      	add	r4, r2
 8024558:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802455c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024560:	0a2d      	lsrs	r5, r5, #8
 8024562:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024566:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802456a:	9a03      	ldr	r2, [sp, #12]
 802456c:	8836      	ldrh	r6, [r6, #0]
 802456e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024572:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024576:	437d      	muls	r5, r7
 8024578:	4461      	add	r1, ip
 802457a:	0a24      	lsrs	r4, r4, #8
 802457c:	fb02 5503 	mla	r5, r2, r3, r5
 8024580:	0a09      	lsrs	r1, r1, #8
 8024582:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024586:	fb04 540e 	mla	r4, r4, lr, r5
 802458a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802458e:	fb01 4100 	mla	r1, r1, r0, r4
 8024592:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024596:	0a09      	lsrs	r1, r1, #8
 8024598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802459c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80245a0:	fb07 f70a 	mul.w	r7, r7, sl
 80245a4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80245a8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80245ac:	fb03 7101 	mla	r1, r3, r1, r7
 80245b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80245b4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80245b8:	fb0e 1e08 	mla	lr, lr, r8, r1
 80245bc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80245c0:	fb00 e101 	mla	r1, r0, r1, lr
 80245c4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80245c8:	9a00      	ldr	r2, [sp, #0]
 80245ca:	b287      	uxth	r7, r0
 80245cc:	437a      	muls	r2, r7
 80245ce:	0a09      	lsrs	r1, r1, #8
 80245d0:	1c53      	adds	r3, r2, #1
 80245d2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80245d6:	4321      	orrs	r1, r4
 80245d8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80245dc:	1235      	asrs	r5, r6, #8
 80245de:	0c0a      	lsrs	r2, r1, #16
 80245e0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80245e4:	b2db      	uxtb	r3, r3
 80245e6:	fb12 f207 	smulbb	r2, r2, r7
 80245ea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80245ee:	fb05 2503 	mla	r5, r5, r3, r2
 80245f2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80245f6:	10f2      	asrs	r2, r6, #3
 80245f8:	b2c8      	uxtb	r0, r1
 80245fa:	00f6      	lsls	r6, r6, #3
 80245fc:	fb14 f407 	smulbb	r4, r4, r7
 8024600:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024604:	b2f6      	uxtb	r6, r6
 8024606:	fb10 f007 	smulbb	r0, r0, r7
 802460a:	fb02 4203 	mla	r2, r2, r3, r4
 802460e:	b2ad      	uxth	r5, r5
 8024610:	fb06 0303 	mla	r3, r6, r3, r0
 8024614:	b299      	uxth	r1, r3
 8024616:	b294      	uxth	r4, r2
 8024618:	1c6b      	adds	r3, r5, #1
 802461a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802461e:	1c62      	adds	r2, r4, #1
 8024620:	1c4b      	adds	r3, r1, #1
 8024622:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024626:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802462a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802462e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024632:	0952      	lsrs	r2, r2, #5
 8024634:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024638:	432b      	orrs	r3, r5
 802463a:	4313      	orrs	r3, r2
 802463c:	9a02      	ldr	r2, [sp, #8]
 802463e:	8013      	strh	r3, [r2, #0]
 8024640:	b005      	add	sp, #20
 8024642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024646:	2500      	movs	r5, #0
 8024648:	e6ef      	b.n	802442a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802464a:	2100      	movs	r1, #0
 802464c:	460d      	mov	r5, r1
 802464e:	e6f7      	b.n	8024440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024650:	2100      	movs	r1, #0
 8024652:	e6f5      	b.n	8024440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024654:	4631      	mov	r1, r6
 8024656:	e6f3      	b.n	8024440 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024658:	2400      	movs	r4, #0
 802465a:	e702      	b.n	8024462 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 802465c:	2200      	movs	r2, #0
 802465e:	4614      	mov	r4, r2
 8024660:	e70b      	b.n	802447a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024662:	4602      	mov	r2, r0
 8024664:	4604      	mov	r4, r0
 8024666:	e708      	b.n	802447a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024668:	2200      	movs	r2, #0
 802466a:	e706      	b.n	802447a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802466c:	4632      	mov	r2, r6
 802466e:	e704      	b.n	802447a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024674:	b09d      	sub	sp, #116	; 0x74
 8024676:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802467a:	9219      	str	r2, [sp, #100]	; 0x64
 802467c:	9307      	str	r3, [sp, #28]
 802467e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8024680:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024684:	931a      	str	r3, [sp, #104]	; 0x68
 8024686:	9117      	str	r1, [sp, #92]	; 0x5c
 8024688:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 802468c:	901b      	str	r0, [sp, #108]	; 0x6c
 802468e:	6850      	ldr	r0, [r2, #4]
 8024690:	6812      	ldr	r2, [r2, #0]
 8024692:	fb00 1303 	mla	r3, r0, r3, r1
 8024696:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802469a:	930a      	str	r3, [sp, #40]	; 0x28
 802469c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802469e:	681b      	ldr	r3, [r3, #0]
 80246a0:	9310      	str	r3, [sp, #64]	; 0x40
 80246a2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80246a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80246a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80246aa:	2b00      	cmp	r3, #0
 80246ac:	dc03      	bgt.n	80246b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80246ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80246b0:	2b00      	cmp	r3, #0
 80246b2:	f340 8375 	ble.w	8024da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80246b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80246b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80246bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80246c0:	1e48      	subs	r0, r1, #1
 80246c2:	1e57      	subs	r7, r2, #1
 80246c4:	9b07      	ldr	r3, [sp, #28]
 80246c6:	2b00      	cmp	r3, #0
 80246c8:	f340 818e 	ble.w	80249e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80246cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80246d0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80246d4:	d406      	bmi.n	80246e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80246d6:	4584      	cmp	ip, r0
 80246d8:	da04      	bge.n	80246e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80246da:	2b00      	cmp	r3, #0
 80246dc:	db02      	blt.n	80246e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80246de:	42bb      	cmp	r3, r7
 80246e0:	f2c0 8183 	blt.w	80249ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80246e4:	f11c 0c01 	adds.w	ip, ip, #1
 80246e8:	f100 8173 	bmi.w	80249d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80246ec:	4561      	cmp	r1, ip
 80246ee:	f2c0 8170 	blt.w	80249d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80246f2:	3301      	adds	r3, #1
 80246f4:	f100 816d 	bmi.w	80249d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80246f8:	429a      	cmp	r2, r3
 80246fa:	f2c0 816a 	blt.w	80249d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80246fe:	9b07      	ldr	r3, [sp, #28]
 8024700:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024702:	9318      	str	r3, [sp, #96]	; 0x60
 8024704:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024706:	2b00      	cmp	r3, #0
 8024708:	f340 818c 	ble.w	8024a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802470c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802470e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024710:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024714:	689b      	ldr	r3, [r3, #8]
 8024716:	1422      	asrs	r2, r4, #16
 8024718:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802471c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024720:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024724:	f100 81cd 	bmi.w	8024ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024728:	f103 38ff 	add.w	r8, r3, #4294967295
 802472c:	4542      	cmp	r2, r8
 802472e:	f280 81c8 	bge.w	8024ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024732:	f1bc 0f00 	cmp.w	ip, #0
 8024736:	f2c0 81c4 	blt.w	8024ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802473a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802473e:	45c4      	cmp	ip, r8
 8024740:	f280 81bf 	bge.w	8024ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024744:	b21b      	sxth	r3, r3
 8024746:	fb0c 2203 	mla	r2, ip, r3, r2
 802474a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802474c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024750:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024754:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024758:	2800      	cmp	r0, #0
 802475a:	f000 81a9 	beq.w	8024ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802475e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024762:	950c      	str	r5, [sp, #48]	; 0x30
 8024764:	0e2d      	lsrs	r5, r5, #24
 8024766:	9513      	str	r5, [sp, #76]	; 0x4c
 8024768:	b181      	cbz	r1, 802478c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802476a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802476e:	3b01      	subs	r3, #1
 8024770:	009b      	lsls	r3, r3, #2
 8024772:	3304      	adds	r3, #4
 8024774:	eb08 0c03 	add.w	ip, r8, r3
 8024778:	f858 3003 	ldr.w	r3, [r8, r3]
 802477c:	9308      	str	r3, [sp, #32]
 802477e:	0e1b      	lsrs	r3, r3, #24
 8024780:	9311      	str	r3, [sp, #68]	; 0x44
 8024782:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024786:	930d      	str	r3, [sp, #52]	; 0x34
 8024788:	0e1b      	lsrs	r3, r3, #24
 802478a:	9314      	str	r3, [sp, #80]	; 0x50
 802478c:	b280      	uxth	r0, r0
 802478e:	b289      	uxth	r1, r1
 8024790:	fb00 f901 	mul.w	r9, r0, r1
 8024794:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024798:	0100      	lsls	r0, r0, #4
 802479a:	eba0 0809 	sub.w	r8, r0, r9
 802479e:	b289      	uxth	r1, r1
 80247a0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80247a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80247a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80247a8:	fa1f f888 	uxth.w	r8, r8
 80247ac:	1a5b      	subs	r3, r3, r1
 80247ae:	b29b      	uxth	r3, r3
 80247b0:	fb08 f000 	mul.w	r0, r8, r0
 80247b4:	fb03 000e 	mla	r0, r3, lr, r0
 80247b8:	fb01 0005 	mla	r0, r1, r5, r0
 80247bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80247be:	fb09 0005 	mla	r0, r9, r5, r0
 80247c2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80247c6:	2800      	cmp	r0, #0
 80247c8:	f000 80fa 	beq.w	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247cc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80247d0:	d01b      	beq.n	802480a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80247d2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80247d6:	fb0e fa0a 	mul.w	sl, lr, sl
 80247da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80247de:	fb0e fe02 	mul.w	lr, lr, r2
 80247e2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80247e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80247ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80247ee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80247f2:	4452      	add	r2, sl
 80247f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80247f8:	0a12      	lsrs	r2, r2, #8
 80247fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024802:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024806:	ea42 020c 	orr.w	r2, r2, ip
 802480a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802480c:	2dff      	cmp	r5, #255	; 0xff
 802480e:	d021      	beq.n	8024854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024810:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024812:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024816:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024818:	fb05 fb0b 	mul.w	fp, r5, fp
 802481c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802481e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024822:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024824:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024828:	fb05 fa0a 	mul.w	sl, r5, sl
 802482c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024830:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024834:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024838:	44de      	add	lr, fp
 802483a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802483e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024842:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024846:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802484a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802484e:	ea4e 050a 	orr.w	r5, lr, sl
 8024852:	950c      	str	r5, [sp, #48]	; 0x30
 8024854:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024856:	2dff      	cmp	r5, #255	; 0xff
 8024858:	d021      	beq.n	802489e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802485a:	9d08      	ldr	r5, [sp, #32]
 802485c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024860:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024862:	fb05 fb0b 	mul.w	fp, r5, fp
 8024866:	9d08      	ldr	r5, [sp, #32]
 8024868:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802486c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802486e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024872:	fb05 fa0a 	mul.w	sl, r5, sl
 8024876:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802487a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802487e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024882:	44de      	add	lr, fp
 8024884:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024888:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802488c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024890:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024894:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024898:	ea4e 050a 	orr.w	r5, lr, sl
 802489c:	9508      	str	r5, [sp, #32]
 802489e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80248a0:	2dff      	cmp	r5, #255	; 0xff
 80248a2:	d021      	beq.n	80248e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80248a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80248a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80248aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80248ac:	fb05 fb0b 	mul.w	fp, r5, fp
 80248b0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80248b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80248b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80248b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80248bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80248c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80248c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80248c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80248cc:	44de      	add	lr, fp
 80248ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80248d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80248d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80248da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80248de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80248e2:	ea4e 050a 	orr.w	r5, lr, sl
 80248e6:	950d      	str	r5, [sp, #52]	; 0x34
 80248e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80248ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80248ee:	9d08      	ldr	r5, [sp, #32]
 80248f0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80248f4:	fb08 fc0c 	mul.w	ip, r8, ip
 80248f8:	fb03 cc0e 	mla	ip, r3, lr, ip
 80248fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024900:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024902:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024906:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802490a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802490c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024910:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024914:	fb08 f80e 	mul.w	r8, r8, lr
 8024918:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802491c:	fb03 8202 	mla	r2, r3, r2, r8
 8024920:	9b08      	ldr	r3, [sp, #32]
 8024922:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024924:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024928:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802492a:	fb01 220a 	mla	r2, r1, sl, r2
 802492e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8024932:	fb09 2901 	mla	r9, r9, r1, r2
 8024936:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024938:	883b      	ldrh	r3, [r7, #0]
 802493a:	4342      	muls	r2, r0
 802493c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024940:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024944:	1c50      	adds	r0, r2, #1
 8024946:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802494a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802494e:	ea4c 0c09 	orr.w	ip, ip, r9
 8024952:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024956:	1219      	asrs	r1, r3, #8
 8024958:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802495c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024960:	b2c0      	uxtb	r0, r0
 8024962:	fb12 f205 	smulbb	r2, r2, r5
 8024966:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802496a:	fb01 2100 	mla	r1, r1, r0, r2
 802496e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024972:	10da      	asrs	r2, r3, #3
 8024974:	fa5f fc8c 	uxtb.w	ip, ip
 8024978:	00db      	lsls	r3, r3, #3
 802497a:	fb1c fc05 	smulbb	ip, ip, r5
 802497e:	b2db      	uxtb	r3, r3
 8024980:	b289      	uxth	r1, r1
 8024982:	fb03 c300 	mla	r3, r3, r0, ip
 8024986:	fa1f fc83 	uxth.w	ip, r3
 802498a:	1c4b      	adds	r3, r1, #1
 802498c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024990:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024994:	fb1e fe05 	smulbb	lr, lr, r5
 8024998:	f10c 0301 	add.w	r3, ip, #1
 802499c:	fb02 e200 	mla	r2, r2, r0, lr
 80249a0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80249a4:	b292      	uxth	r2, r2
 80249a6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80249aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249ae:	430b      	orrs	r3, r1
 80249b0:	1c51      	adds	r1, r2, #1
 80249b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80249b6:	0952      	lsrs	r2, r2, #5
 80249b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80249bc:	4313      	orrs	r3, r2
 80249be:	803b      	strh	r3, [r7, #0]
 80249c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80249c2:	441c      	add	r4, r3
 80249c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80249c6:	441e      	add	r6, r3
 80249c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80249ca:	3b01      	subs	r3, #1
 80249cc:	3702      	adds	r7, #2
 80249ce:	9318      	str	r3, [sp, #96]	; 0x60
 80249d0:	e698      	b.n	8024704 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80249d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80249d4:	441c      	add	r4, r3
 80249d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80249d8:	441e      	add	r6, r3
 80249da:	9b07      	ldr	r3, [sp, #28]
 80249dc:	3b01      	subs	r3, #1
 80249de:	9307      	str	r3, [sp, #28]
 80249e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80249e2:	3302      	adds	r3, #2
 80249e4:	930a      	str	r3, [sp, #40]	; 0x28
 80249e6:	e66d      	b.n	80246c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80249e8:	d023      	beq.n	8024a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80249ea:	9b07      	ldr	r3, [sp, #28]
 80249ec:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80249ee:	3b01      	subs	r3, #1
 80249f0:	fb00 4003 	mla	r0, r0, r3, r4
 80249f4:	1400      	asrs	r0, r0, #16
 80249f6:	f53f ae82 	bmi.w	80246fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80249fa:	3901      	subs	r1, #1
 80249fc:	4288      	cmp	r0, r1
 80249fe:	f6bf ae7e 	bge.w	80246fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024a02:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024a04:	fb01 6303 	mla	r3, r1, r3, r6
 8024a08:	141b      	asrs	r3, r3, #16
 8024a0a:	f53f ae78 	bmi.w	80246fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024a0e:	3a01      	subs	r2, #1
 8024a10:	4293      	cmp	r3, r2
 8024a12:	f6bf ae74 	bge.w	80246fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024a16:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024a1a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024a1e:	f1bb 0f00 	cmp.w	fp, #0
 8024a22:	dc6c      	bgt.n	8024afe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024a24:	9b07      	ldr	r3, [sp, #28]
 8024a26:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024a2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024a2c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024a30:	930a      	str	r3, [sp, #40]	; 0x28
 8024a32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024a34:	2b00      	cmp	r3, #0
 8024a36:	f340 81b3 	ble.w	8024da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024a3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024a3e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024a46:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024a48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024a4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024a50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024a54:	eef0 6a62 	vmov.f32	s13, s5
 8024a58:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024a5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a60:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024a64:	ee16 4a90 	vmov	r4, s13
 8024a68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024a6c:	eef0 6a43 	vmov.f32	s13, s6
 8024a70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024a74:	ee12 2a90 	vmov	r2, s5
 8024a78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024a7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8024a80:	ee13 2a10 	vmov	r2, s6
 8024a84:	9329      	str	r3, [sp, #164]	; 0xa4
 8024a86:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024a88:	fb92 f3f3 	sdiv	r3, r2, r3
 8024a8c:	932a      	str	r3, [sp, #168]	; 0xa8
 8024a8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024a90:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8024a92:	3b01      	subs	r3, #1
 8024a94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a98:	9317      	str	r3, [sp, #92]	; 0x5c
 8024a9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024a9c:	bf08      	it	eq
 8024a9e:	4613      	moveq	r3, r2
 8024aa0:	ee16 6a90 	vmov	r6, s13
 8024aa4:	9307      	str	r3, [sp, #28]
 8024aa6:	eeb0 3a67 	vmov.f32	s6, s15
 8024aaa:	eef0 2a47 	vmov.f32	s5, s14
 8024aae:	e5fb      	b.n	80246a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024ab0:	2900      	cmp	r1, #0
 8024ab2:	f43f ae6b 	beq.w	802478c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024ab6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024aba:	9308      	str	r3, [sp, #32]
 8024abc:	0e1b      	lsrs	r3, r3, #24
 8024abe:	9311      	str	r3, [sp, #68]	; 0x44
 8024ac0:	e664      	b.n	802478c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024ac2:	f112 0801 	adds.w	r8, r2, #1
 8024ac6:	f53f af7b 	bmi.w	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024aca:	4543      	cmp	r3, r8
 8024acc:	f6ff af78 	blt.w	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024ad0:	f11c 0801 	adds.w	r8, ip, #1
 8024ad4:	f53f af74 	bmi.w	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024ad8:	45c6      	cmp	lr, r8
 8024ada:	f6ff af71 	blt.w	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024ade:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8024ae0:	9201      	str	r2, [sp, #4]
 8024ae2:	fa0f f28e 	sxth.w	r2, lr
 8024ae6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024aea:	e9cd c002 	strd	ip, r0, [sp, #8]
 8024aee:	9200      	str	r2, [sp, #0]
 8024af0:	b21b      	sxth	r3, r3
 8024af2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024af4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024af6:	4639      	mov	r1, r7
 8024af8:	f7ff fc79 	bl	80243ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024afc:	e760      	b.n	80249c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024afe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024b00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024b02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024b06:	1427      	asrs	r7, r4, #16
 8024b08:	1433      	asrs	r3, r6, #16
 8024b0a:	fb01 7303 	mla	r3, r1, r3, r7
 8024b0e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8024b12:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024b16:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024b1a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024b1e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024b22:	2a00      	cmp	r2, #0
 8024b24:	f000 8133 	beq.w	8024d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024b28:	687d      	ldr	r5, [r7, #4]
 8024b2a:	950e      	str	r5, [sp, #56]	; 0x38
 8024b2c:	0e2d      	lsrs	r5, r5, #24
 8024b2e:	9515      	str	r5, [sp, #84]	; 0x54
 8024b30:	b178      	cbz	r0, 8024b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024b32:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024b36:	3901      	subs	r1, #1
 8024b38:	0089      	lsls	r1, r1, #2
 8024b3a:	3104      	adds	r1, #4
 8024b3c:	eb07 0e01 	add.w	lr, r7, r1
 8024b40:	5879      	ldr	r1, [r7, r1]
 8024b42:	9109      	str	r1, [sp, #36]	; 0x24
 8024b44:	0e09      	lsrs	r1, r1, #24
 8024b46:	9112      	str	r1, [sp, #72]	; 0x48
 8024b48:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024b4c:	910f      	str	r1, [sp, #60]	; 0x3c
 8024b4e:	0e09      	lsrs	r1, r1, #24
 8024b50:	9116      	str	r1, [sp, #88]	; 0x58
 8024b52:	b292      	uxth	r2, r2
 8024b54:	b280      	uxth	r0, r0
 8024b56:	fb02 f800 	mul.w	r8, r2, r0
 8024b5a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024b5e:	0112      	lsls	r2, r2, #4
 8024b60:	eba2 0e08 	sub.w	lr, r2, r8
 8024b64:	b280      	uxth	r0, r0
 8024b66:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024b6a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024b6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b6e:	fa1f fe8e 	uxth.w	lr, lr
 8024b72:	1a12      	subs	r2, r2, r0
 8024b74:	b292      	uxth	r2, r2
 8024b76:	fb0e f101 	mul.w	r1, lr, r1
 8024b7a:	fb02 110c 	mla	r1, r2, ip, r1
 8024b7e:	fb00 1105 	mla	r1, r0, r5, r1
 8024b82:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024b84:	fb08 1105 	mla	r1, r8, r5, r1
 8024b88:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024b8c:	2900      	cmp	r1, #0
 8024b8e:	f000 80f5 	beq.w	8024d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8024b92:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024b96:	d019      	beq.n	8024bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024b98:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024b9c:	fb0c fa0a 	mul.w	sl, ip, sl
 8024ba0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ba4:	fb0c fc03 	mul.w	ip, ip, r3
 8024ba8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024bac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024bb0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024bb4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024bb8:	4453      	add	r3, sl
 8024bba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024bbe:	0a1b      	lsrs	r3, r3, #8
 8024bc0:	0a3f      	lsrs	r7, r7, #8
 8024bc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024bc6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024bca:	433b      	orrs	r3, r7
 8024bcc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024bce:	2dff      	cmp	r5, #255	; 0xff
 8024bd0:	d020      	beq.n	8024c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8024bd2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bd4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024bd8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024bda:	436f      	muls	r7, r5
 8024bdc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024be2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024be4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024be8:	fb05 fa0a 	mul.w	sl, r5, sl
 8024bec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024bf0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024bf4:	44bc      	add	ip, r7
 8024bf6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024bfa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024bfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c0e:	ea4c 050a 	orr.w	r5, ip, sl
 8024c12:	950e      	str	r5, [sp, #56]	; 0x38
 8024c14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024c16:	2dff      	cmp	r5, #255	; 0xff
 8024c18:	d020      	beq.n	8024c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024c1a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024c1c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024c20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024c22:	436f      	muls	r7, r5
 8024c24:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024c26:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024c2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024c2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024c30:	fb05 fa0a 	mul.w	sl, r5, sl
 8024c34:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024c38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c3c:	44bc      	add	ip, r7
 8024c3e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024c42:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024c46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c56:	ea4c 050a 	orr.w	r5, ip, sl
 8024c5a:	9509      	str	r5, [sp, #36]	; 0x24
 8024c5c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024c5e:	2dff      	cmp	r5, #255	; 0xff
 8024c60:	d020      	beq.n	8024ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024c62:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024c64:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024c68:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024c6a:	436f      	muls	r7, r5
 8024c6c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024c6e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024c72:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024c74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024c78:	fb05 fa0a 	mul.w	sl, r5, sl
 8024c7c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024c80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c84:	44bc      	add	ip, r7
 8024c86:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024c8a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024c8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c9e:	ea4c 050a 	orr.w	r5, ip, sl
 8024ca2:	950f      	str	r5, [sp, #60]	; 0x3c
 8024ca4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ca6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024caa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024cac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024cb0:	fb0e f707 	mul.w	r7, lr, r7
 8024cb4:	fb02 770c 	mla	r7, r2, ip, r7
 8024cb8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024cbc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024cbe:	fb00 770c 	mla	r7, r0, ip, r7
 8024cc2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024cc6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024cc8:	fb08 770c 	mla	r7, r8, ip, r7
 8024ccc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024cd0:	fb0e fe0c 	mul.w	lr, lr, ip
 8024cd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024cd8:	fb02 e303 	mla	r3, r2, r3, lr
 8024cdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024cde:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024ce0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024ce4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024ce6:	fb00 330a 	mla	r3, r0, sl, r3
 8024cea:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024cee:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024cf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024cf4:	f8b9 0000 	ldrh.w	r0, [r9]
 8024cf8:	4359      	muls	r1, r3
 8024cfa:	0a3f      	lsrs	r7, r7, #8
 8024cfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d00:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024d04:	1c4b      	adds	r3, r1, #1
 8024d06:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024d0a:	ea47 070c 	orr.w	r7, r7, ip
 8024d0e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024d12:	1202      	asrs	r2, r0, #8
 8024d14:	0c3b      	lsrs	r3, r7, #16
 8024d16:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024d1a:	b2c9      	uxtb	r1, r1
 8024d1c:	fb13 f305 	smulbb	r3, r3, r5
 8024d20:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024d24:	fb02 3201 	mla	r2, r2, r1, r3
 8024d28:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024d2c:	10c3      	asrs	r3, r0, #3
 8024d2e:	b2ff      	uxtb	r7, r7
 8024d30:	00c0      	lsls	r0, r0, #3
 8024d32:	b2c0      	uxtb	r0, r0
 8024d34:	fb17 f705 	smulbb	r7, r7, r5
 8024d38:	fb00 7001 	mla	r0, r0, r1, r7
 8024d3c:	b292      	uxth	r2, r2
 8024d3e:	fb1c fc05 	smulbb	ip, ip, r5
 8024d42:	b280      	uxth	r0, r0
 8024d44:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024d48:	fb03 c301 	mla	r3, r3, r1, ip
 8024d4c:	1c51      	adds	r1, r2, #1
 8024d4e:	f100 0c01 	add.w	ip, r0, #1
 8024d52:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024d56:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024d5a:	b29b      	uxth	r3, r3
 8024d5c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024d60:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024d64:	ea4c 0202 	orr.w	r2, ip, r2
 8024d68:	f103 0c01 	add.w	ip, r3, #1
 8024d6c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024d70:	095b      	lsrs	r3, r3, #5
 8024d72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024d76:	431a      	orrs	r2, r3
 8024d78:	f8a9 2000 	strh.w	r2, [r9]
 8024d7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024d7e:	441c      	add	r4, r3
 8024d80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024d82:	f109 0902 	add.w	r9, r9, #2
 8024d86:	441e      	add	r6, r3
 8024d88:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024d8c:	e647      	b.n	8024a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024d8e:	2800      	cmp	r0, #0
 8024d90:	f43f aedf 	beq.w	8024b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024d94:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024d98:	9109      	str	r1, [sp, #36]	; 0x24
 8024d9a:	0e09      	lsrs	r1, r1, #24
 8024d9c:	9112      	str	r1, [sp, #72]	; 0x48
 8024d9e:	e6d8      	b.n	8024b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024da0:	b01d      	add	sp, #116	; 0x74
 8024da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024da6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024daa:	b085      	sub	sp, #20
 8024dac:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024db0:	9102      	str	r1, [sp, #8]
 8024db2:	2c00      	cmp	r4, #0
 8024db4:	fb04 7103 	mla	r1, r4, r3, r7
 8024db8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024dbc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024dc0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024dc4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024dc8:	f2c0 810c 	blt.w	8024fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024dcc:	45a6      	cmp	lr, r4
 8024dce:	f340 8109 	ble.w	8024fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024dd2:	2f00      	cmp	r7, #0
 8024dd4:	f2c0 8104 	blt.w	8024fe0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024dd8:	42bb      	cmp	r3, r7
 8024dda:	f340 8101 	ble.w	8024fe0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024dde:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024de2:	1c7a      	adds	r2, r7, #1
 8024de4:	f100 8101 	bmi.w	8024fea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024de8:	4293      	cmp	r3, r2
 8024dea:	f340 80fe 	ble.w	8024fea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024dee:	2e00      	cmp	r6, #0
 8024df0:	f000 80fd 	beq.w	8024fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024df4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024df8:	3401      	adds	r4, #1
 8024dfa:	f100 80fc 	bmi.w	8024ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024dfe:	45a6      	cmp	lr, r4
 8024e00:	f340 80f9 	ble.w	8024ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024e04:	2800      	cmp	r0, #0
 8024e06:	f000 80f9 	beq.w	8024ffc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024e0a:	2f00      	cmp	r7, #0
 8024e0c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024e10:	f2c0 80ef 	blt.w	8024ff2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024e14:	42bb      	cmp	r3, r7
 8024e16:	f340 80ec 	ble.w	8024ff2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024e1a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024e1e:	3701      	adds	r7, #1
 8024e20:	f100 80ef 	bmi.w	8025002 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024e24:	42bb      	cmp	r3, r7
 8024e26:	f340 80ec 	ble.w	8025002 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024e2a:	2e00      	cmp	r6, #0
 8024e2c:	f000 80eb 	beq.w	8025006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024e30:	6852      	ldr	r2, [r2, #4]
 8024e32:	b2b6      	uxth	r6, r6
 8024e34:	b280      	uxth	r0, r0
 8024e36:	fb00 fe06 	mul.w	lr, r0, r6
 8024e3a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024e3e:	0136      	lsls	r6, r6, #4
 8024e40:	eba6 070e 	sub.w	r7, r6, lr
 8024e44:	b280      	uxth	r0, r0
 8024e46:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024e4a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024e4e:	b2bf      	uxth	r7, r7
 8024e50:	1a1b      	subs	r3, r3, r0
 8024e52:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024e56:	b29b      	uxth	r3, r3
 8024e58:	fb07 f60a 	mul.w	r6, r7, sl
 8024e5c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024e60:	fb0b 6603 	mla	r6, fp, r3, r6
 8024e64:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024e68:	fb00 6609 	mla	r6, r0, r9, r6
 8024e6c:	fb0e 6608 	mla	r6, lr, r8, r6
 8024e70:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024e74:	9600      	str	r6, [sp, #0]
 8024e76:	2e00      	cmp	r6, #0
 8024e78:	f000 80af 	beq.w	8024fda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024e7c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024e80:	fb0b fc0c 	mul.w	ip, fp, ip
 8024e84:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024e88:	fb0b f505 	mul.w	r5, fp, r5
 8024e8c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024e90:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024e94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e98:	44dc      	add	ip, fp
 8024e9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e9e:	9501      	str	r5, [sp, #4]
 8024ea0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024ea4:	9503      	str	r5, [sp, #12]
 8024ea6:	9d01      	ldr	r5, [sp, #4]
 8024ea8:	9e02      	ldr	r6, [sp, #8]
 8024eaa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024eae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024eb2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024eb6:	fb0a fc0c 	mul.w	ip, sl, ip
 8024eba:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024ebe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024ec2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024ec6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024eca:	4465      	add	r5, ip
 8024ecc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ed0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024ed4:	fb09 fc0c 	mul.w	ip, r9, ip
 8024ed8:	fb09 f904 	mul.w	r9, r9, r4
 8024edc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024ee0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024ee4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024ee8:	fb08 f404 	mul.w	r4, r8, r4
 8024eec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024ef0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024ef4:	fb08 f802 	mul.w	r8, r8, r2
 8024ef8:	fb0a fa01 	mul.w	sl, sl, r1
 8024efc:	0a22      	lsrs	r2, r4, #8
 8024efe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024f02:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024f06:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024f0a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024f0e:	4414      	add	r4, r2
 8024f10:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024f14:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024f18:	0a2d      	lsrs	r5, r5, #8
 8024f1a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024f1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024f22:	9a03      	ldr	r2, [sp, #12]
 8024f24:	8836      	ldrh	r6, [r6, #0]
 8024f26:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024f2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024f2e:	437d      	muls	r5, r7
 8024f30:	4461      	add	r1, ip
 8024f32:	0a24      	lsrs	r4, r4, #8
 8024f34:	fb02 5503 	mla	r5, r2, r3, r5
 8024f38:	0a09      	lsrs	r1, r1, #8
 8024f3a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024f3e:	fb04 540e 	mla	r4, r4, lr, r5
 8024f42:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024f46:	fb01 4100 	mla	r1, r1, r0, r4
 8024f4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f4e:	0a09      	lsrs	r1, r1, #8
 8024f50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f54:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024f58:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024f5c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024f60:	fb07 f70a 	mul.w	r7, r7, sl
 8024f64:	fb03 7101 	mla	r1, r3, r1, r7
 8024f68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024f6c:	9b00      	ldr	r3, [sp, #0]
 8024f6e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024f72:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024f76:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024f7a:	fb00 e101 	mla	r1, r0, r1, lr
 8024f7e:	43da      	mvns	r2, r3
 8024f80:	1233      	asrs	r3, r6, #8
 8024f82:	b2d2      	uxtb	r2, r2
 8024f84:	10f0      	asrs	r0, r6, #3
 8024f86:	0a09      	lsrs	r1, r1, #8
 8024f88:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024f8c:	00f6      	lsls	r6, r6, #3
 8024f8e:	4353      	muls	r3, r2
 8024f90:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024f94:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024f98:	b2f6      	uxtb	r6, r6
 8024f9a:	4321      	orrs	r1, r4
 8024f9c:	4350      	muls	r0, r2
 8024f9e:	4356      	muls	r6, r2
 8024fa0:	1c5a      	adds	r2, r3, #1
 8024fa2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024fa6:	0c0b      	lsrs	r3, r1, #16
 8024fa8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024fac:	1c42      	adds	r2, r0, #1
 8024fae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024fb2:	0a0a      	lsrs	r2, r1, #8
 8024fb4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024fb8:	021b      	lsls	r3, r3, #8
 8024fba:	00d2      	lsls	r2, r2, #3
 8024fbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024fc0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024fc4:	4313      	orrs	r3, r2
 8024fc6:	1c72      	adds	r2, r6, #1
 8024fc8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024fcc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024fd0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024fd4:	4319      	orrs	r1, r3
 8024fd6:	9b02      	ldr	r3, [sp, #8]
 8024fd8:	8019      	strh	r1, [r3, #0]
 8024fda:	b005      	add	sp, #20
 8024fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fe0:	2500      	movs	r5, #0
 8024fe2:	e6fe      	b.n	8024de2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024fe4:	2100      	movs	r1, #0
 8024fe6:	460d      	mov	r5, r1
 8024fe8:	e706      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024fea:	2100      	movs	r1, #0
 8024fec:	e704      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024fee:	4631      	mov	r1, r6
 8024ff0:	e702      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024ff2:	2400      	movs	r4, #0
 8024ff4:	e713      	b.n	8024e1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024ff6:	2200      	movs	r2, #0
 8024ff8:	4614      	mov	r4, r2
 8024ffa:	e71a      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024ffc:	4602      	mov	r2, r0
 8024ffe:	4604      	mov	r4, r0
 8025000:	e717      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025002:	2200      	movs	r2, #0
 8025004:	e715      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025006:	4632      	mov	r2, r6
 8025008:	e713      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802500c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802500c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025010:	b09b      	sub	sp, #108	; 0x6c
 8025012:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025016:	9218      	str	r2, [sp, #96]	; 0x60
 8025018:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802501a:	9116      	str	r1, [sp, #88]	; 0x58
 802501c:	9307      	str	r3, [sp, #28]
 802501e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025022:	9019      	str	r0, [sp, #100]	; 0x64
 8025024:	6850      	ldr	r0, [r2, #4]
 8025026:	6812      	ldr	r2, [r2, #0]
 8025028:	fb00 1303 	mla	r3, r0, r3, r1
 802502c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025030:	930a      	str	r3, [sp, #40]	; 0x28
 8025032:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025034:	681b      	ldr	r3, [r3, #0]
 8025036:	930f      	str	r3, [sp, #60]	; 0x3c
 8025038:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802503a:	2b00      	cmp	r3, #0
 802503c:	dc03      	bgt.n	8025046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802503e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025040:	2b00      	cmp	r3, #0
 8025042:	f340 8386 	ble.w	8025752 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025046:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025048:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802504c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025050:	1e48      	subs	r0, r1, #1
 8025052:	1e57      	subs	r7, r2, #1
 8025054:	9b07      	ldr	r3, [sp, #28]
 8025056:	2b00      	cmp	r3, #0
 8025058:	f340 8166 	ble.w	8025328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802505c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025060:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025064:	d406      	bmi.n	8025074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025066:	4584      	cmp	ip, r0
 8025068:	da04      	bge.n	8025074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802506a:	2b00      	cmp	r3, #0
 802506c:	db02      	blt.n	8025074 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802506e:	42bb      	cmp	r3, r7
 8025070:	f2c0 815b 	blt.w	802532a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025074:	f11c 0c01 	adds.w	ip, ip, #1
 8025078:	f100 814b 	bmi.w	8025312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802507c:	4561      	cmp	r1, ip
 802507e:	f2c0 8148 	blt.w	8025312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025082:	3301      	adds	r3, #1
 8025084:	f100 8145 	bmi.w	8025312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025088:	429a      	cmp	r2, r3
 802508a:	f2c0 8142 	blt.w	8025312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802508e:	9b07      	ldr	r3, [sp, #28]
 8025090:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025092:	9317      	str	r3, [sp, #92]	; 0x5c
 8025094:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025096:	2b00      	cmp	r3, #0
 8025098:	f340 8165 	ble.w	8025366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802509c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802509e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80250a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80250a4:	689b      	ldr	r3, [r3, #8]
 80250a6:	1422      	asrs	r2, r4, #16
 80250a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80250ac:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80250b0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80250b4:	f100 81d5 	bmi.w	8025462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80250b8:	f103 38ff 	add.w	r8, r3, #4294967295
 80250bc:	4542      	cmp	r2, r8
 80250be:	f280 81d0 	bge.w	8025462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80250c2:	f1bc 0f00 	cmp.w	ip, #0
 80250c6:	f2c0 81cc 	blt.w	8025462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80250ca:	f10e 38ff 	add.w	r8, lr, #4294967295
 80250ce:	45c4      	cmp	ip, r8
 80250d0:	f280 81c7 	bge.w	8025462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80250d4:	b21b      	sxth	r3, r3
 80250d6:	fb0c 2203 	mla	r2, ip, r3, r2
 80250da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80250dc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80250e0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80250e4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80250e8:	2900      	cmp	r1, #0
 80250ea:	f000 8182 	beq.w	80253f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80250ee:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80250f2:	950b      	str	r5, [sp, #44]	; 0x2c
 80250f4:	0e2d      	lsrs	r5, r5, #24
 80250f6:	9512      	str	r5, [sp, #72]	; 0x48
 80250f8:	b180      	cbz	r0, 802511c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80250fa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80250fe:	3b01      	subs	r3, #1
 8025100:	009b      	lsls	r3, r3, #2
 8025102:	3304      	adds	r3, #4
 8025104:	eb08 0c03 	add.w	ip, r8, r3
 8025108:	f858 3003 	ldr.w	r3, [r8, r3]
 802510c:	9308      	str	r3, [sp, #32]
 802510e:	0e1b      	lsrs	r3, r3, #24
 8025110:	9310      	str	r3, [sp, #64]	; 0x40
 8025112:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025116:	930c      	str	r3, [sp, #48]	; 0x30
 8025118:	0e1b      	lsrs	r3, r3, #24
 802511a:	9313      	str	r3, [sp, #76]	; 0x4c
 802511c:	b289      	uxth	r1, r1
 802511e:	b280      	uxth	r0, r0
 8025120:	fb01 f900 	mul.w	r9, r1, r0
 8025124:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025128:	0109      	lsls	r1, r1, #4
 802512a:	eba1 0809 	sub.w	r8, r1, r9
 802512e:	b280      	uxth	r0, r0
 8025130:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025134:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025136:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025138:	fa1f f888 	uxth.w	r8, r8
 802513c:	1a09      	subs	r1, r1, r0
 802513e:	b289      	uxth	r1, r1
 8025140:	fb08 f303 	mul.w	r3, r8, r3
 8025144:	fb01 330e 	mla	r3, r1, lr, r3
 8025148:	fb00 3305 	mla	r3, r0, r5, r3
 802514c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802514e:	fb09 3305 	mla	r3, r9, r5, r3
 8025152:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025156:	2b00      	cmp	r3, #0
 8025158:	f000 80d2 	beq.w	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802515c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025160:	d01b      	beq.n	802519a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8025162:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025166:	fb0e fa0a 	mul.w	sl, lr, sl
 802516a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802516e:	fb0e fe02 	mul.w	lr, lr, r2
 8025172:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025176:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802517a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802517e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025182:	4452      	add	r2, sl
 8025184:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025188:	0a12      	lsrs	r2, r2, #8
 802518a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802518e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025192:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025196:	ea42 020c 	orr.w	r2, r2, ip
 802519a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802519c:	2dff      	cmp	r5, #255	; 0xff
 802519e:	d021      	beq.n	80251e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80251a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80251a2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80251a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80251a8:	fb05 fb0b 	mul.w	fp, r5, fp
 80251ac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80251ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80251b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80251b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80251b8:	fb05 fa0a 	mul.w	sl, r5, sl
 80251bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80251c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80251c8:	44de      	add	lr, fp
 80251ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80251ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80251d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80251de:	ea4e 050a 	orr.w	r5, lr, sl
 80251e2:	950b      	str	r5, [sp, #44]	; 0x2c
 80251e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80251e6:	2dff      	cmp	r5, #255	; 0xff
 80251e8:	d021      	beq.n	802522e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80251ea:	9d08      	ldr	r5, [sp, #32]
 80251ec:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80251f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80251f2:	fb05 fb0b 	mul.w	fp, r5, fp
 80251f6:	9d08      	ldr	r5, [sp, #32]
 80251f8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80251fc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80251fe:	fb05 fa0e 	mul.w	sl, r5, lr
 8025202:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025206:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802520a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802520e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025212:	44de      	add	lr, fp
 8025214:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025218:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802521c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025220:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025224:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025228:	ea4e 050a 	orr.w	r5, lr, sl
 802522c:	9508      	str	r5, [sp, #32]
 802522e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025230:	2dff      	cmp	r5, #255	; 0xff
 8025232:	d021      	beq.n	8025278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025234:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025236:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802523a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802523c:	fb05 fb0b 	mul.w	fp, r5, fp
 8025240:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025242:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025246:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025248:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802524c:	fb05 fa0a 	mul.w	sl, r5, sl
 8025250:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025254:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025258:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802525c:	44de      	add	lr, fp
 802525e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025262:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025266:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802526a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802526e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025272:	ea4e 050a 	orr.w	r5, lr, sl
 8025276:	950c      	str	r5, [sp, #48]	; 0x30
 8025278:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802527a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802527e:	9d08      	ldr	r5, [sp, #32]
 8025280:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025284:	fb08 fc0c 	mul.w	ip, r8, ip
 8025288:	fb01 cc0e 	mla	ip, r1, lr, ip
 802528c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025290:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025292:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025296:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802529a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802529c:	fb09 cc0e 	mla	ip, r9, lr, ip
 80252a0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80252a4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80252a8:	fb08 f80e 	mul.w	r8, r8, lr
 80252ac:	fb01 8202 	mla	r2, r1, r2, r8
 80252b0:	9908      	ldr	r1, [sp, #32]
 80252b2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80252b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80252b8:	fb00 220a 	mla	r2, r0, sl, r2
 80252bc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80252c0:	fb09 2900 	mla	r9, r9, r0, r2
 80252c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80252cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252d0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80252d4:	ea4c 0c09 	orr.w	ip, ip, r9
 80252d8:	2bff      	cmp	r3, #255	; 0xff
 80252da:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80252de:	f040 8091 	bne.w	8025404 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80252e2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80252e6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80252ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80252ee:	f022 0207 	bic.w	r2, r2, #7
 80252f2:	431a      	orrs	r2, r3
 80252f4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80252f8:	ea4c 0c02 	orr.w	ip, ip, r2
 80252fc:	f8a7 c000 	strh.w	ip, [r7]
 8025300:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025302:	441c      	add	r4, r3
 8025304:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025306:	441e      	add	r6, r3
 8025308:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802530a:	3b01      	subs	r3, #1
 802530c:	3702      	adds	r7, #2
 802530e:	9317      	str	r3, [sp, #92]	; 0x5c
 8025310:	e6c0      	b.n	8025094 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025312:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025314:	441c      	add	r4, r3
 8025316:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025318:	441e      	add	r6, r3
 802531a:	9b07      	ldr	r3, [sp, #28]
 802531c:	3b01      	subs	r3, #1
 802531e:	9307      	str	r3, [sp, #28]
 8025320:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025322:	3302      	adds	r3, #2
 8025324:	930a      	str	r3, [sp, #40]	; 0x28
 8025326:	e695      	b.n	8025054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025328:	d024      	beq.n	8025374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802532a:	9b07      	ldr	r3, [sp, #28]
 802532c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802532e:	3b01      	subs	r3, #1
 8025330:	fb00 4003 	mla	r0, r0, r3, r4
 8025334:	1400      	asrs	r0, r0, #16
 8025336:	f53f aeaa 	bmi.w	802508e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802533a:	3901      	subs	r1, #1
 802533c:	4288      	cmp	r0, r1
 802533e:	f6bf aea6 	bge.w	802508e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025342:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025344:	fb01 6303 	mla	r3, r1, r3, r6
 8025348:	141b      	asrs	r3, r3, #16
 802534a:	f53f aea0 	bmi.w	802508e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802534e:	3a01      	subs	r2, #1
 8025350:	4293      	cmp	r3, r2
 8025352:	f6bf ae9c 	bge.w	802508e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025356:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802535a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802535e:	f1bb 0f00 	cmp.w	fp, #0
 8025362:	f300 809a 	bgt.w	802549a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025366:	9b07      	ldr	r3, [sp, #28]
 8025368:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802536c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802536e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025372:	930a      	str	r3, [sp, #40]	; 0x28
 8025374:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025376:	2b00      	cmp	r3, #0
 8025378:	f340 81eb 	ble.w	8025752 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802537c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025380:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025384:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025388:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802538a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802538e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025392:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025396:	eef0 6a62 	vmov.f32	s13, s5
 802539a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802539e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80253a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80253a6:	ee16 4a90 	vmov	r4, s13
 80253aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80253ae:	eef0 6a43 	vmov.f32	s13, s6
 80253b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80253b6:	ee12 2a90 	vmov	r2, s5
 80253ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80253be:	fb92 f3f3 	sdiv	r3, r2, r3
 80253c2:	ee13 2a10 	vmov	r2, s6
 80253c6:	9327      	str	r3, [sp, #156]	; 0x9c
 80253c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80253ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80253ce:	9328      	str	r3, [sp, #160]	; 0xa0
 80253d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80253d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80253d4:	3b01      	subs	r3, #1
 80253d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80253da:	9316      	str	r3, [sp, #88]	; 0x58
 80253dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80253de:	bf08      	it	eq
 80253e0:	4613      	moveq	r3, r2
 80253e2:	ee16 6a90 	vmov	r6, s13
 80253e6:	9307      	str	r3, [sp, #28]
 80253e8:	eeb0 3a67 	vmov.f32	s6, s15
 80253ec:	eef0 2a47 	vmov.f32	s5, s14
 80253f0:	e622      	b.n	8025038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80253f2:	2800      	cmp	r0, #0
 80253f4:	f43f ae92 	beq.w	802511c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80253f8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80253fc:	9308      	str	r3, [sp, #32]
 80253fe:	0e1b      	lsrs	r3, r3, #24
 8025400:	9310      	str	r3, [sp, #64]	; 0x40
 8025402:	e68b      	b.n	802511c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025404:	8839      	ldrh	r1, [r7, #0]
 8025406:	4dd4      	ldr	r5, [pc, #848]	; (8025758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025408:	43db      	mvns	r3, r3
 802540a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802540e:	fa5f f883 	uxtb.w	r8, r3
 8025412:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025416:	fb0e fe08 	mul.w	lr, lr, r8
 802541a:	10c8      	asrs	r0, r1, #3
 802541c:	00cb      	lsls	r3, r1, #3
 802541e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025422:	f10e 0101 	add.w	r1, lr, #1
 8025426:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802542a:	fb00 f008 	mul.w	r0, r0, r8
 802542e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025432:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025436:	f100 0e01 	add.w	lr, r0, #1
 802543a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802543e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025442:	b2db      	uxtb	r3, r3
 8025444:	b2c9      	uxtb	r1, r1
 8025446:	00d2      	lsls	r2, r2, #3
 8025448:	fb03 f308 	mul.w	r3, r3, r8
 802544c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025450:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025454:	430a      	orrs	r2, r1
 8025456:	1c59      	adds	r1, r3, #1
 8025458:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802545c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025460:	e748      	b.n	80252f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025462:	f112 0801 	adds.w	r8, r2, #1
 8025466:	f53f af4b 	bmi.w	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802546a:	4543      	cmp	r3, r8
 802546c:	f6ff af48 	blt.w	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025470:	f11c 0801 	adds.w	r8, ip, #1
 8025474:	f53f af44 	bmi.w	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025478:	45c6      	cmp	lr, r8
 802547a:	f6ff af41 	blt.w	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802547e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025482:	fa0f f28e 	sxth.w	r2, lr
 8025486:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802548a:	9200      	str	r2, [sp, #0]
 802548c:	b21b      	sxth	r3, r3
 802548e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025490:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025492:	4639      	mov	r1, r7
 8025494:	f7ff fc87 	bl	8024da6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025498:	e732      	b.n	8025300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802549a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802549c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802549e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80254a2:	1421      	asrs	r1, r4, #16
 80254a4:	1433      	asrs	r3, r6, #16
 80254a6:	fb07 1303 	mla	r3, r7, r3, r1
 80254aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80254ac:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80254b0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80254b4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80254b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80254bc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80254c0:	2a00      	cmp	r2, #0
 80254c2:	f000 8107 	beq.w	80256d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80254c6:	684d      	ldr	r5, [r1, #4]
 80254c8:	950d      	str	r5, [sp, #52]	; 0x34
 80254ca:	0e2d      	lsrs	r5, r5, #24
 80254cc:	9514      	str	r5, [sp, #80]	; 0x50
 80254ce:	b178      	cbz	r0, 80254f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80254d0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80254d4:	3f01      	subs	r7, #1
 80254d6:	00bf      	lsls	r7, r7, #2
 80254d8:	3704      	adds	r7, #4
 80254da:	eb01 0e07 	add.w	lr, r1, r7
 80254de:	59c9      	ldr	r1, [r1, r7]
 80254e0:	9109      	str	r1, [sp, #36]	; 0x24
 80254e2:	0e09      	lsrs	r1, r1, #24
 80254e4:	9111      	str	r1, [sp, #68]	; 0x44
 80254e6:	f8de 1004 	ldr.w	r1, [lr, #4]
 80254ea:	910e      	str	r1, [sp, #56]	; 0x38
 80254ec:	0e09      	lsrs	r1, r1, #24
 80254ee:	9115      	str	r1, [sp, #84]	; 0x54
 80254f0:	b292      	uxth	r2, r2
 80254f2:	b280      	uxth	r0, r0
 80254f4:	fb02 f900 	mul.w	r9, r2, r0
 80254f8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80254fc:	0112      	lsls	r2, r2, #4
 80254fe:	eba2 0e09 	sub.w	lr, r2, r9
 8025502:	b280      	uxth	r0, r0
 8025504:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025508:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802550a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802550c:	fa1f fe8e 	uxth.w	lr, lr
 8025510:	1a09      	subs	r1, r1, r0
 8025512:	b289      	uxth	r1, r1
 8025514:	fb0e f202 	mul.w	r2, lr, r2
 8025518:	fb01 220c 	mla	r2, r1, ip, r2
 802551c:	fb00 2205 	mla	r2, r0, r5, r2
 8025520:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025522:	fb09 2205 	mla	r2, r9, r5, r2
 8025526:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802552a:	2a00      	cmp	r2, #0
 802552c:	f000 80c9 	beq.w	80256c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025530:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025534:	d019      	beq.n	802556a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025536:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802553a:	fb0c fa0a 	mul.w	sl, ip, sl
 802553e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025542:	fb0c fc03 	mul.w	ip, ip, r3
 8025546:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802554a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802554e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025552:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025556:	4453      	add	r3, sl
 8025558:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802555c:	0a1b      	lsrs	r3, r3, #8
 802555e:	0a3f      	lsrs	r7, r7, #8
 8025560:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025564:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025568:	433b      	orrs	r3, r7
 802556a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802556c:	2dff      	cmp	r5, #255	; 0xff
 802556e:	d020      	beq.n	80255b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025570:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025572:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025576:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025578:	436f      	muls	r7, r5
 802557a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802557c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025580:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025582:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025586:	fb05 fa0a 	mul.w	sl, r5, sl
 802558a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802558e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025592:	44bc      	add	ip, r7
 8025594:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025598:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802559c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80255a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80255ac:	ea4c 050a 	orr.w	r5, ip, sl
 80255b0:	950d      	str	r5, [sp, #52]	; 0x34
 80255b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80255b4:	2dff      	cmp	r5, #255	; 0xff
 80255b6:	d020      	beq.n	80255fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80255b8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80255ba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80255be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80255c0:	436f      	muls	r7, r5
 80255c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80255c4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80255c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80255ca:	fb05 fa0c 	mul.w	sl, r5, ip
 80255ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80255d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80255da:	44bc      	add	ip, r7
 80255dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80255e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80255e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80255ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80255f4:	ea4c 050a 	orr.w	r5, ip, sl
 80255f8:	9509      	str	r5, [sp, #36]	; 0x24
 80255fa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80255fc:	2dff      	cmp	r5, #255	; 0xff
 80255fe:	d020      	beq.n	8025642 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025600:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025602:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025606:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025608:	436f      	muls	r7, r5
 802560a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802560c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025610:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025612:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025616:	fb05 fa0a 	mul.w	sl, r5, sl
 802561a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802561e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025622:	44bc      	add	ip, r7
 8025624:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025628:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802562c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025630:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025634:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025638:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802563c:	ea4c 050a 	orr.w	r5, ip, sl
 8025640:	950e      	str	r5, [sp, #56]	; 0x38
 8025642:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025644:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025648:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802564a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802564e:	fb0e f707 	mul.w	r7, lr, r7
 8025652:	fb01 770c 	mla	r7, r1, ip, r7
 8025656:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802565a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802565c:	fb00 770c 	mla	r7, r0, ip, r7
 8025660:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025664:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025666:	fb09 770c 	mla	r7, r9, ip, r7
 802566a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802566e:	fb0e fe0c 	mul.w	lr, lr, ip
 8025672:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025676:	fb01 e303 	mla	r3, r1, r3, lr
 802567a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802567c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025680:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025682:	fb00 330a 	mla	r3, r0, sl, r3
 8025686:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802568a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802568e:	0a3f      	lsrs	r7, r7, #8
 8025690:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025694:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025698:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802569c:	ea47 070c 	orr.w	r7, r7, ip
 80256a0:	2aff      	cmp	r2, #255	; 0xff
 80256a2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80256a6:	d11e      	bne.n	80256e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80256a8:	097a      	lsrs	r2, r7, #5
 80256aa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80256ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80256b2:	f023 0307 	bic.w	r3, r3, #7
 80256b6:	4313      	orrs	r3, r2
 80256b8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80256bc:	431f      	orrs	r7, r3
 80256be:	f8a8 7000 	strh.w	r7, [r8]
 80256c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80256c4:	441c      	add	r4, r3
 80256c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80256c8:	f108 0802 	add.w	r8, r8, #2
 80256cc:	441e      	add	r6, r3
 80256ce:	f10b 3bff 	add.w	fp, fp, #4294967295
 80256d2:	e644      	b.n	802535e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80256d4:	2800      	cmp	r0, #0
 80256d6:	f43f af0b 	beq.w	80254f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80256da:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80256de:	9109      	str	r1, [sp, #36]	; 0x24
 80256e0:	0e09      	lsrs	r1, r1, #24
 80256e2:	9111      	str	r1, [sp, #68]	; 0x44
 80256e4:	e704      	b.n	80254f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80256e6:	f8b8 1000 	ldrh.w	r1, [r8]
 80256ea:	43d2      	mvns	r2, r2
 80256ec:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80256f0:	fa5f fe82 	uxtb.w	lr, r2
 80256f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80256f8:	fb0c fc0e 	mul.w	ip, ip, lr
 80256fc:	10c8      	asrs	r0, r1, #3
 80256fe:	00ca      	lsls	r2, r1, #3
 8025700:	f10c 0101 	add.w	r1, ip, #1
 8025704:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025708:	0c39      	lsrs	r1, r7, #16
 802570a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802570e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025712:	4911      	ldr	r1, [pc, #68]	; (8025758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025714:	fb00 f00e 	mul.w	r0, r0, lr
 8025718:	fa5f fc8c 	uxtb.w	ip, ip
 802571c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025720:	b2d2      	uxtb	r2, r2
 8025722:	1c41      	adds	r1, r0, #1
 8025724:	fb02 f20e 	mul.w	r2, r2, lr
 8025728:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802572c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025730:	1c51      	adds	r1, r2, #1
 8025732:	00c0      	lsls	r0, r0, #3
 8025734:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025738:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802573c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025740:	ea4c 0c00 	orr.w	ip, ip, r0
 8025744:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025748:	ea47 0c0c 	orr.w	ip, r7, ip
 802574c:	f8a8 c000 	strh.w	ip, [r8]
 8025750:	e7b7      	b.n	80256c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025752:	b01b      	add	sp, #108	; 0x6c
 8025754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025758:	fffff800 	.word	0xfffff800

0802575c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802575c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025760:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025764:	2d00      	cmp	r5, #0
 8025766:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802576a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802576e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025772:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025776:	fb05 0e03 	mla	lr, r5, r3, r0
 802577a:	f2c0 808c 	blt.w	8025896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802577e:	45a9      	cmp	r9, r5
 8025780:	f340 8089 	ble.w	8025896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025784:	2800      	cmp	r0, #0
 8025786:	f2c0 8084 	blt.w	8025892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802578a:	4580      	cmp	r8, r0
 802578c:	f340 8081 	ble.w	8025892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025790:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025794:	f01e 0f01 	tst.w	lr, #1
 8025798:	5d16      	ldrb	r6, [r2, r4]
 802579a:	bf0c      	ite	eq
 802579c:	f006 060f 	andeq.w	r6, r6, #15
 80257a0:	1136      	asrne	r6, r6, #4
 80257a2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80257a6:	b2f6      	uxtb	r6, r6
 80257a8:	1c44      	adds	r4, r0, #1
 80257aa:	d477      	bmi.n	802589c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80257ac:	45a0      	cmp	r8, r4
 80257ae:	dd75      	ble.n	802589c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80257b0:	2f00      	cmp	r7, #0
 80257b2:	d075      	beq.n	80258a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80257b4:	f10e 0a01 	add.w	sl, lr, #1
 80257b8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80257bc:	f01a 0f01 	tst.w	sl, #1
 80257c0:	5d14      	ldrb	r4, [r2, r4]
 80257c2:	bf0c      	ite	eq
 80257c4:	f004 040f 	andeq.w	r4, r4, #15
 80257c8:	1124      	asrne	r4, r4, #4
 80257ca:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80257ce:	b2e4      	uxtb	r4, r4
 80257d0:	3501      	adds	r5, #1
 80257d2:	d469      	bmi.n	80258a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80257d4:	45a9      	cmp	r9, r5
 80257d6:	dd67      	ble.n	80258a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80257d8:	f1bc 0f00 	cmp.w	ip, #0
 80257dc:	d067      	beq.n	80258ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80257de:	2800      	cmp	r0, #0
 80257e0:	db60      	blt.n	80258a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80257e2:	4580      	cmp	r8, r0
 80257e4:	dd5e      	ble.n	80258a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80257e6:	eb03 090e 	add.w	r9, r3, lr
 80257ea:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80257ee:	f019 0f01 	tst.w	r9, #1
 80257f2:	5d55      	ldrb	r5, [r2, r5]
 80257f4:	bf0c      	ite	eq
 80257f6:	f005 050f 	andeq.w	r5, r5, #15
 80257fa:	112d      	asrne	r5, r5, #4
 80257fc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025800:	b2ed      	uxtb	r5, r5
 8025802:	3001      	adds	r0, #1
 8025804:	d456      	bmi.n	80258b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025806:	4580      	cmp	r8, r0
 8025808:	dd54      	ble.n	80258b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802580a:	2f00      	cmp	r7, #0
 802580c:	d054      	beq.n	80258b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802580e:	3301      	adds	r3, #1
 8025810:	449e      	add	lr, r3
 8025812:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025816:	f01e 0f01 	tst.w	lr, #1
 802581a:	5cd0      	ldrb	r0, [r2, r3]
 802581c:	bf0c      	ite	eq
 802581e:	f000 000f 	andeq.w	r0, r0, #15
 8025822:	1100      	asrne	r0, r0, #4
 8025824:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025828:	b2c3      	uxtb	r3, r0
 802582a:	b2ba      	uxth	r2, r7
 802582c:	fa1f fc8c 	uxth.w	ip, ip
 8025830:	fb02 f00c 	mul.w	r0, r2, ip
 8025834:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025838:	0112      	lsls	r2, r2, #4
 802583a:	fa1f fc8c 	uxth.w	ip, ip
 802583e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025842:	1a12      	subs	r2, r2, r0
 8025844:	eba7 070c 	sub.w	r7, r7, ip
 8025848:	b292      	uxth	r2, r2
 802584a:	b2bf      	uxth	r7, r7
 802584c:	4362      	muls	r2, r4
 802584e:	fb06 2207 	mla	r2, r6, r7, r2
 8025852:	fb0c 2505 	mla	r5, ip, r5, r2
 8025856:	fb00 5303 	mla	r3, r0, r3, r5
 802585a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802585e:	b1b3      	cbz	r3, 802588e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025860:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8025864:	435a      	muls	r2, r3
 8025866:	1c53      	adds	r3, r2, #1
 8025868:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802586c:	4a2d      	ldr	r2, [pc, #180]	; (8025924 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802586e:	121b      	asrs	r3, r3, #8
 8025870:	6812      	ldr	r2, [r2, #0]
 8025872:	2bff      	cmp	r3, #255	; 0xff
 8025874:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025878:	d120      	bne.n	80258bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802587a:	4b2b      	ldr	r3, [pc, #172]	; (8025928 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802587c:	0950      	lsrs	r0, r2, #5
 802587e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025882:	4033      	ands	r3, r6
 8025884:	4318      	orrs	r0, r3
 8025886:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802588a:	4302      	orrs	r2, r0
 802588c:	800a      	strh	r2, [r1, #0]
 802588e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025892:	2600      	movs	r6, #0
 8025894:	e788      	b.n	80257a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025896:	2400      	movs	r4, #0
 8025898:	4626      	mov	r6, r4
 802589a:	e799      	b.n	80257d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802589c:	2400      	movs	r4, #0
 802589e:	e797      	b.n	80257d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80258a0:	463c      	mov	r4, r7
 80258a2:	e795      	b.n	80257d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80258a4:	2500      	movs	r5, #0
 80258a6:	e7ac      	b.n	8025802 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80258a8:	2300      	movs	r3, #0
 80258aa:	461d      	mov	r5, r3
 80258ac:	e7bd      	b.n	802582a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80258ae:	4663      	mov	r3, ip
 80258b0:	4665      	mov	r5, ip
 80258b2:	e7ba      	b.n	802582a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80258b4:	2300      	movs	r3, #0
 80258b6:	e7b8      	b.n	802582a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80258b8:	463b      	mov	r3, r7
 80258ba:	e7b6      	b.n	802582a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80258bc:	880d      	ldrh	r5, [r1, #0]
 80258be:	b29f      	uxth	r7, r3
 80258c0:	122c      	asrs	r4, r5, #8
 80258c2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80258c6:	43db      	mvns	r3, r3
 80258c8:	b2db      	uxtb	r3, r3
 80258ca:	fb10 f007 	smulbb	r0, r0, r7
 80258ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80258d2:	fb04 0403 	mla	r4, r4, r3, r0
 80258d6:	b2f6      	uxtb	r6, r6
 80258d8:	10e8      	asrs	r0, r5, #3
 80258da:	b2d2      	uxtb	r2, r2
 80258dc:	00ed      	lsls	r5, r5, #3
 80258de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80258e2:	fb12 f207 	smulbb	r2, r2, r7
 80258e6:	fb16 f607 	smulbb	r6, r6, r7
 80258ea:	b2ed      	uxtb	r5, r5
 80258ec:	b2a4      	uxth	r4, r4
 80258ee:	fb00 6603 	mla	r6, r0, r3, r6
 80258f2:	fb05 2303 	mla	r3, r5, r3, r2
 80258f6:	b29a      	uxth	r2, r3
 80258f8:	1c63      	adds	r3, r4, #1
 80258fa:	b2b0      	uxth	r0, r6
 80258fc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025900:	1c53      	adds	r3, r2, #1
 8025902:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025906:	1c42      	adds	r2, r0, #1
 8025908:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802590c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025910:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025914:	0940      	lsrs	r0, r0, #5
 8025916:	4323      	orrs	r3, r4
 8025918:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802591c:	4303      	orrs	r3, r0
 802591e:	800b      	strh	r3, [r1, #0]
 8025920:	e7b5      	b.n	802588e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025922:	bf00      	nop
 8025924:	20012fd4 	.word	0x20012fd4
 8025928:	00fff800 	.word	0x00fff800

0802592c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802592c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025930:	b097      	sub	sp, #92	; 0x5c
 8025932:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025936:	9214      	str	r2, [sp, #80]	; 0x50
 8025938:	9309      	str	r3, [sp, #36]	; 0x24
 802593a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802593c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025940:	910d      	str	r1, [sp, #52]	; 0x34
 8025942:	930f      	str	r3, [sp, #60]	; 0x3c
 8025944:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025948:	9015      	str	r0, [sp, #84]	; 0x54
 802594a:	6850      	ldr	r0, [r2, #4]
 802594c:	6812      	ldr	r2, [r2, #0]
 802594e:	fb00 1303 	mla	r3, r0, r3, r1
 8025952:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025956:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025958:	689b      	ldr	r3, [r3, #8]
 802595a:	3301      	adds	r3, #1
 802595c:	f023 0301 	bic.w	r3, r3, #1
 8025960:	930a      	str	r3, [sp, #40]	; 0x28
 8025962:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025964:	681f      	ldr	r7, [r3, #0]
 8025966:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025968:	2b00      	cmp	r3, #0
 802596a:	dc03      	bgt.n	8025974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802596c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802596e:	2b00      	cmp	r3, #0
 8025970:	f340 8287 	ble.w	8025e82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025974:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025976:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802597a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802597e:	1e48      	subs	r0, r1, #1
 8025980:	f102 3cff 	add.w	ip, r2, #4294967295
 8025984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025986:	2b00      	cmp	r3, #0
 8025988:	f340 80c4 	ble.w	8025b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802598c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025990:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025994:	d406      	bmi.n	80259a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025996:	4586      	cmp	lr, r0
 8025998:	da04      	bge.n	80259a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802599a:	2b00      	cmp	r3, #0
 802599c:	db02      	blt.n	80259a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802599e:	4563      	cmp	r3, ip
 80259a0:	f2c0 80b9 	blt.w	8025b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80259a4:	f11e 0e01 	adds.w	lr, lr, #1
 80259a8:	f100 80aa 	bmi.w	8025b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80259ac:	4571      	cmp	r1, lr
 80259ae:	f2c0 80a7 	blt.w	8025b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80259b2:	3301      	adds	r3, #1
 80259b4:	f100 80a4 	bmi.w	8025b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80259b8:	429a      	cmp	r2, r3
 80259ba:	f2c0 80a1 	blt.w	8025b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80259be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80259c0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80259c4:	930e      	str	r3, [sp, #56]	; 0x38
 80259c6:	46c8      	mov	r8, r9
 80259c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80259ca:	2b00      	cmp	r3, #0
 80259cc:	f340 80c3 	ble.w	8025b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80259d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80259d2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80259d6:	1423      	asrs	r3, r4, #16
 80259d8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80259dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80259e4:	f100 814d 	bmi.w	8025c82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80259e8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80259ec:	455b      	cmp	r3, fp
 80259ee:	f280 8148 	bge.w	8025c82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80259f2:	2800      	cmp	r0, #0
 80259f4:	f2c0 8145 	blt.w	8025c82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80259f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80259fc:	4558      	cmp	r0, fp
 80259fe:	f280 8140 	bge.w	8025c82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025a02:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025a04:	fb00 3305 	mla	r3, r0, r5, r3
 8025a08:	0858      	lsrs	r0, r3, #1
 8025a0a:	07dd      	lsls	r5, r3, #31
 8025a0c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025a10:	bf54      	ite	pl
 8025a12:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025a16:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025a1a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a1e:	fa5f fc8c 	uxtb.w	ip, ip
 8025a22:	2a00      	cmp	r2, #0
 8025a24:	f000 80db 	beq.w	8025bde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025a28:	1c58      	adds	r0, r3, #1
 8025a2a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025a2e:	07c0      	lsls	r0, r0, #31
 8025a30:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025a34:	bf54      	ite	pl
 8025a36:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025a3a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025a3e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025a42:	fa5f f08e 	uxtb.w	r0, lr
 8025a46:	9010      	str	r0, [sp, #64]	; 0x40
 8025a48:	b1c9      	cbz	r1, 8025a7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025a4a:	4453      	add	r3, sl
 8025a4c:	0858      	lsrs	r0, r3, #1
 8025a4e:	07dd      	lsls	r5, r3, #31
 8025a50:	5c38      	ldrb	r0, [r7, r0]
 8025a52:	bf54      	ite	pl
 8025a54:	f000 000f 	andpl.w	r0, r0, #15
 8025a58:	1100      	asrmi	r0, r0, #4
 8025a5a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025a5e:	3301      	adds	r3, #1
 8025a60:	b2c0      	uxtb	r0, r0
 8025a62:	900b      	str	r0, [sp, #44]	; 0x2c
 8025a64:	0858      	lsrs	r0, r3, #1
 8025a66:	07dd      	lsls	r5, r3, #31
 8025a68:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025a6c:	bf54      	ite	pl
 8025a6e:	f00e 030f 	andpl.w	r3, lr, #15
 8025a72:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025a76:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025a7a:	b2db      	uxtb	r3, r3
 8025a7c:	9311      	str	r3, [sp, #68]	; 0x44
 8025a7e:	b292      	uxth	r2, r2
 8025a80:	b289      	uxth	r1, r1
 8025a82:	fb02 f301 	mul.w	r3, r2, r1
 8025a86:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025a8a:	0112      	lsls	r2, r2, #4
 8025a8c:	b289      	uxth	r1, r1
 8025a8e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025a92:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025a94:	1ad2      	subs	r2, r2, r3
 8025a96:	1a40      	subs	r0, r0, r1
 8025a98:	b292      	uxth	r2, r2
 8025a9a:	436a      	muls	r2, r5
 8025a9c:	b280      	uxth	r0, r0
 8025a9e:	fb0c 2c00 	mla	ip, ip, r0, r2
 8025aa2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025aa4:	fb01 c102 	mla	r1, r1, r2, ip
 8025aa8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025aaa:	fb03 1302 	mla	r3, r3, r2, r1
 8025aae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ab2:	b1db      	cbz	r3, 8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025ab4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025ab6:	4353      	muls	r3, r2
 8025ab8:	1c5a      	adds	r2, r3, #1
 8025aba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025abe:	4ac6      	ldr	r2, [pc, #792]	; (8025dd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025ac0:	121b      	asrs	r3, r3, #8
 8025ac2:	6812      	ldr	r2, [r2, #0]
 8025ac4:	2bff      	cmp	r3, #255	; 0xff
 8025ac6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025aca:	f040 8099 	bne.w	8025c00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8025ace:	0953      	lsrs	r3, r2, #5
 8025ad0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025ad4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025ad8:	f02c 0c07 	bic.w	ip, ip, #7
 8025adc:	ea43 0c0c 	orr.w	ip, r3, ip
 8025ae0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025ae4:	ea4c 0202 	orr.w	r2, ip, r2
 8025ae8:	f8a8 2000 	strh.w	r2, [r8]
 8025aec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025aee:	441c      	add	r4, r3
 8025af0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025af2:	441e      	add	r6, r3
 8025af4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025af6:	3b01      	subs	r3, #1
 8025af8:	f108 0802 	add.w	r8, r8, #2
 8025afc:	930e      	str	r3, [sp, #56]	; 0x38
 8025afe:	e763      	b.n	80259c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8025b00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025b02:	441c      	add	r4, r3
 8025b04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b06:	441e      	add	r6, r3
 8025b08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025b0a:	3b01      	subs	r3, #1
 8025b0c:	9309      	str	r3, [sp, #36]	; 0x24
 8025b0e:	f109 0902 	add.w	r9, r9, #2
 8025b12:	e737      	b.n	8025984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025b14:	d024      	beq.n	8025b60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025b18:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025b1a:	3b01      	subs	r3, #1
 8025b1c:	fb00 4003 	mla	r0, r0, r3, r4
 8025b20:	1400      	asrs	r0, r0, #16
 8025b22:	f53f af4c 	bmi.w	80259be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025b26:	3901      	subs	r1, #1
 8025b28:	4288      	cmp	r0, r1
 8025b2a:	f6bf af48 	bge.w	80259be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025b2e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8025b30:	fb01 6303 	mla	r3, r1, r3, r6
 8025b34:	141b      	asrs	r3, r3, #16
 8025b36:	f53f af42 	bmi.w	80259be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025b3a:	3a01      	subs	r2, #1
 8025b3c:	4293      	cmp	r3, r2
 8025b3e:	f6bf af3e 	bge.w	80259be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025b42:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025b46:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025b4a:	930e      	str	r3, [sp, #56]	; 0x38
 8025b4c:	46c8      	mov	r8, r9
 8025b4e:	f1bb 0f00 	cmp.w	fp, #0
 8025b52:	f300 80b7 	bgt.w	8025cc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025b56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025b58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025b5c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025b60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025b62:	2b00      	cmp	r3, #0
 8025b64:	f340 818d 	ble.w	8025e82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025b68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025b6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025b70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025b74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025b76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025b7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025b7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025b82:	eef0 6a62 	vmov.f32	s13, s5
 8025b86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025b8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025b8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025b92:	ee16 4a90 	vmov	r4, s13
 8025b96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025b9a:	eef0 6a43 	vmov.f32	s13, s6
 8025b9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025ba2:	ee12 2a90 	vmov	r2, s5
 8025ba6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8025bae:	ee13 2a10 	vmov	r2, s6
 8025bb2:	9323      	str	r3, [sp, #140]	; 0x8c
 8025bb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025bb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8025bba:	9324      	str	r3, [sp, #144]	; 0x90
 8025bbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025bbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025bc0:	3b01      	subs	r3, #1
 8025bc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025bc6:	930d      	str	r3, [sp, #52]	; 0x34
 8025bc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025bca:	bf08      	it	eq
 8025bcc:	4613      	moveq	r3, r2
 8025bce:	ee16 6a90 	vmov	r6, s13
 8025bd2:	9309      	str	r3, [sp, #36]	; 0x24
 8025bd4:	eeb0 3a67 	vmov.f32	s6, s15
 8025bd8:	eef0 2a47 	vmov.f32	s5, s14
 8025bdc:	e6c3      	b.n	8025966 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025bde:	2900      	cmp	r1, #0
 8025be0:	f43f af4d 	beq.w	8025a7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025be4:	eb0a 0003 	add.w	r0, sl, r3
 8025be8:	0843      	lsrs	r3, r0, #1
 8025bea:	07c0      	lsls	r0, r0, #31
 8025bec:	5cfb      	ldrb	r3, [r7, r3]
 8025bee:	bf54      	ite	pl
 8025bf0:	f003 030f 	andpl.w	r3, r3, #15
 8025bf4:	111b      	asrmi	r3, r3, #4
 8025bf6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025bfa:	b2db      	uxtb	r3, r3
 8025bfc:	930b      	str	r3, [sp, #44]	; 0x2c
 8025bfe:	e73e      	b.n	8025a7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025c00:	f8b8 e000 	ldrh.w	lr, [r8]
 8025c04:	fa1f fb83 	uxth.w	fp, r3
 8025c08:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025c0c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025c10:	43db      	mvns	r3, r3
 8025c12:	b2db      	uxtb	r3, r3
 8025c14:	fb11 f10b 	smulbb	r1, r1, fp
 8025c18:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025c1c:	fb00 1003 	mla	r0, r0, r3, r1
 8025c20:	fa5f fc8c 	uxtb.w	ip, ip
 8025c24:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025c28:	b2d2      	uxtb	r2, r2
 8025c2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025c2e:	b280      	uxth	r0, r0
 8025c30:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025c34:	fb1c fc0b 	smulbb	ip, ip, fp
 8025c38:	fa5f fe8e 	uxtb.w	lr, lr
 8025c3c:	fb12 fb0b 	smulbb	fp, r2, fp
 8025c40:	fb01 cc03 	mla	ip, r1, r3, ip
 8025c44:	fb0e bb03 	mla	fp, lr, r3, fp
 8025c48:	1c43      	adds	r3, r0, #1
 8025c4a:	fa1f fc8c 	uxth.w	ip, ip
 8025c4e:	fa1f fb8b 	uxth.w	fp, fp
 8025c52:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025c56:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025c5a:	f10c 0101 	add.w	r1, ip, #1
 8025c5e:	f10b 0001 	add.w	r0, fp, #1
 8025c62:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025c66:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025c6a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025c6e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025c72:	4318      	orrs	r0, r3
 8025c74:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025c78:	ea40 000c 	orr.w	r0, r0, ip
 8025c7c:	f8a8 0000 	strh.w	r0, [r8]
 8025c80:	e734      	b.n	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c82:	f113 0b01 	adds.w	fp, r3, #1
 8025c86:	f53f af31 	bmi.w	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c8a:	45dc      	cmp	ip, fp
 8025c8c:	f6ff af2e 	blt.w	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c90:	f110 0b01 	adds.w	fp, r0, #1
 8025c94:	f53f af2a 	bmi.w	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c98:	45de      	cmp	lr, fp
 8025c9a:	f6ff af27 	blt.w	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025c9e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025ca0:	9302      	str	r3, [sp, #8]
 8025ca2:	fa0f f38e 	sxth.w	r3, lr
 8025ca6:	9301      	str	r3, [sp, #4]
 8025ca8:	fa0f f38c 	sxth.w	r3, ip
 8025cac:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025cb0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025cb4:	9300      	str	r3, [sp, #0]
 8025cb6:	463a      	mov	r2, r7
 8025cb8:	4653      	mov	r3, sl
 8025cba:	4641      	mov	r1, r8
 8025cbc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025cbe:	f7ff fd4d 	bl	802575c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025cc2:	e713      	b.n	8025aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025cc4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025cc6:	1422      	asrs	r2, r4, #16
 8025cc8:	1433      	asrs	r3, r6, #16
 8025cca:	fb05 2303 	mla	r3, r5, r3, r2
 8025cce:	085a      	lsrs	r2, r3, #1
 8025cd0:	07dd      	lsls	r5, r3, #31
 8025cd2:	5cba      	ldrb	r2, [r7, r2]
 8025cd4:	bf54      	ite	pl
 8025cd6:	f002 020f 	andpl.w	r2, r2, #15
 8025cda:	1112      	asrmi	r2, r2, #4
 8025cdc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025ce0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025ce4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025ce8:	b2d2      	uxtb	r2, r2
 8025cea:	2900      	cmp	r1, #0
 8025cec:	d076      	beq.n	8025ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025cee:	f103 0e01 	add.w	lr, r3, #1
 8025cf2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025cf6:	f01e 0f01 	tst.w	lr, #1
 8025cfa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025cfe:	bf0c      	ite	eq
 8025d00:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025d04:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025d08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025d0c:	fa5f f58c 	uxtb.w	r5, ip
 8025d10:	9512      	str	r5, [sp, #72]	; 0x48
 8025d12:	b300      	cbz	r0, 8025d56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025d14:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025d16:	442b      	add	r3, r5
 8025d18:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025d1c:	07dd      	lsls	r5, r3, #31
 8025d1e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025d22:	bf54      	ite	pl
 8025d24:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025d28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025d2c:	3301      	adds	r3, #1
 8025d2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025d32:	fa5f f58c 	uxtb.w	r5, ip
 8025d36:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025d3a:	950c      	str	r5, [sp, #48]	; 0x30
 8025d3c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025d40:	07dd      	lsls	r5, r3, #31
 8025d42:	bf54      	ite	pl
 8025d44:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025d48:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025d4c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025d50:	fa5f f38c 	uxtb.w	r3, ip
 8025d54:	9313      	str	r3, [sp, #76]	; 0x4c
 8025d56:	b289      	uxth	r1, r1
 8025d58:	b280      	uxth	r0, r0
 8025d5a:	fb01 f300 	mul.w	r3, r1, r0
 8025d5e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025d62:	0109      	lsls	r1, r1, #4
 8025d64:	b280      	uxth	r0, r0
 8025d66:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025d6a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025d6c:	1ac9      	subs	r1, r1, r3
 8025d6e:	ebac 0c00 	sub.w	ip, ip, r0
 8025d72:	b289      	uxth	r1, r1
 8025d74:	4369      	muls	r1, r5
 8025d76:	fa1f fc8c 	uxth.w	ip, ip
 8025d7a:	fb02 120c 	mla	r2, r2, ip, r1
 8025d7e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025d80:	fb00 2001 	mla	r0, r0, r1, r2
 8025d84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025d86:	fb03 0302 	mla	r3, r3, r2, r0
 8025d8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025d8e:	b1d3      	cbz	r3, 8025dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025d90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025d92:	4353      	muls	r3, r2
 8025d94:	1c5a      	adds	r2, r3, #1
 8025d96:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025d9a:	4a0f      	ldr	r2, [pc, #60]	; (8025dd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025d9c:	121b      	asrs	r3, r3, #8
 8025d9e:	6812      	ldr	r2, [r2, #0]
 8025da0:	2bff      	cmp	r3, #255	; 0xff
 8025da2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025da6:	d12d      	bne.n	8025e04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025da8:	0953      	lsrs	r3, r2, #5
 8025daa:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025dae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025db2:	f02c 0c07 	bic.w	ip, ip, #7
 8025db6:	ea43 0c0c 	orr.w	ip, r3, ip
 8025dba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025dbe:	ea4c 0202 	orr.w	r2, ip, r2
 8025dc2:	f8a8 2000 	strh.w	r2, [r8]
 8025dc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025dc8:	441c      	add	r4, r3
 8025dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dcc:	f108 0802 	add.w	r8, r8, #2
 8025dd0:	441e      	add	r6, r3
 8025dd2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025dd6:	e6ba      	b.n	8025b4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025dd8:	20012fd4 	.word	0x20012fd4
 8025ddc:	2800      	cmp	r0, #0
 8025dde:	d0ba      	beq.n	8025d56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025de0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025de2:	442b      	add	r3, r5
 8025de4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025de8:	07db      	lsls	r3, r3, #31
 8025dea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025dee:	bf54      	ite	pl
 8025df0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025df4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025df8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025dfc:	fa5f f38c 	uxtb.w	r3, ip
 8025e00:	930c      	str	r3, [sp, #48]	; 0x30
 8025e02:	e7a8      	b.n	8025d56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025e04:	f8b8 e000 	ldrh.w	lr, [r8]
 8025e08:	fa1f fa83 	uxth.w	sl, r3
 8025e0c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025e10:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025e14:	43db      	mvns	r3, r3
 8025e16:	b2db      	uxtb	r3, r3
 8025e18:	fb11 f10a 	smulbb	r1, r1, sl
 8025e1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025e20:	fb00 1003 	mla	r0, r0, r3, r1
 8025e24:	b2d2      	uxtb	r2, r2
 8025e26:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025e2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025e2e:	fa5f fe8e 	uxtb.w	lr, lr
 8025e32:	fb12 f20a 	smulbb	r2, r2, sl
 8025e36:	fb0e 2203 	mla	r2, lr, r3, r2
 8025e3a:	fa5f fc8c 	uxtb.w	ip, ip
 8025e3e:	b280      	uxth	r0, r0
 8025e40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025e44:	b292      	uxth	r2, r2
 8025e46:	fb1c fc0a 	smulbb	ip, ip, sl
 8025e4a:	fb01 cc03 	mla	ip, r1, r3, ip
 8025e4e:	1c43      	adds	r3, r0, #1
 8025e50:	1c51      	adds	r1, r2, #1
 8025e52:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025e56:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025e5a:	fa1f fc8c 	uxth.w	ip, ip
 8025e5e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025e62:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025e66:	4308      	orrs	r0, r1
 8025e68:	f10c 0101 	add.w	r1, ip, #1
 8025e6c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025e70:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025e74:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025e78:	ea40 000c 	orr.w	r0, r0, ip
 8025e7c:	f8a8 0000 	strh.w	r0, [r8]
 8025e80:	e7a1      	b.n	8025dc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025e82:	b017      	add	sp, #92	; 0x5c
 8025e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025e88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025e8c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025e90:	2d00      	cmp	r5, #0
 8025e92:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025e96:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025e9a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025e9e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025ea2:	fb05 0e03 	mla	lr, r5, r3, r0
 8025ea6:	f2c0 80b0 	blt.w	802600a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025eaa:	45a9      	cmp	r9, r5
 8025eac:	f340 80ad 	ble.w	802600a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025eb0:	2800      	cmp	r0, #0
 8025eb2:	f2c0 80a8 	blt.w	8026006 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025eb6:	4580      	cmp	r8, r0
 8025eb8:	f340 80a5 	ble.w	8026006 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025ebc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025ec0:	f01e 0f01 	tst.w	lr, #1
 8025ec4:	5d16      	ldrb	r6, [r2, r4]
 8025ec6:	bf0c      	ite	eq
 8025ec8:	f006 060f 	andeq.w	r6, r6, #15
 8025ecc:	1136      	asrne	r6, r6, #4
 8025ece:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025ed2:	b2f6      	uxtb	r6, r6
 8025ed4:	1c44      	adds	r4, r0, #1
 8025ed6:	f100 809b 	bmi.w	8026010 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025eda:	45a0      	cmp	r8, r4
 8025edc:	f340 8098 	ble.w	8026010 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025ee0:	2f00      	cmp	r7, #0
 8025ee2:	f000 8097 	beq.w	8026014 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025ee6:	f10e 0a01 	add.w	sl, lr, #1
 8025eea:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025eee:	f01a 0f01 	tst.w	sl, #1
 8025ef2:	5d14      	ldrb	r4, [r2, r4]
 8025ef4:	bf0c      	ite	eq
 8025ef6:	f004 040f 	andeq.w	r4, r4, #15
 8025efa:	1124      	asrne	r4, r4, #4
 8025efc:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025f00:	b2e4      	uxtb	r4, r4
 8025f02:	3501      	adds	r5, #1
 8025f04:	f100 808a 	bmi.w	802601c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025f08:	45a9      	cmp	r9, r5
 8025f0a:	f340 8087 	ble.w	802601c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025f0e:	f1bc 0f00 	cmp.w	ip, #0
 8025f12:	f000 8086 	beq.w	8026022 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025f16:	2800      	cmp	r0, #0
 8025f18:	db7e      	blt.n	8026018 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025f1a:	4580      	cmp	r8, r0
 8025f1c:	dd7c      	ble.n	8026018 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025f1e:	eb03 090e 	add.w	r9, r3, lr
 8025f22:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025f26:	f019 0f01 	tst.w	r9, #1
 8025f2a:	5d55      	ldrb	r5, [r2, r5]
 8025f2c:	bf0c      	ite	eq
 8025f2e:	f005 050f 	andeq.w	r5, r5, #15
 8025f32:	112d      	asrne	r5, r5, #4
 8025f34:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025f38:	b2ed      	uxtb	r5, r5
 8025f3a:	3001      	adds	r0, #1
 8025f3c:	d474      	bmi.n	8026028 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025f3e:	4580      	cmp	r8, r0
 8025f40:	dd72      	ble.n	8026028 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025f42:	2f00      	cmp	r7, #0
 8025f44:	d072      	beq.n	802602c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025f46:	3301      	adds	r3, #1
 8025f48:	449e      	add	lr, r3
 8025f4a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025f4e:	f01e 0f01 	tst.w	lr, #1
 8025f52:	5cd0      	ldrb	r0, [r2, r3]
 8025f54:	bf0c      	ite	eq
 8025f56:	f000 000f 	andeq.w	r0, r0, #15
 8025f5a:	1100      	asrne	r0, r0, #4
 8025f5c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025f60:	b2c3      	uxtb	r3, r0
 8025f62:	b2ba      	uxth	r2, r7
 8025f64:	fa1f fc8c 	uxth.w	ip, ip
 8025f68:	fb02 f00c 	mul.w	r0, r2, ip
 8025f6c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025f70:	0112      	lsls	r2, r2, #4
 8025f72:	fa1f fc8c 	uxth.w	ip, ip
 8025f76:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025f7a:	1a12      	subs	r2, r2, r0
 8025f7c:	eba7 070c 	sub.w	r7, r7, ip
 8025f80:	b292      	uxth	r2, r2
 8025f82:	b2bf      	uxth	r7, r7
 8025f84:	4362      	muls	r2, r4
 8025f86:	fb06 2207 	mla	r2, r6, r7, r2
 8025f8a:	fb0c 2505 	mla	r5, ip, r5, r2
 8025f8e:	fb00 5303 	mla	r3, r0, r3, r5
 8025f92:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025f96:	b3a3      	cbz	r3, 8026002 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025f98:	4a25      	ldr	r2, [pc, #148]	; (8026030 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025f9a:	880e      	ldrh	r6, [r1, #0]
 8025f9c:	6815      	ldr	r5, [r2, #0]
 8025f9e:	1234      	asrs	r4, r6, #8
 8025fa0:	b29a      	uxth	r2, r3
 8025fa2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025fa6:	43db      	mvns	r3, r3
 8025fa8:	b2db      	uxtb	r3, r3
 8025faa:	fb10 f002 	smulbb	r0, r0, r2
 8025fae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025fb2:	fb04 0403 	mla	r4, r4, r3, r0
 8025fb6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025fba:	10f0      	asrs	r0, r6, #3
 8025fbc:	b2ed      	uxtb	r5, r5
 8025fbe:	00f6      	lsls	r6, r6, #3
 8025fc0:	fb17 f702 	smulbb	r7, r7, r2
 8025fc4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025fc8:	fb15 f202 	smulbb	r2, r5, r2
 8025fcc:	b2f6      	uxtb	r6, r6
 8025fce:	b2a4      	uxth	r4, r4
 8025fd0:	fb00 7003 	mla	r0, r0, r3, r7
 8025fd4:	fb06 2303 	mla	r3, r6, r3, r2
 8025fd8:	b29a      	uxth	r2, r3
 8025fda:	1c63      	adds	r3, r4, #1
 8025fdc:	b280      	uxth	r0, r0
 8025fde:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025fe2:	1c53      	adds	r3, r2, #1
 8025fe4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025fe8:	1c42      	adds	r2, r0, #1
 8025fea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025fee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025ff2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025ff6:	0940      	lsrs	r0, r0, #5
 8025ff8:	4323      	orrs	r3, r4
 8025ffa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ffe:	4303      	orrs	r3, r0
 8026000:	800b      	strh	r3, [r1, #0]
 8026002:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026006:	2600      	movs	r6, #0
 8026008:	e764      	b.n	8025ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802600a:	2400      	movs	r4, #0
 802600c:	4626      	mov	r6, r4
 802600e:	e778      	b.n	8025f02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026010:	2400      	movs	r4, #0
 8026012:	e776      	b.n	8025f02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026014:	463c      	mov	r4, r7
 8026016:	e774      	b.n	8025f02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026018:	2500      	movs	r5, #0
 802601a:	e78e      	b.n	8025f3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802601c:	2300      	movs	r3, #0
 802601e:	461d      	mov	r5, r3
 8026020:	e79f      	b.n	8025f62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026022:	4663      	mov	r3, ip
 8026024:	4665      	mov	r5, ip
 8026026:	e79c      	b.n	8025f62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026028:	2300      	movs	r3, #0
 802602a:	e79a      	b.n	8025f62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802602c:	463b      	mov	r3, r7
 802602e:	e798      	b.n	8025f62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026030:	20012fd4 	.word	0x20012fd4

08026034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026038:	b093      	sub	sp, #76	; 0x4c
 802603a:	461d      	mov	r5, r3
 802603c:	920c      	str	r2, [sp, #48]	; 0x30
 802603e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026040:	9107      	str	r1, [sp, #28]
 8026042:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026046:	9011      	str	r0, [sp, #68]	; 0x44
 8026048:	6850      	ldr	r0, [r2, #4]
 802604a:	6812      	ldr	r2, [r2, #0]
 802604c:	fb00 1303 	mla	r3, r0, r3, r1
 8026050:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026054:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026056:	689b      	ldr	r3, [r3, #8]
 8026058:	3301      	adds	r3, #1
 802605a:	f023 0301 	bic.w	r3, r3, #1
 802605e:	9306      	str	r3, [sp, #24]
 8026060:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026062:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026066:	681f      	ldr	r7, [r3, #0]
 8026068:	9b07      	ldr	r3, [sp, #28]
 802606a:	2b00      	cmp	r3, #0
 802606c:	dc03      	bgt.n	8026076 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802606e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026070:	2b00      	cmp	r3, #0
 8026072:	f340 8267 	ble.w	8026544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026076:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026078:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802607c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026080:	1e48      	subs	r0, r1, #1
 8026082:	f102 3cff 	add.w	ip, r2, #4294967295
 8026086:	2d00      	cmp	r5, #0
 8026088:	f340 80b8 	ble.w	80261fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802608c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026090:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026094:	d406      	bmi.n	80260a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026096:	4586      	cmp	lr, r0
 8026098:	da04      	bge.n	80260a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802609a:	2b00      	cmp	r3, #0
 802609c:	db02      	blt.n	80260a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802609e:	4563      	cmp	r3, ip
 80260a0:	f2c0 80ad 	blt.w	80261fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80260a4:	f11e 0e01 	adds.w	lr, lr, #1
 80260a8:	f100 80a0 	bmi.w	80261ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80260ac:	4571      	cmp	r1, lr
 80260ae:	f2c0 809d 	blt.w	80261ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80260b2:	3301      	adds	r3, #1
 80260b4:	f100 809a 	bmi.w	80261ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80260b8:	429a      	cmp	r2, r3
 80260ba:	f2c0 8097 	blt.w	80261ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80260be:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80260c2:	9509      	str	r5, [sp, #36]	; 0x24
 80260c4:	46c8      	mov	r8, r9
 80260c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260c8:	2b00      	cmp	r3, #0
 80260ca:	f340 80b6 	ble.w	802623a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80260ce:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80260d2:	9308      	str	r3, [sp, #32]
 80260d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80260d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80260da:	1423      	asrs	r3, r4, #16
 80260dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80260e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80260e4:	f100 813e 	bmi.w	8026364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80260e8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80260ec:	455b      	cmp	r3, fp
 80260ee:	f280 8139 	bge.w	8026364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80260f2:	2800      	cmp	r0, #0
 80260f4:	f2c0 8136 	blt.w	8026364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80260f8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80260fc:	4558      	cmp	r0, fp
 80260fe:	f280 8131 	bge.w	8026364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026102:	9a06      	ldr	r2, [sp, #24]
 8026104:	fb00 3302 	mla	r3, r0, r2, r3
 8026108:	0858      	lsrs	r0, r3, #1
 802610a:	07da      	lsls	r2, r3, #31
 802610c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026110:	9a08      	ldr	r2, [sp, #32]
 8026112:	bf54      	ite	pl
 8026114:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026118:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802611c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026120:	fa5f fc8c 	uxtb.w	ip, ip
 8026124:	2a00      	cmp	r2, #0
 8026126:	f000 80cb 	beq.w	80262c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802612a:	1c58      	adds	r0, r3, #1
 802612c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026130:	07c0      	lsls	r0, r0, #31
 8026132:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026136:	bf54      	ite	pl
 8026138:	f00e 0e0f 	andpl.w	lr, lr, #15
 802613c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026140:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026144:	fa5f fe8e 	uxtb.w	lr, lr
 8026148:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802614c:	b1b9      	cbz	r1, 802617e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802614e:	4453      	add	r3, sl
 8026150:	0858      	lsrs	r0, r3, #1
 8026152:	07da      	lsls	r2, r3, #31
 8026154:	5c38      	ldrb	r0, [r7, r0]
 8026156:	bf54      	ite	pl
 8026158:	f000 000f 	andpl.w	r0, r0, #15
 802615c:	1100      	asrmi	r0, r0, #4
 802615e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026162:	b2c0      	uxtb	r0, r0
 8026164:	900a      	str	r0, [sp, #40]	; 0x28
 8026166:	1c58      	adds	r0, r3, #1
 8026168:	0843      	lsrs	r3, r0, #1
 802616a:	07c2      	lsls	r2, r0, #31
 802616c:	5cfb      	ldrb	r3, [r7, r3]
 802616e:	bf54      	ite	pl
 8026170:	f003 030f 	andpl.w	r3, r3, #15
 8026174:	111b      	asrmi	r3, r3, #4
 8026176:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802617a:	b2db      	uxtb	r3, r3
 802617c:	930e      	str	r3, [sp, #56]	; 0x38
 802617e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8026182:	b289      	uxth	r1, r1
 8026184:	fb02 f301 	mul.w	r3, r2, r1
 8026188:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802618c:	0112      	lsls	r2, r2, #4
 802618e:	b289      	uxth	r1, r1
 8026190:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026194:	1a40      	subs	r0, r0, r1
 8026196:	fa1f fe80 	uxth.w	lr, r0
 802619a:	1ad2      	subs	r2, r2, r3
 802619c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802619e:	b292      	uxth	r2, r2
 80261a0:	4342      	muls	r2, r0
 80261a2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80261a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80261a8:	fb01 c102 	mla	r1, r1, r2, ip
 80261ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80261ae:	fb03 1302 	mla	r3, r3, r2, r1
 80261b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80261b6:	2bff      	cmp	r3, #255	; 0xff
 80261b8:	f040 8093 	bne.w	80262e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80261bc:	4bbe      	ldr	r3, [pc, #760]	; (80264b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80261be:	681a      	ldr	r2, [r3, #0]
 80261c0:	4bbe      	ldr	r3, [pc, #760]	; (80264bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80261c2:	0951      	lsrs	r1, r2, #5
 80261c4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80261c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80261cc:	430b      	orrs	r3, r1
 80261ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80261d2:	4313      	orrs	r3, r2
 80261d4:	f8a8 3000 	strh.w	r3, [r8]
 80261d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80261da:	441c      	add	r4, r3
 80261dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261de:	441e      	add	r6, r3
 80261e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80261e2:	3b01      	subs	r3, #1
 80261e4:	f108 0802 	add.w	r8, r8, #2
 80261e8:	9309      	str	r3, [sp, #36]	; 0x24
 80261ea:	e76c      	b.n	80260c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80261ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80261ee:	441c      	add	r4, r3
 80261f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80261f2:	3d01      	subs	r5, #1
 80261f4:	441e      	add	r6, r3
 80261f6:	f109 0902 	add.w	r9, r9, #2
 80261fa:	e744      	b.n	8026086 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80261fc:	d021      	beq.n	8026242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80261fe:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026200:	1e6b      	subs	r3, r5, #1
 8026202:	fb00 4003 	mla	r0, r0, r3, r4
 8026206:	1400      	asrs	r0, r0, #16
 8026208:	f53f af59 	bmi.w	80260be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802620c:	3901      	subs	r1, #1
 802620e:	4288      	cmp	r0, r1
 8026210:	f6bf af55 	bge.w	80260be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026214:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026216:	fb01 6303 	mla	r3, r1, r3, r6
 802621a:	141b      	asrs	r3, r3, #16
 802621c:	f53f af4f 	bmi.w	80260be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026220:	3a01      	subs	r2, #1
 8026222:	4293      	cmp	r3, r2
 8026224:	f6bf af4b 	bge.w	80260be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026228:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802622c:	9308      	str	r3, [sp, #32]
 802622e:	46a8      	mov	r8, r5
 8026230:	46ce      	mov	lr, r9
 8026232:	f1b8 0f00 	cmp.w	r8, #0
 8026236:	f300 80b5 	bgt.w	80263a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802623a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802623e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026242:	9b07      	ldr	r3, [sp, #28]
 8026244:	2b00      	cmp	r3, #0
 8026246:	f340 817d 	ble.w	8026544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802624a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802624e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026252:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026256:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026258:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802625c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026260:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026264:	eef0 6a62 	vmov.f32	s13, s5
 8026268:	ee61 7a27 	vmul.f32	s15, s2, s15
 802626c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026270:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026274:	ee16 4a90 	vmov	r4, s13
 8026278:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802627c:	eef0 6a43 	vmov.f32	s13, s6
 8026280:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026284:	ee12 2a90 	vmov	r2, s5
 8026288:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802628c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026290:	ee13 2a10 	vmov	r2, s6
 8026294:	931f      	str	r3, [sp, #124]	; 0x7c
 8026296:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026298:	fb92 f3f3 	sdiv	r3, r2, r3
 802629c:	9320      	str	r3, [sp, #128]	; 0x80
 802629e:	9b07      	ldr	r3, [sp, #28]
 80262a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80262a2:	3b01      	subs	r3, #1
 80262a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262a8:	9307      	str	r3, [sp, #28]
 80262aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80262ac:	ee16 6a90 	vmov	r6, s13
 80262b0:	bf14      	ite	ne
 80262b2:	461d      	movne	r5, r3
 80262b4:	4615      	moveq	r5, r2
 80262b6:	eeb0 3a67 	vmov.f32	s6, s15
 80262ba:	eef0 2a47 	vmov.f32	s5, s14
 80262be:	e6d3      	b.n	8026068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80262c0:	2900      	cmp	r1, #0
 80262c2:	f43f af5c 	beq.w	802617e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80262c6:	eb0a 0003 	add.w	r0, sl, r3
 80262ca:	0843      	lsrs	r3, r0, #1
 80262cc:	07c0      	lsls	r0, r0, #31
 80262ce:	5cfb      	ldrb	r3, [r7, r3]
 80262d0:	bf54      	ite	pl
 80262d2:	f003 030f 	andpl.w	r3, r3, #15
 80262d6:	111b      	asrmi	r3, r3, #4
 80262d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80262dc:	b2db      	uxtb	r3, r3
 80262de:	930a      	str	r3, [sp, #40]	; 0x28
 80262e0:	e74d      	b.n	802617e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80262e2:	2b00      	cmp	r3, #0
 80262e4:	f43f af78 	beq.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80262e8:	4a73      	ldr	r2, [pc, #460]	; (80264b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80262ea:	f8b8 c000 	ldrh.w	ip, [r8]
 80262ee:	6810      	ldr	r0, [r2, #0]
 80262f0:	fa1f fe83 	uxth.w	lr, r3
 80262f4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80262f8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80262fc:	43db      	mvns	r3, r3
 80262fe:	b2db      	uxtb	r3, r3
 8026300:	fb12 f20e 	smulbb	r2, r2, lr
 8026304:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026308:	fb01 2103 	mla	r1, r1, r3, r2
 802630c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026310:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026314:	b2c0      	uxtb	r0, r0
 8026316:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802631a:	fb1b fb0e 	smulbb	fp, fp, lr
 802631e:	b289      	uxth	r1, r1
 8026320:	fb10 fe0e 	smulbb	lr, r0, lr
 8026324:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026328:	fa5f fc8c 	uxtb.w	ip, ip
 802632c:	fb02 b203 	mla	r2, r2, r3, fp
 8026330:	1c48      	adds	r0, r1, #1
 8026332:	fb0c e303 	mla	r3, ip, r3, lr
 8026336:	b292      	uxth	r2, r2
 8026338:	b29b      	uxth	r3, r3
 802633a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802633e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8026342:	f102 0b01 	add.w	fp, r2, #1
 8026346:	1c59      	adds	r1, r3, #1
 8026348:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802634c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026350:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026354:	0952      	lsrs	r2, r2, #5
 8026356:	4301      	orrs	r1, r0
 8026358:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802635c:	4311      	orrs	r1, r2
 802635e:	f8a8 1000 	strh.w	r1, [r8]
 8026362:	e739      	b.n	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026364:	f113 0b01 	adds.w	fp, r3, #1
 8026368:	f53f af36 	bmi.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802636c:	45dc      	cmp	ip, fp
 802636e:	f6ff af33 	blt.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026372:	f110 0b01 	adds.w	fp, r0, #1
 8026376:	f53f af2f 	bmi.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802637a:	45de      	cmp	lr, fp
 802637c:	f6ff af2c 	blt.w	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026380:	9a08      	ldr	r2, [sp, #32]
 8026382:	9302      	str	r3, [sp, #8]
 8026384:	fa0f f38e 	sxth.w	r3, lr
 8026388:	9301      	str	r3, [sp, #4]
 802638a:	fa0f f38c 	sxth.w	r3, ip
 802638e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026392:	9105      	str	r1, [sp, #20]
 8026394:	9300      	str	r3, [sp, #0]
 8026396:	463a      	mov	r2, r7
 8026398:	4653      	mov	r3, sl
 802639a:	4641      	mov	r1, r8
 802639c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802639e:	f7ff fd73 	bl	8025e88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80263a2:	e719      	b.n	80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80263a4:	9906      	ldr	r1, [sp, #24]
 80263a6:	1422      	asrs	r2, r4, #16
 80263a8:	1433      	asrs	r3, r6, #16
 80263aa:	fb01 2303 	mla	r3, r1, r3, r2
 80263ae:	085a      	lsrs	r2, r3, #1
 80263b0:	07d9      	lsls	r1, r3, #31
 80263b2:	5cba      	ldrb	r2, [r7, r2]
 80263b4:	bf54      	ite	pl
 80263b6:	f002 020f 	andpl.w	r2, r2, #15
 80263ba:	1112      	asrmi	r2, r2, #4
 80263bc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80263c0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80263c4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80263c8:	b2d2      	uxtb	r2, r2
 80263ca:	2800      	cmp	r0, #0
 80263cc:	d062      	beq.n	8026494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80263ce:	f103 0a01 	add.w	sl, r3, #1
 80263d2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80263d6:	f01a 0f01 	tst.w	sl, #1
 80263da:	5c79      	ldrb	r1, [r7, r1]
 80263dc:	bf0c      	ite	eq
 80263de:	f001 010f 	andeq.w	r1, r1, #15
 80263e2:	1109      	asrne	r1, r1, #4
 80263e4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80263e8:	b2c9      	uxtb	r1, r1
 80263ea:	910f      	str	r1, [sp, #60]	; 0x3c
 80263ec:	f1bc 0f00 	cmp.w	ip, #0
 80263f0:	d019      	beq.n	8026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80263f2:	9908      	ldr	r1, [sp, #32]
 80263f4:	440b      	add	r3, r1
 80263f6:	0859      	lsrs	r1, r3, #1
 80263f8:	f013 0f01 	tst.w	r3, #1
 80263fc:	5c79      	ldrb	r1, [r7, r1]
 80263fe:	bf0c      	ite	eq
 8026400:	f001 010f 	andeq.w	r1, r1, #15
 8026404:	1109      	asrne	r1, r1, #4
 8026406:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802640a:	b2c9      	uxtb	r1, r1
 802640c:	3301      	adds	r3, #1
 802640e:	910b      	str	r1, [sp, #44]	; 0x2c
 8026410:	0859      	lsrs	r1, r3, #1
 8026412:	07db      	lsls	r3, r3, #31
 8026414:	5c79      	ldrb	r1, [r7, r1]
 8026416:	bf54      	ite	pl
 8026418:	f001 010f 	andpl.w	r1, r1, #15
 802641c:	1109      	asrmi	r1, r1, #4
 802641e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026422:	b2c9      	uxtb	r1, r1
 8026424:	9110      	str	r1, [sp, #64]	; 0x40
 8026426:	b280      	uxth	r0, r0
 8026428:	fa1f fc8c 	uxth.w	ip, ip
 802642c:	fb00 f30c 	mul.w	r3, r0, ip
 8026430:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026434:	0100      	lsls	r0, r0, #4
 8026436:	fa1f fc8c 	uxth.w	ip, ip
 802643a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802643e:	eba1 010c 	sub.w	r1, r1, ip
 8026442:	fa1f fa81 	uxth.w	sl, r1
 8026446:	1ac0      	subs	r0, r0, r3
 8026448:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802644a:	b280      	uxth	r0, r0
 802644c:	4348      	muls	r0, r1
 802644e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026450:	fb02 020a 	mla	r2, r2, sl, r0
 8026454:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026458:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802645a:	fb03 c302 	mla	r3, r3, r2, ip
 802645e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026462:	2bff      	cmp	r3, #255	; 0xff
 8026464:	d12c      	bne.n	80264c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026466:	4b14      	ldr	r3, [pc, #80]	; (80264b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026468:	681a      	ldr	r2, [r3, #0]
 802646a:	4b14      	ldr	r3, [pc, #80]	; (80264bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802646c:	0951      	lsrs	r1, r2, #5
 802646e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026472:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026476:	430b      	orrs	r3, r1
 8026478:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802647c:	4313      	orrs	r3, r2
 802647e:	f8ae 3000 	strh.w	r3, [lr]
 8026482:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026484:	441c      	add	r4, r3
 8026486:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026488:	f10e 0e02 	add.w	lr, lr, #2
 802648c:	441e      	add	r6, r3
 802648e:	f108 38ff 	add.w	r8, r8, #4294967295
 8026492:	e6ce      	b.n	8026232 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026494:	f1bc 0f00 	cmp.w	ip, #0
 8026498:	d0c5      	beq.n	8026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802649a:	9908      	ldr	r1, [sp, #32]
 802649c:	440b      	add	r3, r1
 802649e:	0859      	lsrs	r1, r3, #1
 80264a0:	07db      	lsls	r3, r3, #31
 80264a2:	5c79      	ldrb	r1, [r7, r1]
 80264a4:	bf54      	ite	pl
 80264a6:	f001 010f 	andpl.w	r1, r1, #15
 80264aa:	1109      	asrmi	r1, r1, #4
 80264ac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80264b0:	b2c9      	uxtb	r1, r1
 80264b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80264b4:	e7b7      	b.n	8026426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80264b6:	bf00      	nop
 80264b8:	20012fd4 	.word	0x20012fd4
 80264bc:	fffff800 	.word	0xfffff800
 80264c0:	2b00      	cmp	r3, #0
 80264c2:	d0de      	beq.n	8026482 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80264c4:	4a21      	ldr	r2, [pc, #132]	; (802654c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80264c6:	f8be c000 	ldrh.w	ip, [lr]
 80264ca:	6810      	ldr	r0, [r2, #0]
 80264cc:	fa1f fa83 	uxth.w	sl, r3
 80264d0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80264d4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80264d8:	43db      	mvns	r3, r3
 80264da:	b2db      	uxtb	r3, r3
 80264dc:	fb12 f20a 	smulbb	r2, r2, sl
 80264e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80264e4:	fb01 2103 	mla	r1, r1, r3, r2
 80264e8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80264ec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80264f0:	b2c0      	uxtb	r0, r0
 80264f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80264f6:	fa5f fc8c 	uxtb.w	ip, ip
 80264fa:	fb10 f00a 	smulbb	r0, r0, sl
 80264fe:	fb0c 0003 	mla	r0, ip, r3, r0
 8026502:	b289      	uxth	r1, r1
 8026504:	fb1b fb0a 	smulbb	fp, fp, sl
 8026508:	b280      	uxth	r0, r0
 802650a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802650e:	fb02 b203 	mla	r2, r2, r3, fp
 8026512:	1c4b      	adds	r3, r1, #1
 8026514:	f100 0b01 	add.w	fp, r0, #1
 8026518:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802651c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026520:	b292      	uxth	r2, r2
 8026522:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026526:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802652a:	ea4b 0101 	orr.w	r1, fp, r1
 802652e:	f102 0b01 	add.w	fp, r2, #1
 8026532:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026536:	0952      	lsrs	r2, r2, #5
 8026538:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802653c:	4311      	orrs	r1, r2
 802653e:	f8ae 1000 	strh.w	r1, [lr]
 8026542:	e79e      	b.n	8026482 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026544:	b013      	add	sp, #76	; 0x4c
 8026546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802654a:	bf00      	nop
 802654c:	20012fd4 	.word	0x20012fd4

08026550 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026550:	b570      	push	{r4, r5, r6, lr}
 8026552:	1208      	asrs	r0, r1, #8
 8026554:	b29e      	uxth	r6, r3
 8026556:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802655a:	1213      	asrs	r3, r2, #8
 802655c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026560:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026564:	fb13 f305 	smulbb	r3, r3, r5
 8026568:	fb10 f006 	smulbb	r0, r0, r6
 802656c:	4418      	add	r0, r3
 802656e:	10cc      	asrs	r4, r1, #3
 8026570:	10d3      	asrs	r3, r2, #3
 8026572:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026576:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802657a:	fb13 f305 	smulbb	r3, r3, r5
 802657e:	fb14 f406 	smulbb	r4, r4, r6
 8026582:	00c9      	lsls	r1, r1, #3
 8026584:	00d2      	lsls	r2, r2, #3
 8026586:	441c      	add	r4, r3
 8026588:	b2d2      	uxtb	r2, r2
 802658a:	b2cb      	uxtb	r3, r1
 802658c:	fb12 f205 	smulbb	r2, r2, r5
 8026590:	b280      	uxth	r0, r0
 8026592:	fb13 f306 	smulbb	r3, r3, r6
 8026596:	4413      	add	r3, r2
 8026598:	1c42      	adds	r2, r0, #1
 802659a:	b29b      	uxth	r3, r3
 802659c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80265a0:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80265a4:	1c58      	adds	r0, r3, #1
 80265a6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80265aa:	b2a4      	uxth	r4, r4
 80265ac:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80265b0:	4310      	orrs	r0, r2
 80265b2:	1c62      	adds	r2, r4, #1
 80265b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80265b8:	0964      	lsrs	r4, r4, #5
 80265ba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80265be:	4320      	orrs	r0, r4
 80265c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080265c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80265c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265c8:	b08f      	sub	sp, #60	; 0x3c
 80265ca:	461c      	mov	r4, r3
 80265cc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80265d0:	9004      	str	r0, [sp, #16]
 80265d2:	460d      	mov	r5, r1
 80265d4:	4616      	mov	r6, r2
 80265d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80265d8:	2f00      	cmp	r7, #0
 80265da:	f000 80f6 	beq.w	80267ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80265de:	6820      	ldr	r0, [r4, #0]
 80265e0:	6861      	ldr	r1, [r4, #4]
 80265e2:	aa0a      	add	r2, sp, #40	; 0x28
 80265e4:	c203      	stmia	r2!, {r0, r1}
 80265e6:	6818      	ldr	r0, [r3, #0]
 80265e8:	6859      	ldr	r1, [r3, #4]
 80265ea:	aa0c      	add	r2, sp, #48	; 0x30
 80265ec:	c203      	stmia	r2!, {r0, r1}
 80265ee:	a80a      	add	r0, sp, #40	; 0x28
 80265f0:	f7ef fa5e 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80265f4:	4621      	mov	r1, r4
 80265f6:	a80c      	add	r0, sp, #48	; 0x30
 80265f8:	f7ef fa9e 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80265fc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026600:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026604:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026608:	f002 0301 	and.w	r3, r2, #1
 802660c:	9306      	str	r3, [sp, #24]
 802660e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026612:	f003 0101 	and.w	r1, r3, #1
 8026616:	9105      	str	r1, [sp, #20]
 8026618:	9805      	ldr	r0, [sp, #20]
 802661a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802661e:	4403      	add	r3, r0
 8026620:	fb01 2303 	mla	r3, r1, r3, r2
 8026624:	f04f 0802 	mov.w	r8, #2
 8026628:	fb93 f3f8 	sdiv	r3, r3, r8
 802662c:	441d      	add	r5, r3
 802662e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026632:	441a      	add	r2, r3
 8026634:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026638:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802663c:	4419      	add	r1, r3
 802663e:	4b64      	ldr	r3, [pc, #400]	; (80267d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026640:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026644:	6818      	ldr	r0, [r3, #0]
 8026646:	6803      	ldr	r3, [r0, #0]
 8026648:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802664a:	4798      	blx	r3
 802664c:	4a61      	ldr	r2, [pc, #388]	; (80267d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802664e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026652:	8813      	ldrh	r3, [r2, #0]
 8026654:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026658:	2fff      	cmp	r7, #255	; 0xff
 802665a:	fb03 a404 	mla	r4, r3, r4, sl
 802665e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026662:	f106 0604 	add.w	r6, r6, #4
 8026666:	4611      	mov	r1, r2
 8026668:	fb03 fb0b 	mul.w	fp, r3, fp
 802666c:	d06b      	beq.n	8026746 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802666e:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8026672:	9303      	str	r3, [sp, #12]
 8026674:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026678:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802667c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026680:	9b07      	ldr	r3, [sp, #28]
 8026682:	42a3      	cmp	r3, r4
 8026684:	f240 809c 	bls.w	80267c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026688:	9b06      	ldr	r3, [sp, #24]
 802668a:	2b00      	cmp	r3, #0
 802668c:	d039      	beq.n	8026702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802668e:	782b      	ldrb	r3, [r5, #0]
 8026690:	8822      	ldrh	r2, [r4, #0]
 8026692:	9804      	ldr	r0, [sp, #16]
 8026694:	f003 030f 	and.w	r3, r3, #15
 8026698:	f105 0801 	add.w	r8, r5, #1
 802669c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80266a0:	9b03      	ldr	r3, [sp, #12]
 80266a2:	9300      	str	r3, [sp, #0]
 80266a4:	463b      	mov	r3, r7
 80266a6:	f7ff ff53 	bl	8026550 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80266aa:	f824 0b02 	strh.w	r0, [r4], #2
 80266ae:	f109 3bff 	add.w	fp, r9, #4294967295
 80266b2:	f1bb 0f01 	cmp.w	fp, #1
 80266b6:	46a2      	mov	sl, r4
 80266b8:	f104 0404 	add.w	r4, r4, #4
 80266bc:	dd24      	ble.n	8026708 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80266be:	f898 3000 	ldrb.w	r3, [r8]
 80266c2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80266c6:	9804      	ldr	r0, [sp, #16]
 80266c8:	091b      	lsrs	r3, r3, #4
 80266ca:	f1ab 0b02 	sub.w	fp, fp, #2
 80266ce:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80266d2:	9b03      	ldr	r3, [sp, #12]
 80266d4:	9300      	str	r3, [sp, #0]
 80266d6:	463b      	mov	r3, r7
 80266d8:	f7ff ff3a 	bl	8026550 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80266dc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80266e0:	f818 3b01 	ldrb.w	r3, [r8], #1
 80266e4:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80266e8:	9804      	ldr	r0, [sp, #16]
 80266ea:	f003 030f 	and.w	r3, r3, #15
 80266ee:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80266f2:	9b03      	ldr	r3, [sp, #12]
 80266f4:	9300      	str	r3, [sp, #0]
 80266f6:	463b      	mov	r3, r7
 80266f8:	f7ff ff2a 	bl	8026550 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80266fc:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026700:	e7d7      	b.n	80266b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026702:	46a8      	mov	r8, r5
 8026704:	46cb      	mov	fp, r9
 8026706:	e7d4      	b.n	80266b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026708:	d10e      	bne.n	8026728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802670a:	f898 3000 	ldrb.w	r3, [r8]
 802670e:	f8ba 2000 	ldrh.w	r2, [sl]
 8026712:	9804      	ldr	r0, [sp, #16]
 8026714:	091b      	lsrs	r3, r3, #4
 8026716:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802671a:	9b03      	ldr	r3, [sp, #12]
 802671c:	9300      	str	r3, [sp, #0]
 802671e:	463b      	mov	r3, r7
 8026720:	f7ff ff16 	bl	8026550 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026724:	f82a 0b02 	strh.w	r0, [sl], #2
 8026728:	9b08      	ldr	r3, [sp, #32]
 802672a:	9a05      	ldr	r2, [sp, #20]
 802672c:	881c      	ldrh	r4, [r3, #0]
 802672e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026732:	eba4 0409 	sub.w	r4, r4, r9
 8026736:	4413      	add	r3, r2
 8026738:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 802673c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802673e:	fb93 f3f2 	sdiv	r3, r3, r2
 8026742:	441d      	add	r5, r3
 8026744:	e79c      	b.n	8026680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026746:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802674a:	45a3      	cmp	fp, r4
 802674c:	d938      	bls.n	80267c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802674e:	9b06      	ldr	r3, [sp, #24]
 8026750:	b1f3      	cbz	r3, 8026790 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8026752:	782b      	ldrb	r3, [r5, #0]
 8026754:	f003 030f 	and.w	r3, r3, #15
 8026758:	1c6a      	adds	r2, r5, #1
 802675a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802675e:	8023      	strh	r3, [r4, #0]
 8026760:	f109 30ff 	add.w	r0, r9, #4294967295
 8026764:	3402      	adds	r4, #2
 8026766:	2801      	cmp	r0, #1
 8026768:	4623      	mov	r3, r4
 802676a:	f104 0404 	add.w	r4, r4, #4
 802676e:	dd12      	ble.n	8026796 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026770:	7813      	ldrb	r3, [r2, #0]
 8026772:	091b      	lsrs	r3, r3, #4
 8026774:	3802      	subs	r0, #2
 8026776:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802677a:	f824 3c04 	strh.w	r3, [r4, #-4]
 802677e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8026782:	f003 030f 	and.w	r3, r3, #15
 8026786:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802678a:	f824 3c02 	strh.w	r3, [r4, #-2]
 802678e:	e7ea      	b.n	8026766 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026790:	462a      	mov	r2, r5
 8026792:	4648      	mov	r0, r9
 8026794:	e7e7      	b.n	8026766 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026796:	d106      	bne.n	80267a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026798:	7812      	ldrb	r2, [r2, #0]
 802679a:	0912      	lsrs	r2, r2, #4
 802679c:	3302      	adds	r3, #2
 802679e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80267a2:	f823 2c02 	strh.w	r2, [r3, #-2]
 80267a6:	880c      	ldrh	r4, [r1, #0]
 80267a8:	9a05      	ldr	r2, [sp, #20]
 80267aa:	eba4 0409 	sub.w	r4, r4, r9
 80267ae:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80267b2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80267b6:	4413      	add	r3, r2
 80267b8:	fb93 f3f8 	sdiv	r3, r3, r8
 80267bc:	441d      	add	r5, r3
 80267be:	e7c4      	b.n	802674a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80267c0:	4b03      	ldr	r3, [pc, #12]	; (80267d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80267c2:	6818      	ldr	r0, [r3, #0]
 80267c4:	6803      	ldr	r3, [r0, #0]
 80267c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80267c8:	4798      	blx	r3
 80267ca:	b00f      	add	sp, #60	; 0x3c
 80267cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80267d0:	20012fc4 	.word	0x20012fc4
 80267d4:	20012fbe 	.word	0x20012fbe

080267d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80267d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80267da:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80267de:	2dff      	cmp	r5, #255	; 0xff
 80267e0:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80267e4:	d10c      	bne.n	8026800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80267e6:	2bff      	cmp	r3, #255	; 0xff
 80267e8:	d10a      	bne.n	8026800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80267ea:	4b25      	ldr	r3, [pc, #148]	; (8026880 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80267ec:	0948      	lsrs	r0, r1, #5
 80267ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267f2:	403b      	ands	r3, r7
 80267f4:	4318      	orrs	r0, r3
 80267f6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80267fa:	4308      	orrs	r0, r1
 80267fc:	b280      	uxth	r0, r0
 80267fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026800:	fb15 f503 	smulbb	r5, r5, r3
 8026804:	b2ab      	uxth	r3, r5
 8026806:	1c5d      	adds	r5, r3, #1
 8026808:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 802680c:	1214      	asrs	r4, r2, #8
 802680e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026812:	fa1f fc85 	uxth.w	ip, r5
 8026816:	10d6      	asrs	r6, r2, #3
 8026818:	00d0      	lsls	r0, r2, #3
 802681a:	43ed      	mvns	r5, r5
 802681c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026820:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026824:	b2eb      	uxtb	r3, r5
 8026826:	b2c0      	uxtb	r0, r0
 8026828:	fb12 f20c 	smulbb	r2, r2, ip
 802682c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026830:	fb04 2403 	mla	r4, r4, r3, r2
 8026834:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026838:	b2c8      	uxtb	r0, r1
 802683a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802683e:	b2fd      	uxtb	r5, r7
 8026840:	fb10 f00c 	smulbb	r0, r0, ip
 8026844:	b2a4      	uxth	r4, r4
 8026846:	fb02 0003 	mla	r0, r2, r3, r0
 802684a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802684e:	fb15 f50c 	smulbb	r5, r5, ip
 8026852:	fb06 5503 	mla	r5, r6, r3, r5
 8026856:	b283      	uxth	r3, r0
 8026858:	1c60      	adds	r0, r4, #1
 802685a:	b2ad      	uxth	r5, r5
 802685c:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8026860:	1c58      	adds	r0, r3, #1
 8026862:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026866:	1c6b      	adds	r3, r5, #1
 8026868:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802686c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026870:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026874:	096d      	lsrs	r5, r5, #5
 8026876:	4320      	orrs	r0, r4
 8026878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802687c:	4328      	orrs	r0, r5
 802687e:	e7be      	b.n	80267fe <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026880:	00fff800 	.word	0x00fff800

08026884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026888:	461c      	mov	r4, r3
 802688a:	b08d      	sub	sp, #52	; 0x34
 802688c:	460d      	mov	r5, r1
 802688e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026890:	6861      	ldr	r1, [r4, #4]
 8026892:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026896:	4680      	mov	r8, r0
 8026898:	6820      	ldr	r0, [r4, #0]
 802689a:	4616      	mov	r6, r2
 802689c:	aa08      	add	r2, sp, #32
 802689e:	c203      	stmia	r2!, {r0, r1}
 80268a0:	6818      	ldr	r0, [r3, #0]
 80268a2:	6859      	ldr	r1, [r3, #4]
 80268a4:	aa0a      	add	r2, sp, #40	; 0x28
 80268a6:	c203      	stmia	r2!, {r0, r1}
 80268a8:	a808      	add	r0, sp, #32
 80268aa:	f7ef f901 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80268ae:	4621      	mov	r1, r4
 80268b0:	a80a      	add	r0, sp, #40	; 0x28
 80268b2:	f7ef f941 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80268b6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80268ba:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80268be:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80268c2:	f002 0301 	and.w	r3, r2, #1
 80268c6:	9303      	str	r3, [sp, #12]
 80268c8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80268cc:	f003 0101 	and.w	r1, r3, #1
 80268d0:	9102      	str	r1, [sp, #8]
 80268d2:	9802      	ldr	r0, [sp, #8]
 80268d4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80268d8:	4403      	add	r3, r0
 80268da:	fb01 2303 	mla	r3, r1, r3, r2
 80268de:	f04f 0a02 	mov.w	sl, #2
 80268e2:	fb93 f3fa 	sdiv	r3, r3, sl
 80268e6:	441d      	add	r5, r3
 80268e8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80268ec:	441a      	add	r2, r3
 80268ee:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80268f2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80268f6:	4a3f      	ldr	r2, [pc, #252]	; (80269f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80268f8:	9205      	str	r2, [sp, #20]
 80268fa:	4419      	add	r1, r3
 80268fc:	6810      	ldr	r0, [r2, #0]
 80268fe:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8026902:	6803      	ldr	r3, [r0, #0]
 8026904:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026906:	4798      	blx	r3
 8026908:	4b3b      	ldr	r3, [pc, #236]	; (80269f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802690a:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802690e:	8819      	ldrh	r1, [r3, #0]
 8026910:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026914:	fb01 c404 	mla	r4, r1, r4, ip
 8026918:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802691c:	434f      	muls	r7, r1
 802691e:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8026922:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026926:	3604      	adds	r6, #4
 8026928:	9204      	str	r2, [sp, #16]
 802692a:	9b04      	ldr	r3, [sp, #16]
 802692c:	429c      	cmp	r4, r3
 802692e:	d258      	bcs.n	80269e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026930:	9b03      	ldr	r3, [sp, #12]
 8026932:	2b00      	cmp	r3, #0
 8026934:	d034      	beq.n	80269a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026936:	782b      	ldrb	r3, [r5, #0]
 8026938:	f003 030f 	and.w	r3, r3, #15
 802693c:	1c6f      	adds	r7, r5, #1
 802693e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026942:	0e0b      	lsrs	r3, r1, #24
 8026944:	d006      	beq.n	8026954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026946:	8822      	ldrh	r2, [r4, #0]
 8026948:	9300      	str	r3, [sp, #0]
 802694a:	4640      	mov	r0, r8
 802694c:	464b      	mov	r3, r9
 802694e:	f7ff ff43 	bl	80267d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026952:	8020      	strh	r0, [r4, #0]
 8026954:	3402      	adds	r4, #2
 8026956:	f10b 3aff 	add.w	sl, fp, #4294967295
 802695a:	f1ba 0f01 	cmp.w	sl, #1
 802695e:	dd22      	ble.n	80269a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026960:	783b      	ldrb	r3, [r7, #0]
 8026962:	091b      	lsrs	r3, r3, #4
 8026964:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026968:	0e0b      	lsrs	r3, r1, #24
 802696a:	d006      	beq.n	802697a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 802696c:	8822      	ldrh	r2, [r4, #0]
 802696e:	9300      	str	r3, [sp, #0]
 8026970:	4640      	mov	r0, r8
 8026972:	464b      	mov	r3, r9
 8026974:	f7ff ff30 	bl	80267d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026978:	8020      	strh	r0, [r4, #0]
 802697a:	f817 3b01 	ldrb.w	r3, [r7], #1
 802697e:	f003 030f 	and.w	r3, r3, #15
 8026982:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026986:	0e0b      	lsrs	r3, r1, #24
 8026988:	d006      	beq.n	8026998 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802698a:	8862      	ldrh	r2, [r4, #2]
 802698c:	9300      	str	r3, [sp, #0]
 802698e:	4640      	mov	r0, r8
 8026990:	464b      	mov	r3, r9
 8026992:	f7ff ff21 	bl	80267d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026996:	8060      	strh	r0, [r4, #2]
 8026998:	3404      	adds	r4, #4
 802699a:	f1aa 0a02 	sub.w	sl, sl, #2
 802699e:	e7dc      	b.n	802695a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80269a0:	462f      	mov	r7, r5
 80269a2:	46da      	mov	sl, fp
 80269a4:	e7d9      	b.n	802695a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80269a6:	d10d      	bne.n	80269c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80269a8:	783b      	ldrb	r3, [r7, #0]
 80269aa:	091b      	lsrs	r3, r3, #4
 80269ac:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80269b0:	0e0b      	lsrs	r3, r1, #24
 80269b2:	d006      	beq.n	80269c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80269b4:	8822      	ldrh	r2, [r4, #0]
 80269b6:	9300      	str	r3, [sp, #0]
 80269b8:	4640      	mov	r0, r8
 80269ba:	464b      	mov	r3, r9
 80269bc:	f7ff ff0c 	bl	80267d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80269c0:	8020      	strh	r0, [r4, #0]
 80269c2:	3402      	adds	r4, #2
 80269c4:	9b06      	ldr	r3, [sp, #24]
 80269c6:	9a02      	ldr	r2, [sp, #8]
 80269c8:	881b      	ldrh	r3, [r3, #0]
 80269ca:	eba3 030b 	sub.w	r3, r3, fp
 80269ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80269d2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80269d6:	4413      	add	r3, r2
 80269d8:	9a07      	ldr	r2, [sp, #28]
 80269da:	fb93 f3f2 	sdiv	r3, r3, r2
 80269de:	441d      	add	r5, r3
 80269e0:	e7a3      	b.n	802692a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80269e2:	9b05      	ldr	r3, [sp, #20]
 80269e4:	6818      	ldr	r0, [r3, #0]
 80269e6:	6803      	ldr	r3, [r0, #0]
 80269e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80269ea:	4798      	blx	r3
 80269ec:	b00d      	add	sp, #52	; 0x34
 80269ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269f2:	bf00      	nop
 80269f4:	20012fc4 	.word	0x20012fc4
 80269f8:	20012fbe 	.word	0x20012fbe

080269fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80269fc:	b570      	push	{r4, r5, r6, lr}
 80269fe:	1214      	asrs	r4, r2, #8
 8026a00:	788d      	ldrb	r5, [r1, #2]
 8026a02:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026a06:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026a0a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026a0e:	fb15 f503 	smulbb	r5, r5, r3
 8026a12:	fb04 5506 	mla	r5, r4, r6, r5
 8026a16:	10d0      	asrs	r0, r2, #3
 8026a18:	784c      	ldrb	r4, [r1, #1]
 8026a1a:	7809      	ldrb	r1, [r1, #0]
 8026a1c:	00d2      	lsls	r2, r2, #3
 8026a1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026a22:	b2d2      	uxtb	r2, r2
 8026a24:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026a28:	fb14 f403 	smulbb	r4, r4, r3
 8026a2c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8026a30:	fb11 f303 	smulbb	r3, r1, r3
 8026a34:	fb00 4406 	mla	r4, r0, r6, r4
 8026a38:	fb02 3306 	mla	r3, r2, r6, r3
 8026a3c:	b2ad      	uxth	r5, r5
 8026a3e:	b29b      	uxth	r3, r3
 8026a40:	b2a4      	uxth	r4, r4
 8026a42:	1c68      	adds	r0, r5, #1
 8026a44:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026a48:	1c62      	adds	r2, r4, #1
 8026a4a:	1c58      	adds	r0, r3, #1
 8026a4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026a50:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026a54:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026a58:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026a5c:	0964      	lsrs	r4, r4, #5
 8026a5e:	4328      	orrs	r0, r5
 8026a60:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026a64:	4320      	orrs	r0, r4
 8026a66:	bd70      	pop	{r4, r5, r6, pc}

08026a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a6c:	b08f      	sub	sp, #60	; 0x3c
 8026a6e:	461c      	mov	r4, r3
 8026a70:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026a74:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026a76:	4682      	mov	sl, r0
 8026a78:	460e      	mov	r6, r1
 8026a7a:	4615      	mov	r5, r2
 8026a7c:	2f00      	cmp	r7, #0
 8026a7e:	f000 8142 	beq.w	8026d06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8026a82:	6820      	ldr	r0, [r4, #0]
 8026a84:	6861      	ldr	r1, [r4, #4]
 8026a86:	aa0a      	add	r2, sp, #40	; 0x28
 8026a88:	c203      	stmia	r2!, {r0, r1}
 8026a8a:	6818      	ldr	r0, [r3, #0]
 8026a8c:	6859      	ldr	r1, [r3, #4]
 8026a8e:	aa0c      	add	r2, sp, #48	; 0x30
 8026a90:	c203      	stmia	r2!, {r0, r1}
 8026a92:	a80a      	add	r0, sp, #40	; 0x28
 8026a94:	f7ef f80c 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026a98:	4621      	mov	r1, r4
 8026a9a:	a80c      	add	r0, sp, #48	; 0x30
 8026a9c:	f7ef f84c 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026aa0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026aa4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026aa8:	f002 0301 	and.w	r3, r2, #1
 8026aac:	9306      	str	r3, [sp, #24]
 8026aae:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026ab2:	f003 0101 	and.w	r1, r3, #1
 8026ab6:	9105      	str	r1, [sp, #20]
 8026ab8:	9805      	ldr	r0, [sp, #20]
 8026aba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026abe:	4403      	add	r3, r0
 8026ac0:	fb01 2303 	mla	r3, r1, r3, r2
 8026ac4:	f04f 0802 	mov.w	r8, #2
 8026ac8:	fb93 f3f8 	sdiv	r3, r3, r8
 8026acc:	441e      	add	r6, r3
 8026ace:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026ad2:	441a      	add	r2, r3
 8026ad4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026ad8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026adc:	4419      	add	r1, r3
 8026ade:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8026ae2:	9303      	str	r3, [sp, #12]
 8026ae4:	4b89      	ldr	r3, [pc, #548]	; (8026d0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026ae6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026aea:	6818      	ldr	r0, [r3, #0]
 8026aec:	6803      	ldr	r3, [r0, #0]
 8026aee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026af0:	4798      	blx	r3
 8026af2:	4a87      	ldr	r2, [pc, #540]	; (8026d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026af4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026af8:	8813      	ldrh	r3, [r2, #0]
 8026afa:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8026afe:	2fff      	cmp	r7, #255	; 0xff
 8026b00:	fb03 9404 	mla	r4, r3, r4, r9
 8026b04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026b08:	f105 0504 	add.w	r5, r5, #4
 8026b0c:	4694      	mov	ip, r2
 8026b0e:	fb03 f30b 	mul.w	r3, r3, fp
 8026b12:	d071      	beq.n	8026bf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026b14:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026b18:	43f9      	mvns	r1, r7
 8026b1a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026b1e:	b2c9      	uxtb	r1, r1
 8026b20:	9104      	str	r1, [sp, #16]
 8026b22:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026b26:	9b07      	ldr	r3, [sp, #28]
 8026b28:	42a3      	cmp	r3, r4
 8026b2a:	f240 80e7 	bls.w	8026cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026b2e:	9b06      	ldr	r3, [sp, #24]
 8026b30:	2b00      	cmp	r3, #0
 8026b32:	d03d      	beq.n	8026bb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026b34:	7831      	ldrb	r1, [r6, #0]
 8026b36:	9b04      	ldr	r3, [sp, #16]
 8026b38:	8822      	ldrh	r2, [r4, #0]
 8026b3a:	9300      	str	r3, [sp, #0]
 8026b3c:	f001 010f 	and.w	r1, r1, #15
 8026b40:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b44:	463b      	mov	r3, r7
 8026b46:	4429      	add	r1, r5
 8026b48:	4650      	mov	r0, sl
 8026b4a:	f7ff ff57 	bl	80269fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026b4e:	9b03      	ldr	r3, [sp, #12]
 8026b50:	f824 0b02 	strh.w	r0, [r4], #2
 8026b54:	f106 0801 	add.w	r8, r6, #1
 8026b58:	f103 3bff 	add.w	fp, r3, #4294967295
 8026b5c:	f1bb 0f01 	cmp.w	fp, #1
 8026b60:	46a1      	mov	r9, r4
 8026b62:	f104 0404 	add.w	r4, r4, #4
 8026b66:	dd27      	ble.n	8026bb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026b68:	f898 1000 	ldrb.w	r1, [r8]
 8026b6c:	9b04      	ldr	r3, [sp, #16]
 8026b6e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026b72:	9300      	str	r3, [sp, #0]
 8026b74:	0909      	lsrs	r1, r1, #4
 8026b76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b7a:	463b      	mov	r3, r7
 8026b7c:	4429      	add	r1, r5
 8026b7e:	4650      	mov	r0, sl
 8026b80:	f7ff ff3c 	bl	80269fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026b84:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026b88:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026b8c:	9b04      	ldr	r3, [sp, #16]
 8026b8e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026b92:	9300      	str	r3, [sp, #0]
 8026b94:	f001 010f 	and.w	r1, r1, #15
 8026b98:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026b9c:	463b      	mov	r3, r7
 8026b9e:	4429      	add	r1, r5
 8026ba0:	4650      	mov	r0, sl
 8026ba2:	f7ff ff2b 	bl	80269fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026ba6:	f1ab 0b02 	sub.w	fp, fp, #2
 8026baa:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026bae:	e7d5      	b.n	8026b5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026bb0:	46b0      	mov	r8, r6
 8026bb2:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026bb6:	e7d1      	b.n	8026b5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026bb8:	d10f      	bne.n	8026bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026bba:	f898 1000 	ldrb.w	r1, [r8]
 8026bbe:	9b04      	ldr	r3, [sp, #16]
 8026bc0:	f8b9 2000 	ldrh.w	r2, [r9]
 8026bc4:	9300      	str	r3, [sp, #0]
 8026bc6:	0909      	lsrs	r1, r1, #4
 8026bc8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026bcc:	463b      	mov	r3, r7
 8026bce:	4429      	add	r1, r5
 8026bd0:	4650      	mov	r0, sl
 8026bd2:	f7ff ff13 	bl	80269fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026bd6:	f829 0b02 	strh.w	r0, [r9], #2
 8026bda:	9b08      	ldr	r3, [sp, #32]
 8026bdc:	9a05      	ldr	r2, [sp, #20]
 8026bde:	881c      	ldrh	r4, [r3, #0]
 8026be0:	9b03      	ldr	r3, [sp, #12]
 8026be2:	1ae4      	subs	r4, r4, r3
 8026be4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026be8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026bec:	4413      	add	r3, r2
 8026bee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026bf0:	fb93 f3f2 	sdiv	r3, r3, r2
 8026bf4:	441e      	add	r6, r3
 8026bf6:	e796      	b.n	8026b26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026bf8:	4f46      	ldr	r7, [pc, #280]	; (8026d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026bfa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026bfe:	42a3      	cmp	r3, r4
 8026c00:	d97c      	bls.n	8026cfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8026c02:	9a06      	ldr	r2, [sp, #24]
 8026c04:	2a00      	cmp	r2, #0
 8026c06:	d054      	beq.n	8026cb2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026c08:	7830      	ldrb	r0, [r6, #0]
 8026c0a:	f000 000f 	and.w	r0, r0, #15
 8026c0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026c12:	eb05 0e00 	add.w	lr, r5, r0
 8026c16:	5c28      	ldrb	r0, [r5, r0]
 8026c18:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026c1c:	f89e e001 	ldrb.w	lr, [lr, #1]
 8026c20:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026c24:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026c28:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026c2c:	ea42 020e 	orr.w	r2, r2, lr
 8026c30:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026c34:	f824 2b02 	strh.w	r2, [r4], #2
 8026c38:	9a03      	ldr	r2, [sp, #12]
 8026c3a:	1c71      	adds	r1, r6, #1
 8026c3c:	f102 3eff 	add.w	lr, r2, #4294967295
 8026c40:	f1be 0f01 	cmp.w	lr, #1
 8026c44:	4620      	mov	r0, r4
 8026c46:	f104 0404 	add.w	r4, r4, #4
 8026c4a:	dd36      	ble.n	8026cba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026c4c:	7808      	ldrb	r0, [r1, #0]
 8026c4e:	0900      	lsrs	r0, r0, #4
 8026c50:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026c54:	eb05 0a00 	add.w	sl, r5, r0
 8026c58:	f1ae 0e02 	sub.w	lr, lr, #2
 8026c5c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026c60:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026c64:	00d2      	lsls	r2, r2, #3
 8026c66:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026c6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026c6e:	ea49 0202 	orr.w	r2, r9, r2
 8026c72:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026c76:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026c7a:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026c7e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026c82:	f000 000f 	and.w	r0, r0, #15
 8026c86:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026c8a:	eb05 0a00 	add.w	sl, r5, r0
 8026c8e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026c92:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026c96:	00d2      	lsls	r2, r2, #3
 8026c98:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026c9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026ca0:	ea49 0202 	orr.w	r2, r9, r2
 8026ca4:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026ca8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026cac:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026cb0:	e7c6      	b.n	8026c40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026cb2:	4631      	mov	r1, r6
 8026cb4:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026cb8:	e7c2      	b.n	8026c40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026cba:	d111      	bne.n	8026ce0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026cbc:	7809      	ldrb	r1, [r1, #0]
 8026cbe:	0909      	lsrs	r1, r1, #4
 8026cc0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026cc4:	186c      	adds	r4, r5, r1
 8026cc6:	5c69      	ldrb	r1, [r5, r1]
 8026cc8:	78a2      	ldrb	r2, [r4, #2]
 8026cca:	7864      	ldrb	r4, [r4, #1]
 8026ccc:	00e4      	lsls	r4, r4, #3
 8026cce:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026cd2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026cd6:	4322      	orrs	r2, r4
 8026cd8:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026cdc:	f820 2b02 	strh.w	r2, [r0], #2
 8026ce0:	9a03      	ldr	r2, [sp, #12]
 8026ce2:	f8bc 4000 	ldrh.w	r4, [ip]
 8026ce6:	9905      	ldr	r1, [sp, #20]
 8026ce8:	1aa4      	subs	r4, r4, r2
 8026cea:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8026cee:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026cf2:	440a      	add	r2, r1
 8026cf4:	fb92 f2f8 	sdiv	r2, r2, r8
 8026cf8:	4416      	add	r6, r2
 8026cfa:	e780      	b.n	8026bfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026cfc:	4b03      	ldr	r3, [pc, #12]	; (8026d0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026cfe:	6818      	ldr	r0, [r3, #0]
 8026d00:	6803      	ldr	r3, [r0, #0]
 8026d02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026d04:	4798      	blx	r3
 8026d06:	b00f      	add	sp, #60	; 0x3c
 8026d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d0c:	20012fc4 	.word	0x20012fc4
 8026d10:	20012fbe 	.word	0x20012fbe
 8026d14:	fffff800 	.word	0xfffff800

08026d18 <CRC_Lock>:
 8026d18:	b530      	push	{r4, r5, lr}
 8026d1a:	4a20      	ldr	r2, [pc, #128]	; (8026d9c <CRC_Lock+0x84>)
 8026d1c:	6813      	ldr	r3, [r2, #0]
 8026d1e:	f023 0301 	bic.w	r3, r3, #1
 8026d22:	6013      	str	r3, [r2, #0]
 8026d24:	4b1e      	ldr	r3, [pc, #120]	; (8026da0 <CRC_Lock+0x88>)
 8026d26:	681a      	ldr	r2, [r3, #0]
 8026d28:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026d2c:	4022      	ands	r2, r4
 8026d2e:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026d32:	42aa      	cmp	r2, r5
 8026d34:	d005      	beq.n	8026d42 <CRC_Lock+0x2a>
 8026d36:	681b      	ldr	r3, [r3, #0]
 8026d38:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026d3c:	4023      	ands	r3, r4
 8026d3e:	4293      	cmp	r3, r2
 8026d40:	d124      	bne.n	8026d8c <CRC_Lock+0x74>
 8026d42:	4b18      	ldr	r3, [pc, #96]	; (8026da4 <CRC_Lock+0x8c>)
 8026d44:	681b      	ldr	r3, [r3, #0]
 8026d46:	bb0b      	cbnz	r3, 8026d8c <CRC_Lock+0x74>
 8026d48:	4b17      	ldr	r3, [pc, #92]	; (8026da8 <CRC_Lock+0x90>)
 8026d4a:	681a      	ldr	r2, [r3, #0]
 8026d4c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026d50:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026d54:	d00d      	beq.n	8026d72 <CRC_Lock+0x5a>
 8026d56:	681a      	ldr	r2, [r3, #0]
 8026d58:	f240 4483 	movw	r4, #1155	; 0x483
 8026d5c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026d60:	42a2      	cmp	r2, r4
 8026d62:	d006      	beq.n	8026d72 <CRC_Lock+0x5a>
 8026d64:	681b      	ldr	r3, [r3, #0]
 8026d66:	f240 4285 	movw	r2, #1157	; 0x485
 8026d6a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026d6e:	4293      	cmp	r3, r2
 8026d70:	d10c      	bne.n	8026d8c <CRC_Lock+0x74>
 8026d72:	4b0e      	ldr	r3, [pc, #56]	; (8026dac <CRC_Lock+0x94>)
 8026d74:	2201      	movs	r2, #1
 8026d76:	601a      	str	r2, [r3, #0]
 8026d78:	681a      	ldr	r2, [r3, #0]
 8026d7a:	2a00      	cmp	r2, #0
 8026d7c:	d1fc      	bne.n	8026d78 <CRC_Lock+0x60>
 8026d7e:	4b0c      	ldr	r3, [pc, #48]	; (8026db0 <CRC_Lock+0x98>)
 8026d80:	6018      	str	r0, [r3, #0]
 8026d82:	6818      	ldr	r0, [r3, #0]
 8026d84:	1a43      	subs	r3, r0, r1
 8026d86:	4258      	negs	r0, r3
 8026d88:	4158      	adcs	r0, r3
 8026d8a:	bd30      	pop	{r4, r5, pc}
 8026d8c:	4b09      	ldr	r3, [pc, #36]	; (8026db4 <CRC_Lock+0x9c>)
 8026d8e:	2201      	movs	r2, #1
 8026d90:	601a      	str	r2, [r3, #0]
 8026d92:	681a      	ldr	r2, [r3, #0]
 8026d94:	2a00      	cmp	r2, #0
 8026d96:	d1fc      	bne.n	8026d92 <CRC_Lock+0x7a>
 8026d98:	4b07      	ldr	r3, [pc, #28]	; (8026db8 <CRC_Lock+0xa0>)
 8026d9a:	e7f1      	b.n	8026d80 <CRC_Lock+0x68>
 8026d9c:	e0002000 	.word	0xe0002000
 8026da0:	e000ed00 	.word	0xe000ed00
 8026da4:	e0042000 	.word	0xe0042000
 8026da8:	5c001000 	.word	0x5c001000
 8026dac:	58024c08 	.word	0x58024c08
 8026db0:	58024c00 	.word	0x58024c00
 8026db4:	40023008 	.word	0x40023008
 8026db8:	40023000 	.word	0x40023000

08026dbc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026dbc:	6101      	str	r1, [r0, #16]
 8026dbe:	4770      	bx	lr

08026dc0 <_ZN8touchgfx8Gestures4tickEv>:
 8026dc0:	7b83      	ldrb	r3, [r0, #14]
 8026dc2:	b14b      	cbz	r3, 8026dd8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026dc4:	8903      	ldrh	r3, [r0, #8]
 8026dc6:	3301      	adds	r3, #1
 8026dc8:	b29b      	uxth	r3, r3
 8026dca:	2b07      	cmp	r3, #7
 8026dcc:	8103      	strh	r3, [r0, #8]
 8026dce:	bf81      	itttt	hi
 8026dd0:	2300      	movhi	r3, #0
 8026dd2:	8143      	strhhi	r3, [r0, #10]
 8026dd4:	8183      	strhhi	r3, [r0, #12]
 8026dd6:	7383      	strbhi	r3, [r0, #14]
 8026dd8:	4770      	bx	lr
	...

08026ddc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026ddc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026de0:	4698      	mov	r8, r3
 8026de2:	8883      	ldrh	r3, [r0, #4]
 8026de4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026de8:	eba8 0303 	sub.w	r3, r8, r3
 8026dec:	b21b      	sxth	r3, r3
 8026dee:	4604      	mov	r4, r0
 8026df0:	2b00      	cmp	r3, #0
 8026df2:	4617      	mov	r7, r2
 8026df4:	4a18      	ldr	r2, [pc, #96]	; (8026e58 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026df6:	9200      	str	r2, [sp, #0]
 8026df8:	bfb8      	it	lt
 8026dfa:	425b      	neglt	r3, r3
 8026dfc:	8aa2      	ldrh	r2, [r4, #20]
 8026dfe:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026e02:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026e06:	b21b      	sxth	r3, r3
 8026e08:	460e      	mov	r6, r1
 8026e0a:	4293      	cmp	r3, r2
 8026e0c:	88c1      	ldrh	r1, [r0, #6]
 8026e0e:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026e12:	f04f 0000 	mov.w	r0, #0
 8026e16:	f88d 0004 	strb.w	r0, [sp, #4]
 8026e1a:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026e1e:	dc07      	bgt.n	8026e30 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026e20:	1a69      	subs	r1, r5, r1
 8026e22:	b209      	sxth	r1, r1
 8026e24:	2900      	cmp	r1, #0
 8026e26:	bfb8      	it	lt
 8026e28:	4249      	neglt	r1, r1
 8026e2a:	b209      	sxth	r1, r1
 8026e2c:	428a      	cmp	r2, r1
 8026e2e:	da10      	bge.n	8026e52 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026e30:	6920      	ldr	r0, [r4, #16]
 8026e32:	6803      	ldr	r3, [r0, #0]
 8026e34:	4669      	mov	r1, sp
 8026e36:	685b      	ldr	r3, [r3, #4]
 8026e38:	4798      	blx	r3
 8026e3a:	eba8 0606 	sub.w	r6, r8, r6
 8026e3e:	2300      	movs	r3, #0
 8026e40:	1bef      	subs	r7, r5, r7
 8026e42:	2001      	movs	r0, #1
 8026e44:	8123      	strh	r3, [r4, #8]
 8026e46:	8166      	strh	r6, [r4, #10]
 8026e48:	81a7      	strh	r7, [r4, #12]
 8026e4a:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026e4e:	80e5      	strh	r5, [r4, #6]
 8026e50:	73a0      	strb	r0, [r4, #14]
 8026e52:	b004      	add	sp, #16
 8026e54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026e58:	0802f8bc 	.word	0x0802f8bc

08026e5c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026e5e:	461e      	mov	r6, r3
 8026e60:	1e4b      	subs	r3, r1, #1
 8026e62:	2b01      	cmp	r3, #1
 8026e64:	b085      	sub	sp, #20
 8026e66:	4604      	mov	r4, r0
 8026e68:	460d      	mov	r5, r1
 8026e6a:	4617      	mov	r7, r2
 8026e6c:	d84b      	bhi.n	8026f06 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026e6e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026e72:	1cd3      	adds	r3, r2, #3
 8026e74:	b29b      	uxth	r3, r3
 8026e76:	2b06      	cmp	r3, #6
 8026e78:	d916      	bls.n	8026ea8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026e7a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026f1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026e7e:	f8cd c004 	str.w	ip, [sp, #4]
 8026e82:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026e86:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026e8a:	6900      	ldr	r0, [r0, #16]
 8026e8c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026e90:	f04f 0c00 	mov.w	ip, #0
 8026e94:	f88d c008 	strb.w	ip, [sp, #8]
 8026e98:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026e9c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026ea0:	6803      	ldr	r3, [r0, #0]
 8026ea2:	a901      	add	r1, sp, #4
 8026ea4:	689b      	ldr	r3, [r3, #8]
 8026ea6:	4798      	blx	r3
 8026ea8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026eac:	1cd3      	adds	r3, r2, #3
 8026eae:	b29b      	uxth	r3, r3
 8026eb0:	2b06      	cmp	r3, #6
 8026eb2:	d916      	bls.n	8026ee2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026eb4:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026f1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026eb8:	f8cd c004 	str.w	ip, [sp, #4]
 8026ebc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026ec0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026ec4:	6920      	ldr	r0, [r4, #16]
 8026ec6:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026eca:	f04f 0c01 	mov.w	ip, #1
 8026ece:	f88d c008 	strb.w	ip, [sp, #8]
 8026ed2:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026ed6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026eda:	6803      	ldr	r3, [r0, #0]
 8026edc:	a901      	add	r1, sp, #4
 8026ede:	689b      	ldr	r3, [r3, #8]
 8026ee0:	4798      	blx	r3
 8026ee2:	4b0d      	ldr	r3, [pc, #52]	; (8026f18 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026ee4:	9301      	str	r3, [sp, #4]
 8026ee6:	6920      	ldr	r0, [r4, #16]
 8026ee8:	f88d 5008 	strb.w	r5, [sp, #8]
 8026eec:	2300      	movs	r3, #0
 8026eee:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026ef2:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026ef6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026efa:	6803      	ldr	r3, [r0, #0]
 8026efc:	a901      	add	r1, sp, #4
 8026efe:	681b      	ldr	r3, [r3, #0]
 8026f00:	4798      	blx	r3
 8026f02:	b005      	add	sp, #20
 8026f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026f06:	2900      	cmp	r1, #0
 8026f08:	d1eb      	bne.n	8026ee2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026f0a:	80a2      	strh	r2, [r4, #4]
 8026f0c:	80c6      	strh	r6, [r0, #6]
 8026f0e:	60a1      	str	r1, [r4, #8]
 8026f10:	81a1      	strh	r1, [r4, #12]
 8026f12:	73a1      	strb	r1, [r4, #14]
 8026f14:	e7e5      	b.n	8026ee2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026f16:	bf00      	nop
 8026f18:	0802f8a8 	.word	0x0802f8a8
 8026f1c:	0802f8d0 	.word	0x0802f8d0

08026f20 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026f20:	10c9      	asrs	r1, r1, #3
 8026f22:	2900      	cmp	r1, #0
 8026f24:	bfb8      	it	lt
 8026f26:	4249      	neglt	r1, r1
 8026f28:	2801      	cmp	r0, #1
 8026f2a:	d108      	bne.n	8026f3e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026f2c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026f30:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026f34:	4601      	mov	r1, r0
 8026f36:	dd02      	ble.n	8026f3e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026f38:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026f3c:	4770      	bx	lr
 8026f3e:	29ff      	cmp	r1, #255	; 0xff
 8026f40:	bfa8      	it	ge
 8026f42:	21ff      	movge	r1, #255	; 0xff
 8026f44:	4608      	mov	r0, r1
 8026f46:	4770      	bx	lr

08026f48 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026f48:	b410      	push	{r4}
 8026f4a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026f4e:	429c      	cmp	r4, r3
 8026f50:	d803      	bhi.n	8026f5a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026f52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026f56:	f7ed b8b1 	b.w	80140bc <_ZN8touchgfx7Outline6lineToEii>
 8026f5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026f5e:	4770      	bx	lr

08026f60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f64:	b08b      	sub	sp, #44	; 0x2c
 8026f66:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026f6a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026f6e:	9308      	str	r3, [sp, #32]
 8026f70:	4606      	mov	r6, r0
 8026f72:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026f76:	9309      	str	r3, [sp, #36]	; 0x24
 8026f78:	468a      	mov	sl, r1
 8026f7a:	f7ed fa0c 	bl	8014396 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026f7e:	68b5      	ldr	r5, [r6, #8]
 8026f80:	4604      	mov	r4, r0
 8026f82:	2d00      	cmp	r5, #0
 8026f84:	d044      	beq.n	8027010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026f86:	6873      	ldr	r3, [r6, #4]
 8026f88:	42ab      	cmp	r3, r5
 8026f8a:	d33d      	bcc.n	8027008 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026f8c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026f90:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026f94:	eb02 0b03 	add.w	fp, r2, r3
 8026f98:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026f9c:	fb02 1203 	mla	r2, r2, r3, r1
 8026fa0:	9205      	str	r2, [sp, #20]
 8026fa2:	1e6a      	subs	r2, r5, #1
 8026fa4:	9204      	str	r2, [sp, #16]
 8026fa6:	f04f 0800 	mov.w	r8, #0
 8026faa:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026fae:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026fb2:	454b      	cmp	r3, r9
 8026fb4:	463a      	mov	r2, r7
 8026fb6:	d008      	beq.n	8026fca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026fb8:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026fbc:	eb03 0b09 	add.w	fp, r3, r9
 8026fc0:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026fc4:	fb03 1309 	mla	r3, r3, r9, r1
 8026fc8:	9305      	str	r3, [sp, #20]
 8026fca:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026fce:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026fd2:	4498      	add	r8, r3
 8026fd4:	9b04      	ldr	r3, [sp, #16]
 8026fd6:	3b01      	subs	r3, #1
 8026fd8:	9304      	str	r3, [sp, #16]
 8026fda:	9b04      	ldr	r3, [sp, #16]
 8026fdc:	3301      	adds	r3, #1
 8026fde:	d015      	beq.n	802700c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026fe0:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026fe4:	42bb      	cmp	r3, r7
 8026fe6:	d117      	bne.n	8027018 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026fe8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026fec:	9b04      	ldr	r3, [sp, #16]
 8026fee:	4548      	cmp	r0, r9
 8026ff0:	f103 33ff 	add.w	r3, r3, #4294967295
 8026ff4:	d17f      	bne.n	80270f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026ff6:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026ffa:	4401      	add	r1, r0
 8026ffc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027000:	4480      	add	r8, r0
 8027002:	e7e9      	b.n	8026fd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027004:	461f      	mov	r7, r3
 8027006:	e044      	b.n	8027092 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027008:	2000      	movs	r0, #0
 802700a:	e002      	b.n	8027012 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802700c:	2900      	cmp	r1, #0
 802700e:	d16f      	bne.n	80270f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027010:	2001      	movs	r0, #1
 8027012:	b00b      	add	sp, #44	; 0x2c
 8027014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027018:	2900      	cmp	r1, #0
 802701a:	d030      	beq.n	802707e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802701c:	2f00      	cmp	r7, #0
 802701e:	db29      	blt.n	8027074 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027020:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027024:	42bb      	cmp	r3, r7
 8027026:	dd25      	ble.n	8027074 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027028:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802702c:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027030:	f7ff ff76 	bl	8026f20 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027034:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027036:	fb10 f003 	smulbb	r0, r0, r3
 802703a:	b280      	uxth	r0, r0
 802703c:	1c41      	adds	r1, r0, #1
 802703e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027042:	1209      	asrs	r1, r1, #8
 8027044:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027048:	d014      	beq.n	8027074 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802704a:	9808      	ldr	r0, [sp, #32]
 802704c:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802704e:	b2c9      	uxtb	r1, r1
 8027050:	b2ba      	uxth	r2, r7
 8027052:	9102      	str	r1, [sp, #8]
 8027054:	2101      	movs	r1, #1
 8027056:	4413      	add	r3, r2
 8027058:	9101      	str	r1, [sp, #4]
 802705a:	4402      	add	r2, r0
 802705c:	fa0f f18b 	sxth.w	r1, fp
 8027060:	f8da 0000 	ldr.w	r0, [sl]
 8027064:	9100      	str	r1, [sp, #0]
 8027066:	6941      	ldr	r1, [r0, #20]
 8027068:	b21b      	sxth	r3, r3
 802706a:	460d      	mov	r5, r1
 802706c:	b212      	sxth	r2, r2
 802706e:	9905      	ldr	r1, [sp, #20]
 8027070:	4650      	mov	r0, sl
 8027072:	47a8      	blx	r5
 8027074:	9b04      	ldr	r3, [sp, #16]
 8027076:	3301      	adds	r3, #1
 8027078:	f107 0201 	add.w	r2, r7, #1
 802707c:	d0c8      	beq.n	8027010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802707e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027082:	1abb      	subs	r3, r7, r2
 8027084:	2b00      	cmp	r3, #0
 8027086:	dd31      	ble.n	80270ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027088:	2a00      	cmp	r2, #0
 802708a:	dabb      	bge.n	8027004 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802708c:	2f00      	cmp	r7, #0
 802708e:	dd2d      	ble.n	80270ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027090:	2200      	movs	r2, #0
 8027092:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027096:	19d1      	adds	r1, r2, r7
 8027098:	4299      	cmp	r1, r3
 802709a:	db02      	blt.n	80270a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802709c:	1a9f      	subs	r7, r3, r2
 802709e:	2f00      	cmp	r7, #0
 80270a0:	dd24      	ble.n	80270ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80270a2:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80270a6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80270aa:	f7ff ff39 	bl	8026f20 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80270ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80270b0:	fb10 f003 	smulbb	r0, r0, r3
 80270b4:	b280      	uxth	r0, r0
 80270b6:	1c41      	adds	r1, r0, #1
 80270b8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80270bc:	1209      	asrs	r1, r1, #8
 80270be:	f011 0fff 	tst.w	r1, #255	; 0xff
 80270c2:	d013      	beq.n	80270ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80270c4:	9808      	ldr	r0, [sp, #32]
 80270c6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80270c8:	b292      	uxth	r2, r2
 80270ca:	b2c9      	uxtb	r1, r1
 80270cc:	4413      	add	r3, r2
 80270ce:	9102      	str	r1, [sp, #8]
 80270d0:	4402      	add	r2, r0
 80270d2:	b23f      	sxth	r7, r7
 80270d4:	f8da 0000 	ldr.w	r0, [sl]
 80270d8:	9701      	str	r7, [sp, #4]
 80270da:	fa0f f18b 	sxth.w	r1, fp
 80270de:	9100      	str	r1, [sp, #0]
 80270e0:	6947      	ldr	r7, [r0, #20]
 80270e2:	9905      	ldr	r1, [sp, #20]
 80270e4:	b21b      	sxth	r3, r3
 80270e6:	b212      	sxth	r2, r2
 80270e8:	4650      	mov	r0, sl
 80270ea:	47b8      	blx	r7
 80270ec:	464b      	mov	r3, r9
 80270ee:	e75c      	b.n	8026faa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80270f0:	2f00      	cmp	r7, #0
 80270f2:	da95      	bge.n	8027020 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80270f4:	e78c      	b.n	8027010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80270f6:	2900      	cmp	r1, #0
 80270f8:	d0f8      	beq.n	80270ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80270fa:	e78f      	b.n	802701c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080270fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80270fc:	4b4b      	ldr	r3, [pc, #300]	; (802722c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80270fe:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027102:	2500      	movs	r5, #0
 8027104:	f100 0620 	add.w	r6, r0, #32
 8027108:	4604      	mov	r4, r0
 802710a:	e9c0 3100 	strd	r3, r1, [r0]
 802710e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027112:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027116:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802711a:	f100 0718 	add.w	r7, r0, #24
 802711e:	4630      	mov	r0, r6
 8027120:	4690      	mov	r8, r2
 8027122:	f7ec fb03 	bl	801372c <_ZN8touchgfx7OutlineC1Ev>
 8027126:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802712a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802712e:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027132:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027136:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802713a:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802713e:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027142:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027146:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802714a:	f9b8 2000 	ldrsh.w	r2, [r8]
 802714e:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027152:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027156:	9500      	str	r5, [sp, #0]
 8027158:	4410      	add	r0, r2
 802715a:	b280      	uxth	r0, r0
 802715c:	fa0f fa80 	sxth.w	sl, r0
 8027160:	45aa      	cmp	sl, r5
 8027162:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027166:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802716a:	dd5c      	ble.n	8027226 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802716c:	4591      	cmp	r9, r2
 802716e:	dd5a      	ble.n	8027226 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027170:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027174:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027178:	440b      	add	r3, r1
 802717a:	b29b      	uxth	r3, r3
 802717c:	b21d      	sxth	r5, r3
 802717e:	2d00      	cmp	r5, #0
 8027180:	dd51      	ble.n	8027226 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027182:	458e      	cmp	lr, r1
 8027184:	dd4f      	ble.n	8027226 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027186:	45d1      	cmp	r9, sl
 8027188:	bfb8      	it	lt
 802718a:	fa1f f089 	uxthlt.w	r0, r9
 802718e:	45ae      	cmp	lr, r5
 8027190:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8027194:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027198:	bfb8      	it	lt
 802719a:	fa1f f38e 	uxthlt.w	r3, lr
 802719e:	1a80      	subs	r0, r0, r2
 80271a0:	1a5b      	subs	r3, r3, r1
 80271a2:	f8ad 0004 	strh.w	r0, [sp, #4]
 80271a6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80271aa:	f8ad 2000 	strh.w	r2, [sp]
 80271ae:	f8ad 1002 	strh.w	r1, [sp, #2]
 80271b2:	466d      	mov	r5, sp
 80271b4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80271b8:	e887 0003 	stmia.w	r7, {r0, r1}
 80271bc:	f8dc 3000 	ldr.w	r3, [ip]
 80271c0:	4660      	mov	r0, ip
 80271c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80271c4:	4639      	mov	r1, r7
 80271c6:	4798      	blx	r3
 80271c8:	6861      	ldr	r1, [r4, #4]
 80271ca:	4628      	mov	r0, r5
 80271cc:	3104      	adds	r1, #4
 80271ce:	f7ee fcb3 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80271d2:	4638      	mov	r0, r7
 80271d4:	f7ee fc6c 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80271d8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80271dc:	f8bd 2000 	ldrh.w	r2, [sp]
 80271e0:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80271e4:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80271e8:	4630      	mov	r0, r6
 80271ea:	f7ec fa83 	bl	80136f4 <_ZN8touchgfx7Outline5resetEv>
 80271ee:	f9bd 3000 	ldrsh.w	r3, [sp]
 80271f2:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80271f6:	015b      	lsls	r3, r3, #5
 80271f8:	60a3      	str	r3, [r4, #8]
 80271fa:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80271fe:	015b      	lsls	r3, r3, #5
 8027200:	60e3      	str	r3, [r4, #12]
 8027202:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027206:	015b      	lsls	r3, r3, #5
 8027208:	6123      	str	r3, [r4, #16]
 802720a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802720e:	015b      	lsls	r3, r3, #5
 8027210:	6163      	str	r3, [r4, #20]
 8027212:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027216:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802721a:	4620      	mov	r0, r4
 802721c:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027220:	b002      	add	sp, #8
 8027222:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027226:	2300      	movs	r3, #0
 8027228:	9301      	str	r3, [sp, #4]
 802722a:	e7c2      	b.n	80271b2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 802722c:	0802fbf4 	.word	0x0802fbf4

08027230 <_ZN8touchgfx6Canvas5closeEv>:
 8027230:	b538      	push	{r3, r4, r5, lr}
 8027232:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027236:	4604      	mov	r4, r0
 8027238:	b193      	cbz	r3, 8027260 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802723a:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802723e:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8027242:	4213      	tst	r3, r2
 8027244:	d10c      	bne.n	8027260 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027246:	f100 0520 	add.w	r5, r0, #32
 802724a:	b123      	cbz	r3, 8027256 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802724c:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027250:	4628      	mov	r0, r5
 8027252:	f7ff fe79 	bl	8026f48 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027256:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802725a:	4628      	mov	r0, r5
 802725c:	f7ff fe74 	bl	8026f48 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027260:	2300      	movs	r3, #0
 8027262:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027266:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802726a:	4298      	cmp	r0, r3
 802726c:	bf34      	ite	cc
 802726e:	2000      	movcc	r0, #0
 8027270:	2001      	movcs	r0, #1
 8027272:	bd38      	pop	{r3, r4, r5, pc}

08027274 <_ZN8touchgfx6Canvas6renderEh>:
 8027274:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027278:	4604      	mov	r4, r0
 802727a:	6840      	ldr	r0, [r0, #4]
 802727c:	6803      	ldr	r3, [r0, #0]
 802727e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027280:	460d      	mov	r5, r1
 8027282:	4798      	blx	r3
 8027284:	fb10 f105 	smulbb	r1, r0, r5
 8027288:	b289      	uxth	r1, r1
 802728a:	1c4d      	adds	r5, r1, #1
 802728c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027290:	122d      	asrs	r5, r5, #8
 8027292:	f000 809d 	beq.w	80273d0 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027296:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802729a:	2b00      	cmp	r3, #0
 802729c:	f000 8098 	beq.w	80273d0 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80272a0:	4620      	mov	r0, r4
 80272a2:	f7ff ffc5 	bl	8027230 <_ZN8touchgfx6Canvas5closeEv>
 80272a6:	4607      	mov	r7, r0
 80272a8:	2800      	cmp	r0, #0
 80272aa:	d048      	beq.n	802733e <_ZN8touchgfx6Canvas6renderEh+0xca>
 80272ac:	6863      	ldr	r3, [r4, #4]
 80272ae:	4e49      	ldr	r6, [pc, #292]	; (80273d4 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80272b0:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80272b2:	6837      	ldr	r7, [r6, #0]
 80272b4:	6803      	ldr	r3, [r0, #0]
 80272b6:	689b      	ldr	r3, [r3, #8]
 80272b8:	4798      	blx	r3
 80272ba:	4601      	mov	r1, r0
 80272bc:	4638      	mov	r0, r7
 80272be:	f7ea fb87 	bl	80119d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80272c2:	4607      	mov	r7, r0
 80272c4:	f7dc fd24 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80272c8:	6803      	ldr	r3, [r0, #0]
 80272ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80272cc:	4798      	blx	r3
 80272ce:	4680      	mov	r8, r0
 80272d0:	f7dc fd1e 	bl	8003d10 <_ZN8touchgfx3HAL3lcdEv>
 80272d4:	6803      	ldr	r3, [r0, #0]
 80272d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80272d8:	4798      	blx	r3
 80272da:	280b      	cmp	r0, #11
 80272dc:	d85d      	bhi.n	802739a <_ZN8touchgfx6Canvas6renderEh+0x126>
 80272de:	e8df f000 	tbb	[pc, r0]
 80272e2:	5e53      	.short	0x5e53
 80272e4:	325c066e 	.word	0x325c066e
 80272e8:	67676742 	.word	0x67676742
 80272ec:	6767      	.short	0x6767
 80272ee:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80272f2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80272f6:	2208      	movs	r2, #8
 80272f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80272fc:	fb08 2303 	mla	r3, r8, r3, r2
 8027300:	441f      	add	r7, r3
 8027302:	424b      	negs	r3, r1
 8027304:	f003 0307 	and.w	r3, r3, #7
 8027308:	f001 0107 	and.w	r1, r1, #7
 802730c:	bf58      	it	pl
 802730e:	4259      	negpl	r1, r3
 8027310:	b2c9      	uxtb	r1, r1
 8027312:	b2ed      	uxtb	r5, r5
 8027314:	e9cd 1500 	strd	r1, r5, [sp]
 8027318:	6860      	ldr	r0, [r4, #4]
 802731a:	463a      	mov	r2, r7
 802731c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802731e:	fa0f f388 	sxth.w	r3, r8
 8027322:	f104 0020 	add.w	r0, r4, #32
 8027326:	f7ff fe1b 	bl	8026f60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802732a:	6863      	ldr	r3, [r4, #4]
 802732c:	4607      	mov	r7, r0
 802732e:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027330:	6803      	ldr	r3, [r0, #0]
 8027332:	691b      	ldr	r3, [r3, #16]
 8027334:	4798      	blx	r3
 8027336:	6830      	ldr	r0, [r6, #0]
 8027338:	6803      	ldr	r3, [r0, #0]
 802733a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802733c:	4798      	blx	r3
 802733e:	4638      	mov	r0, r7
 8027340:	b002      	add	sp, #8
 8027342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027346:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802734a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802734e:	2204      	movs	r2, #4
 8027350:	fb91 f2f2 	sdiv	r2, r1, r2
 8027354:	fb08 2303 	mla	r3, r8, r3, r2
 8027358:	441f      	add	r7, r3
 802735a:	424b      	negs	r3, r1
 802735c:	f003 0303 	and.w	r3, r3, #3
 8027360:	f001 0103 	and.w	r1, r1, #3
 8027364:	e7d2      	b.n	802730c <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027366:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802736a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802736e:	2900      	cmp	r1, #0
 8027370:	f04f 0202 	mov.w	r2, #2
 8027374:	fb91 f2f2 	sdiv	r2, r1, r2
 8027378:	f001 0101 	and.w	r1, r1, #1
 802737c:	fb08 2303 	mla	r3, r8, r3, r2
 8027380:	441f      	add	r7, r3
 8027382:	bfb8      	it	lt
 8027384:	4249      	neglt	r1, r1
 8027386:	e7c3      	b.n	8027310 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027388:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802738c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027390:	fb08 f303 	mul.w	r3, r8, r3
 8027394:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027398:	441f      	add	r7, r3
 802739a:	2100      	movs	r1, #0
 802739c:	e7b9      	b.n	8027312 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802739e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80273a2:	fb08 f203 	mul.w	r2, r8, r3
 80273a6:	8b23      	ldrh	r3, [r4, #24]
 80273a8:	2103      	movs	r1, #3
 80273aa:	fb13 2301 	smlabb	r3, r3, r1, r2
 80273ae:	e7f3      	b.n	8027398 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80273b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80273b4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80273b8:	fb08 2303 	mla	r3, r8, r3, r2
 80273bc:	e7ec      	b.n	8027398 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80273be:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80273c2:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80273c6:	fb08 f303 	mul.w	r3, r8, r3
 80273ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80273ce:	e7e3      	b.n	8027398 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80273d0:	2701      	movs	r7, #1
 80273d2:	e7b4      	b.n	802733e <_ZN8touchgfx6Canvas6renderEh+0xca>
 80273d4:	20012fc4 	.word	0x20012fc4

080273d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80273d8:	b510      	push	{r4, lr}
 80273da:	4b07      	ldr	r3, [pc, #28]	; (80273f8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80273dc:	781b      	ldrb	r3, [r3, #0]
 80273de:	2b01      	cmp	r3, #1
 80273e0:	d108      	bne.n	80273f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80273e2:	6843      	ldr	r3, [r0, #4]
 80273e4:	6814      	ldr	r4, [r2, #0]
 80273e6:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80273ea:	680b      	ldr	r3, [r1, #0]
 80273ec:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80273f0:	6013      	str	r3, [r2, #0]
 80273f2:	600c      	str	r4, [r1, #0]
 80273f4:	bd10      	pop	{r4, pc}
 80273f6:	bf00      	nop
 80273f8:	20012fbc 	.word	0x20012fbc

080273fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80273fc:	b513      	push	{r0, r1, r4, lr}
 80273fe:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027402:	4604      	mov	r4, r0
 8027404:	e9cd 2100 	strd	r2, r1, [sp]
 8027408:	b9a3      	cbnz	r3, 8027434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802740a:	466a      	mov	r2, sp
 802740c:	a901      	add	r1, sp, #4
 802740e:	4620      	mov	r0, r4
 8027410:	f7ff ffe2 	bl	80273d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027414:	68a3      	ldr	r3, [r4, #8]
 8027416:	9901      	ldr	r1, [sp, #4]
 8027418:	9a00      	ldr	r2, [sp, #0]
 802741a:	1ac9      	subs	r1, r1, r3
 802741c:	68e3      	ldr	r3, [r4, #12]
 802741e:	9101      	str	r1, [sp, #4]
 8027420:	1ad2      	subs	r2, r2, r3
 8027422:	2a00      	cmp	r2, #0
 8027424:	9200      	str	r2, [sp, #0]
 8027426:	da0b      	bge.n	8027440 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027428:	2301      	movs	r3, #1
 802742a:	2900      	cmp	r1, #0
 802742c:	da0e      	bge.n	802744c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802742e:	f043 0304 	orr.w	r3, r3, #4
 8027432:	e013      	b.n	802745c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027434:	f7ff fefc 	bl	8027230 <_ZN8touchgfx6Canvas5closeEv>
 8027438:	2800      	cmp	r0, #0
 802743a:	d1e6      	bne.n	802740a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802743c:	b002      	add	sp, #8
 802743e:	bd10      	pop	{r4, pc}
 8027440:	6963      	ldr	r3, [r4, #20]
 8027442:	429a      	cmp	r2, r3
 8027444:	bfac      	ite	ge
 8027446:	2302      	movge	r3, #2
 8027448:	2300      	movlt	r3, #0
 802744a:	e7ee      	b.n	802742a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802744c:	6920      	ldr	r0, [r4, #16]
 802744e:	4281      	cmp	r1, r0
 8027450:	bfac      	ite	ge
 8027452:	2008      	movge	r0, #8
 8027454:	2000      	movlt	r0, #0
 8027456:	4318      	orrs	r0, r3
 8027458:	b2c3      	uxtb	r3, r0
 802745a:	b158      	cbz	r0, 8027474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802745c:	2200      	movs	r2, #0
 802745e:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027462:	9901      	ldr	r1, [sp, #4]
 8027464:	9a00      	ldr	r2, [sp, #0]
 8027466:	66a1      	str	r1, [r4, #104]	; 0x68
 8027468:	66e2      	str	r2, [r4, #108]	; 0x6c
 802746a:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802746e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027472:	e7e3      	b.n	802743c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027474:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027478:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802747c:	4298      	cmp	r0, r3
 802747e:	d803      	bhi.n	8027488 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027480:	f104 0020 	add.w	r0, r4, #32
 8027484:	f7ec fe34 	bl	80140f0 <_ZN8touchgfx7Outline6moveToEii>
 8027488:	2301      	movs	r3, #1
 802748a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802748e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027492:	2300      	movs	r3, #0
 8027494:	e7e5      	b.n	8027462 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027496:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027498:	ab02      	add	r3, sp, #8
 802749a:	4604      	mov	r4, r0
 802749c:	f843 2d08 	str.w	r2, [r3, #-8]!
 80274a0:	9101      	str	r1, [sp, #4]
 80274a2:	461a      	mov	r2, r3
 80274a4:	a901      	add	r1, sp, #4
 80274a6:	f7ff ff97 	bl	80273d8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80274aa:	68a3      	ldr	r3, [r4, #8]
 80274ac:	9901      	ldr	r1, [sp, #4]
 80274ae:	9a00      	ldr	r2, [sp, #0]
 80274b0:	1ac9      	subs	r1, r1, r3
 80274b2:	68e3      	ldr	r3, [r4, #12]
 80274b4:	9101      	str	r1, [sp, #4]
 80274b6:	1ad2      	subs	r2, r2, r3
 80274b8:	2a00      	cmp	r2, #0
 80274ba:	9200      	str	r2, [sp, #0]
 80274bc:	db1c      	blt.n	80274f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80274be:	6963      	ldr	r3, [r4, #20]
 80274c0:	429a      	cmp	r2, r3
 80274c2:	bfac      	ite	ge
 80274c4:	2002      	movge	r0, #2
 80274c6:	2000      	movlt	r0, #0
 80274c8:	2900      	cmp	r1, #0
 80274ca:	db17      	blt.n	80274fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80274cc:	6923      	ldr	r3, [r4, #16]
 80274ce:	4299      	cmp	r1, r3
 80274d0:	bfac      	ite	ge
 80274d2:	2308      	movge	r3, #8
 80274d4:	2300      	movlt	r3, #0
 80274d6:	4303      	orrs	r3, r0
 80274d8:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80274dc:	b2dd      	uxtb	r5, r3
 80274de:	b978      	cbnz	r0, 8027500 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80274e0:	f104 0020 	add.w	r0, r4, #32
 80274e4:	f7ff fd30 	bl	8026f48 <_ZN8touchgfx10Rasterizer6lineToEii>
 80274e8:	9b01      	ldr	r3, [sp, #4]
 80274ea:	65e3      	str	r3, [r4, #92]	; 0x5c
 80274ec:	9b00      	ldr	r3, [sp, #0]
 80274ee:	6623      	str	r3, [r4, #96]	; 0x60
 80274f0:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80274f4:	b002      	add	sp, #8
 80274f6:	bd70      	pop	{r4, r5, r6, pc}
 80274f8:	2001      	movs	r0, #1
 80274fa:	e7e5      	b.n	80274c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80274fc:	2304      	movs	r3, #4
 80274fe:	e7ea      	b.n	80274d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027500:	b113      	cbz	r3, 8027508 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027502:	ea10 0305 	ands.w	r3, r0, r5
 8027506:	d11c      	bne.n	8027542 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027508:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802750c:	f104 0620 	add.w	r6, r4, #32
 8027510:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027514:	b98b      	cbnz	r3, 802753a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027516:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802751a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802751e:	4298      	cmp	r0, r3
 8027520:	d802      	bhi.n	8027528 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027522:	4630      	mov	r0, r6
 8027524:	f7ec fde4 	bl	80140f0 <_ZN8touchgfx7Outline6moveToEii>
 8027528:	2301      	movs	r3, #1
 802752a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802752e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027532:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027536:	4630      	mov	r0, r6
 8027538:	e7d4      	b.n	80274e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802753a:	4630      	mov	r0, r6
 802753c:	f7ff fd04 	bl	8026f48 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027540:	e7f7      	b.n	8027532 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027542:	461d      	mov	r5, r3
 8027544:	e7d0      	b.n	80274e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027548 <_ZN8touchgfx6CanvasD1Ev>:
 8027548:	b510      	push	{r4, lr}
 802754a:	4b04      	ldr	r3, [pc, #16]	; (802755c <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802754c:	4604      	mov	r4, r0
 802754e:	f840 3b20 	str.w	r3, [r0], #32
 8027552:	f7ec f8c7 	bl	80136e4 <_ZN8touchgfx7OutlineD1Ev>
 8027556:	4620      	mov	r0, r4
 8027558:	bd10      	pop	{r4, pc}
 802755a:	bf00      	nop
 802755c:	0802fbf4 	.word	0x0802fbf4

08027560 <_ZN8touchgfx6CanvasD0Ev>:
 8027560:	b510      	push	{r4, lr}
 8027562:	4604      	mov	r4, r0
 8027564:	f7ff fff0 	bl	8027548 <_ZN8touchgfx6CanvasD1Ev>
 8027568:	4620      	mov	r0, r4
 802756a:	2170      	movs	r1, #112	; 0x70
 802756c:	f002 fd09 	bl	8029f82 <_ZdlPvj>
 8027570:	4620      	mov	r0, r4
 8027572:	bd10      	pop	{r4, pc}

08027574 <_ZN8touchgfx6CircleD1Ev>:
 8027574:	4770      	bx	lr

08027576 <_ZN8touchgfx6CircleD0Ev>:
 8027576:	b510      	push	{r4, lr}
 8027578:	2148      	movs	r1, #72	; 0x48
 802757a:	4604      	mov	r4, r0
 802757c:	f002 fd01 	bl	8029f82 <_ZdlPvj>
 8027580:	4620      	mov	r0, r4
 8027582:	bd10      	pop	{r4, pc}

08027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027584:	b508      	push	{r3, lr}
 8027586:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802758a:	f7ea fd77 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802758e:	bd08      	pop	{r3, pc}

08027590 <_ZN8touchgfx6CircleC1Ev>:
 8027590:	b510      	push	{r4, lr}
 8027592:	4604      	mov	r4, r0
 8027594:	f7ea fc0e 	bl	8011db4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027598:	4b08      	ldr	r3, [pc, #32]	; (80275bc <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802759a:	6023      	str	r3, [r4, #0]
 802759c:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80275a0:	2300      	movs	r3, #0
 80275a2:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80275a6:	f24b 4205 	movw	r2, #46085	; 0xb405
 80275aa:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80275ae:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80275b2:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80275b6:	60a3      	str	r3, [r4, #8]
 80275b8:	4620      	mov	r0, r4
 80275ba:	bd10      	pop	{r4, pc}
 80275bc:	0802fc08 	.word	0x0802fc08

080275c0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80275c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80275c4:	428a      	cmp	r2, r1
 80275c6:	4680      	mov	r8, r0
 80275c8:	4610      	mov	r0, r2
 80275ca:	4699      	mov	r9, r3
 80275cc:	bfa6      	itte	ge
 80275ce:	460a      	movge	r2, r1
 80275d0:	4603      	movge	r3, r0
 80275d2:	460b      	movlt	r3, r1
 80275d4:	1a99      	subs	r1, r3, r2
 80275d6:	b085      	sub	sp, #20
 80275d8:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80275dc:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80275e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80275e2:	bfa4      	itt	ge
 80275e4:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80275e8:	2200      	movge	r2, #0
 80275ea:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80275ee:	9300      	str	r3, [sp, #0]
 80275f0:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80275f4:	f102 0b01 	add.w	fp, r2, #1
 80275f8:	2c00      	cmp	r4, #0
 80275fa:	f040 80af 	bne.w	802775c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80275fe:	4610      	mov	r0, r2
 8027600:	9201      	str	r2, [sp, #4]
 8027602:	f7ea fd3b 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027606:	a903      	add	r1, sp, #12
 8027608:	9003      	str	r0, [sp, #12]
 802760a:	4650      	mov	r0, sl
 802760c:	f7ea fbfe 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027610:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027614:	9a01      	ldr	r2, [sp, #4]
 8027616:	4408      	add	r0, r1
 8027618:	f8d9 1000 	ldr.w	r1, [r9]
 802761c:	4281      	cmp	r1, r0
 802761e:	bfc8      	it	gt
 8027620:	f8c9 0000 	strgt.w	r0, [r9]
 8027624:	6839      	ldr	r1, [r7, #0]
 8027626:	4288      	cmp	r0, r1
 8027628:	bfc8      	it	gt
 802762a:	6038      	strgt	r0, [r7, #0]
 802762c:	4610      	mov	r0, r2
 802762e:	f7ff ffa9 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027632:	a903      	add	r1, sp, #12
 8027634:	9003      	str	r0, [sp, #12]
 8027636:	4650      	mov	r0, sl
 8027638:	f7ea fbe8 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802763c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027640:	1a10      	subs	r0, r2, r0
 8027642:	6832      	ldr	r2, [r6, #0]
 8027644:	4282      	cmp	r2, r0
 8027646:	bfc8      	it	gt
 8027648:	6030      	strgt	r0, [r6, #0]
 802764a:	682a      	ldr	r2, [r5, #0]
 802764c:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8027650:	4290      	cmp	r0, r2
 8027652:	fb9b f2f1 	sdiv	r2, fp, r1
 8027656:	fb01 b212 	mls	r2, r1, r2, fp
 802765a:	eba1 0202 	sub.w	r2, r1, r2
 802765e:	bfc8      	it	gt
 8027660:	6028      	strgt	r0, [r5, #0]
 8027662:	fb92 f0f1 	sdiv	r0, r2, r1
 8027666:	fb01 2210 	mls	r2, r1, r0, r2
 802766a:	4493      	add	fp, r2
 802766c:	9b00      	ldr	r3, [sp, #0]
 802766e:	455b      	cmp	r3, fp
 8027670:	db2a      	blt.n	80276c8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8027672:	4658      	mov	r0, fp
 8027674:	f7ea fd02 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027678:	a903      	add	r1, sp, #12
 802767a:	9003      	str	r0, [sp, #12]
 802767c:	4650      	mov	r0, sl
 802767e:	f7ea fbc5 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027682:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027686:	4410      	add	r0, r2
 8027688:	f8d9 2000 	ldr.w	r2, [r9]
 802768c:	4282      	cmp	r2, r0
 802768e:	bfc8      	it	gt
 8027690:	f8c9 0000 	strgt.w	r0, [r9]
 8027694:	683a      	ldr	r2, [r7, #0]
 8027696:	4290      	cmp	r0, r2
 8027698:	bfc8      	it	gt
 802769a:	6038      	strgt	r0, [r7, #0]
 802769c:	4658      	mov	r0, fp
 802769e:	f7ff ff71 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80276a2:	a903      	add	r1, sp, #12
 80276a4:	9003      	str	r0, [sp, #12]
 80276a6:	4650      	mov	r0, sl
 80276a8:	f7ea fbb0 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276ac:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80276b0:	1a10      	subs	r0, r2, r0
 80276b2:	6832      	ldr	r2, [r6, #0]
 80276b4:	4282      	cmp	r2, r0
 80276b6:	bfc8      	it	gt
 80276b8:	6030      	strgt	r0, [r6, #0]
 80276ba:	682a      	ldr	r2, [r5, #0]
 80276bc:	4290      	cmp	r0, r2
 80276be:	bfc8      	it	gt
 80276c0:	6028      	strgt	r0, [r5, #0]
 80276c2:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80276c6:	e7d1      	b.n	802766c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80276c8:	9b00      	ldr	r3, [sp, #0]
 80276ca:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80276ce:	455b      	cmp	r3, fp
 80276d0:	dd27      	ble.n	8027722 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80276d2:	4618      	mov	r0, r3
 80276d4:	f7ea fcd2 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80276d8:	a903      	add	r1, sp, #12
 80276da:	9003      	str	r0, [sp, #12]
 80276dc:	4650      	mov	r0, sl
 80276de:	f7ea fb95 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80276e2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80276e6:	4410      	add	r0, r2
 80276e8:	f8d9 2000 	ldr.w	r2, [r9]
 80276ec:	4282      	cmp	r2, r0
 80276ee:	bfc8      	it	gt
 80276f0:	f8c9 0000 	strgt.w	r0, [r9]
 80276f4:	683a      	ldr	r2, [r7, #0]
 80276f6:	4290      	cmp	r0, r2
 80276f8:	bfc8      	it	gt
 80276fa:	6038      	strgt	r0, [r7, #0]
 80276fc:	9800      	ldr	r0, [sp, #0]
 80276fe:	f7ff ff41 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027702:	a903      	add	r1, sp, #12
 8027704:	9003      	str	r0, [sp, #12]
 8027706:	4650      	mov	r0, sl
 8027708:	f7ea fb80 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802770c:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027710:	1a10      	subs	r0, r2, r0
 8027712:	6832      	ldr	r2, [r6, #0]
 8027714:	4282      	cmp	r2, r0
 8027716:	bfc8      	it	gt
 8027718:	6030      	strgt	r0, [r6, #0]
 802771a:	682a      	ldr	r2, [r5, #0]
 802771c:	4290      	cmp	r0, r2
 802771e:	bfc8      	it	gt
 8027720:	6028      	strgt	r0, [r5, #0]
 8027722:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027726:	f8d9 1000 	ldr.w	r1, [r9]
 802772a:	4291      	cmp	r1, r2
 802772c:	bfc8      	it	gt
 802772e:	f8c9 2000 	strgt.w	r2, [r9]
 8027732:	683a      	ldr	r2, [r7, #0]
 8027734:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027738:	429a      	cmp	r2, r3
 802773a:	bfb8      	it	lt
 802773c:	603b      	strlt	r3, [r7, #0]
 802773e:	6832      	ldr	r2, [r6, #0]
 8027740:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027744:	429a      	cmp	r2, r3
 8027746:	bfc8      	it	gt
 8027748:	6033      	strgt	r3, [r6, #0]
 802774a:	682a      	ldr	r2, [r5, #0]
 802774c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027750:	429a      	cmp	r2, r3
 8027752:	da00      	bge.n	8027756 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027754:	602b      	str	r3, [r5, #0]
 8027756:	b005      	add	sp, #20
 8027758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802775c:	2002      	movs	r0, #2
 802775e:	3401      	adds	r4, #1
 8027760:	fb94 f4f0 	sdiv	r4, r4, r0
 8027764:	4610      	mov	r0, r2
 8027766:	9201      	str	r2, [sp, #4]
 8027768:	f7ea fc88 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802776c:	a903      	add	r1, sp, #12
 802776e:	9003      	str	r0, [sp, #12]
 8027770:	4650      	mov	r0, sl
 8027772:	f7ea fb4b 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027776:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802777a:	9a01      	ldr	r2, [sp, #4]
 802777c:	4408      	add	r0, r1
 802777e:	f8d9 1000 	ldr.w	r1, [r9]
 8027782:	1b03      	subs	r3, r0, r4
 8027784:	4299      	cmp	r1, r3
 8027786:	bfc8      	it	gt
 8027788:	f8c9 3000 	strgt.w	r3, [r9]
 802778c:	6839      	ldr	r1, [r7, #0]
 802778e:	428b      	cmp	r3, r1
 8027790:	bfc8      	it	gt
 8027792:	603b      	strgt	r3, [r7, #0]
 8027794:	f8d9 1000 	ldr.w	r1, [r9]
 8027798:	4420      	add	r0, r4
 802779a:	4281      	cmp	r1, r0
 802779c:	bfc8      	it	gt
 802779e:	f8c9 0000 	strgt.w	r0, [r9]
 80277a2:	6839      	ldr	r1, [r7, #0]
 80277a4:	4288      	cmp	r0, r1
 80277a6:	bfc8      	it	gt
 80277a8:	6038      	strgt	r0, [r7, #0]
 80277aa:	4610      	mov	r0, r2
 80277ac:	f7ff feea 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80277b0:	a903      	add	r1, sp, #12
 80277b2:	9003      	str	r0, [sp, #12]
 80277b4:	4650      	mov	r0, sl
 80277b6:	f7ea fb29 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277ba:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80277be:	1a10      	subs	r0, r2, r0
 80277c0:	6832      	ldr	r2, [r6, #0]
 80277c2:	1b01      	subs	r1, r0, r4
 80277c4:	428a      	cmp	r2, r1
 80277c6:	bfc8      	it	gt
 80277c8:	6031      	strgt	r1, [r6, #0]
 80277ca:	682a      	ldr	r2, [r5, #0]
 80277cc:	4291      	cmp	r1, r2
 80277ce:	bfc8      	it	gt
 80277d0:	6029      	strgt	r1, [r5, #0]
 80277d2:	6832      	ldr	r2, [r6, #0]
 80277d4:	4420      	add	r0, r4
 80277d6:	4282      	cmp	r2, r0
 80277d8:	bfc8      	it	gt
 80277da:	6030      	strgt	r0, [r6, #0]
 80277dc:	682a      	ldr	r2, [r5, #0]
 80277de:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80277e2:	4290      	cmp	r0, r2
 80277e4:	fb9b f2f1 	sdiv	r2, fp, r1
 80277e8:	fb01 b212 	mls	r2, r1, r2, fp
 80277ec:	eba1 0202 	sub.w	r2, r1, r2
 80277f0:	bfc8      	it	gt
 80277f2:	6028      	strgt	r0, [r5, #0]
 80277f4:	fb92 f0f1 	sdiv	r0, r2, r1
 80277f8:	fb01 2210 	mls	r2, r1, r0, r2
 80277fc:	4493      	add	fp, r2
 80277fe:	9b00      	ldr	r3, [sp, #0]
 8027800:	455b      	cmp	r3, fp
 8027802:	db40      	blt.n	8027886 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027804:	4658      	mov	r0, fp
 8027806:	f7ea fc39 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802780a:	a903      	add	r1, sp, #12
 802780c:	9003      	str	r0, [sp, #12]
 802780e:	4650      	mov	r0, sl
 8027810:	f7ea fafc 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027814:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027818:	4410      	add	r0, r2
 802781a:	f8d9 2000 	ldr.w	r2, [r9]
 802781e:	1b01      	subs	r1, r0, r4
 8027820:	428a      	cmp	r2, r1
 8027822:	bfc8      	it	gt
 8027824:	f8c9 1000 	strgt.w	r1, [r9]
 8027828:	683a      	ldr	r2, [r7, #0]
 802782a:	4291      	cmp	r1, r2
 802782c:	bfc8      	it	gt
 802782e:	6039      	strgt	r1, [r7, #0]
 8027830:	f8d9 2000 	ldr.w	r2, [r9]
 8027834:	4420      	add	r0, r4
 8027836:	4282      	cmp	r2, r0
 8027838:	bfc8      	it	gt
 802783a:	f8c9 0000 	strgt.w	r0, [r9]
 802783e:	683a      	ldr	r2, [r7, #0]
 8027840:	4290      	cmp	r0, r2
 8027842:	bfc8      	it	gt
 8027844:	6038      	strgt	r0, [r7, #0]
 8027846:	4658      	mov	r0, fp
 8027848:	f7ff fe9c 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802784c:	a903      	add	r1, sp, #12
 802784e:	9003      	str	r0, [sp, #12]
 8027850:	4650      	mov	r0, sl
 8027852:	f7ea fadb 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027856:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802785a:	1a10      	subs	r0, r2, r0
 802785c:	6832      	ldr	r2, [r6, #0]
 802785e:	1b01      	subs	r1, r0, r4
 8027860:	428a      	cmp	r2, r1
 8027862:	bfc8      	it	gt
 8027864:	6031      	strgt	r1, [r6, #0]
 8027866:	682a      	ldr	r2, [r5, #0]
 8027868:	4291      	cmp	r1, r2
 802786a:	bfc8      	it	gt
 802786c:	6029      	strgt	r1, [r5, #0]
 802786e:	6832      	ldr	r2, [r6, #0]
 8027870:	4420      	add	r0, r4
 8027872:	4282      	cmp	r2, r0
 8027874:	bfc8      	it	gt
 8027876:	6030      	strgt	r0, [r6, #0]
 8027878:	682a      	ldr	r2, [r5, #0]
 802787a:	4290      	cmp	r0, r2
 802787c:	bfc8      	it	gt
 802787e:	6028      	strgt	r0, [r5, #0]
 8027880:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027884:	e7bb      	b.n	80277fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027886:	9b00      	ldr	r3, [sp, #0]
 8027888:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802788c:	455b      	cmp	r3, fp
 802788e:	f77f af62 	ble.w	8027756 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027892:	4618      	mov	r0, r3
 8027894:	f7ea fbf2 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027898:	a903      	add	r1, sp, #12
 802789a:	9003      	str	r0, [sp, #12]
 802789c:	4650      	mov	r0, sl
 802789e:	f7ea fab5 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278a2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80278a6:	4410      	add	r0, r2
 80278a8:	f8d9 2000 	ldr.w	r2, [r9]
 80278ac:	1b01      	subs	r1, r0, r4
 80278ae:	428a      	cmp	r2, r1
 80278b0:	bfc8      	it	gt
 80278b2:	f8c9 1000 	strgt.w	r1, [r9]
 80278b6:	683a      	ldr	r2, [r7, #0]
 80278b8:	4291      	cmp	r1, r2
 80278ba:	bfc8      	it	gt
 80278bc:	6039      	strgt	r1, [r7, #0]
 80278be:	f8d9 2000 	ldr.w	r2, [r9]
 80278c2:	4420      	add	r0, r4
 80278c4:	4282      	cmp	r2, r0
 80278c6:	bfc8      	it	gt
 80278c8:	f8c9 0000 	strgt.w	r0, [r9]
 80278cc:	683b      	ldr	r3, [r7, #0]
 80278ce:	4298      	cmp	r0, r3
 80278d0:	bfc8      	it	gt
 80278d2:	6038      	strgt	r0, [r7, #0]
 80278d4:	9800      	ldr	r0, [sp, #0]
 80278d6:	f7ff fe55 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80278da:	a903      	add	r1, sp, #12
 80278dc:	9003      	str	r0, [sp, #12]
 80278de:	4650      	mov	r0, sl
 80278e0:	f7ea fa94 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278e4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80278e8:	6832      	ldr	r2, [r6, #0]
 80278ea:	1a18      	subs	r0, r3, r0
 80278ec:	1b03      	subs	r3, r0, r4
 80278ee:	429a      	cmp	r2, r3
 80278f0:	bfc8      	it	gt
 80278f2:	6033      	strgt	r3, [r6, #0]
 80278f4:	682a      	ldr	r2, [r5, #0]
 80278f6:	4293      	cmp	r3, r2
 80278f8:	bfc8      	it	gt
 80278fa:	602b      	strgt	r3, [r5, #0]
 80278fc:	6833      	ldr	r3, [r6, #0]
 80278fe:	4404      	add	r4, r0
 8027900:	42a3      	cmp	r3, r4
 8027902:	bfc8      	it	gt
 8027904:	6034      	strgt	r4, [r6, #0]
 8027906:	682b      	ldr	r3, [r5, #0]
 8027908:	429c      	cmp	r4, r3
 802790a:	bfc8      	it	gt
 802790c:	602c      	strgt	r4, [r5, #0]
 802790e:	e722      	b.n	8027756 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08027910 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8027910:	b530      	push	{r4, r5, lr}
 8027912:	4604      	mov	r4, r0
 8027914:	4608      	mov	r0, r1
 8027916:	4611      	mov	r1, r2
 8027918:	461a      	mov	r2, r3
 802791a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802791e:	b089      	sub	sp, #36	; 0x24
 8027920:	015b      	lsls	r3, r3, #5
 8027922:	9304      	str	r3, [sp, #16]
 8027924:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027928:	2500      	movs	r5, #0
 802792a:	015b      	lsls	r3, r3, #5
 802792c:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8027930:	ab07      	add	r3, sp, #28
 8027932:	9302      	str	r3, [sp, #8]
 8027934:	ab06      	add	r3, sp, #24
 8027936:	9301      	str	r3, [sp, #4]
 8027938:	ab05      	add	r3, sp, #20
 802793a:	9300      	str	r3, [sp, #0]
 802793c:	ab04      	add	r3, sp, #16
 802793e:	9505      	str	r5, [sp, #20]
 8027940:	f7ff fe3e 	bl	80275c0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027944:	2520      	movs	r5, #32
 8027946:	9a04      	ldr	r2, [sp, #16]
 8027948:	9805      	ldr	r0, [sp, #20]
 802794a:	fb92 f2f5 	sdiv	r2, r2, r5
 802794e:	fb90 f0f5 	sdiv	r0, r0, r5
 8027952:	b292      	uxth	r2, r2
 8027954:	3002      	adds	r0, #2
 8027956:	1a80      	subs	r0, r0, r2
 8027958:	9b06      	ldr	r3, [sp, #24]
 802795a:	9907      	ldr	r1, [sp, #28]
 802795c:	fb93 f3f5 	sdiv	r3, r3, r5
 8027960:	fb91 f1f5 	sdiv	r1, r1, r5
 8027964:	b29b      	uxth	r3, r3
 8027966:	3102      	adds	r1, #2
 8027968:	1ac9      	subs	r1, r1, r3
 802796a:	3a01      	subs	r2, #1
 802796c:	3b01      	subs	r3, #1
 802796e:	80a0      	strh	r0, [r4, #4]
 8027970:	4620      	mov	r0, r4
 8027972:	8022      	strh	r2, [r4, #0]
 8027974:	8063      	strh	r3, [r4, #2]
 8027976:	80e1      	strh	r1, [r4, #6]
 8027978:	b009      	add	sp, #36	; 0x24
 802797a:	bd30      	pop	{r4, r5, pc}

0802797c <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802797c:	b510      	push	{r4, lr}
 802797e:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8027982:	4604      	mov	r4, r0
 8027984:	f7ff ffc4 	bl	8027910 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027988:	4620      	mov	r0, r4
 802798a:	bd10      	pop	{r4, pc}

0802798c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802798c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802798e:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8027992:	4606      	mov	r6, r0
 8027994:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027998:	6813      	ldr	r3, [r2, #0]
 802799a:	42a5      	cmp	r5, r4
 802799c:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80279a0:	da2b      	bge.n	80279fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80279a2:	42a3      	cmp	r3, r4
 80279a4:	dd14      	ble.n	80279d0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80279a6:	b168      	cbz	r0, 80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80279a8:	4267      	negs	r7, r4
 80279aa:	fb97 f2f0 	sdiv	r2, r7, r0
 80279ae:	fb00 7212 	mls	r2, r0, r2, r7
 80279b2:	1a82      	subs	r2, r0, r2
 80279b4:	fb92 f7f0 	sdiv	r7, r2, r0
 80279b8:	fb00 2017 	mls	r0, r0, r7, r2
 80279bc:	1a24      	subs	r4, r4, r0
 80279be:	42ac      	cmp	r4, r5
 80279c0:	bfb8      	it	lt
 80279c2:	462c      	movlt	r4, r5
 80279c4:	4630      	mov	r0, r6
 80279c6:	4622      	mov	r2, r4
 80279c8:	f7ff ffa2 	bl	8027910 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80279cc:	4630      	mov	r0, r6
 80279ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80279d0:	42ab      	cmp	r3, r5
 80279d2:	dd0e      	ble.n	80279f2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80279d4:	b168      	cbz	r0, 80279f2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80279d6:	425f      	negs	r7, r3
 80279d8:	fb97 f2f0 	sdiv	r2, r7, r0
 80279dc:	fb00 7212 	mls	r2, r0, r2, r7
 80279e0:	1a82      	subs	r2, r0, r2
 80279e2:	fb92 f7f0 	sdiv	r7, r2, r0
 80279e6:	fb00 2017 	mls	r0, r0, r7, r2
 80279ea:	1a1b      	subs	r3, r3, r0
 80279ec:	42ab      	cmp	r3, r5
 80279ee:	bfb8      	it	lt
 80279f0:	462b      	movlt	r3, r5
 80279f2:	4622      	mov	r2, r4
 80279f4:	461c      	mov	r4, r3
 80279f6:	4613      	mov	r3, r2
 80279f8:	e7e4      	b.n	80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80279fa:	42a3      	cmp	r3, r4
 80279fc:	da10      	bge.n	8027a20 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80279fe:	b148      	cbz	r0, 8027a14 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8027a00:	fb94 f2f0 	sdiv	r2, r4, r0
 8027a04:	fb00 4212 	mls	r2, r0, r2, r4
 8027a08:	1a82      	subs	r2, r0, r2
 8027a0a:	fb92 f7f0 	sdiv	r7, r2, r0
 8027a0e:	fb00 2017 	mls	r0, r0, r7, r2
 8027a12:	4404      	add	r4, r0
 8027a14:	42a5      	cmp	r5, r4
 8027a16:	bfa8      	it	ge
 8027a18:	4625      	movge	r5, r4
 8027a1a:	461c      	mov	r4, r3
 8027a1c:	462b      	mov	r3, r5
 8027a1e:	e7d1      	b.n	80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027a20:	42ab      	cmp	r3, r5
 8027a22:	dacf      	bge.n	80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027a24:	2800      	cmp	r0, #0
 8027a26:	d0cd      	beq.n	80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027a28:	fb93 f2f0 	sdiv	r2, r3, r0
 8027a2c:	fb00 3212 	mls	r2, r0, r2, r3
 8027a30:	1a82      	subs	r2, r0, r2
 8027a32:	fb92 f7f0 	sdiv	r7, r2, r0
 8027a36:	fb00 2017 	mls	r0, r0, r7, r2
 8027a3a:	4403      	add	r3, r0
 8027a3c:	42ab      	cmp	r3, r5
 8027a3e:	bfa8      	it	ge
 8027a40:	462b      	movge	r3, r5
 8027a42:	e7bf      	b.n	80279c4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027a44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a48:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027a4c:	42ae      	cmp	r6, r5
 8027a4e:	bfa2      	ittt	ge
 8027a50:	4633      	movge	r3, r6
 8027a52:	462e      	movge	r6, r5
 8027a54:	461d      	movge	r5, r3
 8027a56:	1bab      	subs	r3, r5, r6
 8027a58:	468b      	mov	fp, r1
 8027a5a:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027a5c:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8027a60:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027a64:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027a68:	f04f 0220 	mov.w	r2, #32
 8027a6c:	b0ab      	sub	sp, #172	; 0xac
 8027a6e:	4604      	mov	r4, r0
 8027a70:	bfa4      	itt	ge
 8027a72:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027a76:	2600      	movge	r6, #0
 8027a78:	fb99 f9f2 	sdiv	r9, r9, r2
 8027a7c:	fb9a faf2 	sdiv	sl, sl, r2
 8027a80:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8027a82:	2900      	cmp	r1, #0
 8027a84:	f000 80f5 	beq.w	8027c72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027a88:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027a8c:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8027a90:	eba9 0700 	sub.w	r7, r9, r0
 8027a94:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027a98:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027a9c:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8027aa0:	ebaa 0802 	sub.w	r8, sl, r2
 8027aa4:	4407      	add	r7, r0
 8027aa6:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027aaa:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8027aae:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8027ab2:	b23f      	sxth	r7, r7
 8027ab4:	4490      	add	r8, r2
 8027ab6:	eba9 0707 	sub.w	r7, r9, r7
 8027aba:	fa0f f888 	sxth.w	r8, r8
 8027abe:	ebaa 0808 	sub.w	r8, sl, r8
 8027ac2:	2f00      	cmp	r7, #0
 8027ac4:	bfb8      	it	lt
 8027ac6:	427f      	neglt	r7, r7
 8027ac8:	f1b8 0f00 	cmp.w	r8, #0
 8027acc:	bfb8      	it	lt
 8027ace:	f1c8 0800 	rsblt	r8, r8, #0
 8027ad2:	45bc      	cmp	ip, r7
 8027ad4:	bfcc      	ite	gt
 8027ad6:	f10c 0701 	addgt.w	r7, ip, #1
 8027ada:	3701      	addle	r7, #1
 8027adc:	4540      	cmp	r0, r8
 8027ade:	bfc8      	it	gt
 8027ae0:	f100 0801 	addgt.w	r8, r0, #1
 8027ae4:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027ae8:	f100 0001 	add.w	r0, r0, #1
 8027aec:	ea4f 0060 	mov.w	r0, r0, asr #1
 8027af0:	f04f 0202 	mov.w	r2, #2
 8027af4:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027af8:	fb91 f1f2 	sdiv	r1, r1, r2
 8027afc:	eba3 0301 	sub.w	r3, r3, r1
 8027b00:	bfd8      	it	le
 8027b02:	f108 0801 	addle.w	r8, r8, #1
 8027b06:	9201      	str	r2, [sp, #4]
 8027b08:	930d      	str	r3, [sp, #52]	; 0x34
 8027b0a:	f7ea fa97 	bl	801203c <_ZN8touchgfx7CWRUtil4sineEi>
 8027b0e:	a92a      	add	r1, sp, #168	; 0xa8
 8027b10:	fb08 f808 	mul.w	r8, r8, r8
 8027b14:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027b18:	a80d      	add	r0, sp, #52	; 0x34
 8027b1a:	f7ea f977 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b1e:	fb07 8707 	mla	r7, r7, r7, r8
 8027b22:	f04f 0c20 	mov.w	ip, #32
 8027b26:	fb90 f0fc 	sdiv	r0, r0, ip
 8027b2a:	4340      	muls	r0, r0
 8027b2c:	4287      	cmp	r7, r0
 8027b2e:	9a01      	ldr	r2, [sp, #4]
 8027b30:	da04      	bge.n	8027b3c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8027b32:	2401      	movs	r4, #1
 8027b34:	4620      	mov	r0, r4
 8027b36:	b02b      	add	sp, #172	; 0xac
 8027b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b3c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8027b3e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8027b40:	fb91 f3f2 	sdiv	r3, r1, r2
 8027b44:	4403      	add	r3, r0
 8027b46:	fb93 f3fc 	sdiv	r3, r3, ip
 8027b4a:	f9bb 1000 	ldrsh.w	r1, [fp]
 8027b4e:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8027b52:	440a      	add	r2, r1
 8027b54:	b212      	sxth	r2, r2
 8027b56:	454a      	cmp	r2, r9
 8027b58:	bfa8      	it	ge
 8027b5a:	464a      	movge	r2, r9
 8027b5c:	428a      	cmp	r2, r1
 8027b5e:	bfac      	ite	ge
 8027b60:	eba9 0902 	subge.w	r9, r9, r2
 8027b64:	eba9 0901 	sublt.w	r9, r9, r1
 8027b68:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027b6c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8027b70:	440a      	add	r2, r1
 8027b72:	b212      	sxth	r2, r2
 8027b74:	4552      	cmp	r2, sl
 8027b76:	bfa8      	it	ge
 8027b78:	4652      	movge	r2, sl
 8027b7a:	428a      	cmp	r2, r1
 8027b7c:	bfac      	ite	ge
 8027b7e:	ebaa 0a02 	subge.w	sl, sl, r2
 8027b82:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027b86:	3301      	adds	r3, #1
 8027b88:	fb0a fa0a 	mul.w	sl, sl, sl
 8027b8c:	fb09 a909 	mla	r9, r9, r9, sl
 8027b90:	435b      	muls	r3, r3
 8027b92:	4599      	cmp	r9, r3
 8027b94:	dccd      	bgt.n	8027b32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027b96:	465a      	mov	r2, fp
 8027b98:	4621      	mov	r1, r4
 8027b9a:	a80e      	add	r0, sp, #56	; 0x38
 8027b9c:	f7ff faae 	bl	80270fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8027ba0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8027ba2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027ba4:	9209      	str	r2, [sp, #36]	; 0x24
 8027ba6:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027baa:	930a      	str	r3, [sp, #40]	; 0x28
 8027bac:	dd07      	ble.n	8027bbe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8027bae:	2102      	movs	r1, #2
 8027bb0:	fb93 f3f1 	sdiv	r3, r3, r1
 8027bb4:	4413      	add	r3, r2
 8027bb6:	930a      	str	r3, [sp, #40]	; 0x28
 8027bb8:	fb93 f3f1 	sdiv	r3, r3, r1
 8027bbc:	9309      	str	r3, [sp, #36]	; 0x24
 8027bbe:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027bc2:	4630      	mov	r0, r6
 8027bc4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027bc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027bca:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8027bce:	f7ea fa55 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bd2:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027bd6:	f04f 0a02 	mov.w	sl, #2
 8027bda:	f849 0d74 	str.w	r0, [r9, #-116]!
 8027bde:	a80b      	add	r0, sp, #44	; 0x2c
 8027be0:	4649      	mov	r1, r9
 8027be2:	f7ea f913 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027be6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027be8:	fb90 f0fa 	sdiv	r0, r0, sl
 8027bec:	eb00 0b03 	add.w	fp, r0, r3
 8027bf0:	4630      	mov	r0, r6
 8027bf2:	f7ff fcc7 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bf6:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027bfa:	017f      	lsls	r7, r7, #5
 8027bfc:	f848 0d78 	str.w	r0, [r8, #-120]!
 8027c00:	a80b      	add	r0, sp, #44	; 0x2c
 8027c02:	4641      	mov	r1, r8
 8027c04:	f7ea f902 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c08:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027c0a:	fb90 f0fa 	sdiv	r0, r0, sl
 8027c0e:	4659      	mov	r1, fp
 8027c10:	1a12      	subs	r2, r2, r0
 8027c12:	a80e      	add	r0, sp, #56	; 0x38
 8027c14:	f7ff fbf2 	bl	80273fc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027c18:	f106 0a20 	add.w	sl, r6, #32
 8027c1c:	bb67      	cbnz	r7, 8027c78 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8027c1e:	46b3      	mov	fp, r6
 8027c20:	45aa      	cmp	sl, r5
 8027c22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027c24:	dc33      	bgt.n	8027c8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027c26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027c28:	4650      	mov	r0, sl
 8027c2a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8027c2e:	920b      	str	r2, [sp, #44]	; 0x2c
 8027c30:	f7ea fa24 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027c34:	4641      	mov	r1, r8
 8027c36:	900c      	str	r0, [sp, #48]	; 0x30
 8027c38:	a80b      	add	r0, sp, #44	; 0x2c
 8027c3a:	f7ea f8e7 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8027c40:	2302      	movs	r3, #2
 8027c42:	fb90 f0f3 	sdiv	r0, r0, r3
 8027c46:	eb00 0b02 	add.w	fp, r0, r2
 8027c4a:	4650      	mov	r0, sl
 8027c4c:	f7ff fc9a 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027c50:	4649      	mov	r1, r9
 8027c52:	900d      	str	r0, [sp, #52]	; 0x34
 8027c54:	a80b      	add	r0, sp, #44	; 0x2c
 8027c56:	f7ea f8d9 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027c5a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027c5c:	2302      	movs	r3, #2
 8027c5e:	4659      	mov	r1, fp
 8027c60:	fb90 f0f3 	sdiv	r0, r0, r3
 8027c64:	1a12      	subs	r2, r2, r0
 8027c66:	a80e      	add	r0, sp, #56	; 0x38
 8027c68:	46d3      	mov	fp, sl
 8027c6a:	f7ff fc14 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c6e:	44ba      	add	sl, r7
 8027c70:	e7d6      	b.n	8027c20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8027c72:	fb93 f3f2 	sdiv	r3, r3, r2
 8027c76:	e768      	b.n	8027b4a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027c78:	fb9a f2f7 	sdiv	r2, sl, r7
 8027c7c:	fb07 a212 	mls	r2, r7, r2, sl
 8027c80:	1aba      	subs	r2, r7, r2
 8027c82:	fb92 f1f7 	sdiv	r1, r2, r7
 8027c86:	fb07 2211 	mls	r2, r7, r1, r2
 8027c8a:	4492      	add	sl, r2
 8027c8c:	e7c7      	b.n	8027c1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8027c8e:	45ab      	cmp	fp, r5
 8027c90:	da23      	bge.n	8027cda <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8027c92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027c94:	4628      	mov	r0, r5
 8027c96:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027c9a:	920b      	str	r2, [sp, #44]	; 0x2c
 8027c9c:	f7ea f9ee 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ca0:	4641      	mov	r1, r8
 8027ca2:	900c      	str	r0, [sp, #48]	; 0x30
 8027ca4:	a80b      	add	r0, sp, #44	; 0x2c
 8027ca6:	f7ea f8b1 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027caa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027cac:	f04f 0a02 	mov.w	sl, #2
 8027cb0:	fb90 f0fa 	sdiv	r0, r0, sl
 8027cb4:	4403      	add	r3, r0
 8027cb6:	4628      	mov	r0, r5
 8027cb8:	9301      	str	r3, [sp, #4]
 8027cba:	f7ff fc63 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027cbe:	4649      	mov	r1, r9
 8027cc0:	900d      	str	r0, [sp, #52]	; 0x34
 8027cc2:	a80b      	add	r0, sp, #44	; 0x2c
 8027cc4:	f7ea f8a2 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027cc8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027cca:	9b01      	ldr	r3, [sp, #4]
 8027ccc:	fb90 f0fa 	sdiv	r0, r0, sl
 8027cd0:	4619      	mov	r1, r3
 8027cd2:	1a12      	subs	r2, r2, r0
 8027cd4:	a80e      	add	r0, sp, #56	; 0x38
 8027cd6:	f7ff fbde 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027cdc:	b99b      	cbnz	r3, 8027d06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8027cde:	1bad      	subs	r5, r5, r6
 8027ce0:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027ce4:	da04      	bge.n	8027cf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027ce6:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027cea:	a80e      	add	r0, sp, #56	; 0x38
 8027cec:	f7ff fbd3 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027cf0:	21ff      	movs	r1, #255	; 0xff
 8027cf2:	a80e      	add	r0, sp, #56	; 0x38
 8027cf4:	f7ff fabe 	bl	8027274 <_ZN8touchgfx6Canvas6renderEh>
 8027cf8:	4604      	mov	r4, r0
 8027cfa:	4b8a      	ldr	r3, [pc, #552]	; (8027f24 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027cfc:	930e      	str	r3, [sp, #56]	; 0x38
 8027cfe:	a816      	add	r0, sp, #88	; 0x58
 8027d00:	f7eb fcf0 	bl	80136e4 <_ZN8touchgfx7OutlineD1Ev>
 8027d04:	e716      	b.n	8027b34 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027d06:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027d0a:	429a      	cmp	r2, r3
 8027d0c:	f0c0 8107 	bcc.w	8027f1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8027d10:	1bab      	subs	r3, r5, r6
 8027d12:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027d16:	9301      	str	r3, [sp, #4]
 8027d18:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027d1c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027d20:	da43      	bge.n	8027daa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027d22:	4628      	mov	r0, r5
 8027d24:	f7ea f9aa 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d28:	4649      	mov	r1, r9
 8027d2a:	900d      	str	r0, [sp, #52]	; 0x34
 8027d2c:	a809      	add	r0, sp, #36	; 0x24
 8027d2e:	f7ea f86d 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d32:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027d34:	18c3      	adds	r3, r0, r3
 8027d36:	4628      	mov	r0, r5
 8027d38:	9303      	str	r3, [sp, #12]
 8027d3a:	f7ff fc23 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d3e:	4649      	mov	r1, r9
 8027d40:	900d      	str	r0, [sp, #52]	; 0x34
 8027d42:	a809      	add	r0, sp, #36	; 0x24
 8027d44:	f7ea f862 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d48:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027d4a:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027d4e:	1a1b      	subs	r3, r3, r0
 8027d50:	9302      	str	r3, [sp, #8]
 8027d52:	9204      	str	r2, [sp, #16]
 8027d54:	eb0a 0305 	add.w	r3, sl, r5
 8027d58:	9a04      	ldr	r2, [sp, #16]
 8027d5a:	4293      	cmp	r3, r2
 8027d5c:	da25      	bge.n	8027daa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027d5e:	4618      	mov	r0, r3
 8027d60:	9306      	str	r3, [sp, #24]
 8027d62:	f7ea f98b 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027d66:	4649      	mov	r1, r9
 8027d68:	900d      	str	r0, [sp, #52]	; 0x34
 8027d6a:	a80a      	add	r0, sp, #40	; 0x28
 8027d6c:	f7ea f84e 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d70:	9b03      	ldr	r3, [sp, #12]
 8027d72:	2202      	movs	r2, #2
 8027d74:	fb90 f0f2 	sdiv	r0, r0, r2
 8027d78:	18c3      	adds	r3, r0, r3
 8027d7a:	9305      	str	r3, [sp, #20]
 8027d7c:	9b06      	ldr	r3, [sp, #24]
 8027d7e:	9207      	str	r2, [sp, #28]
 8027d80:	4618      	mov	r0, r3
 8027d82:	f7ff fbff 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027d86:	a92a      	add	r1, sp, #168	; 0xa8
 8027d88:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027d8c:	a80a      	add	r0, sp, #40	; 0x28
 8027d8e:	f7ea f83d 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027d92:	9b02      	ldr	r3, [sp, #8]
 8027d94:	9a07      	ldr	r2, [sp, #28]
 8027d96:	9905      	ldr	r1, [sp, #20]
 8027d98:	fb90 f2f2 	sdiv	r2, r0, r2
 8027d9c:	a80e      	add	r0, sp, #56	; 0x38
 8027d9e:	1a9a      	subs	r2, r3, r2
 8027da0:	f7ff fb79 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027da4:	9b06      	ldr	r3, [sp, #24]
 8027da6:	4453      	add	r3, sl
 8027da8:	e7d6      	b.n	8027d58 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027daa:	45ab      	cmp	fp, r5
 8027dac:	da25      	bge.n	8027dfa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027dae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027db2:	4628      	mov	r0, r5
 8027db4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027db8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027dba:	f7ea f95f 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027dbe:	4641      	mov	r1, r8
 8027dc0:	900c      	str	r0, [sp, #48]	; 0x30
 8027dc2:	a80b      	add	r0, sp, #44	; 0x2c
 8027dc4:	f7ea f822 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027dc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027dca:	2202      	movs	r2, #2
 8027dcc:	fb90 f0f2 	sdiv	r0, r0, r2
 8027dd0:	eb00 0903 	add.w	r9, r0, r3
 8027dd4:	4628      	mov	r0, r5
 8027dd6:	9202      	str	r2, [sp, #8]
 8027dd8:	f7ff fbd4 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ddc:	a92a      	add	r1, sp, #168	; 0xa8
 8027dde:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027de2:	a80b      	add	r0, sp, #44	; 0x2c
 8027de4:	f7ea f812 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027de8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027dea:	9a02      	ldr	r2, [sp, #8]
 8027dec:	fb90 f2f2 	sdiv	r2, r0, r2
 8027df0:	4649      	mov	r1, r9
 8027df2:	1a9a      	subs	r2, r3, r2
 8027df4:	a80e      	add	r0, sp, #56	; 0x38
 8027df6:	f7ff fb4e 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027dfa:	46d9      	mov	r9, fp
 8027dfc:	2502      	movs	r5, #2
 8027dfe:	45b1      	cmp	r9, r6
 8027e00:	db25      	blt.n	8027e4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027e02:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027e06:	4648      	mov	r0, r9
 8027e08:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027e0c:	930b      	str	r3, [sp, #44]	; 0x2c
 8027e0e:	f7ea f935 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e12:	4641      	mov	r1, r8
 8027e14:	900c      	str	r0, [sp, #48]	; 0x30
 8027e16:	a80b      	add	r0, sp, #44	; 0x2c
 8027e18:	f7e9 fff8 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e1c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027e1e:	fb90 f0f5 	sdiv	r0, r0, r5
 8027e22:	eb00 0b03 	add.w	fp, r0, r3
 8027e26:	4648      	mov	r0, r9
 8027e28:	f7ff fbac 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e2c:	a90d      	add	r1, sp, #52	; 0x34
 8027e2e:	900d      	str	r0, [sp, #52]	; 0x34
 8027e30:	a80b      	add	r0, sp, #44	; 0x2c
 8027e32:	f7e9 ffeb 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e36:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027e38:	fb90 f0f5 	sdiv	r0, r0, r5
 8027e3c:	4659      	mov	r1, fp
 8027e3e:	1a12      	subs	r2, r2, r0
 8027e40:	a80e      	add	r0, sp, #56	; 0x38
 8027e42:	46cb      	mov	fp, r9
 8027e44:	f7ff fb27 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e48:	eba9 0907 	sub.w	r9, r9, r7
 8027e4c:	e7d7      	b.n	8027dfe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027e4e:	455e      	cmp	r6, fp
 8027e50:	da22      	bge.n	8027e98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027e52:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027e56:	4630      	mov	r0, r6
 8027e58:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027e5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8027e5e:	f7ea f90d 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027e62:	4641      	mov	r1, r8
 8027e64:	900c      	str	r0, [sp, #48]	; 0x30
 8027e66:	a80b      	add	r0, sp, #44	; 0x2c
 8027e68:	f7e9 ffd0 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e6c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027e6e:	2502      	movs	r5, #2
 8027e70:	fb90 f0f5 	sdiv	r0, r0, r5
 8027e74:	4407      	add	r7, r0
 8027e76:	4630      	mov	r0, r6
 8027e78:	f7ff fb84 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027e7c:	a92a      	add	r1, sp, #168	; 0xa8
 8027e7e:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027e82:	a80b      	add	r0, sp, #44	; 0x2c
 8027e84:	f7e9 ffc2 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027e88:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027e8a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027e8e:	4639      	mov	r1, r7
 8027e90:	1a12      	subs	r2, r2, r0
 8027e92:	a80e      	add	r0, sp, #56	; 0x38
 8027e94:	f7ff faff 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027e98:	9b01      	ldr	r3, [sp, #4]
 8027e9a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027e9e:	f6bf af27 	bge.w	8027cf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027ea2:	4630      	mov	r0, r6
 8027ea4:	f7ea f8ea 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ea8:	ad2a      	add	r5, sp, #168	; 0xa8
 8027eaa:	f04f 0b02 	mov.w	fp, #2
 8027eae:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027eb2:	a809      	add	r0, sp, #36	; 0x24
 8027eb4:	4629      	mov	r1, r5
 8027eb6:	f7e9 ffa9 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027eba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027ebc:	eb00 0903 	add.w	r9, r0, r3
 8027ec0:	4630      	mov	r0, r6
 8027ec2:	f7ff fb5f 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ec6:	4629      	mov	r1, r5
 8027ec8:	900d      	str	r0, [sp, #52]	; 0x34
 8027eca:	a809      	add	r0, sp, #36	; 0x24
 8027ecc:	f7e9 ff9e 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ed0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027ed2:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027ed6:	eba3 0800 	sub.w	r8, r3, r0
 8027eda:	4454      	add	r4, sl
 8027edc:	42a6      	cmp	r6, r4
 8027ede:	f77f af07 	ble.w	8027cf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027ee2:	4620      	mov	r0, r4
 8027ee4:	f7ea f8ca 	bl	801207c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027ee8:	4629      	mov	r1, r5
 8027eea:	900d      	str	r0, [sp, #52]	; 0x34
 8027eec:	a80a      	add	r0, sp, #40	; 0x28
 8027eee:	f7e9 ff8d 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ef2:	fb90 f0fb 	sdiv	r0, r0, fp
 8027ef6:	eb00 0709 	add.w	r7, r0, r9
 8027efa:	4620      	mov	r0, r4
 8027efc:	f7ff fb42 	bl	8027584 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027f00:	a90c      	add	r1, sp, #48	; 0x30
 8027f02:	900c      	str	r0, [sp, #48]	; 0x30
 8027f04:	a80a      	add	r0, sp, #40	; 0x28
 8027f06:	f7e9 ff81 	bl	8011e0c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027f0a:	4639      	mov	r1, r7
 8027f0c:	fb90 f2fb 	sdiv	r2, r0, fp
 8027f10:	a80e      	add	r0, sp, #56	; 0x38
 8027f12:	eba8 0202 	sub.w	r2, r8, r2
 8027f16:	f7ff fabe 	bl	8027496 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027f1a:	4454      	add	r4, sl
 8027f1c:	e7de      	b.n	8027edc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027f1e:	2400      	movs	r4, #0
 8027f20:	e6eb      	b.n	8027cfa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027f22:	bf00      	nop
 8027f24:	0802fbf4 	.word	0x0802fbf4

08027f28 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027f28:	b570      	push	{r4, r5, r6, lr}
 8027f2a:	790b      	ldrb	r3, [r1, #4]
 8027f2c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027f30:	2b00      	cmp	r3, #0
 8027f32:	bf0c      	ite	eq
 8027f34:	2301      	moveq	r3, #1
 8027f36:	2300      	movne	r3, #0
 8027f38:	4604      	mov	r4, r0
 8027f3a:	460e      	mov	r6, r1
 8027f3c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027f40:	d109      	bne.n	8027f56 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027f42:	b14d      	cbz	r5, 8027f58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027f44:	7933      	ldrb	r3, [r6, #4]
 8027f46:	2b01      	cmp	r3, #1
 8027f48:	d10c      	bne.n	8027f64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027f4a:	6823      	ldr	r3, [r4, #0]
 8027f4c:	4620      	mov	r0, r4
 8027f4e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027f50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027f54:	4718      	bx	r3
 8027f56:	b12d      	cbz	r5, 8027f64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027f58:	6823      	ldr	r3, [r4, #0]
 8027f5a:	4620      	mov	r0, r4
 8027f5c:	695b      	ldr	r3, [r3, #20]
 8027f5e:	4798      	blx	r3
 8027f60:	2d00      	cmp	r5, #0
 8027f62:	d1ef      	bne.n	8027f44 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027f64:	bd70      	pop	{r4, r5, r6, pc}

08027f66 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027f66:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027f6a:	4770      	bx	lr

08027f6c <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027f6c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027f70:	4770      	bx	lr

08027f72 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027f72:	6802      	ldr	r2, [r0, #0]
 8027f74:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027f78:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027f7a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027f7e:	4710      	bx	r2

08027f80 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027f80:	6802      	ldr	r2, [r0, #0]
 8027f82:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027f86:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027f88:	eef0 0a40 	vmov.f32	s1, s0
 8027f8c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027f90:	4710      	bx	r2

08027f92 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027f92:	6802      	ldr	r2, [r0, #0]
 8027f94:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027f98:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027f9a:	eeb0 1a40 	vmov.f32	s2, s0
 8027f9e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027fa2:	4710      	bx	r2

08027fa4 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027fa4:	6802      	ldr	r2, [r0, #0]
 8027fa6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027faa:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027fac:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027fb0:	4710      	bx	r2

08027fb2 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027fb2:	6802      	ldr	r2, [r0, #0]
 8027fb4:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027fb8:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027fba:	eef0 0a40 	vmov.f32	s1, s0
 8027fbe:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027fc2:	4710      	bx	r2

08027fc4 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027fc4:	6802      	ldr	r2, [r0, #0]
 8027fc6:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027fca:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027fcc:	eeb0 1a40 	vmov.f32	s2, s0
 8027fd0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027fd4:	4710      	bx	r2

08027fd6 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027fd6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027fda:	4770      	bx	lr

08027fdc <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027fdc:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027fe0:	4770      	bx	lr

08027fe2 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027fe2:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027fe6:	4770      	bx	lr

08027fe8 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027fe8:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027fec:	4770      	bx	lr

08027fee <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027fee:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027ff2:	4770      	bx	lr

08027ff4 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027ff4:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027ff8:	4770      	bx	lr

08027ffa <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027ffa:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027ffe:	4770      	bx	lr

08028000 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028000:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028004:	4770      	bx	lr

08028006 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028006:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802800a:	4770      	bx	lr

0802800c <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802800c:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028010:	4770      	bx	lr

08028012 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028012:	ee07 2a90 	vmov	s15, r2
 8028016:	6803      	ldr	r3, [r0, #0]
 8028018:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802801c:	ee07 1a90 	vmov	s15, r1
 8028020:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028024:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028028:	4718      	bx	r3

0802802a <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802802a:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802802e:	4770      	bx	lr

08028030 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028030:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028034:	4770      	bx	lr

08028036 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028036:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802803a:	4770      	bx	lr

0802803c <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802803c:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028040:	4770      	bx	lr

08028042 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028042:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028046:	4770      	bx	lr

08028048 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028048:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802804c:	4770      	bx	lr

0802804e <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802804e:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028052:	4770      	bx	lr

08028054 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028054:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028058:	4770      	bx	lr

0802805a <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802805a:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802805e:	4770      	bx	lr

08028060 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028060:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028064:	4770      	bx	lr

08028066 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028066:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802806a:	4770      	bx	lr

0802806c <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802806c:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028070:	4770      	bx	lr

08028072 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028072:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028076:	4770      	bx	lr

08028078 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028078:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802807c:	4770      	bx	lr

0802807e <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802807e:	b510      	push	{r4, lr}
 8028080:	ed2d 8b04 	vpush	{d8-d9}
 8028084:	6803      	ldr	r3, [r0, #0]
 8028086:	4604      	mov	r4, r0
 8028088:	699b      	ldr	r3, [r3, #24]
 802808a:	eeb0 8a40 	vmov.f32	s16, s0
 802808e:	eef0 8a60 	vmov.f32	s17, s1
 8028092:	eeb0 9a41 	vmov.f32	s18, s2
 8028096:	4798      	blx	r3
 8028098:	6823      	ldr	r3, [r4, #0]
 802809a:	4620      	mov	r0, r4
 802809c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802809e:	eeb0 1a49 	vmov.f32	s2, s18
 80280a2:	eef0 0a68 	vmov.f32	s1, s17
 80280a6:	eeb0 0a48 	vmov.f32	s0, s16
 80280aa:	4798      	blx	r3
 80280ac:	ecbd 8b04 	vpop	{d8-d9}
 80280b0:	6823      	ldr	r3, [r4, #0]
 80280b2:	4620      	mov	r0, r4
 80280b4:	699b      	ldr	r3, [r3, #24]
 80280b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80280ba:	4718      	bx	r3

080280bc <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80280bc:	b510      	push	{r4, lr}
 80280be:	ed2d 8b02 	vpush	{d8}
 80280c2:	6803      	ldr	r3, [r0, #0]
 80280c4:	4604      	mov	r4, r0
 80280c6:	699b      	ldr	r3, [r3, #24]
 80280c8:	eeb0 8a40 	vmov.f32	s16, s0
 80280cc:	4798      	blx	r3
 80280ce:	6823      	ldr	r3, [r4, #0]
 80280d0:	4620      	mov	r0, r4
 80280d2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80280d6:	eeb0 0a48 	vmov.f32	s0, s16
 80280da:	4798      	blx	r3
 80280dc:	ecbd 8b02 	vpop	{d8}
 80280e0:	6823      	ldr	r3, [r4, #0]
 80280e2:	4620      	mov	r0, r4
 80280e4:	699b      	ldr	r3, [r3, #24]
 80280e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80280ea:	4718      	bx	r3

080280ec <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80280ec:	2200      	movs	r2, #0
 80280ee:	8002      	strh	r2, [r0, #0]
 80280f0:	8042      	strh	r2, [r0, #2]
 80280f2:	8082      	strh	r2, [r0, #4]
 80280f4:	80c2      	strh	r2, [r0, #6]
 80280f6:	4770      	bx	lr

080280f8 <_ZN8touchgfx13TextureMapperD1Ev>:
 80280f8:	4770      	bx	lr

080280fa <_ZN8touchgfx13TextureMapperD0Ev>:
 80280fa:	b510      	push	{r4, lr}
 80280fc:	2190      	movs	r1, #144	; 0x90
 80280fe:	4604      	mov	r4, r0
 8028100:	f001 ff3f 	bl	8029f82 <_ZdlPvj>
 8028104:	4620      	mov	r0, r4
 8028106:	bd10      	pop	{r4, pc}

08028108 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028108:	b538      	push	{r3, r4, r5, lr}
 802810a:	2500      	movs	r5, #0
 802810c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028110:	2301      	movs	r3, #1
 8028112:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028116:	4b1f      	ldr	r3, [pc, #124]	; (8028194 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028118:	8085      	strh	r5, [r0, #4]
 802811a:	80c5      	strh	r5, [r0, #6]
 802811c:	8105      	strh	r5, [r0, #8]
 802811e:	8145      	strh	r5, [r0, #10]
 8028120:	8185      	strh	r5, [r0, #12]
 8028122:	81c5      	strh	r5, [r0, #14]
 8028124:	8205      	strh	r5, [r0, #16]
 8028126:	8245      	strh	r5, [r0, #18]
 8028128:	61c5      	str	r5, [r0, #28]
 802812a:	8405      	strh	r5, [r0, #32]
 802812c:	8445      	strh	r5, [r0, #34]	; 0x22
 802812e:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028132:	6003      	str	r3, [r0, #0]
 8028134:	880b      	ldrh	r3, [r1, #0]
 8028136:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028138:	23ff      	movs	r3, #255	; 0xff
 802813a:	4604      	mov	r4, r0
 802813c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028140:	f7eb f961 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028144:	4b14      	ldr	r3, [pc, #80]	; (8028198 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028146:	6023      	str	r3, [r4, #0]
 8028148:	2300      	movs	r3, #0
 802814a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802814e:	4913      	ldr	r1, [pc, #76]	; (802819c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028150:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028152:	6323      	str	r3, [r4, #48]	; 0x30
 8028154:	6363      	str	r3, [r4, #52]	; 0x34
 8028156:	63a3      	str	r3, [r4, #56]	; 0x38
 8028158:	63e3      	str	r3, [r4, #60]	; 0x3c
 802815a:	6463      	str	r3, [r4, #68]	; 0x44
 802815c:	64a3      	str	r3, [r4, #72]	; 0x48
 802815e:	6523      	str	r3, [r4, #80]	; 0x50
 8028160:	6563      	str	r3, [r4, #84]	; 0x54
 8028162:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028164:	6623      	str	r3, [r4, #96]	; 0x60
 8028166:	66a3      	str	r3, [r4, #104]	; 0x68
 8028168:	66e3      	str	r3, [r4, #108]	; 0x6c
 802816a:	6763      	str	r3, [r4, #116]	; 0x74
 802816c:	67a3      	str	r3, [r4, #120]	; 0x78
 802816e:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8028172:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028176:	230c      	movs	r3, #12
 8028178:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802817c:	6422      	str	r2, [r4, #64]	; 0x40
 802817e:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028180:	65a1      	str	r1, [r4, #88]	; 0x58
 8028182:	6662      	str	r2, [r4, #100]	; 0x64
 8028184:	6722      	str	r2, [r4, #112]	; 0x70
 8028186:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028188:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802818c:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028190:	4620      	mov	r0, r4
 8028192:	bd38      	pop	{r3, r4, r5, pc}
 8028194:	0802f69c 	.word	0x0802f69c
 8028198:	0802fc80 	.word	0x0802fc80
 802819c:	447a0000 	.word	0x447a0000

080281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80281a0:	b570      	push	{r4, r5, r6, lr}
 80281a2:	ed2d 8b04 	vpush	{d8-d9}
 80281a6:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80281aa:	add0      	add	r5, sp, #832	; 0x340
 80281ac:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80281ae:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80281b2:	4604      	mov	r4, r0
 80281b4:	4628      	mov	r0, r5
 80281b6:	f7f1 fa7f 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80281ba:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80281bc:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80281c0:	4606      	mov	r6, r0
 80281c2:	4628      	mov	r0, r5
 80281c4:	f7f1 faac 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80281c8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80281cc:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80281d0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80281d2:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80281d6:	9312      	str	r3, [sp, #72]	; 0x48
 80281d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80281dc:	1c72      	adds	r2, r6, #1
 80281de:	3001      	adds	r0, #1
 80281e0:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80281e4:	ee07 2a90 	vmov	s15, r2
 80281e8:	ee06 0a90 	vmov	s13, r0
 80281ec:	ee36 6a47 	vsub.f32	s12, s12, s14
 80281f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80281f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80281f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80281fc:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028200:	9316      	str	r3, [sp, #88]	; 0x58
 8028202:	931a      	str	r3, [sp, #104]	; 0x68
 8028204:	931e      	str	r3, [sp, #120]	; 0x78
 8028206:	2300      	movs	r3, #0
 8028208:	9320      	str	r3, [sp, #128]	; 0x80
 802820a:	9321      	str	r3, [sp, #132]	; 0x84
 802820c:	9322      	str	r3, [sp, #136]	; 0x88
 802820e:	9324      	str	r3, [sp, #144]	; 0x90
 8028210:	9325      	str	r3, [sp, #148]	; 0x94
 8028212:	9326      	str	r3, [sp, #152]	; 0x98
 8028214:	9328      	str	r3, [sp, #160]	; 0xa0
 8028216:	9329      	str	r3, [sp, #164]	; 0xa4
 8028218:	932a      	str	r3, [sp, #168]	; 0xa8
 802821a:	932c      	str	r3, [sp, #176]	; 0xb0
 802821c:	932d      	str	r3, [sp, #180]	; 0xb4
 802821e:	932e      	str	r3, [sp, #184]	; 0xb8
 8028220:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028224:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028228:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802822c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028230:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028234:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028238:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802823c:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028240:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028244:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028248:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802824c:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028250:	a830      	add	r0, sp, #192	; 0xc0
 8028252:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028256:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802825a:	f000 fc43 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 802825e:	eeb1 0a49 	vneg.f32	s0, s18
 8028262:	a830      	add	r0, sp, #192	; 0xc0
 8028264:	f000 fd12 	bl	8028c8c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028268:	eeb1 0a68 	vneg.f32	s0, s17
 802826c:	f000 fd1c 	bl	8028ca8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028270:	eeb1 0a48 	vneg.f32	s0, s16
 8028274:	f000 fd27 	bl	8028cc6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028278:	a840      	add	r0, sp, #256	; 0x100
 802827a:	f000 fc33 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 802827e:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8028282:	a840      	add	r0, sp, #256	; 0x100
 8028284:	f000 fc86 	bl	8028b94 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028288:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802828c:	f000 fcac 	bl	8028be8 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028290:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028294:	f000 fcd1 	bl	8028c3a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028298:	a850      	add	r0, sp, #320	; 0x140
 802829a:	f000 fc23 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 802829e:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80282a2:	a850      	add	r0, sp, #320	; 0x140
 80282a4:	f000 fd1e 	bl	8028ce4 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80282a8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80282ac:	f000 fd26 	bl	8028cfc <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80282b0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80282b4:	f000 fd2f 	bl	8028d16 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80282b8:	a860      	add	r0, sp, #384	; 0x180
 80282ba:	f000 fc13 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 80282be:	eeb0 0a49 	vmov.f32	s0, s18
 80282c2:	a860      	add	r0, sp, #384	; 0x180
 80282c4:	f000 fce2 	bl	8028c8c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80282c8:	eeb0 0a68 	vmov.f32	s0, s17
 80282cc:	f000 fcec 	bl	8028ca8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80282d0:	eeb0 0a48 	vmov.f32	s0, s16
 80282d4:	f000 fcf7 	bl	8028cc6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80282d8:	aa50      	add	r2, sp, #320	; 0x140
 80282da:	a960      	add	r1, sp, #384	; 0x180
 80282dc:	a8b0      	add	r0, sp, #704	; 0x2c0
 80282de:	f000 fc1b 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80282e2:	4628      	mov	r0, r5
 80282e4:	aa40      	add	r2, sp, #256	; 0x100
 80282e6:	a9b0      	add	r1, sp, #704	; 0x2c0
 80282e8:	f000 fc16 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80282ec:	4629      	mov	r1, r5
 80282ee:	aa30      	add	r2, sp, #192	; 0xc0
 80282f0:	a870      	add	r0, sp, #448	; 0x1c0
 80282f2:	f000 fc11 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80282f6:	a880      	add	r0, sp, #512	; 0x200
 80282f8:	f000 fbf4 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 80282fc:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028300:	a880      	add	r0, sp, #512	; 0x200
 8028302:	eeb1 0a40 	vneg.f32	s0, s0
 8028306:	f000 fcc1 	bl	8028c8c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802830a:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802830e:	a880      	add	r0, sp, #512	; 0x200
 8028310:	eeb1 0a40 	vneg.f32	s0, s0
 8028314:	f000 fcc8 	bl	8028ca8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028318:	a890      	add	r0, sp, #576	; 0x240
 802831a:	f000 fbe3 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 802831e:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028322:	a890      	add	r0, sp, #576	; 0x240
 8028324:	f000 fc26 	bl	8028b74 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028328:	a8a0      	add	r0, sp, #640	; 0x280
 802832a:	f000 fbdb 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 802832e:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028332:	a8a0      	add	r0, sp, #640	; 0x280
 8028334:	f000 fcaa 	bl	8028c8c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028338:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802833c:	f000 fcb4 	bl	8028ca8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028340:	aa90      	add	r2, sp, #576	; 0x240
 8028342:	a9a0      	add	r1, sp, #640	; 0x280
 8028344:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028346:	f000 fbe7 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802834a:	4628      	mov	r0, r5
 802834c:	aa80      	add	r2, sp, #512	; 0x200
 802834e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028350:	f000 fbe2 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028354:	4629      	mov	r1, r5
 8028356:	aa70      	add	r2, sp, #448	; 0x1c0
 8028358:	4668      	mov	r0, sp
 802835a:	466d      	mov	r5, sp
 802835c:	f000 fbdc 	bl	8028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028360:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028362:	ae70      	add	r6, sp, #448	; 0x1c0
 8028364:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028366:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028368:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802836a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802836c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802836e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028372:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028376:	2500      	movs	r5, #0
 8028378:	0129      	lsls	r1, r5, #4
 802837a:	ab20      	add	r3, sp, #128	; 0x80
 802837c:	185e      	adds	r6, r3, r1
 802837e:	ab10      	add	r3, sp, #64	; 0x40
 8028380:	4419      	add	r1, r3
 8028382:	a870      	add	r0, sp, #448	; 0x1c0
 8028384:	f000 fb7e 	bl	8028a84 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028388:	3501      	adds	r5, #1
 802838a:	2d04      	cmp	r5, #4
 802838c:	ed86 0a00 	vstr	s0, [r6]
 8028390:	edc6 0a01 	vstr	s1, [r6, #4]
 8028394:	ed86 1a02 	vstr	s2, [r6, #8]
 8028398:	edc6 1a03 	vstr	s3, [r6, #12]
 802839c:	d1ec      	bne.n	8028378 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802839e:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80283a2:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80283a6:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80283aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80283ae:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80283b2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80283b6:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80283ba:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80283be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80283c2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80283c6:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80283ca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80283ce:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80283d2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80283d6:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80283da:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80283de:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80283e2:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80283e6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80283ea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80283ee:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80283f2:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80283f6:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80283fa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80283fe:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028402:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028406:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802840a:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802840e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028412:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028416:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802841a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802841e:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028422:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028426:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802842a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802842e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028432:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028436:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802843a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802843e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028442:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028446:	ecbd 8b04 	vpop	{d8-d9}
 802844a:	bd70      	pop	{r4, r5, r6, pc}

0802844c <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802844c:	b510      	push	{r4, lr}
 802844e:	4604      	mov	r4, r0
 8028450:	f7ea ffd9 	bl	8013406 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028454:	4620      	mov	r0, r4
 8028456:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802845a:	f7ff bea1 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802845e <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802845e:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028462:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028466:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802846a:	f7ff be99 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802846e <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802846e:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028472:	f7ff be95 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028476 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028476:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802847a:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802847e:	f7ff be8f 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028482 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028482:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028486:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802848a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802848e:	bfd8      	it	le
 8028490:	eeb0 0a67 	vmovle.f32	s0, s15
 8028494:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028498:	f7ff be82 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802849c <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802849c:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80284a0:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80284a4:	f7ff be7c 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080284a8 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80284a8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80284ac:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80284b0:	f7ff be76 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080284b4 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80284b4:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80284b8:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80284bc:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80284c0:	f7ff be6e 	b.w	80281a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080284c4 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80284c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80284c8:	ed2d 8b04 	vpush	{d8-d9}
 80284cc:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80284d0:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80284d4:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80284d8:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80284dc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80284e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284e4:	bf54      	ite	pl
 80284e6:	eeb0 0a69 	vmovpl.f32	s0, s19
 80284ea:	eeb0 0a48 	vmovmi.f32	s0, s16
 80284ee:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80284f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80284f6:	bfd8      	it	le
 80284f8:	eeb0 0a49 	vmovle.f32	s0, s18
 80284fc:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028504:	bfd8      	it	le
 8028506:	eeb0 0a68 	vmovle.f32	s0, s17
 802850a:	460c      	mov	r4, r1
 802850c:	4607      	mov	r7, r0
 802850e:	f001 fe4f 	bl	802a1b0 <floorf>
 8028512:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802851a:	bf58      	it	pl
 802851c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028520:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028524:	bf56      	itet	pl
 8028526:	ee10 3a10 	vmovpl	r3, s0
 802852a:	2600      	movmi	r6, #0
 802852c:	b21e      	sxthpl	r6, r3
 802852e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028532:	bfd8      	it	le
 8028534:	eeb0 8a69 	vmovle.f32	s16, s19
 8028538:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802853c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028540:	bf58      	it	pl
 8028542:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028546:	eef4 8ac8 	vcmpe.f32	s17, s16
 802854a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802854e:	bf54      	ite	pl
 8028550:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028554:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028558:	f001 fde8 	bl	802a12c <ceilf>
 802855c:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028560:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028564:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028568:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802856c:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028570:	ee07 8a90 	vmov	s15, r8
 8028574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028578:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802857c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028580:	bfd8      	it	le
 8028582:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028586:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802858a:	bfdc      	itt	le
 802858c:	ee10 3a10 	vmovle	r3, s0
 8028590:	fa0f f883 	sxthle.w	r8, r3
 8028594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028598:	bf54      	ite	pl
 802859a:	eeb0 0a69 	vmovpl.f32	s0, s19
 802859e:	eeb0 0a48 	vmovmi.f32	s0, s16
 80285a2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80285a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285aa:	bfd8      	it	le
 80285ac:	eeb0 0a49 	vmovle.f32	s0, s18
 80285b0:	eef4 8ac0 	vcmpe.f32	s17, s0
 80285b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285b8:	bfd8      	it	le
 80285ba:	eeb0 0a68 	vmovle.f32	s0, s17
 80285be:	f001 fdf7 	bl	802a1b0 <floorf>
 80285c2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80285c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285ca:	bf58      	it	pl
 80285cc:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80285d0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80285d4:	bf56      	itet	pl
 80285d6:	ee10 3a10 	vmovpl	r3, s0
 80285da:	2500      	movmi	r5, #0
 80285dc:	b21d      	sxthpl	r5, r3
 80285de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285e2:	bfd8      	it	le
 80285e4:	eeb0 8a69 	vmovle.f32	s16, s19
 80285e8:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80285ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285f0:	bf58      	it	pl
 80285f2:	eeb0 8a49 	vmovpl.f32	s16, s18
 80285f6:	eef4 8ac8 	vcmpe.f32	s17, s16
 80285fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285fe:	bf54      	ite	pl
 8028600:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028604:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028608:	f001 fd90 	bl	802a12c <ceilf>
 802860c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028610:	803e      	strh	r6, [r7, #0]
 8028612:	ee07 3a90 	vmov	s15, r3
 8028616:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802861a:	807d      	strh	r5, [r7, #2]
 802861c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028624:	bfd8      	it	le
 8028626:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802862a:	eba8 0606 	sub.w	r6, r8, r6
 802862e:	bfdc      	itt	le
 8028630:	ee10 3a10 	vmovle	r3, s0
 8028634:	b21b      	sxthle	r3, r3
 8028636:	1b5d      	subs	r5, r3, r5
 8028638:	80be      	strh	r6, [r7, #4]
 802863a:	80fd      	strh	r5, [r7, #6]
 802863c:	ecbd 8b04 	vpop	{d8-d9}
 8028640:	4638      	mov	r0, r7
 8028642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028646 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028646:	b513      	push	{r0, r1, r4, lr}
 8028648:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802864c:	4604      	mov	r4, r0
 802864e:	b143      	cbz	r3, 8028662 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8028650:	4601      	mov	r1, r0
 8028652:	4668      	mov	r0, sp
 8028654:	f7ff ff36 	bl	80284c4 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028658:	6823      	ldr	r3, [r4, #0]
 802865a:	4669      	mov	r1, sp
 802865c:	691b      	ldr	r3, [r3, #16]
 802865e:	4620      	mov	r0, r4
 8028660:	4798      	blx	r3
 8028662:	b002      	add	sp, #8
 8028664:	bd10      	pop	{r4, pc}

08028666 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028666:	4603      	mov	r3, r0
 8028668:	3026      	adds	r0, #38	; 0x26
 802866a:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802866e:	b90b      	cbnz	r3, 8028674 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8028670:	f7ee bdfa 	b.w	8017268 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028674:	f7ee be08 	b.w	8017288 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028678 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802867c:	ed2d 8b04 	vpush	{d8-d9}
 8028680:	4604      	mov	r4, r0
 8028682:	469b      	mov	fp, r3
 8028684:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028688:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802868c:	f9b1 6000 	ldrsh.w	r6, [r1]
 8028690:	8888      	ldrh	r0, [r1, #4]
 8028692:	b0b3      	sub	sp, #204	; 0xcc
 8028694:	4430      	add	r0, r6
 8028696:	b280      	uxth	r0, r0
 8028698:	9206      	str	r2, [sp, #24]
 802869a:	fa0f fe80 	sxth.w	lr, r0
 802869e:	2200      	movs	r2, #0
 80286a0:	4596      	cmp	lr, r2
 80286a2:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80286a6:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80286aa:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80286ae:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80286b0:	9211      	str	r2, [sp, #68]	; 0x44
 80286b2:	f340 8129 	ble.w	8028908 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80286b6:	45b4      	cmp	ip, r6
 80286b8:	f340 8126 	ble.w	8028908 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80286bc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80286c0:	88ca      	ldrh	r2, [r1, #6]
 80286c2:	442a      	add	r2, r5
 80286c4:	b292      	uxth	r2, r2
 80286c6:	b211      	sxth	r1, r2
 80286c8:	2900      	cmp	r1, #0
 80286ca:	f340 811d 	ble.w	8028908 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80286ce:	42ab      	cmp	r3, r5
 80286d0:	f340 811a 	ble.w	8028908 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80286d4:	45f4      	cmp	ip, lr
 80286d6:	bfb8      	it	lt
 80286d8:	fa1f f08c 	uxthlt.w	r0, ip
 80286dc:	428b      	cmp	r3, r1
 80286de:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80286e2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80286e6:	bfb8      	it	lt
 80286e8:	b29a      	uxthlt	r2, r3
 80286ea:	1b80      	subs	r0, r0, r6
 80286ec:	1b52      	subs	r2, r2, r5
 80286ee:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80286f2:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80286f6:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80286fa:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80286fe:	ab11      	add	r3, sp, #68	; 0x44
 8028700:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028704:	6822      	ldr	r2, [r4, #0]
 8028706:	9307      	str	r3, [sp, #28]
 8028708:	ad13      	add	r5, sp, #76	; 0x4c
 802870a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802870c:	e885 0003 	stmia.w	r5, {r0, r1}
 8028710:	4629      	mov	r1, r5
 8028712:	4620      	mov	r0, r4
 8028714:	4790      	blx	r2
 8028716:	4621      	mov	r1, r4
 8028718:	a815      	add	r0, sp, #84	; 0x54
 802871a:	f7ee fd01 	bl	8017120 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802871e:	a815      	add	r0, sp, #84	; 0x54
 8028720:	f7ed f9c6 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028724:	9b07      	ldr	r3, [sp, #28]
 8028726:	1d26      	adds	r6, r4, #4
 8028728:	4618      	mov	r0, r3
 802872a:	4631      	mov	r1, r6
 802872c:	f7ed fa04 	bl	8015b38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028730:	4628      	mov	r0, r5
 8028732:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028736:	f7ed f9bb 	bl	8015ab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802873a:	4628      	mov	r0, r5
 802873c:	f7f1 f8a8 	bl	8019890 <_ZNK8touchgfx6Bitmap7getDataEv>
 8028740:	9007      	str	r0, [sp, #28]
 8028742:	2800      	cmp	r0, #0
 8028744:	f000 80db 	beq.w	80288fe <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028748:	f8db 2000 	ldr.w	r2, [fp]
 802874c:	9209      	str	r2, [sp, #36]	; 0x24
 802874e:	f8db 2004 	ldr.w	r2, [fp, #4]
 8028752:	920a      	str	r2, [sp, #40]	; 0x28
 8028754:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028758:	920b      	str	r2, [sp, #44]	; 0x2c
 802875a:	f8db 200c 	ldr.w	r2, [fp, #12]
 802875e:	920c      	str	r2, [sp, #48]	; 0x30
 8028760:	f8da 2000 	ldr.w	r2, [sl]
 8028764:	920d      	str	r2, [sp, #52]	; 0x34
 8028766:	f8da 2004 	ldr.w	r2, [sl, #4]
 802876a:	920e      	str	r2, [sp, #56]	; 0x38
 802876c:	f8da 2008 	ldr.w	r2, [sl, #8]
 8028770:	920f      	str	r2, [sp, #60]	; 0x3c
 8028772:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028776:	9210      	str	r2, [sp, #64]	; 0x40
 8028778:	a90d      	add	r1, sp, #52	; 0x34
 802877a:	4632      	mov	r2, r6
 802877c:	a809      	add	r0, sp, #36	; 0x24
 802877e:	f7ed f9bf 	bl	8015b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028782:	4632      	mov	r2, r6
 8028784:	a90e      	add	r1, sp, #56	; 0x38
 8028786:	a80a      	add	r0, sp, #40	; 0x28
 8028788:	f7ed f9ba 	bl	8015b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802878c:	4632      	mov	r2, r6
 802878e:	a90f      	add	r1, sp, #60	; 0x3c
 8028790:	a80b      	add	r0, sp, #44	; 0x2c
 8028792:	f7ed f9b5 	bl	8015b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028796:	4632      	mov	r2, r6
 8028798:	a910      	add	r1, sp, #64	; 0x40
 802879a:	a80c      	add	r0, sp, #48	; 0x30
 802879c:	f7ed f9b0 	bl	8015b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80287a0:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80287a4:	edd7 4a00 	vldr	s9, [r7]
 80287a8:	edd7 5a01 	vldr	s11, [r7, #4]
 80287ac:	ed98 4a00 	vldr	s8, [r8]
 80287b0:	ed98 5a01 	vldr	s10, [r8, #4]
 80287b4:	ed99 9a00 	vldr	s18, [r9]
 80287b8:	ed99 8a01 	vldr	s16, [r9, #4]
 80287bc:	edd9 8a02 	vldr	s17, [r9, #8]
 80287c0:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80287c4:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80287c8:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80287cc:	eef0 6a67 	vmov.f32	s13, s15
 80287d0:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80287d4:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80287d8:	eeb0 7a67 	vmov.f32	s14, s15
 80287dc:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80287e0:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80287e4:	eeb0 6a67 	vmov.f32	s12, s15
 80287e8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80287ec:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80287f0:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80287f4:	ee16 6a10 	vmov	r6, s12
 80287f8:	eeb0 6a67 	vmov.f32	s12, s15
 80287fc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028800:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028804:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028808:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802880c:	68ff      	ldr	r7, [r7, #12]
 802880e:	9624      	str	r6, [sp, #144]	; 0x90
 8028810:	ee16 0a10 	vmov	r0, s12
 8028814:	eeb0 6a67 	vmov.f32	s12, s15
 8028818:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802881c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8028820:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028824:	ee16 1a10 	vmov	r1, s12
 8028828:	eeb0 6a67 	vmov.f32	s12, s15
 802882c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028830:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028834:	ee16 2a10 	vmov	r2, s12
 8028838:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802883c:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8028840:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028844:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028848:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802884c:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8028850:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8028854:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028858:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802885c:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8028860:	922d      	str	r2, [sp, #180]	; 0xb4
 8028862:	4a2b      	ldr	r2, [pc, #172]	; (8028910 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8028864:	9b06      	ldr	r3, [sp, #24]
 8028866:	8812      	ldrh	r2, [r2, #0]
 8028868:	9317      	str	r3, [sp, #92]	; 0x5c
 802886a:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802886e:	9b07      	ldr	r3, [sp, #28]
 8028870:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028874:	4628      	mov	r0, r5
 8028876:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802887a:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802887e:	9218      	str	r2, [sp, #96]	; 0x60
 8028880:	9319      	str	r3, [sp, #100]	; 0x64
 8028882:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028886:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802888a:	9731      	str	r7, [sp, #196]	; 0xc4
 802888c:	f7f1 f830 	bl	80198f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8028890:	901a      	str	r0, [sp, #104]	; 0x68
 8028892:	4628      	mov	r0, r5
 8028894:	f7f0 ff10 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028898:	901b      	str	r0, [sp, #108]	; 0x6c
 802889a:	4628      	mov	r0, r5
 802889c:	f7f0 ff40 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80288a0:	901c      	str	r0, [sp, #112]	; 0x70
 80288a2:	4628      	mov	r0, r5
 80288a4:	f7f0 ff08 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80288a8:	eeb4 9a48 	vcmp.f32	s18, s16
 80288ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288b0:	901d      	str	r0, [sp, #116]	; 0x74
 80288b2:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80288b6:	d107      	bne.n	80288c8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80288b8:	eeb4 8a68 	vcmp.f32	s16, s17
 80288bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80288c4:	bf08      	it	eq
 80288c6:	461e      	moveq	r6, r3
 80288c8:	4b12      	ldr	r3, [pc, #72]	; (8028914 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80288ca:	681b      	ldr	r3, [r3, #0]
 80288cc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80288d0:	b10a      	cbz	r2, 80288d6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80288d2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80288d4:	b905      	cbnz	r5, 80288d8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80288d6:	689d      	ldr	r5, [r3, #8]
 80288d8:	682b      	ldr	r3, [r5, #0]
 80288da:	4620      	mov	r0, r4
 80288dc:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80288de:	f7ff fec2 	bl	8028666 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80288e2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80288e6:	9604      	str	r6, [sp, #16]
 80288e8:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80288ec:	ab13      	add	r3, sp, #76	; 0x4c
 80288ee:	9301      	str	r3, [sp, #4]
 80288f0:	ab15      	add	r3, sp, #84	; 0x54
 80288f2:	9300      	str	r3, [sp, #0]
 80288f4:	aa1e      	add	r2, sp, #120	; 0x78
 80288f6:	ab19      	add	r3, sp, #100	; 0x64
 80288f8:	a917      	add	r1, sp, #92	; 0x5c
 80288fa:	4628      	mov	r0, r5
 80288fc:	47b8      	blx	r7
 80288fe:	b033      	add	sp, #204	; 0xcc
 8028900:	ecbd 8b04 	vpop	{d8-d9}
 8028904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028908:	2300      	movs	r3, #0
 802890a:	9312      	str	r3, [sp, #72]	; 0x48
 802890c:	e6f7      	b.n	80286fe <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802890e:	bf00      	nop
 8028910:	20012fbe 	.word	0x20012fbe
 8028914:	20012fc4 	.word	0x20012fc4

08028918 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802891c:	ed2d 8b02 	vpush	{d8}
 8028920:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028924:	b098      	sub	sp, #96	; 0x60
 8028926:	4604      	mov	r4, r0
 8028928:	4688      	mov	r8, r1
 802892a:	2b00      	cmp	r3, #0
 802892c:	d077      	beq.n	8028a1e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802892e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8028932:	4628      	mov	r0, r5
 8028934:	f7f0 fec0 	bl	80196b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028938:	ee07 0a90 	vmov	s15, r0
 802893c:	4628      	mov	r0, r5
 802893e:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8028942:	f7f0 feed 	bl	8019720 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028946:	4b4e      	ldr	r3, [pc, #312]	; (8028a80 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028948:	781b      	ldrb	r3, [r3, #0]
 802894a:	ee07 0a90 	vmov	s15, r0
 802894e:	2b01      	cmp	r3, #1
 8028950:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028954:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028958:	d066      	beq.n	8028a28 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802895a:	eeb0 6a47 	vmov.f32	s12, s14
 802895e:	ee17 3a10 	vmov	r3, s14
 8028962:	eeb0 4a48 	vmov.f32	s8, s16
 8028966:	eeb0 7a48 	vmov.f32	s14, s16
 802896a:	eef0 4a67 	vmov.f32	s9, s15
 802896e:	eeb0 8a67 	vmov.f32	s16, s15
 8028972:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028976:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802897a:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802897e:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8028982:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028986:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802898a:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802898c:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802898e:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8028990:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028994:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028998:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802899c:	ee73 1a65 	vsub.f32	s3, s6, s11
 80289a0:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80289a4:	ee32 1a45 	vsub.f32	s2, s4, s10
 80289a8:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80289ac:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80289b0:	eee1 6a21 	vfma.f32	s13, s2, s3
 80289b4:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80289b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289bc:	dd3d      	ble.n	8028a3a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80289be:	ed8d 5a04 	vstr	s10, [sp, #16]
 80289c2:	ed8d 2a05 	vstr	s4, [sp, #20]
 80289c6:	edcd 2a06 	vstr	s5, [sp, #24]
 80289ca:	f8cd c01c 	str.w	ip, [sp, #28]
 80289ce:	edcd 5a08 	vstr	s11, [sp, #32]
 80289d2:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80289d6:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80289da:	970b      	str	r7, [sp, #44]	; 0x2c
 80289dc:	960c      	str	r6, [sp, #48]	; 0x30
 80289de:	950d      	str	r5, [sp, #52]	; 0x34
 80289e0:	920e      	str	r2, [sp, #56]	; 0x38
 80289e2:	900f      	str	r0, [sp, #60]	; 0x3c
 80289e4:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80289e8:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80289ec:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80289f0:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80289f4:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80289f8:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80289fc:	9316      	str	r3, [sp, #88]	; 0x58
 80289fe:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8028a02:	ab14      	add	r3, sp, #80	; 0x50
 8028a04:	9303      	str	r3, [sp, #12]
 8028a06:	ab10      	add	r3, sp, #64	; 0x40
 8028a08:	9302      	str	r3, [sp, #8]
 8028a0a:	ab0c      	add	r3, sp, #48	; 0x30
 8028a0c:	9301      	str	r3, [sp, #4]
 8028a0e:	ab08      	add	r3, sp, #32
 8028a10:	9300      	str	r3, [sp, #0]
 8028a12:	2200      	movs	r2, #0
 8028a14:	ab04      	add	r3, sp, #16
 8028a16:	4641      	mov	r1, r8
 8028a18:	4620      	mov	r0, r4
 8028a1a:	f7ff fe2d 	bl	8028678 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8028a1e:	b018      	add	sp, #96	; 0x60
 8028a20:	ecbd 8b02 	vpop	{d8}
 8028a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a28:	eeb0 6a48 	vmov.f32	s12, s16
 8028a2c:	eef0 4a47 	vmov.f32	s9, s14
 8028a30:	ee17 3a90 	vmov	r3, s15
 8028a34:	eeb0 4a67 	vmov.f32	s8, s15
 8028a38:	e79b      	b.n	8028972 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028a3a:	ed8d 5a05 	vstr	s10, [sp, #20]
 8028a3e:	ed8d 2a04 	vstr	s4, [sp, #16]
 8028a42:	f8cd c018 	str.w	ip, [sp, #24]
 8028a46:	edcd 2a07 	vstr	s5, [sp, #28]
 8028a4a:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8028a4e:	ed8d 3a08 	vstr	s6, [sp, #32]
 8028a52:	970a      	str	r7, [sp, #40]	; 0x28
 8028a54:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028a58:	960d      	str	r6, [sp, #52]	; 0x34
 8028a5a:	950c      	str	r5, [sp, #48]	; 0x30
 8028a5c:	900e      	str	r0, [sp, #56]	; 0x38
 8028a5e:	920f      	str	r2, [sp, #60]	; 0x3c
 8028a60:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028a64:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028a68:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028a6c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028a70:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028a74:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028a78:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028a7c:	9317      	str	r3, [sp, #92]	; 0x5c
 8028a7e:	e7c0      	b.n	8028a02 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8028a80:	20012fbc 	.word	0x20012fbc

08028a84 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028a84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028a86:	b08d      	sub	sp, #52	; 0x34
 8028a88:	2300      	movs	r3, #0
 8028a8a:	9304      	str	r3, [sp, #16]
 8028a8c:	9305      	str	r3, [sp, #20]
 8028a8e:	9306      	str	r3, [sp, #24]
 8028a90:	aa04      	add	r2, sp, #16
 8028a92:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028a96:	9307      	str	r3, [sp, #28]
 8028a98:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028a9c:	4613      	mov	r3, r2
 8028a9e:	f101 0710 	add.w	r7, r1, #16
 8028aa2:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028ae0 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028aa6:	460c      	mov	r4, r1
 8028aa8:	4605      	mov	r5, r0
 8028aaa:	ecb4 7a01 	vldmia	r4!, {s14}
 8028aae:	ecf5 6a01 	vldmia	r5!, {s13}
 8028ab2:	42bc      	cmp	r4, r7
 8028ab4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028ab8:	d1f7      	bne.n	8028aaa <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028aba:	3010      	adds	r0, #16
 8028abc:	42b0      	cmp	r0, r6
 8028abe:	ece2 7a01 	vstmia	r2!, {s15}
 8028ac2:	d1ee      	bne.n	8028aa2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8028ac4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8028ac6:	ac0c      	add	r4, sp, #48	; 0x30
 8028ac8:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028acc:	ed9d 0a08 	vldr	s0, [sp, #32]
 8028ad0:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028ad4:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028ad8:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028adc:	b00d      	add	sp, #52	; 0x34
 8028ade:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028ae0:	00000000 	.word	0x00000000

08028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028ae4:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028b14 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028ae8:	2300      	movs	r3, #0
 8028aea:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028aee:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8028af2:	2200      	movs	r2, #0
 8028af4:	4293      	cmp	r3, r2
 8028af6:	f102 0201 	add.w	r2, r2, #1
 8028afa:	bf14      	ite	ne
 8028afc:	eef0 6a47 	vmovne.f32	s13, s14
 8028b00:	eef0 6a67 	vmoveq.f32	s13, s15
 8028b04:	2a04      	cmp	r2, #4
 8028b06:	ece1 6a01 	vstmia	r1!, {s13}
 8028b0a:	d1f3      	bne.n	8028af4 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028b0c:	3301      	adds	r3, #1
 8028b0e:	2b04      	cmp	r3, #4
 8028b10:	d1ed      	bne.n	8028aee <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8028b12:	4770      	bx	lr
 8028b14:	00000000 	.word	0x00000000

08028b18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028b1c:	460c      	mov	r4, r1
 8028b1e:	4605      	mov	r5, r0
 8028b20:	4690      	mov	r8, r2
 8028b22:	f7ff ffdf 	bl	8028ae4 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028b26:	4628      	mov	r0, r5
 8028b28:	4621      	mov	r1, r4
 8028b2a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8028b2e:	2300      	movs	r3, #0
 8028b30:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8028b70 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028b34:	eb08 0603 	add.w	r6, r8, r3
 8028b38:	460f      	mov	r7, r1
 8028b3a:	2400      	movs	r4, #0
 8028b3c:	4632      	mov	r2, r6
 8028b3e:	ecf7 6a01 	vldmia	r7!, {s13}
 8028b42:	ed92 7a00 	vldr	s14, [r2]
 8028b46:	3401      	adds	r4, #1
 8028b48:	2c04      	cmp	r4, #4
 8028b4a:	f106 0610 	add.w	r6, r6, #16
 8028b4e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028b52:	d1f3      	bne.n	8028b3c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028b54:	18c2      	adds	r2, r0, r3
 8028b56:	3304      	adds	r3, #4
 8028b58:	2b10      	cmp	r3, #16
 8028b5a:	edc2 7a00 	vstr	s15, [r2]
 8028b5e:	d1e7      	bne.n	8028b30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8028b60:	3110      	adds	r1, #16
 8028b62:	4561      	cmp	r1, ip
 8028b64:	f100 0010 	add.w	r0, r0, #16
 8028b68:	d1e1      	bne.n	8028b2e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028b6a:	4628      	mov	r0, r5
 8028b6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028b70:	00000000 	.word	0x00000000

08028b74 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028b74:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028b78:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028b7c:	f100 0320 	add.w	r3, r0, #32
 8028b80:	3030      	adds	r0, #48	; 0x30
 8028b82:	ecf3 7a01 	vldmia	r3!, {s15}
 8028b86:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028b8a:	4283      	cmp	r3, r0
 8028b8c:	edc3 7a03 	vstr	s15, [r3, #12]
 8028b90:	d1f7      	bne.n	8028b82 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8028b92:	4770      	bx	lr

08028b94 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028b94:	b510      	push	{r4, lr}
 8028b96:	ed2d 8b02 	vpush	{d8}
 8028b9a:	4604      	mov	r4, r0
 8028b9c:	eef0 8a40 	vmov.f32	s17, s0
 8028ba0:	f001 fa7a 	bl	802a098 <sinf>
 8028ba4:	eeb0 8a40 	vmov.f32	s16, s0
 8028ba8:	eeb0 0a68 	vmov.f32	s0, s17
 8028bac:	f001 fa30 	bl	802a010 <cosf>
 8028bb0:	f104 0310 	add.w	r3, r4, #16
 8028bb4:	f104 0220 	add.w	r2, r4, #32
 8028bb8:	eeb1 6a48 	vneg.f32	s12, s16
 8028bbc:	edd3 7a04 	vldr	s15, [r3, #16]
 8028bc0:	edd3 6a00 	vldr	s13, [r3]
 8028bc4:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028bc8:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028bcc:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028bd0:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028bd4:	eca3 7a01 	vstmia	r3!, {s14}
 8028bd8:	429a      	cmp	r2, r3
 8028bda:	edc3 7a03 	vstr	s15, [r3, #12]
 8028bde:	d1ed      	bne.n	8028bbc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8028be0:	ecbd 8b02 	vpop	{d8}
 8028be4:	4620      	mov	r0, r4
 8028be6:	bd10      	pop	{r4, pc}

08028be8 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028be8:	b510      	push	{r4, lr}
 8028bea:	ed2d 8b02 	vpush	{d8}
 8028bee:	4604      	mov	r4, r0
 8028bf0:	eef0 8a40 	vmov.f32	s17, s0
 8028bf4:	f001 fa50 	bl	802a098 <sinf>
 8028bf8:	eeb0 8a40 	vmov.f32	s16, s0
 8028bfc:	eeb0 0a68 	vmov.f32	s0, s17
 8028c00:	f001 fa06 	bl	802a010 <cosf>
 8028c04:	4623      	mov	r3, r4
 8028c06:	f104 0210 	add.w	r2, r4, #16
 8028c0a:	eeb1 6a48 	vneg.f32	s12, s16
 8028c0e:	edd3 7a08 	vldr	s15, [r3, #32]
 8028c12:	edd3 6a00 	vldr	s13, [r3]
 8028c16:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028c1a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c1e:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028c22:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028c26:	eca3 7a01 	vstmia	r3!, {s14}
 8028c2a:	429a      	cmp	r2, r3
 8028c2c:	edc3 7a07 	vstr	s15, [r3, #28]
 8028c30:	d1ed      	bne.n	8028c0e <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8028c32:	ecbd 8b02 	vpop	{d8}
 8028c36:	4620      	mov	r0, r4
 8028c38:	bd10      	pop	{r4, pc}

08028c3a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028c3a:	b510      	push	{r4, lr}
 8028c3c:	ed2d 8b02 	vpush	{d8}
 8028c40:	4604      	mov	r4, r0
 8028c42:	eef0 8a40 	vmov.f32	s17, s0
 8028c46:	f001 fa27 	bl	802a098 <sinf>
 8028c4a:	eeb0 8a40 	vmov.f32	s16, s0
 8028c4e:	eeb0 0a68 	vmov.f32	s0, s17
 8028c52:	f001 f9dd 	bl	802a010 <cosf>
 8028c56:	4623      	mov	r3, r4
 8028c58:	f104 0210 	add.w	r2, r4, #16
 8028c5c:	eeb1 6a48 	vneg.f32	s12, s16
 8028c60:	edd3 7a04 	vldr	s15, [r3, #16]
 8028c64:	edd3 6a00 	vldr	s13, [r3]
 8028c68:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028c6c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028c70:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028c74:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028c78:	eca3 7a01 	vstmia	r3!, {s14}
 8028c7c:	429a      	cmp	r2, r3
 8028c7e:	edc3 7a03 	vstr	s15, [r3, #12]
 8028c82:	d1ed      	bne.n	8028c60 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028c84:	ecbd 8b02 	vpop	{d8}
 8028c88:	4620      	mov	r0, r4
 8028c8a:	bd10      	pop	{r4, pc}

08028c8c <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028c8c:	4603      	mov	r3, r0
 8028c8e:	f100 0210 	add.w	r2, r0, #16
 8028c92:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028c96:	edd3 7a00 	vldr	s15, [r3]
 8028c9a:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028c9e:	ece3 7a01 	vstmia	r3!, {s15}
 8028ca2:	4293      	cmp	r3, r2
 8028ca4:	d1f5      	bne.n	8028c92 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028ca6:	4770      	bx	lr

08028ca8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028ca8:	f100 0310 	add.w	r3, r0, #16
 8028cac:	f100 0220 	add.w	r2, r0, #32
 8028cb0:	ed93 7a08 	vldr	s14, [r3, #32]
 8028cb4:	edd3 7a00 	vldr	s15, [r3]
 8028cb8:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028cbc:	ece3 7a01 	vstmia	r3!, {s15}
 8028cc0:	4293      	cmp	r3, r2
 8028cc2:	d1f5      	bne.n	8028cb0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028cc4:	4770      	bx	lr

08028cc6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028cc6:	f100 0320 	add.w	r3, r0, #32
 8028cca:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028cce:	ed93 7a04 	vldr	s14, [r3, #16]
 8028cd2:	edd3 7a00 	vldr	s15, [r3]
 8028cd6:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028cda:	ece3 7a01 	vstmia	r3!, {s15}
 8028cde:	4293      	cmp	r3, r2
 8028ce0:	d1f5      	bne.n	8028cce <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8028ce2:	4770      	bx	lr

08028ce4 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028ce4:	4603      	mov	r3, r0
 8028ce6:	f100 0210 	add.w	r2, r0, #16
 8028cea:	edd3 7a00 	vldr	s15, [r3]
 8028cee:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028cf2:	ece3 7a01 	vstmia	r3!, {s15}
 8028cf6:	4293      	cmp	r3, r2
 8028cf8:	d1f7      	bne.n	8028cea <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028cfa:	4770      	bx	lr

08028cfc <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028cfc:	f100 0310 	add.w	r3, r0, #16
 8028d00:	f100 0220 	add.w	r2, r0, #32
 8028d04:	edd3 7a00 	vldr	s15, [r3]
 8028d08:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028d0c:	ece3 7a01 	vstmia	r3!, {s15}
 8028d10:	4293      	cmp	r3, r2
 8028d12:	d1f7      	bne.n	8028d04 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028d14:	4770      	bx	lr

08028d16 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028d16:	f100 0320 	add.w	r3, r0, #32
 8028d1a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028d1e:	edd3 7a00 	vldr	s15, [r3]
 8028d22:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028d26:	ece3 7a01 	vstmia	r3!, {s15}
 8028d2a:	4293      	cmp	r3, r2
 8028d2c:	d1f7      	bne.n	8028d1e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028d2e:	4770      	bx	lr

08028d30 <arm_max_f32>:
 8028d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d34:	1e4f      	subs	r7, r1, #1
 8028d36:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028d3a:	f100 0e04 	add.w	lr, r0, #4
 8028d3e:	edd0 7a00 	vldr	s15, [r0]
 8028d42:	d058      	beq.n	8028df6 <arm_max_f32+0xc6>
 8028d44:	3014      	adds	r0, #20
 8028d46:	46c4      	mov	ip, r8
 8028d48:	2604      	movs	r6, #4
 8028d4a:	2400      	movs	r4, #0
 8028d4c:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028d50:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028d54:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028d58:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028d5c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028d60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d64:	bfc8      	it	gt
 8028d66:	eef0 7a46 	vmovgt.f32	s15, s12
 8028d6a:	f1a6 0503 	sub.w	r5, r6, #3
 8028d6e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028d72:	bfc8      	it	gt
 8028d74:	462c      	movgt	r4, r5
 8028d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d7a:	bf48      	it	mi
 8028d7c:	eef0 7a66 	vmovmi.f32	s15, s13
 8028d80:	f1a6 0502 	sub.w	r5, r6, #2
 8028d84:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028d88:	bf48      	it	mi
 8028d8a:	462c      	movmi	r4, r5
 8028d8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d90:	bf48      	it	mi
 8028d92:	eef0 7a47 	vmovmi.f32	s15, s14
 8028d96:	f106 35ff 	add.w	r5, r6, #4294967295
 8028d9a:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028d9e:	bf48      	it	mi
 8028da0:	462c      	movmi	r4, r5
 8028da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028da6:	bf48      	it	mi
 8028da8:	4634      	movmi	r4, r6
 8028daa:	bf48      	it	mi
 8028dac:	eef0 7a65 	vmovmi.f32	s15, s11
 8028db0:	f1bc 0c01 	subs.w	ip, ip, #1
 8028db4:	f106 0604 	add.w	r6, r6, #4
 8028db8:	f100 0010 	add.w	r0, r0, #16
 8028dbc:	d1c6      	bne.n	8028d4c <arm_max_f32+0x1c>
 8028dbe:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028dc2:	f017 0003 	ands.w	r0, r7, #3
 8028dc6:	d018      	beq.n	8028dfa <arm_max_f32+0xca>
 8028dc8:	1a08      	subs	r0, r1, r0
 8028dca:	ecbe 7a01 	vldmia	lr!, {s14}
 8028dce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028dd6:	bfc8      	it	gt
 8028dd8:	4604      	movgt	r4, r0
 8028dda:	f100 0001 	add.w	r0, r0, #1
 8028dde:	bfd8      	it	le
 8028de0:	eeb0 7a67 	vmovle.f32	s14, s15
 8028de4:	4288      	cmp	r0, r1
 8028de6:	eef0 7a47 	vmov.f32	s15, s14
 8028dea:	d1ee      	bne.n	8028dca <arm_max_f32+0x9a>
 8028dec:	ed82 7a00 	vstr	s14, [r2]
 8028df0:	601c      	str	r4, [r3, #0]
 8028df2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028df6:	4644      	mov	r4, r8
 8028df8:	e7e3      	b.n	8028dc2 <arm_max_f32+0x92>
 8028dfa:	eeb0 7a67 	vmov.f32	s14, s15
 8028dfe:	e7f5      	b.n	8028dec <arm_max_f32+0xbc>

08028e00 <arm_rfft_fast_init_f32>:
 8028e00:	084b      	lsrs	r3, r1, #1
 8028e02:	2b80      	cmp	r3, #128	; 0x80
 8028e04:	b410      	push	{r4}
 8028e06:	8201      	strh	r1, [r0, #16]
 8028e08:	8003      	strh	r3, [r0, #0]
 8028e0a:	d047      	beq.n	8028e9c <arm_rfft_fast_init_f32+0x9c>
 8028e0c:	d917      	bls.n	8028e3e <arm_rfft_fast_init_f32+0x3e>
 8028e0e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028e12:	d03d      	beq.n	8028e90 <arm_rfft_fast_init_f32+0x90>
 8028e14:	d929      	bls.n	8028e6a <arm_rfft_fast_init_f32+0x6a>
 8028e16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028e1a:	d020      	beq.n	8028e5e <arm_rfft_fast_init_f32+0x5e>
 8028e1c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028e20:	d113      	bne.n	8028e4a <arm_rfft_fast_init_f32+0x4a>
 8028e22:	4921      	ldr	r1, [pc, #132]	; (8028ea8 <arm_rfft_fast_init_f32+0xa8>)
 8028e24:	4a21      	ldr	r2, [pc, #132]	; (8028eac <arm_rfft_fast_init_f32+0xac>)
 8028e26:	4b22      	ldr	r3, [pc, #136]	; (8028eb0 <arm_rfft_fast_init_f32+0xb0>)
 8028e28:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028e2c:	8184      	strh	r4, [r0, #12]
 8028e2e:	6081      	str	r1, [r0, #8]
 8028e30:	6042      	str	r2, [r0, #4]
 8028e32:	6143      	str	r3, [r0, #20]
 8028e34:	2000      	movs	r0, #0
 8028e36:	b240      	sxtb	r0, r0
 8028e38:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028e3c:	4770      	bx	lr
 8028e3e:	2b20      	cmp	r3, #32
 8028e40:	d01c      	beq.n	8028e7c <arm_rfft_fast_init_f32+0x7c>
 8028e42:	2b40      	cmp	r3, #64	; 0x40
 8028e44:	d006      	beq.n	8028e54 <arm_rfft_fast_init_f32+0x54>
 8028e46:	2b10      	cmp	r3, #16
 8028e48:	d01d      	beq.n	8028e86 <arm_rfft_fast_init_f32+0x86>
 8028e4a:	20ff      	movs	r0, #255	; 0xff
 8028e4c:	b240      	sxtb	r0, r0
 8028e4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028e52:	4770      	bx	lr
 8028e54:	2438      	movs	r4, #56	; 0x38
 8028e56:	4917      	ldr	r1, [pc, #92]	; (8028eb4 <arm_rfft_fast_init_f32+0xb4>)
 8028e58:	4a17      	ldr	r2, [pc, #92]	; (8028eb8 <arm_rfft_fast_init_f32+0xb8>)
 8028e5a:	4b18      	ldr	r3, [pc, #96]	; (8028ebc <arm_rfft_fast_init_f32+0xbc>)
 8028e5c:	e7e6      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e5e:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028e62:	4917      	ldr	r1, [pc, #92]	; (8028ec0 <arm_rfft_fast_init_f32+0xc0>)
 8028e64:	4a17      	ldr	r2, [pc, #92]	; (8028ec4 <arm_rfft_fast_init_f32+0xc4>)
 8028e66:	4b18      	ldr	r3, [pc, #96]	; (8028ec8 <arm_rfft_fast_init_f32+0xc8>)
 8028e68:	e7e0      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e6a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028e6e:	d1ec      	bne.n	8028e4a <arm_rfft_fast_init_f32+0x4a>
 8028e70:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028e74:	4915      	ldr	r1, [pc, #84]	; (8028ecc <arm_rfft_fast_init_f32+0xcc>)
 8028e76:	4a16      	ldr	r2, [pc, #88]	; (8028ed0 <arm_rfft_fast_init_f32+0xd0>)
 8028e78:	4b16      	ldr	r3, [pc, #88]	; (8028ed4 <arm_rfft_fast_init_f32+0xd4>)
 8028e7a:	e7d7      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e7c:	2430      	movs	r4, #48	; 0x30
 8028e7e:	4916      	ldr	r1, [pc, #88]	; (8028ed8 <arm_rfft_fast_init_f32+0xd8>)
 8028e80:	4a16      	ldr	r2, [pc, #88]	; (8028edc <arm_rfft_fast_init_f32+0xdc>)
 8028e82:	4b17      	ldr	r3, [pc, #92]	; (8028ee0 <arm_rfft_fast_init_f32+0xe0>)
 8028e84:	e7d2      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e86:	2414      	movs	r4, #20
 8028e88:	4916      	ldr	r1, [pc, #88]	; (8028ee4 <arm_rfft_fast_init_f32+0xe4>)
 8028e8a:	4a17      	ldr	r2, [pc, #92]	; (8028ee8 <arm_rfft_fast_init_f32+0xe8>)
 8028e8c:	4b17      	ldr	r3, [pc, #92]	; (8028eec <arm_rfft_fast_init_f32+0xec>)
 8028e8e:	e7cd      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e90:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028e94:	4916      	ldr	r1, [pc, #88]	; (8028ef0 <arm_rfft_fast_init_f32+0xf0>)
 8028e96:	4a17      	ldr	r2, [pc, #92]	; (8028ef4 <arm_rfft_fast_init_f32+0xf4>)
 8028e98:	4b17      	ldr	r3, [pc, #92]	; (8028ef8 <arm_rfft_fast_init_f32+0xf8>)
 8028e9a:	e7c7      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028e9c:	24d0      	movs	r4, #208	; 0xd0
 8028e9e:	4917      	ldr	r1, [pc, #92]	; (8028efc <arm_rfft_fast_init_f32+0xfc>)
 8028ea0:	4a17      	ldr	r2, [pc, #92]	; (8028f00 <arm_rfft_fast_init_f32+0x100>)
 8028ea2:	4b18      	ldr	r3, [pc, #96]	; (8028f04 <arm_rfft_fast_init_f32+0x104>)
 8028ea4:	e7c2      	b.n	8028e2c <arm_rfft_fast_init_f32+0x2c>
 8028ea6:	bf00      	nop
 8028ea8:	0803eb94 	.word	0x0803eb94
 8028eac:	0802fd8c 	.word	0x0802fd8c
 8028eb0:	08035efc 	.word	0x08035efc
 8028eb4:	08033e8c 	.word	0x08033e8c
 8028eb8:	08040954 	.word	0x08040954
 8028ebc:	08042e44 	.word	0x08042e44
 8028ec0:	0803c87c 	.word	0x0803c87c
 8028ec4:	0803a77c 	.word	0x0803a77c
 8028ec8:	08033efc 	.word	0x08033efc
 8028ecc:	08042ad4 	.word	0x08042ad4
 8028ed0:	08039efc 	.word	0x08039efc
 8028ed4:	08040b54 	.word	0x08040b54
 8028ed8:	0803d734 	.word	0x0803d734
 8028edc:	0803c77c 	.word	0x0803c77c
 8028ee0:	08033d8c 	.word	0x08033d8c
 8028ee4:	0803d68c 	.word	0x0803d68c
 8028ee8:	0803a6fc 	.word	0x0803a6fc
 8028eec:	0803d6b4 	.word	0x0803d6b4
 8028ef0:	08041354 	.word	0x08041354
 8028ef4:	0803db94 	.word	0x0803db94
 8028ef8:	080416d4 	.word	0x080416d4
 8028efc:	08043044 	.word	0x08043044
 8028f00:	0803d794 	.word	0x0803d794
 8028f04:	080426d4 	.word	0x080426d4

08028f08 <arm_rfft_fast_f32>:
 8028f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028f0c:	8a06      	ldrh	r6, [r0, #16]
 8028f0e:	0876      	lsrs	r6, r6, #1
 8028f10:	4607      	mov	r7, r0
 8028f12:	4615      	mov	r5, r2
 8028f14:	8006      	strh	r6, [r0, #0]
 8028f16:	460c      	mov	r4, r1
 8028f18:	2b00      	cmp	r3, #0
 8028f1a:	d15c      	bne.n	8028fd6 <arm_rfft_fast_f32+0xce>
 8028f1c:	461a      	mov	r2, r3
 8028f1e:	2301      	movs	r3, #1
 8028f20:	f000 fbe6 	bl	80296f0 <arm_cfft_f32>
 8028f24:	edd4 7a00 	vldr	s15, [r4]
 8028f28:	ed94 7a01 	vldr	s14, [r4, #4]
 8028f2c:	883e      	ldrh	r6, [r7, #0]
 8028f2e:	6978      	ldr	r0, [r7, #20]
 8028f30:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028f34:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028f38:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028f3c:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028f40:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028f44:	3e01      	subs	r6, #1
 8028f46:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028f4a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028f4e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028f52:	ed85 7a00 	vstr	s14, [r5]
 8028f56:	edc5 7a01 	vstr	s15, [r5, #4]
 8028f5a:	3010      	adds	r0, #16
 8028f5c:	f105 0210 	add.w	r2, r5, #16
 8028f60:	3b08      	subs	r3, #8
 8028f62:	f104 0110 	add.w	r1, r4, #16
 8028f66:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028f6a:	ed93 5a02 	vldr	s10, [r3, #8]
 8028f6e:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028f72:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028f76:	edd3 5a03 	vldr	s11, [r3, #12]
 8028f7a:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028f7e:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028f82:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028f86:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028f8a:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028f8e:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028f92:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028f96:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028f9a:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028f9e:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028fa2:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028fa6:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028faa:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028fae:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028fb2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028fb6:	3e01      	subs	r6, #1
 8028fb8:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028fbc:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028fc0:	f1a3 0308 	sub.w	r3, r3, #8
 8028fc4:	f101 0108 	add.w	r1, r1, #8
 8028fc8:	f100 0008 	add.w	r0, r0, #8
 8028fcc:	f102 0208 	add.w	r2, r2, #8
 8028fd0:	d1c9      	bne.n	8028f66 <arm_rfft_fast_f32+0x5e>
 8028fd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028fd6:	edd1 7a00 	vldr	s15, [r1]
 8028fda:	edd1 6a01 	vldr	s13, [r1, #4]
 8028fde:	6941      	ldr	r1, [r0, #20]
 8028fe0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028fe4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028fe8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028fec:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028ff0:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ff4:	3e01      	subs	r6, #1
 8028ff6:	ed82 7a00 	vstr	s14, [r2]
 8028ffa:	edc2 7a01 	vstr	s15, [r2, #4]
 8028ffe:	00f0      	lsls	r0, r6, #3
 8029000:	b3ee      	cbz	r6, 802907e <arm_rfft_fast_f32+0x176>
 8029002:	3808      	subs	r0, #8
 8029004:	f101 0e10 	add.w	lr, r1, #16
 8029008:	4420      	add	r0, r4
 802900a:	f104 0110 	add.w	r1, r4, #16
 802900e:	f102 0c10 	add.w	ip, r2, #16
 8029012:	ed90 7a02 	vldr	s14, [r0, #8]
 8029016:	ed51 6a02 	vldr	s13, [r1, #-8]
 802901a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802901e:	ed90 4a03 	vldr	s8, [r0, #12]
 8029022:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029026:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802902a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802902e:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029032:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029036:	ee77 6a26 	vadd.f32	s13, s14, s13
 802903a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802903e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029042:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029046:	ee77 7a05 	vadd.f32	s15, s14, s10
 802904a:	ee26 6a24 	vmul.f32	s12, s12, s9
 802904e:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029052:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029056:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802905a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802905e:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029062:	3e01      	subs	r6, #1
 8029064:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029068:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802906c:	f1a0 0008 	sub.w	r0, r0, #8
 8029070:	f101 0108 	add.w	r1, r1, #8
 8029074:	f10e 0e08 	add.w	lr, lr, #8
 8029078:	f10c 0c08 	add.w	ip, ip, #8
 802907c:	d1c9      	bne.n	8029012 <arm_rfft_fast_f32+0x10a>
 802907e:	4638      	mov	r0, r7
 8029080:	4629      	mov	r1, r5
 8029082:	461a      	mov	r2, r3
 8029084:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029088:	2301      	movs	r3, #1
 802908a:	f000 bb31 	b.w	80296f0 <arm_cfft_f32>
 802908e:	bf00      	nop

08029090 <arm_cfft_radix8by2_f32>:
 8029090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029094:	ed2d 8b08 	vpush	{d8-d11}
 8029098:	f8b0 e000 	ldrh.w	lr, [r0]
 802909c:	6842      	ldr	r2, [r0, #4]
 802909e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80290a2:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 80290a6:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 80290aa:	4607      	mov	r7, r0
 80290ac:	ea4f 038c 	mov.w	r3, ip, lsl #2
 80290b0:	f000 80af 	beq.w	8029212 <arm_cfft_radix8by2_f32+0x182>
 80290b4:	3310      	adds	r3, #16
 80290b6:	18ce      	adds	r6, r1, r3
 80290b8:	3210      	adds	r2, #16
 80290ba:	4443      	add	r3, r8
 80290bc:	f101 0510 	add.w	r5, r1, #16
 80290c0:	f108 0410 	add.w	r4, r8, #16
 80290c4:	ed54 1a04 	vldr	s3, [r4, #-16]
 80290c8:	ed13 4a04 	vldr	s8, [r3, #-16]
 80290cc:	ed53 3a03 	vldr	s7, [r3, #-12]
 80290d0:	ed53 5a02 	vldr	s11, [r3, #-8]
 80290d4:	ed13 5a01 	vldr	s10, [r3, #-4]
 80290d8:	ed54 6a03 	vldr	s13, [r4, #-12]
 80290dc:	ed14 0a02 	vldr	s0, [r4, #-8]
 80290e0:	ed16 2a04 	vldr	s4, [r6, #-16]
 80290e4:	ed56 2a03 	vldr	s5, [r6, #-12]
 80290e8:	ed15 6a03 	vldr	s12, [r5, #-12]
 80290ec:	ed15 7a01 	vldr	s14, [r5, #-4]
 80290f0:	ed15 3a04 	vldr	s6, [r5, #-16]
 80290f4:	ed54 7a01 	vldr	s15, [r4, #-4]
 80290f8:	ed56 0a02 	vldr	s1, [r6, #-8]
 80290fc:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029100:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029104:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029108:	ee36 ba26 	vadd.f32	s22, s12, s13
 802910c:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029110:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029114:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029118:	ee31 8a05 	vadd.f32	s16, s2, s10
 802911c:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029120:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029124:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029128:	ed05 ba03 	vstr	s22, [r5, #-12]
 802912c:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029130:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029134:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029138:	ed46 9a04 	vstr	s19, [r6, #-16]
 802913c:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029140:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029144:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029148:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802914c:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029150:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029154:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029158:	ee34 4a42 	vsub.f32	s8, s8, s4
 802915c:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029160:	ee24 2a06 	vmul.f32	s4, s8, s12
 8029164:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029168:	ee24 4a22 	vmul.f32	s8, s8, s5
 802916c:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029170:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8029174:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029178:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802917c:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029180:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029184:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029188:	ee71 2a88 	vadd.f32	s5, s3, s16
 802918c:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029190:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029194:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029198:	ed03 6a03 	vstr	s12, [r3, #-12]
 802919c:	ee77 7a67 	vsub.f32	s15, s14, s15
 80291a0:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80291a4:	ed12 7a01 	vldr	s14, [r2, #-4]
 80291a8:	ed52 5a02 	vldr	s11, [r2, #-8]
 80291ac:	ee35 6a41 	vsub.f32	s12, s10, s2
 80291b0:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80291b4:	ee67 3a87 	vmul.f32	s7, s15, s14
 80291b8:	ee26 5a87 	vmul.f32	s10, s13, s14
 80291bc:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80291c0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80291c4:	ee64 4a87 	vmul.f32	s9, s9, s14
 80291c8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80291cc:	ee26 7a07 	vmul.f32	s14, s12, s14
 80291d0:	ee26 6a25 	vmul.f32	s12, s12, s11
 80291d4:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80291d8:	ee74 5a23 	vadd.f32	s11, s8, s7
 80291dc:	ee35 6a46 	vsub.f32	s12, s10, s12
 80291e0:	ee37 7a26 	vadd.f32	s14, s14, s13
 80291e4:	f1be 0e01 	subs.w	lr, lr, #1
 80291e8:	ed44 5a02 	vstr	s11, [r4, #-8]
 80291ec:	f105 0510 	add.w	r5, r5, #16
 80291f0:	ed44 7a01 	vstr	s15, [r4, #-4]
 80291f4:	f106 0610 	add.w	r6, r6, #16
 80291f8:	ed03 6a02 	vstr	s12, [r3, #-8]
 80291fc:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029200:	f102 0210 	add.w	r2, r2, #16
 8029204:	f104 0410 	add.w	r4, r4, #16
 8029208:	f103 0310 	add.w	r3, r3, #16
 802920c:	f47f af5a 	bne.w	80290c4 <arm_cfft_radix8by2_f32+0x34>
 8029210:	687a      	ldr	r2, [r7, #4]
 8029212:	fa1f f48c 	uxth.w	r4, ip
 8029216:	4608      	mov	r0, r1
 8029218:	2302      	movs	r3, #2
 802921a:	4621      	mov	r1, r4
 802921c:	f000 fbca 	bl	80299b4 <arm_radix8_butterfly_f32>
 8029220:	ecbd 8b08 	vpop	{d8-d11}
 8029224:	4640      	mov	r0, r8
 8029226:	4621      	mov	r1, r4
 8029228:	687a      	ldr	r2, [r7, #4]
 802922a:	2302      	movs	r3, #2
 802922c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029230:	f000 bbc0 	b.w	80299b4 <arm_radix8_butterfly_f32>

08029234 <arm_cfft_radix8by4_f32>:
 8029234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029238:	ed2d 8b0a 	vpush	{d8-d12}
 802923c:	8802      	ldrh	r2, [r0, #0]
 802923e:	ed91 6a00 	vldr	s12, [r1]
 8029242:	b08f      	sub	sp, #60	; 0x3c
 8029244:	460f      	mov	r7, r1
 8029246:	0852      	lsrs	r2, r2, #1
 8029248:	0093      	lsls	r3, r2, #2
 802924a:	900c      	str	r0, [sp, #48]	; 0x30
 802924c:	9103      	str	r1, [sp, #12]
 802924e:	6841      	ldr	r1, [r0, #4]
 8029250:	ed97 7a01 	vldr	s14, [r7, #4]
 8029254:	4638      	mov	r0, r7
 8029256:	4418      	add	r0, r3
 8029258:	4606      	mov	r6, r0
 802925a:	9009      	str	r0, [sp, #36]	; 0x24
 802925c:	4418      	add	r0, r3
 802925e:	edd0 6a00 	vldr	s13, [r0]
 8029262:	edd6 3a00 	vldr	s7, [r6]
 8029266:	edd6 2a01 	vldr	s5, [r6, #4]
 802926a:	edd0 7a01 	vldr	s15, [r0, #4]
 802926e:	900a      	str	r0, [sp, #40]	; 0x28
 8029270:	ee76 5a26 	vadd.f32	s11, s12, s13
 8029274:	4604      	mov	r4, r0
 8029276:	4625      	mov	r5, r4
 8029278:	441c      	add	r4, r3
 802927a:	ed94 4a00 	vldr	s8, [r4]
 802927e:	ed94 5a01 	vldr	s10, [r4, #4]
 8029282:	9401      	str	r4, [sp, #4]
 8029284:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029288:	4630      	mov	r0, r6
 802928a:	ee74 4a24 	vadd.f32	s9, s8, s9
 802928e:	463e      	mov	r6, r7
 8029290:	ee14 ea90 	vmov	lr, s9
 8029294:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029298:	f846 eb08 	str.w	lr, [r6], #8
 802929c:	ee37 6a27 	vadd.f32	s12, s14, s15
 80292a0:	edd0 4a01 	vldr	s9, [r0, #4]
 80292a4:	9604      	str	r6, [sp, #16]
 80292a6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80292aa:	9e01      	ldr	r6, [sp, #4]
 80292ac:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80292b0:	ed96 2a01 	vldr	s4, [r6, #4]
 80292b4:	ee36 7a24 	vadd.f32	s14, s12, s9
 80292b8:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80292bc:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80292c0:	ee36 6a62 	vsub.f32	s12, s12, s5
 80292c4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80292c8:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80292cc:	ee73 3a45 	vsub.f32	s7, s6, s10
 80292d0:	4604      	mov	r4, r0
 80292d2:	ee36 6a45 	vsub.f32	s12, s12, s10
 80292d6:	ee75 6a26 	vadd.f32	s13, s10, s13
 80292da:	46a3      	mov	fp, r4
 80292dc:	ee37 7a02 	vadd.f32	s14, s14, s4
 80292e0:	ee34 5a84 	vadd.f32	s10, s9, s8
 80292e4:	ee13 8a90 	vmov	r8, s7
 80292e8:	46a4      	mov	ip, r4
 80292ea:	ee75 5ac4 	vsub.f32	s11, s11, s8
 80292ee:	ed87 7a01 	vstr	s14, [r7, #4]
 80292f2:	f84b 8b08 	str.w	r8, [fp], #8
 80292f6:	f1ac 0704 	sub.w	r7, ip, #4
 80292fa:	ed8c 5a01 	vstr	s10, [ip, #4]
 80292fe:	f101 0c08 	add.w	ip, r1, #8
 8029302:	462c      	mov	r4, r5
 8029304:	f8cd c014 	str.w	ip, [sp, #20]
 8029308:	ee15 ca90 	vmov	ip, s11
 802930c:	f844 cb08 	str.w	ip, [r4], #8
 8029310:	9407      	str	r4, [sp, #28]
 8029312:	f101 0410 	add.w	r4, r1, #16
 8029316:	ed85 6a01 	vstr	s12, [r5, #4]
 802931a:	0852      	lsrs	r2, r2, #1
 802931c:	9402      	str	r4, [sp, #8]
 802931e:	462c      	mov	r4, r5
 8029320:	f101 0518 	add.w	r5, r1, #24
 8029324:	920b      	str	r2, [sp, #44]	; 0x2c
 8029326:	46b2      	mov	sl, r6
 8029328:	9506      	str	r5, [sp, #24]
 802932a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802932e:	3a02      	subs	r2, #2
 8029330:	ee16 5a90 	vmov	r5, s13
 8029334:	46b6      	mov	lr, r6
 8029336:	4630      	mov	r0, r6
 8029338:	0852      	lsrs	r2, r2, #1
 802933a:	f84a 5b08 	str.w	r5, [sl], #8
 802933e:	f1a0 0604 	sub.w	r6, r0, #4
 8029342:	edce 7a01 	vstr	s15, [lr, #4]
 8029346:	9208      	str	r2, [sp, #32]
 8029348:	f000 8130 	beq.w	80295ac <arm_cfft_radix8by4_f32+0x378>
 802934c:	4691      	mov	r9, r2
 802934e:	9a03      	ldr	r2, [sp, #12]
 8029350:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029354:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029358:	3b08      	subs	r3, #8
 802935a:	f102 0510 	add.w	r5, r2, #16
 802935e:	f101 0c20 	add.w	ip, r1, #32
 8029362:	f1a4 020c 	sub.w	r2, r4, #12
 8029366:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802936a:	4433      	add	r3, r6
 802936c:	3410      	adds	r4, #16
 802936e:	4650      	mov	r0, sl
 8029370:	4659      	mov	r1, fp
 8029372:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029376:	ed14 5a02 	vldr	s10, [r4, #-8]
 802937a:	ed91 7a00 	vldr	s14, [r1]
 802937e:	edd0 7a00 	vldr	s15, [r0]
 8029382:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029386:	ed54 5a01 	vldr	s11, [r4, #-4]
 802938a:	edd0 6a01 	vldr	s13, [r0, #4]
 802938e:	ed91 6a01 	vldr	s12, [r1, #4]
 8029392:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029396:	ee34 0a25 	vadd.f32	s0, s8, s11
 802939a:	ee78 4a07 	vadd.f32	s9, s16, s14
 802939e:	ee74 5a65 	vsub.f32	s11, s8, s11
 80293a2:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80293a6:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80293aa:	ed45 4a02 	vstr	s9, [r5, #-8]
 80293ae:	edd1 4a01 	vldr	s9, [r1, #4]
 80293b2:	ed90 4a01 	vldr	s8, [r0, #4]
 80293b6:	ee70 4a24 	vadd.f32	s9, s0, s9
 80293ba:	ee76 aa05 	vadd.f32	s21, s12, s10
 80293be:	ee74 4a84 	vadd.f32	s9, s9, s8
 80293c2:	ee35 aac7 	vsub.f32	s20, s11, s14
 80293c6:	ed45 4a01 	vstr	s9, [r5, #-4]
 80293ca:	edd6 1a00 	vldr	s3, [r6]
 80293ce:	edd7 0a00 	vldr	s1, [r7]
 80293d2:	ed92 4a02 	vldr	s8, [r2, #8]
 80293d6:	edd3 3a02 	vldr	s7, [r3, #8]
 80293da:	ed93 2a01 	vldr	s4, [r3, #4]
 80293de:	ed16 1a01 	vldr	s2, [r6, #-4]
 80293e2:	edd2 2a01 	vldr	s5, [r2, #4]
 80293e6:	ed57 9a01 	vldr	s19, [r7, #-4]
 80293ea:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80293ee:	ee39 3a81 	vadd.f32	s6, s19, s2
 80293f2:	ee74 8a84 	vadd.f32	s17, s9, s8
 80293f6:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80293fa:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80293fe:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029402:	ee18 aa90 	vmov	sl, s17
 8029406:	f847 a908 	str.w	sl, [r7], #-8
 802940a:	edd2 8a01 	vldr	s17, [r2, #4]
 802940e:	ed93 9a01 	vldr	s18, [r3, #4]
 8029412:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029416:	ee3a aa27 	vadd.f32	s20, s20, s15
 802941a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802941e:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029422:	edc7 8a01 	vstr	s17, [r7, #4]
 8029426:	ed18 ba02 	vldr	s22, [r8, #-8]
 802942a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802942e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029432:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029436:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802943a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802943e:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029442:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029446:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802944a:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802944e:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029452:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029456:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802945a:	ee69 8a28 	vmul.f32	s17, s18, s17
 802945e:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029462:	ee1c aa10 	vmov	sl, s24
 8029466:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802946a:	f841 ab08 	str.w	sl, [r1], #8
 802946e:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029472:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029476:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802947a:	ee33 3a62 	vsub.f32	s6, s6, s5
 802947e:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029482:	edc2 8a01 	vstr	s17, [r2, #4]
 8029486:	ed82 ba02 	vstr	s22, [r2, #8]
 802948a:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802948e:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029492:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029496:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802949a:	ee30 0a46 	vsub.f32	s0, s0, s12
 802949e:	ee33 3a42 	vsub.f32	s6, s6, s4
 80294a2:	ee38 8a67 	vsub.f32	s16, s16, s15
 80294a6:	ee30 0a66 	vsub.f32	s0, s0, s13
 80294aa:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80294ae:	ee63 8a04 	vmul.f32	s17, s6, s8
 80294b2:	ee28 aa24 	vmul.f32	s20, s16, s9
 80294b6:	ee60 9a04 	vmul.f32	s19, s0, s8
 80294ba:	ee28 8a04 	vmul.f32	s16, s16, s8
 80294be:	ee20 0a24 	vmul.f32	s0, s0, s9
 80294c2:	ee63 3a84 	vmul.f32	s7, s7, s8
 80294c6:	ee39 4a68 	vsub.f32	s8, s18, s17
 80294ca:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80294ce:	ee14 aa10 	vmov	sl, s8
 80294d2:	ee30 0a48 	vsub.f32	s0, s0, s16
 80294d6:	ee63 4a24 	vmul.f32	s9, s6, s9
 80294da:	ed44 9a02 	vstr	s19, [r4, #-8]
 80294de:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80294e2:	ed04 0a01 	vstr	s0, [r4, #-4]
 80294e6:	f846 a908 	str.w	sl, [r6], #-8
 80294ea:	ee35 6a46 	vsub.f32	s12, s10, s12
 80294ee:	ee35 7a87 	vadd.f32	s14, s11, s14
 80294f2:	edc6 3a01 	vstr	s7, [r6, #4]
 80294f6:	ee76 6a86 	vadd.f32	s13, s13, s12
 80294fa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80294fe:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029502:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029506:	ee67 5a86 	vmul.f32	s11, s15, s12
 802950a:	ee26 5a87 	vmul.f32	s10, s13, s14
 802950e:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029512:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029516:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802951a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802951e:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029522:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029526:	ee67 7a87 	vmul.f32	s15, s15, s14
 802952a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802952e:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029532:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029536:	ee15 aa90 	vmov	sl, s11
 802953a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802953e:	f840 ab08 	str.w	sl, [r0], #8
 8029542:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029546:	ee76 2a22 	vadd.f32	s5, s12, s5
 802954a:	f1b9 0901 	subs.w	r9, r9, #1
 802954e:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029552:	f105 0508 	add.w	r5, r5, #8
 8029556:	ed83 1a02 	vstr	s2, [r3, #8]
 802955a:	edc3 2a01 	vstr	s5, [r3, #4]
 802955e:	f108 0808 	add.w	r8, r8, #8
 8029562:	f1a2 0208 	sub.w	r2, r2, #8
 8029566:	f10c 0c10 	add.w	ip, ip, #16
 802956a:	f104 0408 	add.w	r4, r4, #8
 802956e:	f10e 0e18 	add.w	lr, lr, #24
 8029572:	f1a3 0308 	sub.w	r3, r3, #8
 8029576:	f47f aefc 	bne.w	8029372 <arm_cfft_radix8by4_f32+0x13e>
 802957a:	9908      	ldr	r1, [sp, #32]
 802957c:	9802      	ldr	r0, [sp, #8]
 802957e:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8029582:	00cb      	lsls	r3, r1, #3
 8029584:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029588:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802958c:	9102      	str	r1, [sp, #8]
 802958e:	9904      	ldr	r1, [sp, #16]
 8029590:	4419      	add	r1, r3
 8029592:	9104      	str	r1, [sp, #16]
 8029594:	9905      	ldr	r1, [sp, #20]
 8029596:	4419      	add	r1, r3
 8029598:	9105      	str	r1, [sp, #20]
 802959a:	9907      	ldr	r1, [sp, #28]
 802959c:	449b      	add	fp, r3
 802959e:	4419      	add	r1, r3
 80295a0:	449a      	add	sl, r3
 80295a2:	9b06      	ldr	r3, [sp, #24]
 80295a4:	9107      	str	r1, [sp, #28]
 80295a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80295aa:	9306      	str	r3, [sp, #24]
 80295ac:	9a04      	ldr	r2, [sp, #16]
 80295ae:	9807      	ldr	r0, [sp, #28]
 80295b0:	edd2 3a00 	vldr	s7, [r2]
 80295b4:	ed90 4a00 	vldr	s8, [r0]
 80295b8:	eddb 7a00 	vldr	s15, [fp]
 80295bc:	ed9a 3a00 	vldr	s6, [sl]
 80295c0:	edd2 4a01 	vldr	s9, [r2, #4]
 80295c4:	ed90 7a01 	vldr	s14, [r0, #4]
 80295c8:	ed9b 2a01 	vldr	s4, [fp, #4]
 80295cc:	edda 5a01 	vldr	s11, [sl, #4]
 80295d0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80295d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80295d6:	ee73 6a84 	vadd.f32	s13, s7, s8
 80295da:	ee34 6a87 	vadd.f32	s12, s9, s14
 80295de:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80295e2:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80295e6:	ee33 5a05 	vadd.f32	s10, s6, s10
 80295ea:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80295ee:	ed82 5a00 	vstr	s10, [r2]
 80295f2:	ed9b 5a01 	vldr	s10, [fp, #4]
 80295f6:	edda 4a01 	vldr	s9, [sl, #4]
 80295fa:	ee36 5a05 	vadd.f32	s10, s12, s10
 80295fe:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029602:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029606:	ee77 4a67 	vsub.f32	s9, s14, s15
 802960a:	ed82 5a01 	vstr	s10, [r2, #4]
 802960e:	9a05      	ldr	r2, [sp, #20]
 8029610:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029614:	edd2 1a00 	vldr	s3, [r2]
 8029618:	edd2 2a01 	vldr	s5, [r2, #4]
 802961c:	9a02      	ldr	r2, [sp, #8]
 802961e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029622:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029626:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802962a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802962e:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029632:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029636:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802963a:	ee35 5a63 	vsub.f32	s10, s10, s7
 802963e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8029642:	edcb 2a00 	vstr	s5, [fp]
 8029646:	ed8b 5a01 	vstr	s10, [fp, #4]
 802964a:	edd2 3a01 	vldr	s7, [r2, #4]
 802964e:	ed92 5a00 	vldr	s10, [r2]
 8029652:	9a06      	ldr	r2, [sp, #24]
 8029654:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029658:	ee36 6a65 	vsub.f32	s12, s12, s11
 802965c:	ee66 4a85 	vmul.f32	s9, s13, s10
 8029660:	ee26 5a05 	vmul.f32	s10, s12, s10
 8029664:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029668:	ee26 6a23 	vmul.f32	s12, s12, s7
 802966c:	ee75 6a66 	vsub.f32	s13, s10, s13
 8029670:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029674:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029678:	ee37 7a27 	vadd.f32	s14, s14, s15
 802967c:	edc0 6a01 	vstr	s13, [r0, #4]
 8029680:	ed80 6a00 	vstr	s12, [r0]
 8029684:	ed92 6a01 	vldr	s12, [r2, #4]
 8029688:	9803      	ldr	r0, [sp, #12]
 802968a:	ee77 7a43 	vsub.f32	s15, s14, s6
 802968e:	ee75 5a84 	vadd.f32	s11, s11, s8
 8029692:	ed92 7a00 	vldr	s14, [r2]
 8029696:	ee65 6a87 	vmul.f32	s13, s11, s14
 802969a:	ee27 7a87 	vmul.f32	s14, s15, s14
 802969e:	ee65 5a86 	vmul.f32	s11, s11, s12
 80296a2:	ee67 7a86 	vmul.f32	s15, s15, s12
 80296a6:	ee77 5a65 	vsub.f32	s11, s14, s11
 80296aa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80296ae:	edca 5a01 	vstr	s11, [sl, #4]
 80296b2:	edca 7a00 	vstr	s15, [sl]
 80296b6:	6872      	ldr	r2, [r6, #4]
 80296b8:	4621      	mov	r1, r4
 80296ba:	2304      	movs	r3, #4
 80296bc:	f000 f97a 	bl	80299b4 <arm_radix8_butterfly_f32>
 80296c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80296c2:	6872      	ldr	r2, [r6, #4]
 80296c4:	4621      	mov	r1, r4
 80296c6:	2304      	movs	r3, #4
 80296c8:	f000 f974 	bl	80299b4 <arm_radix8_butterfly_f32>
 80296cc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80296ce:	6872      	ldr	r2, [r6, #4]
 80296d0:	4621      	mov	r1, r4
 80296d2:	2304      	movs	r3, #4
 80296d4:	f000 f96e 	bl	80299b4 <arm_radix8_butterfly_f32>
 80296d8:	9801      	ldr	r0, [sp, #4]
 80296da:	6872      	ldr	r2, [r6, #4]
 80296dc:	4621      	mov	r1, r4
 80296de:	2304      	movs	r3, #4
 80296e0:	b00f      	add	sp, #60	; 0x3c
 80296e2:	ecbd 8b0a 	vpop	{d8-d12}
 80296e6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296ea:	f000 b963 	b.w	80299b4 <arm_radix8_butterfly_f32>
 80296ee:	bf00      	nop

080296f0 <arm_cfft_f32>:
 80296f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80296f4:	2a01      	cmp	r2, #1
 80296f6:	4606      	mov	r6, r0
 80296f8:	4617      	mov	r7, r2
 80296fa:	460c      	mov	r4, r1
 80296fc:	4698      	mov	r8, r3
 80296fe:	8805      	ldrh	r5, [r0, #0]
 8029700:	d054      	beq.n	80297ac <arm_cfft_f32+0xbc>
 8029702:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029706:	d04c      	beq.n	80297a2 <arm_cfft_f32+0xb2>
 8029708:	d916      	bls.n	8029738 <arm_cfft_f32+0x48>
 802970a:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802970e:	d01a      	beq.n	8029746 <arm_cfft_f32+0x56>
 8029710:	d95c      	bls.n	80297cc <arm_cfft_f32+0xdc>
 8029712:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029716:	d044      	beq.n	80297a2 <arm_cfft_f32+0xb2>
 8029718:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802971c:	d105      	bne.n	802972a <arm_cfft_f32+0x3a>
 802971e:	4620      	mov	r0, r4
 8029720:	4629      	mov	r1, r5
 8029722:	6872      	ldr	r2, [r6, #4]
 8029724:	2301      	movs	r3, #1
 8029726:	f000 f945 	bl	80299b4 <arm_radix8_butterfly_f32>
 802972a:	f1b8 0f00 	cmp.w	r8, #0
 802972e:	d111      	bne.n	8029754 <arm_cfft_f32+0x64>
 8029730:	2f01      	cmp	r7, #1
 8029732:	d016      	beq.n	8029762 <arm_cfft_f32+0x72>
 8029734:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029738:	2d20      	cmp	r5, #32
 802973a:	d032      	beq.n	80297a2 <arm_cfft_f32+0xb2>
 802973c:	d94a      	bls.n	80297d4 <arm_cfft_f32+0xe4>
 802973e:	2d40      	cmp	r5, #64	; 0x40
 8029740:	d0ed      	beq.n	802971e <arm_cfft_f32+0x2e>
 8029742:	2d80      	cmp	r5, #128	; 0x80
 8029744:	d1f1      	bne.n	802972a <arm_cfft_f32+0x3a>
 8029746:	4630      	mov	r0, r6
 8029748:	4621      	mov	r1, r4
 802974a:	f7ff fca1 	bl	8029090 <arm_cfft_radix8by2_f32>
 802974e:	f1b8 0f00 	cmp.w	r8, #0
 8029752:	d0ed      	beq.n	8029730 <arm_cfft_f32+0x40>
 8029754:	4620      	mov	r0, r4
 8029756:	89b1      	ldrh	r1, [r6, #12]
 8029758:	68b2      	ldr	r2, [r6, #8]
 802975a:	f7d6 fd49 	bl	80001f0 <arm_bitreversal_32>
 802975e:	2f01      	cmp	r7, #1
 8029760:	d1e8      	bne.n	8029734 <arm_cfft_f32+0x44>
 8029762:	ee07 5a90 	vmov	s15, r5
 8029766:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802976a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802976e:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8029772:	2d00      	cmp	r5, #0
 8029774:	d0de      	beq.n	8029734 <arm_cfft_f32+0x44>
 8029776:	f104 0108 	add.w	r1, r4, #8
 802977a:	2300      	movs	r3, #0
 802977c:	3301      	adds	r3, #1
 802977e:	429d      	cmp	r5, r3
 8029780:	f101 0108 	add.w	r1, r1, #8
 8029784:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029788:	ed51 7a03 	vldr	s15, [r1, #-12]
 802978c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029790:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029794:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029798:	ed41 7a03 	vstr	s15, [r1, #-12]
 802979c:	d1ee      	bne.n	802977c <arm_cfft_f32+0x8c>
 802979e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80297a2:	4630      	mov	r0, r6
 80297a4:	4621      	mov	r1, r4
 80297a6:	f7ff fd45 	bl	8029234 <arm_cfft_radix8by4_f32>
 80297aa:	e7be      	b.n	802972a <arm_cfft_f32+0x3a>
 80297ac:	b1ad      	cbz	r5, 80297da <arm_cfft_f32+0xea>
 80297ae:	f101 030c 	add.w	r3, r1, #12
 80297b2:	2200      	movs	r2, #0
 80297b4:	ed53 7a02 	vldr	s15, [r3, #-8]
 80297b8:	3201      	adds	r2, #1
 80297ba:	eef1 7a67 	vneg.f32	s15, s15
 80297be:	4295      	cmp	r5, r2
 80297c0:	ed43 7a02 	vstr	s15, [r3, #-8]
 80297c4:	f103 0308 	add.w	r3, r3, #8
 80297c8:	d1f4      	bne.n	80297b4 <arm_cfft_f32+0xc4>
 80297ca:	e79a      	b.n	8029702 <arm_cfft_f32+0x12>
 80297cc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80297d0:	d0a5      	beq.n	802971e <arm_cfft_f32+0x2e>
 80297d2:	e7aa      	b.n	802972a <arm_cfft_f32+0x3a>
 80297d4:	2d10      	cmp	r5, #16
 80297d6:	d0b6      	beq.n	8029746 <arm_cfft_f32+0x56>
 80297d8:	e7a7      	b.n	802972a <arm_cfft_f32+0x3a>
 80297da:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80297de:	d894      	bhi.n	802970a <arm_cfft_f32+0x1a>
 80297e0:	e7aa      	b.n	8029738 <arm_cfft_f32+0x48>
 80297e2:	bf00      	nop

080297e4 <arm_cmplx_mag_f32>:
 80297e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297e8:	ea5f 0892 	movs.w	r8, r2, lsr #2
 80297ec:	b084      	sub	sp, #16
 80297ee:	d07f      	beq.n	80298f0 <arm_cmplx_mag_f32+0x10c>
 80297f0:	2700      	movs	r7, #0
 80297f2:	f100 0420 	add.w	r4, r0, #32
 80297f6:	f101 0510 	add.w	r5, r1, #16
 80297fa:	4646      	mov	r6, r8
 80297fc:	e05a      	b.n	80298b4 <arm_cmplx_mag_f32+0xd0>
 80297fe:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029802:	eeb4 0a40 	vcmp.f32	s0, s0
 8029806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802980a:	f040 80a4 	bne.w	8029956 <arm_cmplx_mag_f32+0x172>
 802980e:	ed05 0a04 	vstr	s0, [r5, #-16]
 8029812:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029816:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802981a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802981e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029822:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029826:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802982a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802982e:	f2c0 808f 	blt.w	8029950 <arm_cmplx_mag_f32+0x16c>
 8029832:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029836:	eeb4 0a40 	vcmp.f32	s0, s0
 802983a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802983e:	f040 80af 	bne.w	80299a0 <arm_cmplx_mag_f32+0x1bc>
 8029842:	ed05 0a03 	vstr	s0, [r5, #-12]
 8029846:	ed54 7a04 	vldr	s15, [r4, #-16]
 802984a:	ed14 0a03 	vldr	s0, [r4, #-12]
 802984e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029852:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029856:	ee77 7a80 	vadd.f32	s15, s15, s0
 802985a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802985e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029862:	db72      	blt.n	802994a <arm_cmplx_mag_f32+0x166>
 8029864:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029868:	eeb4 0a40 	vcmp.f32	s0, s0
 802986c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029870:	f040 808c 	bne.w	802998c <arm_cmplx_mag_f32+0x1a8>
 8029874:	ed05 0a02 	vstr	s0, [r5, #-8]
 8029878:	ed54 7a02 	vldr	s15, [r4, #-8]
 802987c:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029880:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029884:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029888:	ee77 7a80 	vadd.f32	s15, s15, s0
 802988c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029894:	db20      	blt.n	80298d8 <arm_cmplx_mag_f32+0xf4>
 8029896:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802989a:	eeb4 0a40 	vcmp.f32	s0, s0
 802989e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298a2:	d169      	bne.n	8029978 <arm_cmplx_mag_f32+0x194>
 80298a4:	3e01      	subs	r6, #1
 80298a6:	ed05 0a01 	vstr	s0, [r5, #-4]
 80298aa:	f104 0420 	add.w	r4, r4, #32
 80298ae:	f105 0510 	add.w	r5, r5, #16
 80298b2:	d019      	beq.n	80298e8 <arm_cmplx_mag_f32+0x104>
 80298b4:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80298b8:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80298bc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80298c0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80298c4:	ee77 7a80 	vadd.f32	s15, s15, s0
 80298c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80298cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298d0:	da95      	bge.n	80297fe <arm_cmplx_mag_f32+0x1a>
 80298d2:	f845 7c10 	str.w	r7, [r5, #-16]
 80298d6:	e79c      	b.n	8029812 <arm_cmplx_mag_f32+0x2e>
 80298d8:	3e01      	subs	r6, #1
 80298da:	f845 7c04 	str.w	r7, [r5, #-4]
 80298de:	f104 0420 	add.w	r4, r4, #32
 80298e2:	f105 0510 	add.w	r5, r5, #16
 80298e6:	d1e5      	bne.n	80298b4 <arm_cmplx_mag_f32+0xd0>
 80298e8:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 80298ec:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 80298f0:	f012 0503 	ands.w	r5, r2, #3
 80298f4:	d026      	beq.n	8029944 <arm_cmplx_mag_f32+0x160>
 80298f6:	2600      	movs	r6, #0
 80298f8:	f100 0408 	add.w	r4, r0, #8
 80298fc:	e00c      	b.n	8029918 <arm_cmplx_mag_f32+0x134>
 80298fe:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029902:	eeb4 0a40 	vcmp.f32	s0, s0
 8029906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802990a:	d12e      	bne.n	802996a <arm_cmplx_mag_f32+0x186>
 802990c:	3d01      	subs	r5, #1
 802990e:	ed01 0a01 	vstr	s0, [r1, #-4]
 8029912:	f104 0408 	add.w	r4, r4, #8
 8029916:	d015      	beq.n	8029944 <arm_cmplx_mag_f32+0x160>
 8029918:	ed54 7a02 	vldr	s15, [r4, #-8]
 802991c:	ed14 0a01 	vldr	s0, [r4, #-4]
 8029920:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029924:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029928:	3104      	adds	r1, #4
 802992a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802992e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029936:	dae2      	bge.n	80298fe <arm_cmplx_mag_f32+0x11a>
 8029938:	3d01      	subs	r5, #1
 802993a:	f841 6c04 	str.w	r6, [r1, #-4]
 802993e:	f104 0408 	add.w	r4, r4, #8
 8029942:	d1e9      	bne.n	8029918 <arm_cmplx_mag_f32+0x134>
 8029944:	b004      	add	sp, #16
 8029946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802994a:	f845 7c08 	str.w	r7, [r5, #-8]
 802994e:	e793      	b.n	8029878 <arm_cmplx_mag_f32+0x94>
 8029950:	f845 7c0c 	str.w	r7, [r5, #-12]
 8029954:	e777      	b.n	8029846 <arm_cmplx_mag_f32+0x62>
 8029956:	eeb0 0a67 	vmov.f32	s0, s15
 802995a:	9203      	str	r2, [sp, #12]
 802995c:	9102      	str	r1, [sp, #8]
 802995e:	9001      	str	r0, [sp, #4]
 8029960:	f000 fb38 	bl	8029fd4 <sqrtf>
 8029964:	a801      	add	r0, sp, #4
 8029966:	c807      	ldmia	r0, {r0, r1, r2}
 8029968:	e751      	b.n	802980e <arm_cmplx_mag_f32+0x2a>
 802996a:	eeb0 0a67 	vmov.f32	s0, s15
 802996e:	9101      	str	r1, [sp, #4]
 8029970:	f000 fb30 	bl	8029fd4 <sqrtf>
 8029974:	9901      	ldr	r1, [sp, #4]
 8029976:	e7c9      	b.n	802990c <arm_cmplx_mag_f32+0x128>
 8029978:	eeb0 0a67 	vmov.f32	s0, s15
 802997c:	9203      	str	r2, [sp, #12]
 802997e:	9102      	str	r1, [sp, #8]
 8029980:	9001      	str	r0, [sp, #4]
 8029982:	f000 fb27 	bl	8029fd4 <sqrtf>
 8029986:	a801      	add	r0, sp, #4
 8029988:	c807      	ldmia	r0, {r0, r1, r2}
 802998a:	e78b      	b.n	80298a4 <arm_cmplx_mag_f32+0xc0>
 802998c:	eeb0 0a67 	vmov.f32	s0, s15
 8029990:	9203      	str	r2, [sp, #12]
 8029992:	9102      	str	r1, [sp, #8]
 8029994:	9001      	str	r0, [sp, #4]
 8029996:	f000 fb1d 	bl	8029fd4 <sqrtf>
 802999a:	a801      	add	r0, sp, #4
 802999c:	c807      	ldmia	r0, {r0, r1, r2}
 802999e:	e769      	b.n	8029874 <arm_cmplx_mag_f32+0x90>
 80299a0:	eeb0 0a67 	vmov.f32	s0, s15
 80299a4:	9203      	str	r2, [sp, #12]
 80299a6:	9102      	str	r1, [sp, #8]
 80299a8:	9001      	str	r0, [sp, #4]
 80299aa:	f000 fb13 	bl	8029fd4 <sqrtf>
 80299ae:	a801      	add	r0, sp, #4
 80299b0:	c807      	ldmia	r0, {r0, r1, r2}
 80299b2:	e746      	b.n	8029842 <arm_cmplx_mag_f32+0x5e>

080299b4 <arm_radix8_butterfly_f32>:
 80299b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80299b8:	ed2d 8b10 	vpush	{d8-d15}
 80299bc:	b09d      	sub	sp, #116	; 0x74
 80299be:	461c      	mov	r4, r3
 80299c0:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029ce4 <arm_radix8_butterfly_f32+0x330>
 80299c4:	921a      	str	r2, [sp, #104]	; 0x68
 80299c6:	1d03      	adds	r3, r0, #4
 80299c8:	4682      	mov	sl, r0
 80299ca:	4689      	mov	r9, r1
 80299cc:	468b      	mov	fp, r1
 80299ce:	931b      	str	r3, [sp, #108]	; 0x6c
 80299d0:	9400      	str	r4, [sp, #0]
 80299d2:	469e      	mov	lr, r3
 80299d4:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80299d8:	005a      	lsls	r2, r3, #1
 80299da:	18d6      	adds	r6, r2, r3
 80299dc:	18f5      	adds	r5, r6, r3
 80299de:	9203      	str	r2, [sp, #12]
 80299e0:	195a      	adds	r2, r3, r5
 80299e2:	18d0      	adds	r0, r2, r3
 80299e4:	00df      	lsls	r7, r3, #3
 80299e6:	1819      	adds	r1, r3, r0
 80299e8:	463c      	mov	r4, r7
 80299ea:	9701      	str	r7, [sp, #4]
 80299ec:	4457      	add	r7, sl
 80299ee:	930c      	str	r3, [sp, #48]	; 0x30
 80299f0:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 80299f4:	011b      	lsls	r3, r3, #4
 80299f6:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 80299fa:	eb07 0c04 	add.w	ip, r7, r4
 80299fe:	9c00      	ldr	r4, [sp, #0]
 8029a00:	9302      	str	r3, [sp, #8]
 8029a02:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029a06:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029a0a:	3204      	adds	r2, #4
 8029a0c:	3104      	adds	r1, #4
 8029a0e:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8029a12:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029a16:	f04f 0800 	mov.w	r8, #0
 8029a1a:	eddc 7a00 	vldr	s15, [ip]
 8029a1e:	edd7 6a00 	vldr	s13, [r7]
 8029a22:	edd6 3a00 	vldr	s7, [r6]
 8029a26:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029a2a:	edd5 4a00 	vldr	s9, [r5]
 8029a2e:	ed90 2a00 	vldr	s4, [r0]
 8029a32:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029a36:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029a3a:	ee77 8a82 	vadd.f32	s17, s15, s4
 8029a3e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8029a42:	ee76 1a87 	vadd.f32	s3, s13, s14
 8029a46:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029a4a:	ee31 6a84 	vadd.f32	s12, s3, s8
 8029a4e:	ee33 5a28 	vadd.f32	s10, s6, s17
 8029a52:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8029a56:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029a5a:	ee35 5a46 	vsub.f32	s10, s10, s12
 8029a5e:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8029a62:	ed85 5a00 	vstr	s10, [r5]
 8029a66:	ed96 1a01 	vldr	s2, [r6, #4]
 8029a6a:	edd7 5a01 	vldr	s11, [r7, #4]
 8029a6e:	ed92 aa00 	vldr	s20, [r2]
 8029a72:	ed91 6a00 	vldr	s12, [r1]
 8029a76:	ed9e 9a00 	vldr	s18, [lr]
 8029a7a:	ed95 5a01 	vldr	s10, [r5, #4]
 8029a7e:	eddc 6a01 	vldr	s13, [ip, #4]
 8029a82:	edd0 9a01 	vldr	s19, [r0, #4]
 8029a86:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029a8a:	ee71 2a46 	vsub.f32	s5, s2, s12
 8029a8e:	ee75 3aca 	vsub.f32	s7, s11, s20
 8029a92:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029a96:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029a9a:	ee37 7a20 	vadd.f32	s14, s14, s1
 8029a9e:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8029aa2:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029aa6:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029aaa:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8029aae:	ee39 5a45 	vsub.f32	s10, s18, s10
 8029ab2:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029ab6:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029aba:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8029abe:	ee31 6a06 	vadd.f32	s12, s2, s12
 8029ac2:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029ac6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029aca:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8029ace:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8029ad2:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029ad6:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029ada:	ee75 8a86 	vadd.f32	s17, s11, s12
 8029ade:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8029ae2:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029ae6:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029aea:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8029aee:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8029af2:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029af6:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029afa:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8029afe:	ee75 4a22 	vadd.f32	s9, s10, s5
 8029b02:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029b06:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029b0a:	ee33 8a06 	vadd.f32	s16, s6, s12
 8029b0e:	ee75 2a87 	vadd.f32	s5, s11, s14
 8029b12:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029b16:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029b1a:	ee74 0a61 	vsub.f32	s1, s8, s3
 8029b1e:	ee33 2a80 	vadd.f32	s4, s7, s0
 8029b22:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029b26:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029b2a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029b2e:	ee31 1a68 	vsub.f32	s2, s2, s17
 8029b32:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029b36:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029b3a:	ee74 4a85 	vadd.f32	s9, s9, s10
 8029b3e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8029b42:	44d8      	add	r8, fp
 8029b44:	45c1      	cmp	r9, r8
 8029b46:	ed8e 9a00 	vstr	s18, [lr]
 8029b4a:	ed85 1a01 	vstr	s2, [r5, #4]
 8029b4e:	449e      	add	lr, r3
 8029b50:	ed8c 8a00 	vstr	s16, [ip]
 8029b54:	441d      	add	r5, r3
 8029b56:	ed80 6a00 	vstr	s12, [r0]
 8029b5a:	edcc 0a01 	vstr	s1, [ip, #4]
 8029b5e:	ed80 4a01 	vstr	s8, [r0, #4]
 8029b62:	449c      	add	ip, r3
 8029b64:	ed87 2a00 	vstr	s4, [r7]
 8029b68:	4418      	add	r0, r3
 8029b6a:	ed41 3a01 	vstr	s7, [r1, #-4]
 8029b6e:	ed42 2a01 	vstr	s5, [r2, #-4]
 8029b72:	ed86 7a00 	vstr	s14, [r6]
 8029b76:	ed87 3a01 	vstr	s6, [r7, #4]
 8029b7a:	edc1 4a00 	vstr	s9, [r1]
 8029b7e:	441f      	add	r7, r3
 8029b80:	edc2 5a00 	vstr	s11, [r2]
 8029b84:	4419      	add	r1, r3
 8029b86:	edc6 6a01 	vstr	s13, [r6, #4]
 8029b8a:	441a      	add	r2, r3
 8029b8c:	441e      	add	r6, r3
 8029b8e:	f63f af44 	bhi.w	8029a1a <arm_radix8_butterfly_f32+0x66>
 8029b92:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029b94:	2907      	cmp	r1, #7
 8029b96:	4620      	mov	r0, r4
 8029b98:	f240 81e9 	bls.w	8029f6e <arm_radix8_butterfly_f32+0x5ba>
 8029b9c:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8029ba0:	193e      	adds	r6, r7, r4
 8029ba2:	1935      	adds	r5, r6, r4
 8029ba4:	9c03      	ldr	r4, [sp, #12]
 8029ba6:	9000      	str	r0, [sp, #0]
 8029ba8:	4622      	mov	r2, r4
 8029baa:	3201      	adds	r2, #1
 8029bac:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8029bb0:	9900      	ldr	r1, [sp, #0]
 8029bb2:	1828      	adds	r0, r5, r0
 8029bb4:	eb00 0e01 	add.w	lr, r0, r1
 8029bb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029bba:	440a      	add	r2, r1
 8029bbc:	eb04 0c01 	add.w	ip, r4, r1
 8029bc0:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029bc4:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029bc8:	9a00      	ldr	r2, [sp, #0]
 8029bca:	940f      	str	r4, [sp, #60]	; 0x3c
 8029bcc:	00ed      	lsls	r5, r5, #3
 8029bce:	9511      	str	r5, [sp, #68]	; 0x44
 8029bd0:	00d5      	lsls	r5, r2, #3
 8029bd2:	950d      	str	r5, [sp, #52]	; 0x34
 8029bd4:	9d01      	ldr	r5, [sp, #4]
 8029bd6:	3508      	adds	r5, #8
 8029bd8:	9516      	str	r5, [sp, #88]	; 0x58
 8029bda:	9d02      	ldr	r5, [sp, #8]
 8029bdc:	3508      	adds	r5, #8
 8029bde:	0114      	lsls	r4, r2, #4
 8029be0:	9517      	str	r5, [sp, #92]	; 0x5c
 8029be2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029be4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029be6:	940e      	str	r4, [sp, #56]	; 0x38
 8029be8:	00c0      	lsls	r0, r0, #3
 8029bea:	9010      	str	r0, [sp, #64]	; 0x40
 8029bec:	18aa      	adds	r2, r5, r2
 8029bee:	9207      	str	r2, [sp, #28]
 8029bf0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029bf2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029bf4:	18aa      	adds	r2, r5, r2
 8029bf6:	9208      	str	r2, [sp, #32]
 8029bf8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029bfa:	18aa      	adds	r2, r5, r2
 8029bfc:	9209      	str	r2, [sp, #36]	; 0x24
 8029bfe:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8029c02:	f10e 0204 	add.w	r2, lr, #4
 8029c06:	920a      	str	r2, [sp, #40]	; 0x28
 8029c08:	00c9      	lsls	r1, r1, #3
 8029c0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029c0c:	310c      	adds	r1, #12
 8029c0e:	00f6      	lsls	r6, r6, #3
 8029c10:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029c14:	9114      	str	r1, [sp, #80]	; 0x50
 8029c16:	18a9      	adds	r1, r5, r2
 8029c18:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029c1a:	9612      	str	r6, [sp, #72]	; 0x48
 8029c1c:	00ff      	lsls	r7, r7, #3
 8029c1e:	19ae      	adds	r6, r5, r6
 8029c20:	3008      	adds	r0, #8
 8029c22:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029c26:	9606      	str	r6, [sp, #24]
 8029c28:	9019      	str	r0, [sp, #100]	; 0x64
 8029c2a:	18aa      	adds	r2, r5, r2
 8029c2c:	0164      	lsls	r4, r4, #5
 8029c2e:	19ee      	adds	r6, r5, r7
 8029c30:	f10c 000c 	add.w	r0, ip, #12
 8029c34:	9713      	str	r7, [sp, #76]	; 0x4c
 8029c36:	9604      	str	r6, [sp, #16]
 8029c38:	9015      	str	r0, [sp, #84]	; 0x54
 8029c3a:	9103      	str	r1, [sp, #12]
 8029c3c:	9205      	str	r2, [sp, #20]
 8029c3e:	f104 0208 	add.w	r2, r4, #8
 8029c42:	9218      	str	r2, [sp, #96]	; 0x60
 8029c44:	f04f 0801 	mov.w	r8, #1
 8029c48:	2200      	movs	r2, #0
 8029c4a:	f102 0108 	add.w	r1, r2, #8
 8029c4e:	460f      	mov	r7, r1
 8029c50:	910b      	str	r1, [sp, #44]	; 0x2c
 8029c52:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029c54:	188e      	adds	r6, r1, r2
 8029c56:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029c58:	188d      	adds	r5, r1, r2
 8029c5a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029c5c:	188c      	adds	r4, r1, r2
 8029c5e:	9919      	ldr	r1, [sp, #100]	; 0x64
 8029c60:	1888      	adds	r0, r1, r2
 8029c62:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029c64:	eb01 0c02 	add.w	ip, r1, r2
 8029c68:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029c6a:	440a      	add	r2, r1
 8029c6c:	9903      	ldr	r1, [sp, #12]
 8029c6e:	edd1 fa00 	vldr	s31, [r1]
 8029c72:	9905      	ldr	r1, [sp, #20]
 8029c74:	ed91 fa00 	vldr	s30, [r1]
 8029c78:	9904      	ldr	r1, [sp, #16]
 8029c7a:	edd1 ea00 	vldr	s29, [r1]
 8029c7e:	9906      	ldr	r1, [sp, #24]
 8029c80:	ed91 ea00 	vldr	s28, [r1]
 8029c84:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029c86:	edd1 da00 	vldr	s27, [r1]
 8029c8a:	9908      	ldr	r1, [sp, #32]
 8029c8c:	ed91 da00 	vldr	s26, [r1]
 8029c90:	9907      	ldr	r1, [sp, #28]
 8029c92:	edd1 ca00 	vldr	s25, [r1]
 8029c96:	9903      	ldr	r1, [sp, #12]
 8029c98:	ed91 ca01 	vldr	s24, [r1, #4]
 8029c9c:	9905      	ldr	r1, [sp, #20]
 8029c9e:	edd1 ba01 	vldr	s23, [r1, #4]
 8029ca2:	9904      	ldr	r1, [sp, #16]
 8029ca4:	edd1 aa01 	vldr	s21, [r1, #4]
 8029ca8:	9906      	ldr	r1, [sp, #24]
 8029caa:	ed91 aa01 	vldr	s20, [r1, #4]
 8029cae:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029cb0:	edd1 7a01 	vldr	s15, [r1, #4]
 8029cb4:	9908      	ldr	r1, [sp, #32]
 8029cb6:	edcd 7a00 	vstr	s15, [sp]
 8029cba:	edd1 7a01 	vldr	s15, [r1, #4]
 8029cbe:	9907      	ldr	r1, [sp, #28]
 8029cc0:	edcd 7a01 	vstr	s15, [sp, #4]
 8029cc4:	edd1 7a01 	vldr	s15, [r1, #4]
 8029cc8:	eb0a 0e07 	add.w	lr, sl, r7
 8029ccc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8029cce:	edcd 7a02 	vstr	s15, [sp, #8]
 8029cd2:	eb0c 010a 	add.w	r1, ip, sl
 8029cd6:	4456      	add	r6, sl
 8029cd8:	4455      	add	r5, sl
 8029cda:	4454      	add	r4, sl
 8029cdc:	4450      	add	r0, sl
 8029cde:	4452      	add	r2, sl
 8029ce0:	46c4      	mov	ip, r8
 8029ce2:	e001      	b.n	8029ce8 <arm_radix8_butterfly_f32+0x334>
 8029ce4:	3f3504f3 	.word	0x3f3504f3
 8029ce8:	ed96 5a00 	vldr	s10, [r6]
 8029cec:	ed52 9a01 	vldr	s19, [r2, #-4]
 8029cf0:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029cf4:	edd0 7a00 	vldr	s15, [r0]
 8029cf8:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029cfc:	edde 3a00 	vldr	s7, [lr]
 8029d00:	ed94 3a00 	vldr	s6, [r4]
 8029d04:	ed95 2a00 	vldr	s4, [r5]
 8029d08:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029d0c:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029d10:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029d14:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029d18:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029d1c:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029d20:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029d24:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029d28:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029d2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029d30:	ed8e 6a00 	vstr	s12, [lr]
 8029d34:	edd0 8a01 	vldr	s17, [r0, #4]
 8029d38:	ed95 9a01 	vldr	s18, [r5, #4]
 8029d3c:	edd1 2a00 	vldr	s5, [r1]
 8029d40:	ed97 7a00 	vldr	s14, [r7]
 8029d44:	edd4 0a01 	vldr	s1, [r4, #4]
 8029d48:	ed96 6a01 	vldr	s12, [r6, #4]
 8029d4c:	edd2 5a00 	vldr	s11, [r2]
 8029d50:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029d54:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029d58:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029d5c:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029d60:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029d64:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029d68:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029d6c:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029d70:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029d74:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029d78:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029d7c:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029d80:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029d84:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029d88:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029d8c:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029d90:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029d94:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029d98:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029d9c:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029da0:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029da4:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029da8:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029dac:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029db0:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029db4:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029db8:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029dbc:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029dc0:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029dc4:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029dc8:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029dcc:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029dd0:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029dd4:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029dd8:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029ddc:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029de0:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029de4:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029de8:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029dec:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029df0:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029df4:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029df8:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029dfc:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029e00:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029e04:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029e08:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029e0c:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029e10:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029e14:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029e18:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029e1c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029e20:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029e24:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029e28:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029e2c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029e30:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029e34:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029e38:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029e3c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029e40:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029e44:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029e48:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029e4c:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029e50:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029e54:	ed86 3a00 	vstr	s6, [r6]
 8029e58:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029e5c:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029e60:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029e64:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029e68:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029e6c:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029e70:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029e74:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029e78:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029e7c:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029e80:	ed9d 4a00 	vldr	s8, [sp]
 8029e84:	edc6 6a01 	vstr	s13, [r6, #4]
 8029e88:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029e8c:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029e90:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029e94:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029e98:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029e9c:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029ea0:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029ea4:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029ea8:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029eac:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029eb0:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029eb4:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029eb8:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029ebc:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029ec0:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029ec4:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029ec8:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029ecc:	44dc      	add	ip, fp
 8029ece:	45e1      	cmp	r9, ip
 8029ed0:	ed84 9a00 	vstr	s18, [r4]
 8029ed4:	edc4 3a01 	vstr	s7, [r4, #4]
 8029ed8:	449e      	add	lr, r3
 8029eda:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029ede:	edc2 2a00 	vstr	s5, [r2]
 8029ee2:	441e      	add	r6, r3
 8029ee4:	ed85 2a00 	vstr	s4, [r5]
 8029ee8:	ed85 8a01 	vstr	s16, [r5, #4]
 8029eec:	441c      	add	r4, r3
 8029eee:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029ef2:	ed87 0a00 	vstr	s0, [r7]
 8029ef6:	441a      	add	r2, r3
 8029ef8:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029efc:	edc1 9a00 	vstr	s19, [r1]
 8029f00:	441d      	add	r5, r3
 8029f02:	edc0 0a00 	vstr	s1, [r0]
 8029f06:	441f      	add	r7, r3
 8029f08:	ed80 6a01 	vstr	s12, [r0, #4]
 8029f0c:	4419      	add	r1, r3
 8029f0e:	4418      	add	r0, r3
 8029f10:	f63f aeea 	bhi.w	8029ce8 <arm_radix8_butterfly_f32+0x334>
 8029f14:	9a03      	ldr	r2, [sp, #12]
 8029f16:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029f18:	440a      	add	r2, r1
 8029f1a:	9203      	str	r2, [sp, #12]
 8029f1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029f1e:	9a05      	ldr	r2, [sp, #20]
 8029f20:	440a      	add	r2, r1
 8029f22:	9205      	str	r2, [sp, #20]
 8029f24:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029f26:	9a04      	ldr	r2, [sp, #16]
 8029f28:	440a      	add	r2, r1
 8029f2a:	9204      	str	r2, [sp, #16]
 8029f2c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029f2e:	9a06      	ldr	r2, [sp, #24]
 8029f30:	440a      	add	r2, r1
 8029f32:	9206      	str	r2, [sp, #24]
 8029f34:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029f36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029f38:	440a      	add	r2, r1
 8029f3a:	9209      	str	r2, [sp, #36]	; 0x24
 8029f3c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029f3e:	9a08      	ldr	r2, [sp, #32]
 8029f40:	440a      	add	r2, r1
 8029f42:	9208      	str	r2, [sp, #32]
 8029f44:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029f46:	9a07      	ldr	r2, [sp, #28]
 8029f48:	440a      	add	r2, r1
 8029f4a:	9207      	str	r2, [sp, #28]
 8029f4c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029f4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029f50:	f108 0801 	add.w	r8, r8, #1
 8029f54:	3208      	adds	r2, #8
 8029f56:	4588      	cmp	r8, r1
 8029f58:	920a      	str	r2, [sp, #40]	; 0x28
 8029f5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029f5c:	f47f ae75 	bne.w	8029c4a <arm_radix8_butterfly_f32+0x296>
 8029f60:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029f64:	9300      	str	r3, [sp, #0]
 8029f66:	46c3      	mov	fp, r8
 8029f68:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029f6c:	e532      	b.n	80299d4 <arm_radix8_butterfly_f32+0x20>
 8029f6e:	b01d      	add	sp, #116	; 0x74
 8029f70:	ecbd 8b10 	vpop	{d8-d15}
 8029f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029f78 <__aeabi_atexit>:
 8029f78:	460b      	mov	r3, r1
 8029f7a:	4601      	mov	r1, r0
 8029f7c:	4618      	mov	r0, r3
 8029f7e:	f000 bef3 	b.w	802ad68 <__cxa_atexit>

08029f82 <_ZdlPvj>:
 8029f82:	f000 b812 	b.w	8029faa <_ZdlPv>

08029f86 <__cxa_guard_acquire>:
 8029f86:	6803      	ldr	r3, [r0, #0]
 8029f88:	07db      	lsls	r3, r3, #31
 8029f8a:	d406      	bmi.n	8029f9a <__cxa_guard_acquire+0x14>
 8029f8c:	7843      	ldrb	r3, [r0, #1]
 8029f8e:	b103      	cbz	r3, 8029f92 <__cxa_guard_acquire+0xc>
 8029f90:	deff      	udf	#255	; 0xff
 8029f92:	2301      	movs	r3, #1
 8029f94:	7043      	strb	r3, [r0, #1]
 8029f96:	4618      	mov	r0, r3
 8029f98:	4770      	bx	lr
 8029f9a:	2000      	movs	r0, #0
 8029f9c:	4770      	bx	lr

08029f9e <__cxa_guard_release>:
 8029f9e:	2301      	movs	r3, #1
 8029fa0:	6003      	str	r3, [r0, #0]
 8029fa2:	4770      	bx	lr

08029fa4 <__cxa_pure_virtual>:
 8029fa4:	b508      	push	{r3, lr}
 8029fa6:	f000 f80f 	bl	8029fc8 <_ZSt9terminatev>

08029faa <_ZdlPv>:
 8029faa:	f000 be29 	b.w	802ac00 <free>

08029fae <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029fae:	b508      	push	{r3, lr}
 8029fb0:	4780      	blx	r0
 8029fb2:	f000 fdf1 	bl	802ab98 <abort>
	...

08029fb8 <_ZSt13get_terminatev>:
 8029fb8:	4b02      	ldr	r3, [pc, #8]	; (8029fc4 <_ZSt13get_terminatev+0xc>)
 8029fba:	6818      	ldr	r0, [r3, #0]
 8029fbc:	f3bf 8f5b 	dmb	ish
 8029fc0:	4770      	bx	lr
 8029fc2:	bf00      	nop
 8029fc4:	20000104 	.word	0x20000104

08029fc8 <_ZSt9terminatev>:
 8029fc8:	b508      	push	{r3, lr}
 8029fca:	f7ff fff5 	bl	8029fb8 <_ZSt13get_terminatev>
 8029fce:	f7ff ffee 	bl	8029fae <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029fd4 <sqrtf>:
 8029fd4:	b508      	push	{r3, lr}
 8029fd6:	ed2d 8b02 	vpush	{d8}
 8029fda:	eeb0 8a40 	vmov.f32	s16, s0
 8029fde:	f000 f8a1 	bl	802a124 <__ieee754_sqrtf>
 8029fe2:	eeb4 8a48 	vcmp.f32	s16, s16
 8029fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fea:	d60c      	bvs.n	802a006 <sqrtf+0x32>
 8029fec:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a00c <sqrtf+0x38>
 8029ff0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029ff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ff8:	d505      	bpl.n	802a006 <sqrtf+0x32>
 8029ffa:	f001 f8d3 	bl	802b1a4 <__errno>
 8029ffe:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a002:	2321      	movs	r3, #33	; 0x21
 802a004:	6003      	str	r3, [r0, #0]
 802a006:	ecbd 8b02 	vpop	{d8}
 802a00a:	bd08      	pop	{r3, pc}
 802a00c:	00000000 	.word	0x00000000

0802a010 <cosf>:
 802a010:	ee10 3a10 	vmov	r3, s0
 802a014:	b507      	push	{r0, r1, r2, lr}
 802a016:	4a1e      	ldr	r2, [pc, #120]	; (802a090 <cosf+0x80>)
 802a018:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a01c:	4293      	cmp	r3, r2
 802a01e:	dc06      	bgt.n	802a02e <cosf+0x1e>
 802a020:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802a094 <cosf+0x84>
 802a024:	b003      	add	sp, #12
 802a026:	f85d eb04 	ldr.w	lr, [sp], #4
 802a02a:	f000 b903 	b.w	802a234 <__kernel_cosf>
 802a02e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a032:	db04      	blt.n	802a03e <cosf+0x2e>
 802a034:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a038:	b003      	add	sp, #12
 802a03a:	f85d fb04 	ldr.w	pc, [sp], #4
 802a03e:	4668      	mov	r0, sp
 802a040:	f000 f99e 	bl	802a380 <__ieee754_rem_pio2f>
 802a044:	f000 0003 	and.w	r0, r0, #3
 802a048:	2801      	cmp	r0, #1
 802a04a:	d009      	beq.n	802a060 <cosf+0x50>
 802a04c:	2802      	cmp	r0, #2
 802a04e:	d010      	beq.n	802a072 <cosf+0x62>
 802a050:	b9b0      	cbnz	r0, 802a080 <cosf+0x70>
 802a052:	eddd 0a01 	vldr	s1, [sp, #4]
 802a056:	ed9d 0a00 	vldr	s0, [sp]
 802a05a:	f000 f8eb 	bl	802a234 <__kernel_cosf>
 802a05e:	e7eb      	b.n	802a038 <cosf+0x28>
 802a060:	eddd 0a01 	vldr	s1, [sp, #4]
 802a064:	ed9d 0a00 	vldr	s0, [sp]
 802a068:	f000 f942 	bl	802a2f0 <__kernel_sinf>
 802a06c:	eeb1 0a40 	vneg.f32	s0, s0
 802a070:	e7e2      	b.n	802a038 <cosf+0x28>
 802a072:	eddd 0a01 	vldr	s1, [sp, #4]
 802a076:	ed9d 0a00 	vldr	s0, [sp]
 802a07a:	f000 f8db 	bl	802a234 <__kernel_cosf>
 802a07e:	e7f5      	b.n	802a06c <cosf+0x5c>
 802a080:	eddd 0a01 	vldr	s1, [sp, #4]
 802a084:	ed9d 0a00 	vldr	s0, [sp]
 802a088:	2001      	movs	r0, #1
 802a08a:	f000 f931 	bl	802a2f0 <__kernel_sinf>
 802a08e:	e7d3      	b.n	802a038 <cosf+0x28>
 802a090:	3f490fd8 	.word	0x3f490fd8
 802a094:	00000000 	.word	0x00000000

0802a098 <sinf>:
 802a098:	ee10 3a10 	vmov	r3, s0
 802a09c:	b507      	push	{r0, r1, r2, lr}
 802a09e:	4a1f      	ldr	r2, [pc, #124]	; (802a11c <sinf+0x84>)
 802a0a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0a4:	4293      	cmp	r3, r2
 802a0a6:	dc07      	bgt.n	802a0b8 <sinf+0x20>
 802a0a8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802a120 <sinf+0x88>
 802a0ac:	2000      	movs	r0, #0
 802a0ae:	b003      	add	sp, #12
 802a0b0:	f85d eb04 	ldr.w	lr, [sp], #4
 802a0b4:	f000 b91c 	b.w	802a2f0 <__kernel_sinf>
 802a0b8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a0bc:	db04      	blt.n	802a0c8 <sinf+0x30>
 802a0be:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a0c2:	b003      	add	sp, #12
 802a0c4:	f85d fb04 	ldr.w	pc, [sp], #4
 802a0c8:	4668      	mov	r0, sp
 802a0ca:	f000 f959 	bl	802a380 <__ieee754_rem_pio2f>
 802a0ce:	f000 0003 	and.w	r0, r0, #3
 802a0d2:	2801      	cmp	r0, #1
 802a0d4:	d00a      	beq.n	802a0ec <sinf+0x54>
 802a0d6:	2802      	cmp	r0, #2
 802a0d8:	d00f      	beq.n	802a0fa <sinf+0x62>
 802a0da:	b9c0      	cbnz	r0, 802a10e <sinf+0x76>
 802a0dc:	eddd 0a01 	vldr	s1, [sp, #4]
 802a0e0:	ed9d 0a00 	vldr	s0, [sp]
 802a0e4:	2001      	movs	r0, #1
 802a0e6:	f000 f903 	bl	802a2f0 <__kernel_sinf>
 802a0ea:	e7ea      	b.n	802a0c2 <sinf+0x2a>
 802a0ec:	eddd 0a01 	vldr	s1, [sp, #4]
 802a0f0:	ed9d 0a00 	vldr	s0, [sp]
 802a0f4:	f000 f89e 	bl	802a234 <__kernel_cosf>
 802a0f8:	e7e3      	b.n	802a0c2 <sinf+0x2a>
 802a0fa:	eddd 0a01 	vldr	s1, [sp, #4]
 802a0fe:	ed9d 0a00 	vldr	s0, [sp]
 802a102:	2001      	movs	r0, #1
 802a104:	f000 f8f4 	bl	802a2f0 <__kernel_sinf>
 802a108:	eeb1 0a40 	vneg.f32	s0, s0
 802a10c:	e7d9      	b.n	802a0c2 <sinf+0x2a>
 802a10e:	eddd 0a01 	vldr	s1, [sp, #4]
 802a112:	ed9d 0a00 	vldr	s0, [sp]
 802a116:	f000 f88d 	bl	802a234 <__kernel_cosf>
 802a11a:	e7f5      	b.n	802a108 <sinf+0x70>
 802a11c:	3f490fd8 	.word	0x3f490fd8
 802a120:	00000000 	.word	0x00000000

0802a124 <__ieee754_sqrtf>:
 802a124:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a128:	4770      	bx	lr
	...

0802a12c <ceilf>:
 802a12c:	ee10 3a10 	vmov	r3, s0
 802a130:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a134:	3a7f      	subs	r2, #127	; 0x7f
 802a136:	2a16      	cmp	r2, #22
 802a138:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a13c:	dc2a      	bgt.n	802a194 <ceilf+0x68>
 802a13e:	2a00      	cmp	r2, #0
 802a140:	da11      	bge.n	802a166 <ceilf+0x3a>
 802a142:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a1a8 <ceilf+0x7c>
 802a146:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a14a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a152:	dd05      	ble.n	802a160 <ceilf+0x34>
 802a154:	2b00      	cmp	r3, #0
 802a156:	db23      	blt.n	802a1a0 <ceilf+0x74>
 802a158:	2900      	cmp	r1, #0
 802a15a:	bf18      	it	ne
 802a15c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a160:	ee00 3a10 	vmov	s0, r3
 802a164:	4770      	bx	lr
 802a166:	4911      	ldr	r1, [pc, #68]	; (802a1ac <ceilf+0x80>)
 802a168:	4111      	asrs	r1, r2
 802a16a:	420b      	tst	r3, r1
 802a16c:	d0fa      	beq.n	802a164 <ceilf+0x38>
 802a16e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a1a8 <ceilf+0x7c>
 802a172:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a176:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a17a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a17e:	ddef      	ble.n	802a160 <ceilf+0x34>
 802a180:	2b00      	cmp	r3, #0
 802a182:	bfc2      	ittt	gt
 802a184:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a188:	fa40 f202 	asrgt.w	r2, r0, r2
 802a18c:	189b      	addgt	r3, r3, r2
 802a18e:	ea23 0301 	bic.w	r3, r3, r1
 802a192:	e7e5      	b.n	802a160 <ceilf+0x34>
 802a194:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a198:	d3e4      	bcc.n	802a164 <ceilf+0x38>
 802a19a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a19e:	4770      	bx	lr
 802a1a0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a1a4:	e7dc      	b.n	802a160 <ceilf+0x34>
 802a1a6:	bf00      	nop
 802a1a8:	7149f2ca 	.word	0x7149f2ca
 802a1ac:	007fffff 	.word	0x007fffff

0802a1b0 <floorf>:
 802a1b0:	ee10 3a10 	vmov	r3, s0
 802a1b4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a1b8:	3a7f      	subs	r2, #127	; 0x7f
 802a1ba:	2a16      	cmp	r2, #22
 802a1bc:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a1c0:	dc2a      	bgt.n	802a218 <floorf+0x68>
 802a1c2:	2a00      	cmp	r2, #0
 802a1c4:	da11      	bge.n	802a1ea <floorf+0x3a>
 802a1c6:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a228 <floorf+0x78>
 802a1ca:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a1ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a1d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1d6:	dd05      	ble.n	802a1e4 <floorf+0x34>
 802a1d8:	2b00      	cmp	r3, #0
 802a1da:	da23      	bge.n	802a224 <floorf+0x74>
 802a1dc:	4a13      	ldr	r2, [pc, #76]	; (802a22c <floorf+0x7c>)
 802a1de:	2900      	cmp	r1, #0
 802a1e0:	bf18      	it	ne
 802a1e2:	4613      	movne	r3, r2
 802a1e4:	ee00 3a10 	vmov	s0, r3
 802a1e8:	4770      	bx	lr
 802a1ea:	4911      	ldr	r1, [pc, #68]	; (802a230 <floorf+0x80>)
 802a1ec:	4111      	asrs	r1, r2
 802a1ee:	420b      	tst	r3, r1
 802a1f0:	d0fa      	beq.n	802a1e8 <floorf+0x38>
 802a1f2:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a228 <floorf+0x78>
 802a1f6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a1fa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a202:	ddef      	ble.n	802a1e4 <floorf+0x34>
 802a204:	2b00      	cmp	r3, #0
 802a206:	bfbe      	ittt	lt
 802a208:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a20c:	fa40 f202 	asrlt.w	r2, r0, r2
 802a210:	189b      	addlt	r3, r3, r2
 802a212:	ea23 0301 	bic.w	r3, r3, r1
 802a216:	e7e5      	b.n	802a1e4 <floorf+0x34>
 802a218:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a21c:	d3e4      	bcc.n	802a1e8 <floorf+0x38>
 802a21e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a222:	4770      	bx	lr
 802a224:	2300      	movs	r3, #0
 802a226:	e7dd      	b.n	802a1e4 <floorf+0x34>
 802a228:	7149f2ca 	.word	0x7149f2ca
 802a22c:	bf800000 	.word	0xbf800000
 802a230:	007fffff 	.word	0x007fffff

0802a234 <__kernel_cosf>:
 802a234:	ee10 3a10 	vmov	r3, s0
 802a238:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a23c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a240:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a244:	da05      	bge.n	802a252 <__kernel_cosf+0x1e>
 802a246:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a24a:	ee17 2a90 	vmov	r2, s15
 802a24e:	2a00      	cmp	r2, #0
 802a250:	d03b      	beq.n	802a2ca <__kernel_cosf+0x96>
 802a252:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a256:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a2d0 <__kernel_cosf+0x9c>
 802a25a:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a2d4 <__kernel_cosf+0xa0>
 802a25e:	4a1e      	ldr	r2, [pc, #120]	; (802a2d8 <__kernel_cosf+0xa4>)
 802a260:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a264:	4293      	cmp	r3, r2
 802a266:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a2dc <__kernel_cosf+0xa8>
 802a26a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a26e:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a2e0 <__kernel_cosf+0xac>
 802a272:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a276:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a2e4 <__kernel_cosf+0xb0>
 802a27a:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a27e:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a2e8 <__kernel_cosf+0xb4>
 802a282:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a286:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a28a:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a28e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a292:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a296:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a29a:	dc04      	bgt.n	802a2a6 <__kernel_cosf+0x72>
 802a29c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a2a0:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a2a4:	4770      	bx	lr
 802a2a6:	4a11      	ldr	r2, [pc, #68]	; (802a2ec <__kernel_cosf+0xb8>)
 802a2a8:	4293      	cmp	r3, r2
 802a2aa:	bfda      	itte	le
 802a2ac:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a2b0:	ee07 3a10 	vmovle	s14, r3
 802a2b4:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a2b8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2bc:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a2c0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a2c4:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a2c8:	4770      	bx	lr
 802a2ca:	eeb0 0a66 	vmov.f32	s0, s13
 802a2ce:	4770      	bx	lr
 802a2d0:	ad47d74e 	.word	0xad47d74e
 802a2d4:	310f74f6 	.word	0x310f74f6
 802a2d8:	3e999999 	.word	0x3e999999
 802a2dc:	b493f27c 	.word	0xb493f27c
 802a2e0:	37d00d01 	.word	0x37d00d01
 802a2e4:	bab60b61 	.word	0xbab60b61
 802a2e8:	3d2aaaab 	.word	0x3d2aaaab
 802a2ec:	3f480000 	.word	0x3f480000

0802a2f0 <__kernel_sinf>:
 802a2f0:	ee10 3a10 	vmov	r3, s0
 802a2f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a2f8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a2fc:	da04      	bge.n	802a308 <__kernel_sinf+0x18>
 802a2fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a302:	ee17 3a90 	vmov	r3, s15
 802a306:	b35b      	cbz	r3, 802a360 <__kernel_sinf+0x70>
 802a308:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a30c:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a364 <__kernel_sinf+0x74>
 802a310:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a368 <__kernel_sinf+0x78>
 802a314:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a318:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a36c <__kernel_sinf+0x7c>
 802a31c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a320:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a370 <__kernel_sinf+0x80>
 802a324:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a328:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a374 <__kernel_sinf+0x84>
 802a32c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a330:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a334:	b930      	cbnz	r0, 802a344 <__kernel_sinf+0x54>
 802a336:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a378 <__kernel_sinf+0x88>
 802a33a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a33e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a342:	4770      	bx	lr
 802a344:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a348:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a34c:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a350:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a354:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a37c <__kernel_sinf+0x8c>
 802a358:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a35c:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a360:	4770      	bx	lr
 802a362:	bf00      	nop
 802a364:	2f2ec9d3 	.word	0x2f2ec9d3
 802a368:	b2d72f34 	.word	0xb2d72f34
 802a36c:	3638ef1b 	.word	0x3638ef1b
 802a370:	b9500d01 	.word	0xb9500d01
 802a374:	3c088889 	.word	0x3c088889
 802a378:	be2aaaab 	.word	0xbe2aaaab
 802a37c:	3e2aaaab 	.word	0x3e2aaaab

0802a380 <__ieee754_rem_pio2f>:
 802a380:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a382:	ee10 6a10 	vmov	r6, s0
 802a386:	4b86      	ldr	r3, [pc, #536]	; (802a5a0 <__ieee754_rem_pio2f+0x220>)
 802a388:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a38c:	429d      	cmp	r5, r3
 802a38e:	b087      	sub	sp, #28
 802a390:	4604      	mov	r4, r0
 802a392:	dc05      	bgt.n	802a3a0 <__ieee754_rem_pio2f+0x20>
 802a394:	2300      	movs	r3, #0
 802a396:	ed80 0a00 	vstr	s0, [r0]
 802a39a:	6043      	str	r3, [r0, #4]
 802a39c:	2000      	movs	r0, #0
 802a39e:	e020      	b.n	802a3e2 <__ieee754_rem_pio2f+0x62>
 802a3a0:	4b80      	ldr	r3, [pc, #512]	; (802a5a4 <__ieee754_rem_pio2f+0x224>)
 802a3a2:	429d      	cmp	r5, r3
 802a3a4:	dc38      	bgt.n	802a418 <__ieee754_rem_pio2f+0x98>
 802a3a6:	2e00      	cmp	r6, #0
 802a3a8:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a5a8 <__ieee754_rem_pio2f+0x228>
 802a3ac:	4b7f      	ldr	r3, [pc, #508]	; (802a5ac <__ieee754_rem_pio2f+0x22c>)
 802a3ae:	f025 050f 	bic.w	r5, r5, #15
 802a3b2:	dd18      	ble.n	802a3e6 <__ieee754_rem_pio2f+0x66>
 802a3b4:	429d      	cmp	r5, r3
 802a3b6:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a3ba:	bf09      	itett	eq
 802a3bc:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a5b0 <__ieee754_rem_pio2f+0x230>
 802a3c0:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a5b4 <__ieee754_rem_pio2f+0x234>
 802a3c4:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a3c8:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a5b8 <__ieee754_rem_pio2f+0x238>
 802a3cc:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a3d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a3d4:	edc0 6a00 	vstr	s13, [r0]
 802a3d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3dc:	edc0 7a01 	vstr	s15, [r0, #4]
 802a3e0:	2001      	movs	r0, #1
 802a3e2:	b007      	add	sp, #28
 802a3e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a3e6:	429d      	cmp	r5, r3
 802a3e8:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a3ec:	bf09      	itett	eq
 802a3ee:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a5b0 <__ieee754_rem_pio2f+0x230>
 802a3f2:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a5b4 <__ieee754_rem_pio2f+0x234>
 802a3f6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a3fa:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a5b8 <__ieee754_rem_pio2f+0x238>
 802a3fe:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a402:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a406:	edc0 6a00 	vstr	s13, [r0]
 802a40a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a40e:	edc0 7a01 	vstr	s15, [r0, #4]
 802a412:	f04f 30ff 	mov.w	r0, #4294967295
 802a416:	e7e4      	b.n	802a3e2 <__ieee754_rem_pio2f+0x62>
 802a418:	4b68      	ldr	r3, [pc, #416]	; (802a5bc <__ieee754_rem_pio2f+0x23c>)
 802a41a:	429d      	cmp	r5, r3
 802a41c:	dc71      	bgt.n	802a502 <__ieee754_rem_pio2f+0x182>
 802a41e:	f000 f8db 	bl	802a5d8 <fabsf>
 802a422:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a5c0 <__ieee754_rem_pio2f+0x240>
 802a426:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a42a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a42e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a432:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a436:	ee17 0a90 	vmov	r0, s15
 802a43a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a5a8 <__ieee754_rem_pio2f+0x228>
 802a43e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a442:	281f      	cmp	r0, #31
 802a444:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a5b4 <__ieee754_rem_pio2f+0x234>
 802a448:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a44c:	eeb1 6a47 	vneg.f32	s12, s14
 802a450:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a454:	ee16 2a90 	vmov	r2, s13
 802a458:	dc1c      	bgt.n	802a494 <__ieee754_rem_pio2f+0x114>
 802a45a:	495a      	ldr	r1, [pc, #360]	; (802a5c4 <__ieee754_rem_pio2f+0x244>)
 802a45c:	1e47      	subs	r7, r0, #1
 802a45e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a462:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a466:	428b      	cmp	r3, r1
 802a468:	d014      	beq.n	802a494 <__ieee754_rem_pio2f+0x114>
 802a46a:	6022      	str	r2, [r4, #0]
 802a46c:	ed94 7a00 	vldr	s14, [r4]
 802a470:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a474:	2e00      	cmp	r6, #0
 802a476:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a47a:	ed84 0a01 	vstr	s0, [r4, #4]
 802a47e:	dab0      	bge.n	802a3e2 <__ieee754_rem_pio2f+0x62>
 802a480:	eeb1 7a47 	vneg.f32	s14, s14
 802a484:	eeb1 0a40 	vneg.f32	s0, s0
 802a488:	ed84 7a00 	vstr	s14, [r4]
 802a48c:	ed84 0a01 	vstr	s0, [r4, #4]
 802a490:	4240      	negs	r0, r0
 802a492:	e7a6      	b.n	802a3e2 <__ieee754_rem_pio2f+0x62>
 802a494:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a498:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a49c:	2908      	cmp	r1, #8
 802a49e:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a4a2:	dde2      	ble.n	802a46a <__ieee754_rem_pio2f+0xea>
 802a4a4:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a5b0 <__ieee754_rem_pio2f+0x230>
 802a4a8:	eef0 6a40 	vmov.f32	s13, s0
 802a4ac:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a4b0:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a4b4:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a4b8:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a5b8 <__ieee754_rem_pio2f+0x238>
 802a4bc:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a4c0:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a4c4:	ee15 2a90 	vmov	r2, s11
 802a4c8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a4cc:	1a5b      	subs	r3, r3, r1
 802a4ce:	2b19      	cmp	r3, #25
 802a4d0:	dc04      	bgt.n	802a4dc <__ieee754_rem_pio2f+0x15c>
 802a4d2:	edc4 5a00 	vstr	s11, [r4]
 802a4d6:	eeb0 0a66 	vmov.f32	s0, s13
 802a4da:	e7c7      	b.n	802a46c <__ieee754_rem_pio2f+0xec>
 802a4dc:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a5c8 <__ieee754_rem_pio2f+0x248>
 802a4e0:	eeb0 0a66 	vmov.f32	s0, s13
 802a4e4:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a4e8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a4ec:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a5cc <__ieee754_rem_pio2f+0x24c>
 802a4f0:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a4f4:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a4f8:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a4fc:	ed84 7a00 	vstr	s14, [r4]
 802a500:	e7b4      	b.n	802a46c <__ieee754_rem_pio2f+0xec>
 802a502:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a506:	db06      	blt.n	802a516 <__ieee754_rem_pio2f+0x196>
 802a508:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a50c:	edc0 7a01 	vstr	s15, [r0, #4]
 802a510:	edc0 7a00 	vstr	s15, [r0]
 802a514:	e742      	b.n	802a39c <__ieee754_rem_pio2f+0x1c>
 802a516:	15ea      	asrs	r2, r5, #23
 802a518:	3a86      	subs	r2, #134	; 0x86
 802a51a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a51e:	ee07 3a90 	vmov	s15, r3
 802a522:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a526:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a5d0 <__ieee754_rem_pio2f+0x250>
 802a52a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a52e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a532:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a536:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a53a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a53e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a542:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a546:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a54a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a54e:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a556:	edcd 7a05 	vstr	s15, [sp, #20]
 802a55a:	d11e      	bne.n	802a59a <__ieee754_rem_pio2f+0x21a>
 802a55c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a564:	bf14      	ite	ne
 802a566:	2302      	movne	r3, #2
 802a568:	2301      	moveq	r3, #1
 802a56a:	491a      	ldr	r1, [pc, #104]	; (802a5d4 <__ieee754_rem_pio2f+0x254>)
 802a56c:	9101      	str	r1, [sp, #4]
 802a56e:	2102      	movs	r1, #2
 802a570:	9100      	str	r1, [sp, #0]
 802a572:	a803      	add	r0, sp, #12
 802a574:	4621      	mov	r1, r4
 802a576:	f000 f89d 	bl	802a6b4 <__kernel_rem_pio2f>
 802a57a:	2e00      	cmp	r6, #0
 802a57c:	f6bf af31 	bge.w	802a3e2 <__ieee754_rem_pio2f+0x62>
 802a580:	edd4 7a00 	vldr	s15, [r4]
 802a584:	eef1 7a67 	vneg.f32	s15, s15
 802a588:	edc4 7a00 	vstr	s15, [r4]
 802a58c:	edd4 7a01 	vldr	s15, [r4, #4]
 802a590:	eef1 7a67 	vneg.f32	s15, s15
 802a594:	edc4 7a01 	vstr	s15, [r4, #4]
 802a598:	e77a      	b.n	802a490 <__ieee754_rem_pio2f+0x110>
 802a59a:	2303      	movs	r3, #3
 802a59c:	e7e5      	b.n	802a56a <__ieee754_rem_pio2f+0x1ea>
 802a59e:	bf00      	nop
 802a5a0:	3f490fd8 	.word	0x3f490fd8
 802a5a4:	4016cbe3 	.word	0x4016cbe3
 802a5a8:	3fc90f80 	.word	0x3fc90f80
 802a5ac:	3fc90fd0 	.word	0x3fc90fd0
 802a5b0:	37354400 	.word	0x37354400
 802a5b4:	37354443 	.word	0x37354443
 802a5b8:	2e85a308 	.word	0x2e85a308
 802a5bc:	43490f80 	.word	0x43490f80
 802a5c0:	3f22f984 	.word	0x3f22f984
 802a5c4:	080431e4 	.word	0x080431e4
 802a5c8:	2e85a300 	.word	0x2e85a300
 802a5cc:	248d3132 	.word	0x248d3132
 802a5d0:	43800000 	.word	0x43800000
 802a5d4:	08043264 	.word	0x08043264

0802a5d8 <fabsf>:
 802a5d8:	ee10 3a10 	vmov	r3, s0
 802a5dc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a5e0:	ee00 3a10 	vmov	s0, r3
 802a5e4:	4770      	bx	lr
	...

0802a5e8 <scalbnf>:
 802a5e8:	ee10 3a10 	vmov	r3, s0
 802a5ec:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a5f0:	d02b      	beq.n	802a64a <scalbnf+0x62>
 802a5f2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a5f6:	d302      	bcc.n	802a5fe <scalbnf+0x16>
 802a5f8:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a5fc:	4770      	bx	lr
 802a5fe:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a602:	d123      	bne.n	802a64c <scalbnf+0x64>
 802a604:	4b24      	ldr	r3, [pc, #144]	; (802a698 <scalbnf+0xb0>)
 802a606:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a69c <scalbnf+0xb4>
 802a60a:	4298      	cmp	r0, r3
 802a60c:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a610:	db17      	blt.n	802a642 <scalbnf+0x5a>
 802a612:	ee10 3a10 	vmov	r3, s0
 802a616:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a61a:	3a19      	subs	r2, #25
 802a61c:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a620:	4288      	cmp	r0, r1
 802a622:	dd15      	ble.n	802a650 <scalbnf+0x68>
 802a624:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a6a0 <scalbnf+0xb8>
 802a628:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a6a4 <scalbnf+0xbc>
 802a62c:	ee10 3a10 	vmov	r3, s0
 802a630:	eeb0 7a67 	vmov.f32	s14, s15
 802a634:	2b00      	cmp	r3, #0
 802a636:	bfb8      	it	lt
 802a638:	eef0 7a66 	vmovlt.f32	s15, s13
 802a63c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a640:	4770      	bx	lr
 802a642:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a6a8 <scalbnf+0xc0>
 802a646:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a64a:	4770      	bx	lr
 802a64c:	0dd2      	lsrs	r2, r2, #23
 802a64e:	e7e5      	b.n	802a61c <scalbnf+0x34>
 802a650:	4410      	add	r0, r2
 802a652:	28fe      	cmp	r0, #254	; 0xfe
 802a654:	dce6      	bgt.n	802a624 <scalbnf+0x3c>
 802a656:	2800      	cmp	r0, #0
 802a658:	dd06      	ble.n	802a668 <scalbnf+0x80>
 802a65a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a65e:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a662:	ee00 3a10 	vmov	s0, r3
 802a666:	4770      	bx	lr
 802a668:	f110 0f16 	cmn.w	r0, #22
 802a66c:	da09      	bge.n	802a682 <scalbnf+0x9a>
 802a66e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a6a8 <scalbnf+0xc0>
 802a672:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a6ac <scalbnf+0xc4>
 802a676:	ee10 3a10 	vmov	r3, s0
 802a67a:	eeb0 7a67 	vmov.f32	s14, s15
 802a67e:	2b00      	cmp	r3, #0
 802a680:	e7d9      	b.n	802a636 <scalbnf+0x4e>
 802a682:	3019      	adds	r0, #25
 802a684:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a688:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a68c:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a6b0 <scalbnf+0xc8>
 802a690:	ee07 3a90 	vmov	s15, r3
 802a694:	e7d7      	b.n	802a646 <scalbnf+0x5e>
 802a696:	bf00      	nop
 802a698:	ffff3cb0 	.word	0xffff3cb0
 802a69c:	4c000000 	.word	0x4c000000
 802a6a0:	7149f2ca 	.word	0x7149f2ca
 802a6a4:	f149f2ca 	.word	0xf149f2ca
 802a6a8:	0da24260 	.word	0x0da24260
 802a6ac:	8da24260 	.word	0x8da24260
 802a6b0:	33000000 	.word	0x33000000

0802a6b4 <__kernel_rem_pio2f>:
 802a6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a6b8:	ed2d 8b04 	vpush	{d8-d9}
 802a6bc:	b0d9      	sub	sp, #356	; 0x164
 802a6be:	4688      	mov	r8, r1
 802a6c0:	9002      	str	r0, [sp, #8]
 802a6c2:	49b8      	ldr	r1, [pc, #736]	; (802a9a4 <__kernel_rem_pio2f+0x2f0>)
 802a6c4:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a6c6:	9301      	str	r3, [sp, #4]
 802a6c8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a6cc:	9901      	ldr	r1, [sp, #4]
 802a6ce:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a6d0:	f101 3bff 	add.w	fp, r1, #4294967295
 802a6d4:	1d11      	adds	r1, r2, #4
 802a6d6:	db25      	blt.n	802a724 <__kernel_rem_pio2f+0x70>
 802a6d8:	1ed0      	subs	r0, r2, #3
 802a6da:	bf48      	it	mi
 802a6dc:	1d10      	addmi	r0, r2, #4
 802a6de:	10c0      	asrs	r0, r0, #3
 802a6e0:	1c45      	adds	r5, r0, #1
 802a6e2:	00e9      	lsls	r1, r5, #3
 802a6e4:	eba0 070b 	sub.w	r7, r0, fp
 802a6e8:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802a6ec:	9103      	str	r1, [sp, #12]
 802a6ee:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a6f2:	eb0a 0c0b 	add.w	ip, sl, fp
 802a6f6:	ae1c      	add	r6, sp, #112	; 0x70
 802a6f8:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a6fc:	2400      	movs	r4, #0
 802a6fe:	4564      	cmp	r4, ip
 802a700:	dd12      	ble.n	802a728 <__kernel_rem_pio2f+0x74>
 802a702:	9901      	ldr	r1, [sp, #4]
 802a704:	ac1c      	add	r4, sp, #112	; 0x70
 802a706:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a70a:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a70e:	f04f 0c00 	mov.w	ip, #0
 802a712:	45d4      	cmp	ip, sl
 802a714:	dc27      	bgt.n	802a766 <__kernel_rem_pio2f+0xb2>
 802a716:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a71a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802a71e:	4627      	mov	r7, r4
 802a720:	2600      	movs	r6, #0
 802a722:	e016      	b.n	802a752 <__kernel_rem_pio2f+0x9e>
 802a724:	2000      	movs	r0, #0
 802a726:	e7db      	b.n	802a6e0 <__kernel_rem_pio2f+0x2c>
 802a728:	42e7      	cmn	r7, r4
 802a72a:	bf5d      	ittte	pl
 802a72c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a730:	ee07 1a90 	vmovpl	s15, r1
 802a734:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a738:	eef0 7a47 	vmovmi.f32	s15, s14
 802a73c:	ece6 7a01 	vstmia	r6!, {s15}
 802a740:	3401      	adds	r4, #1
 802a742:	e7dc      	b.n	802a6fe <__kernel_rem_pio2f+0x4a>
 802a744:	ecfe 6a01 	vldmia	lr!, {s13}
 802a748:	ed97 7a00 	vldr	s14, [r7]
 802a74c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a750:	3601      	adds	r6, #1
 802a752:	455e      	cmp	r6, fp
 802a754:	f1a7 0704 	sub.w	r7, r7, #4
 802a758:	ddf4      	ble.n	802a744 <__kernel_rem_pio2f+0x90>
 802a75a:	ece9 7a01 	vstmia	r9!, {s15}
 802a75e:	f10c 0c01 	add.w	ip, ip, #1
 802a762:	3404      	adds	r4, #4
 802a764:	e7d5      	b.n	802a712 <__kernel_rem_pio2f+0x5e>
 802a766:	a908      	add	r1, sp, #32
 802a768:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a76c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a770:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a9b0 <__kernel_rem_pio2f+0x2fc>
 802a774:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a9ac <__kernel_rem_pio2f+0x2f8>
 802a778:	9105      	str	r1, [sp, #20]
 802a77a:	9304      	str	r3, [sp, #16]
 802a77c:	4656      	mov	r6, sl
 802a77e:	00b3      	lsls	r3, r6, #2
 802a780:	9306      	str	r3, [sp, #24]
 802a782:	ab58      	add	r3, sp, #352	; 0x160
 802a784:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a788:	ac08      	add	r4, sp, #32
 802a78a:	ab44      	add	r3, sp, #272	; 0x110
 802a78c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a790:	46a4      	mov	ip, r4
 802a792:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a796:	4637      	mov	r7, r6
 802a798:	2f00      	cmp	r7, #0
 802a79a:	f1a0 0004 	sub.w	r0, r0, #4
 802a79e:	dc4a      	bgt.n	802a836 <__kernel_rem_pio2f+0x182>
 802a7a0:	4628      	mov	r0, r5
 802a7a2:	9207      	str	r2, [sp, #28]
 802a7a4:	f7ff ff20 	bl	802a5e8 <scalbnf>
 802a7a8:	eeb0 8a40 	vmov.f32	s16, s0
 802a7ac:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a7b0:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a7b4:	f7ff fcfc 	bl	802a1b0 <floorf>
 802a7b8:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a7bc:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a7c0:	2d00      	cmp	r5, #0
 802a7c2:	9a07      	ldr	r2, [sp, #28]
 802a7c4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a7c8:	ee17 9a90 	vmov	r9, s15
 802a7cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a7d0:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a7d4:	dd41      	ble.n	802a85a <__kernel_rem_pio2f+0x1a6>
 802a7d6:	f106 3cff 	add.w	ip, r6, #4294967295
 802a7da:	ab08      	add	r3, sp, #32
 802a7dc:	f1c5 0e08 	rsb	lr, r5, #8
 802a7e0:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a7e4:	fa47 f00e 	asr.w	r0, r7, lr
 802a7e8:	4481      	add	r9, r0
 802a7ea:	fa00 f00e 	lsl.w	r0, r0, lr
 802a7ee:	1a3f      	subs	r7, r7, r0
 802a7f0:	f1c5 0007 	rsb	r0, r5, #7
 802a7f4:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a7f8:	4107      	asrs	r7, r0
 802a7fa:	2f00      	cmp	r7, #0
 802a7fc:	dd3c      	ble.n	802a878 <__kernel_rem_pio2f+0x1c4>
 802a7fe:	f04f 0e00 	mov.w	lr, #0
 802a802:	f109 0901 	add.w	r9, r9, #1
 802a806:	4671      	mov	r1, lr
 802a808:	4576      	cmp	r6, lr
 802a80a:	dc67      	bgt.n	802a8dc <__kernel_rem_pio2f+0x228>
 802a80c:	2d00      	cmp	r5, #0
 802a80e:	dd03      	ble.n	802a818 <__kernel_rem_pio2f+0x164>
 802a810:	2d01      	cmp	r5, #1
 802a812:	d074      	beq.n	802a8fe <__kernel_rem_pio2f+0x24a>
 802a814:	2d02      	cmp	r5, #2
 802a816:	d07b      	beq.n	802a910 <__kernel_rem_pio2f+0x25c>
 802a818:	2f02      	cmp	r7, #2
 802a81a:	d12d      	bne.n	802a878 <__kernel_rem_pio2f+0x1c4>
 802a81c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a820:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a824:	b341      	cbz	r1, 802a878 <__kernel_rem_pio2f+0x1c4>
 802a826:	4628      	mov	r0, r5
 802a828:	9207      	str	r2, [sp, #28]
 802a82a:	f7ff fedd 	bl	802a5e8 <scalbnf>
 802a82e:	9a07      	ldr	r2, [sp, #28]
 802a830:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a834:	e020      	b.n	802a878 <__kernel_rem_pio2f+0x1c4>
 802a836:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a83a:	3f01      	subs	r7, #1
 802a83c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a840:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a844:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a848:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a84c:	ecac 0a01 	vstmia	ip!, {s0}
 802a850:	ed90 0a00 	vldr	s0, [r0]
 802a854:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a858:	e79e      	b.n	802a798 <__kernel_rem_pio2f+0xe4>
 802a85a:	d105      	bne.n	802a868 <__kernel_rem_pio2f+0x1b4>
 802a85c:	1e70      	subs	r0, r6, #1
 802a85e:	ab08      	add	r3, sp, #32
 802a860:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a864:	11ff      	asrs	r7, r7, #7
 802a866:	e7c8      	b.n	802a7fa <__kernel_rem_pio2f+0x146>
 802a868:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a86c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a874:	da30      	bge.n	802a8d8 <__kernel_rem_pio2f+0x224>
 802a876:	2700      	movs	r7, #0
 802a878:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a87c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a880:	f040 809a 	bne.w	802a9b8 <__kernel_rem_pio2f+0x304>
 802a884:	1e74      	subs	r4, r6, #1
 802a886:	46a4      	mov	ip, r4
 802a888:	2100      	movs	r1, #0
 802a88a:	45d4      	cmp	ip, sl
 802a88c:	da47      	bge.n	802a91e <__kernel_rem_pio2f+0x26a>
 802a88e:	2900      	cmp	r1, #0
 802a890:	d063      	beq.n	802a95a <__kernel_rem_pio2f+0x2a6>
 802a892:	ab08      	add	r3, sp, #32
 802a894:	3d08      	subs	r5, #8
 802a896:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a89a:	2b00      	cmp	r3, #0
 802a89c:	d07f      	beq.n	802a99e <__kernel_rem_pio2f+0x2ea>
 802a89e:	4628      	mov	r0, r5
 802a8a0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a8a4:	f7ff fea0 	bl	802a5e8 <scalbnf>
 802a8a8:	1c63      	adds	r3, r4, #1
 802a8aa:	aa44      	add	r2, sp, #272	; 0x110
 802a8ac:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a9b0 <__kernel_rem_pio2f+0x2fc>
 802a8b0:	0099      	lsls	r1, r3, #2
 802a8b2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a8b6:	4623      	mov	r3, r4
 802a8b8:	2b00      	cmp	r3, #0
 802a8ba:	f280 80ad 	bge.w	802aa18 <__kernel_rem_pio2f+0x364>
 802a8be:	4623      	mov	r3, r4
 802a8c0:	2b00      	cmp	r3, #0
 802a8c2:	f2c0 80cb 	blt.w	802aa5c <__kernel_rem_pio2f+0x3a8>
 802a8c6:	aa44      	add	r2, sp, #272	; 0x110
 802a8c8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a8cc:	4e36      	ldr	r6, [pc, #216]	; (802a9a8 <__kernel_rem_pio2f+0x2f4>)
 802a8ce:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802a8d2:	2000      	movs	r0, #0
 802a8d4:	1ae2      	subs	r2, r4, r3
 802a8d6:	e0b6      	b.n	802aa46 <__kernel_rem_pio2f+0x392>
 802a8d8:	2702      	movs	r7, #2
 802a8da:	e790      	b.n	802a7fe <__kernel_rem_pio2f+0x14a>
 802a8dc:	6820      	ldr	r0, [r4, #0]
 802a8de:	b949      	cbnz	r1, 802a8f4 <__kernel_rem_pio2f+0x240>
 802a8e0:	b118      	cbz	r0, 802a8ea <__kernel_rem_pio2f+0x236>
 802a8e2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a8e6:	6020      	str	r0, [r4, #0]
 802a8e8:	2001      	movs	r0, #1
 802a8ea:	f10e 0e01 	add.w	lr, lr, #1
 802a8ee:	3404      	adds	r4, #4
 802a8f0:	4601      	mov	r1, r0
 802a8f2:	e789      	b.n	802a808 <__kernel_rem_pio2f+0x154>
 802a8f4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a8f8:	6020      	str	r0, [r4, #0]
 802a8fa:	4608      	mov	r0, r1
 802a8fc:	e7f5      	b.n	802a8ea <__kernel_rem_pio2f+0x236>
 802a8fe:	1e74      	subs	r4, r6, #1
 802a900:	ab08      	add	r3, sp, #32
 802a902:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a906:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a90a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a90e:	e783      	b.n	802a818 <__kernel_rem_pio2f+0x164>
 802a910:	1e74      	subs	r4, r6, #1
 802a912:	ab08      	add	r3, sp, #32
 802a914:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a918:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a91c:	e7f5      	b.n	802a90a <__kernel_rem_pio2f+0x256>
 802a91e:	ab08      	add	r3, sp, #32
 802a920:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a924:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a928:	4301      	orrs	r1, r0
 802a92a:	e7ae      	b.n	802a88a <__kernel_rem_pio2f+0x1d6>
 802a92c:	3001      	adds	r0, #1
 802a92e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a932:	2f00      	cmp	r7, #0
 802a934:	d0fa      	beq.n	802a92c <__kernel_rem_pio2f+0x278>
 802a936:	9b06      	ldr	r3, [sp, #24]
 802a938:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a93c:	eb0d 0403 	add.w	r4, sp, r3
 802a940:	9b01      	ldr	r3, [sp, #4]
 802a942:	18f7      	adds	r7, r6, r3
 802a944:	ab1c      	add	r3, sp, #112	; 0x70
 802a946:	f106 0c01 	add.w	ip, r6, #1
 802a94a:	3c4c      	subs	r4, #76	; 0x4c
 802a94c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a950:	4430      	add	r0, r6
 802a952:	4560      	cmp	r0, ip
 802a954:	da04      	bge.n	802a960 <__kernel_rem_pio2f+0x2ac>
 802a956:	4606      	mov	r6, r0
 802a958:	e711      	b.n	802a77e <__kernel_rem_pio2f+0xca>
 802a95a:	9c05      	ldr	r4, [sp, #20]
 802a95c:	2001      	movs	r0, #1
 802a95e:	e7e6      	b.n	802a92e <__kernel_rem_pio2f+0x27a>
 802a960:	9b04      	ldr	r3, [sp, #16]
 802a962:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a966:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a96a:	9306      	str	r3, [sp, #24]
 802a96c:	ee07 3a90 	vmov	s15, r3
 802a970:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a974:	2600      	movs	r6, #0
 802a976:	ece7 7a01 	vstmia	r7!, {s15}
 802a97a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802a97e:	46b9      	mov	r9, r7
 802a980:	455e      	cmp	r6, fp
 802a982:	dd04      	ble.n	802a98e <__kernel_rem_pio2f+0x2da>
 802a984:	ece4 7a01 	vstmia	r4!, {s15}
 802a988:	f10c 0c01 	add.w	ip, ip, #1
 802a98c:	e7e1      	b.n	802a952 <__kernel_rem_pio2f+0x29e>
 802a98e:	ecfe 6a01 	vldmia	lr!, {s13}
 802a992:	ed39 7a01 	vldmdb	r9!, {s14}
 802a996:	3601      	adds	r6, #1
 802a998:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a99c:	e7f0      	b.n	802a980 <__kernel_rem_pio2f+0x2cc>
 802a99e:	3c01      	subs	r4, #1
 802a9a0:	e777      	b.n	802a892 <__kernel_rem_pio2f+0x1de>
 802a9a2:	bf00      	nop
 802a9a4:	080435a8 	.word	0x080435a8
 802a9a8:	0804357c 	.word	0x0804357c
 802a9ac:	43800000 	.word	0x43800000
 802a9b0:	3b800000 	.word	0x3b800000
 802a9b4:	00000000 	.word	0x00000000
 802a9b8:	9b03      	ldr	r3, [sp, #12]
 802a9ba:	eeb0 0a48 	vmov.f32	s0, s16
 802a9be:	1a98      	subs	r0, r3, r2
 802a9c0:	f7ff fe12 	bl	802a5e8 <scalbnf>
 802a9c4:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a9ac <__kernel_rem_pio2f+0x2f8>
 802a9c8:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a9cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9d0:	db19      	blt.n	802aa06 <__kernel_rem_pio2f+0x352>
 802a9d2:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a9b0 <__kernel_rem_pio2f+0x2fc>
 802a9d6:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a9da:	aa08      	add	r2, sp, #32
 802a9dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a9e0:	1c74      	adds	r4, r6, #1
 802a9e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a9e6:	3508      	adds	r5, #8
 802a9e8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a9ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a9f0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a9f4:	ee10 3a10 	vmov	r3, s0
 802a9f8:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a9fc:	ee17 3a90 	vmov	r3, s15
 802aa00:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802aa04:	e74b      	b.n	802a89e <__kernel_rem_pio2f+0x1ea>
 802aa06:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802aa0a:	aa08      	add	r2, sp, #32
 802aa0c:	ee10 3a10 	vmov	r3, s0
 802aa10:	4634      	mov	r4, r6
 802aa12:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802aa16:	e742      	b.n	802a89e <__kernel_rem_pio2f+0x1ea>
 802aa18:	a808      	add	r0, sp, #32
 802aa1a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802aa1e:	9001      	str	r0, [sp, #4]
 802aa20:	ee07 0a90 	vmov	s15, r0
 802aa24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aa28:	3b01      	subs	r3, #1
 802aa2a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802aa2e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802aa32:	ed62 7a01 	vstmdb	r2!, {s15}
 802aa36:	e73f      	b.n	802a8b8 <__kernel_rem_pio2f+0x204>
 802aa38:	ecf6 6a01 	vldmia	r6!, {s13}
 802aa3c:	ecb5 7a01 	vldmia	r5!, {s14}
 802aa40:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aa44:	3001      	adds	r0, #1
 802aa46:	4550      	cmp	r0, sl
 802aa48:	dc01      	bgt.n	802aa4e <__kernel_rem_pio2f+0x39a>
 802aa4a:	4290      	cmp	r0, r2
 802aa4c:	ddf4      	ble.n	802aa38 <__kernel_rem_pio2f+0x384>
 802aa4e:	a858      	add	r0, sp, #352	; 0x160
 802aa50:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802aa54:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802aa58:	3b01      	subs	r3, #1
 802aa5a:	e731      	b.n	802a8c0 <__kernel_rem_pio2f+0x20c>
 802aa5c:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802aa5e:	2b02      	cmp	r3, #2
 802aa60:	dc09      	bgt.n	802aa76 <__kernel_rem_pio2f+0x3c2>
 802aa62:	2b00      	cmp	r3, #0
 802aa64:	dc2b      	bgt.n	802aabe <__kernel_rem_pio2f+0x40a>
 802aa66:	d044      	beq.n	802aaf2 <__kernel_rem_pio2f+0x43e>
 802aa68:	f009 0007 	and.w	r0, r9, #7
 802aa6c:	b059      	add	sp, #356	; 0x164
 802aa6e:	ecbd 8b04 	vpop	{d8-d9}
 802aa72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802aa76:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802aa78:	2b03      	cmp	r3, #3
 802aa7a:	d1f5      	bne.n	802aa68 <__kernel_rem_pio2f+0x3b4>
 802aa7c:	aa30      	add	r2, sp, #192	; 0xc0
 802aa7e:	1f0b      	subs	r3, r1, #4
 802aa80:	4413      	add	r3, r2
 802aa82:	461a      	mov	r2, r3
 802aa84:	4620      	mov	r0, r4
 802aa86:	2800      	cmp	r0, #0
 802aa88:	f1a2 0204 	sub.w	r2, r2, #4
 802aa8c:	dc52      	bgt.n	802ab34 <__kernel_rem_pio2f+0x480>
 802aa8e:	4622      	mov	r2, r4
 802aa90:	2a01      	cmp	r2, #1
 802aa92:	f1a3 0304 	sub.w	r3, r3, #4
 802aa96:	dc5d      	bgt.n	802ab54 <__kernel_rem_pio2f+0x4a0>
 802aa98:	ab30      	add	r3, sp, #192	; 0xc0
 802aa9a:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802aa9e:	440b      	add	r3, r1
 802aaa0:	2c01      	cmp	r4, #1
 802aaa2:	dc67      	bgt.n	802ab74 <__kernel_rem_pio2f+0x4c0>
 802aaa4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802aaa8:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802aaac:	2f00      	cmp	r7, #0
 802aaae:	d167      	bne.n	802ab80 <__kernel_rem_pio2f+0x4cc>
 802aab0:	edc8 6a00 	vstr	s13, [r8]
 802aab4:	ed88 7a01 	vstr	s14, [r8, #4]
 802aab8:	edc8 7a02 	vstr	s15, [r8, #8]
 802aabc:	e7d4      	b.n	802aa68 <__kernel_rem_pio2f+0x3b4>
 802aabe:	ab30      	add	r3, sp, #192	; 0xc0
 802aac0:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802aac4:	440b      	add	r3, r1
 802aac6:	4622      	mov	r2, r4
 802aac8:	2a00      	cmp	r2, #0
 802aaca:	da24      	bge.n	802ab16 <__kernel_rem_pio2f+0x462>
 802aacc:	b34f      	cbz	r7, 802ab22 <__kernel_rem_pio2f+0x46e>
 802aace:	eef1 7a47 	vneg.f32	s15, s14
 802aad2:	edc8 7a00 	vstr	s15, [r8]
 802aad6:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802aada:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aade:	aa31      	add	r2, sp, #196	; 0xc4
 802aae0:	2301      	movs	r3, #1
 802aae2:	429c      	cmp	r4, r3
 802aae4:	da20      	bge.n	802ab28 <__kernel_rem_pio2f+0x474>
 802aae6:	b10f      	cbz	r7, 802aaec <__kernel_rem_pio2f+0x438>
 802aae8:	eef1 7a67 	vneg.f32	s15, s15
 802aaec:	edc8 7a01 	vstr	s15, [r8, #4]
 802aaf0:	e7ba      	b.n	802aa68 <__kernel_rem_pio2f+0x3b4>
 802aaf2:	ab30      	add	r3, sp, #192	; 0xc0
 802aaf4:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a9b4 <__kernel_rem_pio2f+0x300>
 802aaf8:	440b      	add	r3, r1
 802aafa:	2c00      	cmp	r4, #0
 802aafc:	da05      	bge.n	802ab0a <__kernel_rem_pio2f+0x456>
 802aafe:	b10f      	cbz	r7, 802ab04 <__kernel_rem_pio2f+0x450>
 802ab00:	eef1 7a67 	vneg.f32	s15, s15
 802ab04:	edc8 7a00 	vstr	s15, [r8]
 802ab08:	e7ae      	b.n	802aa68 <__kernel_rem_pio2f+0x3b4>
 802ab0a:	ed33 7a01 	vldmdb	r3!, {s14}
 802ab0e:	3c01      	subs	r4, #1
 802ab10:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ab14:	e7f1      	b.n	802aafa <__kernel_rem_pio2f+0x446>
 802ab16:	ed73 7a01 	vldmdb	r3!, {s15}
 802ab1a:	3a01      	subs	r2, #1
 802ab1c:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ab20:	e7d2      	b.n	802aac8 <__kernel_rem_pio2f+0x414>
 802ab22:	eef0 7a47 	vmov.f32	s15, s14
 802ab26:	e7d4      	b.n	802aad2 <__kernel_rem_pio2f+0x41e>
 802ab28:	ecb2 7a01 	vldmia	r2!, {s14}
 802ab2c:	3301      	adds	r3, #1
 802ab2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ab32:	e7d6      	b.n	802aae2 <__kernel_rem_pio2f+0x42e>
 802ab34:	edd2 7a00 	vldr	s15, [r2]
 802ab38:	edd2 6a01 	vldr	s13, [r2, #4]
 802ab3c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ab40:	3801      	subs	r0, #1
 802ab42:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab46:	ed82 7a00 	vstr	s14, [r2]
 802ab4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ab4e:	edc2 7a01 	vstr	s15, [r2, #4]
 802ab52:	e798      	b.n	802aa86 <__kernel_rem_pio2f+0x3d2>
 802ab54:	edd3 7a00 	vldr	s15, [r3]
 802ab58:	edd3 6a01 	vldr	s13, [r3, #4]
 802ab5c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ab60:	3a01      	subs	r2, #1
 802ab62:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ab66:	ed83 7a00 	vstr	s14, [r3]
 802ab6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ab6e:	edc3 7a01 	vstr	s15, [r3, #4]
 802ab72:	e78d      	b.n	802aa90 <__kernel_rem_pio2f+0x3dc>
 802ab74:	ed33 7a01 	vldmdb	r3!, {s14}
 802ab78:	3c01      	subs	r4, #1
 802ab7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ab7e:	e78f      	b.n	802aaa0 <__kernel_rem_pio2f+0x3ec>
 802ab80:	eef1 6a66 	vneg.f32	s13, s13
 802ab84:	eeb1 7a47 	vneg.f32	s14, s14
 802ab88:	edc8 6a00 	vstr	s13, [r8]
 802ab8c:	ed88 7a01 	vstr	s14, [r8, #4]
 802ab90:	eef1 7a67 	vneg.f32	s15, s15
 802ab94:	e790      	b.n	802aab8 <__kernel_rem_pio2f+0x404>
 802ab96:	bf00      	nop

0802ab98 <abort>:
 802ab98:	b508      	push	{r3, lr}
 802ab9a:	2006      	movs	r0, #6
 802ab9c:	f000 fa3a 	bl	802b014 <raise>
 802aba0:	2001      	movs	r0, #1
 802aba2:	f7d7 fc55 	bl	8002450 <_exit>
	...

0802aba8 <__assert_func>:
 802aba8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802abaa:	4614      	mov	r4, r2
 802abac:	461a      	mov	r2, r3
 802abae:	4b09      	ldr	r3, [pc, #36]	; (802abd4 <__assert_func+0x2c>)
 802abb0:	681b      	ldr	r3, [r3, #0]
 802abb2:	4605      	mov	r5, r0
 802abb4:	68d8      	ldr	r0, [r3, #12]
 802abb6:	b14c      	cbz	r4, 802abcc <__assert_func+0x24>
 802abb8:	4b07      	ldr	r3, [pc, #28]	; (802abd8 <__assert_func+0x30>)
 802abba:	9100      	str	r1, [sp, #0]
 802abbc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802abc0:	4906      	ldr	r1, [pc, #24]	; (802abdc <__assert_func+0x34>)
 802abc2:	462b      	mov	r3, r5
 802abc4:	f000 f982 	bl	802aecc <fiprintf>
 802abc8:	f7ff ffe6 	bl	802ab98 <abort>
 802abcc:	4b04      	ldr	r3, [pc, #16]	; (802abe0 <__assert_func+0x38>)
 802abce:	461c      	mov	r4, r3
 802abd0:	e7f3      	b.n	802abba <__assert_func+0x12>
 802abd2:	bf00      	nop
 802abd4:	20000160 	.word	0x20000160
 802abd8:	080435b4 	.word	0x080435b4
 802abdc:	080435c1 	.word	0x080435c1
 802abe0:	080435ef 	.word	0x080435ef

0802abe4 <atexit>:
 802abe4:	2300      	movs	r3, #0
 802abe6:	4601      	mov	r1, r0
 802abe8:	461a      	mov	r2, r3
 802abea:	4618      	mov	r0, r3
 802abec:	f000 bb16 	b.w	802b21c <__register_exitproc>

0802abf0 <malloc>:
 802abf0:	4b02      	ldr	r3, [pc, #8]	; (802abfc <malloc+0xc>)
 802abf2:	4601      	mov	r1, r0
 802abf4:	6818      	ldr	r0, [r3, #0]
 802abf6:	f000 b82b 	b.w	802ac50 <_malloc_r>
 802abfa:	bf00      	nop
 802abfc:	20000160 	.word	0x20000160

0802ac00 <free>:
 802ac00:	4b02      	ldr	r3, [pc, #8]	; (802ac0c <free+0xc>)
 802ac02:	4601      	mov	r1, r0
 802ac04:	6818      	ldr	r0, [r3, #0]
 802ac06:	f000 bb67 	b.w	802b2d8 <_free_r>
 802ac0a:	bf00      	nop
 802ac0c:	20000160 	.word	0x20000160

0802ac10 <sbrk_aligned>:
 802ac10:	b570      	push	{r4, r5, r6, lr}
 802ac12:	4e0e      	ldr	r6, [pc, #56]	; (802ac4c <sbrk_aligned+0x3c>)
 802ac14:	460c      	mov	r4, r1
 802ac16:	6831      	ldr	r1, [r6, #0]
 802ac18:	4605      	mov	r5, r0
 802ac1a:	b911      	cbnz	r1, 802ac22 <sbrk_aligned+0x12>
 802ac1c:	f000 faa0 	bl	802b160 <_sbrk_r>
 802ac20:	6030      	str	r0, [r6, #0]
 802ac22:	4621      	mov	r1, r4
 802ac24:	4628      	mov	r0, r5
 802ac26:	f000 fa9b 	bl	802b160 <_sbrk_r>
 802ac2a:	1c43      	adds	r3, r0, #1
 802ac2c:	d00a      	beq.n	802ac44 <sbrk_aligned+0x34>
 802ac2e:	1cc4      	adds	r4, r0, #3
 802ac30:	f024 0403 	bic.w	r4, r4, #3
 802ac34:	42a0      	cmp	r0, r4
 802ac36:	d007      	beq.n	802ac48 <sbrk_aligned+0x38>
 802ac38:	1a21      	subs	r1, r4, r0
 802ac3a:	4628      	mov	r0, r5
 802ac3c:	f000 fa90 	bl	802b160 <_sbrk_r>
 802ac40:	3001      	adds	r0, #1
 802ac42:	d101      	bne.n	802ac48 <sbrk_aligned+0x38>
 802ac44:	f04f 34ff 	mov.w	r4, #4294967295
 802ac48:	4620      	mov	r0, r4
 802ac4a:	bd70      	pop	{r4, r5, r6, pc}
 802ac4c:	2001391c 	.word	0x2001391c

0802ac50 <_malloc_r>:
 802ac50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ac54:	1ccd      	adds	r5, r1, #3
 802ac56:	f025 0503 	bic.w	r5, r5, #3
 802ac5a:	3508      	adds	r5, #8
 802ac5c:	2d0c      	cmp	r5, #12
 802ac5e:	bf38      	it	cc
 802ac60:	250c      	movcc	r5, #12
 802ac62:	2d00      	cmp	r5, #0
 802ac64:	4607      	mov	r7, r0
 802ac66:	db01      	blt.n	802ac6c <_malloc_r+0x1c>
 802ac68:	42a9      	cmp	r1, r5
 802ac6a:	d905      	bls.n	802ac78 <_malloc_r+0x28>
 802ac6c:	230c      	movs	r3, #12
 802ac6e:	603b      	str	r3, [r7, #0]
 802ac70:	2600      	movs	r6, #0
 802ac72:	4630      	mov	r0, r6
 802ac74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ac78:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ad4c <_malloc_r+0xfc>
 802ac7c:	f000 f868 	bl	802ad50 <__malloc_lock>
 802ac80:	f8d8 3000 	ldr.w	r3, [r8]
 802ac84:	461c      	mov	r4, r3
 802ac86:	bb5c      	cbnz	r4, 802ace0 <_malloc_r+0x90>
 802ac88:	4629      	mov	r1, r5
 802ac8a:	4638      	mov	r0, r7
 802ac8c:	f7ff ffc0 	bl	802ac10 <sbrk_aligned>
 802ac90:	1c43      	adds	r3, r0, #1
 802ac92:	4604      	mov	r4, r0
 802ac94:	d155      	bne.n	802ad42 <_malloc_r+0xf2>
 802ac96:	f8d8 4000 	ldr.w	r4, [r8]
 802ac9a:	4626      	mov	r6, r4
 802ac9c:	2e00      	cmp	r6, #0
 802ac9e:	d145      	bne.n	802ad2c <_malloc_r+0xdc>
 802aca0:	2c00      	cmp	r4, #0
 802aca2:	d048      	beq.n	802ad36 <_malloc_r+0xe6>
 802aca4:	6823      	ldr	r3, [r4, #0]
 802aca6:	4631      	mov	r1, r6
 802aca8:	4638      	mov	r0, r7
 802acaa:	eb04 0903 	add.w	r9, r4, r3
 802acae:	f000 fa57 	bl	802b160 <_sbrk_r>
 802acb2:	4581      	cmp	r9, r0
 802acb4:	d13f      	bne.n	802ad36 <_malloc_r+0xe6>
 802acb6:	6821      	ldr	r1, [r4, #0]
 802acb8:	1a6d      	subs	r5, r5, r1
 802acba:	4629      	mov	r1, r5
 802acbc:	4638      	mov	r0, r7
 802acbe:	f7ff ffa7 	bl	802ac10 <sbrk_aligned>
 802acc2:	3001      	adds	r0, #1
 802acc4:	d037      	beq.n	802ad36 <_malloc_r+0xe6>
 802acc6:	6823      	ldr	r3, [r4, #0]
 802acc8:	442b      	add	r3, r5
 802acca:	6023      	str	r3, [r4, #0]
 802accc:	f8d8 3000 	ldr.w	r3, [r8]
 802acd0:	2b00      	cmp	r3, #0
 802acd2:	d038      	beq.n	802ad46 <_malloc_r+0xf6>
 802acd4:	685a      	ldr	r2, [r3, #4]
 802acd6:	42a2      	cmp	r2, r4
 802acd8:	d12b      	bne.n	802ad32 <_malloc_r+0xe2>
 802acda:	2200      	movs	r2, #0
 802acdc:	605a      	str	r2, [r3, #4]
 802acde:	e00f      	b.n	802ad00 <_malloc_r+0xb0>
 802ace0:	6822      	ldr	r2, [r4, #0]
 802ace2:	1b52      	subs	r2, r2, r5
 802ace4:	d41f      	bmi.n	802ad26 <_malloc_r+0xd6>
 802ace6:	2a0b      	cmp	r2, #11
 802ace8:	d917      	bls.n	802ad1a <_malloc_r+0xca>
 802acea:	1961      	adds	r1, r4, r5
 802acec:	42a3      	cmp	r3, r4
 802acee:	6025      	str	r5, [r4, #0]
 802acf0:	bf18      	it	ne
 802acf2:	6059      	strne	r1, [r3, #4]
 802acf4:	6863      	ldr	r3, [r4, #4]
 802acf6:	bf08      	it	eq
 802acf8:	f8c8 1000 	streq.w	r1, [r8]
 802acfc:	5162      	str	r2, [r4, r5]
 802acfe:	604b      	str	r3, [r1, #4]
 802ad00:	4638      	mov	r0, r7
 802ad02:	f104 060b 	add.w	r6, r4, #11
 802ad06:	f000 f829 	bl	802ad5c <__malloc_unlock>
 802ad0a:	f026 0607 	bic.w	r6, r6, #7
 802ad0e:	1d23      	adds	r3, r4, #4
 802ad10:	1af2      	subs	r2, r6, r3
 802ad12:	d0ae      	beq.n	802ac72 <_malloc_r+0x22>
 802ad14:	1b9b      	subs	r3, r3, r6
 802ad16:	50a3      	str	r3, [r4, r2]
 802ad18:	e7ab      	b.n	802ac72 <_malloc_r+0x22>
 802ad1a:	42a3      	cmp	r3, r4
 802ad1c:	6862      	ldr	r2, [r4, #4]
 802ad1e:	d1dd      	bne.n	802acdc <_malloc_r+0x8c>
 802ad20:	f8c8 2000 	str.w	r2, [r8]
 802ad24:	e7ec      	b.n	802ad00 <_malloc_r+0xb0>
 802ad26:	4623      	mov	r3, r4
 802ad28:	6864      	ldr	r4, [r4, #4]
 802ad2a:	e7ac      	b.n	802ac86 <_malloc_r+0x36>
 802ad2c:	4634      	mov	r4, r6
 802ad2e:	6876      	ldr	r6, [r6, #4]
 802ad30:	e7b4      	b.n	802ac9c <_malloc_r+0x4c>
 802ad32:	4613      	mov	r3, r2
 802ad34:	e7cc      	b.n	802acd0 <_malloc_r+0x80>
 802ad36:	230c      	movs	r3, #12
 802ad38:	603b      	str	r3, [r7, #0]
 802ad3a:	4638      	mov	r0, r7
 802ad3c:	f000 f80e 	bl	802ad5c <__malloc_unlock>
 802ad40:	e797      	b.n	802ac72 <_malloc_r+0x22>
 802ad42:	6025      	str	r5, [r4, #0]
 802ad44:	e7dc      	b.n	802ad00 <_malloc_r+0xb0>
 802ad46:	605b      	str	r3, [r3, #4]
 802ad48:	deff      	udf	#255	; 0xff
 802ad4a:	bf00      	nop
 802ad4c:	20013918 	.word	0x20013918

0802ad50 <__malloc_lock>:
 802ad50:	4801      	ldr	r0, [pc, #4]	; (802ad58 <__malloc_lock+0x8>)
 802ad52:	f000 ba52 	b.w	802b1fa <__retarget_lock_acquire_recursive>
 802ad56:	bf00      	nop
 802ad58:	20013a61 	.word	0x20013a61

0802ad5c <__malloc_unlock>:
 802ad5c:	4801      	ldr	r0, [pc, #4]	; (802ad64 <__malloc_unlock+0x8>)
 802ad5e:	f000 ba4d 	b.w	802b1fc <__retarget_lock_release_recursive>
 802ad62:	bf00      	nop
 802ad64:	20013a61 	.word	0x20013a61

0802ad68 <__cxa_atexit>:
 802ad68:	b510      	push	{r4, lr}
 802ad6a:	4c05      	ldr	r4, [pc, #20]	; (802ad80 <__cxa_atexit+0x18>)
 802ad6c:	4613      	mov	r3, r2
 802ad6e:	b12c      	cbz	r4, 802ad7c <__cxa_atexit+0x14>
 802ad70:	460a      	mov	r2, r1
 802ad72:	4601      	mov	r1, r0
 802ad74:	2002      	movs	r0, #2
 802ad76:	f000 fa51 	bl	802b21c <__register_exitproc>
 802ad7a:	bd10      	pop	{r4, pc}
 802ad7c:	4620      	mov	r0, r4
 802ad7e:	e7fc      	b.n	802ad7a <__cxa_atexit+0x12>
 802ad80:	0802b21d 	.word	0x0802b21d

0802ad84 <std>:
 802ad84:	2300      	movs	r3, #0
 802ad86:	b510      	push	{r4, lr}
 802ad88:	4604      	mov	r4, r0
 802ad8a:	e9c0 3300 	strd	r3, r3, [r0]
 802ad8e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ad92:	6083      	str	r3, [r0, #8]
 802ad94:	8181      	strh	r1, [r0, #12]
 802ad96:	6643      	str	r3, [r0, #100]	; 0x64
 802ad98:	81c2      	strh	r2, [r0, #14]
 802ad9a:	6183      	str	r3, [r0, #24]
 802ad9c:	4619      	mov	r1, r3
 802ad9e:	2208      	movs	r2, #8
 802ada0:	305c      	adds	r0, #92	; 0x5c
 802ada2:	f000 f906 	bl	802afb2 <memset>
 802ada6:	4b0d      	ldr	r3, [pc, #52]	; (802addc <std+0x58>)
 802ada8:	6263      	str	r3, [r4, #36]	; 0x24
 802adaa:	4b0d      	ldr	r3, [pc, #52]	; (802ade0 <std+0x5c>)
 802adac:	62a3      	str	r3, [r4, #40]	; 0x28
 802adae:	4b0d      	ldr	r3, [pc, #52]	; (802ade4 <std+0x60>)
 802adb0:	62e3      	str	r3, [r4, #44]	; 0x2c
 802adb2:	4b0d      	ldr	r3, [pc, #52]	; (802ade8 <std+0x64>)
 802adb4:	6323      	str	r3, [r4, #48]	; 0x30
 802adb6:	4b0d      	ldr	r3, [pc, #52]	; (802adec <std+0x68>)
 802adb8:	6224      	str	r4, [r4, #32]
 802adba:	429c      	cmp	r4, r3
 802adbc:	d006      	beq.n	802adcc <std+0x48>
 802adbe:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802adc2:	4294      	cmp	r4, r2
 802adc4:	d002      	beq.n	802adcc <std+0x48>
 802adc6:	33d0      	adds	r3, #208	; 0xd0
 802adc8:	429c      	cmp	r4, r3
 802adca:	d105      	bne.n	802add8 <std+0x54>
 802adcc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802add0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802add4:	f000 ba10 	b.w	802b1f8 <__retarget_lock_init_recursive>
 802add8:	bd10      	pop	{r4, pc}
 802adda:	bf00      	nop
 802addc:	0802af2d 	.word	0x0802af2d
 802ade0:	0802af4f 	.word	0x0802af4f
 802ade4:	0802af87 	.word	0x0802af87
 802ade8:	0802afab 	.word	0x0802afab
 802adec:	20013920 	.word	0x20013920

0802adf0 <stdio_exit_handler>:
 802adf0:	4a02      	ldr	r2, [pc, #8]	; (802adfc <stdio_exit_handler+0xc>)
 802adf2:	4903      	ldr	r1, [pc, #12]	; (802ae00 <stdio_exit_handler+0x10>)
 802adf4:	4803      	ldr	r0, [pc, #12]	; (802ae04 <stdio_exit_handler+0x14>)
 802adf6:	f000 b87b 	b.w	802aef0 <_fwalk_sglue>
 802adfa:	bf00      	nop
 802adfc:	20000108 	.word	0x20000108
 802ae00:	0802ba25 	.word	0x0802ba25
 802ae04:	20000114 	.word	0x20000114

0802ae08 <cleanup_stdio>:
 802ae08:	6841      	ldr	r1, [r0, #4]
 802ae0a:	4b0c      	ldr	r3, [pc, #48]	; (802ae3c <cleanup_stdio+0x34>)
 802ae0c:	4299      	cmp	r1, r3
 802ae0e:	b510      	push	{r4, lr}
 802ae10:	4604      	mov	r4, r0
 802ae12:	d001      	beq.n	802ae18 <cleanup_stdio+0x10>
 802ae14:	f000 fe06 	bl	802ba24 <_fflush_r>
 802ae18:	68a1      	ldr	r1, [r4, #8]
 802ae1a:	4b09      	ldr	r3, [pc, #36]	; (802ae40 <cleanup_stdio+0x38>)
 802ae1c:	4299      	cmp	r1, r3
 802ae1e:	d002      	beq.n	802ae26 <cleanup_stdio+0x1e>
 802ae20:	4620      	mov	r0, r4
 802ae22:	f000 fdff 	bl	802ba24 <_fflush_r>
 802ae26:	68e1      	ldr	r1, [r4, #12]
 802ae28:	4b06      	ldr	r3, [pc, #24]	; (802ae44 <cleanup_stdio+0x3c>)
 802ae2a:	4299      	cmp	r1, r3
 802ae2c:	d004      	beq.n	802ae38 <cleanup_stdio+0x30>
 802ae2e:	4620      	mov	r0, r4
 802ae30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ae34:	f000 bdf6 	b.w	802ba24 <_fflush_r>
 802ae38:	bd10      	pop	{r4, pc}
 802ae3a:	bf00      	nop
 802ae3c:	20013920 	.word	0x20013920
 802ae40:	20013988 	.word	0x20013988
 802ae44:	200139f0 	.word	0x200139f0

0802ae48 <global_stdio_init.part.0>:
 802ae48:	b510      	push	{r4, lr}
 802ae4a:	4b0b      	ldr	r3, [pc, #44]	; (802ae78 <global_stdio_init.part.0+0x30>)
 802ae4c:	4c0b      	ldr	r4, [pc, #44]	; (802ae7c <global_stdio_init.part.0+0x34>)
 802ae4e:	4a0c      	ldr	r2, [pc, #48]	; (802ae80 <global_stdio_init.part.0+0x38>)
 802ae50:	601a      	str	r2, [r3, #0]
 802ae52:	4620      	mov	r0, r4
 802ae54:	2200      	movs	r2, #0
 802ae56:	2104      	movs	r1, #4
 802ae58:	f7ff ff94 	bl	802ad84 <std>
 802ae5c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ae60:	2201      	movs	r2, #1
 802ae62:	2109      	movs	r1, #9
 802ae64:	f7ff ff8e 	bl	802ad84 <std>
 802ae68:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ae6c:	2202      	movs	r2, #2
 802ae6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ae72:	2112      	movs	r1, #18
 802ae74:	f7ff bf86 	b.w	802ad84 <std>
 802ae78:	20013a58 	.word	0x20013a58
 802ae7c:	20013920 	.word	0x20013920
 802ae80:	0802adf1 	.word	0x0802adf1

0802ae84 <__sfp_lock_acquire>:
 802ae84:	4801      	ldr	r0, [pc, #4]	; (802ae8c <__sfp_lock_acquire+0x8>)
 802ae86:	f000 b9b8 	b.w	802b1fa <__retarget_lock_acquire_recursive>
 802ae8a:	bf00      	nop
 802ae8c:	20013a62 	.word	0x20013a62

0802ae90 <__sfp_lock_release>:
 802ae90:	4801      	ldr	r0, [pc, #4]	; (802ae98 <__sfp_lock_release+0x8>)
 802ae92:	f000 b9b3 	b.w	802b1fc <__retarget_lock_release_recursive>
 802ae96:	bf00      	nop
 802ae98:	20013a62 	.word	0x20013a62

0802ae9c <__sinit>:
 802ae9c:	b510      	push	{r4, lr}
 802ae9e:	4604      	mov	r4, r0
 802aea0:	f7ff fff0 	bl	802ae84 <__sfp_lock_acquire>
 802aea4:	6a23      	ldr	r3, [r4, #32]
 802aea6:	b11b      	cbz	r3, 802aeb0 <__sinit+0x14>
 802aea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aeac:	f7ff bff0 	b.w	802ae90 <__sfp_lock_release>
 802aeb0:	4b04      	ldr	r3, [pc, #16]	; (802aec4 <__sinit+0x28>)
 802aeb2:	6223      	str	r3, [r4, #32]
 802aeb4:	4b04      	ldr	r3, [pc, #16]	; (802aec8 <__sinit+0x2c>)
 802aeb6:	681b      	ldr	r3, [r3, #0]
 802aeb8:	2b00      	cmp	r3, #0
 802aeba:	d1f5      	bne.n	802aea8 <__sinit+0xc>
 802aebc:	f7ff ffc4 	bl	802ae48 <global_stdio_init.part.0>
 802aec0:	e7f2      	b.n	802aea8 <__sinit+0xc>
 802aec2:	bf00      	nop
 802aec4:	0802ae09 	.word	0x0802ae09
 802aec8:	20013a58 	.word	0x20013a58

0802aecc <fiprintf>:
 802aecc:	b40e      	push	{r1, r2, r3}
 802aece:	b503      	push	{r0, r1, lr}
 802aed0:	4601      	mov	r1, r0
 802aed2:	ab03      	add	r3, sp, #12
 802aed4:	4805      	ldr	r0, [pc, #20]	; (802aeec <fiprintf+0x20>)
 802aed6:	f853 2b04 	ldr.w	r2, [r3], #4
 802aeda:	6800      	ldr	r0, [r0, #0]
 802aedc:	9301      	str	r3, [sp, #4]
 802aede:	f000 fa71 	bl	802b3c4 <_vfiprintf_r>
 802aee2:	b002      	add	sp, #8
 802aee4:	f85d eb04 	ldr.w	lr, [sp], #4
 802aee8:	b003      	add	sp, #12
 802aeea:	4770      	bx	lr
 802aeec:	20000160 	.word	0x20000160

0802aef0 <_fwalk_sglue>:
 802aef0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802aef4:	4607      	mov	r7, r0
 802aef6:	4688      	mov	r8, r1
 802aef8:	4614      	mov	r4, r2
 802aefa:	2600      	movs	r6, #0
 802aefc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802af00:	f1b9 0901 	subs.w	r9, r9, #1
 802af04:	d505      	bpl.n	802af12 <_fwalk_sglue+0x22>
 802af06:	6824      	ldr	r4, [r4, #0]
 802af08:	2c00      	cmp	r4, #0
 802af0a:	d1f7      	bne.n	802aefc <_fwalk_sglue+0xc>
 802af0c:	4630      	mov	r0, r6
 802af0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802af12:	89ab      	ldrh	r3, [r5, #12]
 802af14:	2b01      	cmp	r3, #1
 802af16:	d907      	bls.n	802af28 <_fwalk_sglue+0x38>
 802af18:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802af1c:	3301      	adds	r3, #1
 802af1e:	d003      	beq.n	802af28 <_fwalk_sglue+0x38>
 802af20:	4629      	mov	r1, r5
 802af22:	4638      	mov	r0, r7
 802af24:	47c0      	blx	r8
 802af26:	4306      	orrs	r6, r0
 802af28:	3568      	adds	r5, #104	; 0x68
 802af2a:	e7e9      	b.n	802af00 <_fwalk_sglue+0x10>

0802af2c <__sread>:
 802af2c:	b510      	push	{r4, lr}
 802af2e:	460c      	mov	r4, r1
 802af30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af34:	f000 f8ee 	bl	802b114 <_read_r>
 802af38:	2800      	cmp	r0, #0
 802af3a:	bfab      	itete	ge
 802af3c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802af3e:	89a3      	ldrhlt	r3, [r4, #12]
 802af40:	181b      	addge	r3, r3, r0
 802af42:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802af46:	bfac      	ite	ge
 802af48:	6563      	strge	r3, [r4, #84]	; 0x54
 802af4a:	81a3      	strhlt	r3, [r4, #12]
 802af4c:	bd10      	pop	{r4, pc}

0802af4e <__swrite>:
 802af4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802af52:	461f      	mov	r7, r3
 802af54:	898b      	ldrh	r3, [r1, #12]
 802af56:	05db      	lsls	r3, r3, #23
 802af58:	4605      	mov	r5, r0
 802af5a:	460c      	mov	r4, r1
 802af5c:	4616      	mov	r6, r2
 802af5e:	d505      	bpl.n	802af6c <__swrite+0x1e>
 802af60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af64:	2302      	movs	r3, #2
 802af66:	2200      	movs	r2, #0
 802af68:	f000 f8c2 	bl	802b0f0 <_lseek_r>
 802af6c:	89a3      	ldrh	r3, [r4, #12]
 802af6e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802af72:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802af76:	81a3      	strh	r3, [r4, #12]
 802af78:	4632      	mov	r2, r6
 802af7a:	463b      	mov	r3, r7
 802af7c:	4628      	mov	r0, r5
 802af7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802af82:	f000 b8fd 	b.w	802b180 <_write_r>

0802af86 <__sseek>:
 802af86:	b510      	push	{r4, lr}
 802af88:	460c      	mov	r4, r1
 802af8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af8e:	f000 f8af 	bl	802b0f0 <_lseek_r>
 802af92:	1c43      	adds	r3, r0, #1
 802af94:	89a3      	ldrh	r3, [r4, #12]
 802af96:	bf15      	itete	ne
 802af98:	6560      	strne	r0, [r4, #84]	; 0x54
 802af9a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802af9e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802afa2:	81a3      	strheq	r3, [r4, #12]
 802afa4:	bf18      	it	ne
 802afa6:	81a3      	strhne	r3, [r4, #12]
 802afa8:	bd10      	pop	{r4, pc}

0802afaa <__sclose>:
 802afaa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802afae:	f000 b839 	b.w	802b024 <_close_r>

0802afb2 <memset>:
 802afb2:	4402      	add	r2, r0
 802afb4:	4603      	mov	r3, r0
 802afb6:	4293      	cmp	r3, r2
 802afb8:	d100      	bne.n	802afbc <memset+0xa>
 802afba:	4770      	bx	lr
 802afbc:	f803 1b01 	strb.w	r1, [r3], #1
 802afc0:	e7f9      	b.n	802afb6 <memset+0x4>

0802afc2 <_raise_r>:
 802afc2:	291f      	cmp	r1, #31
 802afc4:	b538      	push	{r3, r4, r5, lr}
 802afc6:	4604      	mov	r4, r0
 802afc8:	460d      	mov	r5, r1
 802afca:	d904      	bls.n	802afd6 <_raise_r+0x14>
 802afcc:	2316      	movs	r3, #22
 802afce:	6003      	str	r3, [r0, #0]
 802afd0:	f04f 30ff 	mov.w	r0, #4294967295
 802afd4:	bd38      	pop	{r3, r4, r5, pc}
 802afd6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802afd8:	b112      	cbz	r2, 802afe0 <_raise_r+0x1e>
 802afda:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802afde:	b94b      	cbnz	r3, 802aff4 <_raise_r+0x32>
 802afe0:	4620      	mov	r0, r4
 802afe2:	f000 f8bb 	bl	802b15c <_getpid_r>
 802afe6:	462a      	mov	r2, r5
 802afe8:	4601      	mov	r1, r0
 802afea:	4620      	mov	r0, r4
 802afec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802aff0:	f000 b8a2 	b.w	802b138 <_kill_r>
 802aff4:	2b01      	cmp	r3, #1
 802aff6:	d00a      	beq.n	802b00e <_raise_r+0x4c>
 802aff8:	1c59      	adds	r1, r3, #1
 802affa:	d103      	bne.n	802b004 <_raise_r+0x42>
 802affc:	2316      	movs	r3, #22
 802affe:	6003      	str	r3, [r0, #0]
 802b000:	2001      	movs	r0, #1
 802b002:	e7e7      	b.n	802afd4 <_raise_r+0x12>
 802b004:	2400      	movs	r4, #0
 802b006:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b00a:	4628      	mov	r0, r5
 802b00c:	4798      	blx	r3
 802b00e:	2000      	movs	r0, #0
 802b010:	e7e0      	b.n	802afd4 <_raise_r+0x12>
	...

0802b014 <raise>:
 802b014:	4b02      	ldr	r3, [pc, #8]	; (802b020 <raise+0xc>)
 802b016:	4601      	mov	r1, r0
 802b018:	6818      	ldr	r0, [r3, #0]
 802b01a:	f7ff bfd2 	b.w	802afc2 <_raise_r>
 802b01e:	bf00      	nop
 802b020:	20000160 	.word	0x20000160

0802b024 <_close_r>:
 802b024:	b538      	push	{r3, r4, r5, lr}
 802b026:	4d06      	ldr	r5, [pc, #24]	; (802b040 <_close_r+0x1c>)
 802b028:	2300      	movs	r3, #0
 802b02a:	4604      	mov	r4, r0
 802b02c:	4608      	mov	r0, r1
 802b02e:	602b      	str	r3, [r5, #0]
 802b030:	f7d7 fa30 	bl	8002494 <_close>
 802b034:	1c43      	adds	r3, r0, #1
 802b036:	d102      	bne.n	802b03e <_close_r+0x1a>
 802b038:	682b      	ldr	r3, [r5, #0]
 802b03a:	b103      	cbz	r3, 802b03e <_close_r+0x1a>
 802b03c:	6023      	str	r3, [r4, #0]
 802b03e:	bd38      	pop	{r3, r4, r5, pc}
 802b040:	20013a5c 	.word	0x20013a5c

0802b044 <_reclaim_reent>:
 802b044:	4b29      	ldr	r3, [pc, #164]	; (802b0ec <_reclaim_reent+0xa8>)
 802b046:	681b      	ldr	r3, [r3, #0]
 802b048:	4283      	cmp	r3, r0
 802b04a:	b570      	push	{r4, r5, r6, lr}
 802b04c:	4604      	mov	r4, r0
 802b04e:	d04b      	beq.n	802b0e8 <_reclaim_reent+0xa4>
 802b050:	69c3      	ldr	r3, [r0, #28]
 802b052:	b143      	cbz	r3, 802b066 <_reclaim_reent+0x22>
 802b054:	68db      	ldr	r3, [r3, #12]
 802b056:	2b00      	cmp	r3, #0
 802b058:	d144      	bne.n	802b0e4 <_reclaim_reent+0xa0>
 802b05a:	69e3      	ldr	r3, [r4, #28]
 802b05c:	6819      	ldr	r1, [r3, #0]
 802b05e:	b111      	cbz	r1, 802b066 <_reclaim_reent+0x22>
 802b060:	4620      	mov	r0, r4
 802b062:	f000 f939 	bl	802b2d8 <_free_r>
 802b066:	6961      	ldr	r1, [r4, #20]
 802b068:	b111      	cbz	r1, 802b070 <_reclaim_reent+0x2c>
 802b06a:	4620      	mov	r0, r4
 802b06c:	f000 f934 	bl	802b2d8 <_free_r>
 802b070:	69e1      	ldr	r1, [r4, #28]
 802b072:	b111      	cbz	r1, 802b07a <_reclaim_reent+0x36>
 802b074:	4620      	mov	r0, r4
 802b076:	f000 f92f 	bl	802b2d8 <_free_r>
 802b07a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802b07c:	b111      	cbz	r1, 802b084 <_reclaim_reent+0x40>
 802b07e:	4620      	mov	r0, r4
 802b080:	f000 f92a 	bl	802b2d8 <_free_r>
 802b084:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b086:	b111      	cbz	r1, 802b08e <_reclaim_reent+0x4a>
 802b088:	4620      	mov	r0, r4
 802b08a:	f000 f925 	bl	802b2d8 <_free_r>
 802b08e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b090:	b111      	cbz	r1, 802b098 <_reclaim_reent+0x54>
 802b092:	4620      	mov	r0, r4
 802b094:	f000 f920 	bl	802b2d8 <_free_r>
 802b098:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802b09a:	b111      	cbz	r1, 802b0a2 <_reclaim_reent+0x5e>
 802b09c:	4620      	mov	r0, r4
 802b09e:	f000 f91b 	bl	802b2d8 <_free_r>
 802b0a2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802b0a4:	b111      	cbz	r1, 802b0ac <_reclaim_reent+0x68>
 802b0a6:	4620      	mov	r0, r4
 802b0a8:	f000 f916 	bl	802b2d8 <_free_r>
 802b0ac:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b0ae:	b111      	cbz	r1, 802b0b6 <_reclaim_reent+0x72>
 802b0b0:	4620      	mov	r0, r4
 802b0b2:	f000 f911 	bl	802b2d8 <_free_r>
 802b0b6:	6a23      	ldr	r3, [r4, #32]
 802b0b8:	b1b3      	cbz	r3, 802b0e8 <_reclaim_reent+0xa4>
 802b0ba:	4620      	mov	r0, r4
 802b0bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802b0c0:	4718      	bx	r3
 802b0c2:	5949      	ldr	r1, [r1, r5]
 802b0c4:	b941      	cbnz	r1, 802b0d8 <_reclaim_reent+0x94>
 802b0c6:	3504      	adds	r5, #4
 802b0c8:	69e3      	ldr	r3, [r4, #28]
 802b0ca:	2d80      	cmp	r5, #128	; 0x80
 802b0cc:	68d9      	ldr	r1, [r3, #12]
 802b0ce:	d1f8      	bne.n	802b0c2 <_reclaim_reent+0x7e>
 802b0d0:	4620      	mov	r0, r4
 802b0d2:	f000 f901 	bl	802b2d8 <_free_r>
 802b0d6:	e7c0      	b.n	802b05a <_reclaim_reent+0x16>
 802b0d8:	680e      	ldr	r6, [r1, #0]
 802b0da:	4620      	mov	r0, r4
 802b0dc:	f000 f8fc 	bl	802b2d8 <_free_r>
 802b0e0:	4631      	mov	r1, r6
 802b0e2:	e7ef      	b.n	802b0c4 <_reclaim_reent+0x80>
 802b0e4:	2500      	movs	r5, #0
 802b0e6:	e7ef      	b.n	802b0c8 <_reclaim_reent+0x84>
 802b0e8:	bd70      	pop	{r4, r5, r6, pc}
 802b0ea:	bf00      	nop
 802b0ec:	20000160 	.word	0x20000160

0802b0f0 <_lseek_r>:
 802b0f0:	b538      	push	{r3, r4, r5, lr}
 802b0f2:	4d07      	ldr	r5, [pc, #28]	; (802b110 <_lseek_r+0x20>)
 802b0f4:	4604      	mov	r4, r0
 802b0f6:	4608      	mov	r0, r1
 802b0f8:	4611      	mov	r1, r2
 802b0fa:	2200      	movs	r2, #0
 802b0fc:	602a      	str	r2, [r5, #0]
 802b0fe:	461a      	mov	r2, r3
 802b100:	f7d7 f9d4 	bl	80024ac <_lseek>
 802b104:	1c43      	adds	r3, r0, #1
 802b106:	d102      	bne.n	802b10e <_lseek_r+0x1e>
 802b108:	682b      	ldr	r3, [r5, #0]
 802b10a:	b103      	cbz	r3, 802b10e <_lseek_r+0x1e>
 802b10c:	6023      	str	r3, [r4, #0]
 802b10e:	bd38      	pop	{r3, r4, r5, pc}
 802b110:	20013a5c 	.word	0x20013a5c

0802b114 <_read_r>:
 802b114:	b538      	push	{r3, r4, r5, lr}
 802b116:	4d07      	ldr	r5, [pc, #28]	; (802b134 <_read_r+0x20>)
 802b118:	4604      	mov	r4, r0
 802b11a:	4608      	mov	r0, r1
 802b11c:	4611      	mov	r1, r2
 802b11e:	2200      	movs	r2, #0
 802b120:	602a      	str	r2, [r5, #0]
 802b122:	461a      	mov	r2, r3
 802b124:	f7d7 f99a 	bl	800245c <_read>
 802b128:	1c43      	adds	r3, r0, #1
 802b12a:	d102      	bne.n	802b132 <_read_r+0x1e>
 802b12c:	682b      	ldr	r3, [r5, #0]
 802b12e:	b103      	cbz	r3, 802b132 <_read_r+0x1e>
 802b130:	6023      	str	r3, [r4, #0]
 802b132:	bd38      	pop	{r3, r4, r5, pc}
 802b134:	20013a5c 	.word	0x20013a5c

0802b138 <_kill_r>:
 802b138:	b538      	push	{r3, r4, r5, lr}
 802b13a:	4d07      	ldr	r5, [pc, #28]	; (802b158 <_kill_r+0x20>)
 802b13c:	2300      	movs	r3, #0
 802b13e:	4604      	mov	r4, r0
 802b140:	4608      	mov	r0, r1
 802b142:	4611      	mov	r1, r2
 802b144:	602b      	str	r3, [r5, #0]
 802b146:	f7d7 f97b 	bl	8002440 <_kill>
 802b14a:	1c43      	adds	r3, r0, #1
 802b14c:	d102      	bne.n	802b154 <_kill_r+0x1c>
 802b14e:	682b      	ldr	r3, [r5, #0]
 802b150:	b103      	cbz	r3, 802b154 <_kill_r+0x1c>
 802b152:	6023      	str	r3, [r4, #0]
 802b154:	bd38      	pop	{r3, r4, r5, pc}
 802b156:	bf00      	nop
 802b158:	20013a5c 	.word	0x20013a5c

0802b15c <_getpid_r>:
 802b15c:	f7d7 b96e 	b.w	800243c <_getpid>

0802b160 <_sbrk_r>:
 802b160:	b538      	push	{r3, r4, r5, lr}
 802b162:	4d06      	ldr	r5, [pc, #24]	; (802b17c <_sbrk_r+0x1c>)
 802b164:	2300      	movs	r3, #0
 802b166:	4604      	mov	r4, r0
 802b168:	4608      	mov	r0, r1
 802b16a:	602b      	str	r3, [r5, #0]
 802b16c:	f7d7 f9a0 	bl	80024b0 <_sbrk>
 802b170:	1c43      	adds	r3, r0, #1
 802b172:	d102      	bne.n	802b17a <_sbrk_r+0x1a>
 802b174:	682b      	ldr	r3, [r5, #0]
 802b176:	b103      	cbz	r3, 802b17a <_sbrk_r+0x1a>
 802b178:	6023      	str	r3, [r4, #0]
 802b17a:	bd38      	pop	{r3, r4, r5, pc}
 802b17c:	20013a5c 	.word	0x20013a5c

0802b180 <_write_r>:
 802b180:	b538      	push	{r3, r4, r5, lr}
 802b182:	4d07      	ldr	r5, [pc, #28]	; (802b1a0 <_write_r+0x20>)
 802b184:	4604      	mov	r4, r0
 802b186:	4608      	mov	r0, r1
 802b188:	4611      	mov	r1, r2
 802b18a:	2200      	movs	r2, #0
 802b18c:	602a      	str	r2, [r5, #0]
 802b18e:	461a      	mov	r2, r3
 802b190:	f7d7 f972 	bl	8002478 <_write>
 802b194:	1c43      	adds	r3, r0, #1
 802b196:	d102      	bne.n	802b19e <_write_r+0x1e>
 802b198:	682b      	ldr	r3, [r5, #0]
 802b19a:	b103      	cbz	r3, 802b19e <_write_r+0x1e>
 802b19c:	6023      	str	r3, [r4, #0]
 802b19e:	bd38      	pop	{r3, r4, r5, pc}
 802b1a0:	20013a5c 	.word	0x20013a5c

0802b1a4 <__errno>:
 802b1a4:	4b01      	ldr	r3, [pc, #4]	; (802b1ac <__errno+0x8>)
 802b1a6:	6818      	ldr	r0, [r3, #0]
 802b1a8:	4770      	bx	lr
 802b1aa:	bf00      	nop
 802b1ac:	20000160 	.word	0x20000160

0802b1b0 <__libc_init_array>:
 802b1b0:	b570      	push	{r4, r5, r6, lr}
 802b1b2:	4d0d      	ldr	r5, [pc, #52]	; (802b1e8 <__libc_init_array+0x38>)
 802b1b4:	4c0d      	ldr	r4, [pc, #52]	; (802b1ec <__libc_init_array+0x3c>)
 802b1b6:	1b64      	subs	r4, r4, r5
 802b1b8:	10a4      	asrs	r4, r4, #2
 802b1ba:	2600      	movs	r6, #0
 802b1bc:	42a6      	cmp	r6, r4
 802b1be:	d109      	bne.n	802b1d4 <__libc_init_array+0x24>
 802b1c0:	4d0b      	ldr	r5, [pc, #44]	; (802b1f0 <__libc_init_array+0x40>)
 802b1c2:	4c0c      	ldr	r4, [pc, #48]	; (802b1f4 <__libc_init_array+0x44>)
 802b1c4:	f000 fd70 	bl	802bca8 <_init>
 802b1c8:	1b64      	subs	r4, r4, r5
 802b1ca:	10a4      	asrs	r4, r4, #2
 802b1cc:	2600      	movs	r6, #0
 802b1ce:	42a6      	cmp	r6, r4
 802b1d0:	d105      	bne.n	802b1de <__libc_init_array+0x2e>
 802b1d2:	bd70      	pop	{r4, r5, r6, pc}
 802b1d4:	f855 3b04 	ldr.w	r3, [r5], #4
 802b1d8:	4798      	blx	r3
 802b1da:	3601      	adds	r6, #1
 802b1dc:	e7ee      	b.n	802b1bc <__libc_init_array+0xc>
 802b1de:	f855 3b04 	ldr.w	r3, [r5], #4
 802b1e2:	4798      	blx	r3
 802b1e4:	3601      	adds	r6, #1
 802b1e6:	e7f2      	b.n	802b1ce <__libc_init_array+0x1e>
 802b1e8:	08162030 	.word	0x08162030
 802b1ec:	08162030 	.word	0x08162030
 802b1f0:	08162030 	.word	0x08162030
 802b1f4:	08162044 	.word	0x08162044

0802b1f8 <__retarget_lock_init_recursive>:
 802b1f8:	4770      	bx	lr

0802b1fa <__retarget_lock_acquire_recursive>:
 802b1fa:	4770      	bx	lr

0802b1fc <__retarget_lock_release_recursive>:
 802b1fc:	4770      	bx	lr

0802b1fe <memcpy>:
 802b1fe:	440a      	add	r2, r1
 802b200:	4291      	cmp	r1, r2
 802b202:	f100 33ff 	add.w	r3, r0, #4294967295
 802b206:	d100      	bne.n	802b20a <memcpy+0xc>
 802b208:	4770      	bx	lr
 802b20a:	b510      	push	{r4, lr}
 802b20c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b210:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b214:	4291      	cmp	r1, r2
 802b216:	d1f9      	bne.n	802b20c <memcpy+0xe>
 802b218:	bd10      	pop	{r4, pc}
	...

0802b21c <__register_exitproc>:
 802b21c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b220:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b2d4 <__register_exitproc+0xb8>
 802b224:	4606      	mov	r6, r0
 802b226:	f8d8 0000 	ldr.w	r0, [r8]
 802b22a:	461f      	mov	r7, r3
 802b22c:	460d      	mov	r5, r1
 802b22e:	4691      	mov	r9, r2
 802b230:	f7ff ffe3 	bl	802b1fa <__retarget_lock_acquire_recursive>
 802b234:	4b23      	ldr	r3, [pc, #140]	; (802b2c4 <__register_exitproc+0xa8>)
 802b236:	681c      	ldr	r4, [r3, #0]
 802b238:	b934      	cbnz	r4, 802b248 <__register_exitproc+0x2c>
 802b23a:	4c23      	ldr	r4, [pc, #140]	; (802b2c8 <__register_exitproc+0xac>)
 802b23c:	601c      	str	r4, [r3, #0]
 802b23e:	4b23      	ldr	r3, [pc, #140]	; (802b2cc <__register_exitproc+0xb0>)
 802b240:	b113      	cbz	r3, 802b248 <__register_exitproc+0x2c>
 802b242:	681b      	ldr	r3, [r3, #0]
 802b244:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b248:	6863      	ldr	r3, [r4, #4]
 802b24a:	2b1f      	cmp	r3, #31
 802b24c:	dd07      	ble.n	802b25e <__register_exitproc+0x42>
 802b24e:	f8d8 0000 	ldr.w	r0, [r8]
 802b252:	f7ff ffd3 	bl	802b1fc <__retarget_lock_release_recursive>
 802b256:	f04f 30ff 	mov.w	r0, #4294967295
 802b25a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b25e:	b32e      	cbz	r6, 802b2ac <__register_exitproc+0x90>
 802b260:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b264:	b968      	cbnz	r0, 802b282 <__register_exitproc+0x66>
 802b266:	4b1a      	ldr	r3, [pc, #104]	; (802b2d0 <__register_exitproc+0xb4>)
 802b268:	2b00      	cmp	r3, #0
 802b26a:	d0f0      	beq.n	802b24e <__register_exitproc+0x32>
 802b26c:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b270:	f7ff fcbe 	bl	802abf0 <malloc>
 802b274:	2800      	cmp	r0, #0
 802b276:	d0ea      	beq.n	802b24e <__register_exitproc+0x32>
 802b278:	2300      	movs	r3, #0
 802b27a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b27e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b282:	6863      	ldr	r3, [r4, #4]
 802b284:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b288:	2201      	movs	r2, #1
 802b28a:	409a      	lsls	r2, r3
 802b28c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b290:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b294:	4313      	orrs	r3, r2
 802b296:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b29a:	2e02      	cmp	r6, #2
 802b29c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b2a0:	bf02      	ittt	eq
 802b2a2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b2a6:	4313      	orreq	r3, r2
 802b2a8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b2ac:	6863      	ldr	r3, [r4, #4]
 802b2ae:	f8d8 0000 	ldr.w	r0, [r8]
 802b2b2:	1c5a      	adds	r2, r3, #1
 802b2b4:	3302      	adds	r3, #2
 802b2b6:	6062      	str	r2, [r4, #4]
 802b2b8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b2bc:	f7ff ff9e 	bl	802b1fc <__retarget_lock_release_recursive>
 802b2c0:	2000      	movs	r0, #0
 802b2c2:	e7ca      	b.n	802b25a <__register_exitproc+0x3e>
 802b2c4:	20013af0 	.word	0x20013af0
 802b2c8:	20013a64 	.word	0x20013a64
 802b2cc:	080435f0 	.word	0x080435f0
 802b2d0:	0802abf1 	.word	0x0802abf1
 802b2d4:	20000164 	.word	0x20000164

0802b2d8 <_free_r>:
 802b2d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b2da:	2900      	cmp	r1, #0
 802b2dc:	d044      	beq.n	802b368 <_free_r+0x90>
 802b2de:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b2e2:	9001      	str	r0, [sp, #4]
 802b2e4:	2b00      	cmp	r3, #0
 802b2e6:	f1a1 0404 	sub.w	r4, r1, #4
 802b2ea:	bfb8      	it	lt
 802b2ec:	18e4      	addlt	r4, r4, r3
 802b2ee:	f7ff fd2f 	bl	802ad50 <__malloc_lock>
 802b2f2:	4a1e      	ldr	r2, [pc, #120]	; (802b36c <_free_r+0x94>)
 802b2f4:	9801      	ldr	r0, [sp, #4]
 802b2f6:	6813      	ldr	r3, [r2, #0]
 802b2f8:	b933      	cbnz	r3, 802b308 <_free_r+0x30>
 802b2fa:	6063      	str	r3, [r4, #4]
 802b2fc:	6014      	str	r4, [r2, #0]
 802b2fe:	b003      	add	sp, #12
 802b300:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b304:	f7ff bd2a 	b.w	802ad5c <__malloc_unlock>
 802b308:	42a3      	cmp	r3, r4
 802b30a:	d908      	bls.n	802b31e <_free_r+0x46>
 802b30c:	6825      	ldr	r5, [r4, #0]
 802b30e:	1961      	adds	r1, r4, r5
 802b310:	428b      	cmp	r3, r1
 802b312:	bf01      	itttt	eq
 802b314:	6819      	ldreq	r1, [r3, #0]
 802b316:	685b      	ldreq	r3, [r3, #4]
 802b318:	1949      	addeq	r1, r1, r5
 802b31a:	6021      	streq	r1, [r4, #0]
 802b31c:	e7ed      	b.n	802b2fa <_free_r+0x22>
 802b31e:	461a      	mov	r2, r3
 802b320:	685b      	ldr	r3, [r3, #4]
 802b322:	b10b      	cbz	r3, 802b328 <_free_r+0x50>
 802b324:	42a3      	cmp	r3, r4
 802b326:	d9fa      	bls.n	802b31e <_free_r+0x46>
 802b328:	6811      	ldr	r1, [r2, #0]
 802b32a:	1855      	adds	r5, r2, r1
 802b32c:	42a5      	cmp	r5, r4
 802b32e:	d10b      	bne.n	802b348 <_free_r+0x70>
 802b330:	6824      	ldr	r4, [r4, #0]
 802b332:	4421      	add	r1, r4
 802b334:	1854      	adds	r4, r2, r1
 802b336:	42a3      	cmp	r3, r4
 802b338:	6011      	str	r1, [r2, #0]
 802b33a:	d1e0      	bne.n	802b2fe <_free_r+0x26>
 802b33c:	681c      	ldr	r4, [r3, #0]
 802b33e:	685b      	ldr	r3, [r3, #4]
 802b340:	6053      	str	r3, [r2, #4]
 802b342:	440c      	add	r4, r1
 802b344:	6014      	str	r4, [r2, #0]
 802b346:	e7da      	b.n	802b2fe <_free_r+0x26>
 802b348:	d902      	bls.n	802b350 <_free_r+0x78>
 802b34a:	230c      	movs	r3, #12
 802b34c:	6003      	str	r3, [r0, #0]
 802b34e:	e7d6      	b.n	802b2fe <_free_r+0x26>
 802b350:	6825      	ldr	r5, [r4, #0]
 802b352:	1961      	adds	r1, r4, r5
 802b354:	428b      	cmp	r3, r1
 802b356:	bf04      	itt	eq
 802b358:	6819      	ldreq	r1, [r3, #0]
 802b35a:	685b      	ldreq	r3, [r3, #4]
 802b35c:	6063      	str	r3, [r4, #4]
 802b35e:	bf04      	itt	eq
 802b360:	1949      	addeq	r1, r1, r5
 802b362:	6021      	streq	r1, [r4, #0]
 802b364:	6054      	str	r4, [r2, #4]
 802b366:	e7ca      	b.n	802b2fe <_free_r+0x26>
 802b368:	b003      	add	sp, #12
 802b36a:	bd30      	pop	{r4, r5, pc}
 802b36c:	20013918 	.word	0x20013918

0802b370 <__sfputc_r>:
 802b370:	6893      	ldr	r3, [r2, #8]
 802b372:	3b01      	subs	r3, #1
 802b374:	2b00      	cmp	r3, #0
 802b376:	b410      	push	{r4}
 802b378:	6093      	str	r3, [r2, #8]
 802b37a:	da08      	bge.n	802b38e <__sfputc_r+0x1e>
 802b37c:	6994      	ldr	r4, [r2, #24]
 802b37e:	42a3      	cmp	r3, r4
 802b380:	db01      	blt.n	802b386 <__sfputc_r+0x16>
 802b382:	290a      	cmp	r1, #10
 802b384:	d103      	bne.n	802b38e <__sfputc_r+0x1e>
 802b386:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b38a:	f000 bb73 	b.w	802ba74 <__swbuf_r>
 802b38e:	6813      	ldr	r3, [r2, #0]
 802b390:	1c58      	adds	r0, r3, #1
 802b392:	6010      	str	r0, [r2, #0]
 802b394:	7019      	strb	r1, [r3, #0]
 802b396:	4608      	mov	r0, r1
 802b398:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b39c:	4770      	bx	lr

0802b39e <__sfputs_r>:
 802b39e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b3a0:	4606      	mov	r6, r0
 802b3a2:	460f      	mov	r7, r1
 802b3a4:	4614      	mov	r4, r2
 802b3a6:	18d5      	adds	r5, r2, r3
 802b3a8:	42ac      	cmp	r4, r5
 802b3aa:	d101      	bne.n	802b3b0 <__sfputs_r+0x12>
 802b3ac:	2000      	movs	r0, #0
 802b3ae:	e007      	b.n	802b3c0 <__sfputs_r+0x22>
 802b3b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b3b4:	463a      	mov	r2, r7
 802b3b6:	4630      	mov	r0, r6
 802b3b8:	f7ff ffda 	bl	802b370 <__sfputc_r>
 802b3bc:	1c43      	adds	r3, r0, #1
 802b3be:	d1f3      	bne.n	802b3a8 <__sfputs_r+0xa>
 802b3c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b3c4 <_vfiprintf_r>:
 802b3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b3c8:	460d      	mov	r5, r1
 802b3ca:	b09d      	sub	sp, #116	; 0x74
 802b3cc:	4614      	mov	r4, r2
 802b3ce:	4698      	mov	r8, r3
 802b3d0:	4606      	mov	r6, r0
 802b3d2:	b118      	cbz	r0, 802b3dc <_vfiprintf_r+0x18>
 802b3d4:	6a03      	ldr	r3, [r0, #32]
 802b3d6:	b90b      	cbnz	r3, 802b3dc <_vfiprintf_r+0x18>
 802b3d8:	f7ff fd60 	bl	802ae9c <__sinit>
 802b3dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b3de:	07d9      	lsls	r1, r3, #31
 802b3e0:	d405      	bmi.n	802b3ee <_vfiprintf_r+0x2a>
 802b3e2:	89ab      	ldrh	r3, [r5, #12]
 802b3e4:	059a      	lsls	r2, r3, #22
 802b3e6:	d402      	bmi.n	802b3ee <_vfiprintf_r+0x2a>
 802b3e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b3ea:	f7ff ff06 	bl	802b1fa <__retarget_lock_acquire_recursive>
 802b3ee:	89ab      	ldrh	r3, [r5, #12]
 802b3f0:	071b      	lsls	r3, r3, #28
 802b3f2:	d501      	bpl.n	802b3f8 <_vfiprintf_r+0x34>
 802b3f4:	692b      	ldr	r3, [r5, #16]
 802b3f6:	b99b      	cbnz	r3, 802b420 <_vfiprintf_r+0x5c>
 802b3f8:	4629      	mov	r1, r5
 802b3fa:	4630      	mov	r0, r6
 802b3fc:	f000 fb78 	bl	802baf0 <__swsetup_r>
 802b400:	b170      	cbz	r0, 802b420 <_vfiprintf_r+0x5c>
 802b402:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b404:	07dc      	lsls	r4, r3, #31
 802b406:	d504      	bpl.n	802b412 <_vfiprintf_r+0x4e>
 802b408:	f04f 30ff 	mov.w	r0, #4294967295
 802b40c:	b01d      	add	sp, #116	; 0x74
 802b40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b412:	89ab      	ldrh	r3, [r5, #12]
 802b414:	0598      	lsls	r0, r3, #22
 802b416:	d4f7      	bmi.n	802b408 <_vfiprintf_r+0x44>
 802b418:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b41a:	f7ff feef 	bl	802b1fc <__retarget_lock_release_recursive>
 802b41e:	e7f3      	b.n	802b408 <_vfiprintf_r+0x44>
 802b420:	2300      	movs	r3, #0
 802b422:	9309      	str	r3, [sp, #36]	; 0x24
 802b424:	2320      	movs	r3, #32
 802b426:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b42a:	f8cd 800c 	str.w	r8, [sp, #12]
 802b42e:	2330      	movs	r3, #48	; 0x30
 802b430:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b5e4 <_vfiprintf_r+0x220>
 802b434:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b438:	f04f 0901 	mov.w	r9, #1
 802b43c:	4623      	mov	r3, r4
 802b43e:	469a      	mov	sl, r3
 802b440:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b444:	b10a      	cbz	r2, 802b44a <_vfiprintf_r+0x86>
 802b446:	2a25      	cmp	r2, #37	; 0x25
 802b448:	d1f9      	bne.n	802b43e <_vfiprintf_r+0x7a>
 802b44a:	ebba 0b04 	subs.w	fp, sl, r4
 802b44e:	d00b      	beq.n	802b468 <_vfiprintf_r+0xa4>
 802b450:	465b      	mov	r3, fp
 802b452:	4622      	mov	r2, r4
 802b454:	4629      	mov	r1, r5
 802b456:	4630      	mov	r0, r6
 802b458:	f7ff ffa1 	bl	802b39e <__sfputs_r>
 802b45c:	3001      	adds	r0, #1
 802b45e:	f000 80a9 	beq.w	802b5b4 <_vfiprintf_r+0x1f0>
 802b462:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b464:	445a      	add	r2, fp
 802b466:	9209      	str	r2, [sp, #36]	; 0x24
 802b468:	f89a 3000 	ldrb.w	r3, [sl]
 802b46c:	2b00      	cmp	r3, #0
 802b46e:	f000 80a1 	beq.w	802b5b4 <_vfiprintf_r+0x1f0>
 802b472:	2300      	movs	r3, #0
 802b474:	f04f 32ff 	mov.w	r2, #4294967295
 802b478:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b47c:	f10a 0a01 	add.w	sl, sl, #1
 802b480:	9304      	str	r3, [sp, #16]
 802b482:	9307      	str	r3, [sp, #28]
 802b484:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b488:	931a      	str	r3, [sp, #104]	; 0x68
 802b48a:	4654      	mov	r4, sl
 802b48c:	2205      	movs	r2, #5
 802b48e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b492:	4854      	ldr	r0, [pc, #336]	; (802b5e4 <_vfiprintf_r+0x220>)
 802b494:	f7d4 ff0c 	bl	80002b0 <memchr>
 802b498:	9a04      	ldr	r2, [sp, #16]
 802b49a:	b9d8      	cbnz	r0, 802b4d4 <_vfiprintf_r+0x110>
 802b49c:	06d1      	lsls	r1, r2, #27
 802b49e:	bf44      	itt	mi
 802b4a0:	2320      	movmi	r3, #32
 802b4a2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b4a6:	0713      	lsls	r3, r2, #28
 802b4a8:	bf44      	itt	mi
 802b4aa:	232b      	movmi	r3, #43	; 0x2b
 802b4ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b4b0:	f89a 3000 	ldrb.w	r3, [sl]
 802b4b4:	2b2a      	cmp	r3, #42	; 0x2a
 802b4b6:	d015      	beq.n	802b4e4 <_vfiprintf_r+0x120>
 802b4b8:	9a07      	ldr	r2, [sp, #28]
 802b4ba:	4654      	mov	r4, sl
 802b4bc:	2000      	movs	r0, #0
 802b4be:	f04f 0c0a 	mov.w	ip, #10
 802b4c2:	4621      	mov	r1, r4
 802b4c4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b4c8:	3b30      	subs	r3, #48	; 0x30
 802b4ca:	2b09      	cmp	r3, #9
 802b4cc:	d94d      	bls.n	802b56a <_vfiprintf_r+0x1a6>
 802b4ce:	b1b0      	cbz	r0, 802b4fe <_vfiprintf_r+0x13a>
 802b4d0:	9207      	str	r2, [sp, #28]
 802b4d2:	e014      	b.n	802b4fe <_vfiprintf_r+0x13a>
 802b4d4:	eba0 0308 	sub.w	r3, r0, r8
 802b4d8:	fa09 f303 	lsl.w	r3, r9, r3
 802b4dc:	4313      	orrs	r3, r2
 802b4de:	9304      	str	r3, [sp, #16]
 802b4e0:	46a2      	mov	sl, r4
 802b4e2:	e7d2      	b.n	802b48a <_vfiprintf_r+0xc6>
 802b4e4:	9b03      	ldr	r3, [sp, #12]
 802b4e6:	1d19      	adds	r1, r3, #4
 802b4e8:	681b      	ldr	r3, [r3, #0]
 802b4ea:	9103      	str	r1, [sp, #12]
 802b4ec:	2b00      	cmp	r3, #0
 802b4ee:	bfbb      	ittet	lt
 802b4f0:	425b      	neglt	r3, r3
 802b4f2:	f042 0202 	orrlt.w	r2, r2, #2
 802b4f6:	9307      	strge	r3, [sp, #28]
 802b4f8:	9307      	strlt	r3, [sp, #28]
 802b4fa:	bfb8      	it	lt
 802b4fc:	9204      	strlt	r2, [sp, #16]
 802b4fe:	7823      	ldrb	r3, [r4, #0]
 802b500:	2b2e      	cmp	r3, #46	; 0x2e
 802b502:	d10c      	bne.n	802b51e <_vfiprintf_r+0x15a>
 802b504:	7863      	ldrb	r3, [r4, #1]
 802b506:	2b2a      	cmp	r3, #42	; 0x2a
 802b508:	d134      	bne.n	802b574 <_vfiprintf_r+0x1b0>
 802b50a:	9b03      	ldr	r3, [sp, #12]
 802b50c:	1d1a      	adds	r2, r3, #4
 802b50e:	681b      	ldr	r3, [r3, #0]
 802b510:	9203      	str	r2, [sp, #12]
 802b512:	2b00      	cmp	r3, #0
 802b514:	bfb8      	it	lt
 802b516:	f04f 33ff 	movlt.w	r3, #4294967295
 802b51a:	3402      	adds	r4, #2
 802b51c:	9305      	str	r3, [sp, #20]
 802b51e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b5f4 <_vfiprintf_r+0x230>
 802b522:	7821      	ldrb	r1, [r4, #0]
 802b524:	2203      	movs	r2, #3
 802b526:	4650      	mov	r0, sl
 802b528:	f7d4 fec2 	bl	80002b0 <memchr>
 802b52c:	b138      	cbz	r0, 802b53e <_vfiprintf_r+0x17a>
 802b52e:	9b04      	ldr	r3, [sp, #16]
 802b530:	eba0 000a 	sub.w	r0, r0, sl
 802b534:	2240      	movs	r2, #64	; 0x40
 802b536:	4082      	lsls	r2, r0
 802b538:	4313      	orrs	r3, r2
 802b53a:	3401      	adds	r4, #1
 802b53c:	9304      	str	r3, [sp, #16]
 802b53e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b542:	4829      	ldr	r0, [pc, #164]	; (802b5e8 <_vfiprintf_r+0x224>)
 802b544:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b548:	2206      	movs	r2, #6
 802b54a:	f7d4 feb1 	bl	80002b0 <memchr>
 802b54e:	2800      	cmp	r0, #0
 802b550:	d03f      	beq.n	802b5d2 <_vfiprintf_r+0x20e>
 802b552:	4b26      	ldr	r3, [pc, #152]	; (802b5ec <_vfiprintf_r+0x228>)
 802b554:	bb1b      	cbnz	r3, 802b59e <_vfiprintf_r+0x1da>
 802b556:	9b03      	ldr	r3, [sp, #12]
 802b558:	3307      	adds	r3, #7
 802b55a:	f023 0307 	bic.w	r3, r3, #7
 802b55e:	3308      	adds	r3, #8
 802b560:	9303      	str	r3, [sp, #12]
 802b562:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b564:	443b      	add	r3, r7
 802b566:	9309      	str	r3, [sp, #36]	; 0x24
 802b568:	e768      	b.n	802b43c <_vfiprintf_r+0x78>
 802b56a:	fb0c 3202 	mla	r2, ip, r2, r3
 802b56e:	460c      	mov	r4, r1
 802b570:	2001      	movs	r0, #1
 802b572:	e7a6      	b.n	802b4c2 <_vfiprintf_r+0xfe>
 802b574:	2300      	movs	r3, #0
 802b576:	3401      	adds	r4, #1
 802b578:	9305      	str	r3, [sp, #20]
 802b57a:	4619      	mov	r1, r3
 802b57c:	f04f 0c0a 	mov.w	ip, #10
 802b580:	4620      	mov	r0, r4
 802b582:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b586:	3a30      	subs	r2, #48	; 0x30
 802b588:	2a09      	cmp	r2, #9
 802b58a:	d903      	bls.n	802b594 <_vfiprintf_r+0x1d0>
 802b58c:	2b00      	cmp	r3, #0
 802b58e:	d0c6      	beq.n	802b51e <_vfiprintf_r+0x15a>
 802b590:	9105      	str	r1, [sp, #20]
 802b592:	e7c4      	b.n	802b51e <_vfiprintf_r+0x15a>
 802b594:	fb0c 2101 	mla	r1, ip, r1, r2
 802b598:	4604      	mov	r4, r0
 802b59a:	2301      	movs	r3, #1
 802b59c:	e7f0      	b.n	802b580 <_vfiprintf_r+0x1bc>
 802b59e:	ab03      	add	r3, sp, #12
 802b5a0:	9300      	str	r3, [sp, #0]
 802b5a2:	462a      	mov	r2, r5
 802b5a4:	4b12      	ldr	r3, [pc, #72]	; (802b5f0 <_vfiprintf_r+0x22c>)
 802b5a6:	a904      	add	r1, sp, #16
 802b5a8:	4630      	mov	r0, r6
 802b5aa:	f3af 8000 	nop.w
 802b5ae:	4607      	mov	r7, r0
 802b5b0:	1c78      	adds	r0, r7, #1
 802b5b2:	d1d6      	bne.n	802b562 <_vfiprintf_r+0x19e>
 802b5b4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b5b6:	07d9      	lsls	r1, r3, #31
 802b5b8:	d405      	bmi.n	802b5c6 <_vfiprintf_r+0x202>
 802b5ba:	89ab      	ldrh	r3, [r5, #12]
 802b5bc:	059a      	lsls	r2, r3, #22
 802b5be:	d402      	bmi.n	802b5c6 <_vfiprintf_r+0x202>
 802b5c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b5c2:	f7ff fe1b 	bl	802b1fc <__retarget_lock_release_recursive>
 802b5c6:	89ab      	ldrh	r3, [r5, #12]
 802b5c8:	065b      	lsls	r3, r3, #25
 802b5ca:	f53f af1d 	bmi.w	802b408 <_vfiprintf_r+0x44>
 802b5ce:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b5d0:	e71c      	b.n	802b40c <_vfiprintf_r+0x48>
 802b5d2:	ab03      	add	r3, sp, #12
 802b5d4:	9300      	str	r3, [sp, #0]
 802b5d6:	462a      	mov	r2, r5
 802b5d8:	4b05      	ldr	r3, [pc, #20]	; (802b5f0 <_vfiprintf_r+0x22c>)
 802b5da:	a904      	add	r1, sp, #16
 802b5dc:	4630      	mov	r0, r6
 802b5de:	f000 f879 	bl	802b6d4 <_printf_i>
 802b5e2:	e7e4      	b.n	802b5ae <_vfiprintf_r+0x1ea>
 802b5e4:	080435f4 	.word	0x080435f4
 802b5e8:	080435fe 	.word	0x080435fe
 802b5ec:	00000000 	.word	0x00000000
 802b5f0:	0802b39f 	.word	0x0802b39f
 802b5f4:	080435fa 	.word	0x080435fa

0802b5f8 <_printf_common>:
 802b5f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b5fc:	4616      	mov	r6, r2
 802b5fe:	4699      	mov	r9, r3
 802b600:	688a      	ldr	r2, [r1, #8]
 802b602:	690b      	ldr	r3, [r1, #16]
 802b604:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b608:	4293      	cmp	r3, r2
 802b60a:	bfb8      	it	lt
 802b60c:	4613      	movlt	r3, r2
 802b60e:	6033      	str	r3, [r6, #0]
 802b610:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b614:	4607      	mov	r7, r0
 802b616:	460c      	mov	r4, r1
 802b618:	b10a      	cbz	r2, 802b61e <_printf_common+0x26>
 802b61a:	3301      	adds	r3, #1
 802b61c:	6033      	str	r3, [r6, #0]
 802b61e:	6823      	ldr	r3, [r4, #0]
 802b620:	0699      	lsls	r1, r3, #26
 802b622:	bf42      	ittt	mi
 802b624:	6833      	ldrmi	r3, [r6, #0]
 802b626:	3302      	addmi	r3, #2
 802b628:	6033      	strmi	r3, [r6, #0]
 802b62a:	6825      	ldr	r5, [r4, #0]
 802b62c:	f015 0506 	ands.w	r5, r5, #6
 802b630:	d106      	bne.n	802b640 <_printf_common+0x48>
 802b632:	f104 0a19 	add.w	sl, r4, #25
 802b636:	68e3      	ldr	r3, [r4, #12]
 802b638:	6832      	ldr	r2, [r6, #0]
 802b63a:	1a9b      	subs	r3, r3, r2
 802b63c:	42ab      	cmp	r3, r5
 802b63e:	dc26      	bgt.n	802b68e <_printf_common+0x96>
 802b640:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b644:	1e13      	subs	r3, r2, #0
 802b646:	6822      	ldr	r2, [r4, #0]
 802b648:	bf18      	it	ne
 802b64a:	2301      	movne	r3, #1
 802b64c:	0692      	lsls	r2, r2, #26
 802b64e:	d42b      	bmi.n	802b6a8 <_printf_common+0xb0>
 802b650:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b654:	4649      	mov	r1, r9
 802b656:	4638      	mov	r0, r7
 802b658:	47c0      	blx	r8
 802b65a:	3001      	adds	r0, #1
 802b65c:	d01e      	beq.n	802b69c <_printf_common+0xa4>
 802b65e:	6823      	ldr	r3, [r4, #0]
 802b660:	6922      	ldr	r2, [r4, #16]
 802b662:	f003 0306 	and.w	r3, r3, #6
 802b666:	2b04      	cmp	r3, #4
 802b668:	bf02      	ittt	eq
 802b66a:	68e5      	ldreq	r5, [r4, #12]
 802b66c:	6833      	ldreq	r3, [r6, #0]
 802b66e:	1aed      	subeq	r5, r5, r3
 802b670:	68a3      	ldr	r3, [r4, #8]
 802b672:	bf0c      	ite	eq
 802b674:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b678:	2500      	movne	r5, #0
 802b67a:	4293      	cmp	r3, r2
 802b67c:	bfc4      	itt	gt
 802b67e:	1a9b      	subgt	r3, r3, r2
 802b680:	18ed      	addgt	r5, r5, r3
 802b682:	2600      	movs	r6, #0
 802b684:	341a      	adds	r4, #26
 802b686:	42b5      	cmp	r5, r6
 802b688:	d11a      	bne.n	802b6c0 <_printf_common+0xc8>
 802b68a:	2000      	movs	r0, #0
 802b68c:	e008      	b.n	802b6a0 <_printf_common+0xa8>
 802b68e:	2301      	movs	r3, #1
 802b690:	4652      	mov	r2, sl
 802b692:	4649      	mov	r1, r9
 802b694:	4638      	mov	r0, r7
 802b696:	47c0      	blx	r8
 802b698:	3001      	adds	r0, #1
 802b69a:	d103      	bne.n	802b6a4 <_printf_common+0xac>
 802b69c:	f04f 30ff 	mov.w	r0, #4294967295
 802b6a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b6a4:	3501      	adds	r5, #1
 802b6a6:	e7c6      	b.n	802b636 <_printf_common+0x3e>
 802b6a8:	18e1      	adds	r1, r4, r3
 802b6aa:	1c5a      	adds	r2, r3, #1
 802b6ac:	2030      	movs	r0, #48	; 0x30
 802b6ae:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b6b2:	4422      	add	r2, r4
 802b6b4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b6b8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b6bc:	3302      	adds	r3, #2
 802b6be:	e7c7      	b.n	802b650 <_printf_common+0x58>
 802b6c0:	2301      	movs	r3, #1
 802b6c2:	4622      	mov	r2, r4
 802b6c4:	4649      	mov	r1, r9
 802b6c6:	4638      	mov	r0, r7
 802b6c8:	47c0      	blx	r8
 802b6ca:	3001      	adds	r0, #1
 802b6cc:	d0e6      	beq.n	802b69c <_printf_common+0xa4>
 802b6ce:	3601      	adds	r6, #1
 802b6d0:	e7d9      	b.n	802b686 <_printf_common+0x8e>
	...

0802b6d4 <_printf_i>:
 802b6d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b6d8:	7e0f      	ldrb	r7, [r1, #24]
 802b6da:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b6dc:	2f78      	cmp	r7, #120	; 0x78
 802b6de:	4691      	mov	r9, r2
 802b6e0:	4680      	mov	r8, r0
 802b6e2:	460c      	mov	r4, r1
 802b6e4:	469a      	mov	sl, r3
 802b6e6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b6ea:	d807      	bhi.n	802b6fc <_printf_i+0x28>
 802b6ec:	2f62      	cmp	r7, #98	; 0x62
 802b6ee:	d80a      	bhi.n	802b706 <_printf_i+0x32>
 802b6f0:	2f00      	cmp	r7, #0
 802b6f2:	f000 80d4 	beq.w	802b89e <_printf_i+0x1ca>
 802b6f6:	2f58      	cmp	r7, #88	; 0x58
 802b6f8:	f000 80c0 	beq.w	802b87c <_printf_i+0x1a8>
 802b6fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b700:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b704:	e03a      	b.n	802b77c <_printf_i+0xa8>
 802b706:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b70a:	2b15      	cmp	r3, #21
 802b70c:	d8f6      	bhi.n	802b6fc <_printf_i+0x28>
 802b70e:	a101      	add	r1, pc, #4	; (adr r1, 802b714 <_printf_i+0x40>)
 802b710:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b714:	0802b76d 	.word	0x0802b76d
 802b718:	0802b781 	.word	0x0802b781
 802b71c:	0802b6fd 	.word	0x0802b6fd
 802b720:	0802b6fd 	.word	0x0802b6fd
 802b724:	0802b6fd 	.word	0x0802b6fd
 802b728:	0802b6fd 	.word	0x0802b6fd
 802b72c:	0802b781 	.word	0x0802b781
 802b730:	0802b6fd 	.word	0x0802b6fd
 802b734:	0802b6fd 	.word	0x0802b6fd
 802b738:	0802b6fd 	.word	0x0802b6fd
 802b73c:	0802b6fd 	.word	0x0802b6fd
 802b740:	0802b885 	.word	0x0802b885
 802b744:	0802b7ad 	.word	0x0802b7ad
 802b748:	0802b83f 	.word	0x0802b83f
 802b74c:	0802b6fd 	.word	0x0802b6fd
 802b750:	0802b6fd 	.word	0x0802b6fd
 802b754:	0802b8a7 	.word	0x0802b8a7
 802b758:	0802b6fd 	.word	0x0802b6fd
 802b75c:	0802b7ad 	.word	0x0802b7ad
 802b760:	0802b6fd 	.word	0x0802b6fd
 802b764:	0802b6fd 	.word	0x0802b6fd
 802b768:	0802b847 	.word	0x0802b847
 802b76c:	682b      	ldr	r3, [r5, #0]
 802b76e:	1d1a      	adds	r2, r3, #4
 802b770:	681b      	ldr	r3, [r3, #0]
 802b772:	602a      	str	r2, [r5, #0]
 802b774:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b778:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b77c:	2301      	movs	r3, #1
 802b77e:	e09f      	b.n	802b8c0 <_printf_i+0x1ec>
 802b780:	6820      	ldr	r0, [r4, #0]
 802b782:	682b      	ldr	r3, [r5, #0]
 802b784:	0607      	lsls	r7, r0, #24
 802b786:	f103 0104 	add.w	r1, r3, #4
 802b78a:	6029      	str	r1, [r5, #0]
 802b78c:	d501      	bpl.n	802b792 <_printf_i+0xbe>
 802b78e:	681e      	ldr	r6, [r3, #0]
 802b790:	e003      	b.n	802b79a <_printf_i+0xc6>
 802b792:	0646      	lsls	r6, r0, #25
 802b794:	d5fb      	bpl.n	802b78e <_printf_i+0xba>
 802b796:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b79a:	2e00      	cmp	r6, #0
 802b79c:	da03      	bge.n	802b7a6 <_printf_i+0xd2>
 802b79e:	232d      	movs	r3, #45	; 0x2d
 802b7a0:	4276      	negs	r6, r6
 802b7a2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b7a6:	485a      	ldr	r0, [pc, #360]	; (802b910 <_printf_i+0x23c>)
 802b7a8:	230a      	movs	r3, #10
 802b7aa:	e012      	b.n	802b7d2 <_printf_i+0xfe>
 802b7ac:	682b      	ldr	r3, [r5, #0]
 802b7ae:	6820      	ldr	r0, [r4, #0]
 802b7b0:	1d19      	adds	r1, r3, #4
 802b7b2:	6029      	str	r1, [r5, #0]
 802b7b4:	0605      	lsls	r5, r0, #24
 802b7b6:	d501      	bpl.n	802b7bc <_printf_i+0xe8>
 802b7b8:	681e      	ldr	r6, [r3, #0]
 802b7ba:	e002      	b.n	802b7c2 <_printf_i+0xee>
 802b7bc:	0641      	lsls	r1, r0, #25
 802b7be:	d5fb      	bpl.n	802b7b8 <_printf_i+0xe4>
 802b7c0:	881e      	ldrh	r6, [r3, #0]
 802b7c2:	4853      	ldr	r0, [pc, #332]	; (802b910 <_printf_i+0x23c>)
 802b7c4:	2f6f      	cmp	r7, #111	; 0x6f
 802b7c6:	bf0c      	ite	eq
 802b7c8:	2308      	moveq	r3, #8
 802b7ca:	230a      	movne	r3, #10
 802b7cc:	2100      	movs	r1, #0
 802b7ce:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b7d2:	6865      	ldr	r5, [r4, #4]
 802b7d4:	60a5      	str	r5, [r4, #8]
 802b7d6:	2d00      	cmp	r5, #0
 802b7d8:	bfa2      	ittt	ge
 802b7da:	6821      	ldrge	r1, [r4, #0]
 802b7dc:	f021 0104 	bicge.w	r1, r1, #4
 802b7e0:	6021      	strge	r1, [r4, #0]
 802b7e2:	b90e      	cbnz	r6, 802b7e8 <_printf_i+0x114>
 802b7e4:	2d00      	cmp	r5, #0
 802b7e6:	d04b      	beq.n	802b880 <_printf_i+0x1ac>
 802b7e8:	4615      	mov	r5, r2
 802b7ea:	fbb6 f1f3 	udiv	r1, r6, r3
 802b7ee:	fb03 6711 	mls	r7, r3, r1, r6
 802b7f2:	5dc7      	ldrb	r7, [r0, r7]
 802b7f4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b7f8:	4637      	mov	r7, r6
 802b7fa:	42bb      	cmp	r3, r7
 802b7fc:	460e      	mov	r6, r1
 802b7fe:	d9f4      	bls.n	802b7ea <_printf_i+0x116>
 802b800:	2b08      	cmp	r3, #8
 802b802:	d10b      	bne.n	802b81c <_printf_i+0x148>
 802b804:	6823      	ldr	r3, [r4, #0]
 802b806:	07de      	lsls	r6, r3, #31
 802b808:	d508      	bpl.n	802b81c <_printf_i+0x148>
 802b80a:	6923      	ldr	r3, [r4, #16]
 802b80c:	6861      	ldr	r1, [r4, #4]
 802b80e:	4299      	cmp	r1, r3
 802b810:	bfde      	ittt	le
 802b812:	2330      	movle	r3, #48	; 0x30
 802b814:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b818:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b81c:	1b52      	subs	r2, r2, r5
 802b81e:	6122      	str	r2, [r4, #16]
 802b820:	f8cd a000 	str.w	sl, [sp]
 802b824:	464b      	mov	r3, r9
 802b826:	aa03      	add	r2, sp, #12
 802b828:	4621      	mov	r1, r4
 802b82a:	4640      	mov	r0, r8
 802b82c:	f7ff fee4 	bl	802b5f8 <_printf_common>
 802b830:	3001      	adds	r0, #1
 802b832:	d14a      	bne.n	802b8ca <_printf_i+0x1f6>
 802b834:	f04f 30ff 	mov.w	r0, #4294967295
 802b838:	b004      	add	sp, #16
 802b83a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b83e:	6823      	ldr	r3, [r4, #0]
 802b840:	f043 0320 	orr.w	r3, r3, #32
 802b844:	6023      	str	r3, [r4, #0]
 802b846:	4833      	ldr	r0, [pc, #204]	; (802b914 <_printf_i+0x240>)
 802b848:	2778      	movs	r7, #120	; 0x78
 802b84a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b84e:	6823      	ldr	r3, [r4, #0]
 802b850:	6829      	ldr	r1, [r5, #0]
 802b852:	061f      	lsls	r7, r3, #24
 802b854:	f851 6b04 	ldr.w	r6, [r1], #4
 802b858:	d402      	bmi.n	802b860 <_printf_i+0x18c>
 802b85a:	065f      	lsls	r7, r3, #25
 802b85c:	bf48      	it	mi
 802b85e:	b2b6      	uxthmi	r6, r6
 802b860:	07df      	lsls	r7, r3, #31
 802b862:	bf48      	it	mi
 802b864:	f043 0320 	orrmi.w	r3, r3, #32
 802b868:	6029      	str	r1, [r5, #0]
 802b86a:	bf48      	it	mi
 802b86c:	6023      	strmi	r3, [r4, #0]
 802b86e:	b91e      	cbnz	r6, 802b878 <_printf_i+0x1a4>
 802b870:	6823      	ldr	r3, [r4, #0]
 802b872:	f023 0320 	bic.w	r3, r3, #32
 802b876:	6023      	str	r3, [r4, #0]
 802b878:	2310      	movs	r3, #16
 802b87a:	e7a7      	b.n	802b7cc <_printf_i+0xf8>
 802b87c:	4824      	ldr	r0, [pc, #144]	; (802b910 <_printf_i+0x23c>)
 802b87e:	e7e4      	b.n	802b84a <_printf_i+0x176>
 802b880:	4615      	mov	r5, r2
 802b882:	e7bd      	b.n	802b800 <_printf_i+0x12c>
 802b884:	682b      	ldr	r3, [r5, #0]
 802b886:	6826      	ldr	r6, [r4, #0]
 802b888:	6961      	ldr	r1, [r4, #20]
 802b88a:	1d18      	adds	r0, r3, #4
 802b88c:	6028      	str	r0, [r5, #0]
 802b88e:	0635      	lsls	r5, r6, #24
 802b890:	681b      	ldr	r3, [r3, #0]
 802b892:	d501      	bpl.n	802b898 <_printf_i+0x1c4>
 802b894:	6019      	str	r1, [r3, #0]
 802b896:	e002      	b.n	802b89e <_printf_i+0x1ca>
 802b898:	0670      	lsls	r0, r6, #25
 802b89a:	d5fb      	bpl.n	802b894 <_printf_i+0x1c0>
 802b89c:	8019      	strh	r1, [r3, #0]
 802b89e:	2300      	movs	r3, #0
 802b8a0:	6123      	str	r3, [r4, #16]
 802b8a2:	4615      	mov	r5, r2
 802b8a4:	e7bc      	b.n	802b820 <_printf_i+0x14c>
 802b8a6:	682b      	ldr	r3, [r5, #0]
 802b8a8:	1d1a      	adds	r2, r3, #4
 802b8aa:	602a      	str	r2, [r5, #0]
 802b8ac:	681d      	ldr	r5, [r3, #0]
 802b8ae:	6862      	ldr	r2, [r4, #4]
 802b8b0:	2100      	movs	r1, #0
 802b8b2:	4628      	mov	r0, r5
 802b8b4:	f7d4 fcfc 	bl	80002b0 <memchr>
 802b8b8:	b108      	cbz	r0, 802b8be <_printf_i+0x1ea>
 802b8ba:	1b40      	subs	r0, r0, r5
 802b8bc:	6060      	str	r0, [r4, #4]
 802b8be:	6863      	ldr	r3, [r4, #4]
 802b8c0:	6123      	str	r3, [r4, #16]
 802b8c2:	2300      	movs	r3, #0
 802b8c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b8c8:	e7aa      	b.n	802b820 <_printf_i+0x14c>
 802b8ca:	6923      	ldr	r3, [r4, #16]
 802b8cc:	462a      	mov	r2, r5
 802b8ce:	4649      	mov	r1, r9
 802b8d0:	4640      	mov	r0, r8
 802b8d2:	47d0      	blx	sl
 802b8d4:	3001      	adds	r0, #1
 802b8d6:	d0ad      	beq.n	802b834 <_printf_i+0x160>
 802b8d8:	6823      	ldr	r3, [r4, #0]
 802b8da:	079b      	lsls	r3, r3, #30
 802b8dc:	d413      	bmi.n	802b906 <_printf_i+0x232>
 802b8de:	68e0      	ldr	r0, [r4, #12]
 802b8e0:	9b03      	ldr	r3, [sp, #12]
 802b8e2:	4298      	cmp	r0, r3
 802b8e4:	bfb8      	it	lt
 802b8e6:	4618      	movlt	r0, r3
 802b8e8:	e7a6      	b.n	802b838 <_printf_i+0x164>
 802b8ea:	2301      	movs	r3, #1
 802b8ec:	4632      	mov	r2, r6
 802b8ee:	4649      	mov	r1, r9
 802b8f0:	4640      	mov	r0, r8
 802b8f2:	47d0      	blx	sl
 802b8f4:	3001      	adds	r0, #1
 802b8f6:	d09d      	beq.n	802b834 <_printf_i+0x160>
 802b8f8:	3501      	adds	r5, #1
 802b8fa:	68e3      	ldr	r3, [r4, #12]
 802b8fc:	9903      	ldr	r1, [sp, #12]
 802b8fe:	1a5b      	subs	r3, r3, r1
 802b900:	42ab      	cmp	r3, r5
 802b902:	dcf2      	bgt.n	802b8ea <_printf_i+0x216>
 802b904:	e7eb      	b.n	802b8de <_printf_i+0x20a>
 802b906:	2500      	movs	r5, #0
 802b908:	f104 0619 	add.w	r6, r4, #25
 802b90c:	e7f5      	b.n	802b8fa <_printf_i+0x226>
 802b90e:	bf00      	nop
 802b910:	08043605 	.word	0x08043605
 802b914:	08043616 	.word	0x08043616

0802b918 <__sflush_r>:
 802b918:	898a      	ldrh	r2, [r1, #12]
 802b91a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b91e:	4605      	mov	r5, r0
 802b920:	0710      	lsls	r0, r2, #28
 802b922:	460c      	mov	r4, r1
 802b924:	d458      	bmi.n	802b9d8 <__sflush_r+0xc0>
 802b926:	684b      	ldr	r3, [r1, #4]
 802b928:	2b00      	cmp	r3, #0
 802b92a:	dc05      	bgt.n	802b938 <__sflush_r+0x20>
 802b92c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b92e:	2b00      	cmp	r3, #0
 802b930:	dc02      	bgt.n	802b938 <__sflush_r+0x20>
 802b932:	2000      	movs	r0, #0
 802b934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b938:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b93a:	2e00      	cmp	r6, #0
 802b93c:	d0f9      	beq.n	802b932 <__sflush_r+0x1a>
 802b93e:	2300      	movs	r3, #0
 802b940:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b944:	682f      	ldr	r7, [r5, #0]
 802b946:	6a21      	ldr	r1, [r4, #32]
 802b948:	602b      	str	r3, [r5, #0]
 802b94a:	d032      	beq.n	802b9b2 <__sflush_r+0x9a>
 802b94c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b94e:	89a3      	ldrh	r3, [r4, #12]
 802b950:	075a      	lsls	r2, r3, #29
 802b952:	d505      	bpl.n	802b960 <__sflush_r+0x48>
 802b954:	6863      	ldr	r3, [r4, #4]
 802b956:	1ac0      	subs	r0, r0, r3
 802b958:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b95a:	b10b      	cbz	r3, 802b960 <__sflush_r+0x48>
 802b95c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b95e:	1ac0      	subs	r0, r0, r3
 802b960:	2300      	movs	r3, #0
 802b962:	4602      	mov	r2, r0
 802b964:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b966:	6a21      	ldr	r1, [r4, #32]
 802b968:	4628      	mov	r0, r5
 802b96a:	47b0      	blx	r6
 802b96c:	1c43      	adds	r3, r0, #1
 802b96e:	89a3      	ldrh	r3, [r4, #12]
 802b970:	d106      	bne.n	802b980 <__sflush_r+0x68>
 802b972:	6829      	ldr	r1, [r5, #0]
 802b974:	291d      	cmp	r1, #29
 802b976:	d82b      	bhi.n	802b9d0 <__sflush_r+0xb8>
 802b978:	4a29      	ldr	r2, [pc, #164]	; (802ba20 <__sflush_r+0x108>)
 802b97a:	410a      	asrs	r2, r1
 802b97c:	07d6      	lsls	r6, r2, #31
 802b97e:	d427      	bmi.n	802b9d0 <__sflush_r+0xb8>
 802b980:	2200      	movs	r2, #0
 802b982:	6062      	str	r2, [r4, #4]
 802b984:	04d9      	lsls	r1, r3, #19
 802b986:	6922      	ldr	r2, [r4, #16]
 802b988:	6022      	str	r2, [r4, #0]
 802b98a:	d504      	bpl.n	802b996 <__sflush_r+0x7e>
 802b98c:	1c42      	adds	r2, r0, #1
 802b98e:	d101      	bne.n	802b994 <__sflush_r+0x7c>
 802b990:	682b      	ldr	r3, [r5, #0]
 802b992:	b903      	cbnz	r3, 802b996 <__sflush_r+0x7e>
 802b994:	6560      	str	r0, [r4, #84]	; 0x54
 802b996:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b998:	602f      	str	r7, [r5, #0]
 802b99a:	2900      	cmp	r1, #0
 802b99c:	d0c9      	beq.n	802b932 <__sflush_r+0x1a>
 802b99e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b9a2:	4299      	cmp	r1, r3
 802b9a4:	d002      	beq.n	802b9ac <__sflush_r+0x94>
 802b9a6:	4628      	mov	r0, r5
 802b9a8:	f7ff fc96 	bl	802b2d8 <_free_r>
 802b9ac:	2000      	movs	r0, #0
 802b9ae:	6360      	str	r0, [r4, #52]	; 0x34
 802b9b0:	e7c0      	b.n	802b934 <__sflush_r+0x1c>
 802b9b2:	2301      	movs	r3, #1
 802b9b4:	4628      	mov	r0, r5
 802b9b6:	47b0      	blx	r6
 802b9b8:	1c41      	adds	r1, r0, #1
 802b9ba:	d1c8      	bne.n	802b94e <__sflush_r+0x36>
 802b9bc:	682b      	ldr	r3, [r5, #0]
 802b9be:	2b00      	cmp	r3, #0
 802b9c0:	d0c5      	beq.n	802b94e <__sflush_r+0x36>
 802b9c2:	2b1d      	cmp	r3, #29
 802b9c4:	d001      	beq.n	802b9ca <__sflush_r+0xb2>
 802b9c6:	2b16      	cmp	r3, #22
 802b9c8:	d101      	bne.n	802b9ce <__sflush_r+0xb6>
 802b9ca:	602f      	str	r7, [r5, #0]
 802b9cc:	e7b1      	b.n	802b932 <__sflush_r+0x1a>
 802b9ce:	89a3      	ldrh	r3, [r4, #12]
 802b9d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b9d4:	81a3      	strh	r3, [r4, #12]
 802b9d6:	e7ad      	b.n	802b934 <__sflush_r+0x1c>
 802b9d8:	690f      	ldr	r7, [r1, #16]
 802b9da:	2f00      	cmp	r7, #0
 802b9dc:	d0a9      	beq.n	802b932 <__sflush_r+0x1a>
 802b9de:	0793      	lsls	r3, r2, #30
 802b9e0:	680e      	ldr	r6, [r1, #0]
 802b9e2:	bf08      	it	eq
 802b9e4:	694b      	ldreq	r3, [r1, #20]
 802b9e6:	600f      	str	r7, [r1, #0]
 802b9e8:	bf18      	it	ne
 802b9ea:	2300      	movne	r3, #0
 802b9ec:	eba6 0807 	sub.w	r8, r6, r7
 802b9f0:	608b      	str	r3, [r1, #8]
 802b9f2:	f1b8 0f00 	cmp.w	r8, #0
 802b9f6:	dd9c      	ble.n	802b932 <__sflush_r+0x1a>
 802b9f8:	6a21      	ldr	r1, [r4, #32]
 802b9fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b9fc:	4643      	mov	r3, r8
 802b9fe:	463a      	mov	r2, r7
 802ba00:	4628      	mov	r0, r5
 802ba02:	47b0      	blx	r6
 802ba04:	2800      	cmp	r0, #0
 802ba06:	dc06      	bgt.n	802ba16 <__sflush_r+0xfe>
 802ba08:	89a3      	ldrh	r3, [r4, #12]
 802ba0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ba0e:	81a3      	strh	r3, [r4, #12]
 802ba10:	f04f 30ff 	mov.w	r0, #4294967295
 802ba14:	e78e      	b.n	802b934 <__sflush_r+0x1c>
 802ba16:	4407      	add	r7, r0
 802ba18:	eba8 0800 	sub.w	r8, r8, r0
 802ba1c:	e7e9      	b.n	802b9f2 <__sflush_r+0xda>
 802ba1e:	bf00      	nop
 802ba20:	dfbffffe 	.word	0xdfbffffe

0802ba24 <_fflush_r>:
 802ba24:	b538      	push	{r3, r4, r5, lr}
 802ba26:	690b      	ldr	r3, [r1, #16]
 802ba28:	4605      	mov	r5, r0
 802ba2a:	460c      	mov	r4, r1
 802ba2c:	b913      	cbnz	r3, 802ba34 <_fflush_r+0x10>
 802ba2e:	2500      	movs	r5, #0
 802ba30:	4628      	mov	r0, r5
 802ba32:	bd38      	pop	{r3, r4, r5, pc}
 802ba34:	b118      	cbz	r0, 802ba3e <_fflush_r+0x1a>
 802ba36:	6a03      	ldr	r3, [r0, #32]
 802ba38:	b90b      	cbnz	r3, 802ba3e <_fflush_r+0x1a>
 802ba3a:	f7ff fa2f 	bl	802ae9c <__sinit>
 802ba3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ba42:	2b00      	cmp	r3, #0
 802ba44:	d0f3      	beq.n	802ba2e <_fflush_r+0xa>
 802ba46:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ba48:	07d0      	lsls	r0, r2, #31
 802ba4a:	d404      	bmi.n	802ba56 <_fflush_r+0x32>
 802ba4c:	0599      	lsls	r1, r3, #22
 802ba4e:	d402      	bmi.n	802ba56 <_fflush_r+0x32>
 802ba50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ba52:	f7ff fbd2 	bl	802b1fa <__retarget_lock_acquire_recursive>
 802ba56:	4628      	mov	r0, r5
 802ba58:	4621      	mov	r1, r4
 802ba5a:	f7ff ff5d 	bl	802b918 <__sflush_r>
 802ba5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ba60:	07da      	lsls	r2, r3, #31
 802ba62:	4605      	mov	r5, r0
 802ba64:	d4e4      	bmi.n	802ba30 <_fflush_r+0xc>
 802ba66:	89a3      	ldrh	r3, [r4, #12]
 802ba68:	059b      	lsls	r3, r3, #22
 802ba6a:	d4e1      	bmi.n	802ba30 <_fflush_r+0xc>
 802ba6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ba6e:	f7ff fbc5 	bl	802b1fc <__retarget_lock_release_recursive>
 802ba72:	e7dd      	b.n	802ba30 <_fflush_r+0xc>

0802ba74 <__swbuf_r>:
 802ba74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ba76:	460e      	mov	r6, r1
 802ba78:	4614      	mov	r4, r2
 802ba7a:	4605      	mov	r5, r0
 802ba7c:	b118      	cbz	r0, 802ba86 <__swbuf_r+0x12>
 802ba7e:	6a03      	ldr	r3, [r0, #32]
 802ba80:	b90b      	cbnz	r3, 802ba86 <__swbuf_r+0x12>
 802ba82:	f7ff fa0b 	bl	802ae9c <__sinit>
 802ba86:	69a3      	ldr	r3, [r4, #24]
 802ba88:	60a3      	str	r3, [r4, #8]
 802ba8a:	89a3      	ldrh	r3, [r4, #12]
 802ba8c:	071a      	lsls	r2, r3, #28
 802ba8e:	d525      	bpl.n	802badc <__swbuf_r+0x68>
 802ba90:	6923      	ldr	r3, [r4, #16]
 802ba92:	b31b      	cbz	r3, 802badc <__swbuf_r+0x68>
 802ba94:	6823      	ldr	r3, [r4, #0]
 802ba96:	6922      	ldr	r2, [r4, #16]
 802ba98:	1a98      	subs	r0, r3, r2
 802ba9a:	6963      	ldr	r3, [r4, #20]
 802ba9c:	b2f6      	uxtb	r6, r6
 802ba9e:	4283      	cmp	r3, r0
 802baa0:	4637      	mov	r7, r6
 802baa2:	dc04      	bgt.n	802baae <__swbuf_r+0x3a>
 802baa4:	4621      	mov	r1, r4
 802baa6:	4628      	mov	r0, r5
 802baa8:	f7ff ffbc 	bl	802ba24 <_fflush_r>
 802baac:	b9e0      	cbnz	r0, 802bae8 <__swbuf_r+0x74>
 802baae:	68a3      	ldr	r3, [r4, #8]
 802bab0:	3b01      	subs	r3, #1
 802bab2:	60a3      	str	r3, [r4, #8]
 802bab4:	6823      	ldr	r3, [r4, #0]
 802bab6:	1c5a      	adds	r2, r3, #1
 802bab8:	6022      	str	r2, [r4, #0]
 802baba:	701e      	strb	r6, [r3, #0]
 802babc:	6962      	ldr	r2, [r4, #20]
 802babe:	1c43      	adds	r3, r0, #1
 802bac0:	429a      	cmp	r2, r3
 802bac2:	d004      	beq.n	802bace <__swbuf_r+0x5a>
 802bac4:	89a3      	ldrh	r3, [r4, #12]
 802bac6:	07db      	lsls	r3, r3, #31
 802bac8:	d506      	bpl.n	802bad8 <__swbuf_r+0x64>
 802baca:	2e0a      	cmp	r6, #10
 802bacc:	d104      	bne.n	802bad8 <__swbuf_r+0x64>
 802bace:	4621      	mov	r1, r4
 802bad0:	4628      	mov	r0, r5
 802bad2:	f7ff ffa7 	bl	802ba24 <_fflush_r>
 802bad6:	b938      	cbnz	r0, 802bae8 <__swbuf_r+0x74>
 802bad8:	4638      	mov	r0, r7
 802bada:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802badc:	4621      	mov	r1, r4
 802bade:	4628      	mov	r0, r5
 802bae0:	f000 f806 	bl	802baf0 <__swsetup_r>
 802bae4:	2800      	cmp	r0, #0
 802bae6:	d0d5      	beq.n	802ba94 <__swbuf_r+0x20>
 802bae8:	f04f 37ff 	mov.w	r7, #4294967295
 802baec:	e7f4      	b.n	802bad8 <__swbuf_r+0x64>
	...

0802baf0 <__swsetup_r>:
 802baf0:	b538      	push	{r3, r4, r5, lr}
 802baf2:	4b2a      	ldr	r3, [pc, #168]	; (802bb9c <__swsetup_r+0xac>)
 802baf4:	4605      	mov	r5, r0
 802baf6:	6818      	ldr	r0, [r3, #0]
 802baf8:	460c      	mov	r4, r1
 802bafa:	b118      	cbz	r0, 802bb04 <__swsetup_r+0x14>
 802bafc:	6a03      	ldr	r3, [r0, #32]
 802bafe:	b90b      	cbnz	r3, 802bb04 <__swsetup_r+0x14>
 802bb00:	f7ff f9cc 	bl	802ae9c <__sinit>
 802bb04:	89a3      	ldrh	r3, [r4, #12]
 802bb06:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bb0a:	0718      	lsls	r0, r3, #28
 802bb0c:	d422      	bmi.n	802bb54 <__swsetup_r+0x64>
 802bb0e:	06d9      	lsls	r1, r3, #27
 802bb10:	d407      	bmi.n	802bb22 <__swsetup_r+0x32>
 802bb12:	2309      	movs	r3, #9
 802bb14:	602b      	str	r3, [r5, #0]
 802bb16:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802bb1a:	81a3      	strh	r3, [r4, #12]
 802bb1c:	f04f 30ff 	mov.w	r0, #4294967295
 802bb20:	e034      	b.n	802bb8c <__swsetup_r+0x9c>
 802bb22:	0758      	lsls	r0, r3, #29
 802bb24:	d512      	bpl.n	802bb4c <__swsetup_r+0x5c>
 802bb26:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bb28:	b141      	cbz	r1, 802bb3c <__swsetup_r+0x4c>
 802bb2a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bb2e:	4299      	cmp	r1, r3
 802bb30:	d002      	beq.n	802bb38 <__swsetup_r+0x48>
 802bb32:	4628      	mov	r0, r5
 802bb34:	f7ff fbd0 	bl	802b2d8 <_free_r>
 802bb38:	2300      	movs	r3, #0
 802bb3a:	6363      	str	r3, [r4, #52]	; 0x34
 802bb3c:	89a3      	ldrh	r3, [r4, #12]
 802bb3e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802bb42:	81a3      	strh	r3, [r4, #12]
 802bb44:	2300      	movs	r3, #0
 802bb46:	6063      	str	r3, [r4, #4]
 802bb48:	6923      	ldr	r3, [r4, #16]
 802bb4a:	6023      	str	r3, [r4, #0]
 802bb4c:	89a3      	ldrh	r3, [r4, #12]
 802bb4e:	f043 0308 	orr.w	r3, r3, #8
 802bb52:	81a3      	strh	r3, [r4, #12]
 802bb54:	6923      	ldr	r3, [r4, #16]
 802bb56:	b94b      	cbnz	r3, 802bb6c <__swsetup_r+0x7c>
 802bb58:	89a3      	ldrh	r3, [r4, #12]
 802bb5a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802bb5e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bb62:	d003      	beq.n	802bb6c <__swsetup_r+0x7c>
 802bb64:	4621      	mov	r1, r4
 802bb66:	4628      	mov	r0, r5
 802bb68:	f000 f840 	bl	802bbec <__smakebuf_r>
 802bb6c:	89a0      	ldrh	r0, [r4, #12]
 802bb6e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802bb72:	f010 0301 	ands.w	r3, r0, #1
 802bb76:	d00a      	beq.n	802bb8e <__swsetup_r+0x9e>
 802bb78:	2300      	movs	r3, #0
 802bb7a:	60a3      	str	r3, [r4, #8]
 802bb7c:	6963      	ldr	r3, [r4, #20]
 802bb7e:	425b      	negs	r3, r3
 802bb80:	61a3      	str	r3, [r4, #24]
 802bb82:	6923      	ldr	r3, [r4, #16]
 802bb84:	b943      	cbnz	r3, 802bb98 <__swsetup_r+0xa8>
 802bb86:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802bb8a:	d1c4      	bne.n	802bb16 <__swsetup_r+0x26>
 802bb8c:	bd38      	pop	{r3, r4, r5, pc}
 802bb8e:	0781      	lsls	r1, r0, #30
 802bb90:	bf58      	it	pl
 802bb92:	6963      	ldrpl	r3, [r4, #20]
 802bb94:	60a3      	str	r3, [r4, #8]
 802bb96:	e7f4      	b.n	802bb82 <__swsetup_r+0x92>
 802bb98:	2000      	movs	r0, #0
 802bb9a:	e7f7      	b.n	802bb8c <__swsetup_r+0x9c>
 802bb9c:	20000160 	.word	0x20000160

0802bba0 <__swhatbuf_r>:
 802bba0:	b570      	push	{r4, r5, r6, lr}
 802bba2:	460c      	mov	r4, r1
 802bba4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bba8:	2900      	cmp	r1, #0
 802bbaa:	b096      	sub	sp, #88	; 0x58
 802bbac:	4615      	mov	r5, r2
 802bbae:	461e      	mov	r6, r3
 802bbb0:	da0d      	bge.n	802bbce <__swhatbuf_r+0x2e>
 802bbb2:	89a3      	ldrh	r3, [r4, #12]
 802bbb4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bbb8:	f04f 0100 	mov.w	r1, #0
 802bbbc:	bf0c      	ite	eq
 802bbbe:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bbc2:	2340      	movne	r3, #64	; 0x40
 802bbc4:	2000      	movs	r0, #0
 802bbc6:	6031      	str	r1, [r6, #0]
 802bbc8:	602b      	str	r3, [r5, #0]
 802bbca:	b016      	add	sp, #88	; 0x58
 802bbcc:	bd70      	pop	{r4, r5, r6, pc}
 802bbce:	466a      	mov	r2, sp
 802bbd0:	f000 f848 	bl	802bc64 <_fstat_r>
 802bbd4:	2800      	cmp	r0, #0
 802bbd6:	dbec      	blt.n	802bbb2 <__swhatbuf_r+0x12>
 802bbd8:	9901      	ldr	r1, [sp, #4]
 802bbda:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bbde:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bbe2:	4259      	negs	r1, r3
 802bbe4:	4159      	adcs	r1, r3
 802bbe6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bbea:	e7eb      	b.n	802bbc4 <__swhatbuf_r+0x24>

0802bbec <__smakebuf_r>:
 802bbec:	898b      	ldrh	r3, [r1, #12]
 802bbee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bbf0:	079d      	lsls	r5, r3, #30
 802bbf2:	4606      	mov	r6, r0
 802bbf4:	460c      	mov	r4, r1
 802bbf6:	d507      	bpl.n	802bc08 <__smakebuf_r+0x1c>
 802bbf8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bbfc:	6023      	str	r3, [r4, #0]
 802bbfe:	6123      	str	r3, [r4, #16]
 802bc00:	2301      	movs	r3, #1
 802bc02:	6163      	str	r3, [r4, #20]
 802bc04:	b002      	add	sp, #8
 802bc06:	bd70      	pop	{r4, r5, r6, pc}
 802bc08:	ab01      	add	r3, sp, #4
 802bc0a:	466a      	mov	r2, sp
 802bc0c:	f7ff ffc8 	bl	802bba0 <__swhatbuf_r>
 802bc10:	9900      	ldr	r1, [sp, #0]
 802bc12:	4605      	mov	r5, r0
 802bc14:	4630      	mov	r0, r6
 802bc16:	f7ff f81b 	bl	802ac50 <_malloc_r>
 802bc1a:	b948      	cbnz	r0, 802bc30 <__smakebuf_r+0x44>
 802bc1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bc20:	059a      	lsls	r2, r3, #22
 802bc22:	d4ef      	bmi.n	802bc04 <__smakebuf_r+0x18>
 802bc24:	f023 0303 	bic.w	r3, r3, #3
 802bc28:	f043 0302 	orr.w	r3, r3, #2
 802bc2c:	81a3      	strh	r3, [r4, #12]
 802bc2e:	e7e3      	b.n	802bbf8 <__smakebuf_r+0xc>
 802bc30:	89a3      	ldrh	r3, [r4, #12]
 802bc32:	6020      	str	r0, [r4, #0]
 802bc34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bc38:	81a3      	strh	r3, [r4, #12]
 802bc3a:	9b00      	ldr	r3, [sp, #0]
 802bc3c:	6163      	str	r3, [r4, #20]
 802bc3e:	9b01      	ldr	r3, [sp, #4]
 802bc40:	6120      	str	r0, [r4, #16]
 802bc42:	b15b      	cbz	r3, 802bc5c <__smakebuf_r+0x70>
 802bc44:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bc48:	4630      	mov	r0, r6
 802bc4a:	f000 f81d 	bl	802bc88 <_isatty_r>
 802bc4e:	b128      	cbz	r0, 802bc5c <__smakebuf_r+0x70>
 802bc50:	89a3      	ldrh	r3, [r4, #12]
 802bc52:	f023 0303 	bic.w	r3, r3, #3
 802bc56:	f043 0301 	orr.w	r3, r3, #1
 802bc5a:	81a3      	strh	r3, [r4, #12]
 802bc5c:	89a3      	ldrh	r3, [r4, #12]
 802bc5e:	431d      	orrs	r5, r3
 802bc60:	81a5      	strh	r5, [r4, #12]
 802bc62:	e7cf      	b.n	802bc04 <__smakebuf_r+0x18>

0802bc64 <_fstat_r>:
 802bc64:	b538      	push	{r3, r4, r5, lr}
 802bc66:	4d07      	ldr	r5, [pc, #28]	; (802bc84 <_fstat_r+0x20>)
 802bc68:	2300      	movs	r3, #0
 802bc6a:	4604      	mov	r4, r0
 802bc6c:	4608      	mov	r0, r1
 802bc6e:	4611      	mov	r1, r2
 802bc70:	602b      	str	r3, [r5, #0]
 802bc72:	f7d6 fc13 	bl	800249c <_fstat>
 802bc76:	1c43      	adds	r3, r0, #1
 802bc78:	d102      	bne.n	802bc80 <_fstat_r+0x1c>
 802bc7a:	682b      	ldr	r3, [r5, #0]
 802bc7c:	b103      	cbz	r3, 802bc80 <_fstat_r+0x1c>
 802bc7e:	6023      	str	r3, [r4, #0]
 802bc80:	bd38      	pop	{r3, r4, r5, pc}
 802bc82:	bf00      	nop
 802bc84:	20013a5c 	.word	0x20013a5c

0802bc88 <_isatty_r>:
 802bc88:	b538      	push	{r3, r4, r5, lr}
 802bc8a:	4d06      	ldr	r5, [pc, #24]	; (802bca4 <_isatty_r+0x1c>)
 802bc8c:	2300      	movs	r3, #0
 802bc8e:	4604      	mov	r4, r0
 802bc90:	4608      	mov	r0, r1
 802bc92:	602b      	str	r3, [r5, #0]
 802bc94:	f7d6 fc08 	bl	80024a8 <_isatty>
 802bc98:	1c43      	adds	r3, r0, #1
 802bc9a:	d102      	bne.n	802bca2 <_isatty_r+0x1a>
 802bc9c:	682b      	ldr	r3, [r5, #0]
 802bc9e:	b103      	cbz	r3, 802bca2 <_isatty_r+0x1a>
 802bca0:	6023      	str	r3, [r4, #0]
 802bca2:	bd38      	pop	{r3, r4, r5, pc}
 802bca4:	20013a5c 	.word	0x20013a5c

0802bca8 <_init>:
 802bca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bcaa:	bf00      	nop
 802bcac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bcae:	bc08      	pop	{r3}
 802bcb0:	469e      	mov	lr, r3
 802bcb2:	4770      	bx	lr

0802bcb4 <_fini>:
 802bcb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bcb6:	bf00      	nop
 802bcb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bcba:	bc08      	pop	{r3}
 802bcbc:	469e      	mov	lr, r3
 802bcbe:	4770      	bx	lr


STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00029498  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004138  08029648  08029648  00039648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  0802d780  0802d780  0003d780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  080304c0  080304c0  000404c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000668  08030630  08030630  00040630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08030c98  08030c98  00040c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08149cc8  08149cc8  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08149cc8  08149cc8  00159cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08149cd0  08149cd0  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08149cd0  08149cd0  00159cd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08149ce4  08149ce4  00159ce4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08149cec  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001429c  20000168  08149e54  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014404  08149e54  00164404  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00098ccb  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001f8f25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0029575f  00000000  00000000  001f8fb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0003231b  00000000  00000000  0048e717  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004690  00000000  00000000  004c0a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011faf1  00000000  00000000  004c50c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007e30  00000000  00000000  005e4bb9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003226c  00000000  00000000  005ec9e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b03c  00000000  00000000  0061ec55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000cf88  00000000  00000000  00659c94  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08029630 	.word	0x08029630

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08029630 	.word	0x08029630

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f008 fbbd 	bl	8008d34 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f028 fabd 	bl	8028b38 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff65 	bl	800148c <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08149cec 	.word	0x08149cec
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	20014404 	.word	0x20014404

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f027 f9a5 	bl	802794e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f008 be0b 	b.w	800939c <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f008 bdf3 	b.w	800939c <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f008 bde4 	b.w	80093a4 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f008 fdc9 	bl	8009390 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137cb 	.word	0x200137cb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8eb 	bl	8001a90 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f010 f872 	bl	80109b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00f bac7 	b.w	800fe8c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f027 f823 	bl	802794e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137c4 	.word	0x200137c4
 8000960:	200137c0 	.word	0x200137c0
 8000964:	200137c2 	.word	0x200137c2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f027 fdd9 	bl	8028530 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	080296a0 	.word	0x080296a0
 800099c:	080296d8 	.word	0x080296d8
 80009a0:	08029726 	.word	0x08029726
 80009a4:	200137ca 	.word	0x200137ca

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f027 fdb5 	bl	8028530 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137c0 	.word	0x200137c0
 80009d4:	200137c2 	.word	0x200137c2
 80009d8:	0802976b 	.word	0x0802976b
 80009dc:	080297ce 	.word	0x080297ce
 80009e0:	08029726 	.word	0x08029726
 80009e4:	200137c6 	.word	0x200137c6
 80009e8:	200137c8 	.word	0x200137c8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00c f856 	bl	800caa4 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f027 fd93 	bl	8028530 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00c f8fc 	bl	800cc0c <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	080298ec 	.word	0x080298ec
 8000a2c:	08029935 	.word	0x08029935
 8000a30:	08029964 	.word	0x08029964
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	080299de 	.word	0x080299de

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00c b882 	b.w	800cb4c <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00c b8b0 	b.w	800cbb4 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00c b875 	b.w	800cb4c <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00c b903 	b.w	800cc80 <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00c f92c 	bl	800ccec <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00c f925 	bl	800ccec <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002644 	.word	0x20002644
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	08029ba8 	.word	0x08029ba8
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f026 ff06 	bl	802794e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137cc 	.word	0x200137cc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f010 f877 	bl	8010c64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	08029ba8 	.word	0x08029ba8

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f027 fcbd 	bl	8028530 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08029a20 	.word	0x08029a20
 8000bc4:	08029a3b 	.word	0x08029a3b
 8000bc8:	08029a85 	.word	0x08029a85

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f027 fc9f 	bl	8028530 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08029a20 	.word	0x08029a20
 8000c00:	08029afd 	.word	0x08029afd
 8000c04:	08029a85 	.word	0x08029a85

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f027 fc2b 	bl	8028530 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08029b48 	.word	0x08029b48
 8000d58:	08029b62 	.word	0x08029b62
 8000d5c:	08029a85 	.word	0x08029a85
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 bc00 	b.w	800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00e fb7b 	bl	800f59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08029c60 	.word	0x08029c60

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f026 fd47 	bl	802794e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00e fb67 	bl	800f59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	08029c2c 	.word	0x08029c2c

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31fc 	movw	r1, #5116	; 0x13fc
 8000ee6:	f026 fd32 	bl	802794e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00e fb51 	bl	800f59e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08029bf8 	.word	0x08029bf8

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f026 fd1d 	bl	802794e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000f24:	3008      	adds	r0, #8
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	08029c94 	.word	0x08029c94

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8000f62:	f026 fcf4 	bl	802794e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f986 	bl	8002280 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f987 	bl	8002288 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f017 f98d 	bl	80182a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f006 ff4a 	bl	8007e2c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f017 f8eb 	bl	8018174 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f026 fcd2 	bl	8027952 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb2:	4f21      	ldr	r7, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb4:	4b21      	ldr	r3, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00e fae7 	bl	800f5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00e fae2 	bl	800f5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00e fadd 	bl	800f5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8000ff0:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8000ff4:	f007 fb5e 	bl	80086b4 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000ffe:	4630      	mov	r0, r6
 8001000:	f007 f86e 	bl	80080e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f002 fb49 	bl	800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f027 faae 	bl	802856c <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f026 fcaa 	bl	802796a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013830 	.word	0x20013830
 8001028:	2000259c 	.word	0x2000259c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	200015d8 	.word	0x200015d8
 800103c:	08029c94 	.word	0x08029c94
 8001040:	08029bf8 	.word	0x08029bf8
 8001044:	08029c2c 	.word	0x08029c2c
 8001048:	08029c60 	.word	0x08029c60
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002520 	.word	0x20002520

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002520 	.word	0x20002520

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01b fbe0 	bl	801c83c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001780 	.word	0x20001780
 80010f4:	2000177c 	.word	0x2000177c
 80010f8:	200025a0 	.word	0x200025a0
 80010fc:	08029690 	.word	0x08029690
 8001100:	20002520 	.word	0x20002520
 8001104:	200137c0 	.word	0x200137c0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137cc 	.word	0x200137cc
 8001114:	200137c6 	.word	0x200137c6
 8001118:	200137c2 	.word	0x200137c2
 800111c:	200137c8 	.word	0x200137c8
 8001120:	200137c4 	.word	0x200137c4
 8001124:	0802981c 	.word	0x0802981c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001780 	.word	0x20001780

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002626 	.word	0x20002626
 8001210:	20002624 	.word	0x20002624

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00e fe7f 	bl	800ff36 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f013 fe28 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00e be4e 	b.w	800ff04 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00e be58 	b.w	800ff1c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00e be14 	b.w	800fe98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00e bf75 	b.w	801015e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f027 f913 	bl	8028530 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137cc 	.word	0x200137cc
 8001314:	08029da4 	.word	0x08029da4
 8001318:	08029ca0 	.word	0x08029ca0
 800131c:	08029cfe 	.word	0x08029cfe
 8001320:	08029d37 	.word	0x08029d37

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f009 fe4a 	bl	800afd4 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00f fb2f 	bl	80109b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f009 fe38 	bl	800afd4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137cc 	.word	0x200137cc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002626 	.word	0x20002626
 8001384:	20002624 	.word	0x20002624

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00b fb7c 	bl	800ca88 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00b fc66 	bl	800cc80 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f007 ffec 	bl	800939c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f007 ffeb 	bl	80093a4 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00b fb59 	bl	800ca88 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002630 	.word	0x20002630

080013e8 <updateGUI_test>:
	return sleep_timeout_value;
 80013e8:	4b01      	ldr	r3, [pc, #4]	; (80013f0 <updateGUI_test+0x8>)
}
 80013ea:	6818      	ldr	r0, [r3, #0]
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	20000014 	.word	0x20000014

080013f4 <SystemClock_Config>:
{
 80013f4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f6:	2400      	movs	r4, #0
{
 80013f8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013fa:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013fe:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001406:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800140a:	4a1e      	ldr	r2, [pc, #120]	; (8001484 <SystemClock_Config+0x90>)
 800140c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800140e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001410:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001412:	4b1d      	ldr	r3, [pc, #116]	; (8001488 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001414:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001418:	6411      	str	r1, [r2, #64]	; 0x40
 800141a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800141c:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001420:	9201      	str	r2, [sp, #4]
 8001422:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001424:	9402      	str	r4, [sp, #8]
 8001426:	681a      	ldr	r2, [r3, #0]
 8001428:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001434:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001436:	2201      	movs	r2, #1
 8001438:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800143c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001440:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001442:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001444:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001446:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800144e:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001452:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001454:	2202      	movs	r2, #2
 8001456:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001458:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800145a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001460:	f009 fdda 	bl	800b018 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001464:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001466:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001472:	a803      	add	r0, sp, #12
 8001474:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001476:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800147a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800147c:	f009 ffe4 	bl	800b448 <HAL_RCC_ClockConfig>
}
 8001480:	b015      	add	sp, #84	; 0x54
 8001482:	bd30      	pop	{r4, r5, pc}
 8001484:	40023800 	.word	0x40023800
 8001488:	40007000 	.word	0x40007000

0800148c <main>:
{
 800148c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	2400      	movs	r4, #0
{
 8001492:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001494:	f007 fc5c 	bl	8008d50 <HAL_Init>
  SystemClock_Config();
 8001498:	f7ff ffac 	bl	80013f4 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80014a0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	4bc1      	ldr	r3, [pc, #772]	; (80017ac <main+0x320>)
 80014a6:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a8:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ac:	48c0      	ldr	r0, [pc, #768]	; (80017b0 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014ae:	4dc1      	ldr	r5, [pc, #772]	; (80017b4 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b0:	f041 0110 	orr.w	r1, r1, #16
 80014b4:	6319      	str	r1, [r3, #48]	; 0x30
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f001 0110 	and.w	r1, r1, #16
 80014bc:	9100      	str	r1, [sp, #0]
 80014be:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c0:	9401      	str	r4, [sp, #4]
 80014c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c4:	f041 0120 	orr.w	r1, r1, #32
 80014c8:	6319      	str	r1, [r3, #48]	; 0x30
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f001 0120 	and.w	r1, r1, #32
 80014d0:	9101      	str	r1, [sp, #4]
 80014d2:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014d4:	9402      	str	r4, [sp, #8]
 80014d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014dc:	6319      	str	r1, [r3, #48]	; 0x30
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014e4:	9102      	str	r1, [sp, #8]
 80014e6:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014e8:	9403      	str	r4, [sp, #12]
 80014ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ec:	f041 0104 	orr.w	r1, r1, #4
 80014f0:	6319      	str	r1, [r3, #48]	; 0x30
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f001 0104 	and.w	r1, r1, #4
 80014f8:	9103      	str	r1, [sp, #12]
 80014fa:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014fc:	9404      	str	r4, [sp, #16]
 80014fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001500:	f041 0101 	orr.w	r1, r1, #1
 8001504:	6319      	str	r1, [r3, #48]	; 0x30
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f001 0101 	and.w	r1, r1, #1
 800150c:	9104      	str	r1, [sp, #16]
 800150e:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001510:	9405      	str	r4, [sp, #20]
 8001512:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001514:	f041 0102 	orr.w	r1, r1, #2
 8001518:	6319      	str	r1, [r3, #48]	; 0x30
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f001 0102 	and.w	r1, r1, #2
 8001520:	9105      	str	r1, [sp, #20]
 8001522:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001524:	9406      	str	r4, [sp, #24]
 8001526:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001528:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800152c:	6319      	str	r1, [r3, #48]	; 0x30
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001534:	9106      	str	r1, [sp, #24]
 8001536:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001538:	9407      	str	r4, [sp, #28]
 800153a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800153c:	f041 0108 	orr.w	r1, r1, #8
 8001540:	6319      	str	r1, [r3, #48]	; 0x30
 8001542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001544:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001548:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800154c:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001550:	f007 ff24 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001554:	4896      	ldr	r0, [pc, #600]	; (80017b0 <main+0x324>)
 8001556:	2120      	movs	r1, #32
 8001558:	2201      	movs	r2, #1
 800155a:	f007 ff1f 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800155e:	4896      	ldr	r0, [pc, #600]	; (80017b8 <main+0x32c>)
 8001560:	4622      	mov	r2, r4
 8001562:	2104      	movs	r1, #4
 8001564:	f007 ff1a 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001568:	4894      	ldr	r0, [pc, #592]	; (80017bc <main+0x330>)
 800156a:	4622      	mov	r2, r4
 800156c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001570:	f007 ff14 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001574:	2201      	movs	r2, #1
 8001576:	4892      	ldr	r0, [pc, #584]	; (80017c0 <main+0x334>)
 8001578:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800157c:	f007 ff0e 	bl	800939c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001582:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001586:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001588:	4889      	ldr	r0, [pc, #548]	; (80017b0 <main+0x324>)
 800158a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800158c:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001590:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001594:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001598:	f007 fdbc 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	4883      	ldr	r0, [pc, #524]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80015a2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80015a8:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015ac:	f007 fdb2 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b0:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b2:	487f      	ldr	r0, [pc, #508]	; (80017b0 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015b4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b8:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ba:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015be:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015c4:	f007 fda6 	bl	8009114 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c8:	487b      	ldr	r0, [pc, #492]	; (80017b8 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ca:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ce:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d4:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015d6:	f007 fd9d 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	4877      	ldr	r0, [pc, #476]	; (80017bc <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 fd93 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015ee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f2:	4874      	ldr	r0, [pc, #464]	; (80017c4 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015f4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015f8:	230f      	movs	r3, #15
 80015fa:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015fc:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001600:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001604:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	f007 fd85 	bl	8009114 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160a:	486d      	ldr	r0, [pc, #436]	; (80017c0 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 800160c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001610:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001618:	f007 fd7c 	bl	8009114 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161c:	4622      	mov	r2, r4
 800161e:	2105      	movs	r1, #5
 8001620:	2009      	movs	r0, #9
 8001622:	f007 fbe5 	bl	8008df0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001626:	2009      	movs	r0, #9
 8001628:	f007 fc20 	bl	8008e6c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162c:	4866      	ldr	r0, [pc, #408]	; (80017c8 <main+0x33c>)
 800162e:	4b67      	ldr	r3, [pc, #412]	; (80017cc <main+0x340>)
 8001630:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001632:	f007 fc29 	bl	8008e88 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001636:	4966      	ldr	r1, [pc, #408]	; (80017d0 <main+0x344>)
 8001638:	4b66      	ldr	r3, [pc, #408]	; (80017d4 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800163a:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163c:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001640:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001644:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001646:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800164a:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164e:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001652:	f008 f909 	bl	8009868 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001656:	2110      	movs	r1, #16
 8001658:	4628      	mov	r0, r5
 800165a:	f009 fad1 	bl	800ac00 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165e:	4621      	mov	r1, r4
 8001660:	4628      	mov	r0, r5
 8001662:	f009 faed 	bl	800ac40 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001666:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017ec <main+0x360>
  hspi5.Instance = SPI5;
 800166a:	485b      	ldr	r0, [pc, #364]	; (80017d8 <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166c:	4d5b      	ldr	r5, [pc, #364]	; (80017dc <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001670:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001674:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001678:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800167c:	2318      	movs	r3, #24
 800167e:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001682:	230a      	movs	r3, #10
 8001684:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001686:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800168a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001692:	f00a f9c7 	bl	800ba24 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001696:	2307      	movs	r3, #7
 8001698:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800169a:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169c:	4b50      	ldr	r3, [pc, #320]	; (80017e0 <main+0x354>)
 800169e:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80016a0:	2040      	movs	r0, #64	; 0x40
 80016a2:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a6:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016aa:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016b2:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b6:	a90f      	add	r1, sp, #60	; 0x3c
 80016b8:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ba:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016bc:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016c0:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016c4:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016ca:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016cc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016d0:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016d4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016d6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d8:	f00a f8b2 	bl	800b840 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e0:	a90b      	add	r1, sp, #44	; 0x2c
 80016e2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e4:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016e8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016ec:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ee:	f00a f8c9 	bl	800b884 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016f2:	4630      	mov	r0, r6
 80016f4:	f007 fb58 	bl	8008da8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016fc:	a90b      	add	r1, sp, #44	; 0x2c
 80016fe:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001700:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001704:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001708:	f00a f8bc 	bl	800b884 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800170c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001710:	a90b      	add	r1, sp, #44	; 0x2c
 8001712:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001714:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001718:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171c:	f00a f8b2 	bl	800b884 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001720:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001724:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001726:	9b08      	ldr	r3, [sp, #32]
 8001728:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800172e:	a90b      	add	r1, sp, #44	; 0x2c
 8001730:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001732:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001736:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001738:	f00a f8a4 	bl	800b884 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	4628      	mov	r0, r5
 800173e:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001742:	4d28      	ldr	r5, [pc, #160]	; (80017e4 <main+0x358>)
  htim1.Instance = TIM1;
 8001744:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017f0 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001748:	f00a f8ba 	bl	800b8c0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800174c:	2234      	movs	r2, #52	; 0x34
 800174e:	4621      	mov	r1, r4
 8001750:	a80f      	add	r0, sp, #60	; 0x3c
 8001752:	f027 f8f2 	bl	802893a <memset>
  hltdc.Instance = LTDC;
 8001756:	4b24      	ldr	r3, [pc, #144]	; (80017e8 <main+0x35c>)
 8001758:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800175a:	2309      	movs	r3, #9
 800175c:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800175e:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001760:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001764:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001766:	f240 190d 	movw	r9, #269	; 0x10d
 800176a:	f240 1343 	movw	r3, #323	; 0x143
 800176e:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001772:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001774:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001778:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800177a:	f240 1a17 	movw	sl, #279	; 0x117
 800177e:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001782:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001784:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001788:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 800178c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001790:	f009 fa7a 	bl	800ac88 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001794:	23f0      	movs	r3, #240	; 0xf0
 8001796:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001798:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800179a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800179e:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 80017a0:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 80017a2:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017a4:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 80017a8:	e024      	b.n	80017f4 <main+0x368>
 80017aa:	bf00      	nop
 80017ac:	40023800 	.word	0x40023800
 80017b0:	40021000 	.word	0x40021000
 80017b4:	20002684 	.word	0x20002684
 80017b8:	40020800 	.word	0x40020800
 80017bc:	40020c00 	.word	0x40020c00
 80017c0:	40021800 	.word	0x40021800
 80017c4:	40020000 	.word	0x40020000
 80017c8:	2000263c 	.word	0x2000263c
 80017cc:	40023000 	.word	0x40023000
 80017d0:	40005c00 	.word	0x40005c00
 80017d4:	000186a0 	.word	0x000186a0
 80017d8:	200027b4 	.word	0x200027b4
 80017dc:	20002780 	.word	0x20002780
 80017e0:	a0000140 	.word	0xa0000140
 80017e4:	200026d8 	.word	0x200026d8
 80017e8:	40016800 	.word	0x40016800
 80017ec:	40015000 	.word	0x40015000
 80017f0:	2000280c 	.word	0x2000280c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017f4:	4622      	mov	r2, r4
 80017f6:	a90f      	add	r1, sp, #60	; 0x3c
 80017f8:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017fa:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017fc:	2305      	movs	r3, #5
 80017fe:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001802:	4d4b      	ldr	r5, [pc, #300]	; (8001930 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 8001804:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001806:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001808:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 800180a:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 800180c:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 800180e:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001812:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001816:	f009 fb0d 	bl	800ae34 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800181a:	4b46      	ldr	r3, [pc, #280]	; (8001934 <main+0x4a8>)
 800181c:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001822:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001824:	4d44      	ldr	r5, [pc, #272]	; (8001938 <main+0x4ac>)
  LcdDrv->DisplayOff();
 8001826:	68db      	ldr	r3, [r3, #12]
 8001828:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800182a:	4b44      	ldr	r3, [pc, #272]	; (800193c <main+0x4b0>)
 800182c:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800182e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001832:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001836:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8001838:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 800183c:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800183e:	f007 fb4d 	bl	8008edc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001842:	4631      	mov	r1, r6
 8001844:	4628      	mov	r0, r5
 8001846:	f007 fc0f 	bl	8009068 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800184a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 800184e:	4b3c      	ldr	r3, [pc, #240]	; (8001940 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001850:	4d3c      	ldr	r5, [pc, #240]	; (8001944 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001852:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001856:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001858:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800185c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001860:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001864:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 8001868:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800186c:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800186e:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001872:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001876:	f00a fcc5 	bl	800c204 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800187a:	a90f      	add	r1, sp, #60	; 0x3c
 800187c:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800187e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001882:	f00a fe39 	bl	800c4f8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001886:	a90b      	add	r1, sp, #44	; 0x2c
 8001888:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800188a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800188e:	f00a ff71 	bl	800c774 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001892:	4b2d      	ldr	r3, [pc, #180]	; (8001948 <main+0x4bc>)
 8001894:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001896:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001898:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 800189c:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800189e:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018a0:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018a2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80018a6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80018aa:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018ae:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018b2:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018b4:	9409      	str	r4, [sp, #36]	; 0x24
 80018b6:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018b8:	f00a fca4 	bl	800c204 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c0:	a90b      	add	r1, sp, #44	; 0x2c
 80018c2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018c4:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018c6:	f00a fd67 	bl	800c398 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018ca:	a90f      	add	r1, sp, #60	; 0x3c
 80018cc:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018ce:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018d2:	f00a fe11 	bl	800c4f8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d6:	a909      	add	r1, sp, #36	; 0x24
 80018d8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018da:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018de:	f00a ff49 	bl	800c774 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018e2:	f7fe fe7f 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018e6:	f7fe fe7b 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018ea:	f00b f855 	bl	800c998 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018ee:	4a17      	ldr	r2, [pc, #92]	; (800194c <main+0x4c0>)
 80018f0:	4639      	mov	r1, r7
 80018f2:	4658      	mov	r0, fp
 80018f4:	f00b f98a 	bl	800cc0c <osMessageQueueNew>
 80018f8:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fa:	4a16      	ldr	r2, [pc, #88]	; (8001954 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018fc:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	4621      	mov	r1, r4
 8001900:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4cc>)
 8001902:	f00b f875 	bl	800c9f0 <osThreadNew>
 8001906:	4b15      	ldr	r3, [pc, #84]	; (800195c <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001908:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800190a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4621      	mov	r1, r4
 800190e:	4815      	ldr	r0, [pc, #84]	; (8001964 <main+0x4d8>)
 8001910:	f00b f86e 	bl	800c9f0 <osThreadNew>
 8001914:	4b14      	ldr	r3, [pc, #80]	; (8001968 <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001916:	4a15      	ldr	r2, [pc, #84]	; (800196c <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001918:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800191a:	4621      	mov	r1, r4
 800191c:	4814      	ldr	r0, [pc, #80]	; (8001970 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800191e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001920:	f00b f866 	bl	800c9f0 <osThreadNew>
 8001924:	4b13      	ldr	r3, [pc, #76]	; (8001974 <main+0x4e8>)
 8001926:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001928:	f00b f848 	bl	800c9bc <osKernelStart>
  while (1)
 800192c:	e7fe      	b.n	800192c <main+0x4a0>
 800192e:	bf00      	nop
 8001930:	2000262c 	.word	0x2000262c
 8001934:	20000018 	.word	0x20000018
 8001938:	20002644 	.word	0x20002644
 800193c:	4002b000 	.word	0x4002b000
 8001940:	40010000 	.word	0x40010000
 8001944:	20002854 	.word	0x20002854
 8001948:	40000400 	.word	0x40000400
 800194c:	08029e14 	.word	0x08029e14
 8001950:	20002630 	.word	0x20002630
 8001954:	08029e50 	.word	0x08029e50
 8001958:	08001389 	.word	0x08001389
 800195c:	20002638 	.word	0x20002638
 8001960:	08029df0 	.word	0x08029df0
 8001964:	080005f5 	.word	0x080005f5
 8001968:	20002628 	.word	0x20002628
 800196c:	08029e2c 	.word	0x08029e2c
 8001970:	08001395 	.word	0x08001395
 8001974:	20002634 	.word	0x20002634

08001978 <IOE_Init>:
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop

0800197c <IOE_ITConfig>:
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop

08001980 <IOE_Write>:
{
 8001980:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001982:	4c09      	ldr	r4, [pc, #36]	; (80019a8 <IOE_Write+0x28>)
{
 8001984:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001986:	6824      	ldr	r4, [r4, #0]
 8001988:	9402      	str	r4, [sp, #8]
{
 800198a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800198c:	2301      	movs	r3, #1
 800198e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001992:	f10d 0417 	add.w	r4, sp, #23
 8001996:	460a      	mov	r2, r1
 8001998:	9301      	str	r3, [sp, #4]
 800199a:	4601      	mov	r1, r0
 800199c:	9400      	str	r4, [sp, #0]
 800199e:	4803      	ldr	r0, [pc, #12]	; (80019ac <IOE_Write+0x2c>)
 80019a0:	f008 f82a 	bl	80099f8 <HAL_I2C_Mem_Write>
}
 80019a4:	b006      	add	sp, #24
 80019a6:	bd10      	pop	{r4, pc}
 80019a8:	2000000c 	.word	0x2000000c
 80019ac:	20002684 	.word	0x20002684

080019b0 <IOE_Read>:
{
 80019b0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	4b0b      	ldr	r3, [pc, #44]	; (80019e0 <IOE_Read+0x30>)
{
 80019b4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	9302      	str	r3, [sp, #8]
{
 80019ba:	4684      	mov	ip, r0
 80019bc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019be:	2301      	movs	r3, #1
 80019c0:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019c4:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c6:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019ca:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ce:	4661      	mov	r1, ip
 80019d0:	4804      	ldr	r0, [pc, #16]	; (80019e4 <IOE_Read+0x34>)
 80019d2:	f008 f903 	bl	8009bdc <HAL_I2C_Mem_Read>
}
 80019d6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019da:	b007      	add	sp, #28
 80019dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80019e0:	2000000c 	.word	0x2000000c
 80019e4:	20002684 	.word	0x20002684

080019e8 <IOE_ReadMultiple>:
{
 80019e8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019ea:	4c09      	ldr	r4, [pc, #36]	; (8001a10 <IOE_ReadMultiple+0x28>)
{
 80019ec:	b084      	sub	sp, #16
 80019ee:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019f0:	6820      	ldr	r0, [r4, #0]
 80019f2:	9002      	str	r0, [sp, #8]
 80019f4:	e9cd 2300 	strd	r2, r3, [sp]
 80019f8:	4806      	ldr	r0, [pc, #24]	; (8001a14 <IOE_ReadMultiple+0x2c>)
 80019fa:	460a      	mov	r2, r1
 80019fc:	2301      	movs	r3, #1
 80019fe:	4661      	mov	r1, ip
 8001a00:	f008 f8ec 	bl	8009bdc <HAL_I2C_Mem_Read>
}
 8001a04:	3800      	subs	r0, #0
 8001a06:	bf18      	it	ne
 8001a08:	2001      	movne	r0, #1
 8001a0a:	b004      	add	sp, #16
 8001a0c:	bd10      	pop	{r4, pc}
 8001a0e:	bf00      	nop
 8001a10:	2000000c 	.word	0x2000000c
 8001a14:	20002684 	.word	0x20002684

08001a18 <IOE_Delay>:
 8001a18:	f007 b9c6 	b.w	8008da8 <HAL_Delay>

08001a1c <LCD_IO_Init>:
{
 8001a1c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1e:	4806      	ldr	r0, [pc, #24]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	2104      	movs	r1, #4
 8001a24:	f007 fcba 	bl	800939c <HAL_GPIO_WritePin>
}
 8001a28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2c:	4802      	ldr	r0, [pc, #8]	; (8001a38 <LCD_IO_Init+0x1c>)
 8001a2e:	2201      	movs	r2, #1
 8001a30:	2104      	movs	r1, #4
 8001a32:	f007 bcb3 	b.w	800939c <HAL_GPIO_WritePin>
 8001a36:	bf00      	nop
 8001a38:	40020800 	.word	0x40020800

08001a3c <LCD_IO_WriteData>:
{
 8001a3c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a3e:	4d10      	ldr	r5, [pc, #64]	; (8001a80 <LCD_IO_WriteData+0x44>)
{
 8001a40:	b083      	sub	sp, #12
 8001a42:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a44:	2201      	movs	r2, #1
 8001a46:	480f      	ldr	r0, [pc, #60]	; (8001a84 <LCD_IO_WriteData+0x48>)
 8001a48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a4c:	f007 fca6 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a50:	4628      	mov	r0, r5
 8001a52:	2200      	movs	r2, #0
 8001a54:	2104      	movs	r1, #4
 8001a56:	f007 fca1 	bl	800939c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a5a:	4b0b      	ldr	r3, [pc, #44]	; (8001a88 <LCD_IO_WriteData+0x4c>)
 8001a5c:	480b      	ldr	r0, [pc, #44]	; (8001a8c <LCD_IO_WriteData+0x50>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a64:	f10d 0106 	add.w	r1, sp, #6
 8001a68:	2201      	movs	r2, #1
 8001a6a:	f00a f83d 	bl	800bae8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	2201      	movs	r2, #1
 8001a70:	2104      	movs	r1, #4
 8001a72:	4628      	mov	r0, r5
}
 8001a74:	b003      	add	sp, #12
 8001a76:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a7a:	f007 bc8f 	b.w	800939c <HAL_GPIO_WritePin>
 8001a7e:	bf00      	nop
 8001a80:	40020800 	.word	0x40020800
 8001a84:	40020c00 	.word	0x40020c00
 8001a88:	20000010 	.word	0x20000010
 8001a8c:	200027b4 	.word	0x200027b4

08001a90 <LCD_IO_WriteReg>:
{
 8001a90:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a92:	4d10      	ldr	r5, [pc, #64]	; (8001ad4 <LCD_IO_WriteReg+0x44>)
{
 8001a94:	b083      	sub	sp, #12
 8001a96:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a98:	2200      	movs	r2, #0
 8001a9a:	480f      	ldr	r0, [pc, #60]	; (8001ad8 <LCD_IO_WriteReg+0x48>)
 8001a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aa0:	f007 fc7c 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aa4:	4628      	mov	r0, r5
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	2104      	movs	r1, #4
 8001aaa:	f007 fc77 	bl	800939c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aae:	4b0b      	ldr	r3, [pc, #44]	; (8001adc <LCD_IO_WriteReg+0x4c>)
 8001ab0:	480b      	ldr	r0, [pc, #44]	; (8001ae0 <LCD_IO_WriteReg+0x50>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001ab4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ab8:	f10d 0106 	add.w	r1, sp, #6
 8001abc:	2201      	movs	r2, #1
 8001abe:	f00a f813 	bl	800bae8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	2201      	movs	r2, #1
 8001ac4:	2104      	movs	r1, #4
 8001ac6:	4628      	mov	r0, r5
}
 8001ac8:	b003      	add	sp, #12
 8001aca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ace:	f007 bc65 	b.w	800939c <HAL_GPIO_WritePin>
 8001ad2:	bf00      	nop
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	200027b4 	.word	0x200027b4

08001ae4 <LCD_IO_ReadData>:
{
 8001ae4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae8:	4e19      	ldr	r6, [pc, #100]	; (8001b50 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001aea:	4f1a      	ldr	r7, [pc, #104]	; (8001b54 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aec:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b58 <LCD_IO_ReadData+0x74>
 8001af0:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b5c <LCD_IO_ReadData+0x78>
{
 8001af4:	b083      	sub	sp, #12
 8001af6:	460c      	mov	r4, r1
 8001af8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001afa:	2200      	movs	r2, #0
 8001afc:	4630      	mov	r0, r6
 8001afe:	2104      	movs	r1, #4
 8001b00:	f007 fc4c 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b04:	4638      	mov	r0, r7
 8001b06:	2200      	movs	r2, #0
 8001b08:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b0c:	f007 fc46 	bl	800939c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b10:	f8d9 3000 	ldr.w	r3, [r9]
 8001b14:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b18:	a901      	add	r1, sp, #4
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	4640      	mov	r0, r8
 8001b1e:	f009 ffe3 	bl	800bae8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b22:	f8d9 3000 	ldr.w	r3, [r9]
 8001b26:	4622      	mov	r2, r4
 8001b28:	a901      	add	r1, sp, #4
 8001b2a:	4640      	mov	r0, r8
 8001b2c:	f00a fa84 	bl	800c038 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b30:	4638      	mov	r0, r7
 8001b32:	2201      	movs	r2, #1
 8001b34:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b38:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b3a:	f007 fc2f 	bl	800939c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b3e:	4630      	mov	r0, r6
 8001b40:	2201      	movs	r2, #1
 8001b42:	2104      	movs	r1, #4
 8001b44:	f007 fc2a 	bl	800939c <HAL_GPIO_WritePin>
}
 8001b48:	4620      	mov	r0, r4
 8001b4a:	b003      	add	sp, #12
 8001b4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b50:	40020800 	.word	0x40020800
 8001b54:	40020c00 	.word	0x40020c00
 8001b58:	20000010 	.word	0x20000010
 8001b5c:	200027b4 	.word	0x200027b4

08001b60 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b60:	f007 b922 	b.w	8008da8 <HAL_Delay>

08001b64 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b64:	4b03      	ldr	r3, [pc, #12]	; (8001b74 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b66:	6802      	ldr	r2, [r0, #0]
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	d000      	beq.n	8001b6e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b6c:	4770      	bx	lr
    HAL_IncTick();
 8001b6e:	f007 b909 	b.w	8008d84 <HAL_IncTick>
 8001b72:	bf00      	nop
 8001b74:	40001000 	.word	0x40001000

08001b78 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b78:	4770      	bx	lr
 8001b7a:	bf00      	nop

08001b7c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b7c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b7e:	4b0e      	ldr	r3, [pc, #56]	; (8001bb8 <HAL_MspInit+0x3c>)
 8001b80:	2200      	movs	r2, #0
 8001b82:	9200      	str	r2, [sp, #0]
 8001b84:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b86:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b8a:	6459      	str	r1, [r3, #68]	; 0x44
 8001b8c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b8e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b92:	9000      	str	r0, [sp, #0]
 8001b94:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b96:	9201      	str	r2, [sp, #4]
 8001b98:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b9a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b9e:	6418      	str	r0, [r3, #64]	; 0x40
 8001ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ba2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ba6:	9301      	str	r3, [sp, #4]
 8001ba8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001baa:	210f      	movs	r1, #15
 8001bac:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bb0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bb2:	f007 b91d 	b.w	8008df0 <HAL_NVIC_SetPriority>
 8001bb6:	bf00      	nop
 8001bb8:	40023800 	.word	0x40023800

08001bbc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bbc:	4b0b      	ldr	r3, [pc, #44]	; (8001bec <HAL_CRC_MspInit+0x30>)
 8001bbe:	6802      	ldr	r2, [r0, #0]
 8001bc0:	429a      	cmp	r2, r3
 8001bc2:	d000      	beq.n	8001bc6 <HAL_CRC_MspInit+0xa>
 8001bc4:	4770      	bx	lr
{
 8001bc6:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bc8:	2200      	movs	r2, #0
 8001bca:	9201      	str	r2, [sp, #4]
 8001bcc:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bd0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bd4:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bd8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bde:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001be2:	9301      	str	r3, [sp, #4]
 8001be4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001be6:	b002      	add	sp, #8
 8001be8:	4770      	bx	lr
 8001bea:	bf00      	nop
 8001bec:	40023000 	.word	0x40023000

08001bf0 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001bf0:	4b0e      	ldr	r3, [pc, #56]	; (8001c2c <HAL_DMA2D_MspInit+0x3c>)
 8001bf2:	6802      	ldr	r2, [r0, #0]
 8001bf4:	429a      	cmp	r2, r3
 8001bf6:	d000      	beq.n	8001bfa <HAL_DMA2D_MspInit+0xa>
 8001bf8:	4770      	bx	lr
{
 8001bfa:	b500      	push	{lr}
 8001bfc:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bfe:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c02:	2200      	movs	r2, #0
 8001c04:	9201      	str	r2, [sp, #4]
 8001c06:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c08:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c0c:	6319      	str	r1, [r3, #48]	; 0x30
 8001c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c10:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c14:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c16:	205a      	movs	r0, #90	; 0x5a
 8001c18:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c1a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c1c:	f007 f8e8 	bl	8008df0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c20:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c22:	b003      	add	sp, #12
 8001c24:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c28:	f007 b920 	b.w	8008e6c <HAL_NVIC_EnableIRQ>
 8001c2c:	4002b000 	.word	0x4002b000

08001c30 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c30:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c34:	4b2e      	ldr	r3, [pc, #184]	; (8001cf0 <HAL_I2C_MspInit+0xc0>)
 8001c36:	6802      	ldr	r2, [r0, #0]
{
 8001c38:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c3c:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c42:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c46:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c48:	d002      	beq.n	8001c50 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c4a:	b00a      	add	sp, #40	; 0x28
 8001c4c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c50:	4d28      	ldr	r5, [pc, #160]	; (8001cf4 <HAL_I2C_MspInit+0xc4>)
 8001c52:	9401      	str	r4, [sp, #4]
 8001c54:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c56:	4828      	ldr	r0, [pc, #160]	; (8001cf8 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c58:	f043 0304 	orr.w	r3, r3, #4
 8001c5c:	632b      	str	r3, [r5, #48]	; 0x30
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f003 0304 	and.w	r3, r3, #4
 8001c64:	9301      	str	r3, [sp, #4]
 8001c66:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c68:	9402      	str	r4, [sp, #8]
 8001c6a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c6c:	f043 0301 	orr.w	r3, r3, #1
 8001c70:	632b      	str	r3, [r5, #48]	; 0x30
 8001c72:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c74:	f003 0301 	and.w	r3, r3, #1
 8001c78:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c7e:	f04f 0801 	mov.w	r8, #1
 8001c82:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c86:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c88:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c8a:	2312      	movs	r3, #18
 8001c8c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c90:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c94:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c96:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c98:	f007 fa3c 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c9c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001ca2:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	4815      	ldr	r0, [pc, #84]	; (8001cfc <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ca6:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ca8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001cac:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cb0:	f007 fa30 	bl	8009114 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cb4:	9403      	str	r4, [sp, #12]
 8001cb6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cbc:	642b      	str	r3, [r5, #64]	; 0x40
 8001cbe:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cc0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc4:	4622      	mov	r2, r4
 8001cc6:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc8:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cca:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ccc:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cce:	f007 f88f 	bl	8008df0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cd2:	2048      	movs	r0, #72	; 0x48
 8001cd4:	f007 f8ca 	bl	8008e6c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001cd8:	6a2b      	ldr	r3, [r5, #32]
 8001cda:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cde:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ce0:	6a2b      	ldr	r3, [r5, #32]
 8001ce2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001ce6:	622b      	str	r3, [r5, #32]
}
 8001ce8:	b00a      	add	sp, #40	; 0x28
 8001cea:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001cee:	bf00      	nop
 8001cf0:	40005c00 	.word	0x40005c00
 8001cf4:	40023800 	.word	0x40023800
 8001cf8:	40020800 	.word	0x40020800
 8001cfc:	40020000 	.word	0x40020000

08001d00 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d04:	4604      	mov	r4, r0
 8001d06:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d08:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0a:	2230      	movs	r2, #48	; 0x30
 8001d0c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d0e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d12:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d16:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d18:	f026 fe0f 	bl	802893a <memset>
  if(hltdc->Instance==LTDC)
 8001d1c:	4b67      	ldr	r3, [pc, #412]	; (8001ebc <HAL_LTDC_MspInit+0x1bc>)
 8001d1e:	6822      	ldr	r2, [r4, #0]
 8001d20:	429a      	cmp	r2, r3
 8001d22:	d002      	beq.n	8001d2a <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d24:	b01a      	add	sp, #104	; 0x68
 8001d26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d2a:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d30:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d34:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d38:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d3a:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d3c:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d3e:	f009 fc53 	bl	800b5e8 <HAL_RCCEx_PeriphCLKConfig>
 8001d42:	2800      	cmp	r0, #0
 8001d44:	f040 80b7 	bne.w	8001eb6 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d48:	4b5d      	ldr	r3, [pc, #372]	; (8001ec0 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d4a:	485e      	ldr	r0, [pc, #376]	; (8001ec4 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d4c:	2400      	movs	r4, #0
 8001d4e:	9401      	str	r4, [sp, #4]
 8001d50:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d52:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d56:	645a      	str	r2, [r3, #68]	; 0x44
 8001d58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d5a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d5e:	9201      	str	r2, [sp, #4]
 8001d60:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d62:	9402      	str	r4, [sp, #8]
 8001d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d66:	f042 0220 	orr.w	r2, r2, #32
 8001d6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f002 0220 	and.w	r2, r2, #32
 8001d72:	9202      	str	r2, [sp, #8]
 8001d74:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d76:	9403      	str	r4, [sp, #12]
 8001d78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7a:	f042 0201 	orr.w	r2, r2, #1
 8001d7e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f002 0201 	and.w	r2, r2, #1
 8001d86:	9203      	str	r2, [sp, #12]
 8001d88:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d8a:	9404      	str	r4, [sp, #16]
 8001d8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8e:	f042 0202 	orr.w	r2, r2, #2
 8001d92:	631a      	str	r2, [r3, #48]	; 0x30
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f002 0202 	and.w	r2, r2, #2
 8001d9a:	9204      	str	r2, [sp, #16]
 8001d9c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d9e:	9405      	str	r4, [sp, #20]
 8001da0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001da2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001da6:	631a      	str	r2, [r3, #48]	; 0x30
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dae:	9205      	str	r2, [sp, #20]
 8001db0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001db2:	9406      	str	r4, [sp, #24]
 8001db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db6:	f042 0204 	orr.w	r2, r2, #4
 8001dba:	631a      	str	r2, [r3, #48]	; 0x30
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f002 0204 	and.w	r2, r2, #4
 8001dc2:	9206      	str	r2, [sp, #24]
 8001dc4:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dc6:	9407      	str	r4, [sp, #28]
 8001dc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dca:	f042 0208 	orr.w	r2, r2, #8
 8001dce:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd2:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd6:	2600      	movs	r6, #0
 8001dd8:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dda:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ddc:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dde:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001de0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001de4:	2302      	movs	r3, #2
 8001de6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dea:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dee:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df0:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001df2:	f007 f98f 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df8:	f641 0258 	movw	r2, #6232	; 0x1858
 8001dfc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dfe:	4832      	ldr	r0, [pc, #200]	; (8001ec8 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e00:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e02:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e06:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e0a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e0e:	f007 f981 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e12:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e14:	2203      	movs	r2, #3
 8001e16:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e18:	482c      	ldr	r0, [pc, #176]	; (8001ecc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e1a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e1e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e22:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	f007 f975 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2c:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e30:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	4826      	ldr	r0, [pc, #152]	; (8001ecc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e34:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e36:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e3a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e3e:	f007 f969 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e42:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e44:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e48:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	4821      	ldr	r0, [pc, #132]	; (8001ed0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e4c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e4e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e52:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e56:	f007 f95d 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e5a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e5c:	22c0      	movs	r2, #192	; 0xc0
 8001e5e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	481c      	ldr	r0, [pc, #112]	; (8001ed4 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e62:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e64:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e68:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e6c:	f007 f952 	bl	8009114 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e70:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e72:	2208      	movs	r2, #8
 8001e74:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	4818      	ldr	r0, [pc, #96]	; (8001ed8 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e78:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e7e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e82:	f007 f947 	bl	8009114 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e86:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e88:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e8a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e8e:	4810      	ldr	r0, [pc, #64]	; (8001ed0 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e90:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e94:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e98:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9c:	f007 f93a 	bl	8009114 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ea0:	4622      	mov	r2, r4
 8001ea2:	2105      	movs	r1, #5
 8001ea4:	2058      	movs	r0, #88	; 0x58
 8001ea6:	f006 ffa3 	bl	8008df0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001eaa:	2058      	movs	r0, #88	; 0x58
 8001eac:	f006 ffde 	bl	8008e6c <HAL_NVIC_EnableIRQ>
}
 8001eb0:	b01a      	add	sp, #104	; 0x68
 8001eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eb6:	f7ff fe5f 	bl	8001b78 <Error_Handler>
 8001eba:	e745      	b.n	8001d48 <HAL_LTDC_MspInit+0x48>
 8001ebc:	40016800 	.word	0x40016800
 8001ec0:	40023800 	.word	0x40023800
 8001ec4:	40021400 	.word	0x40021400
 8001ec8:	40020000 	.word	0x40020000
 8001ecc:	40020400 	.word	0x40020400
 8001ed0:	40021800 	.word	0x40021800
 8001ed4:	40020800 	.word	0x40020800
 8001ed8:	40020c00 	.word	0x40020c00
 8001edc:	00000000 	.word	0x00000000

08001ee0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ee0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ee2:	4a1b      	ldr	r2, [pc, #108]	; (8001f50 <HAL_SPI_MspInit+0x70>)
 8001ee4:	6801      	ldr	r1, [r0, #0]
{
 8001ee6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ee8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eea:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eec:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ef0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ef4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ef6:	d001      	beq.n	8001efc <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ef8:	b008      	add	sp, #32
 8001efa:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001efc:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001f00:	9300      	str	r3, [sp, #0]
 8001f02:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f04:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001f08:	6450      	str	r0, [r2, #68]	; 0x44
 8001f0a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001f0c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f10:	9000      	str	r0, [sp, #0]
 8001f12:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f14:	9301      	str	r3, [sp, #4]
 8001f16:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f18:	480e      	ldr	r0, [pc, #56]	; (8001f54 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f1a:	f043 0320 	orr.w	r3, r3, #32
 8001f1e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f20:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f48 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f26:	f003 0320 	and.w	r3, r3, #32
 8001f2a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f2c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f2e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f30:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f32:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f36:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f3a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f3c:	f007 f8ea 	bl	8009114 <HAL_GPIO_Init>
}
 8001f40:	b008      	add	sp, #32
 8001f42:	bd10      	pop	{r4, pc}
 8001f44:	f3af 8000 	nop.w
 8001f48:	00000380 	.word	0x00000380
 8001f4c:	00000002 	.word	0x00000002
 8001f50:	40015000 	.word	0x40015000
 8001f54:	40021400 	.word	0x40021400

08001f58 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f58:	4a12      	ldr	r2, [pc, #72]	; (8001fa4 <HAL_TIM_Base_MspInit+0x4c>)
 8001f5a:	6803      	ldr	r3, [r0, #0]
 8001f5c:	4293      	cmp	r3, r2
{
 8001f5e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f60:	d012      	beq.n	8001f88 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f62:	4a11      	ldr	r2, [pc, #68]	; (8001fa8 <HAL_TIM_Base_MspInit+0x50>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	d001      	beq.n	8001f6c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f68:	b002      	add	sp, #8
 8001f6a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f6c:	4b0f      	ldr	r3, [pc, #60]	; (8001fac <HAL_TIM_Base_MspInit+0x54>)
 8001f6e:	2200      	movs	r2, #0
 8001f70:	9201      	str	r2, [sp, #4]
 8001f72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f74:	f042 0202 	orr.w	r2, r2, #2
 8001f78:	641a      	str	r2, [r3, #64]	; 0x40
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f7c:	f003 0302 	and.w	r3, r3, #2
 8001f80:	9301      	str	r3, [sp, #4]
 8001f82:	9b01      	ldr	r3, [sp, #4]
}
 8001f84:	b002      	add	sp, #8
 8001f86:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f88:	4b08      	ldr	r3, [pc, #32]	; (8001fac <HAL_TIM_Base_MspInit+0x54>)
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	9200      	str	r2, [sp, #0]
 8001f8e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f90:	f042 0201 	orr.w	r2, r2, #1
 8001f94:	645a      	str	r2, [r3, #68]	; 0x44
 8001f96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f98:	f003 0301 	and.w	r3, r3, #1
 8001f9c:	9300      	str	r3, [sp, #0]
 8001f9e:	9b00      	ldr	r3, [sp, #0]
}
 8001fa0:	b002      	add	sp, #8
 8001fa2:	4770      	bx	lr
 8001fa4:	40010000 	.word	0x40010000
 8001fa8:	40000400 	.word	0x40000400
 8001fac:	40023800 	.word	0x40023800

08001fb0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fb0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fb2:	4b2b      	ldr	r3, [pc, #172]	; (8002060 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fb4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fb6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fb8:	2200      	movs	r2, #0
 8001fba:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fbc:	2c00      	cmp	r4, #0
 8001fbe:	d14c      	bne.n	800205a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fc0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fc2:	4a28      	ldr	r2, [pc, #160]	; (8002064 <HAL_SDRAM_MspInit+0xb4>)
 8001fc4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fc6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fc8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fca:	4827      	ldr	r0, [pc, #156]	; (8002068 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	433b      	orrs	r3, r7
 8001fce:	6393      	str	r3, [r2, #56]	; 0x38
 8001fd0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fd2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fdc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fde:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fe0:	2302      	movs	r3, #2
 8001fe2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fe6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fea:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fec:	f007 f892 	bl	8009114 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	481e      	ldr	r0, [pc, #120]	; (800206c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001ff2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ff6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ff8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002000:	f007 f888 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002004:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002008:	4819      	ldr	r0, [pc, #100]	; (8002070 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800200a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800200e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002012:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002016:	f007 f87d 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800201a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201e:	4815      	ldr	r0, [pc, #84]	; (8002074 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002020:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002022:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002024:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002028:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800202c:	f007 f872 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002030:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002034:	4810      	ldr	r0, [pc, #64]	; (8002078 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002036:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002038:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800203a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800203e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002042:	f007 f867 	bl	8009114 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002046:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002048:	480c      	ldr	r0, [pc, #48]	; (800207c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800204a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800204e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002052:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002054:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002056:	f007 f85d 	bl	8009114 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800205a:	b009      	add	sp, #36	; 0x24
 800205c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800205e:	bf00      	nop
 8002060:	2000289c 	.word	0x2000289c
 8002064:	40023800 	.word	0x40023800
 8002068:	40021400 	.word	0x40021400
 800206c:	40020800 	.word	0x40020800
 8002070:	40021800 	.word	0x40021800
 8002074:	40021000 	.word	0x40021000
 8002078:	40020c00 	.word	0x40020c00
 800207c:	40020400 	.word	0x40020400

08002080 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002080:	b570      	push	{r4, r5, r6, lr}
 8002082:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002084:	4b23      	ldr	r3, [pc, #140]	; (8002114 <HAL_InitTick+0x94>)
 8002086:	2200      	movs	r2, #0
 8002088:	9202      	str	r2, [sp, #8]
 800208a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800208c:	f042 0210 	orr.w	r2, r2, #16
 8002090:	641a      	str	r2, [r3, #64]	; 0x40
 8002092:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002094:	f003 0310 	and.w	r3, r3, #16
 8002098:	9302      	str	r3, [sp, #8]
{
 800209a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800209c:	a901      	add	r1, sp, #4
 800209e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020a0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020a2:	f009 fa7f 	bl	800b5a4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80020a6:	9b06      	ldr	r3, [sp, #24]
 80020a8:	b9d3      	cbnz	r3, 80020e0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80020aa:	f009 fa6b 	bl	800b584 <HAL_RCC_GetPCLK1Freq>
 80020ae:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020b0:	4a19      	ldr	r2, [pc, #100]	; (8002118 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020b2:	4c1a      	ldr	r4, [pc, #104]	; (800211c <HAL_InitTick+0x9c>)
 80020b4:	491a      	ldr	r1, [pc, #104]	; (8002120 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020b6:	fba2 2303 	umull	r2, r3, r2, r3
 80020ba:	0c9b      	lsrs	r3, r3, #18
 80020bc:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020be:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020c0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020c4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ca:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020cc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020ce:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020d0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020d2:	f00a f897 	bl	800c204 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020d6:	4606      	mov	r6, r0
 80020d8:	b130      	cbz	r0, 80020e8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020da:	4630      	mov	r0, r6
 80020dc:	b008      	add	sp, #32
 80020de:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020e0:	f009 fa50 	bl	800b584 <HAL_RCC_GetPCLK1Freq>
 80020e4:	0043      	lsls	r3, r0, #1
 80020e6:	e7e3      	b.n	80020b0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020e8:	4620      	mov	r0, r4
 80020ea:	f00a f919 	bl	800c320 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020ee:	4606      	mov	r6, r0
 80020f0:	2800      	cmp	r0, #0
 80020f2:	d1f2      	bne.n	80020da <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020f4:	2036      	movs	r0, #54	; 0x36
 80020f6:	f006 feb9 	bl	8008e6c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020fa:	2d0f      	cmp	r5, #15
 80020fc:	d901      	bls.n	8002102 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020fe:	2601      	movs	r6, #1
 8002100:	e7eb      	b.n	80020da <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002102:	4632      	mov	r2, r6
 8002104:	4629      	mov	r1, r5
 8002106:	2036      	movs	r0, #54	; 0x36
 8002108:	f006 fe72 	bl	8008df0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800210c:	4b05      	ldr	r3, [pc, #20]	; (8002124 <HAL_InitTick+0xa4>)
 800210e:	601d      	str	r5, [r3, #0]
 8002110:	e7e3      	b.n	80020da <HAL_InitTick+0x5a>
 8002112:	bf00      	nop
 8002114:	40023800 	.word	0x40023800
 8002118:	431bde83 	.word	0x431bde83
 800211c:	200028a0 	.word	0x200028a0
 8002120:	40001000 	.word	0x40001000
 8002124:	20000080 	.word	0x20000080

08002128 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002128:	4770      	bx	lr
 800212a:	bf00      	nop

0800212c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800212c:	e7fe      	b.n	800212c <HardFault_Handler>
 800212e:	bf00      	nop

08002130 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002130:	e7fe      	b.n	8002130 <MemManage_Handler>
 8002132:	bf00      	nop

08002134 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002134:	e7fe      	b.n	8002134 <BusFault_Handler>
 8002136:	bf00      	nop

08002138 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002138:	e7fe      	b.n	8002138 <UsageFault_Handler>
 800213a:	bf00      	nop

0800213c <DebugMon_Handler>:
 800213c:	4770      	bx	lr
 800213e:	bf00      	nop

08002140 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002140:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002142:	20c8      	movs	r0, #200	; 0xc8
 8002144:	f006 fe30 	bl	8008da8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002148:	4804      	ldr	r0, [pc, #16]	; (800215c <EXTI3_IRQHandler+0x1c>)
 800214a:	2200      	movs	r2, #0
 800214c:	2120      	movs	r1, #32
 800214e:	f007 f925 	bl	800939c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002152:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002156:	2008      	movs	r0, #8
 8002158:	f007 b930 	b.w	80093bc <HAL_GPIO_EXTI_IRQHandler>
 800215c:	40021000 	.word	0x40021000

08002160 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002160:	4801      	ldr	r0, [pc, #4]	; (8002168 <TIM6_DAC_IRQHandler+0x8>)
 8002162:	f00a ba5d 	b.w	800c620 <HAL_TIM_IRQHandler>
 8002166:	bf00      	nop
 8002168:	200028a0 	.word	0x200028a0

0800216c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800216c:	4801      	ldr	r0, [pc, #4]	; (8002174 <I2C3_EV_IRQHandler+0x8>)
 800216e:	f008 b885 	b.w	800a27c <HAL_I2C_EV_IRQHandler>
 8002172:	bf00      	nop
 8002174:	20002684 	.word	0x20002684

08002178 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002178:	4801      	ldr	r0, [pc, #4]	; (8002180 <LTDC_IRQHandler+0x8>)
 800217a:	f008 bdf9 	b.w	800ad70 <HAL_LTDC_IRQHandler>
 800217e:	bf00      	nop
 8002180:	200026d8 	.word	0x200026d8

08002184 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002184:	4801      	ldr	r0, [pc, #4]	; (800218c <DMA2D_IRQHandler+0x8>)
 8002186:	f006 bedb 	b.w	8008f40 <HAL_DMA2D_IRQHandler>
 800218a:	bf00      	nop
 800218c:	20002644 	.word	0x20002644

08002190 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002190:	2001      	movs	r0, #1
 8002192:	4770      	bx	lr

08002194 <_kill>:

int _kill(int pid, int sig)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f026 fcc9 	bl	8028b2c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800219e:	f04f 30ff 	mov.w	r0, #4294967295
 80021a2:	bd08      	pop	{r3, pc}

080021a4 <_exit>:

void _exit (int status)
{
 80021a4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80021a6:	f026 fcc1 	bl	8028b2c <__errno>
 80021aa:	2316      	movs	r3, #22
 80021ac:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80021ae:	e7fe      	b.n	80021ae <_exit+0xa>

080021b0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021b0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	1e16      	subs	r6, r2, #0
 80021b4:	dd07      	ble.n	80021c6 <_read+0x16>
 80021b6:	460c      	mov	r4, r1
 80021b8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021ba:	f3af 8000 	nop.w
 80021be:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021c2:	42a5      	cmp	r5, r4
 80021c4:	d1f9      	bne.n	80021ba <_read+0xa>
	}

return len;
}
 80021c6:	4630      	mov	r0, r6
 80021c8:	bd70      	pop	{r4, r5, r6, pc}
 80021ca:	bf00      	nop

080021cc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021cc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	1e16      	subs	r6, r2, #0
 80021d0:	dd07      	ble.n	80021e2 <_write+0x16>
 80021d2:	460c      	mov	r4, r1
 80021d4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021d6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021da:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021de:	42ac      	cmp	r4, r5
 80021e0:	d1f9      	bne.n	80021d6 <_write+0xa>
	}
	return len;
}
 80021e2:	4630      	mov	r0, r6
 80021e4:	bd70      	pop	{r4, r5, r6, pc}
 80021e6:	bf00      	nop

080021e8 <_close>:

int _close(int file)
{
	return -1;
}
 80021e8:	f04f 30ff 	mov.w	r0, #4294967295
 80021ec:	4770      	bx	lr
 80021ee:	bf00      	nop

080021f0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021f4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021f6:	2000      	movs	r0, #0
 80021f8:	4770      	bx	lr
 80021fa:	bf00      	nop

080021fc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021fc:	2001      	movs	r0, #1
 80021fe:	4770      	bx	lr

08002200 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002200:	2000      	movs	r0, #0
 8002202:	4770      	bx	lr

08002204 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002204:	4a0b      	ldr	r2, [pc, #44]	; (8002234 <_sbrk+0x30>)
{
 8002206:	b508      	push	{r3, lr}
 8002208:	4603      	mov	r3, r0
	if (heap_end == 0)
 800220a:	6810      	ldr	r0, [r2, #0]
 800220c:	b128      	cbz	r0, 800221a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d807      	bhi.n	8002226 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002216:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002218:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800221a:	4807      	ldr	r0, [pc, #28]	; (8002238 <_sbrk+0x34>)
 800221c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800221e:	4403      	add	r3, r0
 8002220:	4669      	mov	r1, sp
 8002222:	428b      	cmp	r3, r1
 8002224:	d9f7      	bls.n	8002216 <_sbrk+0x12>
		errno = ENOMEM;
 8002226:	f026 fc81 	bl	8028b2c <__errno>
 800222a:	230c      	movs	r3, #12
 800222c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800222e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002232:	bd08      	pop	{r3, pc}
 8002234:	200028e8 	.word	0x200028e8
 8002238:	20014408 	.word	0x20014408

0800223c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800223c:	4770      	bx	lr

0800223e <_ZN23ApplicationFontProviderD0Ev>:
 800223e:	b510      	push	{r4, lr}
 8002240:	2104      	movs	r1, #4
 8002242:	4604      	mov	r4, r0
 8002244:	f025 fb83 	bl	802794e <_ZdlPvj>
 8002248:	4620      	mov	r0, r4
 800224a:	bd10      	pop	{r4, pc}

0800224c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800224c:	b508      	push	{r3, lr}
    switch (typography)
 800224e:	2903      	cmp	r1, #3
 8002250:	d813      	bhi.n	800227a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002252:	e8df f001 	tbb	[pc, r1]
 8002256:	0602      	.short	0x0602
 8002258:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800225a:	f005 fe33 	bl	8007ec4 <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002260:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002262:	f005 fe2f 	bl	8007ec4 <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	6840      	ldr	r0, [r0, #4]
 8002268:	e7fa      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800226a:	f005 fe2b 	bl	8007ec4 <_ZN17TypedTextDatabase8getFontsEv>
 800226e:	6880      	ldr	r0, [r0, #8]
 8002270:	e7f6      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002272:	f005 fe27 	bl	8007ec4 <_ZN17TypedTextDatabase8getFontsEv>
 8002276:	68c0      	ldr	r0, [r0, #12]
 8002278:	e7f2      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800227a:	2000      	movs	r0, #0
 800227c:	e7f0      	b.n	8002260 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002280 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002280:	4800      	ldr	r0, [pc, #0]	; (8002284 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002282:	4770      	bx	lr
 8002284:	08029e88 	.word	0x08029e88

08002288 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002288:	200d      	movs	r0, #13
 800228a:	4770      	bx	lr

0800228c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800228c:	b513      	push	{r0, r1, r4, lr}
 800228e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002290:	b151      	cbz	r1, 80022a8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002292:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002294:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002296:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800229a:	aa01      	add	r2, sp, #4
 800229c:	689c      	ldr	r4, [r3, #8]
 800229e:	f10d 0303 	add.w	r3, sp, #3
 80022a2:	47a0      	blx	r4
        return glyph;
    }
 80022a4:	b002      	add	sp, #8
 80022a6:	bd10      	pop	{r4, pc}
            return 0;
 80022a8:	4608      	mov	r0, r1
 80022aa:	e7fb      	b.n	80022a4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080022ac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80022ac:	89c0      	ldrh	r0, [r0, #14]
 80022ae:	4770      	bx	lr

080022b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022b0:	8a00      	ldrh	r0, [r0, #16]
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022b4:	88c0      	ldrh	r0, [r0, #6]
 80022b6:	4770      	bx	lr

080022b8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022b8:	8880      	ldrh	r0, [r0, #4]
 80022ba:	4770      	bx	lr

080022bc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022bc:	7a80      	ldrb	r0, [r0, #10]
    }
 80022be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022c2:	4770      	bx	lr

080022c4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022c4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022c6:	09c0      	lsrs	r0, r0, #7
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ca:	4770      	bx	lr

080022cc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022cc:	4770      	bx	lr

080022ce <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022d0:	4770      	bx	lr

080022d2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022d2:	4770      	bx	lr

080022d4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022d4:	4770      	bx	lr

080022d6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022d6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022d8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022da:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022dc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022de:	466d      	mov	r5, sp
 80022e0:	4601      	mov	r1, r0
 80022e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022e6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022e8:	4628      	mov	r0, r5
 80022ea:	4798      	blx	r3
 80022ec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022f0:	343c      	adds	r4, #60	; 0x3c
 80022f2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022f6:	b005      	add	sp, #20
 80022f8:	bd30      	pop	{r4, r5, pc}

080022fa <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022fa:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022fc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022fe:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002300:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002302:	466d      	mov	r5, sp
 8002304:	4601      	mov	r1, r0
 8002306:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800230a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800230c:	4628      	mov	r0, r5
 800230e:	4798      	blx	r3
 8002310:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002314:	343c      	adds	r4, #60	; 0x3c
 8002316:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800231a:	b005      	add	sp, #20
 800231c:	bd30      	pop	{r4, r5, pc}

0800231e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800231e:	2200      	movs	r2, #0
 8002320:	8002      	strh	r2, [r0, #0]
 8002322:	8042      	strh	r2, [r0, #2]
 8002324:	8082      	strh	r2, [r0, #4]
 8002326:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002328:	4770      	bx	lr

0800232a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800232a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800232e:	4770      	bx	lr

08002330 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002330:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002332:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002334:	4604      	mov	r4, r0
        setX(x);
 8002336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002338:	4615      	mov	r5, r2
        setX(x);
 800233a:	4798      	blx	r3
        setBaselineY(baselineY);
 800233c:	6823      	ldr	r3, [r4, #0]
 800233e:	4629      	mov	r1, r5
 8002340:	4620      	mov	r0, r4
 8002342:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002344:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002348:	4718      	bx	r3

0800234a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800234a:	2000      	movs	r0, #0
 800234c:	4770      	bx	lr

0800234e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800234e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002350:	4770      	bx	lr

08002352 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002352:	4770      	bx	lr

08002354 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002354:	4770      	bx	lr

08002356 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002356:	4770      	bx	lr

08002358 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002358:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800235a:	68c2      	ldr	r2, [r0, #12]
 800235c:	6844      	ldr	r4, [r0, #4]
 800235e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002360:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002362:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002366:	07d2      	lsls	r2, r2, #31
 8002368:	bf48      	it	mi
 800236a:	5962      	ldrmi	r2, [r4, r5]
 800236c:	689b      	ldr	r3, [r3, #8]
    }
 800236e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002370:	bf48      	it	mi
 8002372:	58d3      	ldrmi	r3, [r2, r3]
 8002374:	4718      	bx	r3

08002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002376:	6843      	ldr	r3, [r0, #4]
 8002378:	b12b      	cbz	r3, 8002386 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800237a:	6883      	ldr	r3, [r0, #8]
 800237c:	b92b      	cbnz	r3, 800238a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800237e:	68c0      	ldr	r0, [r0, #12]
 8002380:	f000 0001 	and.w	r0, r0, #1
 8002384:	4770      	bx	lr
 8002386:	4618      	mov	r0, r3
 8002388:	4770      	bx	lr
 800238a:	2001      	movs	r0, #1
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800238e:	b510      	push	{r4, lr}
    }
 8002390:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002392:	4604      	mov	r4, r0
    }
 8002394:	f025 fadb 	bl	802794e <_ZdlPvj>
 8002398:	4620      	mov	r0, r4
 800239a:	bd10      	pop	{r4, pc}

0800239c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800239c:	b510      	push	{r4, lr}
 800239e:	214c      	movs	r1, #76	; 0x4c
 80023a0:	4604      	mov	r4, r0
 80023a2:	f025 fad4 	bl	802794e <_ZdlPvj>
 80023a6:	4620      	mov	r0, r4
 80023a8:	bd10      	pop	{r4, pc}

080023aa <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023aa:	b510      	push	{r4, lr}
 80023ac:	2110      	movs	r1, #16
 80023ae:	4604      	mov	r4, r0
 80023b0:	f025 facd 	bl	802794e <_ZdlPvj>
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}

080023b8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023b8:	b510      	push	{r4, lr}
 80023ba:	4b03      	ldr	r3, [pc, #12]	; (80023c8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023bc:	6003      	str	r3, [r0, #0]
 80023be:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c0:	f011 f864 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c4:	4620      	mov	r0, r4
 80023c6:	bd10      	pop	{r4, pc}
 80023c8:	0802a1f4 	.word	0x0802a1f4

080023cc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023cc:	b507      	push	{r0, r1, r2, lr}
 80023ce:	4b07      	ldr	r3, [pc, #28]	; (80023ec <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023d0:	6003      	str	r3, [r0, #0]
 80023d2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023d4:	f011 f85a 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023d8:	9801      	ldr	r0, [sp, #4]
 80023da:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80023de:	f025 fab6 	bl	802794e <_ZdlPvj>
 80023e2:	9801      	ldr	r0, [sp, #4]
 80023e4:	b003      	add	sp, #12
 80023e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023ea:	bf00      	nop
 80023ec:	0802a1f4 	.word	0x0802a1f4

080023f0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023f0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023f2:	f7fe ff3f 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023f6:	bd08      	pop	{r3, pc}

080023f8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023fa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023fc:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023fe:	4b12      	ldr	r3, [pc, #72]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002400:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002402:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002404:	b28d      	uxth	r5, r1
 8002406:	b92b      	cbnz	r3, 8002414 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002408:	4b10      	ldr	r3, [pc, #64]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800240a:	4a11      	ldr	r2, [pc, #68]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800240c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800240e:	4811      	ldr	r0, [pc, #68]	; (8002454 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002410:	f026 f88e 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002414:	4910      	ldr	r1, [pc, #64]	; (8002458 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002416:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002418:	8809      	ldrh	r1, [r1, #0]
 800241a:	4291      	cmp	r1, r2
 800241c:	d803      	bhi.n	8002426 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800241e:	4b0f      	ldr	r3, [pc, #60]	; (800245c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002420:	4a0b      	ldr	r2, [pc, #44]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002422:	216d      	movs	r1, #109	; 0x6d
 8002424:	e7f3      	b.n	800240e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002426:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800242a:	4b0d      	ldr	r3, [pc, #52]	; (8002460 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002432:	6803      	ldr	r3, [r0, #0]
 8002434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002436:	4798      	blx	r3
 8002438:	1a28      	subs	r0, r5, r0
 800243a:	b201      	sxth	r1, r0
 800243c:	4633      	mov	r3, r6
 800243e:	4620      	mov	r0, r4
    }
 8002440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002444:	4718      	bx	r3
 8002446:	bf00      	nop
 8002448:	20013824 	.word	0x20013824
 800244c:	08029f8c 	.word	0x08029f8c
 8002450:	08029fce 	.word	0x08029fce
 8002454:	0802a009 	.word	0x0802a009
 8002458:	20013828 	.word	0x20013828
 800245c:	0802a050 	.word	0x0802a050
 8002460:	2001382c 	.word	0x2001382c

08002464 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002464:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002466:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800246a:	4299      	cmp	r1, r3
{
 800246c:	4604      	mov	r4, r0
 800246e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002470:	d103      	bne.n	800247a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002472:	f012 fd0d 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002476:	f001 f921 	bl	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800247a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800247e:	429d      	cmp	r5, r3
 8002480:	d103      	bne.n	800248a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002482:	f012 fd05 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002486:	f001 f9d9 	bl	800383c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800248a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800248e:	42a5      	cmp	r5, r4
 8002490:	d105      	bne.n	800249e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002492:	f012 fcfd 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800249a:	f001 b9df 	b.w	800385c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800249e:	bd38      	pop	{r3, r4, r5, pc}

080024a0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80024a0:	2200      	movs	r2, #0
 80024a2:	f04f 31ff 	mov.w	r1, #4294967295
 80024a6:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80024aa:	6082      	str	r2, [r0, #8]
    }
 80024ac:	4770      	bx	lr

080024ae <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80024ae:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024b0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024b2:	4604      	mov	r4, r0
        setX(x);
 80024b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80024b6:	4615      	mov	r5, r2
        setX(x);
 80024b8:	4798      	blx	r3
        setY(y);
 80024ba:	6823      	ldr	r3, [r4, #0]
 80024bc:	4629      	mov	r1, r5
 80024be:	4620      	mov	r0, r4
 80024c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80024c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024c6:	4718      	bx	r3

080024c8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024c8:	b570      	push	{r4, r5, r6, lr}
 80024ca:	4604      	mov	r4, r0
 80024cc:	461d      	mov	r5, r3
 80024ce:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80024d2:	f7ff ffec 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024d6:	6823      	ldr	r3, [r4, #0]
 80024d8:	4629      	mov	r1, r5
 80024da:	4620      	mov	r0, r4
 80024dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024de:	4798      	blx	r3
        setHeight(height);
 80024e0:	6823      	ldr	r3, [r4, #0]
 80024e2:	4631      	mov	r1, r6
 80024e4:	4620      	mov	r0, r4
 80024e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024ec:	4718      	bx	r3
	...

080024f0 <_ZN8touchgfx6WidgetC1Ev>:
 80024f0:	2200      	movs	r2, #0
 80024f2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024f6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024fe:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002502:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002506:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002508:	4a01      	ldr	r2, [pc, #4]	; (8002510 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800250a:	6002      	str	r2, [r0, #0]
 800250c:	4770      	bx	lr
 800250e:	bf00      	nop
 8002510:	0802a0d4 	.word	0x0802a0d4

08002514 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002514:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002516:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002518:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800251a:	2100      	movs	r1, #0
 800251c:	f026 fa0d 	bl	802893a <memset>
 8002520:	4620      	mov	r0, r4
 8002522:	f7ff ffe5 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002526:	4b0a      	ldr	r3, [pc, #40]	; (8002550 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002528:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800252a:	4b0a      	ldr	r3, [pc, #40]	; (8002554 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800252c:	62a3      	str	r3, [r4, #40]	; 0x28
 800252e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002532:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002534:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002538:	2300      	movs	r3, #0
 800253a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800253e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002542:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002546:	8723      	strh	r3, [r4, #56]	; 0x38
 8002548:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800254a:	4620      	mov	r0, r4
 800254c:	bd10      	pop	{r4, pc}
 800254e:	bf00      	nop
 8002550:	0802c9f4 	.word	0x0802c9f4
 8002554:	0802a13c 	.word	0x0802a13c

08002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002558:	4b1a      	ldr	r3, [pc, #104]	; (80025c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800255a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800255c:	881b      	ldrh	r3, [r3, #0]
 800255e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002560:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002562:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002564:	d92b      	bls.n	80025be <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002566:	4b18      	ldr	r3, [pc, #96]	; (80025c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	b92b      	cbnz	r3, 8002578 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800256c:	4b17      	ldr	r3, [pc, #92]	; (80025cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800256e:	4a18      	ldr	r2, [pc, #96]	; (80025d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002570:	4818      	ldr	r0, [pc, #96]	; (80025d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002572:	216c      	movs	r1, #108	; 0x6c
 8002574:	f025 ffdc 	bl	8028530 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002578:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800257c:	4b16      	ldr	r3, [pc, #88]	; (80025d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002584:	4b15      	ldr	r3, [pc, #84]	; (80025dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002586:	6818      	ldr	r0, [r3, #0]
 8002588:	f005 fc8c 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800258c:	682b      	ldr	r3, [r5, #0]
 800258e:	9001      	str	r0, [sp, #4]
 8002590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002592:	4628      	mov	r0, r5
 8002594:	4798      	blx	r3
 8002596:	682b      	ldr	r3, [r5, #0]
 8002598:	9901      	ldr	r1, [sp, #4]
 800259a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800259c:	4604      	mov	r4, r0
 800259e:	4628      	mov	r0, r5
 80025a0:	4798      	blx	r3
 80025a2:	682b      	ldr	r3, [r5, #0]
 80025a4:	9901      	ldr	r1, [sp, #4]
 80025a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025a8:	fb14 f400 	smulbb	r4, r4, r0
 80025ac:	4628      	mov	r0, r5
 80025ae:	4798      	blx	r3
 80025b0:	b2a4      	uxth	r4, r4
 80025b2:	1823      	adds	r3, r4, r0
 80025b4:	b21b      	sxth	r3, r3
 80025b6:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80025ba:	b002      	add	sp, #8
 80025bc:	bd70      	pop	{r4, r5, r6, pc}
 80025be:	2300      	movs	r3, #0
 80025c0:	e7f9      	b.n	80025b6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80025c2:	bf00      	nop
 80025c4:	20013828 	.word	0x20013828
 80025c8:	20013824 	.word	0x20013824
 80025cc:	08029f8c 	.word	0x08029f8c
 80025d0:	08029fce 	.word	0x08029fce
 80025d4:	0802a009 	.word	0x0802a009
 80025d8:	2001382c 	.word	0x2001382c
 80025dc:	20013830 	.word	0x20013830

080025e0 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025e4:	ed2d 8b06 	vpush	{d8-d10}
 80025e8:	4604      	mov	r4, r0
 80025ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025ec:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025ee:	2500      	movs	r5, #0
 80025f0:	f014 f8ce 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 80025f4:	4b66      	ldr	r3, [pc, #408]	; (8002790 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80025f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025f8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025fc:	2226      	movs	r2, #38	; 0x26
 80025fe:	4629      	mov	r1, r5
 8002600:	4658      	mov	r0, fp
 8002602:	f026 f99a 	bl	802893a <memset>
 8002606:	4658      	mov	r0, fp
 8002608:	f7ff ff72 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 800260c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002610:	26ff      	movs	r6, #255	; 0xff
 8002612:	4b60      	ldr	r3, [pc, #384]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8002614:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002616:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002618:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800261c:	4629      	mov	r1, r5
 800261e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002622:	4650      	mov	r0, sl
        : color(col)
 8002624:	66a5      	str	r5, [r4, #104]	; 0x68
 8002626:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800262a:	f026 f986 	bl	802893a <memset>
 800262e:	4650      	mov	r0, sl
 8002630:	f7ff ff5e 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002634:	4b58      	ldr	r3, [pc, #352]	; (8002798 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002636:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002638:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800263c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002640:	a90a      	add	r1, sp, #40	; 0x28
 8002642:	4650      	mov	r0, sl
 8002644:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002648:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800264c:	f00f ff17 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002650:	4648      	mov	r0, r9
 8002652:	f7ff ff5f 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002656:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800265a:	4b50      	ldr	r3, [pc, #320]	; (800279c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800265c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002660:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002664:	4638      	mov	r0, r7
 8002666:	f00e fdd3 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 800266a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800266e:	4618      	mov	r0, r3
 8002670:	9303      	str	r3, [sp, #12]
 8002672:	f7fe fe25 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002676:	4b4a      	ldr	r3, [pc, #296]	; (80027a0 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002678:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800267c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002680:	3324      	adds	r3, #36	; 0x24
 8002682:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002686:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800268a:	4640      	mov	r0, r8
 800268c:	f7ff ff42 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002690:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002694:	4618      	mov	r0, r3
 8002696:	ee08 3a10 	vmov	s16, r3
 800269a:	f7ff ff3b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800269e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80026a2:	4618      	mov	r0, r3
 80026a4:	ee08 3a90 	vmov	s17, r3
 80026a8:	f7ff ff34 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80026ac:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80026b0:	4618      	mov	r0, r3
 80026b2:	ee09 3a10 	vmov	s18, r3
 80026b6:	f010 f823 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026ba:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80026be:	4618      	mov	r0, r3
 80026c0:	ee09 3a90 	vmov	s19, r3
 80026c4:	f010 f81c 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026c8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80026cc:	4618      	mov	r0, r3
 80026ce:	ee0a 3a10 	vmov	s20, r3
 80026d2:	f010 f815 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80026d6:	4a33      	ldr	r2, [pc, #204]	; (80027a4 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80026d8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80026dc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80026e0:	4a31      	ldr	r2, [pc, #196]	; (80027a8 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026e2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026e6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80026ea:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80026ee:	f010 fec3 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026f6:	462a      	mov	r2, r5
 80026f8:	4658      	mov	r0, fp
 80026fa:	9300      	str	r3, [sp, #0]
 80026fc:	4629      	mov	r1, r5
 80026fe:	23f0      	movs	r3, #240	; 0xf0
 8002700:	f7ff fee2 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002704:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002706:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800270a:	66a3      	str	r3, [r4, #104]	; 0x68
 800270c:	4659      	mov	r1, fp
 800270e:	4630      	mov	r0, r6
 8002710:	f00d f926 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002714:	462a      	mov	r2, r5
 8002716:	4650      	mov	r0, sl
 8002718:	4629      	mov	r1, r5
 800271a:	f7ff fec8 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800271e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002720:	4650      	mov	r0, sl
 8002722:	a90a      	add	r1, sp, #40	; 0x28
 8002724:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002728:	f00f fea9 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800272c:	4651      	mov	r1, sl
 800272e:	4630      	mov	r0, r6
 8002730:	f00d f916 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002734:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002738:	2159      	movs	r1, #89	; 0x59
 800273a:	4648      	mov	r0, r9
 800273c:	f7ff feb7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002740:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002744:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002748:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800274c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002750:	4650      	mov	r0, sl
 8002752:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002756:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800275a:	4649      	mov	r1, r9
 800275c:	4798      	blx	r3
 800275e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002762:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002766:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800276a:	4b10      	ldr	r3, [pc, #64]	; (80027ac <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800276c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800276e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002772:	b92b      	cbnz	r3, 8002780 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002774:	4b0e      	ldr	r3, [pc, #56]	; (80027b0 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002776:	4a0f      	ldr	r2, [pc, #60]	; (80027b4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002778:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800277a:	480f      	ldr	r0, [pc, #60]	; (80027b8 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800277c:	f025 fed8 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002780:	4b0e      	ldr	r3, [pc, #56]	; (80027bc <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002782:	881b      	ldrh	r3, [r3, #0]
 8002784:	2b14      	cmp	r3, #20
 8002786:	d81d      	bhi.n	80027c4 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002788:	4b0d      	ldr	r3, [pc, #52]	; (80027c0 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800278a:	4a0a      	ldr	r2, [pc, #40]	; (80027b4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800278c:	2161      	movs	r1, #97	; 0x61
 800278e:	e7f4      	b.n	800277a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002790:	0802a1f4 	.word	0x0802a1f4
 8002794:	0802ca84 	.word	0x0802ca84
 8002798:	0802cc4c 	.word	0x0802cc4c
 800279c:	0802a14c 	.word	0x0802a14c
 80027a0:	0802c7b8 	.word	0x0802c7b8
 80027a4:	0802a1dc 	.word	0x0802a1dc
 80027a8:	08002465 	.word	0x08002465
 80027ac:	20013824 	.word	0x20013824
 80027b0:	08029f8c 	.word	0x08029f8c
 80027b4:	0802a08e 	.word	0x0802a08e
 80027b8:	0802a009 	.word	0x0802a009
 80027bc:	20013828 	.word	0x20013828
 80027c0:	0802a050 	.word	0x0802a050
        return texts->getText(typedTextId);
 80027c4:	4b93      	ldr	r3, [pc, #588]	; (8002a14 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80027c6:	2114      	movs	r1, #20
 80027c8:	6818      	ldr	r0, [r3, #0]
 80027ca:	f005 fb6b 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 80027ce:	4a92      	ldr	r2, [pc, #584]	; (8002a18 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 80027d0:	4603      	mov	r3, r0
 80027d2:	2104      	movs	r1, #4
 80027d4:	4650      	mov	r0, sl
 80027d6:	f015 fcbf 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80027da:	4648      	mov	r0, r9
        wc1 = value;
 80027dc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80027e0:	f00f fa52 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80027e4:	4b8d      	ldr	r3, [pc, #564]	; (8002a1c <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 80027e6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80027e8:	a90a      	add	r1, sp, #40	; 0x28
 80027ea:	2315      	movs	r3, #21
 80027ec:	4648      	mov	r0, r9
 80027ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80027f2:	f00f fa69 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027f6:	4649      	mov	r1, r9
 80027f8:	4630      	mov	r0, r6
 80027fa:	f00d f8b1 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80027fe:	230a      	movs	r3, #10
 8002800:	9300      	str	r3, [sp, #0]
 8002802:	2232      	movs	r2, #50	; 0x32
 8002804:	23f0      	movs	r3, #240	; 0xf0
 8002806:	4629      	mov	r1, r5
 8002808:	4638      	mov	r0, r7
 800280a:	f7ff fe5d 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 800280e:	9b03      	ldr	r3, [sp, #12]
 8002810:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002814:	22a0      	movs	r2, #160	; 0xa0
 8002816:	4611      	mov	r1, r2
 8002818:	4638      	mov	r0, r7
 800281a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800281e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002822:	f00e fe0b 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002826:	22a0      	movs	r2, #160	; 0xa0
 8002828:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800282c:	4638      	mov	r0, r7
 800282e:	f00e fe10 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002832:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002836:	2b20      	cmp	r3, #32
 8002838:	d005      	beq.n	8002846 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800283a:	2320      	movs	r3, #32
 800283c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002840:	4638      	mov	r0, r7
 8002842:	f00e fd05 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002846:	4638      	mov	r0, r7
 8002848:	2101      	movs	r1, #1
 800284a:	f00e fe0d 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800284e:	4639      	mov	r1, r7
 8002850:	4630      	mov	r0, r6
 8002852:	ad04      	add	r5, sp, #16
        color = newColor;
 8002854:	f04f 37ff 	mov.w	r7, #4294967295
 8002858:	f00d f882 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800285c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002860:	223c      	movs	r2, #60	; 0x3c
 8002862:	4640      	mov	r0, r8
 8002864:	2146      	movs	r1, #70	; 0x46
 8002866:	f7ff fe22 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800286a:	4641      	mov	r1, r8
 800286c:	4628      	mov	r0, r5
        color = newColor;
 800286e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002872:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002876:	f00e ff8d 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800287a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800287e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002882:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002886:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002a1c <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800288a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800288e:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002890:	a90a      	add	r1, sp, #40	; 0x28
 8002892:	4640      	mov	r0, r8
 8002894:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002898:	f00f fa16 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800289c:	4641      	mov	r1, r8
 800289e:	4630      	mov	r0, r6
 80028a0:	f00d f85e 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80028a4:	ee18 0a10 	vmov	r0, s16
 80028a8:	2223      	movs	r2, #35	; 0x23
 80028aa:	2145      	movs	r1, #69	; 0x45
 80028ac:	f7ff fdff 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80028b0:	ee18 1a10 	vmov	r1, s16
 80028b4:	4628      	mov	r0, r5
        color = newColor;
 80028b6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80028ba:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80028be:	f00e ff69 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028c6:	ee18 3a10 	vmov	r3, s16
 80028ca:	333c      	adds	r3, #60	; 0x3c
 80028cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80028d0:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 80028d2:	ee18 0a10 	vmov	r0, s16
 80028d6:	a90a      	add	r1, sp, #40	; 0x28
 80028d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80028dc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80028e0:	f00f f9f2 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80028e4:	ee18 1a10 	vmov	r1, s16
 80028e8:	4630      	mov	r0, r6
 80028ea:	f00d f839 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80028ee:	ee18 0a90 	vmov	r0, s17
 80028f2:	220c      	movs	r2, #12
 80028f4:	2136      	movs	r1, #54	; 0x36
 80028f6:	f7ff fdda 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80028fa:	ee18 1a90 	vmov	r1, s17
 80028fe:	4628      	mov	r0, r5
        color = newColor;
 8002900:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002904:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002908:	f00e ff44 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800290c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002910:	ee18 3a90 	vmov	r3, s17
 8002914:	333c      	adds	r3, #60	; 0x3c
 8002916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800291a:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800291c:	ee18 0a90 	vmov	r0, s17
 8002920:	a90a      	add	r1, sp, #40	; 0x28
 8002922:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002926:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800292a:	f00f f9cd 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800292e:	ee18 1a90 	vmov	r1, s17
 8002932:	4630      	mov	r0, r6
 8002934:	f00d f814 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002938:	ee19 0a10 	vmov	r0, s18
 800293c:	22f0      	movs	r2, #240	; 0xf0
 800293e:	2121      	movs	r1, #33	; 0x21
 8002940:	f7ff fdb5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002944:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002948:	aa0a      	add	r2, sp, #40	; 0x28
 800294a:	f04f 0802 	mov.w	r8, #2
 800294e:	a909      	add	r1, sp, #36	; 0x24
 8002950:	ee19 0a10 	vmov	r0, s18
 8002954:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002958:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800295c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002960:	f00f fb97 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002964:	2348      	movs	r3, #72	; 0x48
 8002966:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800296a:	3510      	adds	r5, #16
        updateTextPosition();
 800296c:	ee19 0a10 	vmov	r0, s18
 8002970:	f7ff fdf2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002974:	ee19 1a10 	vmov	r1, s18
 8002978:	4630      	mov	r0, r6
        colorPressed = col;
 800297a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800297e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002982:	f00c ffed 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002986:	ee19 0a90 	vmov	r0, s19
 800298a:	22aa      	movs	r2, #170	; 0xaa
 800298c:	2121      	movs	r1, #33	; 0x21
 800298e:	f7ff fd8e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002992:	aa0a      	add	r2, sp, #40	; 0x28
 8002994:	a909      	add	r1, sp, #36	; 0x24
 8002996:	ee19 0a90 	vmov	r0, s19
 800299a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800299e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029a2:	f00f fb76 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029a6:	2347      	movs	r3, #71	; 0x47
 80029a8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80029ac:	ee19 0a90 	vmov	r0, s19
 80029b0:	f7ff fdd2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029b4:	ee19 1a90 	vmov	r1, s19
 80029b8:	4630      	mov	r0, r6
        colorPressed = col;
 80029ba:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80029be:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80029c2:	f00c ffcd 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80029c6:	ee1a 0a10 	vmov	r0, s20
 80029ca:	2264      	movs	r2, #100	; 0x64
 80029cc:	2121      	movs	r1, #33	; 0x21
 80029ce:	f7ff fd6e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029d2:	aa0a      	add	r2, sp, #40	; 0x28
 80029d4:	a909      	add	r1, sp, #36	; 0x24
 80029d6:	ee1a 0a10 	vmov	r0, s20
 80029da:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80029de:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029e2:	f00f fb56 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029e6:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 80029e8:	ee1a 0a10 	vmov	r0, s20
 80029ec:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80029f0:	f7ff fdb2 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029f4:	4630      	mov	r0, r6
        colorPressed = col;
 80029f6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80029fa:	ee1a 1a10 	vmov	r1, s20
 80029fe:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002a02:	f00c ffad 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a06:	4620      	mov	r0, r4
 8002a08:	b00d      	add	sp, #52	; 0x34
 8002a0a:	ecbd 8b06 	vpop	{d8-d10}
 8002a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a12:	bf00      	nop
 8002a14:	20013830 	.word	0x20013830
 8002a18:	0802a0c6 	.word	0x0802a0c6
 8002a1c:	0802a13c 	.word	0x0802a13c

08002a20 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002a20:	4770      	bx	lr

08002a22 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a22:	4770      	bx	lr

08002a24 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a26:	68c2      	ldr	r2, [r0, #12]
 8002a28:	6844      	ldr	r4, [r0, #4]
 8002a2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a32:	07d2      	lsls	r2, r2, #31
 8002a34:	bf48      	it	mi
 8002a36:	5962      	ldrmi	r2, [r4, r5]
 8002a38:	689b      	ldr	r3, [r3, #8]
    }
 8002a3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a3c:	bf48      	it	mi
 8002a3e:	58d3      	ldrmi	r3, [r2, r3]
 8002a40:	4718      	bx	r3

08002a42 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a42:	6843      	ldr	r3, [r0, #4]
 8002a44:	b12b      	cbz	r3, 8002a52 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a46:	6883      	ldr	r3, [r0, #8]
 8002a48:	b92b      	cbnz	r3, 8002a56 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a4a:	68c0      	ldr	r0, [r0, #12]
 8002a4c:	f000 0001 	and.w	r0, r0, #1
 8002a50:	4770      	bx	lr
 8002a52:	4618      	mov	r0, r3
 8002a54:	4770      	bx	lr
 8002a56:	2001      	movs	r0, #1
    }
 8002a58:	4770      	bx	lr

08002a5a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a5a:	b510      	push	{r4, lr}
 8002a5c:	2110      	movs	r1, #16
 8002a5e:	4604      	mov	r4, r0
 8002a60:	f024 ff75 	bl	802794e <_ZdlPvj>
 8002a64:	4620      	mov	r0, r4
 8002a66:	bd10      	pop	{r4, pc}

08002a68 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	4b03      	ldr	r3, [pc, #12]	; (8002a78 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002a6c:	6003      	str	r3, [r0, #0]
 8002a6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a70:	f010 fd0c 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a74:	4620      	mov	r0, r4
 8002a76:	bd10      	pop	{r4, pc}
 8002a78:	0802a240 	.word	0x0802a240

08002a7c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a7c:	b507      	push	{r0, r1, r2, lr}
 8002a7e:	4b07      	ldr	r3, [pc, #28]	; (8002a9c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002a80:	6003      	str	r3, [r0, #0]
 8002a82:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a84:	f010 fd02 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a88:	9801      	ldr	r0, [sp, #4]
 8002a8a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002a8e:	f024 ff5e 	bl	802794e <_ZdlPvj>
 8002a92:	9801      	ldr	r0, [sp, #4]
 8002a94:	b003      	add	sp, #12
 8002a96:	f85d fb04 	ldr.w	pc, [sp], #4
 8002a9a:	bf00      	nop
 8002a9c:	0802a240 	.word	0x0802a240

08002aa0 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002aa0:	3098      	adds	r0, #152	; 0x98
 8002aa2:	4288      	cmp	r0, r1
{
 8002aa4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002aa6:	d105      	bne.n	8002ab4 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002aa8:	f012 f9f2 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002aac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002ab0:	f000 beb4 	b.w	800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002ab4:	bd08      	pop	{r3, pc}
	...

08002ab8 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002abc:	ed2d 8b02 	vpush	{d8}
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002ac4:	46a1      	mov	r9, r4
 8002ac6:	2500      	movs	r5, #0
 8002ac8:	f013 fe62 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8002acc:	4ba5      	ldr	r3, [pc, #660]	; (8002d64 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002ace:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ad0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002ad4:	2226      	movs	r2, #38	; 0x26
 8002ad6:	4629      	mov	r1, r5
 8002ad8:	4648      	mov	r0, r9
 8002ada:	f025 ff2e 	bl	802893a <memset>
 8002ade:	4648      	mov	r0, r9
 8002ae0:	f7ff fd06 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002ae4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ae8:	26ff      	movs	r6, #255	; 0xff
 8002aea:	4b9f      	ldr	r3, [pc, #636]	; (8002d68 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002aec:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002aee:	2226      	movs	r2, #38	; 0x26
 8002af0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002af4:	4629      	mov	r1, r5
 8002af6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002afa:	4640      	mov	r0, r8
 8002afc:	66a5      	str	r5, [r4, #104]	; 0x68
 8002afe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002b02:	f025 ff1a 	bl	802893a <memset>
 8002b06:	4640      	mov	r0, r8
 8002b08:	f7ff fcf2 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002b0c:	4b97      	ldr	r3, [pc, #604]	; (8002d6c <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002b0e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002b10:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b14:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002b18:	a90a      	add	r1, sp, #40	; 0x28
 8002b1a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002b1e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002b20:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002b24:	f00f fcab 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b28:	4658      	mov	r0, fp
 8002b2a:	f00f fde9 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b2e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002b32:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002b36:	4618      	mov	r0, r3
 8002b38:	ee08 3a90 	vmov	s17, r3
 8002b3c:	f7ff fcea 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002b40:	4638      	mov	r0, r7
 8002b42:	f00e fb65 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 8002b46:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002b4a:	4618      	mov	r0, r3
 8002b4c:	9303      	str	r3, [sp, #12]
 8002b4e:	f7fe fbb7 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002b52:	4b87      	ldr	r3, [pc, #540]	; (8002d70 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002b54:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002b58:	3324      	adds	r3, #36	; 0x24
 8002b5a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002b5e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002b62:	4618      	mov	r0, r3
 8002b64:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002b68:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002b6c:	ee08 3a10 	vmov	s16, r3
 8002b70:	f7ff fcd0 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002b74:	4650      	mov	r0, sl
 8002b76:	f7ff fccd 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b7a:	4a7e      	ldr	r2, [pc, #504]	; (8002d74 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002b7c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b80:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002b84:	4a7c      	ldr	r2, [pc, #496]	; (8002d78 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b86:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002b8a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002b8e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002b92:	f010 fc71 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002b96:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002b9a:	462a      	mov	r2, r5
 8002b9c:	4648      	mov	r0, r9
 8002b9e:	9300      	str	r3, [sp, #0]
 8002ba0:	4629      	mov	r1, r5
 8002ba2:	23f0      	movs	r3, #240	; 0xf0
 8002ba4:	f7ff fc90 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ba8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002baa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002bae:	66a3      	str	r3, [r4, #104]	; 0x68
 8002bb0:	4649      	mov	r1, r9
 8002bb2:	4630      	mov	r0, r6
 8002bb4:	f00c fed4 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002bb8:	462a      	mov	r2, r5
 8002bba:	4640      	mov	r0, r8
 8002bbc:	4629      	mov	r1, r5
 8002bbe:	f7ff fc76 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002bc2:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002bc6:	4640      	mov	r0, r8
 8002bc8:	a90a      	add	r1, sp, #40	; 0x28
 8002bca:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002bce:	f00f fc56 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bd2:	4641      	mov	r1, r8
 8002bd4:	4630      	mov	r0, r6
 8002bd6:	f00c fec3 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002bda:	4658      	mov	r0, fp
 8002bdc:	f240 1201 	movw	r2, #257	; 0x101
 8002be0:	2121      	movs	r1, #33	; 0x21
 8002be2:	f7ff fc64 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002be6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002be8:	aa0a      	add	r2, sp, #40	; 0x28
 8002bea:	a909      	add	r1, sp, #36	; 0x24
 8002bec:	4658      	mov	r0, fp
 8002bee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002bf2:	2302      	movs	r3, #2
 8002bf4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002bf8:	f00f fa4b 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002bfc:	4658      	mov	r0, fp
 8002bfe:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002c02:	f7ff fca9 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002c06:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002c0a:	330c      	adds	r3, #12
        color = col;
 8002c0c:	f04f 39ff 	mov.w	r9, #4294967295
 8002c10:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002c14:	4659      	mov	r1, fp
 8002c16:	4630      	mov	r0, r6
        colorPressed = col;
 8002c18:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002c1c:	f00c fea0 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c20:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002c24:	223c      	movs	r2, #60	; 0x3c
 8002c26:	ee18 0a90 	vmov	r0, s17
 8002c2a:	2120      	movs	r1, #32
 8002c2c:	f7ff fc3f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002c30:	ee18 1a90 	vmov	r1, s17
 8002c34:	4640      	mov	r0, r8
        color = newColor;
 8002c36:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002c3a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002c3e:	f00e fda9 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c42:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002c46:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002c4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002c4e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002d7c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002c52:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002c56:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002c58:	ee18 0a90 	vmov	r0, s17
 8002c5c:	a90a      	add	r1, sp, #40	; 0x28
 8002c5e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c62:	f00f f831 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c66:	ee18 1a90 	vmov	r1, s17
 8002c6a:	4630      	mov	r0, r6
 8002c6c:	f00c fe78 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002c70:	230a      	movs	r3, #10
 8002c72:	9300      	str	r3, [sp, #0]
 8002c74:	2232      	movs	r2, #50	; 0x32
 8002c76:	23f0      	movs	r3, #240	; 0xf0
 8002c78:	4629      	mov	r1, r5
 8002c7a:	4638      	mov	r0, r7
 8002c7c:	f7ff fc24 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c80:	9b03      	ldr	r3, [sp, #12]
 8002c82:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c86:	22a0      	movs	r2, #160	; 0xa0
 8002c88:	4611      	mov	r1, r2
 8002c8a:	4638      	mov	r0, r7
 8002c8c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002c90:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002c94:	f00e fbd2 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c98:	22a0      	movs	r2, #160	; 0xa0
 8002c9a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002c9e:	4638      	mov	r0, r7
 8002ca0:	f00e fbd7 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002ca4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002ca8:	2b20      	cmp	r3, #32
 8002caa:	d005      	beq.n	8002cb8 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002cac:	2320      	movs	r3, #32
 8002cae:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002cb2:	4638      	mov	r0, r7
 8002cb4:	f00e facc 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002cb8:	4638      	mov	r0, r7
 8002cba:	2101      	movs	r1, #1
 8002cbc:	f00e fbd4 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002cc0:	4639      	mov	r1, r7
 8002cc2:	4630      	mov	r0, r6
 8002cc4:	f00c fe4c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002cc8:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002ccc:	ee18 0a10 	vmov	r0, s16
 8002cd0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002cd2:	2500      	movs	r5, #0
 8002cd4:	2145      	movs	r1, #69	; 0x45
 8002cd6:	f7ff fbea 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002cda:	ee18 1a10 	vmov	r1, s16
 8002cde:	4640      	mov	r0, r8
        color = newColor;
 8002ce0:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002ce4:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002ce8:	f00e fd54 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cec:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002cf0:	ee18 3a10 	vmov	r3, s16
 8002cf4:	333c      	adds	r3, #60	; 0x3c
 8002cf6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002cfa:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002cfc:	ee18 0a10 	vmov	r0, s16
 8002d00:	a90a      	add	r1, sp, #40	; 0x28
 8002d02:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d06:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d0a:	f00e ffdd 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d0e:	ee18 1a10 	vmov	r1, s16
 8002d12:	4630      	mov	r0, r6
 8002d14:	f00c fe24 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002d18:	220c      	movs	r2, #12
 8002d1a:	4650      	mov	r0, sl
 8002d1c:	2136      	movs	r1, #54	; 0x36
 8002d1e:	f7ff fbc6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002d22:	4651      	mov	r1, sl
 8002d24:	4640      	mov	r0, r8
        color = newColor;
 8002d26:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002d2a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002d2e:	f00e fd31 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d32:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d36:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002d3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d3e:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002d40:	a90a      	add	r1, sp, #40	; 0x28
 8002d42:	4650      	mov	r0, sl
 8002d44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d48:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d4c:	f00e ffbc 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d50:	4630      	mov	r0, r6
 8002d52:	4651      	mov	r1, sl
 8002d54:	f00c fe04 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d58:	4620      	mov	r0, r4
 8002d5a:	b00d      	add	sp, #52	; 0x34
 8002d5c:	ecbd 8b02 	vpop	{d8}
 8002d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d64:	0802a240 	.word	0x0802a240
 8002d68:	0802ca84 	.word	0x0802ca84
 8002d6c:	0802cc4c 	.word	0x0802cc4c
 8002d70:	0802c7b8 	.word	0x0802c7b8
 8002d74:	0802a228 	.word	0x0802a228
 8002d78:	08002aa1 	.word	0x08002aa1
 8002d7c:	0802a13c 	.word	0x0802a13c

08002d80 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002d80:	4770      	bx	lr

08002d82 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d82:	4770      	bx	lr

08002d84 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d84:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d86:	68c2      	ldr	r2, [r0, #12]
 8002d88:	6844      	ldr	r4, [r0, #4]
 8002d8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d8c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d92:	07d2      	lsls	r2, r2, #31
 8002d94:	bf48      	it	mi
 8002d96:	5962      	ldrmi	r2, [r4, r5]
 8002d98:	689b      	ldr	r3, [r3, #8]
    }
 8002d9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d9c:	bf48      	it	mi
 8002d9e:	58d3      	ldrmi	r3, [r2, r3]
 8002da0:	4718      	bx	r3

08002da2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002da2:	6843      	ldr	r3, [r0, #4]
 8002da4:	b12b      	cbz	r3, 8002db2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002da6:	6883      	ldr	r3, [r0, #8]
 8002da8:	b92b      	cbnz	r3, 8002db6 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002daa:	68c0      	ldr	r0, [r0, #12]
 8002dac:	f000 0001 	and.w	r0, r0, #1
 8002db0:	4770      	bx	lr
 8002db2:	4618      	mov	r0, r3
 8002db4:	4770      	bx	lr
 8002db6:	2001      	movs	r0, #1
    }
 8002db8:	4770      	bx	lr

08002dba <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002dba:	b510      	push	{r4, lr}
 8002dbc:	2110      	movs	r1, #16
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	f024 fdc5 	bl	802794e <_ZdlPvj>
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}

08002dc8 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002dc8:	b510      	push	{r4, lr}
 8002dca:	4b03      	ldr	r3, [pc, #12]	; (8002dd8 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002dcc:	6003      	str	r3, [r0, #0]
 8002dce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002dd0:	f010 fb5c 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	bd10      	pop	{r4, pc}
 8002dd8:	0802a28c 	.word	0x0802a28c

08002ddc <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002ddc:	b507      	push	{r0, r1, r2, lr}
 8002dde:	4b07      	ldr	r3, [pc, #28]	; (8002dfc <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002de0:	6003      	str	r3, [r0, #0]
 8002de2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002de4:	f010 fb52 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002de8:	9801      	ldr	r0, [sp, #4]
 8002dea:	f241 015c 	movw	r1, #4188	; 0x105c
 8002dee:	f024 fdae 	bl	802794e <_ZdlPvj>
 8002df2:	9801      	ldr	r0, [sp, #4]
 8002df4:	b003      	add	sp, #12
 8002df6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dfa:	bf00      	nop
 8002dfc:	0802a28c 	.word	0x0802a28c

08002e00 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002e00:	3098      	adds	r0, #152	; 0x98
 8002e02:	4288      	cmp	r0, r1
{
 8002e04:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002e06:	d105      	bne.n	8002e14 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e08:	f012 f842 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002e10:	f000 bd04 	b.w	800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002e14:	bd08      	pop	{r3, pc}
	...

08002e18 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e1c:	ed2d 8b02 	vpush	{d8}
 8002e20:	4604      	mov	r4, r0
 8002e22:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002e24:	46a1      	mov	r9, r4
 8002e26:	2500      	movs	r5, #0
 8002e28:	f013 fcb2 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8002e2c:	4ba5      	ldr	r3, [pc, #660]	; (80030c4 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002e2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e30:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e34:	2226      	movs	r2, #38	; 0x26
 8002e36:	4629      	mov	r1, r5
 8002e38:	4648      	mov	r0, r9
 8002e3a:	f025 fd7e 	bl	802893a <memset>
 8002e3e:	4648      	mov	r0, r9
 8002e40:	f7ff fb56 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002e44:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e48:	26ff      	movs	r6, #255	; 0xff
 8002e4a:	4b9f      	ldr	r3, [pc, #636]	; (80030c8 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002e4c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002e4e:	2226      	movs	r2, #38	; 0x26
 8002e50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e54:	4629      	mov	r1, r5
 8002e56:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e5a:	4640      	mov	r0, r8
 8002e5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e5e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e62:	f025 fd6a 	bl	802893a <memset>
 8002e66:	4640      	mov	r0, r8
 8002e68:	f7ff fb42 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8002e6c:	4b97      	ldr	r3, [pc, #604]	; (80030cc <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8002e6e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002e70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002e74:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002e78:	a90a      	add	r1, sp, #40	; 0x28
 8002e7a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002e7e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002e80:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002e84:	f00f fafb 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e88:	4658      	mov	r0, fp
 8002e8a:	f00f fc39 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002e8e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002e92:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002e96:	4618      	mov	r0, r3
 8002e98:	ee08 3a90 	vmov	s17, r3
 8002e9c:	f7ff fb3a 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002ea0:	4638      	mov	r0, r7
 8002ea2:	f00e f9b5 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 8002ea6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002eaa:	4618      	mov	r0, r3
 8002eac:	9303      	str	r3, [sp, #12]
 8002eae:	f7fe fa07 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002eb2:	4b87      	ldr	r3, [pc, #540]	; (80030d0 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8002eb4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002eb8:	3324      	adds	r3, #36	; 0x24
 8002eba:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002ebe:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002ec8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002ecc:	ee08 3a10 	vmov	s16, r3
 8002ed0:	f7ff fb20 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8002ed4:	4650      	mov	r0, sl
 8002ed6:	f7ff fb1d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002eda:	4a7e      	ldr	r2, [pc, #504]	; (80030d4 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8002edc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002ee0:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002ee4:	4a7c      	ldr	r2, [pc, #496]	; (80030d8 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002ee6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002eea:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002eee:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002ef2:	f010 fac1 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002ef6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002efa:	462a      	mov	r2, r5
 8002efc:	4648      	mov	r0, r9
 8002efe:	9300      	str	r3, [sp, #0]
 8002f00:	4629      	mov	r1, r5
 8002f02:	23f0      	movs	r3, #240	; 0xf0
 8002f04:	f7ff fae0 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f08:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002f0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f0e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f10:	4649      	mov	r1, r9
 8002f12:	4630      	mov	r0, r6
 8002f14:	f00c fd24 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f18:	462a      	mov	r2, r5
 8002f1a:	4640      	mov	r0, r8
 8002f1c:	4629      	mov	r1, r5
 8002f1e:	f7ff fac6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f22:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f24:	4640      	mov	r0, r8
 8002f26:	a90a      	add	r1, sp, #40	; 0x28
 8002f28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f2c:	f00f faa7 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f30:	4641      	mov	r1, r8
 8002f32:	4630      	mov	r0, r6
 8002f34:	f00c fd14 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f38:	4658      	mov	r0, fp
 8002f3a:	f240 1201 	movw	r2, #257	; 0x101
 8002f3e:	2121      	movs	r1, #33	; 0x21
 8002f40:	f7ff fab5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f44:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f46:	aa0a      	add	r2, sp, #40	; 0x28
 8002f48:	a909      	add	r1, sp, #36	; 0x24
 8002f4a:	4658      	mov	r0, fp
 8002f4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f50:	2302      	movs	r3, #2
 8002f52:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f56:	f00f f89c 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f5a:	230f      	movs	r3, #15
        updateTextPosition();
 8002f5c:	4658      	mov	r0, fp
 8002f5e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f62:	f7ff faf9 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002f66:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002f6a:	330c      	adds	r3, #12
        color = col;
 8002f6c:	f04f 39ff 	mov.w	r9, #4294967295
 8002f70:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f74:	4659      	mov	r1, fp
 8002f76:	4630      	mov	r0, r6
        colorPressed = col;
 8002f78:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002f7c:	f00c fcf0 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f80:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8002f84:	223c      	movs	r2, #60	; 0x3c
 8002f86:	ee18 0a90 	vmov	r0, s17
 8002f8a:	213a      	movs	r1, #58	; 0x3a
 8002f8c:	f7ff fa8f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8002f90:	ee18 1a90 	vmov	r1, s17
 8002f94:	4640      	mov	r0, r8
        color = newColor;
 8002f96:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f9a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f9e:	f00e fbf9 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fa2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002fa6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002faa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002fae:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80030dc <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8002fb2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fb6:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8002fb8:	ee18 0a90 	vmov	r0, s17
 8002fbc:	a90a      	add	r1, sp, #40	; 0x28
 8002fbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fc2:	f00e fe81 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fc6:	ee18 1a90 	vmov	r1, s17
 8002fca:	4630      	mov	r0, r6
 8002fcc:	f00c fcc8 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002fd0:	230a      	movs	r3, #10
 8002fd2:	9300      	str	r3, [sp, #0]
 8002fd4:	2232      	movs	r2, #50	; 0x32
 8002fd6:	23f0      	movs	r3, #240	; 0xf0
 8002fd8:	4629      	mov	r1, r5
 8002fda:	4638      	mov	r0, r7
 8002fdc:	f7ff fa74 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fe0:	9b03      	ldr	r3, [sp, #12]
 8002fe2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fe6:	22a0      	movs	r2, #160	; 0xa0
 8002fe8:	4611      	mov	r1, r2
 8002fea:	4638      	mov	r0, r7
 8002fec:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002ff0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002ff4:	f00e fa22 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ff8:	22a0      	movs	r2, #160	; 0xa0
 8002ffa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002ffe:	4638      	mov	r0, r7
 8003000:	f00e fa27 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003004:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003008:	2b20      	cmp	r3, #32
 800300a:	d005      	beq.n	8003018 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 800300c:	2320      	movs	r3, #32
 800300e:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8003012:	4638      	mov	r0, r7
 8003014:	f00e f91c 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003018:	4638      	mov	r0, r7
 800301a:	2101      	movs	r1, #1
 800301c:	f00e fa24 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003020:	4639      	mov	r1, r7
 8003022:	4630      	mov	r0, r6
 8003024:	f00c fc9c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003028:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 800302c:	ee18 0a10 	vmov	r0, s16
 8003030:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8003032:	2500      	movs	r5, #0
 8003034:	2145      	movs	r1, #69	; 0x45
 8003036:	f7ff fa3a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800303a:	ee18 1a10 	vmov	r1, s16
 800303e:	4640      	mov	r0, r8
        color = newColor;
 8003040:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003044:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003048:	f00e fba4 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800304c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003050:	ee18 3a10 	vmov	r3, s16
 8003054:	333c      	adds	r3, #60	; 0x3c
 8003056:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800305a:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800305c:	ee18 0a10 	vmov	r0, s16
 8003060:	a90a      	add	r1, sp, #40	; 0x28
 8003062:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003066:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800306a:	f00e fe2d 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800306e:	ee18 1a10 	vmov	r1, s16
 8003072:	4630      	mov	r0, r6
 8003074:	f00c fc74 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003078:	220c      	movs	r2, #12
 800307a:	4650      	mov	r0, sl
 800307c:	2136      	movs	r1, #54	; 0x36
 800307e:	f7ff fa16 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8003082:	4651      	mov	r1, sl
 8003084:	4640      	mov	r0, r8
        color = newColor;
 8003086:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800308a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800308e:	f00e fb81 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003092:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003096:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800309a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800309e:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80030a0:	a90a      	add	r1, sp, #40	; 0x28
 80030a2:	4650      	mov	r0, sl
 80030a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030a8:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030ac:	f00e fe0c 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030b0:	4630      	mov	r0, r6
 80030b2:	4651      	mov	r1, sl
 80030b4:	f00c fc54 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030b8:	4620      	mov	r0, r4
 80030ba:	b00d      	add	sp, #52	; 0x34
 80030bc:	ecbd 8b02 	vpop	{d8}
 80030c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030c4:	0802a28c 	.word	0x0802a28c
 80030c8:	0802ca84 	.word	0x0802ca84
 80030cc:	0802cc4c 	.word	0x0802cc4c
 80030d0:	0802c7b8 	.word	0x0802c7b8
 80030d4:	0802a274 	.word	0x0802a274
 80030d8:	08002e01 	.word	0x08002e01
 80030dc:	0802a13c 	.word	0x0802a13c

080030e0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80030e0:	4770      	bx	lr

080030e2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80030e4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80030e8:	6808      	ldr	r0, [r1, #0]
 80030ea:	6849      	ldr	r1, [r1, #4]
 80030ec:	c303      	stmia	r3!, {r0, r1}
    }
 80030ee:	4770      	bx	lr

080030f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80030f2:	4770      	bx	lr

080030f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80030f4:	6041      	str	r1, [r0, #4]
    }
 80030f6:	4770      	bx	lr

080030f8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80030f8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030fa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80030fc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003100:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003104:	8002      	strh	r2, [r0, #0]
 8003106:	8042      	strh	r2, [r0, #2]
 8003108:	8084      	strh	r4, [r0, #4]
 800310a:	80c1      	strh	r1, [r0, #6]
        }
 800310c:	bd10      	pop	{r4, pc}

0800310e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800310e:	4770      	bx	lr

08003110 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003110:	4770      	bx	lr
	...

08003114 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003114:	4b06      	ldr	r3, [pc, #24]	; (8003130 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003116:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800311a:	2300      	movs	r3, #0
 800311c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003120:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003124:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003128:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800312c:	4770      	bx	lr
 800312e:	bf00      	nop
 8003130:	080034d1 	.word	0x080034d1

08003134 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003134:	2301      	movs	r3, #1
 8003136:	7203      	strb	r3, [r0, #8]
    }
 8003138:	4770      	bx	lr

0800313a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800313a:	4770      	bx	lr

0800313c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800313c:	4770      	bx	lr

0800313e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800313e:	4770      	bx	lr

08003140 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003140:	4770      	bx	lr

08003142 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003142:	4770      	bx	lr

08003144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003144:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003146:	6840      	ldr	r0, [r0, #4]
 8003148:	6803      	ldr	r3, [r0, #0]
 800314a:	3110      	adds	r1, #16
 800314c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800314e:	4718      	bx	r3

08003150 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003150:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003152:	6840      	ldr	r0, [r0, #4]
 8003154:	6803      	ldr	r3, [r0, #0]
 8003156:	3110      	adds	r1, #16
 8003158:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800315a:	4718      	bx	r3

0800315c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800315c:	4770      	bx	lr

0800315e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800315e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003160:	6840      	ldr	r0, [r0, #4]
 8003162:	6803      	ldr	r3, [r0, #0]
 8003164:	3110      	adds	r1, #16
 8003166:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003168:	4718      	bx	r3

0800316a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800316a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800316c:	6840      	ldr	r0, [r0, #4]
 800316e:	6803      	ldr	r3, [r0, #0]
 8003170:	3110      	adds	r1, #16
 8003172:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003174:	4718      	bx	r3

08003176 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003176:	4770      	bx	lr

08003178 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003178:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800317a:	68c2      	ldr	r2, [r0, #12]
 800317c:	6841      	ldr	r1, [r0, #4]
 800317e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003180:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003182:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003186:	07d2      	lsls	r2, r2, #31
 8003188:	bf48      	it	mi
 800318a:	590a      	ldrmi	r2, [r1, r4]
 800318c:	689b      	ldr	r3, [r3, #8]
    }
 800318e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003192:	bf48      	it	mi
 8003194:	58d3      	ldrmi	r3, [r2, r3]
 8003196:	4718      	bx	r3

08003198 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003198:	6843      	ldr	r3, [r0, #4]
 800319a:	b12b      	cbz	r3, 80031a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800319c:	6883      	ldr	r3, [r0, #8]
 800319e:	b92b      	cbnz	r3, 80031ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80031a0:	68c0      	ldr	r0, [r0, #12]
 80031a2:	f000 0001 	and.w	r0, r0, #1
 80031a6:	4770      	bx	lr
 80031a8:	4618      	mov	r0, r3
 80031aa:	4770      	bx	lr
 80031ac:	2001      	movs	r0, #1
    }
 80031ae:	4770      	bx	lr

080031b0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80031b0:	b510      	push	{r4, lr}
 80031b2:	210c      	movs	r1, #12
 80031b4:	4604      	mov	r4, r0
 80031b6:	f024 fbca 	bl	802794e <_ZdlPvj>
 80031ba:	4620      	mov	r0, r4
 80031bc:	bd10      	pop	{r4, pc}

080031be <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031be:	b510      	push	{r4, lr}
 80031c0:	2110      	movs	r1, #16
 80031c2:	4604      	mov	r4, r0
 80031c4:	f024 fbc3 	bl	802794e <_ZdlPvj>
 80031c8:	4620      	mov	r0, r4
 80031ca:	bd10      	pop	{r4, pc}

080031cc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80031cc:	b510      	push	{r4, lr}
 80031ce:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80031d2:	4604      	mov	r4, r0
 80031d4:	f024 fbbb 	bl	802794e <_ZdlPvj>
 80031d8:	4620      	mov	r0, r4
 80031da:	bd10      	pop	{r4, pc}

080031dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80031dc:	b510      	push	{r4, lr}
 80031de:	2138      	movs	r1, #56	; 0x38
 80031e0:	4604      	mov	r4, r0
 80031e2:	f024 fbb4 	bl	802794e <_ZdlPvj>
 80031e6:	4620      	mov	r0, r4
 80031e8:	bd10      	pop	{r4, pc}

080031ea <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80031ea:	b510      	push	{r4, lr}
 80031ec:	2128      	movs	r1, #40	; 0x28
 80031ee:	4604      	mov	r4, r0
 80031f0:	f024 fbad 	bl	802794e <_ZdlPvj>
 80031f4:	4620      	mov	r0, r4
 80031f6:	bd10      	pop	{r4, pc}

080031f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80031f8:	b510      	push	{r4, lr}
 80031fa:	2138      	movs	r1, #56	; 0x38
 80031fc:	4604      	mov	r4, r0
 80031fe:	f024 fba6 	bl	802794e <_ZdlPvj>
 8003202:	4620      	mov	r0, r4
 8003204:	bd10      	pop	{r4, pc}

08003206 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003206:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003208:	f011 fe42 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800320c:	6803      	ldr	r3, [r0, #0]
    }
 800320e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003212:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003214:	4718      	bx	r3
	...

08003218 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003218:	b513      	push	{r0, r1, r4, lr}
 800321a:	4604      	mov	r4, r0
        animationCounter++;
 800321c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800321e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003220:	3001      	adds	r0, #1
 8003222:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003224:	4298      	cmp	r0, r3
        animationCounter++;
 8003226:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003228:	d905      	bls.n	8003236 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800322a:	2301      	movs	r3, #1
 800322c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800322e:	2300      	movs	r3, #0
 8003230:	72a3      	strb	r3, [r4, #10]
    }
 8003232:	b002      	add	sp, #8
 8003234:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003236:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800323a:	2100      	movs	r1, #0
 800323c:	f013 fc5a 	bl	8016af4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003240:	f010 0201 	ands.w	r2, r0, #1
 8003244:	b283      	uxth	r3, r0
 8003246:	d12a      	bne.n	800329e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003248:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800324a:	4a19      	ldr	r2, [pc, #100]	; (80032b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800324c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003250:	89e3      	ldrh	r3, [r4, #14]
 8003252:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003254:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003258:	82a0      	strh	r0, [r4, #20]
 800325a:	2000      	movs	r0, #0
 800325c:	1ad2      	subs	r2, r2, r3
 800325e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003262:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003264:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003266:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003268:	4a12      	ldr	r2, [pc, #72]	; (80032b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800326a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800326e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003270:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003274:	691b      	ldr	r3, [r3, #16]
 8003276:	f8ad 1000 	strh.w	r1, [sp]
 800327a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800327e:	4669      	mov	r1, sp
 8003280:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003282:	7aa3      	ldrb	r3, [r4, #10]
 8003284:	2b01      	cmp	r3, #1
 8003286:	d1d4      	bne.n	8003232 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003288:	4b0b      	ldr	r3, [pc, #44]	; (80032b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800328a:	781b      	ldrb	r3, [r3, #0]
 800328c:	2b00      	cmp	r3, #0
 800328e:	d0d0      	beq.n	8003232 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003290:	f011 fdfe 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003294:	b002      	add	sp, #8
 8003296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800329a:	f011 bdff 	b.w	8014e9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800329e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80032a2:	2800      	cmp	r0, #0
 80032a4:	bfd8      	it	le
 80032a6:	460a      	movle	r2, r1
 80032a8:	4413      	add	r3, r2
 80032aa:	81e3      	strh	r3, [r4, #14]
 80032ac:	e7cd      	b.n	800324a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80032ae:	bf00      	nop
 80032b0:	200137c0 	.word	0x200137c0
 80032b4:	200137c2 	.word	0x200137c2
 80032b8:	200137ca 	.word	0x200137ca

080032bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80032bc:	b510      	push	{r4, lr}
 80032be:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80032c0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80032c4:	b158      	cbz	r0, 80032de <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80032c6:	6803      	ldr	r3, [r0, #0]
 80032c8:	68db      	ldr	r3, [r3, #12]
 80032ca:	4798      	blx	r3
 80032cc:	b138      	cbz	r0, 80032de <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80032ce:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80032d2:	6803      	ldr	r3, [r0, #0]
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80032d8:	2300      	movs	r3, #0
 80032da:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80032de:	bd10      	pop	{r4, pc}

080032e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80032e0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80032e4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80032e8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032ea:	68a8      	ldr	r0, [r5, #8]
 80032ec:	6803      	ldr	r3, [r0, #0]
 80032ee:	6a1b      	ldr	r3, [r3, #32]
 80032f0:	4798      	blx	r3
 80032f2:	2897      	cmp	r0, #151	; 0x97
 80032f4:	d805      	bhi.n	8003302 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80032f6:	4b46      	ldr	r3, [pc, #280]	; (8003410 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80032f8:	4a46      	ldr	r2, [pc, #280]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80032fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032fc:	4846      	ldr	r0, [pc, #280]	; (8003418 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80032fe:	f025 f917 	bl	8028530 <__assert_func>
 8003302:	6868      	ldr	r0, [r5, #4]
 8003304:	6803      	ldr	r3, [r0, #0]
 8003306:	6a1b      	ldr	r3, [r3, #32]
 8003308:	4798      	blx	r3
 800330a:	280f      	cmp	r0, #15
 800330c:	d803      	bhi.n	8003316 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800330e:	4b43      	ldr	r3, [pc, #268]	; (800341c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003310:	4a40      	ldr	r2, [pc, #256]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003312:	21a4      	movs	r1, #164	; 0xa4
 8003314:	e7f2      	b.n	80032fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003316:	68e8      	ldr	r0, [r5, #12]
 8003318:	6803      	ldr	r3, [r0, #0]
 800331a:	6a1b      	ldr	r3, [r3, #32]
 800331c:	4798      	blx	r3
 800331e:	280b      	cmp	r0, #11
 8003320:	d803      	bhi.n	800332a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003322:	4b3f      	ldr	r3, [pc, #252]	; (8003420 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003324:	4a3b      	ldr	r2, [pc, #236]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003326:	21a5      	movs	r1, #165	; 0xa5
 8003328:	e7e8      	b.n	80032fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800332a:	f011 fdb1 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800332e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003428 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003332:	3004      	adds	r0, #4
 8003334:	f011 fe12 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003338:	f8d9 0000 	ldr.w	r0, [r9]
 800333c:	b110      	cbz	r0, 8003344 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800333e:	6803      	ldr	r3, [r0, #0]
 8003340:	68db      	ldr	r3, [r3, #12]
 8003342:	4798      	blx	r3
    if (*currentTrans)
 8003344:	f8d9 0000 	ldr.w	r0, [r9]
 8003348:	b110      	cbz	r0, 8003350 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800334a:	6803      	ldr	r3, [r0, #0]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	4798      	blx	r3
    if (*currentScreen)
 8003350:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800342c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003354:	f8d8 0000 	ldr.w	r0, [r8]
 8003358:	b110      	cbz	r0, 8003360 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800335a:	6803      	ldr	r3, [r0, #0]
 800335c:	695b      	ldr	r3, [r3, #20]
 800335e:	4798      	blx	r3
    if (*currentPresenter)
 8003360:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003364:	b110      	cbz	r0, 800336c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003366:	6803      	ldr	r3, [r0, #0]
 8003368:	685b      	ldr	r3, [r3, #4]
 800336a:	4798      	blx	r3
    if (*currentScreen)
 800336c:	f8d8 0000 	ldr.w	r0, [r8]
 8003370:	b110      	cbz	r0, 8003378 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003372:	6803      	ldr	r3, [r0, #0]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	4798      	blx	r3
    if (*currentPresenter)
 8003378:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800337c:	b110      	cbz	r0, 8003384 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800337e:	6803      	ldr	r3, [r0, #0]
 8003380:	689b      	ldr	r3, [r3, #8]
 8003382:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003384:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003386:	6803      	ldr	r3, [r0, #0]
 8003388:	2100      	movs	r1, #0
 800338a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800338c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800338e:	f04f 0b00 	mov.w	fp, #0
 8003392:	4b24      	ldr	r3, [pc, #144]	; (8003424 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003394:	6003      	str	r3, [r0, #0]
 8003396:	4604      	mov	r4, r0
 8003398:	f8c0 b004 	str.w	fp, [r0, #4]
 800339c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80033a0:	68a8      	ldr	r0, [r5, #8]
 80033a2:	6803      	ldr	r3, [r0, #0]
 80033a4:	4659      	mov	r1, fp
 80033a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033a8:	4798      	blx	r3
 80033aa:	4606      	mov	r6, r0
 80033ac:	f005 fa34 	bl	8008818 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80033b0:	6868      	ldr	r0, [r5, #4]
 80033b2:	6803      	ldr	r3, [r0, #0]
 80033b4:	4659      	mov	r1, fp
 80033b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033b8:	4798      	blx	r3
 80033ba:	4631      	mov	r1, r6
 80033bc:	4605      	mov	r5, r0
 80033be:	f005 fa07 	bl	80087d0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80033c2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80033c6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80033ca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80033ce:	b1e5      	cbz	r5, 800340a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80033d0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80033d2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80033d6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80033d8:	f8c5 a008 	str.w	sl, [r5, #8]
 80033dc:	4630      	mov	r0, r6
 80033de:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80033e0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80033e2:	4798      	blx	r3
    newPresenter->activate();
 80033e4:	682b      	ldr	r3, [r5, #0]
 80033e6:	4628      	mov	r0, r5
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80033ec:	4621      	mov	r1, r4
 80033ee:	4630      	mov	r0, r6
 80033f0:	f013 fb7a 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80033f4:	6823      	ldr	r3, [r4, #0]
 80033f6:	4620      	mov	r0, r4
 80033f8:	691b      	ldr	r3, [r3, #16]
 80033fa:	4798      	blx	r3
    newTransition->invalidate();
 80033fc:	6823      	ldr	r3, [r4, #0]
 80033fe:	695b      	ldr	r3, [r3, #20]
 8003400:	4620      	mov	r0, r4
}
 8003402:	b001      	add	sp, #4
 8003404:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003408:	4718      	bx	r3
    model->bind(newPresenter);
 800340a:	462b      	mov	r3, r5
 800340c:	e7e1      	b.n	80033d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800340e:	bf00      	nop
 8003410:	0802a2b8 	.word	0x0802a2b8
 8003414:	0802a346 	.word	0x0802a346
 8003418:	0802a454 	.word	0x0802a454
 800341c:	0802a49b 	.word	0x0802a49b
 8003420:	0802a53e 	.word	0x0802a53e
 8003424:	0802b95c 	.word	0x0802b95c
 8003428:	20013814 	.word	0x20013814
 800342c:	20013810 	.word	0x20013810

08003430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003430:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003432:	4604      	mov	r4, r0
        animationCounter++;
 8003434:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003436:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003438:	3001      	adds	r0, #1
 800343a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800343c:	4298      	cmp	r0, r3
        animationCounter++;
 800343e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003440:	d905      	bls.n	800344e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003442:	2301      	movs	r3, #1
 8003444:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003446:	2300      	movs	r3, #0
 8003448:	72a3      	strb	r3, [r4, #10]
    }
 800344a:	b003      	add	sp, #12
 800344c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800344e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003452:	2100      	movs	r1, #0
 8003454:	f013 fb4e 	bl	8016af4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003458:	f010 0201 	ands.w	r2, r0, #1
 800345c:	b283      	uxth	r3, r0
 800345e:	d128      	bne.n	80034b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003460:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003462:	4b18      	ldr	r3, [pc, #96]	; (80034c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003464:	4818      	ldr	r0, [pc, #96]	; (80034c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003466:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003468:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800346a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800346c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003470:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003474:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003476:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003478:	442b      	add	r3, r5
 800347a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800347c:	b212      	sxth	r2, r2
 800347e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003482:	6803      	ldr	r3, [r0, #0]
 8003484:	8322      	strh	r2, [r4, #24]
 8003486:	f8ad 2000 	strh.w	r2, [sp]
 800348a:	2200      	movs	r2, #0
 800348c:	691b      	ldr	r3, [r3, #16]
 800348e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003492:	4669      	mov	r1, sp
 8003494:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003496:	7aa3      	ldrb	r3, [r4, #10]
 8003498:	2b01      	cmp	r3, #1
 800349a:	d1d6      	bne.n	800344a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800349c:	4b0b      	ldr	r3, [pc, #44]	; (80034cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800349e:	781b      	ldrb	r3, [r3, #0]
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d0d2      	beq.n	800344a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034a4:	f011 fcf4 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80034a8:	b003      	add	sp, #12
 80034aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034ae:	f011 bcf5 	b.w	8014e9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80034b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80034b6:	2800      	cmp	r0, #0
 80034b8:	bfd8      	it	le
 80034ba:	460a      	movle	r2, r1
 80034bc:	4413      	add	r3, r2
 80034be:	81e3      	strh	r3, [r4, #14]
 80034c0:	e7cf      	b.n	8003462 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80034c2:	bf00      	nop
 80034c4:	200137c0 	.word	0x200137c0
 80034c8:	200137c2 	.word	0x200137c2
 80034cc:	200137ca 	.word	0x200137ca

080034d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80034d0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034d4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80034d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034da:	68a8      	ldr	r0, [r5, #8]
 80034dc:	6803      	ldr	r3, [r0, #0]
 80034de:	6a1b      	ldr	r3, [r3, #32]
 80034e0:	4798      	blx	r3
 80034e2:	f241 137b 	movw	r3, #4475	; 0x117b
 80034e6:	4298      	cmp	r0, r3
 80034e8:	d805      	bhi.n	80034f6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80034ea:	4b46      	ldr	r3, [pc, #280]	; (8003604 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80034ec:	4a46      	ldr	r2, [pc, #280]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80034ee:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034f0:	4846      	ldr	r0, [pc, #280]	; (800360c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80034f2:	f025 f81d 	bl	8028530 <__assert_func>
 80034f6:	6868      	ldr	r0, [r5, #4]
 80034f8:	6803      	ldr	r3, [r0, #0]
 80034fa:	6a1b      	ldr	r3, [r3, #32]
 80034fc:	4798      	blx	r3
 80034fe:	280f      	cmp	r0, #15
 8003500:	d803      	bhi.n	800350a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8003502:	4b43      	ldr	r3, [pc, #268]	; (8003610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003504:	4a40      	ldr	r2, [pc, #256]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003506:	21a4      	movs	r1, #164	; 0xa4
 8003508:	e7f2      	b.n	80034f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800350a:	68e8      	ldr	r0, [r5, #12]
 800350c:	6803      	ldr	r3, [r0, #0]
 800350e:	6a1b      	ldr	r3, [r3, #32]
 8003510:	4798      	blx	r3
 8003512:	280b      	cmp	r0, #11
 8003514:	d803      	bhi.n	800351e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003516:	4b3f      	ldr	r3, [pc, #252]	; (8003614 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003518:	4a3b      	ldr	r2, [pc, #236]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800351a:	21a5      	movs	r1, #165	; 0xa5
 800351c:	e7e8      	b.n	80034f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800351e:	f011 fcb7 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003522:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800361c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003526:	3004      	adds	r0, #4
 8003528:	f011 fd18 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800352c:	f8d9 0000 	ldr.w	r0, [r9]
 8003530:	b110      	cbz	r0, 8003538 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003532:	6803      	ldr	r3, [r0, #0]
 8003534:	68db      	ldr	r3, [r3, #12]
 8003536:	4798      	blx	r3
    if (*currentTrans)
 8003538:	f8d9 0000 	ldr.w	r0, [r9]
 800353c:	b110      	cbz	r0, 8003544 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800353e:	6803      	ldr	r3, [r0, #0]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	4798      	blx	r3
    if (*currentScreen)
 8003544:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003620 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003548:	f8d8 0000 	ldr.w	r0, [r8]
 800354c:	b110      	cbz	r0, 8003554 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800354e:	6803      	ldr	r3, [r0, #0]
 8003550:	695b      	ldr	r3, [r3, #20]
 8003552:	4798      	blx	r3
    if (*currentPresenter)
 8003554:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003558:	b110      	cbz	r0, 8003560 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800355a:	6803      	ldr	r3, [r0, #0]
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	4798      	blx	r3
    if (*currentScreen)
 8003560:	f8d8 0000 	ldr.w	r0, [r8]
 8003564:	b110      	cbz	r0, 800356c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003566:	6803      	ldr	r3, [r0, #0]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	4798      	blx	r3
    if (*currentPresenter)
 800356c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003570:	b110      	cbz	r0, 8003578 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003572:	6803      	ldr	r3, [r0, #0]
 8003574:	689b      	ldr	r3, [r3, #8]
 8003576:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003578:	68e8      	ldr	r0, [r5, #12]
 800357a:	6803      	ldr	r3, [r0, #0]
 800357c:	2100      	movs	r1, #0
 800357e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003580:	4798      	blx	r3
 8003582:	f04f 0b00 	mov.w	fp, #0
 8003586:	4b24      	ldr	r3, [pc, #144]	; (8003618 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003588:	6003      	str	r3, [r0, #0]
 800358a:	4604      	mov	r4, r0
 800358c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003590:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003594:	68a8      	ldr	r0, [r5, #8]
 8003596:	6803      	ldr	r3, [r0, #0]
 8003598:	4659      	mov	r1, fp
 800359a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800359c:	4798      	blx	r3
 800359e:	4606      	mov	r6, r0
 80035a0:	f004 fe06 	bl	80081b0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80035a4:	6868      	ldr	r0, [r5, #4]
 80035a6:	6803      	ldr	r3, [r0, #0]
 80035a8:	4659      	mov	r1, fp
 80035aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035ac:	4798      	blx	r3
 80035ae:	4631      	mov	r1, r6
 80035b0:	4605      	mov	r5, r0
 80035b2:	f004 fdd7 	bl	8008164 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80035b6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80035ba:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035c2:	b1e5      	cbz	r5, 80035fe <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80035c4:	1d2b      	adds	r3, r5, #4
 80035c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035ca:	6833      	ldr	r3, [r6, #0]
 80035cc:	f8c5 a008 	str.w	sl, [r5, #8]
 80035d0:	4630      	mov	r0, r6
 80035d2:	68db      	ldr	r3, [r3, #12]
 80035d4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80035d6:	4798      	blx	r3
    newPresenter->activate();
 80035d8:	682b      	ldr	r3, [r5, #0]
 80035da:	4628      	mov	r0, r5
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035e0:	4621      	mov	r1, r4
 80035e2:	4630      	mov	r0, r6
 80035e4:	f013 fa80 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035e8:	6823      	ldr	r3, [r4, #0]
 80035ea:	4620      	mov	r0, r4
 80035ec:	691b      	ldr	r3, [r3, #16]
 80035ee:	4798      	blx	r3
    newTransition->invalidate();
 80035f0:	6823      	ldr	r3, [r4, #0]
 80035f2:	695b      	ldr	r3, [r3, #20]
 80035f4:	4620      	mov	r0, r4
}
 80035f6:	b001      	add	sp, #4
 80035f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035fc:	4718      	bx	r3
    model->bind(newPresenter);
 80035fe:	462b      	mov	r3, r5
 8003600:	e7e1      	b.n	80035c6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003602:	bf00      	nop
 8003604:	0802a2b8 	.word	0x0802a2b8
 8003608:	0802a5e1 	.word	0x0802a5e1
 800360c:	0802a454 	.word	0x0802a454
 8003610:	0802a49b 	.word	0x0802a49b
 8003614:	0802a53e 	.word	0x0802a53e
 8003618:	0802b95c 	.word	0x0802b95c
 800361c:	20013814 	.word	0x20013814
 8003620:	20013810 	.word	0x20013810

08003624 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003624:	4b04      	ldr	r3, [pc, #16]	; (8003638 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800362c:	b10a      	cbz	r2, 8003632 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800362e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003630:	b900      	cbnz	r0, 8003634 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003632:	6898      	ldr	r0, [r3, #8]
    }
 8003634:	4770      	bx	lr
 8003636:	bf00      	nop
 8003638:	200137cc 	.word	0x200137cc

0800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800363c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	4617      	mov	r7, r2
 8003642:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003644:	f011 fd58 	bl	80150f8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003648:	4b10      	ldr	r3, [pc, #64]	; (800368c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800364a:	601c      	str	r4, [r3, #0]
      model(m)
 800364c:	4b10      	ldr	r3, [pc, #64]	; (8003690 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800364e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003650:	4b10      	ldr	r3, [pc, #64]	; (8003694 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003652:	2500      	movs	r5, #0
 8003654:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003658:	4b0f      	ldr	r3, [pc, #60]	; (8003698 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800365a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800365e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003660:	6803      	ldr	r3, [r0, #0]
 8003662:	2101      	movs	r1, #1
 8003664:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003666:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800366a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800366e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003670:	4628      	mov	r0, r5
 8003672:	f004 fbdb 	bl	8007e2c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003676:	f7ff ffd5 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 800367a:	f01a ff0e 	bl	801e49a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800367e:	f7ff ffd1 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8003682:	f01a ff85 	bl	801e590 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003686:	4620      	mov	r0, r4
 8003688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800368a:	bf00      	nop
 800368c:	20013820 	.word	0x20013820
 8003690:	0802b908 	.word	0x0802b908
 8003694:	0802b8f0 	.word	0x0802b8f0
 8003698:	200137cc 	.word	0x200137cc

0800369c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800369c:	4b06      	ldr	r3, [pc, #24]	; (80036b8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800369e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036a2:	2300      	movs	r3, #0
 80036a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036b4:	4770      	bx	lr
 80036b6:	bf00      	nop
 80036b8:	080034d1 	.word	0x080034d1

080036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80036bc:	4b06      	ldr	r3, [pc, #24]	; (80036d8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80036be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036c2:	2300      	movs	r3, #0
 80036c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	08003ce1 	.word	0x08003ce1

080036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80036dc:	4b06      	ldr	r3, [pc, #24]	; (80036f8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80036de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036e2:	2300      	movs	r3, #0
 80036e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036f4:	4770      	bx	lr
 80036f6:	bf00      	nop
 80036f8:	08004b05 	.word	0x08004b05

080036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80036fc:	4b06      	ldr	r3, [pc, #24]	; (8003718 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80036fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003702:	2300      	movs	r3, #0
 8003704:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003708:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800370c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003710:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003714:	4770      	bx	lr
 8003716:	bf00      	nop
 8003718:	08003ba1 	.word	0x08003ba1

0800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800371c:	4b06      	ldr	r3, [pc, #24]	; (8003738 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800371e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003722:	2300      	movs	r3, #0
 8003724:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003728:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800372c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003730:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003734:	4770      	bx	lr
 8003736:	bf00      	nop
 8003738:	080049c5 	.word	0x080049c5

0800373c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800373c:	4b06      	ldr	r3, [pc, #24]	; (8003758 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800373e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003742:	2300      	movs	r3, #0
 8003744:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003748:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800374c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003750:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003754:	4770      	bx	lr
 8003756:	bf00      	nop
 8003758:	08004885 	.word	0x08004885

0800375c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800375c:	4b06      	ldr	r3, [pc, #24]	; (8003778 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800375e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003762:	2300      	movs	r3, #0
 8003764:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003768:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800376c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003770:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003774:	4770      	bx	lr
 8003776:	bf00      	nop
 8003778:	08004745 	.word	0x08004745

0800377c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800377c:	4b06      	ldr	r3, [pc, #24]	; (8003798 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800377e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003782:	2300      	movs	r3, #0
 8003784:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003788:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800378c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003790:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003794:	4770      	bx	lr
 8003796:	bf00      	nop
 8003798:	08004605 	.word	0x08004605

0800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800379c:	4b06      	ldr	r3, [pc, #24]	; (80037b8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800379e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037a2:	2300      	movs	r3, #0
 80037a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037b4:	4770      	bx	lr
 80037b6:	bf00      	nop
 80037b8:	08003a61 	.word	0x08003a61

080037bc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80037bc:	4b06      	ldr	r3, [pc, #24]	; (80037d8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80037be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037c2:	2300      	movs	r3, #0
 80037c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037d4:	4770      	bx	lr
 80037d6:	bf00      	nop
 80037d8:	080044c5 	.word	0x080044c5

080037dc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80037dc:	4b06      	ldr	r3, [pc, #24]	; (80037f8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80037de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037e2:	2300      	movs	r3, #0
 80037e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037f4:	4770      	bx	lr
 80037f6:	bf00      	nop
 80037f8:	08004385 	.word	0x08004385

080037fc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80037fc:	4b06      	ldr	r3, [pc, #24]	; (8003818 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80037fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003802:	2300      	movs	r3, #0
 8003804:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003808:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800380c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003810:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003814:	4770      	bx	lr
 8003816:	bf00      	nop
 8003818:	08004245 	.word	0x08004245

0800381c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 800381c:	4b06      	ldr	r3, [pc, #24]	; (8003838 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800381e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003822:	2300      	movs	r3, #0
 8003824:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003828:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800382c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003830:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003834:	4770      	bx	lr
 8003836:	bf00      	nop
 8003838:	08003921 	.word	0x08003921

0800383c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 800383c:	4b06      	ldr	r3, [pc, #24]	; (8003858 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800383e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003842:	2300      	movs	r3, #0
 8003844:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003848:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800384c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003850:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003854:	4770      	bx	lr
 8003856:	bf00      	nop
 8003858:	08004105 	.word	0x08004105

0800385c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 800385c:	4b06      	ldr	r3, [pc, #24]	; (8003878 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800385e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003862:	2300      	movs	r3, #0
 8003864:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003868:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800386c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003870:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003874:	4770      	bx	lr
 8003876:	bf00      	nop
 8003878:	08003fc5 	.word	0x08003fc5

0800387c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 800387c:	4b06      	ldr	r3, [pc, #24]	; (8003898 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800387e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003882:	2300      	movs	r3, #0
 8003884:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003888:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800388c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003890:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003894:	4770      	bx	lr
 8003896:	bf00      	nop
 8003898:	08003e85 	.word	0x08003e85

0800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 800389c:	4b06      	ldr	r3, [pc, #24]	; (80038b8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800389e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038a2:	2300      	movs	r3, #0
 80038a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80038a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80038ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038b4:	4770      	bx	lr
 80038b6:	bf00      	nop
 80038b8:	080032e1 	.word	0x080032e1

080038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80038bc:	6803      	ldr	r3, [r0, #0]
 80038be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c0:	4718      	bx	r3
	...

080038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80038c4:	4b12      	ldr	r3, [pc, #72]	; (8003910 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80038c6:	b513      	push	{r0, r1, r4, lr}
          solid()
 80038c8:	6003      	str	r3, [r0, #0]
 80038ca:	f44f 7380 	mov.w	r3, #256	; 0x100
 80038ce:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80038d0:	4b10      	ldr	r3, [pc, #64]	; (8003914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80038d2:	7241      	strb	r1, [r0, #9]
 80038d4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038d6:	4910      	ldr	r1, [pc, #64]	; (8003918 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80038d8:	4b10      	ldr	r3, [pc, #64]	; (800391c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038da:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80038de:	f9b3 3000 	ldrsh.w	r3, [r3]
 80038e2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80038e4:	2200      	movs	r2, #0
 80038e6:	6042      	str	r2, [r0, #4]
 80038e8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80038ea:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80038ec:	81c2      	strh	r2, [r0, #14]
          solid()
 80038ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80038f2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80038f6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80038fa:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80038fe:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003900:	9100      	str	r1, [sp, #0]
 8003902:	3010      	adds	r0, #16
 8003904:	4611      	mov	r1, r2
 8003906:	f7fe fddf 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800390a:	4620      	mov	r0, r4
 800390c:	b002      	add	sp, #8
 800390e:	bd10      	pop	{r4, pc}
 8003910:	0802b9a4 	.word	0x0802b9a4
 8003914:	0802b888 	.word	0x0802b888
 8003918:	200137c2 	.word	0x200137c2
 800391c:	200137c0 	.word	0x200137c0

08003920 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003924:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003928:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800392a:	68a0      	ldr	r0, [r4, #8]
 800392c:	6803      	ldr	r3, [r0, #0]
 800392e:	6a1b      	ldr	r3, [r3, #32]
 8003930:	4798      	blx	r3
 8003932:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003936:	d205      	bcs.n	8003944 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003938:	4b42      	ldr	r3, [pc, #264]	; (8003a44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 800393a:	4a43      	ldr	r2, [pc, #268]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 800393c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800393e:	4843      	ldr	r0, [pc, #268]	; (8003a4c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003940:	f024 fdf6 	bl	8028530 <__assert_func>
 8003944:	6860      	ldr	r0, [r4, #4]
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	6a1b      	ldr	r3, [r3, #32]
 800394a:	4798      	blx	r3
 800394c:	280f      	cmp	r0, #15
 800394e:	d803      	bhi.n	8003958 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003950:	4b3f      	ldr	r3, [pc, #252]	; (8003a50 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003952:	4a3d      	ldr	r2, [pc, #244]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003954:	21a4      	movs	r1, #164	; 0xa4
 8003956:	e7f2      	b.n	800393e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003958:	68e0      	ldr	r0, [r4, #12]
 800395a:	6803      	ldr	r3, [r0, #0]
 800395c:	6a1b      	ldr	r3, [r3, #32]
 800395e:	4798      	blx	r3
 8003960:	2837      	cmp	r0, #55	; 0x37
 8003962:	d803      	bhi.n	800396c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003964:	4b3b      	ldr	r3, [pc, #236]	; (8003a54 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003966:	4a38      	ldr	r2, [pc, #224]	; (8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003968:	21a5      	movs	r1, #165	; 0xa5
 800396a:	e7e8      	b.n	800393e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800396c:	f011 fa90 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003970:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003974:	3004      	adds	r0, #4
 8003976:	f011 faf1 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800397a:	f8d9 0000 	ldr.w	r0, [r9]
 800397e:	b110      	cbz	r0, 8003986 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003980:	6803      	ldr	r3, [r0, #0]
 8003982:	68db      	ldr	r3, [r3, #12]
 8003984:	4798      	blx	r3
    if (*currentTrans)
 8003986:	f8d9 0000 	ldr.w	r0, [r9]
 800398a:	b110      	cbz	r0, 8003992 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800398c:	6803      	ldr	r3, [r0, #0]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	4798      	blx	r3
    if (*currentScreen)
 8003992:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003a5c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003996:	f8d8 0000 	ldr.w	r0, [r8]
 800399a:	b110      	cbz	r0, 80039a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800399c:	6803      	ldr	r3, [r0, #0]
 800399e:	695b      	ldr	r3, [r3, #20]
 80039a0:	4798      	blx	r3
    if (*currentPresenter)
 80039a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039a6:	b110      	cbz	r0, 80039ae <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80039a8:	6803      	ldr	r3, [r0, #0]
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	4798      	blx	r3
    if (*currentScreen)
 80039ae:	f8d8 0000 	ldr.w	r0, [r8]
 80039b2:	b110      	cbz	r0, 80039ba <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80039b4:	6803      	ldr	r3, [r0, #0]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	4798      	blx	r3
    if (*currentPresenter)
 80039ba:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039be:	b110      	cbz	r0, 80039c6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80039c0:	6803      	ldr	r3, [r0, #0]
 80039c2:	689b      	ldr	r3, [r3, #8]
 80039c4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039c6:	68e0      	ldr	r0, [r4, #12]
 80039c8:	2100      	movs	r1, #0
 80039ca:	f7ff ff77 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80039ce:	2114      	movs	r1, #20
 80039d0:	4605      	mov	r5, r0
 80039d2:	f7ff ff77 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80039d6:	68a0      	ldr	r0, [r4, #8]
 80039d8:	6803      	ldr	r3, [r0, #0]
 80039da:	2100      	movs	r1, #0
 80039dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039de:	4798      	blx	r3
 80039e0:	4606      	mov	r6, r0
 80039e2:	f004 fac1 	bl	8007f68 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80039e6:	6860      	ldr	r0, [r4, #4]
 80039e8:	6803      	ldr	r3, [r0, #0]
 80039ea:	2100      	movs	r1, #0
 80039ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039ee:	4798      	blx	r3
 80039f0:	4631      	mov	r1, r6
 80039f2:	4604      	mov	r4, r0
 80039f4:	f004 fa92 	bl	8007f1c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80039f8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80039fc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003a00:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003a04:	b1dc      	cbz	r4, 8003a3e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003a06:	1d23      	adds	r3, r4, #4
 8003a08:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003a0c:	6833      	ldr	r3, [r6, #0]
 8003a0e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a12:	4630      	mov	r0, r6
 8003a14:	68db      	ldr	r3, [r3, #12]
 8003a16:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a18:	4798      	blx	r3
    newPresenter->activate();
 8003a1a:	6823      	ldr	r3, [r4, #0]
 8003a1c:	4620      	mov	r0, r4
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a22:	4629      	mov	r1, r5
 8003a24:	4630      	mov	r0, r6
 8003a26:	f013 f85f 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a2a:	682b      	ldr	r3, [r5, #0]
 8003a2c:	4628      	mov	r0, r5
 8003a2e:	691b      	ldr	r3, [r3, #16]
 8003a30:	4798      	blx	r3
    newTransition->invalidate();
 8003a32:	682b      	ldr	r3, [r5, #0]
 8003a34:	4628      	mov	r0, r5
 8003a36:	695b      	ldr	r3, [r3, #20]
}
 8003a38:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a3c:	4718      	bx	r3
    model->bind(newPresenter);
 8003a3e:	4623      	mov	r3, r4
 8003a40:	e7e2      	b.n	8003a08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003a42:	bf00      	nop
 8003a44:	0802a2b8 	.word	0x0802a2b8
 8003a48:	0802a6e9 	.word	0x0802a6e9
 8003a4c:	0802a454 	.word	0x0802a454
 8003a50:	0802a49b 	.word	0x0802a49b
 8003a54:	0802a53e 	.word	0x0802a53e
 8003a58:	20013814 	.word	0x20013814
 8003a5c:	20013810 	.word	0x20013810

08003a60 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a64:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a6a:	68a0      	ldr	r0, [r4, #8]
 8003a6c:	6803      	ldr	r3, [r0, #0]
 8003a6e:	6a1b      	ldr	r3, [r3, #32]
 8003a70:	4798      	blx	r3
 8003a72:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003a76:	d205      	bcs.n	8003a84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003a78:	4b42      	ldr	r3, [pc, #264]	; (8003b84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003a7a:	4a43      	ldr	r2, [pc, #268]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a7c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a7e:	4843      	ldr	r0, [pc, #268]	; (8003b8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003a80:	f024 fd56 	bl	8028530 <__assert_func>
 8003a84:	6860      	ldr	r0, [r4, #4]
 8003a86:	6803      	ldr	r3, [r0, #0]
 8003a88:	6a1b      	ldr	r3, [r3, #32]
 8003a8a:	4798      	blx	r3
 8003a8c:	280f      	cmp	r0, #15
 8003a8e:	d803      	bhi.n	8003a98 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003a90:	4b3f      	ldr	r3, [pc, #252]	; (8003b90 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003a92:	4a3d      	ldr	r2, [pc, #244]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a94:	21a4      	movs	r1, #164	; 0xa4
 8003a96:	e7f2      	b.n	8003a7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a98:	68e0      	ldr	r0, [r4, #12]
 8003a9a:	6803      	ldr	r3, [r0, #0]
 8003a9c:	6a1b      	ldr	r3, [r3, #32]
 8003a9e:	4798      	blx	r3
 8003aa0:	2837      	cmp	r0, #55	; 0x37
 8003aa2:	d803      	bhi.n	8003aac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003aa4:	4b3b      	ldr	r3, [pc, #236]	; (8003b94 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003aa6:	4a38      	ldr	r2, [pc, #224]	; (8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003aa8:	21a5      	movs	r1, #165	; 0xa5
 8003aaa:	e7e8      	b.n	8003a7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003aac:	f011 f9f0 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ab0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003b98 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003ab4:	3004      	adds	r0, #4
 8003ab6:	f011 fa51 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003aba:	f8d9 0000 	ldr.w	r0, [r9]
 8003abe:	b110      	cbz	r0, 8003ac6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003ac0:	6803      	ldr	r3, [r0, #0]
 8003ac2:	68db      	ldr	r3, [r3, #12]
 8003ac4:	4798      	blx	r3
    if (*currentTrans)
 8003ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aca:	b110      	cbz	r0, 8003ad2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003acc:	6803      	ldr	r3, [r0, #0]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	4798      	blx	r3
    if (*currentScreen)
 8003ad2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003b9c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003ad6:	f8d8 0000 	ldr.w	r0, [r8]
 8003ada:	b110      	cbz	r0, 8003ae2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003adc:	6803      	ldr	r3, [r0, #0]
 8003ade:	695b      	ldr	r3, [r3, #20]
 8003ae0:	4798      	blx	r3
    if (*currentPresenter)
 8003ae2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ae6:	b110      	cbz	r0, 8003aee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ae8:	6803      	ldr	r3, [r0, #0]
 8003aea:	685b      	ldr	r3, [r3, #4]
 8003aec:	4798      	blx	r3
    if (*currentScreen)
 8003aee:	f8d8 0000 	ldr.w	r0, [r8]
 8003af2:	b110      	cbz	r0, 8003afa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003af4:	6803      	ldr	r3, [r0, #0]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	4798      	blx	r3
    if (*currentPresenter)
 8003afa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003afe:	b110      	cbz	r0, 8003b06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b00:	6803      	ldr	r3, [r0, #0]
 8003b02:	689b      	ldr	r3, [r3, #8]
 8003b04:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b06:	68e0      	ldr	r0, [r4, #12]
 8003b08:	2100      	movs	r1, #0
 8003b0a:	f7ff fed7 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003b0e:	2114      	movs	r1, #20
 8003b10:	4605      	mov	r5, r0
 8003b12:	f7ff fed7 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b16:	68a0      	ldr	r0, [r4, #8]
 8003b18:	6803      	ldr	r3, [r0, #0]
 8003b1a:	2100      	movs	r1, #0
 8003b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1e:	4798      	blx	r3
 8003b20:	4606      	mov	r6, r0
 8003b22:	f004 fc05 	bl	8008330 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b26:	6860      	ldr	r0, [r4, #4]
 8003b28:	6803      	ldr	r3, [r0, #0]
 8003b2a:	2100      	movs	r1, #0
 8003b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b2e:	4798      	blx	r3
 8003b30:	4631      	mov	r1, r6
 8003b32:	4604      	mov	r4, r0
 8003b34:	f004 fbd6 	bl	80082e4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003b38:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b3c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b40:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b44:	b1dc      	cbz	r4, 8003b7e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003b46:	1d23      	adds	r3, r4, #4
 8003b48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b4c:	6833      	ldr	r3, [r6, #0]
 8003b4e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b52:	4630      	mov	r0, r6
 8003b54:	68db      	ldr	r3, [r3, #12]
 8003b56:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b58:	4798      	blx	r3
    newPresenter->activate();
 8003b5a:	6823      	ldr	r3, [r4, #0]
 8003b5c:	4620      	mov	r0, r4
 8003b5e:	681b      	ldr	r3, [r3, #0]
 8003b60:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b62:	4629      	mov	r1, r5
 8003b64:	4630      	mov	r0, r6
 8003b66:	f012 ffbf 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b6a:	682b      	ldr	r3, [r5, #0]
 8003b6c:	4628      	mov	r0, r5
 8003b6e:	691b      	ldr	r3, [r3, #16]
 8003b70:	4798      	blx	r3
    newTransition->invalidate();
 8003b72:	682b      	ldr	r3, [r5, #0]
 8003b74:	4628      	mov	r0, r5
 8003b76:	695b      	ldr	r3, [r3, #20]
}
 8003b78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b7c:	4718      	bx	r3
    model->bind(newPresenter);
 8003b7e:	4623      	mov	r3, r4
 8003b80:	e7e2      	b.n	8003b48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003b82:	bf00      	nop
 8003b84:	0802a2b8 	.word	0x0802a2b8
 8003b88:	0802a807 	.word	0x0802a807
 8003b8c:	0802a454 	.word	0x0802a454
 8003b90:	0802a49b 	.word	0x0802a49b
 8003b94:	0802a53e 	.word	0x0802a53e
 8003b98:	20013814 	.word	0x20013814
 8003b9c:	20013810 	.word	0x20013810

08003ba0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003ba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ba4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ba8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003baa:	68a0      	ldr	r0, [r4, #8]
 8003bac:	6803      	ldr	r3, [r0, #0]
 8003bae:	6a1b      	ldr	r3, [r3, #32]
 8003bb0:	4798      	blx	r3
 8003bb2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003bb6:	d205      	bcs.n	8003bc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003bb8:	4b42      	ldr	r3, [pc, #264]	; (8003cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003bba:	4a43      	ldr	r2, [pc, #268]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bbc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bbe:	4843      	ldr	r0, [pc, #268]	; (8003ccc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003bc0:	f024 fcb6 	bl	8028530 <__assert_func>
 8003bc4:	6860      	ldr	r0, [r4, #4]
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	6a1b      	ldr	r3, [r3, #32]
 8003bca:	4798      	blx	r3
 8003bcc:	280f      	cmp	r0, #15
 8003bce:	d803      	bhi.n	8003bd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003bd0:	4b3f      	ldr	r3, [pc, #252]	; (8003cd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003bd2:	4a3d      	ldr	r2, [pc, #244]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bd4:	21a4      	movs	r1, #164	; 0xa4
 8003bd6:	e7f2      	b.n	8003bbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bd8:	68e0      	ldr	r0, [r4, #12]
 8003bda:	6803      	ldr	r3, [r0, #0]
 8003bdc:	6a1b      	ldr	r3, [r3, #32]
 8003bde:	4798      	blx	r3
 8003be0:	2837      	cmp	r0, #55	; 0x37
 8003be2:	d803      	bhi.n	8003bec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003be4:	4b3b      	ldr	r3, [pc, #236]	; (8003cd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003be6:	4a38      	ldr	r2, [pc, #224]	; (8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003be8:	21a5      	movs	r1, #165	; 0xa5
 8003bea:	e7e8      	b.n	8003bbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003bec:	f011 f950 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003bf0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003cd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003bf4:	3004      	adds	r0, #4
 8003bf6:	f011 f9b1 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003bfa:	f8d9 0000 	ldr.w	r0, [r9]
 8003bfe:	b110      	cbz	r0, 8003c06 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c00:	6803      	ldr	r3, [r0, #0]
 8003c02:	68db      	ldr	r3, [r3, #12]
 8003c04:	4798      	blx	r3
    if (*currentTrans)
 8003c06:	f8d9 0000 	ldr.w	r0, [r9]
 8003c0a:	b110      	cbz	r0, 8003c12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c0c:	6803      	ldr	r3, [r0, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4798      	blx	r3
    if (*currentScreen)
 8003c12:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003cdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003c16:	f8d8 0000 	ldr.w	r0, [r8]
 8003c1a:	b110      	cbz	r0, 8003c22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c1c:	6803      	ldr	r3, [r0, #0]
 8003c1e:	695b      	ldr	r3, [r3, #20]
 8003c20:	4798      	blx	r3
    if (*currentPresenter)
 8003c22:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c26:	b110      	cbz	r0, 8003c2e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c28:	6803      	ldr	r3, [r0, #0]
 8003c2a:	685b      	ldr	r3, [r3, #4]
 8003c2c:	4798      	blx	r3
    if (*currentScreen)
 8003c2e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c32:	b110      	cbz	r0, 8003c3a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c34:	6803      	ldr	r3, [r0, #0]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	4798      	blx	r3
    if (*currentPresenter)
 8003c3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c3e:	b110      	cbz	r0, 8003c46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c40:	6803      	ldr	r3, [r0, #0]
 8003c42:	689b      	ldr	r3, [r3, #8]
 8003c44:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c46:	68e0      	ldr	r0, [r4, #12]
 8003c48:	2100      	movs	r1, #0
 8003c4a:	f7ff fe37 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003c4e:	2114      	movs	r1, #20
 8003c50:	4605      	mov	r5, r0
 8003c52:	f7ff fe37 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c56:	68a0      	ldr	r0, [r4, #8]
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	2100      	movs	r1, #0
 8003c5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c5e:	4798      	blx	r3
 8003c60:	4606      	mov	r6, r0
 8003c62:	f004 fb05 	bl	8008270 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c66:	6860      	ldr	r0, [r4, #4]
 8003c68:	6803      	ldr	r3, [r0, #0]
 8003c6a:	2100      	movs	r1, #0
 8003c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c6e:	4798      	blx	r3
 8003c70:	4631      	mov	r1, r6
 8003c72:	4604      	mov	r4, r0
 8003c74:	f004 fad6 	bl	8008224 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003c78:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c7c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003c80:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c84:	b1dc      	cbz	r4, 8003cbe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003c86:	1d23      	adds	r3, r4, #4
 8003c88:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c8c:	6833      	ldr	r3, [r6, #0]
 8003c8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003c92:	4630      	mov	r0, r6
 8003c94:	68db      	ldr	r3, [r3, #12]
 8003c96:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003c98:	4798      	blx	r3
    newPresenter->activate();
 8003c9a:	6823      	ldr	r3, [r4, #0]
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ca2:	4629      	mov	r1, r5
 8003ca4:	4630      	mov	r0, r6
 8003ca6:	f012 ff1f 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003caa:	682b      	ldr	r3, [r5, #0]
 8003cac:	4628      	mov	r0, r5
 8003cae:	691b      	ldr	r3, [r3, #16]
 8003cb0:	4798      	blx	r3
    newTransition->invalidate();
 8003cb2:	682b      	ldr	r3, [r5, #0]
 8003cb4:	4628      	mov	r0, r5
 8003cb6:	695b      	ldr	r3, [r3, #20]
}
 8003cb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cbc:	4718      	bx	r3
    model->bind(newPresenter);
 8003cbe:	4623      	mov	r3, r4
 8003cc0:	e7e2      	b.n	8003c88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003cc2:	bf00      	nop
 8003cc4:	0802a2b8 	.word	0x0802a2b8
 8003cc8:	0802a937 	.word	0x0802a937
 8003ccc:	0802a454 	.word	0x0802a454
 8003cd0:	0802a49b 	.word	0x0802a49b
 8003cd4:	0802a53e 	.word	0x0802a53e
 8003cd8:	20013814 	.word	0x20013814
 8003cdc:	20013810 	.word	0x20013810

08003ce0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003ce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ce4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ce8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003cea:	68a0      	ldr	r0, [r4, #8]
 8003cec:	6803      	ldr	r3, [r0, #0]
 8003cee:	6a1b      	ldr	r3, [r3, #32]
 8003cf0:	4798      	blx	r3
 8003cf2:	f241 137b 	movw	r3, #4475	; 0x117b
 8003cf6:	4298      	cmp	r0, r3
 8003cf8:	d805      	bhi.n	8003d06 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003cfa:	4b42      	ldr	r3, [pc, #264]	; (8003e04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003cfc:	4a42      	ldr	r2, [pc, #264]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003cfe:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d00:	4842      	ldr	r0, [pc, #264]	; (8003e0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003d02:	f024 fc15 	bl	8028530 <__assert_func>
 8003d06:	6860      	ldr	r0, [r4, #4]
 8003d08:	6803      	ldr	r3, [r0, #0]
 8003d0a:	6a1b      	ldr	r3, [r3, #32]
 8003d0c:	4798      	blx	r3
 8003d0e:	280f      	cmp	r0, #15
 8003d10:	d803      	bhi.n	8003d1a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003d12:	4b3f      	ldr	r3, [pc, #252]	; (8003e10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003d14:	4a3c      	ldr	r2, [pc, #240]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d16:	21a4      	movs	r1, #164	; 0xa4
 8003d18:	e7f2      	b.n	8003d00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d1a:	68e0      	ldr	r0, [r4, #12]
 8003d1c:	6803      	ldr	r3, [r0, #0]
 8003d1e:	6a1b      	ldr	r3, [r3, #32]
 8003d20:	4798      	blx	r3
 8003d22:	2837      	cmp	r0, #55	; 0x37
 8003d24:	d803      	bhi.n	8003d2e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003d26:	4b3b      	ldr	r3, [pc, #236]	; (8003e14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003d28:	4a37      	ldr	r2, [pc, #220]	; (8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d2a:	21a5      	movs	r1, #165	; 0xa5
 8003d2c:	e7e8      	b.n	8003d00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d2e:	f011 f8af 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d32:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003d36:	3004      	adds	r0, #4
 8003d38:	f011 f910 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8003d40:	b110      	cbz	r0, 8003d48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d42:	6803      	ldr	r3, [r0, #0]
 8003d44:	68db      	ldr	r3, [r3, #12]
 8003d46:	4798      	blx	r3
    if (*currentTrans)
 8003d48:	f8d9 0000 	ldr.w	r0, [r9]
 8003d4c:	b110      	cbz	r0, 8003d54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	4798      	blx	r3
    if (*currentScreen)
 8003d54:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003e1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003d58:	f8d8 0000 	ldr.w	r0, [r8]
 8003d5c:	b110      	cbz	r0, 8003d64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d5e:	6803      	ldr	r3, [r0, #0]
 8003d60:	695b      	ldr	r3, [r3, #20]
 8003d62:	4798      	blx	r3
    if (*currentPresenter)
 8003d64:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d68:	b110      	cbz	r0, 8003d70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d6a:	6803      	ldr	r3, [r0, #0]
 8003d6c:	685b      	ldr	r3, [r3, #4]
 8003d6e:	4798      	blx	r3
    if (*currentScreen)
 8003d70:	f8d8 0000 	ldr.w	r0, [r8]
 8003d74:	b110      	cbz	r0, 8003d7c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d76:	6803      	ldr	r3, [r0, #0]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	4798      	blx	r3
    if (*currentPresenter)
 8003d7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d80:	b110      	cbz	r0, 8003d88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d82:	6803      	ldr	r3, [r0, #0]
 8003d84:	689b      	ldr	r3, [r3, #8]
 8003d86:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d88:	68e0      	ldr	r0, [r4, #12]
 8003d8a:	2100      	movs	r1, #0
 8003d8c:	f7ff fd96 	bl	80038bc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d90:	2114      	movs	r1, #20
 8003d92:	4605      	mov	r5, r0
 8003d94:	f7ff fd96 	bl	80038c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d98:	68a0      	ldr	r0, [r4, #8]
 8003d9a:	6803      	ldr	r3, [r0, #0]
 8003d9c:	2100      	movs	r1, #0
 8003d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003da0:	4798      	blx	r3
 8003da2:	4606      	mov	r6, r0
 8003da4:	f004 fa04 	bl	80081b0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003da8:	6860      	ldr	r0, [r4, #4]
 8003daa:	6803      	ldr	r3, [r0, #0]
 8003dac:	2100      	movs	r1, #0
 8003dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003db0:	4798      	blx	r3
 8003db2:	4631      	mov	r1, r6
 8003db4:	4604      	mov	r4, r0
 8003db6:	f004 f9d5 	bl	8008164 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003dba:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dbe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dc2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003dc6:	b1dc      	cbz	r4, 8003e00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003dc8:	1d23      	adds	r3, r4, #4
 8003dca:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dce:	6833      	ldr	r3, [r6, #0]
 8003dd0:	f8c4 a008 	str.w	sl, [r4, #8]
 8003dd4:	4630      	mov	r0, r6
 8003dd6:	68db      	ldr	r3, [r3, #12]
 8003dd8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003dda:	4798      	blx	r3
    newPresenter->activate();
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	4620      	mov	r0, r4
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003de4:	4629      	mov	r1, r5
 8003de6:	4630      	mov	r0, r6
 8003de8:	f012 fe7e 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003dec:	682b      	ldr	r3, [r5, #0]
 8003dee:	4628      	mov	r0, r5
 8003df0:	691b      	ldr	r3, [r3, #16]
 8003df2:	4798      	blx	r3
    newTransition->invalidate();
 8003df4:	682b      	ldr	r3, [r5, #0]
 8003df6:	4628      	mov	r0, r5
 8003df8:	695b      	ldr	r3, [r3, #20]
}
 8003dfa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dfe:	4718      	bx	r3
    model->bind(newPresenter);
 8003e00:	4623      	mov	r3, r4
 8003e02:	e7e2      	b.n	8003dca <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003e04:	0802a2b8 	.word	0x0802a2b8
 8003e08:	0802aa55 	.word	0x0802aa55
 8003e0c:	0802a454 	.word	0x0802a454
 8003e10:	0802a49b 	.word	0x0802a49b
 8003e14:	0802a53e 	.word	0x0802a53e
 8003e18:	20013814 	.word	0x20013814
 8003e1c:	20013810 	.word	0x20013810

08003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003e20:	6803      	ldr	r3, [r0, #0]
 8003e22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e24:	4718      	bx	r3
	...

08003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003e28:	4b12      	ldr	r3, [pc, #72]	; (8003e74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e2a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003e2c:	6003      	str	r3, [r0, #0]
 8003e2e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e32:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003e34:	4b10      	ldr	r3, [pc, #64]	; (8003e78 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003e36:	7241      	strb	r1, [r0, #9]
 8003e38:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e3a:	4910      	ldr	r1, [pc, #64]	; (8003e7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003e3c:	4b10      	ldr	r3, [pc, #64]	; (8003e80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e3e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003e42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e46:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003e48:	2200      	movs	r2, #0
 8003e4a:	6042      	str	r2, [r0, #4]
 8003e4c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003e4e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003e50:	81c2      	strh	r2, [r0, #14]
          solid()
 8003e52:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003e56:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003e5a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003e5e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e62:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e64:	9100      	str	r1, [sp, #0]
 8003e66:	3010      	adds	r0, #16
 8003e68:	4611      	mov	r1, r2
 8003e6a:	f7fe fb2d 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003e6e:	4620      	mov	r0, r4
 8003e70:	b002      	add	sp, #8
 8003e72:	bd10      	pop	{r4, pc}
 8003e74:	0802b980 	.word	0x0802b980
 8003e78:	0802b888 	.word	0x0802b888
 8003e7c:	200137c2 	.word	0x200137c2
 8003e80:	200137c0 	.word	0x200137c0

08003e84 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8003e84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e88:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e8c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e8e:	68a0      	ldr	r0, [r4, #8]
 8003e90:	6803      	ldr	r3, [r0, #0]
 8003e92:	6a1b      	ldr	r3, [r3, #32]
 8003e94:	4798      	blx	r3
 8003e96:	f241 03af 	movw	r3, #4271	; 0x10af
 8003e9a:	4298      	cmp	r0, r3
 8003e9c:	d805      	bhi.n	8003eaa <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8003e9e:	4b42      	ldr	r3, [pc, #264]	; (8003fa8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8003ea0:	4a42      	ldr	r2, [pc, #264]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003ea2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ea4:	4842      	ldr	r0, [pc, #264]	; (8003fb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8003ea6:	f024 fb43 	bl	8028530 <__assert_func>
 8003eaa:	6860      	ldr	r0, [r4, #4]
 8003eac:	6803      	ldr	r3, [r0, #0]
 8003eae:	6a1b      	ldr	r3, [r3, #32]
 8003eb0:	4798      	blx	r3
 8003eb2:	280f      	cmp	r0, #15
 8003eb4:	d803      	bhi.n	8003ebe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8003eb6:	4b3f      	ldr	r3, [pc, #252]	; (8003fb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8003eb8:	4a3c      	ldr	r2, [pc, #240]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003eba:	21a4      	movs	r1, #164	; 0xa4
 8003ebc:	e7f2      	b.n	8003ea4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ebe:	68e0      	ldr	r0, [r4, #12]
 8003ec0:	6803      	ldr	r3, [r0, #0]
 8003ec2:	6a1b      	ldr	r3, [r3, #32]
 8003ec4:	4798      	blx	r3
 8003ec6:	2837      	cmp	r0, #55	; 0x37
 8003ec8:	d803      	bhi.n	8003ed2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8003eca:	4b3b      	ldr	r3, [pc, #236]	; (8003fb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8003ecc:	4a37      	ldr	r2, [pc, #220]	; (8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003ece:	21a5      	movs	r1, #165	; 0xa5
 8003ed0:	e7e8      	b.n	8003ea4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003ed2:	f010 ffdd 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ed6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8003eda:	3004      	adds	r0, #4
 8003edc:	f011 f83e 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ee0:	f8d9 0000 	ldr.w	r0, [r9]
 8003ee4:	b110      	cbz	r0, 8003eec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003ee6:	6803      	ldr	r3, [r0, #0]
 8003ee8:	68db      	ldr	r3, [r3, #12]
 8003eea:	4798      	blx	r3
    if (*currentTrans)
 8003eec:	f8d9 0000 	ldr.w	r0, [r9]
 8003ef0:	b110      	cbz	r0, 8003ef8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003ef2:	6803      	ldr	r3, [r0, #0]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4798      	blx	r3
    if (*currentScreen)
 8003ef8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003efc:	f8d8 0000 	ldr.w	r0, [r8]
 8003f00:	b110      	cbz	r0, 8003f08 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003f02:	6803      	ldr	r3, [r0, #0]
 8003f04:	695b      	ldr	r3, [r3, #20]
 8003f06:	4798      	blx	r3
    if (*currentPresenter)
 8003f08:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f0c:	b110      	cbz	r0, 8003f14 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003f0e:	6803      	ldr	r3, [r0, #0]
 8003f10:	685b      	ldr	r3, [r3, #4]
 8003f12:	4798      	blx	r3
    if (*currentScreen)
 8003f14:	f8d8 0000 	ldr.w	r0, [r8]
 8003f18:	b110      	cbz	r0, 8003f20 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f1a:	6803      	ldr	r3, [r0, #0]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	4798      	blx	r3
    if (*currentPresenter)
 8003f20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f24:	b110      	cbz	r0, 8003f2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	689b      	ldr	r3, [r3, #8]
 8003f2a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f2c:	68e0      	ldr	r0, [r4, #12]
 8003f2e:	2100      	movs	r1, #0
 8003f30:	f7ff ff76 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003f34:	2114      	movs	r1, #20
 8003f36:	4605      	mov	r5, r0
 8003f38:	f7ff ff76 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f3c:	68a0      	ldr	r0, [r4, #8]
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	2100      	movs	r1, #0
 8003f42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f44:	4798      	blx	r3
 8003f46:	4606      	mov	r6, r0
 8003f48:	f004 fc0e 	bl	8008768 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f4c:	6860      	ldr	r0, [r4, #4]
 8003f4e:	6803      	ldr	r3, [r0, #0]
 8003f50:	2100      	movs	r1, #0
 8003f52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f54:	4798      	blx	r3
 8003f56:	4631      	mov	r1, r6
 8003f58:	4604      	mov	r4, r0
 8003f5a:	f004 fbdf 	bl	800871c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003f5e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f62:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f66:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f6a:	b1dc      	cbz	r4, 8003fa4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003f6c:	1d23      	adds	r3, r4, #4
 8003f6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f72:	6833      	ldr	r3, [r6, #0]
 8003f74:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f78:	4630      	mov	r0, r6
 8003f7a:	68db      	ldr	r3, [r3, #12]
 8003f7c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f7e:	4798      	blx	r3
    newPresenter->activate();
 8003f80:	6823      	ldr	r3, [r4, #0]
 8003f82:	4620      	mov	r0, r4
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f88:	4629      	mov	r1, r5
 8003f8a:	4630      	mov	r0, r6
 8003f8c:	f012 fdac 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f90:	682b      	ldr	r3, [r5, #0]
 8003f92:	4628      	mov	r0, r5
 8003f94:	691b      	ldr	r3, [r3, #16]
 8003f96:	4798      	blx	r3
    newTransition->invalidate();
 8003f98:	682b      	ldr	r3, [r5, #0]
 8003f9a:	4628      	mov	r0, r5
 8003f9c:	695b      	ldr	r3, [r3, #20]
}
 8003f9e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fa2:	4718      	bx	r3
    model->bind(newPresenter);
 8003fa4:	4623      	mov	r3, r4
 8003fa6:	e7e2      	b.n	8003f6e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8003fa8:	0802a2b8 	.word	0x0802a2b8
 8003fac:	0802ab6f 	.word	0x0802ab6f
 8003fb0:	0802a454 	.word	0x0802a454
 8003fb4:	0802a49b 	.word	0x0802a49b
 8003fb8:	0802a53e 	.word	0x0802a53e
 8003fbc:	20013814 	.word	0x20013814
 8003fc0:	20013810 	.word	0x20013810

08003fc4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8003fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fc8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fcc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fce:	68a0      	ldr	r0, [r4, #8]
 8003fd0:	6803      	ldr	r3, [r0, #0]
 8003fd2:	6a1b      	ldr	r3, [r3, #32]
 8003fd4:	4798      	blx	r3
 8003fd6:	f241 035b 	movw	r3, #4187	; 0x105b
 8003fda:	4298      	cmp	r0, r3
 8003fdc:	d805      	bhi.n	8003fea <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8003fde:	4b42      	ldr	r3, [pc, #264]	; (80040e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8003fe0:	4a42      	ldr	r2, [pc, #264]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003fe2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003fe4:	4842      	ldr	r0, [pc, #264]	; (80040f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8003fe6:	f024 faa3 	bl	8028530 <__assert_func>
 8003fea:	6860      	ldr	r0, [r4, #4]
 8003fec:	6803      	ldr	r3, [r0, #0]
 8003fee:	6a1b      	ldr	r3, [r3, #32]
 8003ff0:	4798      	blx	r3
 8003ff2:	280f      	cmp	r0, #15
 8003ff4:	d803      	bhi.n	8003ffe <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8003ff6:	4b3f      	ldr	r3, [pc, #252]	; (80040f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8003ff8:	4a3c      	ldr	r2, [pc, #240]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003ffa:	21a4      	movs	r1, #164	; 0xa4
 8003ffc:	e7f2      	b.n	8003fe4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ffe:	68e0      	ldr	r0, [r4, #12]
 8004000:	6803      	ldr	r3, [r0, #0]
 8004002:	6a1b      	ldr	r3, [r3, #32]
 8004004:	4798      	blx	r3
 8004006:	2837      	cmp	r0, #55	; 0x37
 8004008:	d803      	bhi.n	8004012 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 800400a:	4b3b      	ldr	r3, [pc, #236]	; (80040f8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800400c:	4a37      	ldr	r2, [pc, #220]	; (80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800400e:	21a5      	movs	r1, #165	; 0xa5
 8004010:	e7e8      	b.n	8003fe4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004012:	f010 ff3d 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004016:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040fc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 800401a:	3004      	adds	r0, #4
 800401c:	f010 ff9e 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004020:	f8d9 0000 	ldr.w	r0, [r9]
 8004024:	b110      	cbz	r0, 800402c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004026:	6803      	ldr	r3, [r0, #0]
 8004028:	68db      	ldr	r3, [r3, #12]
 800402a:	4798      	blx	r3
    if (*currentTrans)
 800402c:	f8d9 0000 	ldr.w	r0, [r9]
 8004030:	b110      	cbz	r0, 8004038 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004032:	6803      	ldr	r3, [r0, #0]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	4798      	blx	r3
    if (*currentScreen)
 8004038:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004100 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800403c:	f8d8 0000 	ldr.w	r0, [r8]
 8004040:	b110      	cbz	r0, 8004048 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004042:	6803      	ldr	r3, [r0, #0]
 8004044:	695b      	ldr	r3, [r3, #20]
 8004046:	4798      	blx	r3
    if (*currentPresenter)
 8004048:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800404c:	b110      	cbz	r0, 8004054 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800404e:	6803      	ldr	r3, [r0, #0]
 8004050:	685b      	ldr	r3, [r3, #4]
 8004052:	4798      	blx	r3
    if (*currentScreen)
 8004054:	f8d8 0000 	ldr.w	r0, [r8]
 8004058:	b110      	cbz	r0, 8004060 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800405a:	6803      	ldr	r3, [r0, #0]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	4798      	blx	r3
    if (*currentPresenter)
 8004060:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004064:	b110      	cbz	r0, 800406c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004066:	6803      	ldr	r3, [r0, #0]
 8004068:	689b      	ldr	r3, [r3, #8]
 800406a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800406c:	68e0      	ldr	r0, [r4, #12]
 800406e:	2100      	movs	r1, #0
 8004070:	f7ff fed6 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004074:	2114      	movs	r1, #20
 8004076:	4605      	mov	r5, r0
 8004078:	f7ff fed6 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800407c:	68a0      	ldr	r0, [r4, #8]
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	2100      	movs	r1, #0
 8004082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004084:	4798      	blx	r3
 8004086:	4606      	mov	r6, r0
 8004088:	f003 ffc8 	bl	800801c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800408c:	6860      	ldr	r0, [r4, #4]
 800408e:	6803      	ldr	r3, [r0, #0]
 8004090:	2100      	movs	r1, #0
 8004092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004094:	4798      	blx	r3
 8004096:	4631      	mov	r1, r6
 8004098:	4604      	mov	r4, r0
 800409a:	f003 ff99 	bl	8007fd0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800409e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040aa:	b1dc      	cbz	r4, 80040e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 80040ac:	1d23      	adds	r3, r4, #4
 80040ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040b2:	6833      	ldr	r3, [r6, #0]
 80040b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80040b8:	4630      	mov	r0, r6
 80040ba:	68db      	ldr	r3, [r3, #12]
 80040bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040be:	4798      	blx	r3
    newPresenter->activate();
 80040c0:	6823      	ldr	r3, [r4, #0]
 80040c2:	4620      	mov	r0, r4
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040c8:	4629      	mov	r1, r5
 80040ca:	4630      	mov	r0, r6
 80040cc:	f012 fd0c 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040d0:	682b      	ldr	r3, [r5, #0]
 80040d2:	4628      	mov	r0, r5
 80040d4:	691b      	ldr	r3, [r3, #16]
 80040d6:	4798      	blx	r3
    newTransition->invalidate();
 80040d8:	682b      	ldr	r3, [r5, #0]
 80040da:	4628      	mov	r0, r5
 80040dc:	695b      	ldr	r3, [r3, #20]
}
 80040de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040e2:	4718      	bx	r3
    model->bind(newPresenter);
 80040e4:	4623      	mov	r3, r4
 80040e6:	e7e2      	b.n	80040ae <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80040e8:	0802a2b8 	.word	0x0802a2b8
 80040ec:	0802ac8f 	.word	0x0802ac8f
 80040f0:	0802a454 	.word	0x0802a454
 80040f4:	0802a49b 	.word	0x0802a49b
 80040f8:	0802a53e 	.word	0x0802a53e
 80040fc:	20013814 	.word	0x20013814
 8004100:	20013810 	.word	0x20013810

08004104 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004108:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800410c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800410e:	68a0      	ldr	r0, [r4, #8]
 8004110:	6803      	ldr	r3, [r0, #0]
 8004112:	6a1b      	ldr	r3, [r3, #32]
 8004114:	4798      	blx	r3
 8004116:	f241 035b 	movw	r3, #4187	; 0x105b
 800411a:	4298      	cmp	r0, r3
 800411c:	d805      	bhi.n	800412a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800411e:	4b42      	ldr	r3, [pc, #264]	; (8004228 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004120:	4a42      	ldr	r2, [pc, #264]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004122:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004124:	4842      	ldr	r0, [pc, #264]	; (8004230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004126:	f024 fa03 	bl	8028530 <__assert_func>
 800412a:	6860      	ldr	r0, [r4, #4]
 800412c:	6803      	ldr	r3, [r0, #0]
 800412e:	6a1b      	ldr	r3, [r3, #32]
 8004130:	4798      	blx	r3
 8004132:	280f      	cmp	r0, #15
 8004134:	d803      	bhi.n	800413e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004136:	4b3f      	ldr	r3, [pc, #252]	; (8004234 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004138:	4a3c      	ldr	r2, [pc, #240]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800413a:	21a4      	movs	r1, #164	; 0xa4
 800413c:	e7f2      	b.n	8004124 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800413e:	68e0      	ldr	r0, [r4, #12]
 8004140:	6803      	ldr	r3, [r0, #0]
 8004142:	6a1b      	ldr	r3, [r3, #32]
 8004144:	4798      	blx	r3
 8004146:	2837      	cmp	r0, #55	; 0x37
 8004148:	d803      	bhi.n	8004152 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 800414a:	4b3b      	ldr	r3, [pc, #236]	; (8004238 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800414c:	4a37      	ldr	r2, [pc, #220]	; (800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800414e:	21a5      	movs	r1, #165	; 0xa5
 8004150:	e7e8      	b.n	8004124 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004152:	f010 fe9d 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004156:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800423c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800415a:	3004      	adds	r0, #4
 800415c:	f010 fefe 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004160:	f8d9 0000 	ldr.w	r0, [r9]
 8004164:	b110      	cbz	r0, 800416c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004166:	6803      	ldr	r3, [r0, #0]
 8004168:	68db      	ldr	r3, [r3, #12]
 800416a:	4798      	blx	r3
    if (*currentTrans)
 800416c:	f8d9 0000 	ldr.w	r0, [r9]
 8004170:	b110      	cbz	r0, 8004178 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004172:	6803      	ldr	r3, [r0, #0]
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4798      	blx	r3
    if (*currentScreen)
 8004178:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004240 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800417c:	f8d8 0000 	ldr.w	r0, [r8]
 8004180:	b110      	cbz	r0, 8004188 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004182:	6803      	ldr	r3, [r0, #0]
 8004184:	695b      	ldr	r3, [r3, #20]
 8004186:	4798      	blx	r3
    if (*currentPresenter)
 8004188:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800418c:	b110      	cbz	r0, 8004194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800418e:	6803      	ldr	r3, [r0, #0]
 8004190:	685b      	ldr	r3, [r3, #4]
 8004192:	4798      	blx	r3
    if (*currentScreen)
 8004194:	f8d8 0000 	ldr.w	r0, [r8]
 8004198:	b110      	cbz	r0, 80041a0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800419a:	6803      	ldr	r3, [r0, #0]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	4798      	blx	r3
    if (*currentPresenter)
 80041a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041a4:	b110      	cbz	r0, 80041ac <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80041a6:	6803      	ldr	r3, [r0, #0]
 80041a8:	689b      	ldr	r3, [r3, #8]
 80041aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041ac:	68e0      	ldr	r0, [r4, #12]
 80041ae:	2100      	movs	r1, #0
 80041b0:	f7ff fe36 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80041b4:	2114      	movs	r1, #20
 80041b6:	4605      	mov	r5, r0
 80041b8:	f7ff fe36 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041bc:	68a0      	ldr	r0, [r4, #8]
 80041be:	6803      	ldr	r3, [r0, #0]
 80041c0:	2100      	movs	r1, #0
 80041c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041c4:	4798      	blx	r3
 80041c6:	4606      	mov	r6, r0
 80041c8:	f003 ff6a 	bl	80080a0 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041cc:	6860      	ldr	r0, [r4, #4]
 80041ce:	6803      	ldr	r3, [r0, #0]
 80041d0:	2100      	movs	r1, #0
 80041d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041d4:	4798      	blx	r3
 80041d6:	4631      	mov	r1, r6
 80041d8:	4604      	mov	r4, r0
 80041da:	f003 ff3b 	bl	8008054 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80041de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80041e2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80041e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80041ea:	b1dc      	cbz	r4, 8004224 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80041ec:	1d23      	adds	r3, r4, #4
 80041ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80041f2:	6833      	ldr	r3, [r6, #0]
 80041f4:	f8c4 a008 	str.w	sl, [r4, #8]
 80041f8:	4630      	mov	r0, r6
 80041fa:	68db      	ldr	r3, [r3, #12]
 80041fc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80041fe:	4798      	blx	r3
    newPresenter->activate();
 8004200:	6823      	ldr	r3, [r4, #0]
 8004202:	4620      	mov	r0, r4
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004208:	4629      	mov	r1, r5
 800420a:	4630      	mov	r0, r6
 800420c:	f012 fc6c 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004210:	682b      	ldr	r3, [r5, #0]
 8004212:	4628      	mov	r0, r5
 8004214:	691b      	ldr	r3, [r3, #16]
 8004216:	4798      	blx	r3
    newTransition->invalidate();
 8004218:	682b      	ldr	r3, [r5, #0]
 800421a:	4628      	mov	r0, r5
 800421c:	695b      	ldr	r3, [r3, #20]
}
 800421e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004222:	4718      	bx	r3
    model->bind(newPresenter);
 8004224:	4623      	mov	r3, r4
 8004226:	e7e2      	b.n	80041ee <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004228:	0802a2b8 	.word	0x0802a2b8
 800422c:	0802adb7 	.word	0x0802adb7
 8004230:	0802a454 	.word	0x0802a454
 8004234:	0802a49b 	.word	0x0802a49b
 8004238:	0802a53e 	.word	0x0802a53e
 800423c:	20013814 	.word	0x20013814
 8004240:	20013810 	.word	0x20013810

08004244 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004248:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800424c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800424e:	68a0      	ldr	r0, [r4, #8]
 8004250:	6803      	ldr	r3, [r0, #0]
 8004252:	6a1b      	ldr	r3, [r3, #32]
 8004254:	4798      	blx	r3
 8004256:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800425a:	d205      	bcs.n	8004268 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800425c:	4b42      	ldr	r3, [pc, #264]	; (8004368 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800425e:	4a43      	ldr	r2, [pc, #268]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004260:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004262:	4843      	ldr	r0, [pc, #268]	; (8004370 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004264:	f024 f964 	bl	8028530 <__assert_func>
 8004268:	6860      	ldr	r0, [r4, #4]
 800426a:	6803      	ldr	r3, [r0, #0]
 800426c:	6a1b      	ldr	r3, [r3, #32]
 800426e:	4798      	blx	r3
 8004270:	280f      	cmp	r0, #15
 8004272:	d803      	bhi.n	800427c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004274:	4b3f      	ldr	r3, [pc, #252]	; (8004374 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004276:	4a3d      	ldr	r2, [pc, #244]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004278:	21a4      	movs	r1, #164	; 0xa4
 800427a:	e7f2      	b.n	8004262 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800427c:	68e0      	ldr	r0, [r4, #12]
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	6a1b      	ldr	r3, [r3, #32]
 8004282:	4798      	blx	r3
 8004284:	2837      	cmp	r0, #55	; 0x37
 8004286:	d803      	bhi.n	8004290 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004288:	4b3b      	ldr	r3, [pc, #236]	; (8004378 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800428a:	4a38      	ldr	r2, [pc, #224]	; (800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800428c:	21a5      	movs	r1, #165	; 0xa5
 800428e:	e7e8      	b.n	8004262 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004290:	f010 fdfe 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004294:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800437c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004298:	3004      	adds	r0, #4
 800429a:	f010 fe5f 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800429e:	f8d9 0000 	ldr.w	r0, [r9]
 80042a2:	b110      	cbz	r0, 80042aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80042a4:	6803      	ldr	r3, [r0, #0]
 80042a6:	68db      	ldr	r3, [r3, #12]
 80042a8:	4798      	blx	r3
    if (*currentTrans)
 80042aa:	f8d9 0000 	ldr.w	r0, [r9]
 80042ae:	b110      	cbz	r0, 80042b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80042b0:	6803      	ldr	r3, [r0, #0]
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	4798      	blx	r3
    if (*currentScreen)
 80042b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004380 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80042ba:	f8d8 0000 	ldr.w	r0, [r8]
 80042be:	b110      	cbz	r0, 80042c6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80042c0:	6803      	ldr	r3, [r0, #0]
 80042c2:	695b      	ldr	r3, [r3, #20]
 80042c4:	4798      	blx	r3
    if (*currentPresenter)
 80042c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042ca:	b110      	cbz	r0, 80042d2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80042cc:	6803      	ldr	r3, [r0, #0]
 80042ce:	685b      	ldr	r3, [r3, #4]
 80042d0:	4798      	blx	r3
    if (*currentScreen)
 80042d2:	f8d8 0000 	ldr.w	r0, [r8]
 80042d6:	b110      	cbz	r0, 80042de <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80042d8:	6803      	ldr	r3, [r0, #0]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	4798      	blx	r3
    if (*currentPresenter)
 80042de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042e2:	b110      	cbz	r0, 80042ea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80042e4:	6803      	ldr	r3, [r0, #0]
 80042e6:	689b      	ldr	r3, [r3, #8]
 80042e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042ea:	68e0      	ldr	r0, [r4, #12]
 80042ec:	2100      	movs	r1, #0
 80042ee:	f7ff fd97 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80042f2:	2114      	movs	r1, #20
 80042f4:	4605      	mov	r5, r0
 80042f6:	f7ff fd97 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80042fa:	68a0      	ldr	r0, [r4, #8]
 80042fc:	6803      	ldr	r3, [r0, #0]
 80042fe:	2100      	movs	r1, #0
 8004300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004302:	4798      	blx	r3
 8004304:	4606      	mov	r6, r0
 8004306:	f003 fe2f 	bl	8007f68 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800430a:	6860      	ldr	r0, [r4, #4]
 800430c:	6803      	ldr	r3, [r0, #0]
 800430e:	2100      	movs	r1, #0
 8004310:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004312:	4798      	blx	r3
 8004314:	4631      	mov	r1, r6
 8004316:	4604      	mov	r4, r0
 8004318:	f003 fe00 	bl	8007f1c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800431c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004320:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004324:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004328:	b1dc      	cbz	r4, 8004362 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800432a:	1d23      	adds	r3, r4, #4
 800432c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004330:	6833      	ldr	r3, [r6, #0]
 8004332:	f8c4 a008 	str.w	sl, [r4, #8]
 8004336:	4630      	mov	r0, r6
 8004338:	68db      	ldr	r3, [r3, #12]
 800433a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800433c:	4798      	blx	r3
    newPresenter->activate();
 800433e:	6823      	ldr	r3, [r4, #0]
 8004340:	4620      	mov	r0, r4
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004346:	4629      	mov	r1, r5
 8004348:	4630      	mov	r0, r6
 800434a:	f012 fbcd 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800434e:	682b      	ldr	r3, [r5, #0]
 8004350:	4628      	mov	r0, r5
 8004352:	691b      	ldr	r3, [r3, #16]
 8004354:	4798      	blx	r3
    newTransition->invalidate();
 8004356:	682b      	ldr	r3, [r5, #0]
 8004358:	4628      	mov	r0, r5
 800435a:	695b      	ldr	r3, [r3, #20]
}
 800435c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004360:	4718      	bx	r3
    model->bind(newPresenter);
 8004362:	4623      	mov	r3, r4
 8004364:	e7e2      	b.n	800432c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004366:	bf00      	nop
 8004368:	0802a2b8 	.word	0x0802a2b8
 800436c:	0802aedd 	.word	0x0802aedd
 8004370:	0802a454 	.word	0x0802a454
 8004374:	0802a49b 	.word	0x0802a49b
 8004378:	0802a53e 	.word	0x0802a53e
 800437c:	20013814 	.word	0x20013814
 8004380:	20013810 	.word	0x20013810

08004384 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004388:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800438c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800438e:	68a0      	ldr	r0, [r4, #8]
 8004390:	6803      	ldr	r3, [r0, #0]
 8004392:	6a1b      	ldr	r3, [r3, #32]
 8004394:	4798      	blx	r3
 8004396:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800439a:	4298      	cmp	r0, r3
 800439c:	d805      	bhi.n	80043aa <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800439e:	4b42      	ldr	r3, [pc, #264]	; (80044a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80043a0:	4a42      	ldr	r2, [pc, #264]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a4:	4842      	ldr	r0, [pc, #264]	; (80044b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80043a6:	f024 f8c3 	bl	8028530 <__assert_func>
 80043aa:	6860      	ldr	r0, [r4, #4]
 80043ac:	6803      	ldr	r3, [r0, #0]
 80043ae:	6a1b      	ldr	r3, [r3, #32]
 80043b0:	4798      	blx	r3
 80043b2:	280f      	cmp	r0, #15
 80043b4:	d803      	bhi.n	80043be <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80043b6:	4b3f      	ldr	r3, [pc, #252]	; (80044b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80043b8:	4a3c      	ldr	r2, [pc, #240]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043ba:	21a4      	movs	r1, #164	; 0xa4
 80043bc:	e7f2      	b.n	80043a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043be:	68e0      	ldr	r0, [r4, #12]
 80043c0:	6803      	ldr	r3, [r0, #0]
 80043c2:	6a1b      	ldr	r3, [r3, #32]
 80043c4:	4798      	blx	r3
 80043c6:	2837      	cmp	r0, #55	; 0x37
 80043c8:	d803      	bhi.n	80043d2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80043ca:	4b3b      	ldr	r3, [pc, #236]	; (80044b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80043cc:	4a37      	ldr	r2, [pc, #220]	; (80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043ce:	21a5      	movs	r1, #165	; 0xa5
 80043d0:	e7e8      	b.n	80043a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043d2:	f010 fd5d 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80043da:	3004      	adds	r0, #4
 80043dc:	f010 fdbe 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043e0:	f8d9 0000 	ldr.w	r0, [r9]
 80043e4:	b110      	cbz	r0, 80043ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043e6:	6803      	ldr	r3, [r0, #0]
 80043e8:	68db      	ldr	r3, [r3, #12]
 80043ea:	4798      	blx	r3
    if (*currentTrans)
 80043ec:	f8d9 0000 	ldr.w	r0, [r9]
 80043f0:	b110      	cbz	r0, 80043f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	4798      	blx	r3
    if (*currentScreen)
 80043f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80043fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004400:	b110      	cbz	r0, 8004408 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004402:	6803      	ldr	r3, [r0, #0]
 8004404:	695b      	ldr	r3, [r3, #20]
 8004406:	4798      	blx	r3
    if (*currentPresenter)
 8004408:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800440c:	b110      	cbz	r0, 8004414 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800440e:	6803      	ldr	r3, [r0, #0]
 8004410:	685b      	ldr	r3, [r3, #4]
 8004412:	4798      	blx	r3
    if (*currentScreen)
 8004414:	f8d8 0000 	ldr.w	r0, [r8]
 8004418:	b110      	cbz	r0, 8004420 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800441a:	6803      	ldr	r3, [r0, #0]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	4798      	blx	r3
    if (*currentPresenter)
 8004420:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004424:	b110      	cbz	r0, 800442c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	689b      	ldr	r3, [r3, #8]
 800442a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800442c:	68e0      	ldr	r0, [r4, #12]
 800442e:	2100      	movs	r1, #0
 8004430:	f7ff fcf6 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004434:	2114      	movs	r1, #20
 8004436:	4605      	mov	r5, r0
 8004438:	f7ff fcf6 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800443c:	68a0      	ldr	r0, [r4, #8]
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	2100      	movs	r1, #0
 8004442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004444:	4798      	blx	r3
 8004446:	4606      	mov	r6, r0
 8004448:	f004 f80e 	bl	8008468 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800444c:	6860      	ldr	r0, [r4, #4]
 800444e:	6803      	ldr	r3, [r0, #0]
 8004450:	2100      	movs	r1, #0
 8004452:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004454:	4798      	blx	r3
 8004456:	4631      	mov	r1, r6
 8004458:	4604      	mov	r4, r0
 800445a:	f003 ffdf 	bl	800841c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800445e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004462:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004466:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800446a:	b1dc      	cbz	r4, 80044a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800446c:	1d23      	adds	r3, r4, #4
 800446e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004472:	6833      	ldr	r3, [r6, #0]
 8004474:	f8c4 a008 	str.w	sl, [r4, #8]
 8004478:	4630      	mov	r0, r6
 800447a:	68db      	ldr	r3, [r3, #12]
 800447c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800447e:	4798      	blx	r3
    newPresenter->activate();
 8004480:	6823      	ldr	r3, [r4, #0]
 8004482:	4620      	mov	r0, r4
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004488:	4629      	mov	r1, r5
 800448a:	4630      	mov	r0, r6
 800448c:	f012 fb2c 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004490:	682b      	ldr	r3, [r5, #0]
 8004492:	4628      	mov	r0, r5
 8004494:	691b      	ldr	r3, [r3, #16]
 8004496:	4798      	blx	r3
    newTransition->invalidate();
 8004498:	682b      	ldr	r3, [r5, #0]
 800449a:	4628      	mov	r0, r5
 800449c:	695b      	ldr	r3, [r3, #20]
}
 800449e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80044a2:	4718      	bx	r3
    model->bind(newPresenter);
 80044a4:	4623      	mov	r3, r4
 80044a6:	e7e2      	b.n	800446e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80044a8:	0802a2b8 	.word	0x0802a2b8
 80044ac:	0802affb 	.word	0x0802affb
 80044b0:	0802a454 	.word	0x0802a454
 80044b4:	0802a49b 	.word	0x0802a49b
 80044b8:	0802a53e 	.word	0x0802a53e
 80044bc:	20013814 	.word	0x20013814
 80044c0:	20013810 	.word	0x20013810

080044c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80044c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044ce:	68a0      	ldr	r0, [r4, #8]
 80044d0:	6803      	ldr	r3, [r0, #0]
 80044d2:	6a1b      	ldr	r3, [r3, #32]
 80044d4:	4798      	blx	r3
 80044d6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80044da:	4298      	cmp	r0, r3
 80044dc:	d805      	bhi.n	80044ea <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80044de:	4b42      	ldr	r3, [pc, #264]	; (80045e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80044e0:	4a42      	ldr	r2, [pc, #264]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044e4:	4842      	ldr	r0, [pc, #264]	; (80045f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80044e6:	f024 f823 	bl	8028530 <__assert_func>
 80044ea:	6860      	ldr	r0, [r4, #4]
 80044ec:	6803      	ldr	r3, [r0, #0]
 80044ee:	6a1b      	ldr	r3, [r3, #32]
 80044f0:	4798      	blx	r3
 80044f2:	280f      	cmp	r0, #15
 80044f4:	d803      	bhi.n	80044fe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80044f6:	4b3f      	ldr	r3, [pc, #252]	; (80045f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80044f8:	4a3c      	ldr	r2, [pc, #240]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044fa:	21a4      	movs	r1, #164	; 0xa4
 80044fc:	e7f2      	b.n	80044e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044fe:	68e0      	ldr	r0, [r4, #12]
 8004500:	6803      	ldr	r3, [r0, #0]
 8004502:	6a1b      	ldr	r3, [r3, #32]
 8004504:	4798      	blx	r3
 8004506:	2837      	cmp	r0, #55	; 0x37
 8004508:	d803      	bhi.n	8004512 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800450a:	4b3b      	ldr	r3, [pc, #236]	; (80045f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800450c:	4a37      	ldr	r2, [pc, #220]	; (80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800450e:	21a5      	movs	r1, #165	; 0xa5
 8004510:	e7e8      	b.n	80044e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004512:	f010 fcbd 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004516:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800451a:	3004      	adds	r0, #4
 800451c:	f010 fd1e 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004520:	f8d9 0000 	ldr.w	r0, [r9]
 8004524:	b110      	cbz	r0, 800452c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004526:	6803      	ldr	r3, [r0, #0]
 8004528:	68db      	ldr	r3, [r3, #12]
 800452a:	4798      	blx	r3
    if (*currentTrans)
 800452c:	f8d9 0000 	ldr.w	r0, [r9]
 8004530:	b110      	cbz	r0, 8004538 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004532:	6803      	ldr	r3, [r0, #0]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	4798      	blx	r3
    if (*currentScreen)
 8004538:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004600 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800453c:	f8d8 0000 	ldr.w	r0, [r8]
 8004540:	b110      	cbz	r0, 8004548 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004542:	6803      	ldr	r3, [r0, #0]
 8004544:	695b      	ldr	r3, [r3, #20]
 8004546:	4798      	blx	r3
    if (*currentPresenter)
 8004548:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800454c:	b110      	cbz	r0, 8004554 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800454e:	6803      	ldr	r3, [r0, #0]
 8004550:	685b      	ldr	r3, [r3, #4]
 8004552:	4798      	blx	r3
    if (*currentScreen)
 8004554:	f8d8 0000 	ldr.w	r0, [r8]
 8004558:	b110      	cbz	r0, 8004560 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800455a:	6803      	ldr	r3, [r0, #0]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	4798      	blx	r3
    if (*currentPresenter)
 8004560:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004564:	b110      	cbz	r0, 800456c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004566:	6803      	ldr	r3, [r0, #0]
 8004568:	689b      	ldr	r3, [r3, #8]
 800456a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800456c:	68e0      	ldr	r0, [r4, #12]
 800456e:	2100      	movs	r1, #0
 8004570:	f7ff fc56 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004574:	2114      	movs	r1, #20
 8004576:	4605      	mov	r5, r0
 8004578:	f7ff fc56 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800457c:	68a0      	ldr	r0, [r4, #8]
 800457e:	6803      	ldr	r3, [r0, #0]
 8004580:	2100      	movs	r1, #0
 8004582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004584:	4798      	blx	r3
 8004586:	4606      	mov	r6, r0
 8004588:	f003 ff2c 	bl	80083e4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800458c:	6860      	ldr	r0, [r4, #4]
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	2100      	movs	r1, #0
 8004592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004594:	4798      	blx	r3
 8004596:	4631      	mov	r1, r6
 8004598:	4604      	mov	r4, r0
 800459a:	f003 fefd 	bl	8008398 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800459e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80045a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045aa:	b1dc      	cbz	r4, 80045e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80045ac:	1d23      	adds	r3, r4, #4
 80045ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045b2:	6833      	ldr	r3, [r6, #0]
 80045b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80045b8:	4630      	mov	r0, r6
 80045ba:	68db      	ldr	r3, [r3, #12]
 80045bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045be:	4798      	blx	r3
    newPresenter->activate();
 80045c0:	6823      	ldr	r3, [r4, #0]
 80045c2:	4620      	mov	r0, r4
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045c8:	4629      	mov	r1, r5
 80045ca:	4630      	mov	r0, r6
 80045cc:	f012 fa8c 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045d0:	682b      	ldr	r3, [r5, #0]
 80045d2:	4628      	mov	r0, r5
 80045d4:	691b      	ldr	r3, [r3, #16]
 80045d6:	4798      	blx	r3
    newTransition->invalidate();
 80045d8:	682b      	ldr	r3, [r5, #0]
 80045da:	4628      	mov	r0, r5
 80045dc:	695b      	ldr	r3, [r3, #20]
}
 80045de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045e2:	4718      	bx	r3
    model->bind(newPresenter);
 80045e4:	4623      	mov	r3, r4
 80045e6:	e7e2      	b.n	80045ae <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80045e8:	0802a2b8 	.word	0x0802a2b8
 80045ec:	0802b13f 	.word	0x0802b13f
 80045f0:	0802a454 	.word	0x0802a454
 80045f4:	0802a49b 	.word	0x0802a49b
 80045f8:	0802a53e 	.word	0x0802a53e
 80045fc:	20013814 	.word	0x20013814
 8004600:	20013810 	.word	0x20013810

08004604 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8004604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004608:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800460c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800460e:	68a0      	ldr	r0, [r4, #8]
 8004610:	6803      	ldr	r3, [r0, #0]
 8004612:	6a1b      	ldr	r3, [r3, #32]
 8004614:	4798      	blx	r3
 8004616:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800461a:	d205      	bcs.n	8004628 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800461c:	4b42      	ldr	r3, [pc, #264]	; (8004728 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800461e:	4a43      	ldr	r2, [pc, #268]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004620:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004622:	4843      	ldr	r0, [pc, #268]	; (8004730 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8004624:	f023 ff84 	bl	8028530 <__assert_func>
 8004628:	6860      	ldr	r0, [r4, #4]
 800462a:	6803      	ldr	r3, [r0, #0]
 800462c:	6a1b      	ldr	r3, [r3, #32]
 800462e:	4798      	blx	r3
 8004630:	280f      	cmp	r0, #15
 8004632:	d803      	bhi.n	800463c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8004634:	4b3f      	ldr	r3, [pc, #252]	; (8004734 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8004636:	4a3d      	ldr	r2, [pc, #244]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004638:	21a4      	movs	r1, #164	; 0xa4
 800463a:	e7f2      	b.n	8004622 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800463c:	68e0      	ldr	r0, [r4, #12]
 800463e:	6803      	ldr	r3, [r0, #0]
 8004640:	6a1b      	ldr	r3, [r3, #32]
 8004642:	4798      	blx	r3
 8004644:	2837      	cmp	r0, #55	; 0x37
 8004646:	d803      	bhi.n	8004650 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004648:	4b3b      	ldr	r3, [pc, #236]	; (8004738 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800464a:	4a38      	ldr	r2, [pc, #224]	; (800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800464c:	21a5      	movs	r1, #165	; 0xa5
 800464e:	e7e8      	b.n	8004622 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004650:	f010 fc1e 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004654:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800473c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004658:	3004      	adds	r0, #4
 800465a:	f010 fc7f 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800465e:	f8d9 0000 	ldr.w	r0, [r9]
 8004662:	b110      	cbz	r0, 800466a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004664:	6803      	ldr	r3, [r0, #0]
 8004666:	68db      	ldr	r3, [r3, #12]
 8004668:	4798      	blx	r3
    if (*currentTrans)
 800466a:	f8d9 0000 	ldr.w	r0, [r9]
 800466e:	b110      	cbz	r0, 8004676 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	4798      	blx	r3
    if (*currentScreen)
 8004676:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004740 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800467a:	f8d8 0000 	ldr.w	r0, [r8]
 800467e:	b110      	cbz	r0, 8004686 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004680:	6803      	ldr	r3, [r0, #0]
 8004682:	695b      	ldr	r3, [r3, #20]
 8004684:	4798      	blx	r3
    if (*currentPresenter)
 8004686:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800468a:	b110      	cbz	r0, 8004692 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800468c:	6803      	ldr	r3, [r0, #0]
 800468e:	685b      	ldr	r3, [r3, #4]
 8004690:	4798      	blx	r3
    if (*currentScreen)
 8004692:	f8d8 0000 	ldr.w	r0, [r8]
 8004696:	b110      	cbz	r0, 800469e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004698:	6803      	ldr	r3, [r0, #0]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	4798      	blx	r3
    if (*currentPresenter)
 800469e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046a2:	b110      	cbz	r0, 80046aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80046a4:	6803      	ldr	r3, [r0, #0]
 80046a6:	689b      	ldr	r3, [r3, #8]
 80046a8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046aa:	68e0      	ldr	r0, [r4, #12]
 80046ac:	2100      	movs	r1, #0
 80046ae:	f7ff fbb7 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046b2:	2114      	movs	r1, #20
 80046b4:	4605      	mov	r5, r0
 80046b6:	f7ff fbb7 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046ba:	68a0      	ldr	r0, [r4, #8]
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	2100      	movs	r1, #0
 80046c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c2:	4798      	blx	r3
 80046c4:	4606      	mov	r6, r0
 80046c6:	f003 fe33 	bl	8008330 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046ca:	6860      	ldr	r0, [r4, #4]
 80046cc:	6803      	ldr	r3, [r0, #0]
 80046ce:	2100      	movs	r1, #0
 80046d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046d2:	4798      	blx	r3
 80046d4:	4631      	mov	r1, r6
 80046d6:	4604      	mov	r4, r0
 80046d8:	f003 fe04 	bl	80082e4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80046dc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046e0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046e4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046e8:	b1dc      	cbz	r4, 8004722 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80046ea:	1d23      	adds	r3, r4, #4
 80046ec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046f0:	6833      	ldr	r3, [r6, #0]
 80046f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80046f6:	4630      	mov	r0, r6
 80046f8:	68db      	ldr	r3, [r3, #12]
 80046fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046fc:	4798      	blx	r3
    newPresenter->activate();
 80046fe:	6823      	ldr	r3, [r4, #0]
 8004700:	4620      	mov	r0, r4
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004706:	4629      	mov	r1, r5
 8004708:	4630      	mov	r0, r6
 800470a:	f012 f9ed 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800470e:	682b      	ldr	r3, [r5, #0]
 8004710:	4628      	mov	r0, r5
 8004712:	691b      	ldr	r3, [r3, #16]
 8004714:	4798      	blx	r3
    newTransition->invalidate();
 8004716:	682b      	ldr	r3, [r5, #0]
 8004718:	4628      	mov	r0, r5
 800471a:	695b      	ldr	r3, [r3, #20]
}
 800471c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004720:	4718      	bx	r3
    model->bind(newPresenter);
 8004722:	4623      	mov	r3, r4
 8004724:	e7e2      	b.n	80046ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004726:	bf00      	nop
 8004728:	0802a2b8 	.word	0x0802a2b8
 800472c:	0802b27f 	.word	0x0802b27f
 8004730:	0802a454 	.word	0x0802a454
 8004734:	0802a49b 	.word	0x0802a49b
 8004738:	0802a53e 	.word	0x0802a53e
 800473c:	20013814 	.word	0x20013814
 8004740:	20013810 	.word	0x20013810

08004744 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004748:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800474c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800474e:	68a0      	ldr	r0, [r4, #8]
 8004750:	6803      	ldr	r3, [r0, #0]
 8004752:	6a1b      	ldr	r3, [r3, #32]
 8004754:	4798      	blx	r3
 8004756:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800475a:	4298      	cmp	r0, r3
 800475c:	d805      	bhi.n	800476a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800475e:	4b42      	ldr	r3, [pc, #264]	; (8004868 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004760:	4a42      	ldr	r2, [pc, #264]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004762:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004764:	4842      	ldr	r0, [pc, #264]	; (8004870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004766:	f023 fee3 	bl	8028530 <__assert_func>
 800476a:	6860      	ldr	r0, [r4, #4]
 800476c:	6803      	ldr	r3, [r0, #0]
 800476e:	6a1b      	ldr	r3, [r3, #32]
 8004770:	4798      	blx	r3
 8004772:	280f      	cmp	r0, #15
 8004774:	d803      	bhi.n	800477e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004776:	4b3f      	ldr	r3, [pc, #252]	; (8004874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004778:	4a3c      	ldr	r2, [pc, #240]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800477a:	21a4      	movs	r1, #164	; 0xa4
 800477c:	e7f2      	b.n	8004764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800477e:	68e0      	ldr	r0, [r4, #12]
 8004780:	6803      	ldr	r3, [r0, #0]
 8004782:	6a1b      	ldr	r3, [r3, #32]
 8004784:	4798      	blx	r3
 8004786:	2837      	cmp	r0, #55	; 0x37
 8004788:	d803      	bhi.n	8004792 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800478a:	4b3b      	ldr	r3, [pc, #236]	; (8004878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800478c:	4a37      	ldr	r2, [pc, #220]	; (800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800478e:	21a5      	movs	r1, #165	; 0xa5
 8004790:	e7e8      	b.n	8004764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004792:	f010 fb7d 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004796:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800487c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800479a:	3004      	adds	r0, #4
 800479c:	f010 fbde 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047a0:	f8d9 0000 	ldr.w	r0, [r9]
 80047a4:	b110      	cbz	r0, 80047ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80047a6:	6803      	ldr	r3, [r0, #0]
 80047a8:	68db      	ldr	r3, [r3, #12]
 80047aa:	4798      	blx	r3
    if (*currentTrans)
 80047ac:	f8d9 0000 	ldr.w	r0, [r9]
 80047b0:	b110      	cbz	r0, 80047b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80047b2:	6803      	ldr	r3, [r0, #0]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4798      	blx	r3
    if (*currentScreen)
 80047b8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004880 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80047bc:	f8d8 0000 	ldr.w	r0, [r8]
 80047c0:	b110      	cbz	r0, 80047c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047c2:	6803      	ldr	r3, [r0, #0]
 80047c4:	695b      	ldr	r3, [r3, #20]
 80047c6:	4798      	blx	r3
    if (*currentPresenter)
 80047c8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047cc:	b110      	cbz	r0, 80047d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047ce:	6803      	ldr	r3, [r0, #0]
 80047d0:	685b      	ldr	r3, [r3, #4]
 80047d2:	4798      	blx	r3
    if (*currentScreen)
 80047d4:	f8d8 0000 	ldr.w	r0, [r8]
 80047d8:	b110      	cbz	r0, 80047e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047da:	6803      	ldr	r3, [r0, #0]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4798      	blx	r3
    if (*currentPresenter)
 80047e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047e4:	b110      	cbz	r0, 80047ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047e6:	6803      	ldr	r3, [r0, #0]
 80047e8:	689b      	ldr	r3, [r3, #8]
 80047ea:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047ec:	68e0      	ldr	r0, [r4, #12]
 80047ee:	2100      	movs	r1, #0
 80047f0:	f7ff fb16 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047f4:	2114      	movs	r1, #20
 80047f6:	4605      	mov	r5, r0
 80047f8:	f7ff fb16 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047fc:	68a0      	ldr	r0, [r4, #8]
 80047fe:	6803      	ldr	r3, [r0, #0]
 8004800:	2100      	movs	r1, #0
 8004802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004804:	4798      	blx	r3
 8004806:	4606      	mov	r6, r0
 8004808:	f003 ff48 	bl	800869c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800480c:	6860      	ldr	r0, [r4, #4]
 800480e:	6803      	ldr	r3, [r0, #0]
 8004810:	2100      	movs	r1, #0
 8004812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004814:	4798      	blx	r3
 8004816:	4631      	mov	r1, r6
 8004818:	4604      	mov	r4, r0
 800481a:	f003 ff19 	bl	8008650 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800481e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004822:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004826:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800482a:	b1dc      	cbz	r4, 8004864 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 800482c:	1d23      	adds	r3, r4, #4
 800482e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004832:	6833      	ldr	r3, [r6, #0]
 8004834:	f8c4 a008 	str.w	sl, [r4, #8]
 8004838:	4630      	mov	r0, r6
 800483a:	68db      	ldr	r3, [r3, #12]
 800483c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800483e:	4798      	blx	r3
    newPresenter->activate();
 8004840:	6823      	ldr	r3, [r4, #0]
 8004842:	4620      	mov	r0, r4
 8004844:	681b      	ldr	r3, [r3, #0]
 8004846:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004848:	4629      	mov	r1, r5
 800484a:	4630      	mov	r0, r6
 800484c:	f012 f94c 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004850:	682b      	ldr	r3, [r5, #0]
 8004852:	4628      	mov	r0, r5
 8004854:	691b      	ldr	r3, [r3, #16]
 8004856:	4798      	blx	r3
    newTransition->invalidate();
 8004858:	682b      	ldr	r3, [r5, #0]
 800485a:	4628      	mov	r0, r5
 800485c:	695b      	ldr	r3, [r3, #20]
}
 800485e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004862:	4718      	bx	r3
    model->bind(newPresenter);
 8004864:	4623      	mov	r3, r4
 8004866:	e7e2      	b.n	800482e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004868:	0802a2b8 	.word	0x0802a2b8
 800486c:	0802b3af 	.word	0x0802b3af
 8004870:	0802a454 	.word	0x0802a454
 8004874:	0802a49b 	.word	0x0802a49b
 8004878:	0802a53e 	.word	0x0802a53e
 800487c:	20013814 	.word	0x20013814
 8004880:	20013810 	.word	0x20013810

08004884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004888:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800488c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800488e:	68a0      	ldr	r0, [r4, #8]
 8004890:	6803      	ldr	r3, [r0, #0]
 8004892:	6a1b      	ldr	r3, [r3, #32]
 8004894:	4798      	blx	r3
 8004896:	f241 33f3 	movw	r3, #5107	; 0x13f3
 800489a:	4298      	cmp	r0, r3
 800489c:	d805      	bhi.n	80048aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800489e:	4b42      	ldr	r3, [pc, #264]	; (80049a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80048a0:	4a42      	ldr	r2, [pc, #264]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048a4:	4842      	ldr	r0, [pc, #264]	; (80049b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80048a6:	f023 fe43 	bl	8028530 <__assert_func>
 80048aa:	6860      	ldr	r0, [r4, #4]
 80048ac:	6803      	ldr	r3, [r0, #0]
 80048ae:	6a1b      	ldr	r3, [r3, #32]
 80048b0:	4798      	blx	r3
 80048b2:	280f      	cmp	r0, #15
 80048b4:	d803      	bhi.n	80048be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80048b6:	4b3f      	ldr	r3, [pc, #252]	; (80049b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80048b8:	4a3c      	ldr	r2, [pc, #240]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048ba:	21a4      	movs	r1, #164	; 0xa4
 80048bc:	e7f2      	b.n	80048a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048be:	68e0      	ldr	r0, [r4, #12]
 80048c0:	6803      	ldr	r3, [r0, #0]
 80048c2:	6a1b      	ldr	r3, [r3, #32]
 80048c4:	4798      	blx	r3
 80048c6:	2837      	cmp	r0, #55	; 0x37
 80048c8:	d803      	bhi.n	80048d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80048ca:	4b3b      	ldr	r3, [pc, #236]	; (80049b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80048cc:	4a37      	ldr	r2, [pc, #220]	; (80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048ce:	21a5      	movs	r1, #165	; 0xa5
 80048d0:	e7e8      	b.n	80048a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048d2:	f010 fadd 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80048da:	3004      	adds	r0, #4
 80048dc:	f010 fb3e 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048e0:	f8d9 0000 	ldr.w	r0, [r9]
 80048e4:	b110      	cbz	r0, 80048ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048e6:	6803      	ldr	r3, [r0, #0]
 80048e8:	68db      	ldr	r3, [r3, #12]
 80048ea:	4798      	blx	r3
    if (*currentTrans)
 80048ec:	f8d9 0000 	ldr.w	r0, [r9]
 80048f0:	b110      	cbz	r0, 80048f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048f2:	6803      	ldr	r3, [r0, #0]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	4798      	blx	r3
    if (*currentScreen)
 80048f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80048fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004900:	b110      	cbz	r0, 8004908 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004902:	6803      	ldr	r3, [r0, #0]
 8004904:	695b      	ldr	r3, [r3, #20]
 8004906:	4798      	blx	r3
    if (*currentPresenter)
 8004908:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800490c:	b110      	cbz	r0, 8004914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800490e:	6803      	ldr	r3, [r0, #0]
 8004910:	685b      	ldr	r3, [r3, #4]
 8004912:	4798      	blx	r3
    if (*currentScreen)
 8004914:	f8d8 0000 	ldr.w	r0, [r8]
 8004918:	b110      	cbz	r0, 8004920 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800491a:	6803      	ldr	r3, [r0, #0]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	4798      	blx	r3
    if (*currentPresenter)
 8004920:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004924:	b110      	cbz	r0, 800492c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004926:	6803      	ldr	r3, [r0, #0]
 8004928:	689b      	ldr	r3, [r3, #8]
 800492a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800492c:	68e0      	ldr	r0, [r4, #12]
 800492e:	2100      	movs	r1, #0
 8004930:	f7ff fa76 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004934:	2114      	movs	r1, #20
 8004936:	4605      	mov	r5, r0
 8004938:	f7ff fa76 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800493c:	68a0      	ldr	r0, [r4, #8]
 800493e:	6803      	ldr	r3, [r0, #0]
 8004940:	2100      	movs	r1, #0
 8004942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004944:	4798      	blx	r3
 8004946:	4606      	mov	r6, r0
 8004948:	f003 fe30 	bl	80085ac <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800494c:	6860      	ldr	r0, [r4, #4]
 800494e:	6803      	ldr	r3, [r0, #0]
 8004950:	2100      	movs	r1, #0
 8004952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004954:	4798      	blx	r3
 8004956:	4631      	mov	r1, r6
 8004958:	4604      	mov	r4, r0
 800495a:	f003 fe01 	bl	8008560 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800495e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004962:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004966:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800496a:	b1dc      	cbz	r4, 80049a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 800496c:	1d23      	adds	r3, r4, #4
 800496e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004972:	6833      	ldr	r3, [r6, #0]
 8004974:	f8c4 a008 	str.w	sl, [r4, #8]
 8004978:	4630      	mov	r0, r6
 800497a:	68db      	ldr	r3, [r3, #12]
 800497c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800497e:	4798      	blx	r3
    newPresenter->activate();
 8004980:	6823      	ldr	r3, [r4, #0]
 8004982:	4620      	mov	r0, r4
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004988:	4629      	mov	r1, r5
 800498a:	4630      	mov	r0, r6
 800498c:	f012 f8ac 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004990:	682b      	ldr	r3, [r5, #0]
 8004992:	4628      	mov	r0, r5
 8004994:	691b      	ldr	r3, [r3, #16]
 8004996:	4798      	blx	r3
    newTransition->invalidate();
 8004998:	682b      	ldr	r3, [r5, #0]
 800499a:	4628      	mov	r0, r5
 800499c:	695b      	ldr	r3, [r3, #20]
}
 800499e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049a2:	4718      	bx	r3
    model->bind(newPresenter);
 80049a4:	4623      	mov	r3, r4
 80049a6:	e7e2      	b.n	800496e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80049a8:	0802a2b8 	.word	0x0802a2b8
 80049ac:	0802b4f1 	.word	0x0802b4f1
 80049b0:	0802a454 	.word	0x0802a454
 80049b4:	0802a49b 	.word	0x0802a49b
 80049b8:	0802a53e 	.word	0x0802a53e
 80049bc:	20013814 	.word	0x20013814
 80049c0:	20013810 	.word	0x20013810

080049c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80049c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049ce:	68a0      	ldr	r0, [r4, #8]
 80049d0:	6803      	ldr	r3, [r0, #0]
 80049d2:	6a1b      	ldr	r3, [r3, #32]
 80049d4:	4798      	blx	r3
 80049d6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049da:	d205      	bcs.n	80049e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80049dc:	4b42      	ldr	r3, [pc, #264]	; (8004ae8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80049de:	4a43      	ldr	r2, [pc, #268]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049e0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049e2:	4843      	ldr	r0, [pc, #268]	; (8004af0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80049e4:	f023 fda4 	bl	8028530 <__assert_func>
 80049e8:	6860      	ldr	r0, [r4, #4]
 80049ea:	6803      	ldr	r3, [r0, #0]
 80049ec:	6a1b      	ldr	r3, [r3, #32]
 80049ee:	4798      	blx	r3
 80049f0:	280f      	cmp	r0, #15
 80049f2:	d803      	bhi.n	80049fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80049f4:	4b3f      	ldr	r3, [pc, #252]	; (8004af4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80049f6:	4a3d      	ldr	r2, [pc, #244]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049f8:	21a4      	movs	r1, #164	; 0xa4
 80049fa:	e7f2      	b.n	80049e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049fc:	68e0      	ldr	r0, [r4, #12]
 80049fe:	6803      	ldr	r3, [r0, #0]
 8004a00:	6a1b      	ldr	r3, [r3, #32]
 8004a02:	4798      	blx	r3
 8004a04:	2837      	cmp	r0, #55	; 0x37
 8004a06:	d803      	bhi.n	8004a10 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004a08:	4b3b      	ldr	r3, [pc, #236]	; (8004af8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004a0a:	4a38      	ldr	r2, [pc, #224]	; (8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004a0c:	21a5      	movs	r1, #165	; 0xa5
 8004a0e:	e7e8      	b.n	80049e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a10:	f010 fa3e 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a14:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004afc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004a18:	3004      	adds	r0, #4
 8004a1a:	f010 fa9f 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a1e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a22:	b110      	cbz	r0, 8004a2a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	68db      	ldr	r3, [r3, #12]
 8004a28:	4798      	blx	r3
    if (*currentTrans)
 8004a2a:	f8d9 0000 	ldr.w	r0, [r9]
 8004a2e:	b110      	cbz	r0, 8004a36 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a30:	6803      	ldr	r3, [r0, #0]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4798      	blx	r3
    if (*currentScreen)
 8004a36:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004b00 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004a3a:	f8d8 0000 	ldr.w	r0, [r8]
 8004a3e:	b110      	cbz	r0, 8004a46 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a40:	6803      	ldr	r3, [r0, #0]
 8004a42:	695b      	ldr	r3, [r3, #20]
 8004a44:	4798      	blx	r3
    if (*currentPresenter)
 8004a46:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a4a:	b110      	cbz	r0, 8004a52 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a4c:	6803      	ldr	r3, [r0, #0]
 8004a4e:	685b      	ldr	r3, [r3, #4]
 8004a50:	4798      	blx	r3
    if (*currentScreen)
 8004a52:	f8d8 0000 	ldr.w	r0, [r8]
 8004a56:	b110      	cbz	r0, 8004a5e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a58:	6803      	ldr	r3, [r0, #0]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	4798      	blx	r3
    if (*currentPresenter)
 8004a5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a62:	b110      	cbz	r0, 8004a6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a64:	6803      	ldr	r3, [r0, #0]
 8004a66:	689b      	ldr	r3, [r3, #8]
 8004a68:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a6a:	68e0      	ldr	r0, [r4, #12]
 8004a6c:	2100      	movs	r1, #0
 8004a6e:	f7ff f9d7 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a72:	2114      	movs	r1, #20
 8004a74:	4605      	mov	r5, r0
 8004a76:	f7ff f9d7 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a7a:	68a0      	ldr	r0, [r4, #8]
 8004a7c:	6803      	ldr	r3, [r0, #0]
 8004a7e:	2100      	movs	r1, #0
 8004a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a82:	4798      	blx	r3
 8004a84:	4606      	mov	r6, r0
 8004a86:	f003 fd37 	bl	80084f8 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a8a:	6860      	ldr	r0, [r4, #4]
 8004a8c:	6803      	ldr	r3, [r0, #0]
 8004a8e:	2100      	movs	r1, #0
 8004a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a92:	4798      	blx	r3
 8004a94:	4631      	mov	r1, r6
 8004a96:	4604      	mov	r4, r0
 8004a98:	f003 fd08 	bl	80084ac <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004a9c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004aa0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004aa4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004aa8:	b1dc      	cbz	r4, 8004ae2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004aaa:	1d23      	adds	r3, r4, #4
 8004aac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ab0:	6833      	ldr	r3, [r6, #0]
 8004ab2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ab6:	4630      	mov	r0, r6
 8004ab8:	68db      	ldr	r3, [r3, #12]
 8004aba:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004abc:	4798      	blx	r3
    newPresenter->activate();
 8004abe:	6823      	ldr	r3, [r4, #0]
 8004ac0:	4620      	mov	r0, r4
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ac6:	4629      	mov	r1, r5
 8004ac8:	4630      	mov	r0, r6
 8004aca:	f012 f80d 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ace:	682b      	ldr	r3, [r5, #0]
 8004ad0:	4628      	mov	r0, r5
 8004ad2:	691b      	ldr	r3, [r3, #16]
 8004ad4:	4798      	blx	r3
    newTransition->invalidate();
 8004ad6:	682b      	ldr	r3, [r5, #0]
 8004ad8:	4628      	mov	r0, r5
 8004ada:	695b      	ldr	r3, [r3, #20]
}
 8004adc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ae0:	4718      	bx	r3
    model->bind(newPresenter);
 8004ae2:	4623      	mov	r3, r4
 8004ae4:	e7e2      	b.n	8004aac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004ae6:	bf00      	nop
 8004ae8:	0802a2b8 	.word	0x0802a2b8
 8004aec:	0802b633 	.word	0x0802b633
 8004af0:	0802a454 	.word	0x0802a454
 8004af4:	0802a49b 	.word	0x0802a49b
 8004af8:	0802a53e 	.word	0x0802a53e
 8004afc:	20013814 	.word	0x20013814
 8004b00:	20013810 	.word	0x20013810

08004b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b0e:	68a0      	ldr	r0, [r4, #8]
 8004b10:	6803      	ldr	r3, [r0, #0]
 8004b12:	6a1b      	ldr	r3, [r3, #32]
 8004b14:	4798      	blx	r3
 8004b16:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b1a:	d205      	bcs.n	8004b28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004b1c:	4b42      	ldr	r3, [pc, #264]	; (8004c28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004b1e:	4a43      	ldr	r2, [pc, #268]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b20:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b22:	4843      	ldr	r0, [pc, #268]	; (8004c30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004b24:	f023 fd04 	bl	8028530 <__assert_func>
 8004b28:	6860      	ldr	r0, [r4, #4]
 8004b2a:	6803      	ldr	r3, [r0, #0]
 8004b2c:	6a1b      	ldr	r3, [r3, #32]
 8004b2e:	4798      	blx	r3
 8004b30:	280f      	cmp	r0, #15
 8004b32:	d803      	bhi.n	8004b3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004b34:	4b3f      	ldr	r3, [pc, #252]	; (8004c34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004b36:	4a3d      	ldr	r2, [pc, #244]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b38:	21a4      	movs	r1, #164	; 0xa4
 8004b3a:	e7f2      	b.n	8004b22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b3c:	68e0      	ldr	r0, [r4, #12]
 8004b3e:	6803      	ldr	r3, [r0, #0]
 8004b40:	6a1b      	ldr	r3, [r3, #32]
 8004b42:	4798      	blx	r3
 8004b44:	2837      	cmp	r0, #55	; 0x37
 8004b46:	d803      	bhi.n	8004b50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004b48:	4b3b      	ldr	r3, [pc, #236]	; (8004c38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004b4a:	4a38      	ldr	r2, [pc, #224]	; (8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b4c:	21a5      	movs	r1, #165	; 0xa5
 8004b4e:	e7e8      	b.n	8004b22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b50:	f010 f99e 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b54:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004b58:	3004      	adds	r0, #4
 8004b5a:	f010 f9ff 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b5e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b62:	b110      	cbz	r0, 8004b6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	68db      	ldr	r3, [r3, #12]
 8004b68:	4798      	blx	r3
    if (*currentTrans)
 8004b6a:	f8d9 0000 	ldr.w	r0, [r9]
 8004b6e:	b110      	cbz	r0, 8004b76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b70:	6803      	ldr	r3, [r0, #0]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	4798      	blx	r3
    if (*currentScreen)
 8004b76:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004b7a:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7e:	b110      	cbz	r0, 8004b86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b80:	6803      	ldr	r3, [r0, #0]
 8004b82:	695b      	ldr	r3, [r3, #20]
 8004b84:	4798      	blx	r3
    if (*currentPresenter)
 8004b86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b8a:	b110      	cbz	r0, 8004b92 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b8c:	6803      	ldr	r3, [r0, #0]
 8004b8e:	685b      	ldr	r3, [r3, #4]
 8004b90:	4798      	blx	r3
    if (*currentScreen)
 8004b92:	f8d8 0000 	ldr.w	r0, [r8]
 8004b96:	b110      	cbz	r0, 8004b9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	4798      	blx	r3
    if (*currentPresenter)
 8004b9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ba2:	b110      	cbz	r0, 8004baa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ba4:	6803      	ldr	r3, [r0, #0]
 8004ba6:	689b      	ldr	r3, [r3, #8]
 8004ba8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004baa:	68e0      	ldr	r0, [r4, #12]
 8004bac:	2100      	movs	r1, #0
 8004bae:	f7ff f937 	bl	8003e20 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004bb2:	2114      	movs	r1, #20
 8004bb4:	4605      	mov	r5, r0
 8004bb6:	f7ff f937 	bl	8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bba:	68a0      	ldr	r0, [r4, #8]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	2100      	movs	r1, #0
 8004bc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc2:	4798      	blx	r3
 8004bc4:	4606      	mov	r6, r0
 8004bc6:	f003 fb53 	bl	8008270 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bca:	6860      	ldr	r0, [r4, #4]
 8004bcc:	6803      	ldr	r3, [r0, #0]
 8004bce:	2100      	movs	r1, #0
 8004bd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bd2:	4798      	blx	r3
 8004bd4:	4631      	mov	r1, r6
 8004bd6:	4604      	mov	r4, r0
 8004bd8:	f003 fb24 	bl	8008224 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004bdc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004be0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004be4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004be8:	b1dc      	cbz	r4, 8004c22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004bea:	1d23      	adds	r3, r4, #4
 8004bec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bf0:	6833      	ldr	r3, [r6, #0]
 8004bf2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	68db      	ldr	r3, [r3, #12]
 8004bfa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bfc:	4798      	blx	r3
    newPresenter->activate();
 8004bfe:	6823      	ldr	r3, [r4, #0]
 8004c00:	4620      	mov	r0, r4
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c06:	4629      	mov	r1, r5
 8004c08:	4630      	mov	r0, r6
 8004c0a:	f011 ff6d 	bl	8016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c0e:	682b      	ldr	r3, [r5, #0]
 8004c10:	4628      	mov	r0, r5
 8004c12:	691b      	ldr	r3, [r3, #16]
 8004c14:	4798      	blx	r3
    newTransition->invalidate();
 8004c16:	682b      	ldr	r3, [r5, #0]
 8004c18:	4628      	mov	r0, r5
 8004c1a:	695b      	ldr	r3, [r3, #20]
}
 8004c1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c20:	4718      	bx	r3
    model->bind(newPresenter);
 8004c22:	4623      	mov	r3, r4
 8004c24:	e7e2      	b.n	8004bec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004c26:	bf00      	nop
 8004c28:	0802a2b8 	.word	0x0802a2b8
 8004c2c:	0802b75f 	.word	0x0802b75f
 8004c30:	0802a454 	.word	0x0802a454
 8004c34:	0802a49b 	.word	0x0802a49b
 8004c38:	0802a53e 	.word	0x0802a53e
 8004c3c:	20013814 	.word	0x20013814
 8004c40:	20013810 	.word	0x20013810

08004c44 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004c44:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004c46:	4770      	bx	lr

08004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004c48:	4770      	bx	lr

08004c4a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004c4a:	4770      	bx	lr

08004c4c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c4c:	b510      	push	{r4, lr}
}
 8004c4e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c52:	4604      	mov	r4, r0
}
 8004c54:	f022 fe7b 	bl	802794e <_ZdlPvj>
 8004c58:	4620      	mov	r0, r4
 8004c5a:	bd10      	pop	{r4, pc}

08004c5c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004c60:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004c64:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004c66:	2600      	movs	r6, #0
 8004c68:	ed2d 8b02 	vpush	{d8}
 8004c6c:	8483      	strh	r3, [r0, #36]	; 0x24
 8004c6e:	4bb2      	ldr	r3, [pc, #712]	; (8004f38 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004c70:	6286      	str	r6, [r0, #40]	; 0x28
 8004c72:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004c76:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004c7a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004c7e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004c82:	f848 3b2c 	str.w	r3, [r8], #44
 8004c86:	b08b      	sub	sp, #44	; 0x2c
 8004c88:	4604      	mov	r4, r0
 8004c8a:	4640      	mov	r0, r8
 8004c8c:	f7fd fc42 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004c90:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004c94:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004c98:	4618      	mov	r0, r3
 8004c9a:	9303      	str	r3, [sp, #12]
 8004c9c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004ca0:	f7fd fc38 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004ca4:	4658      	mov	r0, fp
 8004ca6:	f7fd fc35 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004caa:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004cae:	4da3      	ldr	r5, [pc, #652]	; (8004f3c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004cb0:	4650      	mov	r0, sl
 8004cb2:	f7fd fc2f 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004cb6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004cba:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004cbe:	4648      	mov	r0, r9
 8004cc0:	f7fd fc28 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8004cc4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004cc8:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004ccc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004cce:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004cd2:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004cd6:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004cda:	f7fd fc1b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004cde:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004ce2:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004ce6:	4638      	mov	r0, r7
 8004ce8:	f00d f88c 	bl	8011e04 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004cec:	4a94      	ldr	r2, [pc, #592]	; (8004f40 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004cee:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004cf0:	4640      	mov	r0, r8
 8004cf2:	226d      	movs	r2, #109	; 0x6d
 8004cf4:	21d9      	movs	r1, #217	; 0xd9
 8004cf6:	ad04      	add	r5, sp, #16
 8004cf8:	f7fd fbd9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cfc:	f04f 33ff 	mov.w	r3, #4294967295
 8004d00:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004d02:	4641      	mov	r1, r8
 8004d04:	4628      	mov	r0, r5
        linespace = space;
 8004d06:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004d0a:	f00c fd43 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d12:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004d16:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d1a:	4b8a      	ldr	r3, [pc, #552]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d1c:	9308      	str	r3, [sp, #32]
 8004d1e:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004d20:	a908      	add	r1, sp, #32
 8004d22:	4640      	mov	r0, r8
 8004d24:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d28:	f00c ffce 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004d2c:	4641      	mov	r1, r8
 8004d2e:	4620      	mov	r0, r4
 8004d30:	f00a fe16 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004d34:	9b03      	ldr	r3, [sp, #12]
 8004d36:	4631      	mov	r1, r6
 8004d38:	4618      	mov	r0, r3
 8004d3a:	226d      	movs	r2, #109	; 0x6d
 8004d3c:	f7fd fbb7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004d40:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004d42:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004d46:	f04f 32ff 	mov.w	r2, #4294967295
 8004d4a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004d4e:	4619      	mov	r1, r3
 8004d50:	4628      	mov	r0, r5
 8004d52:	f00c fd1f 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d5a:	4b7a      	ldr	r3, [pc, #488]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d5c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004d5e:	9b03      	ldr	r3, [sp, #12]
 8004d60:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004d64:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d68:	2230      	movs	r2, #48	; 0x30
 8004d6a:	a908      	add	r1, sp, #32
 8004d6c:	4618      	mov	r0, r3
 8004d6e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d72:	f00c ffa9 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004d76:	9b03      	ldr	r3, [sp, #12]
 8004d78:	4620      	mov	r0, r4
 8004d7a:	4619      	mov	r1, r3
 8004d7c:	f00a fdf0 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004d80:	4632      	mov	r2, r6
 8004d82:	4658      	mov	r0, fp
 8004d84:	2171      	movs	r1, #113	; 0x71
 8004d86:	f7fd fb92 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004d8a:	f04f 32ff 	mov.w	r2, #4294967295
 8004d8e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004d92:	4659      	mov	r1, fp
 8004d94:	4628      	mov	r0, r5
        linespace = space;
 8004d96:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004d9a:	f00c fcfb 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004da2:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004da6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004daa:	4b66      	ldr	r3, [pc, #408]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004dac:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004dae:	a908      	add	r1, sp, #32
 8004db0:	2331      	movs	r3, #49	; 0x31
 8004db2:	4658      	mov	r0, fp
 8004db4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004db8:	f00c ff86 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004dbc:	4659      	mov	r1, fp
 8004dbe:	4620      	mov	r0, r4
 8004dc0:	f00a fdce 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004dc4:	4650      	mov	r0, sl
 8004dc6:	227c      	movs	r2, #124	; 0x7c
 8004dc8:	214c      	movs	r1, #76	; 0x4c
 8004dca:	f7fd fb70 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004dce:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004dd2:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004dd6:	f04f 32ff 	mov.w	r2, #4294967295
 8004dda:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004dde:	4651      	mov	r1, sl
 8004de0:	4628      	mov	r0, r5
 8004de2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004de6:	4798      	blx	r3
 8004de8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dec:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004df0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004df4:	4b53      	ldr	r3, [pc, #332]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004df6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004df8:	a908      	add	r1, sp, #32
 8004dfa:	232e      	movs	r3, #46	; 0x2e
 8004dfc:	4650      	mov	r0, sl
 8004dfe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e02:	f00c ff61 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004e06:	4651      	mov	r1, sl
 8004e08:	4620      	mov	r0, r4
 8004e0a:	f00a fda9 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004e0e:	4648      	mov	r0, r9
 8004e10:	228b      	movs	r2, #139	; 0x8b
 8004e12:	2156      	movs	r1, #86	; 0x56
 8004e14:	f7fd fb4b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004e18:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004e1c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004e20:	f04f 32ff 	mov.w	r2, #4294967295
 8004e24:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004e28:	4649      	mov	r1, r9
 8004e2a:	4628      	mov	r0, r5
 8004e2c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e30:	4798      	blx	r3
 8004e32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e36:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004e3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e3e:	4b41      	ldr	r3, [pc, #260]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e40:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004e42:	a908      	add	r1, sp, #32
 8004e44:	232d      	movs	r3, #45	; 0x2d
 8004e46:	4648      	mov	r0, r9
 8004e48:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e4c:	f00c ff3c 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8004e50:	4649      	mov	r1, r9
 8004e52:	4620      	mov	r0, r4
 8004e54:	f00a fd84 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004e58:	ee18 0a10 	vmov	r0, s16
 8004e5c:	229a      	movs	r2, #154	; 0x9a
 8004e5e:	2156      	movs	r1, #86	; 0x56
 8004e60:	f7fd fb25 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8004e64:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004e68:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8004e6c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004e70:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004e74:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004e78:	4628      	mov	r0, r5
 8004e7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e7e:	4798      	blx	r3
 8004e80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e84:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004e88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e8c:	4b2d      	ldr	r3, [pc, #180]	; (8004f44 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e8e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8004e90:	ee18 0a10 	vmov	r0, s16
 8004e94:	232c      	movs	r3, #44	; 0x2c
 8004e96:	a908      	add	r1, sp, #32
 8004e98:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e9c:	f00c ff14 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8004ea0:	ee18 1a10 	vmov	r1, s16
 8004ea4:	4620      	mov	r0, r4
 8004ea6:	f00a fd5b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004eaa:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004eac:	a908      	add	r1, sp, #32
 8004eae:	4638      	mov	r0, r7
 8004eb0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8004eb4:	f00a fce6 	bl	800f884 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004eb8:	2212      	movs	r2, #18
 8004eba:	4638      	mov	r0, r7
 8004ebc:	211c      	movs	r1, #28
 8004ebe:	f7fd faf6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004ec2:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004ec6:	4638      	mov	r0, r7
 8004ec8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004eca:	21b8      	movs	r1, #184	; 0xb8
 8004ecc:	4798      	blx	r3
        setHeight(height);
 8004ece:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004ed2:	4638      	mov	r0, r7
 8004ed4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ed6:	216a      	movs	r1, #106	; 0x6a
 8004ed8:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004eda:	225c      	movs	r2, #92	; 0x5c
 8004edc:	4611      	mov	r1, r2
 8004ede:	4638      	mov	r0, r7
 8004ee0:	f00d f83b 	bl	8011f5a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8004ee4:	4638      	mov	r0, r7
 8004ee6:	225a      	movs	r2, #90	; 0x5a
 8004ee8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004eec:	f00d f8ba 	bl	8012064 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8004ef0:	4633      	mov	r3, r6
 8004ef2:	225a      	movs	r2, #90	; 0x5a
 8004ef4:	4638      	mov	r0, r7
 8004ef6:	9600      	str	r6, [sp, #0]
 8004ef8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004efc:	f00a fb6f 	bl	800f5de <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8004f00:	4631      	mov	r1, r6
 8004f02:	4638      	mov	r0, r7
 8004f04:	f00d f858 	bl	8011fb8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004f08:	2335      	movs	r3, #53	; 0x35
 8004f0a:	2208      	movs	r2, #8
 8004f0c:	4638      	mov	r0, r7
 8004f0e:	2105      	movs	r1, #5
 8004f10:	f00d f80e 	bl	8011f30 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f14:	4638      	mov	r0, r7
 8004f16:	2101      	movs	r1, #1
 8004f18:	f00c ffac 	bl	8011e74 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f1c:	4638      	mov	r0, r7
 8004f1e:	2101      	movs	r1, #1
 8004f20:	f00c ffab 	bl	8011e7a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8004f24:	4620      	mov	r0, r4
 8004f26:	4639      	mov	r1, r7
 8004f28:	f00a fd1a 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f2c:	4620      	mov	r0, r4
 8004f2e:	b00b      	add	sp, #44	; 0x2c
 8004f30:	ecbd 8b02 	vpop	{d8}
 8004f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f38:	0802b9c8 	.word	0x0802b9c8
 8004f3c:	0802a14c 	.word	0x0802a14c
 8004f40:	00a900f0 	.word	0x00a900f0
 8004f44:	0802a13c 	.word	0x0802a13c

08004f48 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004f48:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004f4a:	4770      	bx	lr

08004f4c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004f4c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f4e:	4770      	bx	lr

08004f50 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004f50:	4770      	bx	lr

08004f52 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004f52:	888b      	ldrh	r3, [r1, #4]
 8004f54:	69c0      	ldr	r0, [r0, #28]
 8004f56:	680a      	ldr	r2, [r1, #0]
 8004f58:	0adb      	lsrs	r3, r3, #11
 8004f5a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004f5e:	4410      	add	r0, r2
 8004f60:	4770      	bx	lr

08004f62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004f62:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004f64:	b1c2      	cbz	r2, 8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004f66:	7b13      	ldrb	r3, [r2, #12]
 8004f68:	b1b3      	cbz	r3, 8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004f6a:	7b54      	ldrb	r4, [r2, #13]
 8004f6c:	7ad2      	ldrb	r2, [r2, #11]
 8004f6e:	0224      	lsls	r4, r4, #8
 8004f70:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f74:	4314      	orrs	r4, r2
 8004f76:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f78:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f7a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004f7e:	8813      	ldrh	r3, [r2, #0]
 8004f80:	428b      	cmp	r3, r1
 8004f82:	d102      	bne.n	8004f8a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004f84:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004f88:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004f8a:	d805      	bhi.n	8004f98 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f8c:	3801      	subs	r0, #1
 8004f8e:	b280      	uxth	r0, r0
 8004f90:	3204      	adds	r2, #4
 8004f92:	2800      	cmp	r0, #0
 8004f94:	d1f3      	bne.n	8004f7e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004f96:	e7f7      	b.n	8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004f98:	2000      	movs	r0, #0
 8004f9a:	e7f5      	b.n	8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004f9c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004f9c:	b510      	push	{r4, lr}
 8004f9e:	212c      	movs	r1, #44	; 0x2c
 8004fa0:	4604      	mov	r4, r0
 8004fa2:	f022 fcd4 	bl	802794e <_ZdlPvj>
 8004fa6:	4620      	mov	r0, r4
 8004fa8:	bd10      	pop	{r4, pc}
	...

08004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004fac:	b530      	push	{r4, r5, lr}
 8004fae:	b08b      	sub	sp, #44	; 0x2c
 8004fb0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004fb2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004fb6:	9508      	str	r5, [sp, #32]
 8004fb8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004fbc:	9507      	str	r5, [sp, #28]
 8004fbe:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004fc2:	9506      	str	r5, [sp, #24]
 8004fc4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004fc8:	9505      	str	r5, [sp, #20]
 8004fca:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8004fce:	9504      	str	r5, [sp, #16]
 8004fd0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004fd4:	9503      	str	r5, [sp, #12]
 8004fd6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004fda:	9502      	str	r5, [sp, #8]
 8004fdc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004fe0:	9501      	str	r5, [sp, #4]
 8004fe2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004fe6:	9500      	str	r5, [sp, #0]
 8004fe8:	f011 f8e8 	bl	80161bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004fec:	4b06      	ldr	r3, [pc, #24]	; (8005008 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004fee:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004ff0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ff2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004ff4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004ff6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004ff8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004ffa:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004ffc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004ffe:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005000:	4620      	mov	r0, r4
 8005002:	b00b      	add	sp, #44	; 0x2c
 8005004:	bd30      	pop	{r4, r5, pc}
 8005006:	bf00      	nop
 8005008:	0802ba5c 	.word	0x0802ba5c

0800500c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800500c:	4770      	bx	lr

0800500e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800500e:	4770      	bx	lr

08005010 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005010:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005012:	68c2      	ldr	r2, [r0, #12]
 8005014:	6844      	ldr	r4, [r0, #4]
 8005016:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005018:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800501a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800501e:	07d2      	lsls	r2, r2, #31
 8005020:	bf48      	it	mi
 8005022:	5962      	ldrmi	r2, [r4, r5]
 8005024:	689b      	ldr	r3, [r3, #8]
    }
 8005026:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005028:	bf48      	it	mi
 800502a:	58d3      	ldrmi	r3, [r2, r3]
 800502c:	4718      	bx	r3

0800502e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800502e:	6843      	ldr	r3, [r0, #4]
 8005030:	b12b      	cbz	r3, 800503e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005032:	6883      	ldr	r3, [r0, #8]
 8005034:	b92b      	cbnz	r3, 8005042 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005036:	68c0      	ldr	r0, [r0, #12]
 8005038:	f000 0001 	and.w	r0, r0, #1
 800503c:	4770      	bx	lr
 800503e:	4618      	mov	r0, r3
 8005040:	4770      	bx	lr
 8005042:	2001      	movs	r0, #1
    }
 8005044:	4770      	bx	lr

08005046 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005046:	b510      	push	{r4, lr}
 8005048:	2110      	movs	r1, #16
 800504a:	4604      	mov	r4, r0
 800504c:	f022 fc7f 	bl	802794e <_ZdlPvj>
 8005050:	4620      	mov	r0, r4
 8005052:	bd10      	pop	{r4, pc}

08005054 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005054:	b510      	push	{r4, lr}
 8005056:	4b03      	ldr	r3, [pc, #12]	; (8005064 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005058:	6003      	str	r3, [r0, #0]
 800505a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800505c:	f00e fa16 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005060:	4620      	mov	r0, r4
 8005062:	bd10      	pop	{r4, pc}
 8005064:	0802bad4 	.word	0x0802bad4

08005068 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005068:	b507      	push	{r0, r1, r2, lr}
 800506a:	4b07      	ldr	r3, [pc, #28]	; (8005088 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800506c:	6003      	str	r3, [r0, #0]
 800506e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005070:	f00e fa0c 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005074:	9801      	ldr	r0, [sp, #4]
 8005076:	f241 117c 	movw	r1, #4476	; 0x117c
 800507a:	f022 fc68 	bl	802794e <_ZdlPvj>
 800507e:	9801      	ldr	r0, [sp, #4]
 8005080:	b003      	add	sp, #12
 8005082:	f85d fb04 	ldr.w	pc, [sp], #4
 8005086:	bf00      	nop
 8005088:	0802bad4 	.word	0x0802bad4

0800508c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800508c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800508e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005092:	4299      	cmp	r1, r3
{
 8005094:	4604      	mov	r4, r0
 8005096:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005098:	d103      	bne.n	80050a2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800509a:	f00f fef9 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800509e:	f7fe fb1d 	bl	80036dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80050a2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80050a6:	429d      	cmp	r5, r3
 80050a8:	d103      	bne.n	80050b2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80050aa:	f00f fef1 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80050ae:	f7fe fba5 	bl	80037fc <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80050b2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050b6:	429d      	cmp	r5, r3
 80050b8:	d103      	bne.n	80050c2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80050ba:	f00f fee9 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80050be:	f7fe fbdd 	bl	800387c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80050c2:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80050c6:	42a5      	cmp	r5, r4
 80050c8:	d10a      	bne.n	80050e0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80050ca:	4806      	ldr	r0, [pc, #24]	; (80050e4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80050cc:	2200      	movs	r2, #0
 80050ce:	2120      	movs	r1, #32
 80050d0:	f004 f964 	bl	800939c <HAL_GPIO_WritePin>
 80050d4:	f00f fedc 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80050d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80050dc:	f7fe bbde 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80050e0:	bd38      	pop	{r3, r4, r5, pc}
 80050e2:	bf00      	nop
 80050e4:	40021000 	.word	0x40021000

080050e8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80050e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050ec:	ed2d 8b06 	vpush	{d8-d10}
 80050f0:	4604      	mov	r4, r0
 80050f2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80050f4:	46a3      	mov	fp, r4
        : presenter(0)
 80050f6:	2500      	movs	r5, #0
 80050f8:	f011 fb4a 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 80050fc:	4b6a      	ldr	r3, [pc, #424]	; (80052a8 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80050fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005100:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005104:	2226      	movs	r2, #38	; 0x26
 8005106:	4629      	mov	r1, r5
 8005108:	4658      	mov	r0, fp
 800510a:	f023 fc16 	bl	802893a <memset>
 800510e:	4658      	mov	r0, fp
 8005110:	f7fd f9ee 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005114:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005118:	26ff      	movs	r6, #255	; 0xff
 800511a:	4b64      	ldr	r3, [pc, #400]	; (80052ac <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800511c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800511e:	2226      	movs	r2, #38	; 0x26
 8005120:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005124:	4629      	mov	r1, r5
 8005126:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800512a:	4650      	mov	r0, sl
        : color(col)
 800512c:	66a5      	str	r5, [r4, #104]	; 0x68
 800512e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005132:	f023 fc02 	bl	802893a <memset>
 8005136:	4650      	mov	r0, sl
 8005138:	f7fd f9da 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 800513c:	4b5c      	ldr	r3, [pc, #368]	; (80052b0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800513e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005140:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005144:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005148:	a90c      	add	r1, sp, #48	; 0x30
 800514a:	4650      	mov	r0, sl
 800514c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005150:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005154:	f00d f993 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005158:	4648      	mov	r0, r9
 800515a:	f7fd f9db 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800515e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005162:	4b54      	ldr	r3, [pc, #336]	; (80052b4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005164:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005168:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800516c:	4638      	mov	r0, r7
 800516e:	f00c f84f 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 8005172:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005176:	4618      	mov	r0, r3
 8005178:	9303      	str	r3, [sp, #12]
 800517a:	f7fc f8a1 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800517e:	4b4e      	ldr	r3, [pc, #312]	; (80052b8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005180:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005184:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005188:	3324      	adds	r3, #36	; 0x24
 800518a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800518e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005192:	4640      	mov	r0, r8
 8005194:	f7fd f9be 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005198:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800519c:	4618      	mov	r0, r3
 800519e:	ee08 3a10 	vmov	s16, r3
 80051a2:	f7fd f9b7 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80051a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80051aa:	4618      	mov	r0, r3
 80051ac:	ee08 3a90 	vmov	s17, r3
 80051b0:	f7fd f9b0 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80051b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80051b8:	4618      	mov	r0, r3
 80051ba:	ee09 3a10 	vmov	s18, r3
 80051be:	f00d fa9f 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051c2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80051c6:	4618      	mov	r0, r3
 80051c8:	ee09 3a90 	vmov	s19, r3
 80051cc:	f00d fa98 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051d0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80051d4:	4618      	mov	r0, r3
 80051d6:	ee0a 3a10 	vmov	s20, r3
 80051da:	f00d fa91 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051de:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80051e2:	4618      	mov	r0, r3
 80051e4:	ee0a 3a90 	vmov	s21, r3
 80051e8:	f00d f922 	bl	8012430 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80051ec:	4a33      	ldr	r2, [pc, #204]	; (80052bc <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80051ee:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80051f2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80051f6:	4a32      	ldr	r2, [pc, #200]	; (80052c0 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051f8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80051fc:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005200:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005204:	f00e f938 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005208:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800520c:	462a      	mov	r2, r5
 800520e:	4658      	mov	r0, fp
 8005210:	9300      	str	r3, [sp, #0]
 8005212:	4629      	mov	r1, r5
 8005214:	23f0      	movs	r3, #240	; 0xf0
 8005216:	f7fd f957 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800521a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800521c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005220:	66a3      	str	r3, [r4, #104]	; 0x68
 8005222:	4659      	mov	r1, fp
 8005224:	4630      	mov	r0, r6
 8005226:	f00a fb9b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800522a:	462a      	mov	r2, r5
 800522c:	4650      	mov	r0, sl
 800522e:	4629      	mov	r1, r5
 8005230:	f7fd f93d 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005234:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005236:	4650      	mov	r0, sl
 8005238:	a90c      	add	r1, sp, #48	; 0x30
 800523a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800523e:	f00d f91e 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005242:	4651      	mov	r1, sl
 8005244:	4630      	mov	r0, r6
 8005246:	f00a fb8b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800524a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800524e:	2156      	movs	r1, #86	; 0x56
 8005250:	4648      	mov	r0, r9
 8005252:	f7fd f92c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005256:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800525a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800525e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005262:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005266:	4650      	mov	r0, sl
 8005268:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800526c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005270:	4649      	mov	r1, r9
 8005272:	4798      	blx	r3
 8005274:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005278:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800527c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005280:	4b10      	ldr	r3, [pc, #64]	; (80052c4 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005282:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005284:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005288:	b92b      	cbnz	r3, 8005296 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800528a:	4b0f      	ldr	r3, [pc, #60]	; (80052c8 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800528c:	4a0f      	ldr	r2, [pc, #60]	; (80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800528e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005290:	480f      	ldr	r0, [pc, #60]	; (80052d0 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005292:	f023 f94d 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005296:	4b0f      	ldr	r3, [pc, #60]	; (80052d4 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005298:	881b      	ldrh	r3, [r3, #0]
 800529a:	2b2a      	cmp	r3, #42	; 0x2a
 800529c:	d81e      	bhi.n	80052dc <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800529e:	4b0e      	ldr	r3, [pc, #56]	; (80052d8 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80052a0:	4a0a      	ldr	r2, [pc, #40]	; (80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80052a2:	2161      	movs	r1, #97	; 0x61
 80052a4:	e7f4      	b.n	8005290 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80052a6:	bf00      	nop
 80052a8:	0802bad4 	.word	0x0802bad4
 80052ac:	0802ca84 	.word	0x0802ca84
 80052b0:	0802cc4c 	.word	0x0802cc4c
 80052b4:	0802a14c 	.word	0x0802a14c
 80052b8:	0802c7b8 	.word	0x0802c7b8
 80052bc:	0802babc 	.word	0x0802babc
 80052c0:	0800508d 	.word	0x0800508d
 80052c4:	20013824 	.word	0x20013824
 80052c8:	08029f8c 	.word	0x08029f8c
 80052cc:	0802a08e 	.word	0x0802a08e
 80052d0:	0802a009 	.word	0x0802a009
 80052d4:	20013828 	.word	0x20013828
 80052d8:	0802a050 	.word	0x0802a050
        return texts->getText(typedTextId);
 80052dc:	4ba5      	ldr	r3, [pc, #660]	; (8005574 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80052de:	212a      	movs	r1, #42	; 0x2a
 80052e0:	6818      	ldr	r0, [r3, #0]
 80052e2:	f002 fddf 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 80052e6:	4aa4      	ldr	r2, [pc, #656]	; (8005578 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80052e8:	4603      	mov	r3, r0
 80052ea:	2104      	movs	r1, #4
 80052ec:	4650      	mov	r0, sl
 80052ee:	f012 ff33 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80052f2:	4648      	mov	r0, r9
        wc1 = value;
 80052f4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80052f8:	f00c fcc6 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80052fc:	4b9f      	ldr	r3, [pc, #636]	; (800557c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80052fe:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005300:	a90c      	add	r1, sp, #48	; 0x30
 8005302:	232b      	movs	r3, #43	; 0x2b
 8005304:	4648      	mov	r0, r9
 8005306:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800530a:	f00c fcdd 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800530e:	4649      	mov	r1, r9
 8005310:	4630      	mov	r0, r6
 8005312:	f00a fb25 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005316:	230a      	movs	r3, #10
 8005318:	9300      	str	r3, [sp, #0]
 800531a:	2232      	movs	r2, #50	; 0x32
 800531c:	23f0      	movs	r3, #240	; 0xf0
 800531e:	4629      	mov	r1, r5
 8005320:	4638      	mov	r0, r7
 8005322:	f7fd f8d1 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005326:	9b03      	ldr	r3, [sp, #12]
 8005328:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800532c:	22a0      	movs	r2, #160	; 0xa0
 800532e:	4611      	mov	r1, r2
 8005330:	4638      	mov	r0, r7
 8005332:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005336:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800533a:	f00c f87f 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800533e:	22a0      	movs	r2, #160	; 0xa0
 8005340:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005344:	4638      	mov	r0, r7
 8005346:	f00c f884 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800534a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800534e:	2b20      	cmp	r3, #32
 8005350:	d005      	beq.n	800535e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005352:	2320      	movs	r3, #32
 8005354:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005358:	4638      	mov	r0, r7
 800535a:	f00b ff79 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800535e:	4638      	mov	r0, r7
 8005360:	2101      	movs	r1, #1
 8005362:	f00c f881 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005366:	4639      	mov	r1, r7
 8005368:	4630      	mov	r0, r6
 800536a:	ad04      	add	r5, sp, #16
        color = newColor;
 800536c:	f04f 37ff 	mov.w	r7, #4294967295
 8005370:	f00a faf6 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005374:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005378:	2223      	movs	r2, #35	; 0x23
 800537a:	4640      	mov	r0, r8
 800537c:	2145      	movs	r1, #69	; 0x45
 800537e:	f7fd f896 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005382:	4641      	mov	r1, r8
 8005384:	4628      	mov	r0, r5
        color = newColor;
 8005386:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800538a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800538e:	f00c fa01 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005392:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005396:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800539a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800539e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053a2:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800557c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80053a6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053aa:	2350      	movs	r3, #80	; 0x50
 80053ac:	4649      	mov	r1, r9
 80053ae:	4640      	mov	r0, r8
 80053b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053b4:	f00c fc88 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053b8:	4641      	mov	r1, r8
 80053ba:	4630      	mov	r0, r6
 80053bc:	f00a fad0 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80053c0:	ee18 0a10 	vmov	r0, s16
 80053c4:	220c      	movs	r2, #12
 80053c6:	2136      	movs	r1, #54	; 0x36
 80053c8:	f7fd f871 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80053cc:	ee18 1a10 	vmov	r1, s16
 80053d0:	4628      	mov	r0, r5
        color = newColor;
 80053d2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80053d6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80053da:	f00c f9db 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053e2:	ee18 3a10 	vmov	r3, s16
 80053e6:	333c      	adds	r3, #60	; 0x3c
 80053e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053ec:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80053ee:	ee18 0a10 	vmov	r0, s16
 80053f2:	4649      	mov	r1, r9
 80053f4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053f8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053fc:	f00c fc64 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005400:	ee18 1a10 	vmov	r1, s16
 8005404:	4630      	mov	r0, r6
 8005406:	f00a faab 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800540a:	ee18 0a90 	vmov	r0, s17
 800540e:	223c      	movs	r2, #60	; 0x3c
 8005410:	2158      	movs	r1, #88	; 0x58
 8005412:	f7fd f84c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005416:	ee18 1a90 	vmov	r1, s17
 800541a:	4628      	mov	r0, r5
        color = newColor;
 800541c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005420:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005424:	f00c f9b6 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005428:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800542c:	ee18 3a90 	vmov	r3, s17
 8005430:	333c      	adds	r3, #60	; 0x3c
 8005432:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005436:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005438:	ee18 0a90 	vmov	r0, s17
 800543c:	4649      	mov	r1, r9
 800543e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005442:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005446:	f00c fc3f 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800544a:	ee18 1a90 	vmov	r1, s17
 800544e:	4630      	mov	r0, r6
 8005450:	f00a fa86 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005454:	ee19 0a10 	vmov	r0, s18
 8005458:	22f0      	movs	r2, #240	; 0xf0
 800545a:	2121      	movs	r1, #33	; 0x21
 800545c:	f7fd f827 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005460:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005464:	464a      	mov	r2, r9
 8005466:	f04f 0802 	mov.w	r8, #2
 800546a:	a90b      	add	r1, sp, #44	; 0x2c
 800546c:	ee19 0a10 	vmov	r0, s18
 8005470:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005474:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005478:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800547c:	f00c fe09 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005480:	2352      	movs	r3, #82	; 0x52
 8005482:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005486:	350c      	adds	r5, #12
        updateTextPosition();
 8005488:	ee19 0a10 	vmov	r0, s18
 800548c:	f7fd f864 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005490:	ee19 1a10 	vmov	r1, s18
 8005494:	4630      	mov	r0, r6
        colorPressed = col;
 8005496:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800549a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800549e:	f00a fa5f 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80054a2:	ee19 0a90 	vmov	r0, s19
 80054a6:	22aa      	movs	r2, #170	; 0xaa
 80054a8:	2121      	movs	r1, #33	; 0x21
 80054aa:	f7fd f800 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054ae:	464a      	mov	r2, r9
 80054b0:	a90b      	add	r1, sp, #44	; 0x2c
 80054b2:	ee19 0a90 	vmov	r0, s19
 80054b6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054ba:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054be:	f00c fde8 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80054c2:	2353      	movs	r3, #83	; 0x53
 80054c4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80054c8:	ee19 0a90 	vmov	r0, s19
 80054cc:	f7fd f844 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80054d0:	ee19 1a90 	vmov	r1, s19
 80054d4:	4630      	mov	r0, r6
        colorPressed = col;
 80054d6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80054da:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80054de:	f00a fa3f 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80054e2:	ee1a 0a10 	vmov	r0, s20
 80054e6:	2264      	movs	r2, #100	; 0x64
 80054e8:	2121      	movs	r1, #33	; 0x21
 80054ea:	f7fc ffe0 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054ee:	464a      	mov	r2, r9
 80054f0:	a90b      	add	r1, sp, #44	; 0x2c
 80054f2:	ee1a 0a10 	vmov	r0, s20
 80054f6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054fa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054fe:	f00c fdc8 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005502:	2354      	movs	r3, #84	; 0x54
 8005504:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005508:	ee1a 0a10 	vmov	r0, s20
 800550c:	f7fd f824 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005510:	ee1a 1a10 	vmov	r1, s20
 8005514:	4630      	mov	r0, r6
        colorPressed = col;
 8005516:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800551a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800551e:	f00a fa1f 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005522:	ee1a 0a90 	vmov	r0, s21
 8005526:	2205      	movs	r2, #5
 8005528:	21c6      	movs	r1, #198	; 0xc6
 800552a:	f7fc ffc0 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800552e:	2301      	movs	r3, #1
 8005530:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005534:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005536:	ee1a 0a90 	vmov	r0, s21
 800553a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800553e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005542:	aa0a      	add	r2, sp, #40	; 0x28
 8005544:	ab0b      	add	r3, sp, #44	; 0x2c
 8005546:	a909      	add	r1, sp, #36	; 0x24
 8005548:	f8cd 9000 	str.w	r9, [sp]
 800554c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005550:	f00c fed9 	bl	8012306 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005554:	4630      	mov	r0, r6
 8005556:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800555a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800555e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005562:	f00a f9fd 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005566:	4620      	mov	r0, r4
 8005568:	b00f      	add	sp, #60	; 0x3c
 800556a:	ecbd 8b06 	vpop	{d8-d10}
 800556e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005572:	bf00      	nop
 8005574:	20013830 	.word	0x20013830
 8005578:	0802a0c6 	.word	0x0802a0c6
 800557c:	0802a13c 	.word	0x0802a13c

08005580 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005580:	4770      	bx	lr

08005582 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005582:	4770      	bx	lr

08005584 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005584:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005586:	68c2      	ldr	r2, [r0, #12]
 8005588:	6844      	ldr	r4, [r0, #4]
 800558a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800558c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800558e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005592:	07d2      	lsls	r2, r2, #31
 8005594:	bf48      	it	mi
 8005596:	5962      	ldrmi	r2, [r4, r5]
 8005598:	689b      	ldr	r3, [r3, #8]
    }
 800559a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800559c:	bf48      	it	mi
 800559e:	58d3      	ldrmi	r3, [r2, r3]
 80055a0:	4718      	bx	r3

080055a2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80055a2:	6843      	ldr	r3, [r0, #4]
 80055a4:	b12b      	cbz	r3, 80055b2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80055a6:	6883      	ldr	r3, [r0, #8]
 80055a8:	b92b      	cbnz	r3, 80055b6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80055aa:	68c0      	ldr	r0, [r0, #12]
 80055ac:	f000 0001 	and.w	r0, r0, #1
 80055b0:	4770      	bx	lr
 80055b2:	4618      	mov	r0, r3
 80055b4:	4770      	bx	lr
 80055b6:	2001      	movs	r0, #1
    }
 80055b8:	4770      	bx	lr

080055ba <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055ba:	b510      	push	{r4, lr}
 80055bc:	2110      	movs	r1, #16
 80055be:	4604      	mov	r4, r0
 80055c0:	f022 f9c5 	bl	802794e <_ZdlPvj>
 80055c4:	4620      	mov	r0, r4
 80055c6:	bd10      	pop	{r4, pc}

080055c8 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055c8:	b510      	push	{r4, lr}
 80055ca:	4b03      	ldr	r3, [pc, #12]	; (80055d8 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80055cc:	6003      	str	r3, [r0, #0]
 80055ce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055d0:	f00d ff5c 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055d4:	4620      	mov	r0, r4
 80055d6:	bd10      	pop	{r4, pc}
 80055d8:	0802bb20 	.word	0x0802bb20

080055dc <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055dc:	b507      	push	{r0, r1, r2, lr}
 80055de:	4b07      	ldr	r3, [pc, #28]	; (80055fc <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80055e0:	6003      	str	r3, [r0, #0]
 80055e2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055e4:	f00d ff52 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055e8:	9801      	ldr	r0, [sp, #4]
 80055ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80055ee:	f022 f9ae 	bl	802794e <_ZdlPvj>
 80055f2:	9801      	ldr	r0, [sp, #4]
 80055f4:	b003      	add	sp, #12
 80055f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80055fa:	bf00      	nop
 80055fc:	0802bb20 	.word	0x0802bb20

08005600 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005600:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005602:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005606:	4299      	cmp	r1, r3
{
 8005608:	4604      	mov	r4, r0
 800560a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800560c:	d103      	bne.n	8005616 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800560e:	f00f fc3f 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005612:	f7fe f853 	bl	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005616:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800561a:	429d      	cmp	r5, r3
 800561c:	d103      	bne.n	8005626 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800561e:	f00f fc37 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005622:	f7fe f87b 	bl	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005626:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800562a:	42a5      	cmp	r5, r4
 800562c:	d105      	bne.n	800563a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800562e:	f00f fc2f 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005632:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005636:	f7fe b8a1 	b.w	800377c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800563a:	bd38      	pop	{r3, r4, r5, pc}

0800563c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800563c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005640:	ed2d 8b06 	vpush	{d8-d10}
 8005644:	4604      	mov	r4, r0
 8005646:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005648:	46a3      	mov	fp, r4
 800564a:	2500      	movs	r5, #0
 800564c:	f011 f8a0 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8005650:	4b66      	ldr	r3, [pc, #408]	; (80057ec <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005652:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005654:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005658:	2226      	movs	r2, #38	; 0x26
 800565a:	4629      	mov	r1, r5
 800565c:	4658      	mov	r0, fp
 800565e:	f023 f96c 	bl	802893a <memset>
 8005662:	4658      	mov	r0, fp
 8005664:	f7fc ff44 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005668:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800566c:	26ff      	movs	r6, #255	; 0xff
 800566e:	4b60      	ldr	r3, [pc, #384]	; (80057f0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005670:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005672:	2226      	movs	r2, #38	; 0x26
 8005674:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005678:	4629      	mov	r1, r5
 800567a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800567e:	4650      	mov	r0, sl
 8005680:	66a5      	str	r5, [r4, #104]	; 0x68
 8005682:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005686:	f023 f958 	bl	802893a <memset>
 800568a:	4650      	mov	r0, sl
 800568c:	f7fc ff30 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005690:	4b58      	ldr	r3, [pc, #352]	; (80057f4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005692:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005694:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005698:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800569c:	a90a      	add	r1, sp, #40	; 0x28
 800569e:	4650      	mov	r0, sl
 80056a0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80056a4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80056a8:	f00c fee9 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80056ac:	4648      	mov	r0, r9
 80056ae:	f7fc ff31 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80056b2:	4b51      	ldr	r3, [pc, #324]	; (80057f8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80056b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80056b8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80056bc:	4618      	mov	r0, r3
 80056be:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80056c2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80056c6:	ee08 3a90 	vmov	s17, r3
 80056ca:	f7fc ff23 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80056ce:	4638      	mov	r0, r7
 80056d0:	f00b fd9e 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 80056d4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056d8:	4618      	mov	r0, r3
 80056da:	9303      	str	r3, [sp, #12]
 80056dc:	f7fb fdf0 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056e0:	4b46      	ldr	r3, [pc, #280]	; (80057fc <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80056e2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80056e6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80056ea:	3324      	adds	r3, #36	; 0x24
 80056ec:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80056f0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80056f4:	4640      	mov	r0, r8
 80056f6:	f7fc ff0d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80056fa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80056fe:	4618      	mov	r0, r3
 8005700:	ee08 3a10 	vmov	s16, r3
 8005704:	f7fc ff06 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005708:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800570c:	4618      	mov	r0, r3
 800570e:	ee09 3a10 	vmov	s18, r3
 8005712:	f00c fff5 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005716:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800571a:	4618      	mov	r0, r3
 800571c:	ee09 3a90 	vmov	s19, r3
 8005720:	f00c ffee 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005724:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005728:	4618      	mov	r0, r3
 800572a:	ee0a 3a10 	vmov	s20, r3
 800572e:	f00c ffe7 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005732:	4a33      	ldr	r2, [pc, #204]	; (8005800 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005734:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005738:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800573c:	4a31      	ldr	r2, [pc, #196]	; (8005804 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800573e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005742:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005746:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800574a:	f00d fe95 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800574e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005752:	462a      	mov	r2, r5
 8005754:	4658      	mov	r0, fp
 8005756:	9300      	str	r3, [sp, #0]
 8005758:	4629      	mov	r1, r5
 800575a:	23f0      	movs	r3, #240	; 0xf0
 800575c:	f7fc feb4 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005760:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005762:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005766:	66a3      	str	r3, [r4, #104]	; 0x68
 8005768:	4659      	mov	r1, fp
 800576a:	4630      	mov	r0, r6
 800576c:	f00a f8f8 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005770:	462a      	mov	r2, r5
 8005772:	4650      	mov	r0, sl
 8005774:	4629      	mov	r1, r5
 8005776:	f7fc fe9a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800577a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800577c:	4650      	mov	r0, sl
 800577e:	a90a      	add	r1, sp, #40	; 0x28
 8005780:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005784:	f00c fe7b 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005788:	4651      	mov	r1, sl
 800578a:	4630      	mov	r0, r6
 800578c:	f00a f8e8 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005790:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005794:	2156      	movs	r1, #86	; 0x56
 8005796:	4648      	mov	r0, r9
 8005798:	f7fc fe89 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800579c:	f04f 33ff 	mov.w	r3, #4294967295
 80057a0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80057a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80057a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80057ac:	f10d 0b10 	add.w	fp, sp, #16
 80057b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057b4:	4649      	mov	r1, r9
 80057b6:	4658      	mov	r0, fp
 80057b8:	4798      	blx	r3
 80057ba:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80057be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80057c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057c6:	4b10      	ldr	r3, [pc, #64]	; (8005808 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80057c8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80057ca:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80057ce:	b92b      	cbnz	r3, 80057dc <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80057d0:	4b0e      	ldr	r3, [pc, #56]	; (800580c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80057d2:	4a0f      	ldr	r2, [pc, #60]	; (8005810 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057d6:	480f      	ldr	r0, [pc, #60]	; (8005814 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80057d8:	f022 feaa 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80057dc:	4b0e      	ldr	r3, [pc, #56]	; (8005818 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057de:	881b      	ldrh	r3, [r3, #0]
 80057e0:	2b1b      	cmp	r3, #27
 80057e2:	d81d      	bhi.n	8005820 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80057e4:	4b0d      	ldr	r3, [pc, #52]	; (800581c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80057e6:	4a0a      	ldr	r2, [pc, #40]	; (8005810 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057e8:	2161      	movs	r1, #97	; 0x61
 80057ea:	e7f4      	b.n	80057d6 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80057ec:	0802bb20 	.word	0x0802bb20
 80057f0:	0802ca84 	.word	0x0802ca84
 80057f4:	0802cc4c 	.word	0x0802cc4c
 80057f8:	0802a14c 	.word	0x0802a14c
 80057fc:	0802c7b8 	.word	0x0802c7b8
 8005800:	0802bb08 	.word	0x0802bb08
 8005804:	08005601 	.word	0x08005601
 8005808:	20013824 	.word	0x20013824
 800580c:	08029f8c 	.word	0x08029f8c
 8005810:	0802a08e 	.word	0x0802a08e
 8005814:	0802a009 	.word	0x0802a009
 8005818:	20013828 	.word	0x20013828
 800581c:	0802a050 	.word	0x0802a050
        return texts->getText(typedTextId);
 8005820:	4b95      	ldr	r3, [pc, #596]	; (8005a78 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005822:	211b      	movs	r1, #27
 8005824:	6818      	ldr	r0, [r3, #0]
 8005826:	f002 fb3d 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 800582a:	4a94      	ldr	r2, [pc, #592]	; (8005a7c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 800582c:	4603      	mov	r3, r0
 800582e:	2104      	movs	r1, #4
 8005830:	4650      	mov	r0, sl
 8005832:	f012 fc91 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005836:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800583a:	4648      	mov	r0, r9
 800583c:	f00c fa24 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005840:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005a80 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005844:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005848:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800584a:	a90a      	add	r1, sp, #40	; 0x28
 800584c:	4648      	mov	r0, r9
 800584e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005852:	f00c fa39 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005856:	4649      	mov	r1, r9
 8005858:	4630      	mov	r0, r6
 800585a:	f00a f881 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800585e:	223c      	movs	r2, #60	; 0x3c
 8005860:	ee18 0a90 	vmov	r0, s17
 8005864:	213d      	movs	r1, #61	; 0x3d
 8005866:	f7fc fe22 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800586a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800586e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005872:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005876:	4658      	mov	r0, fp
        linespace = space;
 8005878:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800587c:	f00b ff8a 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005880:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005884:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005888:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800588c:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 800588e:	ee18 0a90 	vmov	r0, s17
 8005892:	a90a      	add	r1, sp, #40	; 0x28
 8005894:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005898:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800589c:	f00c fa14 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058a0:	ee18 1a90 	vmov	r1, s17
 80058a4:	4630      	mov	r0, r6
 80058a6:	f00a f85b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80058aa:	230a      	movs	r3, #10
 80058ac:	9300      	str	r3, [sp, #0]
 80058ae:	2232      	movs	r2, #50	; 0x32
 80058b0:	23f0      	movs	r3, #240	; 0xf0
 80058b2:	4629      	mov	r1, r5
 80058b4:	4638      	mov	r0, r7
 80058b6:	f7fc fe07 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80058ba:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058be:	22a0      	movs	r2, #160	; 0xa0
 80058c0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80058c4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80058c8:	9b03      	ldr	r3, [sp, #12]
 80058ca:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80058ce:	4611      	mov	r1, r2
 80058d0:	4638      	mov	r0, r7
 80058d2:	f00b fdb3 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058d6:	22a0      	movs	r2, #160	; 0xa0
 80058d8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80058dc:	4638      	mov	r0, r7
 80058de:	f00b fdb8 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80058e2:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80058e6:	2b20      	cmp	r3, #32
 80058e8:	d005      	beq.n	80058f6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80058ea:	2320      	movs	r3, #32
 80058ec:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80058f0:	4638      	mov	r0, r7
 80058f2:	f00b fcad 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80058f6:	4638      	mov	r0, r7
 80058f8:	2101      	movs	r1, #1
 80058fa:	f00b fdb5 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80058fe:	4639      	mov	r1, r7
 8005900:	4630      	mov	r0, r6
 8005902:	f00a f82d 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005906:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800590a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800590c:	2223      	movs	r2, #35	; 0x23
 800590e:	4640      	mov	r0, r8
        linespace = space;
 8005910:	f04f 0a00 	mov.w	sl, #0
 8005914:	2145      	movs	r1, #69	; 0x45
 8005916:	f7fc fdca 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800591a:	4641      	mov	r1, r8
 800591c:	4638      	mov	r0, r7
        color = newColor;
 800591e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005922:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005926:	f00b ff35 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800592a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800592e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005932:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005936:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005a80 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800593a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800593e:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005940:	a90a      	add	r1, sp, #40	; 0x28
 8005942:	4640      	mov	r0, r8
 8005944:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005948:	f00c f9be 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800594c:	4641      	mov	r1, r8
 800594e:	4630      	mov	r0, r6
 8005950:	f00a f806 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005954:	ee18 0a10 	vmov	r0, s16
 8005958:	220c      	movs	r2, #12
 800595a:	2136      	movs	r1, #54	; 0x36
 800595c:	f7fc fda7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005960:	ee18 1a10 	vmov	r1, s16
 8005964:	4638      	mov	r0, r7
        color = newColor;
 8005966:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800596a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800596e:	f00b ff11 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005972:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005976:	ee18 3a10 	vmov	r3, s16
 800597a:	333c      	adds	r3, #60	; 0x3c
 800597c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005980:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005982:	ee18 0a10 	vmov	r0, s16
 8005986:	a90a      	add	r1, sp, #40	; 0x28
 8005988:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800598c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005990:	f00c f99a 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005994:	ee18 1a10 	vmov	r1, s16
 8005998:	4630      	mov	r0, r6
 800599a:	f009 ffe1 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800599e:	ee19 0a10 	vmov	r0, s18
 80059a2:	22f0      	movs	r2, #240	; 0xf0
 80059a4:	2121      	movs	r1, #33	; 0x21
 80059a6:	f7fc fd82 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80059aa:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059ae:	aa0a      	add	r2, sp, #40	; 0x28
 80059b0:	f04f 0802 	mov.w	r8, #2
 80059b4:	a909      	add	r1, sp, #36	; 0x24
 80059b6:	ee19 0a10 	vmov	r0, s18
 80059ba:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059be:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80059c2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059c6:	f00c fb64 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80059ca:	234d      	movs	r3, #77	; 0x4d
 80059cc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80059d0:	3710      	adds	r7, #16
        updateTextPosition();
 80059d2:	ee19 0a10 	vmov	r0, s18
 80059d6:	f7fc fdbf 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059da:	ee19 1a10 	vmov	r1, s18
 80059de:	4630      	mov	r0, r6
        colorPressed = col;
 80059e0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80059e4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80059e8:	f009 ffba 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80059ec:	ee19 0a90 	vmov	r0, s19
 80059f0:	22aa      	movs	r2, #170	; 0xaa
 80059f2:	2121      	movs	r1, #33	; 0x21
 80059f4:	f7fc fd5b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059f8:	aa0a      	add	r2, sp, #40	; 0x28
 80059fa:	a909      	add	r1, sp, #36	; 0x24
 80059fc:	ee19 0a90 	vmov	r0, s19
 8005a00:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a04:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a08:	f00c fb43 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a0c:	234c      	movs	r3, #76	; 0x4c
 8005a0e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005a12:	ee19 0a90 	vmov	r0, s19
 8005a16:	f7fc fd9f 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a1a:	ee19 1a90 	vmov	r1, s19
 8005a1e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a20:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005a24:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005a28:	f009 ff9a 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005a2c:	ee1a 0a10 	vmov	r0, s20
 8005a30:	2264      	movs	r2, #100	; 0x64
 8005a32:	2121      	movs	r1, #33	; 0x21
 8005a34:	f7fc fd3b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a38:	aa0a      	add	r2, sp, #40	; 0x28
 8005a3a:	a909      	add	r1, sp, #36	; 0x24
 8005a3c:	ee1a 0a10 	vmov	r0, s20
 8005a40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a48:	f00c fb23 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a4c:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005a4e:	ee1a 0a10 	vmov	r0, s20
 8005a52:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005a56:	f7fc fd7f 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a5a:	4630      	mov	r0, r6
        colorPressed = col;
 8005a5c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005a60:	ee1a 1a10 	vmov	r1, s20
 8005a64:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005a68:	f009 ff7a 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	b00d      	add	sp, #52	; 0x34
 8005a70:	ecbd 8b06 	vpop	{d8-d10}
 8005a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a78:	20013830 	.word	0x20013830
 8005a7c:	0802a0c6 	.word	0x0802a0c6
 8005a80:	0802a13c 	.word	0x0802a13c

08005a84 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005a84:	4770      	bx	lr

08005a86 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a86:	4770      	bx	lr

08005a88 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a8a:	68c2      	ldr	r2, [r0, #12]
 8005a8c:	6844      	ldr	r4, [r0, #4]
 8005a8e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a90:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005a92:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a96:	07d2      	lsls	r2, r2, #31
 8005a98:	bf48      	it	mi
 8005a9a:	5962      	ldrmi	r2, [r4, r5]
 8005a9c:	689b      	ldr	r3, [r3, #8]
    }
 8005a9e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005aa0:	bf48      	it	mi
 8005aa2:	58d3      	ldrmi	r3, [r2, r3]
 8005aa4:	4718      	bx	r3

08005aa6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005aa6:	6843      	ldr	r3, [r0, #4]
 8005aa8:	b12b      	cbz	r3, 8005ab6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005aaa:	6883      	ldr	r3, [r0, #8]
 8005aac:	b92b      	cbnz	r3, 8005aba <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005aae:	68c0      	ldr	r0, [r0, #12]
 8005ab0:	f000 0001 	and.w	r0, r0, #1
 8005ab4:	4770      	bx	lr
 8005ab6:	4618      	mov	r0, r3
 8005ab8:	4770      	bx	lr
 8005aba:	2001      	movs	r0, #1
    }
 8005abc:	4770      	bx	lr

08005abe <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005abe:	b510      	push	{r4, lr}
 8005ac0:	2110      	movs	r1, #16
 8005ac2:	4604      	mov	r4, r0
 8005ac4:	f021 ff43 	bl	802794e <_ZdlPvj>
 8005ac8:	4620      	mov	r0, r4
 8005aca:	bd10      	pop	{r4, pc}

08005acc <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005acc:	b510      	push	{r4, lr}
 8005ace:	4b03      	ldr	r3, [pc, #12]	; (8005adc <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005ad0:	6003      	str	r3, [r0, #0]
 8005ad2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ad4:	f00d fcda 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ad8:	4620      	mov	r0, r4
 8005ada:	bd10      	pop	{r4, pc}
 8005adc:	0802bb6c 	.word	0x0802bb6c

08005ae0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ae0:	b507      	push	{r0, r1, r2, lr}
 8005ae2:	4b07      	ldr	r3, [pc, #28]	; (8005b00 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ae4:	6003      	str	r3, [r0, #0]
 8005ae6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ae8:	f00d fcd0 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005aec:	9801      	ldr	r0, [sp, #4]
 8005aee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005af2:	f021 ff2c 	bl	802794e <_ZdlPvj>
 8005af6:	9801      	ldr	r0, [sp, #4]
 8005af8:	b003      	add	sp, #12
 8005afa:	f85d fb04 	ldr.w	pc, [sp], #4
 8005afe:	bf00      	nop
 8005b00:	0802bb6c 	.word	0x0802bb6c

08005b04 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b04:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005b06:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005b0a:	4299      	cmp	r1, r3
{
 8005b0c:	4604      	mov	r4, r0
 8005b0e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005b10:	d103      	bne.n	8005b1a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b12:	f00f f9bd 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005b16:	f7fd fdf1 	bl	80036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005b1a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b1e:	429d      	cmp	r5, r3
 8005b20:	d103      	bne.n	8005b2a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b22:	f00f f9b5 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005b26:	f7fd fe59 	bl	80037dc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005b2a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005b2e:	42a5      	cmp	r5, r4
 8005b30:	d105      	bne.n	8005b3e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005b32:	f00f f9ad 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005b36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005b3a:	f7fd be3f 	b.w	80037bc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005b3e:	bd38      	pop	{r3, r4, r5, pc}

08005b40 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b44:	ed2d 8b06 	vpush	{d8-d10}
 8005b48:	4604      	mov	r4, r0
 8005b4a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005b4c:	46a3      	mov	fp, r4
 8005b4e:	2500      	movs	r5, #0
 8005b50:	f010 fe1e 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8005b54:	4b66      	ldr	r3, [pc, #408]	; (8005cf0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005b56:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b58:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005b5c:	2226      	movs	r2, #38	; 0x26
 8005b5e:	4629      	mov	r1, r5
 8005b60:	4658      	mov	r0, fp
 8005b62:	f022 feea 	bl	802893a <memset>
 8005b66:	4658      	mov	r0, fp
 8005b68:	f7fc fcc2 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005b6c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005b70:	26ff      	movs	r6, #255	; 0xff
 8005b72:	4b60      	ldr	r3, [pc, #384]	; (8005cf4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005b74:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b76:	2226      	movs	r2, #38	; 0x26
 8005b78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b7c:	4629      	mov	r1, r5
 8005b7e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b82:	4650      	mov	r0, sl
 8005b84:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b8a:	f022 fed6 	bl	802893a <memset>
 8005b8e:	4650      	mov	r0, sl
 8005b90:	f7fc fcae 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8005b94:	4b58      	ldr	r3, [pc, #352]	; (8005cf8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005b96:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b98:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005b9c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005ba0:	a90a      	add	r1, sp, #40	; 0x28
 8005ba2:	4650      	mov	r0, sl
 8005ba4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005ba8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005bac:	f00c fc67 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005bb0:	4648      	mov	r0, r9
 8005bb2:	f7fc fcaf 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bb6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005bba:	4b50      	ldr	r3, [pc, #320]	; (8005cfc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005bbc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005bc0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005bc4:	4638      	mov	r0, r7
 8005bc6:	f00b fb23 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 8005bca:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bce:	4618      	mov	r0, r3
 8005bd0:	9303      	str	r3, [sp, #12]
 8005bd2:	f7fb fb75 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bd6:	4b4a      	ldr	r3, [pc, #296]	; (8005d00 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005bd8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005bdc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005be0:	3324      	adds	r3, #36	; 0x24
 8005be2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005be6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005bea:	4640      	mov	r0, r8
 8005bec:	f7fc fc92 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bf0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005bf4:	4618      	mov	r0, r3
 8005bf6:	ee08 3a10 	vmov	s16, r3
 8005bfa:	f7fc fc8b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005bfe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005c02:	4618      	mov	r0, r3
 8005c04:	ee08 3a90 	vmov	s17, r3
 8005c08:	f7fc fc84 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8005c0c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c10:	4618      	mov	r0, r3
 8005c12:	ee09 3a10 	vmov	s18, r3
 8005c16:	f00c fd73 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c1a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c1e:	4618      	mov	r0, r3
 8005c20:	ee09 3a90 	vmov	s19, r3
 8005c24:	f00c fd6c 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c28:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c2c:	4618      	mov	r0, r3
 8005c2e:	ee0a 3a10 	vmov	s20, r3
 8005c32:	f00c fd65 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c36:	4a33      	ldr	r2, [pc, #204]	; (8005d04 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005c38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c3c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005c40:	4a31      	ldr	r2, [pc, #196]	; (8005d08 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c46:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005c4a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005c4e:	f00d fc13 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c56:	462a      	mov	r2, r5
 8005c58:	4658      	mov	r0, fp
 8005c5a:	9300      	str	r3, [sp, #0]
 8005c5c:	4629      	mov	r1, r5
 8005c5e:	23f0      	movs	r3, #240	; 0xf0
 8005c60:	f7fc fc32 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c6c:	4659      	mov	r1, fp
 8005c6e:	4630      	mov	r0, r6
 8005c70:	f009 fe76 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c74:	462a      	mov	r2, r5
 8005c76:	4650      	mov	r0, sl
 8005c78:	4629      	mov	r1, r5
 8005c7a:	f7fc fc18 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005c7e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c80:	4650      	mov	r0, sl
 8005c82:	a90a      	add	r1, sp, #40	; 0x28
 8005c84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c88:	f00c fbf9 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c8c:	4651      	mov	r1, sl
 8005c8e:	4630      	mov	r0, r6
 8005c90:	f009 fe66 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005c94:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005c98:	2156      	movs	r1, #86	; 0x56
 8005c9a:	4648      	mov	r0, r9
 8005c9c:	f7fc fc07 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005ca0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005ca4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005ca8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005cac:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005cb0:	4650      	mov	r0, sl
 8005cb2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005cb6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005cba:	4649      	mov	r1, r9
 8005cbc:	4798      	blx	r3
 8005cbe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005cc2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005cc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cca:	4b10      	ldr	r3, [pc, #64]	; (8005d0c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005ccc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005cce:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005cd2:	b92b      	cbnz	r3, 8005ce0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005cd4:	4b0e      	ldr	r3, [pc, #56]	; (8005d10 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005cd6:	4a0f      	ldr	r2, [pc, #60]	; (8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cd8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cda:	480f      	ldr	r0, [pc, #60]	; (8005d18 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005cdc:	f022 fc28 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005ce0:	4b0e      	ldr	r3, [pc, #56]	; (8005d1c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ce2:	881b      	ldrh	r3, [r3, #0]
 8005ce4:	2b16      	cmp	r3, #22
 8005ce6:	d81d      	bhi.n	8005d24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005ce8:	4b0d      	ldr	r3, [pc, #52]	; (8005d20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005cea:	4a0a      	ldr	r2, [pc, #40]	; (8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cec:	2161      	movs	r1, #97	; 0x61
 8005cee:	e7f4      	b.n	8005cda <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005cf0:	0802bb6c 	.word	0x0802bb6c
 8005cf4:	0802ca84 	.word	0x0802ca84
 8005cf8:	0802cc4c 	.word	0x0802cc4c
 8005cfc:	0802a14c 	.word	0x0802a14c
 8005d00:	0802c7b8 	.word	0x0802c7b8
 8005d04:	0802bb54 	.word	0x0802bb54
 8005d08:	08005b05 	.word	0x08005b05
 8005d0c:	20013824 	.word	0x20013824
 8005d10:	08029f8c 	.word	0x08029f8c
 8005d14:	0802a08e 	.word	0x0802a08e
 8005d18:	0802a009 	.word	0x0802a009
 8005d1c:	20013828 	.word	0x20013828
 8005d20:	0802a050 	.word	0x0802a050
        return texts->getText(typedTextId);
 8005d24:	4b93      	ldr	r3, [pc, #588]	; (8005f74 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005d26:	2116      	movs	r1, #22
 8005d28:	6818      	ldr	r0, [r3, #0]
 8005d2a:	f002 f8bb 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8005d2e:	4a92      	ldr	r2, [pc, #584]	; (8005f78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005d30:	4603      	mov	r3, r0
 8005d32:	2104      	movs	r1, #4
 8005d34:	4650      	mov	r0, sl
 8005d36:	f012 fa0f 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005d3a:	4648      	mov	r0, r9
        wc1 = value;
 8005d3c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005d40:	f00b ffa2 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005d44:	4b8d      	ldr	r3, [pc, #564]	; (8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005d46:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005d48:	a90a      	add	r1, sp, #40	; 0x28
 8005d4a:	2317      	movs	r3, #23
 8005d4c:	4648      	mov	r0, r9
 8005d4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d52:	f00b ffb9 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d56:	4649      	mov	r1, r9
 8005d58:	4630      	mov	r0, r6
 8005d5a:	f009 fe01 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005d5e:	230a      	movs	r3, #10
 8005d60:	9300      	str	r3, [sp, #0]
 8005d62:	2232      	movs	r2, #50	; 0x32
 8005d64:	23f0      	movs	r3, #240	; 0xf0
 8005d66:	4629      	mov	r1, r5
 8005d68:	4638      	mov	r0, r7
 8005d6a:	f7fc fbad 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d6e:	9b03      	ldr	r3, [sp, #12]
 8005d70:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d74:	22a0      	movs	r2, #160	; 0xa0
 8005d76:	4611      	mov	r1, r2
 8005d78:	4638      	mov	r0, r7
 8005d7a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005d7e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005d82:	f00b fb5b 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d86:	22a0      	movs	r2, #160	; 0xa0
 8005d88:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005d8c:	4638      	mov	r0, r7
 8005d8e:	f00b fb60 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005d92:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005d96:	2b20      	cmp	r3, #32
 8005d98:	d005      	beq.n	8005da6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005d9a:	2320      	movs	r3, #32
 8005d9c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005da0:	4638      	mov	r0, r7
 8005da2:	f00b fa55 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005da6:	4638      	mov	r0, r7
 8005da8:	2101      	movs	r1, #1
 8005daa:	f00b fb5d 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005dae:	4639      	mov	r1, r7
 8005db0:	4630      	mov	r0, r6
 8005db2:	ad04      	add	r5, sp, #16
        color = newColor;
 8005db4:	f04f 37ff 	mov.w	r7, #4294967295
 8005db8:	f009 fdd2 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005dbc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005dc0:	2223      	movs	r2, #35	; 0x23
 8005dc2:	4640      	mov	r0, r8
 8005dc4:	2145      	movs	r1, #69	; 0x45
 8005dc6:	f7fc fb72 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005dca:	4641      	mov	r1, r8
 8005dcc:	4628      	mov	r0, r5
        color = newColor;
 8005dce:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005dd2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005dd6:	f00b fcdd 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005dde:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005de6:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8005dea:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005dee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005df2:	a90a      	add	r1, sp, #40	; 0x28
 8005df4:	4640      	mov	r0, r8
 8005df6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005dfa:	f00b ff65 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005dfe:	4641      	mov	r1, r8
 8005e00:	4630      	mov	r0, r6
 8005e02:	f009 fdad 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e06:	ee18 0a10 	vmov	r0, s16
 8005e0a:	220c      	movs	r2, #12
 8005e0c:	2136      	movs	r1, #54	; 0x36
 8005e0e:	f7fc fb4e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005e12:	ee18 1a10 	vmov	r1, s16
 8005e16:	4628      	mov	r0, r5
        color = newColor;
 8005e18:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005e1c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e20:	f00b fcb8 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e28:	ee18 3a10 	vmov	r3, s16
 8005e2c:	445b      	add	r3, fp
 8005e2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e32:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005e34:	ee18 0a10 	vmov	r0, s16
 8005e38:	a90a      	add	r1, sp, #40	; 0x28
 8005e3a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e3e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e42:	f00b ff41 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e46:	ee18 1a10 	vmov	r1, s16
 8005e4a:	4630      	mov	r0, r6
 8005e4c:	f009 fd88 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005e50:	465a      	mov	r2, fp
 8005e52:	ee18 0a90 	vmov	r0, s17
 8005e56:	2121      	movs	r1, #33	; 0x21
 8005e58:	f7fc fb29 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005e5c:	ee18 1a90 	vmov	r1, s17
 8005e60:	4628      	mov	r0, r5
        color = newColor;
 8005e62:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005e66:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005e6a:	f00b fc93 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e6e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e72:	ee18 3a90 	vmov	r3, s17
 8005e76:	445b      	add	r3, fp
 8005e78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e7c:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005e7e:	ee18 0a90 	vmov	r0, s17
 8005e82:	a90a      	add	r1, sp, #40	; 0x28
 8005e84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e88:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e8c:	f00b ff1c 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e90:	ee18 1a90 	vmov	r1, s17
 8005e94:	4630      	mov	r0, r6
 8005e96:	f009 fd63 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005e9a:	ee19 0a10 	vmov	r0, s18
 8005e9e:	22f0      	movs	r2, #240	; 0xf0
 8005ea0:	2121      	movs	r1, #33	; 0x21
 8005ea2:	f7fc fb04 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8005ea6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005eaa:	aa0a      	add	r2, sp, #40	; 0x28
 8005eac:	f04f 0802 	mov.w	r8, #2
 8005eb0:	a909      	add	r1, sp, #36	; 0x24
 8005eb2:	ee19 0a10 	vmov	r0, s18
 8005eb6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005eba:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005ebe:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ec2:	f00c f8e6 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005ec6:	233a      	movs	r3, #58	; 0x3a
 8005ec8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005ecc:	3510      	adds	r5, #16
        updateTextPosition();
 8005ece:	ee19 0a10 	vmov	r0, s18
 8005ed2:	f7fc fb41 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ed6:	ee19 1a10 	vmov	r1, s18
 8005eda:	4630      	mov	r0, r6
        colorPressed = col;
 8005edc:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005ee0:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005ee4:	f009 fd3c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ee8:	ee19 0a90 	vmov	r0, s19
 8005eec:	22aa      	movs	r2, #170	; 0xaa
 8005eee:	2121      	movs	r1, #33	; 0x21
 8005ef0:	f7fc fadd 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ef4:	aa0a      	add	r2, sp, #40	; 0x28
 8005ef6:	a909      	add	r1, sp, #36	; 0x24
 8005ef8:	ee19 0a90 	vmov	r0, s19
 8005efc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f00:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f04:	f00c f8c5 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f08:	2339      	movs	r3, #57	; 0x39
 8005f0a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f0e:	ee19 0a90 	vmov	r0, s19
 8005f12:	f7fc fb21 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f16:	ee19 1a90 	vmov	r1, s19
 8005f1a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f1c:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005f20:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005f24:	f009 fd1c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f28:	ee1a 0a10 	vmov	r0, s20
 8005f2c:	2264      	movs	r2, #100	; 0x64
 8005f2e:	2121      	movs	r1, #33	; 0x21
 8005f30:	f7fc fabd 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f34:	aa0a      	add	r2, sp, #40	; 0x28
 8005f36:	a909      	add	r1, sp, #36	; 0x24
 8005f38:	ee1a 0a10 	vmov	r0, s20
 8005f3c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f40:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f44:	f00c f8a5 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f48:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8005f4a:	ee1a 0a10 	vmov	r0, s20
 8005f4e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005f52:	f7fc fb01 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f56:	4630      	mov	r0, r6
        colorPressed = col;
 8005f58:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005f5c:	ee1a 1a10 	vmov	r1, s20
 8005f60:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005f64:	f009 fcfc 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f68:	4620      	mov	r0, r4
 8005f6a:	b00d      	add	sp, #52	; 0x34
 8005f6c:	ecbd 8b06 	vpop	{d8-d10}
 8005f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f74:	20013830 	.word	0x20013830
 8005f78:	0802a0c6 	.word	0x0802a0c6
 8005f7c:	0802a13c 	.word	0x0802a13c

08005f80 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005f80:	4770      	bx	lr

08005f82 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005f82:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f84:	68c2      	ldr	r2, [r0, #12]
 8005f86:	6844      	ldr	r4, [r0, #4]
 8005f88:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005f8a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005f8c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005f90:	07d2      	lsls	r2, r2, #31
 8005f92:	bf48      	it	mi
 8005f94:	5962      	ldrmi	r2, [r4, r5]
 8005f96:	689b      	ldr	r3, [r3, #8]
    }
 8005f98:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f9a:	bf48      	it	mi
 8005f9c:	58d3      	ldrmi	r3, [r2, r3]
 8005f9e:	4718      	bx	r3

08005fa0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005fa0:	6843      	ldr	r3, [r0, #4]
 8005fa2:	b12b      	cbz	r3, 8005fb0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005fa4:	6883      	ldr	r3, [r0, #8]
 8005fa6:	b92b      	cbnz	r3, 8005fb4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005fa8:	68c0      	ldr	r0, [r0, #12]
 8005faa:	f000 0001 	and.w	r0, r0, #1
 8005fae:	4770      	bx	lr
 8005fb0:	4618      	mov	r0, r3
 8005fb2:	4770      	bx	lr
 8005fb4:	2001      	movs	r0, #1
    }
 8005fb6:	4770      	bx	lr

08005fb8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005fb8:	b510      	push	{r4, lr}
 8005fba:	2110      	movs	r1, #16
 8005fbc:	4604      	mov	r4, r0
 8005fbe:	f021 fcc6 	bl	802794e <_ZdlPvj>
 8005fc2:	4620      	mov	r0, r4
 8005fc4:	bd10      	pop	{r4, pc}

08005fc6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005fc6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005fca:	f002 b8b3 	b.w	8008134 <_ZN17Gauge_with_Values10initializeEv>

08005fce <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005fce:	3098      	adds	r0, #152	; 0x98
 8005fd0:	4288      	cmp	r0, r1
{
 8005fd2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005fd4:	d105      	bne.n	8005fe2 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005fd6:	f00e ff5b 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005fda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8005fde:	f7fd bbdd 	b.w	800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005fe2:	bd08      	pop	{r3, pc}

08005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005fe4:	b510      	push	{r4, lr}
 8005fe6:	4b07      	ldr	r3, [pc, #28]	; (8006004 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005fe8:	6003      	str	r3, [r0, #0]
 8005fea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fec:	f00d fa4e 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005ff0:	4b05      	ldr	r3, [pc, #20]	; (8006008 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005ff2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005ff6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005ffa:	f7fe fe25 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005ffe:	4620      	mov	r0, r4
 8006000:	bd10      	pop	{r4, pc}
 8006002:	bf00      	nop
 8006004:	0802bbb8 	.word	0x0802bbb8
 8006008:	0802c110 	.word	0x0802c110

0800600c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800600c:	b510      	push	{r4, lr}
 800600e:	4604      	mov	r4, r0
}
 8006010:	f7ff ffe8 	bl	8005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8006014:	4620      	mov	r0, r4
 8006016:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800601a:	f021 fc98 	bl	802794e <_ZdlPvj>
 800601e:	4620      	mov	r0, r4
 8006020:	bd10      	pop	{r4, pc}
	...

08006024 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006028:	ed2d 8b04 	vpush	{d8-d9}
 800602c:	4604      	mov	r4, r0
 800602e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006030:	46a1      	mov	r9, r4
 8006032:	2500      	movs	r5, #0
 8006034:	f010 fbac 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8006038:	4bac      	ldr	r3, [pc, #688]	; (80062ec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 800603a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800603c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006040:	2226      	movs	r2, #38	; 0x26
 8006042:	4629      	mov	r1, r5
 8006044:	4648      	mov	r0, r9
 8006046:	f022 fc78 	bl	802893a <memset>
 800604a:	4648      	mov	r0, r9
 800604c:	f7fc fa50 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006050:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006054:	26ff      	movs	r6, #255	; 0xff
 8006056:	4ba6      	ldr	r3, [pc, #664]	; (80062f0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006058:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800605a:	2226      	movs	r2, #38	; 0x26
 800605c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006060:	4629      	mov	r1, r5
 8006062:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006066:	4640      	mov	r0, r8
 8006068:	66a5      	str	r5, [r4, #104]	; 0x68
 800606a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800606e:	f022 fc64 	bl	802893a <memset>
 8006072:	4640      	mov	r0, r8
 8006074:	f7fc fa3c 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006078:	4b9e      	ldr	r3, [pc, #632]	; (80062f4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800607a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800607c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006080:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006084:	a90a      	add	r1, sp, #40	; 0x28
 8006086:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006088:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800608c:	f00c f9f7 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006090:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006094:	4618      	mov	r0, r3
 8006096:	ee08 3a10 	vmov	s16, r3
 800609a:	f00c fb31 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800609e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80060a2:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80060a6:	4618      	mov	r0, r3
 80060a8:	ee08 3a90 	vmov	s17, r3
 80060ac:	f7fc fa32 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060b0:	4638      	mov	r0, r7
 80060b2:	f00b f8ad 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 80060b6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80060ba:	4618      	mov	r0, r3
 80060bc:	9303      	str	r3, [sp, #12]
 80060be:	f7fb f8ff 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80060c2:	4b8d      	ldr	r3, [pc, #564]	; (80062f8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80060c4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80060c8:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80060cc:	3324      	adds	r3, #36	; 0x24
 80060ce:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80060d2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80060d6:	4658      	mov	r0, fp
 80060d8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80060dc:	f7fc fa1a 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060e0:	4650      	mov	r0, sl
 80060e2:	f7fc fa17 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80060e6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80060ea:	4618      	mov	r0, r3
 80060ec:	ee09 3a10 	vmov	s18, r3
 80060f0:	f002 f816 	bl	8008120 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80060f4:	4a81      	ldr	r2, [pc, #516]	; (80062fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80060f6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80060fa:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80060fe:	4a80      	ldr	r2, [pc, #512]	; (8006300 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006100:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006104:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006108:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800610c:	f00d f9b4 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006110:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006114:	462a      	mov	r2, r5
 8006116:	4648      	mov	r0, r9
 8006118:	9300      	str	r3, [sp, #0]
 800611a:	4629      	mov	r1, r5
 800611c:	23f0      	movs	r3, #240	; 0xf0
 800611e:	f7fc f9d3 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006122:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006124:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006128:	66a3      	str	r3, [r4, #104]	; 0x68
 800612a:	4649      	mov	r1, r9
 800612c:	4630      	mov	r0, r6
 800612e:	f009 fc17 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006132:	462a      	mov	r2, r5
 8006134:	4640      	mov	r0, r8
 8006136:	4629      	mov	r1, r5
 8006138:	f7fc f9b9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800613c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800613e:	4640      	mov	r0, r8
 8006140:	a90a      	add	r1, sp, #40	; 0x28
 8006142:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006146:	f00c f99a 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800614a:	4641      	mov	r1, r8
 800614c:	4630      	mov	r0, r6
 800614e:	f009 fc07 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006152:	ee18 0a10 	vmov	r0, s16
 8006156:	f240 1201 	movw	r2, #257	; 0x101
 800615a:	2121      	movs	r1, #33	; 0x21
 800615c:	f7fc f9a7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006160:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006162:	aa0a      	add	r2, sp, #40	; 0x28
 8006164:	a909      	add	r1, sp, #36	; 0x24
 8006166:	ee18 0a10 	vmov	r0, s16
 800616a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800616e:	2302      	movs	r3, #2
 8006170:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006174:	f00b ff8d 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006178:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 800617a:	ee18 0a10 	vmov	r0, s16
 800617e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006182:	f7fc f9e9 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006186:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800618a:	3314      	adds	r3, #20
        color = col;
 800618c:	f04f 39ff 	mov.w	r9, #4294967295
 8006190:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006194:	ee18 1a10 	vmov	r1, s16
 8006198:	4630      	mov	r0, r6
        colorPressed = col;
 800619a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800619e:	f009 fbdf 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061a2:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80061a6:	223c      	movs	r2, #60	; 0x3c
 80061a8:	ee18 0a90 	vmov	r0, s17
 80061ac:	2117      	movs	r1, #23
 80061ae:	f7fc f97e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80061b2:	ee18 1a90 	vmov	r1, s17
 80061b6:	4640      	mov	r0, r8
        color = newColor;
 80061b8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80061bc:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80061c0:	f00b fae8 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061c4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80061c8:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80061cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80061d0:	4b4c      	ldr	r3, [pc, #304]	; (8006304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80061d2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80061d4:	ee18 0a90 	vmov	r0, s17
 80061d8:	2322      	movs	r3, #34	; 0x22
 80061da:	a90a      	add	r1, sp, #40	; 0x28
 80061dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061e0:	f00b fd72 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061e4:	ee18 1a90 	vmov	r1, s17
 80061e8:	4630      	mov	r0, r6
 80061ea:	f009 fbb9 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80061ee:	230a      	movs	r3, #10
 80061f0:	9300      	str	r3, [sp, #0]
 80061f2:	2232      	movs	r2, #50	; 0x32
 80061f4:	23f0      	movs	r3, #240	; 0xf0
 80061f6:	4629      	mov	r1, r5
 80061f8:	4638      	mov	r0, r7
 80061fa:	f7fc f965 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061fe:	9b03      	ldr	r3, [sp, #12]
 8006200:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006204:	22a0      	movs	r2, #160	; 0xa0
 8006206:	4611      	mov	r1, r2
 8006208:	4638      	mov	r0, r7
 800620a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800620e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006212:	f00b f913 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006216:	22a0      	movs	r2, #160	; 0xa0
 8006218:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800621c:	4638      	mov	r0, r7
 800621e:	f00b f918 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006222:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006226:	2b20      	cmp	r3, #32
 8006228:	d005      	beq.n	8006236 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800622a:	2320      	movs	r3, #32
 800622c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006230:	4638      	mov	r0, r7
 8006232:	f00b f80d 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006236:	4638      	mov	r0, r7
 8006238:	2101      	movs	r1, #1
 800623a:	f00b f915 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800623e:	4639      	mov	r1, r7
 8006240:	4630      	mov	r0, r6
 8006242:	f009 fb8d 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006246:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006248:	2223      	movs	r2, #35	; 0x23
 800624a:	4658      	mov	r0, fp
        color = newColor;
 800624c:	f04f 39ff 	mov.w	r9, #4294967295
 8006250:	2145      	movs	r1, #69	; 0x45
 8006252:	f7fc f92c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006256:	4659      	mov	r1, fp
 8006258:	4640      	mov	r0, r8
        color = newColor;
 800625a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800625e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006262:	f00b fa97 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006266:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800626a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800626e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006272:	4f24      	ldr	r7, [pc, #144]	; (8006304 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006274:	970a      	str	r7, [sp, #40]	; 0x28
 8006276:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006278:	a90a      	add	r1, sp, #40	; 0x28
 800627a:	4658      	mov	r0, fp
 800627c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006280:	f00b fd22 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006284:	4659      	mov	r1, fp
 8006286:	4630      	mov	r0, r6
 8006288:	f009 fb6a 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800628c:	220c      	movs	r2, #12
 800628e:	4650      	mov	r0, sl
 8006290:	2136      	movs	r1, #54	; 0x36
 8006292:	f7fc f90c 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006296:	4651      	mov	r1, sl
 8006298:	4640      	mov	r0, r8
        color = newColor;
 800629a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800629e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80062a2:	f00b fa77 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062a6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80062aa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80062ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062b2:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80062b4:	a90a      	add	r1, sp, #40	; 0x28
 80062b6:	4650      	mov	r0, sl
 80062b8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062bc:	970a      	str	r7, [sp, #40]	; 0x28
 80062be:	f00b fd03 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062c2:	4651      	mov	r1, sl
 80062c4:	4630      	mov	r0, r6
 80062c6:	f009 fb4b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80062ca:	ee19 0a10 	vmov	r0, s18
 80062ce:	224e      	movs	r2, #78	; 0x4e
 80062d0:	4629      	mov	r1, r5
 80062d2:	f7fc f8ec 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80062d6:	4630      	mov	r0, r6
 80062d8:	ee19 1a10 	vmov	r1, s18
 80062dc:	f009 fb40 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062e0:	4620      	mov	r0, r4
 80062e2:	b00d      	add	sp, #52	; 0x34
 80062e4:	ecbd 8b04 	vpop	{d8-d9}
 80062e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062ec:	0802bbb8 	.word	0x0802bbb8
 80062f0:	0802ca84 	.word	0x0802ca84
 80062f4:	0802cc4c 	.word	0x0802cc4c
 80062f8:	0802c7b8 	.word	0x0802c7b8
 80062fc:	0802bba0 	.word	0x0802bba0
 8006300:	08005fcf 	.word	0x08005fcf
 8006304:	0802a13c 	.word	0x0802a13c

08006308 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006308:	4770      	bx	lr

0800630a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800630a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800630c:	68c2      	ldr	r2, [r0, #12]
 800630e:	6844      	ldr	r4, [r0, #4]
 8006310:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006312:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006314:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006318:	07d2      	lsls	r2, r2, #31
 800631a:	bf48      	it	mi
 800631c:	5962      	ldrmi	r2, [r4, r5]
 800631e:	689b      	ldr	r3, [r3, #8]
    }
 8006320:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006322:	bf48      	it	mi
 8006324:	58d3      	ldrmi	r3, [r2, r3]
 8006326:	4718      	bx	r3

08006328 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006328:	6843      	ldr	r3, [r0, #4]
 800632a:	b12b      	cbz	r3, 8006338 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800632c:	6883      	ldr	r3, [r0, #8]
 800632e:	b92b      	cbnz	r3, 800633c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006330:	68c0      	ldr	r0, [r0, #12]
 8006332:	f000 0001 	and.w	r0, r0, #1
 8006336:	4770      	bx	lr
 8006338:	4618      	mov	r0, r3
 800633a:	4770      	bx	lr
 800633c:	2001      	movs	r0, #1
    }
 800633e:	4770      	bx	lr

08006340 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006340:	b510      	push	{r4, lr}
 8006342:	2110      	movs	r1, #16
 8006344:	4604      	mov	r4, r0
 8006346:	f021 fb02 	bl	802794e <_ZdlPvj>
 800634a:	4620      	mov	r0, r4
 800634c:	bd10      	pop	{r4, pc}

0800634e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800634e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006352:	f001 beef 	b.w	8008134 <_ZN17Gauge_with_Values10initializeEv>

08006356 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006356:	3098      	adds	r0, #152	; 0x98
 8006358:	4288      	cmp	r0, r1
{
 800635a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800635c:	d105      	bne.n	800636a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800635e:	f00e fd97 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006362:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006366:	f7fd ba19 	b.w	800379c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800636a:	bd08      	pop	{r3, pc}

0800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800636c:	b510      	push	{r4, lr}
 800636e:	4b07      	ldr	r3, [pc, #28]	; (800638c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006370:	6003      	str	r3, [r0, #0]
 8006372:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006374:	f00d f88a 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006378:	4b05      	ldr	r3, [pc, #20]	; (8006390 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800637a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800637e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006382:	f7fe fc61 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006386:	4620      	mov	r0, r4
 8006388:	bd10      	pop	{r4, pc}
 800638a:	bf00      	nop
 800638c:	0802bc04 	.word	0x0802bc04
 8006390:	0802c110 	.word	0x0802c110

08006394 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006394:	b510      	push	{r4, lr}
 8006396:	4604      	mov	r4, r0
}
 8006398:	f7ff ffe8 	bl	800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800639c:	4620      	mov	r0, r4
 800639e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80063a2:	f021 fad4 	bl	802794e <_ZdlPvj>
 80063a6:	4620      	mov	r0, r4
 80063a8:	bd10      	pop	{r4, pc}
	...

080063ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80063ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063b0:	ed2d 8b04 	vpush	{d8-d9}
 80063b4:	4604      	mov	r4, r0
 80063b6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80063b8:	46a1      	mov	r9, r4
 80063ba:	2500      	movs	r5, #0
 80063bc:	f010 f9e8 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 80063c0:	4bac      	ldr	r3, [pc, #688]	; (8006674 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80063c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063c4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80063c8:	2226      	movs	r2, #38	; 0x26
 80063ca:	4629      	mov	r1, r5
 80063cc:	4648      	mov	r0, r9
 80063ce:	f022 fab4 	bl	802893a <memset>
 80063d2:	4648      	mov	r0, r9
 80063d4:	f7fc f88c 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80063d8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80063dc:	26ff      	movs	r6, #255	; 0xff
 80063de:	4ba6      	ldr	r3, [pc, #664]	; (8006678 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80063e0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063e2:	2226      	movs	r2, #38	; 0x26
 80063e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063e8:	4629      	mov	r1, r5
 80063ea:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063ee:	4640      	mov	r0, r8
 80063f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80063f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063f6:	f022 faa0 	bl	802893a <memset>
 80063fa:	4640      	mov	r0, r8
 80063fc:	f7fc f878 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006400:	4b9e      	ldr	r3, [pc, #632]	; (800667c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8006402:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006404:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006408:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800640c:	a90a      	add	r1, sp, #40	; 0x28
 800640e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006410:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006414:	f00c f833 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006418:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800641c:	4618      	mov	r0, r3
 800641e:	ee08 3a10 	vmov	s16, r3
 8006422:	f00c f96d 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006426:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800642a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800642e:	4618      	mov	r0, r3
 8006430:	ee08 3a90 	vmov	s17, r3
 8006434:	f7fc f86e 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006438:	4638      	mov	r0, r7
 800643a:	f00a fee9 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 800643e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006442:	4618      	mov	r0, r3
 8006444:	9303      	str	r3, [sp, #12]
 8006446:	f7fa ff3b 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800644a:	4b8d      	ldr	r3, [pc, #564]	; (8006680 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 800644c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006450:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006454:	3324      	adds	r3, #36	; 0x24
 8006456:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800645a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800645e:	4658      	mov	r0, fp
 8006460:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006464:	f7fc f856 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006468:	4650      	mov	r0, sl
 800646a:	f7fc f853 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800646e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006472:	4618      	mov	r0, r3
 8006474:	ee09 3a10 	vmov	s18, r3
 8006478:	f001 fe52 	bl	8008120 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800647c:	4a81      	ldr	r2, [pc, #516]	; (8006684 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800647e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006482:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006486:	4a80      	ldr	r2, [pc, #512]	; (8006688 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006488:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800648c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006490:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006494:	f00c fff0 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006498:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800649c:	462a      	mov	r2, r5
 800649e:	4648      	mov	r0, r9
 80064a0:	9300      	str	r3, [sp, #0]
 80064a2:	4629      	mov	r1, r5
 80064a4:	23f0      	movs	r3, #240	; 0xf0
 80064a6:	f7fc f80f 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064aa:	1d26      	adds	r6, r4, #4
        color = newColor;
 80064ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80064b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80064b2:	4649      	mov	r1, r9
 80064b4:	4630      	mov	r0, r6
 80064b6:	f009 fa53 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80064ba:	462a      	mov	r2, r5
 80064bc:	4640      	mov	r0, r8
 80064be:	4629      	mov	r1, r5
 80064c0:	f7fb fff5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80064c4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80064c6:	4640      	mov	r0, r8
 80064c8:	a90a      	add	r1, sp, #40	; 0x28
 80064ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064ce:	f00b ffd6 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064d2:	4641      	mov	r1, r8
 80064d4:	4630      	mov	r0, r6
 80064d6:	f009 fa43 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80064da:	ee18 0a10 	vmov	r0, s16
 80064de:	f240 1201 	movw	r2, #257	; 0x101
 80064e2:	2121      	movs	r1, #33	; 0x21
 80064e4:	f7fb ffe3 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80064e8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ea:	aa0a      	add	r2, sp, #40	; 0x28
 80064ec:	a909      	add	r1, sp, #36	; 0x24
 80064ee:	ee18 0a10 	vmov	r0, s16
 80064f2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064f6:	2302      	movs	r3, #2
 80064f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064fc:	f00b fdc9 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006500:	231d      	movs	r3, #29
        updateTextPosition();
 8006502:	ee18 0a10 	vmov	r0, s16
 8006506:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800650a:	f7fc f825 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800650e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006512:	3314      	adds	r3, #20
        color = col;
 8006514:	f04f 39ff 	mov.w	r9, #4294967295
 8006518:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800651c:	ee18 1a10 	vmov	r1, s16
 8006520:	4630      	mov	r0, r6
        colorPressed = col;
 8006522:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006526:	f009 fa1b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800652a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800652e:	223c      	movs	r2, #60	; 0x3c
 8006530:	ee18 0a90 	vmov	r0, s17
 8006534:	2117      	movs	r1, #23
 8006536:	f7fb ffba 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800653a:	ee18 1a90 	vmov	r1, s17
 800653e:	4640      	mov	r0, r8
        color = newColor;
 8006540:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006544:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006548:	f00b f924 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800654c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006550:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006554:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006558:	4b4c      	ldr	r3, [pc, #304]	; (800668c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800655a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800655c:	ee18 0a90 	vmov	r0, s17
 8006560:	231e      	movs	r3, #30
 8006562:	a90a      	add	r1, sp, #40	; 0x28
 8006564:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006568:	f00b fbae 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800656c:	ee18 1a90 	vmov	r1, s17
 8006570:	4630      	mov	r0, r6
 8006572:	f009 f9f5 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006576:	230a      	movs	r3, #10
 8006578:	9300      	str	r3, [sp, #0]
 800657a:	2232      	movs	r2, #50	; 0x32
 800657c:	23f0      	movs	r3, #240	; 0xf0
 800657e:	4629      	mov	r1, r5
 8006580:	4638      	mov	r0, r7
 8006582:	f7fb ffa1 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006586:	9b03      	ldr	r3, [sp, #12]
 8006588:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800658c:	22a0      	movs	r2, #160	; 0xa0
 800658e:	4611      	mov	r1, r2
 8006590:	4638      	mov	r0, r7
 8006592:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006596:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800659a:	f00a ff4f 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800659e:	22a0      	movs	r2, #160	; 0xa0
 80065a0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065a4:	4638      	mov	r0, r7
 80065a6:	f00a ff54 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065aa:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80065ae:	2b20      	cmp	r3, #32
 80065b0:	d005      	beq.n	80065be <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80065b2:	2320      	movs	r3, #32
 80065b4:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80065b8:	4638      	mov	r0, r7
 80065ba:	f00a fe49 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065be:	4638      	mov	r0, r7
 80065c0:	2101      	movs	r1, #1
 80065c2:	f00a ff51 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065c6:	4639      	mov	r1, r7
 80065c8:	4630      	mov	r0, r6
 80065ca:	f009 f9c9 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80065ce:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80065d0:	2223      	movs	r2, #35	; 0x23
 80065d2:	4658      	mov	r0, fp
        color = newColor;
 80065d4:	f04f 39ff 	mov.w	r9, #4294967295
 80065d8:	2145      	movs	r1, #69	; 0x45
 80065da:	f7fb ff68 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065de:	4659      	mov	r1, fp
 80065e0:	4640      	mov	r0, r8
        color = newColor;
 80065e2:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80065e6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80065ea:	f00b f8d3 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065f2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80065f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065fa:	4f24      	ldr	r7, [pc, #144]	; (800668c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80065fc:	970a      	str	r7, [sp, #40]	; 0x28
 80065fe:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006600:	a90a      	add	r1, sp, #40	; 0x28
 8006602:	4658      	mov	r0, fp
 8006604:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006608:	f00b fb5e 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800660c:	4659      	mov	r1, fp
 800660e:	4630      	mov	r0, r6
 8006610:	f009 f9a6 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006614:	220c      	movs	r2, #12
 8006616:	4650      	mov	r0, sl
 8006618:	2136      	movs	r1, #54	; 0x36
 800661a:	f7fb ff48 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800661e:	4651      	mov	r1, sl
 8006620:	4640      	mov	r0, r8
        color = newColor;
 8006622:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006626:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800662a:	f00b f8b3 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800662e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006632:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006636:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800663a:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800663c:	a90a      	add	r1, sp, #40	; 0x28
 800663e:	4650      	mov	r0, sl
 8006640:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006644:	970a      	str	r7, [sp, #40]	; 0x28
 8006646:	f00b fb3f 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800664a:	4651      	mov	r1, sl
 800664c:	4630      	mov	r0, r6
 800664e:	f009 f987 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006652:	ee19 0a10 	vmov	r0, s18
 8006656:	224e      	movs	r2, #78	; 0x4e
 8006658:	4629      	mov	r1, r5
 800665a:	f7fb ff28 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800665e:	4630      	mov	r0, r6
 8006660:	ee19 1a10 	vmov	r1, s18
 8006664:	f009 f97c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006668:	4620      	mov	r0, r4
 800666a:	b00d      	add	sp, #52	; 0x34
 800666c:	ecbd 8b04 	vpop	{d8-d9}
 8006670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006674:	0802bc04 	.word	0x0802bc04
 8006678:	0802ca84 	.word	0x0802ca84
 800667c:	0802cc4c 	.word	0x0802cc4c
 8006680:	0802c7b8 	.word	0x0802c7b8
 8006684:	0802bbec 	.word	0x0802bbec
 8006688:	08006357 	.word	0x08006357
 800668c:	0802a13c 	.word	0x0802a13c

08006690 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006690:	4770      	bx	lr

08006692 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006692:	4770      	bx	lr

08006694 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006694:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006696:	68c2      	ldr	r2, [r0, #12]
 8006698:	6844      	ldr	r4, [r0, #4]
 800669a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800669c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800669e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066a2:	07d2      	lsls	r2, r2, #31
 80066a4:	bf48      	it	mi
 80066a6:	5962      	ldrmi	r2, [r4, r5]
 80066a8:	689b      	ldr	r3, [r3, #8]
    }
 80066aa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066ac:	bf48      	it	mi
 80066ae:	58d3      	ldrmi	r3, [r2, r3]
 80066b0:	4718      	bx	r3

080066b2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066b2:	6843      	ldr	r3, [r0, #4]
 80066b4:	b12b      	cbz	r3, 80066c2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066b6:	6883      	ldr	r3, [r0, #8]
 80066b8:	b92b      	cbnz	r3, 80066c6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066ba:	68c0      	ldr	r0, [r0, #12]
 80066bc:	f000 0001 	and.w	r0, r0, #1
 80066c0:	4770      	bx	lr
 80066c2:	4618      	mov	r0, r3
 80066c4:	4770      	bx	lr
 80066c6:	2001      	movs	r0, #1
    }
 80066c8:	4770      	bx	lr

080066ca <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ca:	b510      	push	{r4, lr}
 80066cc:	2110      	movs	r1, #16
 80066ce:	4604      	mov	r4, r0
 80066d0:	f021 f93d 	bl	802794e <_ZdlPvj>
 80066d4:	4620      	mov	r0, r4
 80066d6:	bd10      	pop	{r4, pc}

080066d8 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066d8:	b510      	push	{r4, lr}
 80066da:	4b03      	ldr	r3, [pc, #12]	; (80066e8 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80066dc:	6003      	str	r3, [r0, #0]
 80066de:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066e0:	f00c fed4 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066e4:	4620      	mov	r0, r4
 80066e6:	bd10      	pop	{r4, pc}
 80066e8:	0802bc50 	.word	0x0802bc50

080066ec <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066ec:	b507      	push	{r0, r1, r2, lr}
 80066ee:	4b07      	ldr	r3, [pc, #28]	; (800670c <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80066f0:	6003      	str	r3, [r0, #0]
 80066f2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066f4:	f00c feca 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066f8:	9801      	ldr	r0, [sp, #4]
 80066fa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066fe:	f021 f926 	bl	802794e <_ZdlPvj>
 8006702:	9801      	ldr	r0, [sp, #4]
 8006704:	b003      	add	sp, #12
 8006706:	f85d fb04 	ldr.w	pc, [sp], #4
 800670a:	bf00      	nop
 800670c:	0802bc50 	.word	0x0802bc50

08006710 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006710:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006712:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006716:	4299      	cmp	r1, r3
{
 8006718:	4604      	mov	r4, r0
 800671a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800671c:	d103      	bne.n	8006726 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800671e:	f00e fbb7 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006722:	f7fc ffeb 	bl	80036fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006726:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800672a:	429d      	cmp	r5, r3
 800672c:	d103      	bne.n	8006736 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800672e:	f00e fbaf 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006732:	f7fd f803 	bl	800373c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006736:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800673a:	42a5      	cmp	r5, r4
 800673c:	d105      	bne.n	800674a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800673e:	f00e fba7 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006742:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006746:	f7fd b809 	b.w	800375c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800674a:	bd38      	pop	{r3, r4, r5, pc}

0800674c <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 800674c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006750:	ed2d 8b06 	vpush	{d8-d10}
 8006754:	4604      	mov	r4, r0
 8006756:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006758:	46a3      	mov	fp, r4
 800675a:	2500      	movs	r5, #0
 800675c:	f010 f818 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8006760:	4b66      	ldr	r3, [pc, #408]	; (80068fc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006762:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006764:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006768:	2226      	movs	r2, #38	; 0x26
 800676a:	4629      	mov	r1, r5
 800676c:	4658      	mov	r0, fp
 800676e:	f022 f8e4 	bl	802893a <memset>
 8006772:	4658      	mov	r0, fp
 8006774:	f7fb febc 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006778:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800677c:	26ff      	movs	r6, #255	; 0xff
 800677e:	4b60      	ldr	r3, [pc, #384]	; (8006900 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006780:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006782:	2226      	movs	r2, #38	; 0x26
 8006784:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006788:	4629      	mov	r1, r5
 800678a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800678e:	4650      	mov	r0, sl
 8006790:	66a5      	str	r5, [r4, #104]	; 0x68
 8006792:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006796:	f022 f8d0 	bl	802893a <memset>
 800679a:	4650      	mov	r0, sl
 800679c:	f7fb fea8 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80067a0:	4b58      	ldr	r3, [pc, #352]	; (8006904 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80067a2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067a4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067ac:	a90a      	add	r1, sp, #40	; 0x28
 80067ae:	4650      	mov	r0, sl
 80067b0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80067b4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067b8:	f00b fe61 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80067bc:	4648      	mov	r0, r9
 80067be:	f7fb fea9 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80067c2:	4b51      	ldr	r3, [pc, #324]	; (8006908 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80067c4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80067c8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80067cc:	4618      	mov	r0, r3
 80067ce:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80067d2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80067d6:	ee08 3a90 	vmov	s17, r3
 80067da:	f7fb fe9b 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80067de:	4638      	mov	r0, r7
 80067e0:	f00a fd16 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 80067e4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067e8:	4618      	mov	r0, r3
 80067ea:	9303      	str	r3, [sp, #12]
 80067ec:	f7fa fd68 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067f0:	4b46      	ldr	r3, [pc, #280]	; (800690c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80067f2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80067f6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80067fa:	3324      	adds	r3, #36	; 0x24
 80067fc:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006800:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006804:	4640      	mov	r0, r8
 8006806:	f7fb fe85 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800680a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800680e:	4618      	mov	r0, r3
 8006810:	ee08 3a10 	vmov	s16, r3
 8006814:	f7fb fe7e 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006818:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800681c:	4618      	mov	r0, r3
 800681e:	ee09 3a10 	vmov	s18, r3
 8006822:	f00b ff6d 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006826:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800682a:	4618      	mov	r0, r3
 800682c:	ee09 3a90 	vmov	s19, r3
 8006830:	f00b ff66 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006834:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006838:	4618      	mov	r0, r3
 800683a:	ee0a 3a10 	vmov	s20, r3
 800683e:	f00b ff5f 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006842:	4a33      	ldr	r2, [pc, #204]	; (8006910 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006844:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006848:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800684c:	4a31      	ldr	r2, [pc, #196]	; (8006914 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800684e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006852:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006856:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800685a:	f00c fe0d 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800685e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006862:	462a      	mov	r2, r5
 8006864:	4658      	mov	r0, fp
 8006866:	9300      	str	r3, [sp, #0]
 8006868:	4629      	mov	r1, r5
 800686a:	23f0      	movs	r3, #240	; 0xf0
 800686c:	f7fb fe2c 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006870:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006872:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006876:	66a3      	str	r3, [r4, #104]	; 0x68
 8006878:	4659      	mov	r1, fp
 800687a:	4630      	mov	r0, r6
 800687c:	f009 f870 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006880:	462a      	mov	r2, r5
 8006882:	4650      	mov	r0, sl
 8006884:	4629      	mov	r1, r5
 8006886:	f7fb fe12 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800688a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800688c:	4650      	mov	r0, sl
 800688e:	a90a      	add	r1, sp, #40	; 0x28
 8006890:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006894:	f00b fdf3 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006898:	4651      	mov	r1, sl
 800689a:	4630      	mov	r0, r6
 800689c:	f009 f860 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80068a0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80068a4:	2156      	movs	r1, #86	; 0x56
 80068a6:	4648      	mov	r0, r9
 80068a8:	f7fb fe01 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80068ac:	f04f 33ff 	mov.w	r3, #4294967295
 80068b0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80068b4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80068b8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80068bc:	f10d 0b10 	add.w	fp, sp, #16
 80068c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80068c4:	4649      	mov	r1, r9
 80068c6:	4658      	mov	r0, fp
 80068c8:	4798      	blx	r3
 80068ca:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80068ce:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80068d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068d6:	4b10      	ldr	r3, [pc, #64]	; (8006918 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 80068d8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 80068da:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80068de:	b92b      	cbnz	r3, 80068ec <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 80068e0:	4b0e      	ldr	r3, [pc, #56]	; (800691c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 80068e2:	4a0f      	ldr	r2, [pc, #60]	; (8006920 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068e4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068e6:	480f      	ldr	r0, [pc, #60]	; (8006924 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 80068e8:	f021 fe22 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068ec:	4b0e      	ldr	r3, [pc, #56]	; (8006928 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068ee:	881b      	ldrh	r3, [r3, #0]
 80068f0:	2b18      	cmp	r3, #24
 80068f2:	d81d      	bhi.n	8006930 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80068f4:	4b0d      	ldr	r3, [pc, #52]	; (800692c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80068f6:	4a0a      	ldr	r2, [pc, #40]	; (8006920 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068f8:	2161      	movs	r1, #97	; 0x61
 80068fa:	e7f4      	b.n	80068e6 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80068fc:	0802bc50 	.word	0x0802bc50
 8006900:	0802ca84 	.word	0x0802ca84
 8006904:	0802cc4c 	.word	0x0802cc4c
 8006908:	0802a14c 	.word	0x0802a14c
 800690c:	0802c7b8 	.word	0x0802c7b8
 8006910:	0802bc38 	.word	0x0802bc38
 8006914:	08006711 	.word	0x08006711
 8006918:	20013824 	.word	0x20013824
 800691c:	08029f8c 	.word	0x08029f8c
 8006920:	0802a08e 	.word	0x0802a08e
 8006924:	0802a009 	.word	0x0802a009
 8006928:	20013828 	.word	0x20013828
 800692c:	0802a050 	.word	0x0802a050
        return texts->getText(typedTextId);
 8006930:	4b96      	ldr	r3, [pc, #600]	; (8006b8c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006932:	2118      	movs	r1, #24
 8006934:	6818      	ldr	r0, [r3, #0]
 8006936:	f001 fab5 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 800693a:	4a95      	ldr	r2, [pc, #596]	; (8006b90 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 800693c:	4603      	mov	r3, r0
 800693e:	2104      	movs	r1, #4
 8006940:	4650      	mov	r0, sl
 8006942:	f011 fc09 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006946:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800694a:	4648      	mov	r0, r9
 800694c:	f00b f99c 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006950:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006b94 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006954:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006958:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800695a:	a90a      	add	r1, sp, #40	; 0x28
 800695c:	4648      	mov	r0, r9
 800695e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006962:	f00b f9b1 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006966:	4649      	mov	r1, r9
 8006968:	4630      	mov	r0, r6
 800696a:	f008 fff9 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 800696e:	223c      	movs	r2, #60	; 0x3c
 8006970:	ee18 0a90 	vmov	r0, s17
 8006974:	2129      	movs	r1, #41	; 0x29
 8006976:	f7fb fd9a 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800697a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800697e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006982:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006986:	4658      	mov	r0, fp
        linespace = space;
 8006988:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800698c:	f00a ff02 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006990:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006994:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006998:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800699c:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 800699e:	eb0d 0103 	add.w	r1, sp, r3
 80069a2:	ee18 0a90 	vmov	r0, s17
 80069a6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069aa:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80069ae:	f00b f98b 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069b2:	ee18 1a90 	vmov	r1, s17
 80069b6:	4630      	mov	r0, r6
 80069b8:	f008 ffd2 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069bc:	230a      	movs	r3, #10
 80069be:	9300      	str	r3, [sp, #0]
 80069c0:	2232      	movs	r2, #50	; 0x32
 80069c2:	23f0      	movs	r3, #240	; 0xf0
 80069c4:	4629      	mov	r1, r5
 80069c6:	4638      	mov	r0, r7
 80069c8:	f7fb fd7e 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069cc:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069d0:	22a0      	movs	r2, #160	; 0xa0
 80069d2:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80069d6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80069da:	9b03      	ldr	r3, [sp, #12]
 80069dc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80069e0:	4611      	mov	r1, r2
 80069e2:	4638      	mov	r0, r7
 80069e4:	f00a fd2a 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069e8:	22a0      	movs	r2, #160	; 0xa0
 80069ea:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069ee:	4638      	mov	r0, r7
 80069f0:	f00a fd2f 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069f4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80069f8:	2b20      	cmp	r3, #32
 80069fa:	d005      	beq.n	8006a08 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 80069fc:	2320      	movs	r3, #32
 80069fe:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006a02:	4638      	mov	r0, r7
 8006a04:	f00a fc24 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a08:	4638      	mov	r0, r7
 8006a0a:	2101      	movs	r1, #1
 8006a0c:	f00a fd2c 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a10:	4639      	mov	r1, r7
 8006a12:	4630      	mov	r0, r6
 8006a14:	f008 ffa4 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a18:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006a1c:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006a1e:	2223      	movs	r2, #35	; 0x23
 8006a20:	4640      	mov	r0, r8
        linespace = space;
 8006a22:	f04f 0a00 	mov.w	sl, #0
 8006a26:	2145      	movs	r1, #69	; 0x45
 8006a28:	f7fb fd41 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a2c:	4641      	mov	r1, r8
 8006a2e:	4638      	mov	r0, r7
        color = newColor;
 8006a30:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006a34:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a38:	f00a feac 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a3c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a40:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a48:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006b94 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006a4c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a50:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006a52:	a90a      	add	r1, sp, #40	; 0x28
 8006a54:	4640      	mov	r0, r8
 8006a56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a5a:	f00b f935 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a5e:	4641      	mov	r1, r8
 8006a60:	4630      	mov	r0, r6
 8006a62:	f008 ff7d 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a66:	ee18 0a10 	vmov	r0, s16
 8006a6a:	220c      	movs	r2, #12
 8006a6c:	2136      	movs	r1, #54	; 0x36
 8006a6e:	f7fb fd1e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006a72:	ee18 1a10 	vmov	r1, s16
 8006a76:	4638      	mov	r0, r7
        color = newColor;
 8006a78:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006a7c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a80:	f00a fe88 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a84:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a88:	ee18 3a10 	vmov	r3, s16
 8006a8c:	333c      	adds	r3, #60	; 0x3c
 8006a8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a92:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006a94:	ee18 0a10 	vmov	r0, s16
 8006a98:	a90a      	add	r1, sp, #40	; 0x28
 8006a9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a9e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006aa2:	f00b f911 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aa6:	ee18 1a10 	vmov	r1, s16
 8006aaa:	4630      	mov	r0, r6
 8006aac:	f008 ff58 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006ab0:	ee19 0a10 	vmov	r0, s18
 8006ab4:	22f0      	movs	r2, #240	; 0xf0
 8006ab6:	2121      	movs	r1, #33	; 0x21
 8006ab8:	f7fb fcf9 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006abc:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ac0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ac2:	f04f 0802 	mov.w	r8, #2
 8006ac6:	a909      	add	r1, sp, #36	; 0x24
 8006ac8:	ee19 0a10 	vmov	r0, s18
 8006acc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ad0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006ad4:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ad8:	f00b fadb 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006adc:	233f      	movs	r3, #63	; 0x3f
 8006ade:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006ae2:	3710      	adds	r7, #16
        updateTextPosition();
 8006ae4:	ee19 0a10 	vmov	r0, s18
 8006ae8:	f7fb fd36 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006aec:	ee19 1a10 	vmov	r1, s18
 8006af0:	4630      	mov	r0, r6
        colorPressed = col;
 8006af2:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006af6:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006afa:	f008 ff31 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006afe:	ee19 0a90 	vmov	r0, s19
 8006b02:	22aa      	movs	r2, #170	; 0xaa
 8006b04:	2121      	movs	r1, #33	; 0x21
 8006b06:	f7fb fcd2 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b0a:	aa0a      	add	r2, sp, #40	; 0x28
 8006b0c:	a909      	add	r1, sp, #36	; 0x24
 8006b0e:	ee19 0a90 	vmov	r0, s19
 8006b12:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b16:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b1a:	f00b faba 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b1e:	233e      	movs	r3, #62	; 0x3e
 8006b20:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006b24:	ee19 0a90 	vmov	r0, s19
 8006b28:	f7fb fd16 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b2c:	ee19 1a90 	vmov	r1, s19
 8006b30:	4630      	mov	r0, r6
        colorPressed = col;
 8006b32:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006b36:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006b3a:	f008 ff11 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006b3e:	ee1a 0a10 	vmov	r0, s20
 8006b42:	2264      	movs	r2, #100	; 0x64
 8006b44:	2121      	movs	r1, #33	; 0x21
 8006b46:	f7fb fcb2 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b4a:	aa0a      	add	r2, sp, #40	; 0x28
 8006b4c:	a909      	add	r1, sp, #36	; 0x24
 8006b4e:	ee1a 0a10 	vmov	r0, s20
 8006b52:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b56:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b5a:	f00b fa9a 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b5e:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006b60:	ee1a 0a10 	vmov	r0, s20
 8006b64:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b68:	f7fb fcf6 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b6c:	4630      	mov	r0, r6
        colorPressed = col;
 8006b6e:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006b72:	ee1a 1a10 	vmov	r1, s20
 8006b76:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006b7a:	f008 fef1 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b7e:	4620      	mov	r0, r4
 8006b80:	b00d      	add	sp, #52	; 0x34
 8006b82:	ecbd 8b06 	vpop	{d8-d10}
 8006b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b8a:	bf00      	nop
 8006b8c:	20013830 	.word	0x20013830
 8006b90:	0802a0c6 	.word	0x0802a0c6
 8006b94:	0802a13c 	.word	0x0802a13c

08006b98 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006b98:	4770      	bx	lr

08006b9a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006b9a:	4770      	bx	lr

08006b9c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8006b9c:	6803      	ldr	r3, [r0, #0]
 8006b9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ba0:	4718      	bx	r3

08006ba2 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ba2:	4770      	bx	lr

08006ba4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ba4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ba6:	68c2      	ldr	r2, [r0, #12]
 8006ba8:	6844      	ldr	r4, [r0, #4]
 8006baa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006bac:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006bae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006bb2:	07d2      	lsls	r2, r2, #31
 8006bb4:	bf48      	it	mi
 8006bb6:	5962      	ldrmi	r2, [r4, r5]
 8006bb8:	689b      	ldr	r3, [r3, #8]
    }
 8006bba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006bbc:	bf48      	it	mi
 8006bbe:	58d3      	ldrmi	r3, [r2, r3]
 8006bc0:	4718      	bx	r3

08006bc2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006bc2:	6843      	ldr	r3, [r0, #4]
 8006bc4:	b12b      	cbz	r3, 8006bd2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006bc6:	6883      	ldr	r3, [r0, #8]
 8006bc8:	b92b      	cbnz	r3, 8006bd6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006bca:	68c0      	ldr	r0, [r0, #12]
 8006bcc:	f000 0001 	and.w	r0, r0, #1
 8006bd0:	4770      	bx	lr
 8006bd2:	4618      	mov	r0, r3
 8006bd4:	4770      	bx	lr
 8006bd6:	2001      	movs	r0, #1
    }
 8006bd8:	4770      	bx	lr

08006bda <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bda:	b510      	push	{r4, lr}
 8006bdc:	2110      	movs	r1, #16
 8006bde:	4604      	mov	r4, r0
 8006be0:	f020 feb5 	bl	802794e <_ZdlPvj>
 8006be4:	4620      	mov	r0, r4
 8006be6:	bd10      	pop	{r4, pc}

08006be8 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006be8:	b510      	push	{r4, lr}
 8006bea:	4b03      	ldr	r3, [pc, #12]	; (8006bf8 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006bec:	6003      	str	r3, [r0, #0]
 8006bee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bf0:	f00c fc4c 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bf4:	4620      	mov	r0, r4
 8006bf6:	bd10      	pop	{r4, pc}
 8006bf8:	0802bc9c 	.word	0x0802bc9c

08006bfc <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006bfc:	b507      	push	{r0, r1, r2, lr}
 8006bfe:	4b07      	ldr	r3, [pc, #28]	; (8006c1c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006c00:	6003      	str	r3, [r0, #0]
 8006c02:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c04:	f00c fc42 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c08:	9801      	ldr	r0, [sp, #4]
 8006c0a:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8006c0e:	f020 fe9e 	bl	802794e <_ZdlPvj>
 8006c12:	9801      	ldr	r0, [sp, #4]
 8006c14:	b003      	add	sp, #12
 8006c16:	f85d fb04 	ldr.w	pc, [sp], #4
 8006c1a:	bf00      	nop
 8006c1c:	0802bc9c 	.word	0x0802bc9c

08006c20 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006c20:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006c24:	4288      	cmp	r0, r1
{
 8006c26:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006c28:	d105      	bne.n	8006c36 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006c2a:	f00e f931 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006c2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006c32:	f7fc bd73 	b.w	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006c36:	bd08      	pop	{r3, pc}

08006c38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c3c:	ed2d 8b0a 	vpush	{d8-d12}
 8006c40:	4604      	mov	r4, r0
 8006c42:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006c44:	46a2      	mov	sl, r4
 8006c46:	2500      	movs	r5, #0
 8006c48:	f00f fda2 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8006c4c:	4ba5      	ldr	r3, [pc, #660]	; (8006ee4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>)
 8006c4e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c50:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006c54:	2226      	movs	r2, #38	; 0x26
 8006c56:	4629      	mov	r1, r5
 8006c58:	4650      	mov	r0, sl
 8006c5a:	f021 fe6e 	bl	802893a <memset>
 8006c5e:	4650      	mov	r0, sl
 8006c60:	f7fb fc46 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006c64:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006c68:	26ff      	movs	r6, #255	; 0xff
 8006c6a:	4b9f      	ldr	r3, [pc, #636]	; (8006ee8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>)
 8006c6c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c6e:	2226      	movs	r2, #38	; 0x26
 8006c70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c74:	4629      	mov	r1, r5
 8006c76:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c7a:	4648      	mov	r0, r9
 8006c7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c7e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c82:	f021 fe5a 	bl	802893a <memset>
 8006c86:	4648      	mov	r0, r9
 8006c88:	f7fb fc32 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8006c8c:	4b97      	ldr	r3, [pc, #604]	; (8006eec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>)
 8006c8e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c90:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c94:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c98:	a90a      	add	r1, sp, #40	; 0x28
 8006c9a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c9e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006ca0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ca4:	f00b fbeb 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ca8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006cac:	4658      	mov	r0, fp
 8006cae:	f7fb fc31 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cb2:	f504 7820 	add.w	r8, r4, #640	; 0x280
 8006cb6:	4638      	mov	r0, r7
 8006cb8:	f00b f8a4 	bl	8011e04 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8006cbc:	4640      	mov	r0, r8
 8006cbe:	f7fb fc29 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006cc2:	4e8b      	ldr	r6, [pc, #556]	; (8006ef0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 8006cc4:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
 8006cc8:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8006ccc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006cce:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006cd2:	ee08 3a90 	vmov	s17, r3
        : TextArea()
 8006cd6:	f7fb fc1d 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cda:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006cde:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006ce2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006ce4:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006ce8:	ee09 3a10 	vmov	s18, r3
        : TextArea()
 8006cec:	f7fb fc12 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006cf0:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006cf4:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006cf8:	4618      	mov	r0, r3
 8006cfa:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006cfe:	ee0a 3a90 	vmov	s21, r3
 8006d02:	f7fb fc07 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006d06:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	ee0b 3a10 	vmov	s22, r3
 8006d10:	f7fb fc00 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006d14:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006d18:	4618      	mov	r0, r3
 8006d1a:	ee0b 3a90 	vmov	s23, r3
 8006d1e:	f7fb fbf9 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006d22:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8006d26:	4618      	mov	r0, r3
 8006d28:	ee08 3a10 	vmov	s16, r3
 8006d2c:	f00a fa70 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 8006d30:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d34:	4618      	mov	r0, r3
 8006d36:	9302      	str	r3, [sp, #8]
 8006d38:	f7fa fac2 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006d3c:	4b6d      	ldr	r3, [pc, #436]	; (8006ef4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006d3e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006d42:	3324      	adds	r3, #36	; 0x24
 8006d44:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006d48:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006d4c:	4618      	mov	r0, r3
 8006d4e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006d52:	ee09 3a90 	vmov	s19, r3
 8006d56:	f7fb fbdd 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006d5a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006d5e:	4618      	mov	r0, r3
 8006d60:	ee0a 3a10 	vmov	s20, r3
 8006d64:	f7fb fbd6 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8006d68:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006d6c:	4618      	mov	r0, r3
 8006d6e:	ee0c 3a10 	vmov	s24, r3
 8006d72:	f00b fcc5 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d76:	4a60      	ldr	r2, [pc, #384]	; (8006ef8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006d78:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d7c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006d80:	4a5e      	ldr	r2, [pc, #376]	; (8006efc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d82:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d86:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 8006d8a:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8006d8e:	f00c fb73 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d92:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d96:	462a      	mov	r2, r5
 8006d98:	4650      	mov	r0, sl
 8006d9a:	9300      	str	r3, [sp, #0]
 8006d9c:	4629      	mov	r1, r5
 8006d9e:	23f0      	movs	r3, #240	; 0xf0
 8006da0:	f7fb fb92 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006da4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006da6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006daa:	66a3      	str	r3, [r4, #104]	; 0x68
 8006dac:	4651      	mov	r1, sl
 8006dae:	4630      	mov	r0, r6
 8006db0:	f008 fdd6 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006db4:	462a      	mov	r2, r5
 8006db6:	4648      	mov	r0, r9
 8006db8:	4629      	mov	r1, r5
 8006dba:	f7fb fb78 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006dbe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006dc0:	4648      	mov	r0, r9
 8006dc2:	a90a      	add	r1, sp, #40	; 0x28
 8006dc4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dc8:	f00b fb59 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006dcc:	4649      	mov	r1, r9
 8006dce:	4630      	mov	r0, r6
 8006dd0:	f008 fdc6 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006dd4:	f10d 0910 	add.w	r9, sp, #16
    textArea3.setXY(31, 60);
 8006dd8:	223c      	movs	r2, #60	; 0x3c
 8006dda:	211f      	movs	r1, #31
 8006ddc:	4658      	mov	r0, fp
        color = newColor;
 8006dde:	f04f 3aff 	mov.w	sl, #4294967295
 8006de2:	f7fb fb64 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006de6:	4659      	mov	r1, fp
 8006de8:	4648      	mov	r0, r9
        color = newColor;
 8006dea:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        linespace = space;
 8006dee:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006df2:	f00a fccf 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006df6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006dfa:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006dfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006e02:	4b3f      	ldr	r3, [pc, #252]	; (8006f00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8006e04:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006e06:	a90a      	add	r1, sp, #40	; 0x28
 8006e08:	2327      	movs	r3, #39	; 0x27
 8006e0a:	4658      	mov	r0, fp
 8006e0c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e10:	f00a ff5a 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e14:	4659      	mov	r1, fp
 8006e16:	4630      	mov	r0, r6
 8006e18:	f008 fda2 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e1c:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8006e20:	4638      	mov	r0, r7
 8006e22:	a90a      	add	r1, sp, #40	; 0x28
 8006e24:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e28:	f008 fd2c 	bl	800f884 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8006e2c:	236a      	movs	r3, #106	; 0x6a
 8006e2e:	4638      	mov	r0, r7
 8006e30:	9300      	str	r3, [sp, #0]
 8006e32:	225e      	movs	r2, #94	; 0x5e
 8006e34:	23b8      	movs	r3, #184	; 0xb8
 8006e36:	211c      	movs	r1, #28
 8006e38:	f7fb fb46 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8006e3c:	225c      	movs	r2, #92	; 0x5c
 8006e3e:	4611      	mov	r1, r2
 8006e40:	4638      	mov	r0, r7
 8006e42:	f00b f88a 	bl	8011f5a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8006e46:	4638      	mov	r0, r7
 8006e48:	225a      	movs	r2, #90	; 0x5a
 8006e4a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006e4e:	f00b f909 	bl	8012064 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8006e52:	462b      	mov	r3, r5
 8006e54:	225a      	movs	r2, #90	; 0x5a
 8006e56:	4638      	mov	r0, r7
 8006e58:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8006e5c:	9500      	str	r5, [sp, #0]
 8006e5e:	f008 fbbe 	bl	800f5de <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8006e62:	4638      	mov	r0, r7
 8006e64:	4629      	mov	r1, r5
 8006e66:	f00b f8a7 	bl	8011fb8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8006e6a:	2335      	movs	r3, #53	; 0x35
 8006e6c:	2208      	movs	r2, #8
 8006e6e:	4638      	mov	r0, r7
 8006e70:	2105      	movs	r1, #5
 8006e72:	f00b f85d 	bl	8011f30 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006e76:	4638      	mov	r0, r7
 8006e78:	2101      	movs	r1, #1
 8006e7a:	f00a fffb 	bl	8011e74 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8006e7e:	4638      	mov	r0, r7
 8006e80:	2101      	movs	r1, #1
 8006e82:	f00a fffa 	bl	8011e7a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8006e86:	4639      	mov	r1, r7
 8006e88:	4630      	mov	r0, r6
 8006e8a:	f008 fd69 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setXY(75, 230);
 8006e8e:	22e6      	movs	r2, #230	; 0xe6
 8006e90:	214b      	movs	r1, #75	; 0x4b
 8006e92:	4640      	mov	r0, r8
 8006e94:	f7fb fb0b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006e98:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8006e9c:	f8c4 a2b0 	str.w	sl, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8006ea0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8006ea4:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8006ea8:	4641      	mov	r1, r8
 8006eaa:	4648      	mov	r0, r9
 8006eac:	4798      	blx	r3
 8006eae:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006eb2:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006eb6:	4f13      	ldr	r7, [pc, #76]	; (8006f04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8006eb8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8006ebc:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8006ec0:	9303      	str	r3, [sp, #12]
 8006ec2:	683b      	ldr	r3, [r7, #0]
 8006ec4:	b92b      	cbnz	r3, 8006ed2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
 8006ec6:	4b10      	ldr	r3, [pc, #64]	; (8006f08 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006ec8:	4a10      	ldr	r2, [pc, #64]	; (8006f0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006eca:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ecc:	4810      	ldr	r0, [pc, #64]	; (8006f10 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006ece:	f021 fb2f 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006ed2:	f8df b044 	ldr.w	fp, [pc, #68]	; 8006f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ed6:	f8bb 3000 	ldrh.w	r3, [fp]
 8006eda:	b9fb      	cbnz	r3, 8006f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>
 8006edc:	4b0d      	ldr	r3, [pc, #52]	; (8006f14 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006ede:	4a0b      	ldr	r2, [pc, #44]	; (8006f0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006ee0:	2161      	movs	r1, #97	; 0x61
 8006ee2:	e7f3      	b.n	8006ecc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x294>
 8006ee4:	0802bc9c 	.word	0x0802bc9c
 8006ee8:	0802ca84 	.word	0x0802ca84
 8006eec:	0802cc4c 	.word	0x0802cc4c
 8006ef0:	0802a14c 	.word	0x0802a14c
 8006ef4:	0802c7b8 	.word	0x0802c7b8
 8006ef8:	0802bc84 	.word	0x0802bc84
 8006efc:	08006c21 	.word	0x08006c21
 8006f00:	0802a13c 	.word	0x0802a13c
 8006f04:	20013824 	.word	0x20013824
 8006f08:	08029f8c 	.word	0x08029f8c
 8006f0c:	0802a08e 	.word	0x0802a08e
 8006f10:	0802a009 	.word	0x0802a009
 8006f14:	0802a050 	.word	0x0802a050
 8006f18:	20013828 	.word	0x20013828
        return texts->getText(typedTextId);
 8006f1c:	4bde      	ldr	r3, [pc, #888]	; (8007298 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 8006f1e:	4629      	mov	r1, r5
 8006f20:	6818      	ldr	r0, [r3, #0]
 8006f22:	f000 ffbf 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8006f26:	4add      	ldr	r2, [pc, #884]	; (800729c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8006f28:	4603      	mov	r3, r0
 8006f2a:	210a      	movs	r1, #10
 8006f2c:	9803      	ldr	r0, [sp, #12]
 8006f2e:	f011 f913 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006f32:	9903      	ldr	r1, [sp, #12]
 8006f34:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.resizeToCurrentText();
 8006f38:	4640      	mov	r0, r8
 8006f3a:	f00a fea5 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006f3e:	4bd8      	ldr	r3, [pc, #864]	; (80072a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8006f40:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8006f42:	4640      	mov	r0, r8
 8006f44:	2303      	movs	r3, #3
 8006f46:	a90a      	add	r1, sp, #40	; 0x28
 8006f48:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f4c:	f00a febc 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f50:	4641      	mov	r1, r8
 8006f52:	4630      	mov	r0, r6
 8006f54:	f008 fd04 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setXY(63, 215);
 8006f58:	22d7      	movs	r2, #215	; 0xd7
 8006f5a:	ee18 0a90 	vmov	r0, s17
 8006f5e:	213f      	movs	r1, #63	; 0x3f
 8006f60:	f7fb faa5 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006f64:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8006f68:	f8c4 a2fc 	str.w	sl, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8006f6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8006f70:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8006f74:	ee18 1a90 	vmov	r1, s17
 8006f78:	4648      	mov	r0, r9
 8006f7a:	4798      	blx	r3
 8006f7c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006f80:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8006f84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f88:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8006f8a:	f204 58ac 	addw	r8, r4, #1452	; 0x5ac
 8006f8e:	2b00      	cmp	r3, #0
 8006f90:	d099      	beq.n	8006ec6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f92:	f8bb 3000 	ldrh.w	r3, [fp]
 8006f96:	2b01      	cmp	r3, #1
 8006f98:	d9a0      	bls.n	8006edc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 8006f9a:	4abf      	ldr	r2, [pc, #764]	; (8007298 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 8006f9c:	2101      	movs	r1, #1
 8006f9e:	6810      	ldr	r0, [r2, #0]
 8006fa0:	f000 ff80 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8006fa4:	4abd      	ldr	r2, [pc, #756]	; (800729c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8006fa6:	4603      	mov	r3, r0
 8006fa8:	210a      	movs	r1, #10
 8006faa:	4640      	mov	r0, r8
 8006fac:	f011 f8d4 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.resizeToCurrentText();
 8006fb0:	ee18 0a90 	vmov	r0, s17
 8006fb4:	f8c4 8314 	str.w	r8, [r4, #788]	; 0x314
 8006fb8:	f00a fe66 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006fbc:	f04f 0104 	mov.w	r1, #4
 8006fc0:	4bb7      	ldr	r3, [pc, #732]	; (80072a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8006fc2:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8006fc6:	ee18 0a90 	vmov	r0, s17
 8006fca:	a90a      	add	r1, sp, #40	; 0x28
 8006fcc:	930a      	str	r3, [sp, #40]	; 0x28
 8006fce:	f00a fe7b 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fd2:	ee18 1a90 	vmov	r1, s17
 8006fd6:	4630      	mov	r0, r6
 8006fd8:	f008 fcc2 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setXY(64, 200);
 8006fdc:	22c8      	movs	r2, #200	; 0xc8
 8006fde:	ee19 0a10 	vmov	r0, s18
 8006fe2:	2140      	movs	r1, #64	; 0x40
 8006fe4:	f7fb fa63 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8006fe8:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8006fec:	f8c4 a348 	str.w	sl, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8006ff0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8006ff4:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8006ff8:	ee19 1a10 	vmov	r1, s18
 8006ffc:	4648      	mov	r0, r9
 8006ffe:	4798      	blx	r3
 8007000:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007004:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007008:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800700c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800700e:	f504 68b8 	add.w	r8, r4, #1472	; 0x5c0
 8007012:	2b00      	cmp	r3, #0
 8007014:	f43f af57 	beq.w	8006ec6 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007018:	f8bb 3000 	ldrh.w	r3, [fp]
 800701c:	2b02      	cmp	r3, #2
 800701e:	f67f af5d 	bls.w	8006edc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 8007022:	4a9d      	ldr	r2, [pc, #628]	; (8007298 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
        : typedTextId(id)
 8007024:	4f9e      	ldr	r7, [pc, #632]	; (80072a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
        return texts->getText(typedTextId);
 8007026:	6810      	ldr	r0, [r2, #0]
 8007028:	2102      	movs	r1, #2
 800702a:	f000 ff3b 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 800702e:	4a9b      	ldr	r2, [pc, #620]	; (800729c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8007030:	4603      	mov	r3, r0
 8007032:	210a      	movs	r1, #10
 8007034:	4640      	mov	r0, r8
 8007036:	f011 f88f 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Distance.resizeToCurrentText();
 800703a:	ee19 0a10 	vmov	r0, s18
 800703e:	f8c4 8360 	str.w	r8, [r4, #864]	; 0x360
 8007042:	f00a fe21 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007046:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007048:	ee19 0a10 	vmov	r0, s18
 800704c:	a90a      	add	r1, sp, #40	; 0x28
 800704e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007052:	970a      	str	r7, [sp, #40]	; 0x28
 8007054:	f00a fe38 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007058:	ee19 1a10 	vmov	r1, s18
 800705c:	4630      	mov	r0, r6
 800705e:	f008 fc7f 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007062:	224c      	movs	r2, #76	; 0x4c
 8007064:	ee1a 0a90 	vmov	r0, s21
 8007068:	2171      	movs	r1, #113	; 0x71
 800706a:	f7fb fa20 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800706e:	ee1a 1a90 	vmov	r1, s21
 8007072:	4648      	mov	r0, r9
        color = newColor;
 8007074:	f8c4 a394 	str.w	sl, [r4, #916]	; 0x394
        linespace = space;
 8007078:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800707c:	f00a fb8a 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007080:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007084:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007088:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800708c:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800708e:	ee1a 0a90 	vmov	r0, s21
 8007092:	a90a      	add	r1, sp, #40	; 0x28
 8007094:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007098:	970a      	str	r7, [sp, #40]	; 0x28
 800709a:	f00a fe15 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800709e:	ee1a 1a90 	vmov	r1, s21
 80070a2:	4630      	mov	r0, r6
 80070a4:	f008 fc5c 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80070a8:	22b9      	movs	r2, #185	; 0xb9
 80070aa:	ee1b 0a10 	vmov	r0, s22
 80070ae:	4629      	mov	r1, r5
 80070b0:	f7fb f9fd 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80070b4:	ee1b 1a10 	vmov	r1, s22
 80070b8:	4648      	mov	r0, r9
        color = newColor;
 80070ba:	f8c4 a3dc 	str.w	sl, [r4, #988]	; 0x3dc
        linespace = space;
 80070be:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80070c2:	f00a fb67 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070c6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80070ca:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80070ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070d2:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80070d4:	ee1b 0a10 	vmov	r0, s22
 80070d8:	a90a      	add	r1, sp, #40	; 0x28
 80070da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070de:	970a      	str	r7, [sp, #40]	; 0x28
 80070e0:	f00a fdf2 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070e4:	ee1b 1a10 	vmov	r1, s22
 80070e8:	4630      	mov	r0, r6
 80070ea:	f008 fc39 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80070ee:	22b9      	movs	r2, #185	; 0xb9
 80070f0:	ee1b 0a90 	vmov	r0, s23
 80070f4:	21d9      	movs	r1, #217	; 0xd9
 80070f6:	f7fb f9da 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80070fa:	ee1b 1a90 	vmov	r1, s23
 80070fe:	4648      	mov	r0, r9
        color = newColor;
 8007100:	f8c4 a424 	str.w	sl, [r4, #1060]	; 0x424
        linespace = space;
 8007104:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007108:	f00a fb44 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800710c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007110:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007114:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007118:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 800711a:	ee1b 0a90 	vmov	r0, s23
 800711e:	a90a      	add	r1, sp, #40	; 0x28
 8007120:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007124:	970a      	str	r7, [sp, #40]	; 0x28
 8007126:	f00a fdcf 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800712a:	ee1b 1a90 	vmov	r1, s23
 800712e:	4630      	mov	r0, r6
 8007130:	f008 fc16 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007134:	230a      	movs	r3, #10
 8007136:	ee18 0a10 	vmov	r0, s16
 800713a:	9300      	str	r3, [sp, #0]
 800713c:	2232      	movs	r2, #50	; 0x32
 800713e:	23f0      	movs	r3, #240	; 0xf0
 8007140:	4629      	mov	r1, r5
 8007142:	f7fb f9c1 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007146:	9b02      	ldr	r3, [sp, #8]
 8007148:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800714c:	22a0      	movs	r2, #160	; 0xa0
 800714e:	4611      	mov	r1, r2
 8007150:	ee18 0a10 	vmov	r0, s16
 8007154:	f8c4 a4b8 	str.w	sl, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007158:	f8a4 a4bc 	strh.w	sl, [r4, #1212]	; 0x4bc
 800715c:	f00a f96e 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007160:	ee18 0a10 	vmov	r0, s16
 8007164:	22a0      	movs	r2, #160	; 0xa0
 8007166:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800716a:	f00a f972 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800716e:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007172:	2b20      	cmp	r3, #32
 8007174:	d006      	beq.n	8007184 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x54c>
        lineWidthQ5 = widthQ5;
 8007176:	2320      	movs	r3, #32
        updateCachedShape();
 8007178:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800717c:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007180:	f00a f866 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007184:	ee18 0a10 	vmov	r0, s16
 8007188:	2101      	movs	r1, #1
 800718a:	f00a f96d 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800718e:	ee18 1a10 	vmov	r1, s16
 8007192:	4630      	mov	r0, r6
 8007194:	f008 fbe4 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007198:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800719c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800719e:	ee19 0a90 	vmov	r0, s19
 80071a2:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80071a4:	f04f 0900 	mov.w	r9, #0
 80071a8:	2145      	movs	r1, #69	; 0x45
 80071aa:	f7fb f980 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80071ae:	ee19 1a90 	vmov	r1, s19
 80071b2:	4628      	mov	r0, r5
        color = newColor;
 80071b4:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80071b8:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80071bc:	f00a faea 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071c4:	ee19 3a90 	vmov	r3, s19
 80071c8:	333c      	adds	r3, #60	; 0x3c
 80071ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071ce:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80072a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>
 80071d2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80071d6:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80071d8:	ee19 0a90 	vmov	r0, s19
 80071dc:	a90a      	add	r1, sp, #40	; 0x28
 80071de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071e2:	f00a fd71 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071e6:	ee19 1a90 	vmov	r1, s19
 80071ea:	4630      	mov	r0, r6
 80071ec:	f008 fbb8 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071f0:	ee1a 0a10 	vmov	r0, s20
 80071f4:	220c      	movs	r2, #12
 80071f6:	2136      	movs	r1, #54	; 0x36
 80071f8:	f7fb f959 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80071fc:	ee1a 1a10 	vmov	r1, s20
 8007200:	4628      	mov	r0, r5
        color = newColor;
 8007202:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007206:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800720a:	f00a fac3 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800720e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007212:	ee1a 3a10 	vmov	r3, s20
 8007216:	333c      	adds	r3, #60	; 0x3c
 8007218:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800721c:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800721e:	ee1a 0a10 	vmov	r0, s20
 8007222:	a90a      	add	r1, sp, #40	; 0x28
 8007224:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007228:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800722c:	f00a fd4c 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007230:	ee1a 1a10 	vmov	r1, s20
 8007234:	4630      	mov	r0, r6
 8007236:	f008 fb93 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800723a:	ee1c 0a10 	vmov	r0, s24
 800723e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007242:	2121      	movs	r1, #33	; 0x21
 8007244:	f7fb f933 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007248:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800724a:	aa0a      	add	r2, sp, #40	; 0x28
 800724c:	a909      	add	r1, sp, #36	; 0x24
 800724e:	ee1c 0a10 	vmov	r0, s24
 8007252:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007256:	2302      	movs	r3, #2
 8007258:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800725c:	f00a ff19 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007260:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 8007262:	ee1c 0a10 	vmov	r0, s24
 8007266:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 800726a:	f7fb f975 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800726e:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007272:	3304      	adds	r3, #4
 8007274:	4630      	mov	r0, r6
 8007276:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800727a:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800727e:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007282:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007286:	f008 fb6b 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800728a:	4620      	mov	r0, r4
 800728c:	b00d      	add	sp, #52	; 0x34
 800728e:	ecbd 8b0a 	vpop	{d8-d12}
 8007292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007296:	bf00      	nop
 8007298:	20013830 	.word	0x20013830
 800729c:	0802a0c6 	.word	0x0802a0c6
 80072a0:	0802a13c 	.word	0x0802a13c

080072a4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072a4:	4770      	bx	lr

080072a6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072a6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072a8:	68c2      	ldr	r2, [r0, #12]
 80072aa:	6844      	ldr	r4, [r0, #4]
 80072ac:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072ae:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072b0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072b4:	07d2      	lsls	r2, r2, #31
 80072b6:	bf48      	it	mi
 80072b8:	5962      	ldrmi	r2, [r4, r5]
 80072ba:	689b      	ldr	r3, [r3, #8]
    }
 80072bc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072be:	bf48      	it	mi
 80072c0:	58d3      	ldrmi	r3, [r2, r3]
 80072c2:	4718      	bx	r3

080072c4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80072c4:	6843      	ldr	r3, [r0, #4]
 80072c6:	b12b      	cbz	r3, 80072d4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80072c8:	6883      	ldr	r3, [r0, #8]
 80072ca:	b92b      	cbnz	r3, 80072d8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80072cc:	68c0      	ldr	r0, [r0, #12]
 80072ce:	f000 0001 	and.w	r0, r0, #1
 80072d2:	4770      	bx	lr
 80072d4:	4618      	mov	r0, r3
 80072d6:	4770      	bx	lr
 80072d8:	2001      	movs	r0, #1
    }
 80072da:	4770      	bx	lr

080072dc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072dc:	b510      	push	{r4, lr}
 80072de:	2110      	movs	r1, #16
 80072e0:	4604      	mov	r4, r0
 80072e2:	f020 fb34 	bl	802794e <_ZdlPvj>
 80072e6:	4620      	mov	r0, r4
 80072e8:	bd10      	pop	{r4, pc}

080072ea <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80072ea:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80072ee:	f000 bf21 	b.w	8008134 <_ZN17Gauge_with_Values10initializeEv>

080072f2 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80072f2:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80072f6:	4288      	cmp	r0, r1
{
 80072f8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80072fa:	d105      	bne.n	8007308 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80072fc:	f00d fdc8 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007300:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007304:	f7fc ba0a 	b.w	800371c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007308:	bd08      	pop	{r3, pc}
	...

0800730c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800730c:	b510      	push	{r4, lr}
 800730e:	4b07      	ldr	r3, [pc, #28]	; (800732c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8007310:	6003      	str	r3, [r0, #0]
 8007312:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007314:	f00c f8ba 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007318:	4b05      	ldr	r3, [pc, #20]	; (8007330 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800731a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800731e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007322:	f7fd fc91 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007326:	4620      	mov	r0, r4
 8007328:	bd10      	pop	{r4, pc}
 800732a:	bf00      	nop
 800732c:	0802bcec 	.word	0x0802bcec
 8007330:	0802c110 	.word	0x0802c110

08007334 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007334:	b510      	push	{r4, lr}
 8007336:	4604      	mov	r4, r0
}
 8007338:	f7ff ffe8 	bl	800730c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800733c:	4620      	mov	r0, r4
 800733e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007342:	f020 fb04 	bl	802794e <_ZdlPvj>
 8007346:	4620      	mov	r0, r4
 8007348:	bd10      	pop	{r4, pc}
	...

0800734c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800734c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007350:	ed2d 8b04 	vpush	{d8-d9}
 8007354:	4604      	mov	r4, r0
 8007356:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007358:	46a3      	mov	fp, r4
 800735a:	2500      	movs	r5, #0
 800735c:	f00f fa18 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8007360:	4bae      	ldr	r3, [pc, #696]	; (800761c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8007362:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007364:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007368:	2226      	movs	r2, #38	; 0x26
 800736a:	4629      	mov	r1, r5
 800736c:	4658      	mov	r0, fp
 800736e:	f021 fae4 	bl	802893a <memset>
 8007372:	4658      	mov	r0, fp
 8007374:	f7fb f8bc 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8007378:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800737c:	26ff      	movs	r6, #255	; 0xff
 800737e:	4ba8      	ldr	r3, [pc, #672]	; (8007620 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007380:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007382:	2226      	movs	r2, #38	; 0x26
 8007384:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007388:	4629      	mov	r1, r5
 800738a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800738e:	66a5      	str	r5, [r4, #104]	; 0x68
 8007390:	4650      	mov	r0, sl
 8007392:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007396:	f021 fad0 	bl	802893a <memset>
 800739a:	4650      	mov	r0, sl
 800739c:	f7fb f8a8 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80073a0:	4ba0      	ldr	r3, [pc, #640]	; (8007624 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 80073a2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80073a4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80073a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80073ac:	a90a      	add	r1, sp, #40	; 0x28
 80073ae:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80073b2:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80073b6:	4650      	mov	r0, sl
 80073b8:	f00b f861 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073bc:	4638      	mov	r0, r7
 80073be:	f009 ff27 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 80073c2:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80073c6:	4618      	mov	r0, r3
 80073c8:	9303      	str	r3, [sp, #12]
 80073ca:	f7f9 ff79 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80073ce:	4b96      	ldr	r3, [pc, #600]	; (8007628 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80073d0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80073d4:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80073d8:	3324      	adds	r3, #36	; 0x24
 80073da:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80073de:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80073e2:	4648      	mov	r0, r9
 80073e4:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80073e8:	f7fb f894 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80073ec:	4640      	mov	r0, r8
 80073ee:	f7fb f891 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 80073f2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80073f6:	4618      	mov	r0, r3
 80073f8:	ee08 3a10 	vmov	s16, r3
 80073fc:	f7fb f88a 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8007400:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007404:	4618      	mov	r0, r3
 8007406:	ee08 3a90 	vmov	s17, r3
 800740a:	f00b f979 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800740e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8007412:	4618      	mov	r0, r3
 8007414:	ee09 3a10 	vmov	s18, r3
 8007418:	f000 fe82 	bl	8008120 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800741c:	4a83      	ldr	r2, [pc, #524]	; (800762c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800741e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007422:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007426:	4a82      	ldr	r2, [pc, #520]	; (8007630 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007428:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800742c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007430:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007434:	f00c f820 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007438:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800743c:	462a      	mov	r2, r5
 800743e:	9300      	str	r3, [sp, #0]
 8007440:	4629      	mov	r1, r5
 8007442:	23f0      	movs	r3, #240	; 0xf0
 8007444:	4658      	mov	r0, fp
 8007446:	f7fb f83f 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800744a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800744c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007450:	66a3      	str	r3, [r4, #104]	; 0x68
 8007452:	4659      	mov	r1, fp
 8007454:	4630      	mov	r0, r6
 8007456:	f008 fa83 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800745a:	462a      	mov	r2, r5
 800745c:	4629      	mov	r1, r5
 800745e:	4650      	mov	r0, sl
 8007460:	f7fb f825 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007464:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007466:	a90a      	add	r1, sp, #40	; 0x28
 8007468:	4650      	mov	r0, sl
 800746a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800746e:	f00b f806 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007472:	4651      	mov	r1, sl
 8007474:	4630      	mov	r0, r6
 8007476:	f008 fa73 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800747a:	230a      	movs	r3, #10
 800747c:	9300      	str	r3, [sp, #0]
 800747e:	2232      	movs	r2, #50	; 0x32
 8007480:	23f0      	movs	r3, #240	; 0xf0
 8007482:	4629      	mov	r1, r5
 8007484:	4638      	mov	r0, r7
 8007486:	f7fb f81f 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800748a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800748e:	22a0      	movs	r2, #160	; 0xa0
 8007490:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007494:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007498:	9b03      	ldr	r3, [sp, #12]
 800749a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800749e:	4611      	mov	r1, r2
 80074a0:	4638      	mov	r0, r7
 80074a2:	f009 ffcb 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80074a6:	22a0      	movs	r2, #160	; 0xa0
 80074a8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80074ac:	4638      	mov	r0, r7
 80074ae:	f009 ffd0 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80074b2:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80074b6:	2b20      	cmp	r3, #32
 80074b8:	d005      	beq.n	80074c6 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80074ba:	2320      	movs	r3, #32
 80074bc:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80074c0:	4638      	mov	r0, r7
 80074c2:	f009 fec5 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80074c6:	4638      	mov	r0, r7
 80074c8:	2101      	movs	r1, #1
 80074ca:	f009 ffcd 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80074ce:	4639      	mov	r1, r7
 80074d0:	4630      	mov	r0, r6
 80074d2:	ad04      	add	r5, sp, #16
 80074d4:	f008 fa44 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80074d8:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80074dc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80074e0:	2223      	movs	r2, #35	; 0x23
 80074e2:	4648      	mov	r0, r9
 80074e4:	2145      	movs	r1, #69	; 0x45
 80074e6:	f7fa ffe2 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80074ea:	4649      	mov	r1, r9
 80074ec:	4628      	mov	r0, r5
        color = newColor;
 80074ee:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80074f2:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80074f6:	f00a f94d 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80074fe:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8007502:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007506:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007634 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 800750a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800750e:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007510:	a90a      	add	r1, sp, #40	; 0x28
 8007512:	4648      	mov	r0, r9
 8007514:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007518:	f00a fbd6 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800751c:	4649      	mov	r1, r9
 800751e:	4630      	mov	r0, r6
 8007520:	f008 fa1e 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007524:	223c      	movs	r2, #60	; 0x3c
 8007526:	4640      	mov	r0, r8
 8007528:	211f      	movs	r1, #31
 800752a:	f7fa ffc0 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 800752e:	4641      	mov	r1, r8
 8007530:	4628      	mov	r0, r5
        color = newColor;
 8007532:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007536:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 800753a:	f00a f92b 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800753e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007542:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007546:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800754a:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 800754c:	a90a      	add	r1, sp, #40	; 0x28
 800754e:	4640      	mov	r0, r8
 8007550:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007554:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007558:	f00a fbb6 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800755c:	4641      	mov	r1, r8
 800755e:	4630      	mov	r0, r6
 8007560:	f008 f9fe 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007564:	ee18 0a10 	vmov	r0, s16
 8007568:	220c      	movs	r2, #12
 800756a:	2136      	movs	r1, #54	; 0x36
 800756c:	f7fa ff9f 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007570:	ee18 1a10 	vmov	r1, s16
 8007574:	4628      	mov	r0, r5
        color = newColor;
 8007576:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800757a:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800757e:	f00a f909 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007582:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007586:	ee18 3a10 	vmov	r3, s16
 800758a:	333c      	adds	r3, #60	; 0x3c
 800758c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007590:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007592:	ee18 0a10 	vmov	r0, s16
 8007596:	a90a      	add	r1, sp, #40	; 0x28
 8007598:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800759c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80075a0:	f00a fb92 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075a4:	ee18 1a10 	vmov	r1, s16
 80075a8:	4630      	mov	r0, r6
 80075aa:	f008 f9d9 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80075ae:	ee18 0a90 	vmov	r0, s17
 80075b2:	f240 1201 	movw	r2, #257	; 0x101
 80075b6:	2121      	movs	r1, #33	; 0x21
 80075b8:	f7fa ff79 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80075bc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80075be:	aa0a      	add	r2, sp, #40	; 0x28
 80075c0:	a909      	add	r1, sp, #36	; 0x24
 80075c2:	ee18 0a90 	vmov	r0, s17
 80075c6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80075ca:	2302      	movs	r3, #2
 80075cc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80075d0:	f00a fd5f 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80075d4:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80075d6:	ee18 0a90 	vmov	r0, s17
 80075da:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80075de:	f7fa ffbb 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80075e2:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80075e6:	3314      	adds	r3, #20
 80075e8:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80075ec:	ee18 1a90 	vmov	r1, s17
 80075f0:	4630      	mov	r0, r6
        colorPressed = col;
 80075f2:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80075f6:	f008 f9b3 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80075fa:	ee19 0a10 	vmov	r0, s18
 80075fe:	224e      	movs	r2, #78	; 0x4e
 8007600:	4651      	mov	r1, sl
 8007602:	f7fa ff54 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007606:	4630      	mov	r0, r6
 8007608:	ee19 1a10 	vmov	r1, s18
 800760c:	f008 f9a8 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007610:	4620      	mov	r0, r4
 8007612:	b00d      	add	sp, #52	; 0x34
 8007614:	ecbd 8b04 	vpop	{d8-d9}
 8007618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800761c:	0802bcec 	.word	0x0802bcec
 8007620:	0802ca84 	.word	0x0802ca84
 8007624:	0802cc4c 	.word	0x0802cc4c
 8007628:	0802c7b8 	.word	0x0802c7b8
 800762c:	0802bcd4 	.word	0x0802bcd4
 8007630:	080072f3 	.word	0x080072f3
 8007634:	0802a13c 	.word	0x0802a13c

08007638 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007638:	4770      	bx	lr

0800763a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800763a:	4770      	bx	lr

0800763c <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800763c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800763e:	68c2      	ldr	r2, [r0, #12]
 8007640:	6844      	ldr	r4, [r0, #4]
 8007642:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007644:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007646:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800764a:	07d2      	lsls	r2, r2, #31
 800764c:	bf48      	it	mi
 800764e:	5962      	ldrmi	r2, [r4, r5]
 8007650:	689b      	ldr	r3, [r3, #8]
    }
 8007652:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007654:	bf48      	it	mi
 8007656:	58d3      	ldrmi	r3, [r2, r3]
 8007658:	4718      	bx	r3

0800765a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800765a:	6843      	ldr	r3, [r0, #4]
 800765c:	b12b      	cbz	r3, 800766a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800765e:	6883      	ldr	r3, [r0, #8]
 8007660:	b92b      	cbnz	r3, 800766e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007662:	68c0      	ldr	r0, [r0, #12]
 8007664:	f000 0001 	and.w	r0, r0, #1
 8007668:	4770      	bx	lr
 800766a:	4618      	mov	r0, r3
 800766c:	4770      	bx	lr
 800766e:	2001      	movs	r0, #1
    }
 8007670:	4770      	bx	lr

08007672 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007672:	b510      	push	{r4, lr}
 8007674:	2110      	movs	r1, #16
 8007676:	4604      	mov	r4, r0
 8007678:	f020 f969 	bl	802794e <_ZdlPvj>
 800767c:	4620      	mov	r0, r4
 800767e:	bd10      	pop	{r4, pc}

08007680 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007680:	b510      	push	{r4, lr}
 8007682:	4b03      	ldr	r3, [pc, #12]	; (8007690 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007684:	6003      	str	r3, [r0, #0]
 8007686:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007688:	f00b ff00 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800768c:	4620      	mov	r0, r4
 800768e:	bd10      	pop	{r4, pc}
 8007690:	0802bd38 	.word	0x0802bd38

08007694 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007694:	b507      	push	{r0, r1, r2, lr}
 8007696:	4b07      	ldr	r3, [pc, #28]	; (80076b4 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007698:	6003      	str	r3, [r0, #0]
 800769a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800769c:	f00b fef6 	bl	801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076a0:	9801      	ldr	r0, [sp, #4]
 80076a2:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80076a6:	f020 f952 	bl	802794e <_ZdlPvj>
 80076aa:	9801      	ldr	r0, [sp, #4]
 80076ac:	b003      	add	sp, #12
 80076ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80076b2:	bf00      	nop
 80076b4:	0802bd38 	.word	0x0802bd38

080076b8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80076b8:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 80076bc:	4288      	cmp	r0, r1
{
 80076be:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80076c0:	d105      	bne.n	80076ce <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80076c2:	f00d fbe5 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 80076c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 80076ca:	f7fb bff7 	b.w	80036bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 80076ce:	bd08      	pop	{r3, pc}

080076d0 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 80076d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076d4:	ed2d 8b04 	vpush	{d8-d9}
 80076d8:	4604      	mov	r4, r0
 80076da:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80076dc:	46a3      	mov	fp, r4
 80076de:	2500      	movs	r5, #0
 80076e0:	f00f f856 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 80076e4:	4bd1      	ldr	r3, [pc, #836]	; (8007a2c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80076e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80076e8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80076ec:	2226      	movs	r2, #38	; 0x26
 80076ee:	4629      	mov	r1, r5
 80076f0:	4658      	mov	r0, fp
 80076f2:	f021 f922 	bl	802893a <memset>
 80076f6:	4658      	mov	r0, fp
 80076f8:	f7fa fefa 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 80076fc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007700:	26ff      	movs	r6, #255	; 0xff
 8007702:	4bcb      	ldr	r3, [pc, #812]	; (8007a30 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007704:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007706:	2226      	movs	r2, #38	; 0x26
 8007708:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800770c:	4629      	mov	r1, r5
 800770e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007712:	4650      	mov	r0, sl
 8007714:	66a5      	str	r5, [r4, #104]	; 0x68
 8007716:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800771a:	f021 f90e 	bl	802893a <memset>
 800771e:	4650      	mov	r0, sl
 8007720:	f7fa fee6 	bl	80024f0 <_ZN8touchgfx6WidgetC1Ev>
 8007724:	4bc3      	ldr	r3, [pc, #780]	; (8007a34 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007726:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007728:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800772c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007730:	a90a      	add	r1, sp, #40	; 0x28
 8007732:	4650      	mov	r0, sl
 8007734:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007738:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800773c:	f00a fe9f 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007740:	4648      	mov	r0, r9
 8007742:	f7fa fee7 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 8007746:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800774a:	4bbb      	ldr	r3, [pc, #748]	; (8007a38 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 800774c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007750:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007754:	4638      	mov	r0, r7
 8007756:	f009 fd5b 	bl	8011210 <_ZN8touchgfx4LineC1Ev>
 800775a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800775e:	4618      	mov	r0, r3
 8007760:	9303      	str	r3, [sp, #12]
 8007762:	f7f9 fdad 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007766:	4bb5      	ldr	r3, [pc, #724]	; (8007a3c <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007768:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800776c:	3324      	adds	r3, #36	; 0x24
 800776e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007772:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007776:	4618      	mov	r0, r3
 8007778:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800777c:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007780:	ee09 3a10 	vmov	s18, r3
 8007784:	f00a ffbc 	bl	8012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007788:	4640      	mov	r0, r8
 800778a:	f7fa fec3 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800778e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007792:	4618      	mov	r0, r3
 8007794:	ee08 3a10 	vmov	s16, r3
 8007798:	f7fa febc 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
 800779c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80077a0:	4618      	mov	r0, r3
 80077a2:	ee08 3a90 	vmov	s17, r3
 80077a6:	f7fa feb5 	bl	8002514 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80077aa:	4aa5      	ldr	r2, [pc, #660]	; (8007a40 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80077ac:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80077b0:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 80077b4:	4aa3      	ldr	r2, [pc, #652]	; (8007a44 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80077b6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80077ba:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 80077be:	f504 7024 	add.w	r0, r4, #656	; 0x290
 80077c2:	f00b fe59 	bl	8013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80077c6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80077ca:	462a      	mov	r2, r5
 80077cc:	4658      	mov	r0, fp
 80077ce:	9300      	str	r3, [sp, #0]
 80077d0:	4629      	mov	r1, r5
 80077d2:	23f0      	movs	r3, #240	; 0xf0
 80077d4:	f7fa fe78 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077d8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80077da:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80077de:	66a3      	str	r3, [r4, #104]	; 0x68
 80077e0:	4659      	mov	r1, fp
 80077e2:	4630      	mov	r0, r6
 80077e4:	f008 f8bc 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80077e8:	462a      	mov	r2, r5
 80077ea:	4650      	mov	r0, sl
 80077ec:	4629      	mov	r1, r5
 80077ee:	f7fa fe5e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80077f2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80077f4:	4650      	mov	r0, sl
 80077f6:	a90a      	add	r1, sp, #40	; 0x28
 80077f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077fc:	f00a fe3f 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007800:	4651      	mov	r1, sl
 8007802:	4630      	mov	r0, r6
 8007804:	f008 f8ac 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007808:	f44f 729a 	mov.w	r2, #308	; 0x134
 800780c:	2156      	movs	r1, #86	; 0x56
 800780e:	4648      	mov	r0, r9
 8007810:	f7fa fe4d 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007814:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007818:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800781c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007820:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007824:	4650      	mov	r0, sl
 8007826:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800782a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800782e:	4649      	mov	r1, r9
 8007830:	4798      	blx	r3
 8007832:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007836:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800783a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800783e:	4b82      	ldr	r3, [pc, #520]	; (8007a48 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007840:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007842:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007846:	b92b      	cbnz	r3, 8007854 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007848:	4b80      	ldr	r3, [pc, #512]	; (8007a4c <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 800784a:	4a81      	ldr	r2, [pc, #516]	; (8007a50 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 800784c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800784e:	4881      	ldr	r0, [pc, #516]	; (8007a54 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007850:	f020 fe6e 	bl	8028530 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007854:	4b80      	ldr	r3, [pc, #512]	; (8007a58 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007856:	881b      	ldrh	r3, [r3, #0]
 8007858:	2b12      	cmp	r3, #18
 800785a:	d803      	bhi.n	8007864 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 800785c:	4b7f      	ldr	r3, [pc, #508]	; (8007a5c <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 800785e:	4a7c      	ldr	r2, [pc, #496]	; (8007a50 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007860:	2161      	movs	r1, #97	; 0x61
 8007862:	e7f4      	b.n	800784e <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007864:	4b7e      	ldr	r3, [pc, #504]	; (8007a60 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007866:	2112      	movs	r1, #18
 8007868:	6818      	ldr	r0, [r3, #0]
 800786a:	f000 fb1b 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 800786e:	4a7d      	ldr	r2, [pc, #500]	; (8007a64 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007870:	4603      	mov	r3, r0
 8007872:	2104      	movs	r1, #4
 8007874:	4650      	mov	r0, sl
 8007876:	f010 fc6f 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800787a:	4648      	mov	r0, r9
        wc1 = value;
 800787c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007880:	f00a fa02 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007884:	4b78      	ldr	r3, [pc, #480]	; (8007a68 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007886:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007888:	a90a      	add	r1, sp, #40	; 0x28
 800788a:	2313      	movs	r3, #19
 800788c:	4648      	mov	r0, r9
 800788e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007892:	f00a fa19 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007896:	4649      	mov	r1, r9
 8007898:	4630      	mov	r0, r6
 800789a:	f008 f861 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800789e:	230a      	movs	r3, #10
 80078a0:	9300      	str	r3, [sp, #0]
 80078a2:	2232      	movs	r2, #50	; 0x32
 80078a4:	23f0      	movs	r3, #240	; 0xf0
 80078a6:	4629      	mov	r1, r5
 80078a8:	4638      	mov	r0, r7
 80078aa:	f7fa fe0d 	bl	80024c8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80078ae:	9b03      	ldr	r3, [sp, #12]
 80078b0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80078b4:	22a0      	movs	r2, #160	; 0xa0
 80078b6:	4611      	mov	r1, r2
 80078b8:	4638      	mov	r0, r7
 80078ba:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80078be:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80078c2:	f009 fdbb 	bl	801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80078c6:	22a0      	movs	r2, #160	; 0xa0
 80078c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80078cc:	4638      	mov	r0, r7
 80078ce:	f009 fdc0 	bl	8011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80078d2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80078d6:	2b20      	cmp	r3, #32
 80078d8:	d005      	beq.n	80078e6 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 80078da:	2320      	movs	r3, #32
 80078dc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80078e0:	4638      	mov	r0, r7
 80078e2:	f009 fcb5 	bl	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80078e6:	4638      	mov	r0, r7
 80078e8:	2101      	movs	r1, #1
 80078ea:	f009 fdbd 	bl	8011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078ee:	4639      	mov	r1, r7
 80078f0:	4630      	mov	r0, r6
 80078f2:	f008 f835 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80078f6:	ee19 0a10 	vmov	r0, s18
 80078fa:	22f0      	movs	r2, #240	; 0xf0
 80078fc:	2121      	movs	r1, #33	; 0x21
 80078fe:	f7fa fdd6 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007902:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007904:	aa0a      	add	r2, sp, #40	; 0x28
 8007906:	a909      	add	r1, sp, #36	; 0x24
 8007908:	ee19 0a10 	vmov	r0, s18
 800790c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007910:	2302      	movs	r3, #2
 8007912:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007916:	f00a fbbc 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800791a:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 800791c:	ee19 0a10 	vmov	r0, s18
 8007920:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007924:	f7fa fe18 	bl	8002558 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007928:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 800792c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007930:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007934:	ee19 1a10 	vmov	r1, s18
 8007938:	4630      	mov	r0, r6
        colorPressed = col;
 800793a:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 800793e:	ad04      	add	r5, sp, #16
 8007940:	f008 f80e 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007944:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007948:	225b      	movs	r2, #91	; 0x5b
 800794a:	4640      	mov	r0, r8
 800794c:	2105      	movs	r1, #5
 800794e:	f7fa fdae 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007952:	4641      	mov	r1, r8
 8007954:	4628      	mov	r0, r5
        color = newColor;
 8007956:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800795a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800795e:	f009 ff19 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007962:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007966:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800796a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800796e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007a68 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007972:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007976:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007978:	a90a      	add	r1, sp, #40	; 0x28
 800797a:	4640      	mov	r0, r8
 800797c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007980:	f00a f9a2 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007984:	4641      	mov	r1, r8
 8007986:	4630      	mov	r0, r6
 8007988:	f007 ffea 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800798c:	ee18 0a10 	vmov	r0, s16
 8007990:	2223      	movs	r2, #35	; 0x23
 8007992:	2145      	movs	r1, #69	; 0x45
 8007994:	f7fa fd8b 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007998:	ee18 1a10 	vmov	r1, s16
 800799c:	4628      	mov	r0, r5
        color = newColor;
 800799e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80079a2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80079a6:	f009 fef5 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079aa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079ae:	ee18 3a10 	vmov	r3, s16
 80079b2:	333c      	adds	r3, #60	; 0x3c
 80079b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079b8:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 80079ba:	ee18 0a10 	vmov	r0, s16
 80079be:	a90a      	add	r1, sp, #40	; 0x28
 80079c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079c4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80079c8:	f00a f97e 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079cc:	ee18 1a10 	vmov	r1, s16
 80079d0:	4630      	mov	r0, r6
 80079d2:	f007 ffc5 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80079d6:	ee18 0a90 	vmov	r0, s17
 80079da:	220c      	movs	r2, #12
 80079dc:	2136      	movs	r1, #54	; 0x36
 80079de:	f7fa fd66 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80079e2:	ee18 1a90 	vmov	r1, s17
 80079e6:	4628      	mov	r0, r5
        color = newColor;
 80079e8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80079ec:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80079f0:	f009 fed0 	bl	8011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079f8:	ee18 3a90 	vmov	r3, s17
 80079fc:	333c      	adds	r3, #60	; 0x3c
 80079fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a02:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007a04:	ee18 0a90 	vmov	r0, s17
 8007a08:	a90a      	add	r1, sp, #40	; 0x28
 8007a0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a0e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a12:	f00a f959 	bl	8011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a16:	4630      	mov	r0, r6
 8007a18:	ee18 1a90 	vmov	r1, s17
 8007a1c:	f007 ffa0 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a20:	4620      	mov	r0, r4
 8007a22:	b00d      	add	sp, #52	; 0x34
 8007a24:	ecbd 8b04 	vpop	{d8-d9}
 8007a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a2c:	0802bd38 	.word	0x0802bd38
 8007a30:	0802ca84 	.word	0x0802ca84
 8007a34:	0802cc4c 	.word	0x0802cc4c
 8007a38:	0802a14c 	.word	0x0802a14c
 8007a3c:	0802c7b8 	.word	0x0802c7b8
 8007a40:	0802bd20 	.word	0x0802bd20
 8007a44:	080076b9 	.word	0x080076b9
 8007a48:	20013824 	.word	0x20013824
 8007a4c:	08029f8c 	.word	0x08029f8c
 8007a50:	0802a08e 	.word	0x0802a08e
 8007a54:	0802a009 	.word	0x0802a009
 8007a58:	20013828 	.word	0x20013828
 8007a5c:	0802a050 	.word	0x0802a050
 8007a60:	20013830 	.word	0x20013830
 8007a64:	0802a0c6 	.word	0x0802a0c6
 8007a68:	0802a13c 	.word	0x0802a13c

08007a6c <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007a6c:	4770      	bx	lr

08007a6e <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007a6e:	4770      	bx	lr

08007a70 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007a70:	b510      	push	{r4, lr}
}
 8007a72:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007a74:	4604      	mov	r4, r0
}
 8007a76:	f01f ff6a 	bl	802794e <_ZdlPvj>
 8007a7a:	4620      	mov	r0, r4
 8007a7c:	bd10      	pop	{r4, pc}
	...

08007a80 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007a80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007a84:	4604      	mov	r4, r0
 8007a86:	4626      	mov	r6, r4
 8007a88:	f00e fe82 	bl	8016790 <_ZN8touchgfx6ScreenC1Ev>
 8007a8c:	2500      	movs	r5, #0
 8007a8e:	4b2e      	ldr	r3, [pc, #184]	; (8007b48 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007a90:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a92:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007a96:	4b2d      	ldr	r3, [pc, #180]	; (8007b4c <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007a98:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007a9a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007a9e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007aa2:	23ff      	movs	r3, #255	; 0xff
 8007aa4:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007aa8:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007aac:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007ab0:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007ab4:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007ab8:	4a25      	ldr	r2, [pc, #148]	; (8007b50 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007aba:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007abe:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007ac2:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007ac4:	a901      	add	r1, sp, #4
 8007ac6:	4638      	mov	r0, r7
 8007ac8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007acc:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007ad0:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007ad4:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007ad8:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007adc:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007ae0:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007ae4:	66a5      	str	r5, [r4, #104]	; 0x68
 8007ae6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007aea:	f00a fcc8 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007aee:	462a      	mov	r2, r5
 8007af0:	4629      	mov	r1, r5
 8007af2:	4630      	mov	r0, r6
 8007af4:	f7fa fcdb 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007af8:	4630      	mov	r0, r6
 8007afa:	21f0      	movs	r1, #240	; 0xf0
 8007afc:	f7f9 fb20 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007b00:	4630      	mov	r0, r6
 8007b02:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007b06:	f7f9 fb1d 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 8007b0a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007b0e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b12:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b14:	4631      	mov	r1, r6
 8007b16:	4640      	mov	r0, r8
 8007b18:	f007 ff22 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007b1c:	462a      	mov	r2, r5
 8007b1e:	4638      	mov	r0, r7
 8007b20:	f06f 0102 	mvn.w	r1, #2
 8007b24:	f7fa fcc3 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8007b28:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007b2a:	a901      	add	r1, sp, #4
 8007b2c:	4638      	mov	r0, r7
 8007b2e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007b32:	f00a fca4 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b36:	4640      	mov	r0, r8
 8007b38:	4639      	mov	r1, r7
 8007b3a:	f007 ff11 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b3e:	4620      	mov	r0, r4
 8007b40:	b002      	add	sp, #8
 8007b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b46:	bf00      	nop
 8007b48:	0802bd6c 	.word	0x0802bd6c
 8007b4c:	0802ca84 	.word	0x0802ca84
 8007b50:	0802cc4c 	.word	0x0802cc4c

08007b54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b54:	4770      	bx	lr
	...

08007b58 <_Z23getFont_verdana_10_4bppv>:
{
 8007b58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b5a:	4d17      	ldr	r5, [pc, #92]	; (8007bb8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007b5c:	682c      	ldr	r4, [r5, #0]
 8007b5e:	f3bf 8f5b 	dmb	ish
 8007b62:	f014 0401 	ands.w	r4, r4, #1
{
 8007b66:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007b68:	d122      	bne.n	8007bb0 <_Z23getFont_verdana_10_4bppv+0x58>
 8007b6a:	4628      	mov	r0, r5
 8007b6c:	f01f fef1 	bl	8027952 <__cxa_guard_acquire>
 8007b70:	b1f0      	cbz	r0, 8007bb0 <_Z23getFont_verdana_10_4bppv+0x58>
 8007b72:	233f      	movs	r3, #63	; 0x3f
 8007b74:	9309      	str	r3, [sp, #36]	; 0x24
 8007b76:	4b11      	ldr	r3, [pc, #68]	; (8007bbc <_Z23getFont_verdana_10_4bppv+0x64>)
 8007b78:	9308      	str	r3, [sp, #32]
 8007b7a:	4b11      	ldr	r3, [pc, #68]	; (8007bc0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007b7c:	9307      	str	r3, [sp, #28]
 8007b7e:	2301      	movs	r3, #1
 8007b80:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007b84:	9304      	str	r3, [sp, #16]
 8007b86:	2304      	movs	r3, #4
 8007b88:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007b8c:	230a      	movs	r3, #10
 8007b8e:	490d      	ldr	r1, [pc, #52]	; (8007bc4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007b90:	9300      	str	r3, [sp, #0]
 8007b92:	225f      	movs	r2, #95	; 0x5f
 8007b94:	230c      	movs	r3, #12
 8007b96:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007b9a:	480b      	ldr	r0, [pc, #44]	; (8007bc8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007b9c:	940a      	str	r4, [sp, #40]	; 0x28
 8007b9e:	9401      	str	r4, [sp, #4]
 8007ba0:	f7fd fa04 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ba4:	4809      	ldr	r0, [pc, #36]	; (8007bcc <_Z23getFont_verdana_10_4bppv+0x74>)
 8007ba6:	f020 fce1 	bl	802856c <atexit>
 8007baa:	4628      	mov	r0, r5
 8007bac:	f01f fedd 	bl	802796a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007bb0:	4805      	ldr	r0, [pc, #20]	; (8007bc8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007bb2:	b00f      	add	sp, #60	; 0x3c
 8007bb4:	bd30      	pop	{r4, r5, pc}
 8007bb6:	bf00      	nop
 8007bb8:	200028ec 	.word	0x200028ec
 8007bbc:	080304c0 	.word	0x080304c0
 8007bc0:	08030620 	.word	0x08030620
 8007bc4:	0802f7a8 	.word	0x0802f7a8
 8007bc8:	200028f0 	.word	0x200028f0
 8007bcc:	08007b55 	.word	0x08007b55

08007bd0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007bd0:	4770      	bx	lr
	...

08007bd4 <_Z23getFont_verdana_12_4bppv>:
{
 8007bd4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007bd6:	4d17      	ldr	r5, [pc, #92]	; (8007c34 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007bd8:	682c      	ldr	r4, [r5, #0]
 8007bda:	f3bf 8f5b 	dmb	ish
 8007bde:	f014 0401 	ands.w	r4, r4, #1
{
 8007be2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007be4:	d122      	bne.n	8007c2c <_Z23getFont_verdana_12_4bppv+0x58>
 8007be6:	4628      	mov	r0, r5
 8007be8:	f01f feb3 	bl	8027952 <__cxa_guard_acquire>
 8007bec:	b1f0      	cbz	r0, 8007c2c <_Z23getFont_verdana_12_4bppv+0x58>
 8007bee:	233f      	movs	r3, #63	; 0x3f
 8007bf0:	9309      	str	r3, [sp, #36]	; 0x24
 8007bf2:	4b11      	ldr	r3, [pc, #68]	; (8007c38 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007bf4:	9308      	str	r3, [sp, #32]
 8007bf6:	4b11      	ldr	r3, [pc, #68]	; (8007c3c <_Z23getFont_verdana_12_4bppv+0x68>)
 8007bf8:	9307      	str	r3, [sp, #28]
 8007bfa:	2301      	movs	r3, #1
 8007bfc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c00:	9304      	str	r3, [sp, #16]
 8007c02:	2304      	movs	r3, #4
 8007c04:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c08:	230c      	movs	r3, #12
 8007c0a:	490d      	ldr	r1, [pc, #52]	; (8007c40 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007c0c:	9300      	str	r3, [sp, #0]
 8007c0e:	2260      	movs	r2, #96	; 0x60
 8007c10:	230f      	movs	r3, #15
 8007c12:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c16:	480b      	ldr	r0, [pc, #44]	; (8007c44 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007c18:	940a      	str	r4, [sp, #40]	; 0x28
 8007c1a:	9401      	str	r4, [sp, #4]
 8007c1c:	f7fd f9c6 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c20:	4809      	ldr	r0, [pc, #36]	; (8007c48 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007c22:	f020 fca3 	bl	802856c <atexit>
 8007c26:	4628      	mov	r0, r5
 8007c28:	f01f fe9f 	bl	802796a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007c2c:	4805      	ldr	r0, [pc, #20]	; (8007c44 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007c2e:	b00f      	add	sp, #60	; 0x3c
 8007c30:	bd30      	pop	{r4, r5, pc}
 8007c32:	bf00      	nop
 8007c34:	2000291c 	.word	0x2000291c
 8007c38:	080304f4 	.word	0x080304f4
 8007c3c:	08030624 	.word	0x08030624
 8007c40:	0802fcdc 	.word	0x0802fcdc
 8007c44:	20002920 	.word	0x20002920
 8007c48:	08007bd1 	.word	0x08007bd1

08007c4c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c4c:	4770      	bx	lr
	...

08007c50 <_Z23getFont_verdana_19_4bppv>:
{
 8007c50:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c52:	4d17      	ldr	r5, [pc, #92]	; (8007cb0 <_Z23getFont_verdana_19_4bppv+0x60>)
 8007c54:	682c      	ldr	r4, [r5, #0]
 8007c56:	f3bf 8f5b 	dmb	ish
 8007c5a:	f014 0401 	ands.w	r4, r4, #1
{
 8007c5e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007c60:	d122      	bne.n	8007ca8 <_Z23getFont_verdana_19_4bppv+0x58>
 8007c62:	4628      	mov	r0, r5
 8007c64:	f01f fe75 	bl	8027952 <__cxa_guard_acquire>
 8007c68:	b1f0      	cbz	r0, 8007ca8 <_Z23getFont_verdana_19_4bppv+0x58>
 8007c6a:	233f      	movs	r3, #63	; 0x3f
 8007c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8007c6e:	4b11      	ldr	r3, [pc, #68]	; (8007cb4 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007c70:	9308      	str	r3, [sp, #32]
 8007c72:	4b11      	ldr	r3, [pc, #68]	; (8007cb8 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007c74:	9307      	str	r3, [sp, #28]
 8007c76:	2301      	movs	r3, #1
 8007c78:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c7c:	9304      	str	r3, [sp, #16]
 8007c7e:	2304      	movs	r3, #4
 8007c80:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c84:	2313      	movs	r3, #19
 8007c86:	490d      	ldr	r1, [pc, #52]	; (8007cbc <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007c88:	9300      	str	r3, [sp, #0]
 8007c8a:	222f      	movs	r2, #47	; 0x2f
 8007c8c:	2317      	movs	r3, #23
 8007c8e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c92:	480b      	ldr	r0, [pc, #44]	; (8007cc0 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007c94:	940a      	str	r4, [sp, #40]	; 0x28
 8007c96:	9401      	str	r4, [sp, #4]
 8007c98:	f7fd f988 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c9c:	4809      	ldr	r0, [pc, #36]	; (8007cc4 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007c9e:	f020 fc65 	bl	802856c <atexit>
 8007ca2:	4628      	mov	r0, r5
 8007ca4:	f01f fe61 	bl	802796a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007ca8:	4805      	ldr	r0, [pc, #20]	; (8007cc0 <_Z23getFont_verdana_19_4bppv+0x70>)
 8007caa:	b00f      	add	sp, #60	; 0x3c
 8007cac:	bd30      	pop	{r4, r5, pc}
 8007cae:	bf00      	nop
 8007cb0:	2000294c 	.word	0x2000294c
 8007cb4:	08030578 	.word	0x08030578
 8007cb8:	08030628 	.word	0x08030628
 8007cbc:	0803021c 	.word	0x0803021c
 8007cc0:	20002950 	.word	0x20002950
 8007cc4:	08007c4d 	.word	0x08007c4d

08007cc8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007cc8:	4770      	bx	lr
	...

08007ccc <_Z23getFont_verdana_40_4bppv>:
{
 8007ccc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007cce:	4d16      	ldr	r5, [pc, #88]	; (8007d28 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007cd0:	682c      	ldr	r4, [r5, #0]
 8007cd2:	f3bf 8f5b 	dmb	ish
 8007cd6:	f014 0401 	ands.w	r4, r4, #1
{
 8007cda:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007cdc:	d120      	bne.n	8007d20 <_Z23getFont_verdana_40_4bppv+0x54>
 8007cde:	4628      	mov	r0, r5
 8007ce0:	f01f fe37 	bl	8027952 <__cxa_guard_acquire>
 8007ce4:	b1e0      	cbz	r0, 8007d20 <_Z23getFont_verdana_40_4bppv+0x54>
 8007ce6:	233f      	movs	r3, #63	; 0x3f
 8007ce8:	9309      	str	r3, [sp, #36]	; 0x24
 8007cea:	4b10      	ldr	r3, [pc, #64]	; (8007d2c <_Z23getFont_verdana_40_4bppv+0x60>)
 8007cec:	9308      	str	r3, [sp, #32]
 8007cee:	4b10      	ldr	r3, [pc, #64]	; (8007d30 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007cf0:	4910      	ldr	r1, [pc, #64]	; (8007d34 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007cf2:	4811      	ldr	r0, [pc, #68]	; (8007d38 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007cf4:	940a      	str	r4, [sp, #40]	; 0x28
 8007cf6:	2201      	movs	r2, #1
 8007cf8:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007cfc:	2304      	movs	r3, #4
 8007cfe:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007d02:	2328      	movs	r3, #40	; 0x28
 8007d04:	9300      	str	r3, [sp, #0]
 8007d06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d0a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007d0e:	9405      	str	r4, [sp, #20]
 8007d10:	f7fd f94c 	bl	8004fac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d14:	4809      	ldr	r0, [pc, #36]	; (8007d3c <_Z23getFont_verdana_40_4bppv+0x70>)
 8007d16:	f020 fc29 	bl	802856c <atexit>
 8007d1a:	4628      	mov	r0, r5
 8007d1c:	f01f fe25 	bl	802796a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007d20:	4805      	ldr	r0, [pc, #20]	; (8007d38 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007d22:	b00f      	add	sp, #60	; 0x3c
 8007d24:	bd30      	pop	{r4, r5, pc}
 8007d26:	bf00      	nop
 8007d28:	2000297c 	.word	0x2000297c
 8007d2c:	0803061c 	.word	0x0803061c
 8007d30:	0803062c 	.word	0x0803062c
 8007d34:	080304b0 	.word	0x080304b0
 8007d38:	20002980 	.word	0x20002980
 8007d3c:	08007cc9 	.word	0x08007cc9

08007d40 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007d40:	2000      	movs	r0, #0
 8007d42:	4770      	bx	lr

08007d44 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007d44:	2000      	movs	r0, #0
 8007d46:	4770      	bx	lr

08007d48 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d48:	b40e      	push	{r1, r2, r3}
 8007d4a:	b503      	push	{r0, r1, lr}
 8007d4c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d4e:	2100      	movs	r1, #0
{
 8007d50:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007d54:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d56:	f00e f859 	bl	8015e0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d5a:	b002      	add	sp, #8
 8007d5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d60:	b003      	add	sp, #12
 8007d62:	4770      	bx	lr

08007d64 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d64:	b40c      	push	{r2, r3}
 8007d66:	b507      	push	{r0, r1, r2, lr}
 8007d68:	ab04      	add	r3, sp, #16
 8007d6a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007d6e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007d70:	f00e f84c 	bl	8015e0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d74:	b003      	add	sp, #12
 8007d76:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d7a:	b002      	add	sp, #8
 8007d7c:	4770      	bx	lr
	...

08007d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007d80:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007d82:	b510      	push	{r4, lr}
 8007d84:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007d86:	b373      	cbz	r3, 8007de6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007d88:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007d8a:	b92b      	cbnz	r3, 8007d98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007d8c:	4b18      	ldr	r3, [pc, #96]	; (8007df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007d8e:	4a19      	ldr	r2, [pc, #100]	; (8007df4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007d90:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007d92:	4819      	ldr	r0, [pc, #100]	; (8007df8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007d94:	f020 fbcc 	bl	8028530 <__assert_func>
            return buffer[pos];
 8007d98:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007d9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007d9e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007da0:	b30b      	cbz	r3, 8007de6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007da2:	f00f fc30 	bl	8017606 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007da6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007da8:	2b01      	cmp	r3, #1
 8007daa:	d803      	bhi.n	8007db4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007dac:	4b13      	ldr	r3, [pc, #76]	; (8007dfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007dae:	4a14      	ldr	r2, [pc, #80]	; (8007e00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007db0:	21cb      	movs	r1, #203	; 0xcb
 8007db2:	e7ee      	b.n	8007d92 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007db4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007db6:	1c53      	adds	r3, r2, #1
 8007db8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007dba:	2b09      	cmp	r3, #9
 8007dbc:	4619      	mov	r1, r3
 8007dbe:	bf88      	it	hi
 8007dc0:	f1a3 010a 	subhi.w	r1, r3, #10
 8007dc4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007dc8:	f640 103f 	movw	r0, #2367	; 0x93f
 8007dcc:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007dce:	4281      	cmp	r1, r0
 8007dd0:	d109      	bne.n	8007de6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007dd2:	2b0a      	cmp	r3, #10
 8007dd4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007dd8:	bf28      	it	cs
 8007dda:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007ddc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007de0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007de2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007de4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007de6:	4620      	mov	r0, r4
}
 8007de8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007dec:	f00f bb0e 	b.w	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007df0:	0802bd98 	.word	0x0802bd98
 8007df4:	0802bda1 	.word	0x0802bda1
 8007df8:	0802be4c 	.word	0x0802be4c
 8007dfc:	0802be96 	.word	0x0802be96
 8007e00:	0802bea4 	.word	0x0802bea4

08007e04 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007e04:	f00f bac9 	b.w	801739a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007e08 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007e08:	b510      	push	{r4, lr}
 8007e0a:	b086      	sub	sp, #24
 8007e0c:	ac02      	add	r4, sp, #8
 8007e0e:	e884 0006 	stmia.w	r4, {r1, r2}
 8007e12:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007e14:	ab0a      	add	r3, sp, #40	; 0x28
 8007e16:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007e18:	9301      	str	r3, [sp, #4]
 8007e1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e1c:	9300      	str	r3, [sp, #0]
 8007e1e:	4621      	mov	r1, r4
 8007e20:	9b08      	ldr	r3, [sp, #32]
 8007e22:	f00c fbb7 	bl	8014594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007e26:	b006      	add	sp, #24
 8007e28:	bd10      	pop	{r4, pc}
	...

08007e2c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007e2c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007e2e:	bb18      	cbnz	r0, 8007e78 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007e30:	4b12      	ldr	r3, [pc, #72]	; (8007e7c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007e32:	4813      	ldr	r0, [pc, #76]	; (8007e80 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007e34:	681c      	ldr	r4, [r3, #0]
 8007e36:	4913      	ldr	r1, [pc, #76]	; (8007e84 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007e38:	b1b4      	cbz	r4, 8007e68 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007e3a:	6822      	ldr	r2, [r4, #0]
 8007e3c:	4422      	add	r2, r4
 8007e3e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007e40:	6862      	ldr	r2, [r4, #4]
 8007e42:	4422      	add	r2, r4
 8007e44:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007e46:	68a2      	ldr	r2, [r4, #8]
 8007e48:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007e4a:	4b0f      	ldr	r3, [pc, #60]	; (8007e88 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007e4c:	2200      	movs	r2, #0
 8007e4e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007e50:	f000 f838 	bl	8007ec4 <_ZN17TypedTextDatabase8getFontsEv>
 8007e54:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007e56:	f000 f833 	bl	8007ec0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007e5a:	4b0c      	ldr	r3, [pc, #48]	; (8007e8c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007e5c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007e5e:	4b0c      	ldr	r3, [pc, #48]	; (8007e90 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007e60:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007e62:	4b0c      	ldr	r3, [pc, #48]	; (8007e94 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007e64:	8018      	strh	r0, [r3, #0]
    }
}
 8007e66:	e007      	b.n	8007e78 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007e68:	4b0b      	ldr	r3, [pc, #44]	; (8007e98 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007e6a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007e6c:	4b0b      	ldr	r3, [pc, #44]	; (8007e9c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007e6e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007e70:	4b0b      	ldr	r3, [pc, #44]	; (8007ea0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007e72:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007e74:	2c00      	cmp	r4, #0
 8007e76:	d1e8      	bne.n	8007e4a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007e78:	bd38      	pop	{r3, r4, r5, pc}
 8007e7a:	bf00      	nop
 8007e7c:	200029ac 	.word	0x200029ac
 8007e80:	200029b0 	.word	0x200029b0
 8007e84:	200029b4 	.word	0x200029b4
 8007e88:	200029b8 	.word	0x200029b8
 8007e8c:	20013824 	.word	0x20013824
 8007e90:	2001382c 	.word	0x2001382c
 8007e94:	20013828 	.word	0x20013828
 8007e98:	08030784 	.word	0x08030784
 8007e9c:	08030630 	.word	0x08030630
 8007ea0:	08030c94 	.word	0x08030c94

08007ea4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007ea4:	4b04      	ldr	r3, [pc, #16]	; (8007eb8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007ea6:	681b      	ldr	r3, [r3, #0]
 8007ea8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007eac:	4b03      	ldr	r3, [pc, #12]	; (8007ebc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007eae:	681b      	ldr	r3, [r3, #0]
}
 8007eb0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007eb4:	4770      	bx	lr
 8007eb6:	bf00      	nop
 8007eb8:	200029b4 	.word	0x200029b4
 8007ebc:	200029b0 	.word	0x200029b0

08007ec0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007ec0:	2055      	movs	r0, #85	; 0x55
 8007ec2:	4770      	bx	lr

08007ec4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007ec4:	4800      	ldr	r0, [pc, #0]	; (8007ec8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007ec6:	4770      	bx	lr
 8007ec8:	200029bc 	.word	0x200029bc

08007ecc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007ecc:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007ece:	f7ff febf 	bl	8007c50 <_Z23getFont_verdana_19_4bppv>
};
 8007ed2:	4c06      	ldr	r4, [pc, #24]	; (8007eec <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007ed4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007ed6:	f7ff fef9 	bl	8007ccc <_Z23getFont_verdana_40_4bppv>
};
 8007eda:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007edc:	f7ff fe3c 	bl	8007b58 <_Z23getFont_verdana_10_4bppv>
};
 8007ee0:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007ee2:	f7ff fe77 	bl	8007bd4 <_Z23getFont_verdana_12_4bppv>
};
 8007ee6:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007ee8:	bd10      	pop	{r4, pc}
 8007eea:	bf00      	nop
 8007eec:	200029bc 	.word	0x200029bc

08007ef0 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007ef0:	4770      	bx	lr

08007ef2 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8007ef2:	3804      	subs	r0, #4
 8007ef4:	4770      	bx	lr

08007ef6 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8007ef6:	4770      	bx	lr

08007ef8 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007ef8:	68c0      	ldr	r0, [r0, #12]
 8007efa:	6803      	ldr	r3, [r0, #0]
 8007efc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007efe:	4718      	bx	r3

08007f00 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007f00:	f1a0 0004 	sub.w	r0, r0, #4
 8007f04:	f7ff bff8 	b.w	8007ef8 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08007f08 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8007f08:	b510      	push	{r4, lr}
 8007f0a:	2110      	movs	r1, #16
 8007f0c:	4604      	mov	r4, r0
 8007f0e:	f01f fd1e 	bl	802794e <_ZdlPvj>
 8007f12:	4620      	mov	r0, r4
 8007f14:	bd10      	pop	{r4, pc}

08007f16 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007f16:	f1a0 0004 	sub.w	r0, r0, #4
 8007f1a:	e7f5      	b.n	8007f08 <_ZN20CalibrationPresenterD0Ev>

08007f1c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007f1c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007f1e:	2200      	movs	r2, #0
 8007f20:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f22:	4a04      	ldr	r2, [pc, #16]	; (8007f34 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007f24:	60c1      	str	r1, [r0, #12]
 8007f26:	f102 0408 	add.w	r4, r2, #8
 8007f2a:	3224      	adds	r2, #36	; 0x24
 8007f2c:	6004      	str	r4, [r0, #0]
 8007f2e:	6042      	str	r2, [r0, #4]
}
 8007f30:	bd10      	pop	{r4, pc}
 8007f32:	bf00      	nop
 8007f34:	0802bf78 	.word	0x0802bf78

08007f38 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007f38:	4770      	bx	lr
	...

08007f3c <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007f3c:	b510      	push	{r4, lr}
 8007f3e:	4b03      	ldr	r3, [pc, #12]	; (8007f4c <_ZN15CalibrationViewD1Ev+0x10>)
 8007f40:	6003      	str	r3, [r0, #0]
 8007f42:	4604      	mov	r4, r0
 8007f44:	f7fa fa38 	bl	80023b8 <_ZN19CalibrationViewBaseD1Ev>
 8007f48:	4620      	mov	r0, r4
 8007f4a:	bd10      	pop	{r4, pc}
 8007f4c:	0802bfb4 	.word	0x0802bfb4

08007f50 <_ZN15CalibrationViewD0Ev>:
 8007f50:	b510      	push	{r4, lr}
 8007f52:	4604      	mov	r4, r0
 8007f54:	f7ff fff2 	bl	8007f3c <_ZN15CalibrationViewD1Ev>
 8007f58:	4620      	mov	r0, r4
 8007f5a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007f5e:	f01f fcf6 	bl	802794e <_ZdlPvj>
 8007f62:	4620      	mov	r0, r4
 8007f64:	bd10      	pop	{r4, pc}
	...

08007f68 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007f68:	b510      	push	{r4, lr}
 8007f6a:	4604      	mov	r4, r0
 8007f6c:	f7fa fb38 	bl	80025e0 <_ZN19CalibrationViewBaseC1Ev>
 8007f70:	4b01      	ldr	r3, [pc, #4]	; (8007f78 <_ZN15CalibrationViewC1Ev+0x10>)
 8007f72:	6023      	str	r3, [r4, #0]
}
 8007f74:	4620      	mov	r0, r4
 8007f76:	bd10      	pop	{r4, pc}
 8007f78:	0802bfb4 	.word	0x0802bfb4

08007f7c <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007f7c:	f7fa b9e9 	b.w	8002352 <_ZN19CalibrationViewBase11setupScreenEv>

08007f80 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8007f80:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f82:	4a0a      	ldr	r2, [pc, #40]	; (8007fac <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8007f84:	4605      	mov	r5, r0
 8007f86:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f88:	460b      	mov	r3, r1
 8007f8a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007f8e:	2104      	movs	r1, #4
 8007f90:	f010 f8e2 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007f94:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007f98:	f00e f862 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007f9c:	b92c      	cbnz	r4, 8007faa <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8007f9e:	f00c ff77 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007fa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007fa6:	f7fb bc79 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007faa:	bd38      	pop	{r3, r4, r5, pc}
 8007fac:	0802bfa8 	.word	0x0802bfa8

08007fb0 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8007fb0:	4770      	bx	lr

08007fb2 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8007fb2:	3804      	subs	r0, #4
 8007fb4:	4770      	bx	lr

08007fb6 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8007fb6:	4770      	bx	lr

08007fb8 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8007fb8:	4770      	bx	lr

08007fba <_ZN25Calibration_HallPresenterD0Ev>:
 8007fba:	b510      	push	{r4, lr}
 8007fbc:	2110      	movs	r1, #16
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	f01f fcc5 	bl	802794e <_ZdlPvj>
 8007fc4:	4620      	mov	r0, r4
 8007fc6:	bd10      	pop	{r4, pc}

08007fc8 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8007fc8:	f1a0 0004 	sub.w	r0, r0, #4
 8007fcc:	e7f5      	b.n	8007fba <_ZN25Calibration_HallPresenterD0Ev>

08007fce <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8007fce:	4770      	bx	lr

08007fd0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8007fd0:	b510      	push	{r4, lr}
 8007fd2:	2200      	movs	r2, #0
 8007fd4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007fd6:	4a04      	ldr	r2, [pc, #16]	; (8007fe8 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8007fd8:	60c1      	str	r1, [r0, #12]
 8007fda:	f102 0408 	add.w	r4, r2, #8
 8007fde:	3224      	adds	r2, #36	; 0x24
 8007fe0:	6004      	str	r4, [r0, #0]
 8007fe2:	6042      	str	r2, [r0, #4]
}
 8007fe4:	bd10      	pop	{r4, pc}
 8007fe6:	bf00      	nop
 8007fe8:	0802bfe4 	.word	0x0802bfe4

08007fec <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8007fec:	4770      	bx	lr

08007fee <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8007fee:	4770      	bx	lr

08007ff0 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8007ff0:	b510      	push	{r4, lr}
 8007ff2:	4b03      	ldr	r3, [pc, #12]	; (8008000 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8007ff4:	6003      	str	r3, [r0, #0]
 8007ff6:	4604      	mov	r4, r0
 8007ff8:	f7fa fd36 	bl	8002a68 <_ZN24Calibration_HallViewBaseD1Ev>
 8007ffc:	4620      	mov	r0, r4
 8007ffe:	bd10      	pop	{r4, pc}
 8008000:	0802c01c 	.word	0x0802c01c

08008004 <_ZN20Calibration_HallViewD0Ev>:
 8008004:	b510      	push	{r4, lr}
 8008006:	4604      	mov	r4, r0
 8008008:	f7ff fff2 	bl	8007ff0 <_ZN20Calibration_HallViewD1Ev>
 800800c:	4620      	mov	r0, r4
 800800e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008012:	f01f fc9c 	bl	802794e <_ZdlPvj>
 8008016:	4620      	mov	r0, r4
 8008018:	bd10      	pop	{r4, pc}
	...

0800801c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800801c:	b510      	push	{r4, lr}
 800801e:	4604      	mov	r4, r0
 8008020:	f7fa fd4a 	bl	8002ab8 <_ZN24Calibration_HallViewBaseC1Ev>
 8008024:	4b01      	ldr	r3, [pc, #4]	; (800802c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008026:	6023      	str	r3, [r4, #0]
}
 8008028:	4620      	mov	r0, r4
 800802a:	bd10      	pop	{r4, pc}
 800802c:	0802c01c 	.word	0x0802c01c

08008030 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008030:	f7fa bcf6 	b.w	8002a20 <_ZN24Calibration_HallViewBase11setupScreenEv>

08008034 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008034:	4770      	bx	lr

08008036 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008036:	3804      	subs	r0, #4
 8008038:	4770      	bx	lr

0800803a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800803a:	4770      	bx	lr

0800803c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800803c:	4770      	bx	lr

0800803e <_ZN24Calibration_PadPresenterD0Ev>:
 800803e:	b510      	push	{r4, lr}
 8008040:	2110      	movs	r1, #16
 8008042:	4604      	mov	r4, r0
 8008044:	f01f fc83 	bl	802794e <_ZdlPvj>
 8008048:	4620      	mov	r0, r4
 800804a:	bd10      	pop	{r4, pc}

0800804c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800804c:	f1a0 0004 	sub.w	r0, r0, #4
 8008050:	e7f5      	b.n	800803e <_ZN24Calibration_PadPresenterD0Ev>

08008052 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008052:	4770      	bx	lr

08008054 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008054:	b510      	push	{r4, lr}
 8008056:	2200      	movs	r2, #0
 8008058:	6082      	str	r2, [r0, #8]
    : view(v)
 800805a:	4a04      	ldr	r2, [pc, #16]	; (800806c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800805c:	60c1      	str	r1, [r0, #12]
 800805e:	f102 0408 	add.w	r4, r2, #8
 8008062:	3224      	adds	r2, #36	; 0x24
 8008064:	6004      	str	r4, [r0, #0]
 8008066:	6042      	str	r2, [r0, #4]
}
 8008068:	bd10      	pop	{r4, pc}
 800806a:	bf00      	nop
 800806c:	0802c04c 	.word	0x0802c04c

08008070 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008070:	4770      	bx	lr

08008072 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008072:	4770      	bx	lr

08008074 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008074:	b510      	push	{r4, lr}
 8008076:	4b03      	ldr	r3, [pc, #12]	; (8008084 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008078:	6003      	str	r3, [r0, #0]
 800807a:	4604      	mov	r4, r0
 800807c:	f7fa fea4 	bl	8002dc8 <_ZN23Calibration_PadViewBaseD1Ev>
 8008080:	4620      	mov	r0, r4
 8008082:	bd10      	pop	{r4, pc}
 8008084:	0802c084 	.word	0x0802c084

08008088 <_ZN19Calibration_PadViewD0Ev>:
 8008088:	b510      	push	{r4, lr}
 800808a:	4604      	mov	r4, r0
 800808c:	f7ff fff2 	bl	8008074 <_ZN19Calibration_PadViewD1Ev>
 8008090:	4620      	mov	r0, r4
 8008092:	f241 015c 	movw	r1, #4188	; 0x105c
 8008096:	f01f fc5a 	bl	802794e <_ZdlPvj>
 800809a:	4620      	mov	r0, r4
 800809c:	bd10      	pop	{r4, pc}
	...

080080a0 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 80080a0:	b510      	push	{r4, lr}
 80080a2:	4604      	mov	r4, r0
 80080a4:	f7fa feb8 	bl	8002e18 <_ZN23Calibration_PadViewBaseC1Ev>
 80080a8:	4b01      	ldr	r3, [pc, #4]	; (80080b0 <_ZN19Calibration_PadViewC1Ev+0x10>)
 80080aa:	6023      	str	r3, [r4, #0]
}
 80080ac:	4620      	mov	r0, r4
 80080ae:	bd10      	pop	{r4, pc}
 80080b0:	0802c084 	.word	0x0802c084

080080b4 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80080b4:	f7fa be64 	b.w	8002d80 <_ZN23Calibration_PadViewBase11setupScreenEv>

080080b8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80080b8:	4770      	bx	lr

080080ba <_ZN19FrontendApplicationD0Ev>:
 80080ba:	b510      	push	{r4, lr}
 80080bc:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80080c0:	4604      	mov	r4, r0
 80080c2:	f01f fc44 	bl	802794e <_ZdlPvj>
 80080c6:	4620      	mov	r0, r4
 80080c8:	bd10      	pop	{r4, pc}

080080ca <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80080ca:	b510      	push	{r4, lr}
 80080cc:	4604      	mov	r4, r0
    {
        model.tick();
 80080ce:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80080d2:	f000 faf5 	bl	80086c0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80080d6:	4620      	mov	r0, r4
    }
 80080d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80080dc:	f00c bf9c 	b.w	8015018 <_ZN8touchgfx11Application15handleTickEventEv>

080080e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80080e0:	b510      	push	{r4, lr}
 80080e2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80080e4:	f7fb faaa 	bl	800363c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80080e8:	4b01      	ldr	r3, [pc, #4]	; (80080f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80080ea:	6023      	str	r3, [r4, #0]
{

}
 80080ec:	4620      	mov	r0, r4
 80080ee:	bd10      	pop	{r4, pc}
 80080f0:	0802c0bc 	.word	0x0802c0bc

080080f4 <_ZN17Gauge_with_ValuesD1Ev>:
 80080f4:	b510      	push	{r4, lr}
 80080f6:	4b03      	ldr	r3, [pc, #12]	; (8008104 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80080f8:	6003      	str	r3, [r0, #0]
 80080fa:	4604      	mov	r4, r0
 80080fc:	f7fc fda4 	bl	8004c48 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8008100:	4620      	mov	r0, r4
 8008102:	bd10      	pop	{r4, pc}
 8008104:	0802c110 	.word	0x0802c110

08008108 <_ZN17Gauge_with_ValuesD0Ev>:
 8008108:	b510      	push	{r4, lr}
 800810a:	4604      	mov	r4, r0
 800810c:	f7ff fff2 	bl	80080f4 <_ZN17Gauge_with_ValuesD1Ev>
 8008110:	4620      	mov	r0, r4
 8008112:	f44f 7162 	mov.w	r1, #904	; 0x388
 8008116:	f01f fc1a 	bl	802794e <_ZdlPvj>
 800811a:	4620      	mov	r0, r4
 800811c:	bd10      	pop	{r4, pc}
	...

08008120 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8008120:	b510      	push	{r4, lr}
 8008122:	4604      	mov	r4, r0
 8008124:	f7fc fd9a 	bl	8004c5c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8008128:	4b01      	ldr	r3, [pc, #4]	; (8008130 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 800812a:	6023      	str	r3, [r4, #0]
{

}
 800812c:	4620      	mov	r0, r4
 800812e:	bd10      	pop	{r4, pc}
 8008130:	0802c110 	.word	0x0802c110

08008134 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008134:	f7fc bd89 	b.w	8004c4a <_ZN21Gauge_with_ValuesBase10initializeEv>

08008138 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008138:	4770      	bx	lr

0800813a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800813a:	3804      	subs	r0, #4
 800813c:	4770      	bx	lr

0800813e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800813e:	4770      	bx	lr

08008140 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008140:	68c0      	ldr	r0, [r0, #12]
 8008142:	6803      	ldr	r3, [r0, #0]
 8008144:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008146:	4718      	bx	r3

08008148 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008148:	f1a0 0004 	sub.w	r0, r0, #4
 800814c:	f7ff bff8 	b.w	8008140 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008150 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008150:	b510      	push	{r4, lr}
 8008152:	2110      	movs	r1, #16
 8008154:	4604      	mov	r4, r0
 8008156:	f01f fbfa 	bl	802794e <_ZdlPvj>
 800815a:	4620      	mov	r0, r4
 800815c:	bd10      	pop	{r4, pc}

0800815e <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800815e:	f1a0 0004 	sub.w	r0, r0, #4
 8008162:	e7f5      	b.n	8008150 <_ZN18Main_MenuPresenterD0Ev>

08008164 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008164:	b510      	push	{r4, lr}
 8008166:	2200      	movs	r2, #0
 8008168:	6082      	str	r2, [r0, #8]
    : view(v)
 800816a:	4a04      	ldr	r2, [pc, #16]	; (800817c <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800816c:	60c1      	str	r1, [r0, #12]
 800816e:	f102 0408 	add.w	r4, r2, #8
 8008172:	3224      	adds	r2, #36	; 0x24
 8008174:	6004      	str	r4, [r0, #0]
 8008176:	6042      	str	r2, [r0, #4]
}
 8008178:	bd10      	pop	{r4, pc}
 800817a:	bf00      	nop
 800817c:	0802c19c 	.word	0x0802c19c

08008180 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008180:	4770      	bx	lr
	...

08008184 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008184:	b510      	push	{r4, lr}
 8008186:	4b03      	ldr	r3, [pc, #12]	; (8008194 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008188:	6003      	str	r3, [r0, #0]
 800818a:	4604      	mov	r4, r0
 800818c:	f7fc ff62 	bl	8005054 <_ZN17Main_MenuViewBaseD1Ev>
 8008190:	4620      	mov	r0, r4
 8008192:	bd10      	pop	{r4, pc}
 8008194:	0802c1d4 	.word	0x0802c1d4

08008198 <_ZN13Main_MenuViewD0Ev>:
 8008198:	b510      	push	{r4, lr}
 800819a:	4604      	mov	r4, r0
 800819c:	f7ff fff2 	bl	8008184 <_ZN13Main_MenuViewD1Ev>
 80081a0:	4620      	mov	r0, r4
 80081a2:	f241 117c 	movw	r1, #4476	; 0x117c
 80081a6:	f01f fbd2 	bl	802794e <_ZdlPvj>
 80081aa:	4620      	mov	r0, r4
 80081ac:	bd10      	pop	{r4, pc}
	...

080081b0 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80081b0:	b510      	push	{r4, lr}
 80081b2:	4604      	mov	r4, r0
 80081b4:	f7fc ff98 	bl	80050e8 <_ZN17Main_MenuViewBaseC1Ev>
 80081b8:	4b01      	ldr	r3, [pc, #4]	; (80081c0 <_ZN13Main_MenuViewC1Ev+0x10>)
 80081ba:	6023      	str	r3, [r4, #0]
}
 80081bc:	4620      	mov	r0, r4
 80081be:	bd10      	pop	{r4, pc}
 80081c0:	0802c1d4 	.word	0x0802c1d4

080081c4 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80081c4:	f7fc bf22 	b.w	800500c <_ZN17Main_MenuViewBase11setupScreenEv>

080081c8 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80081c8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80081ca:	4a0a      	ldr	r2, [pc, #40]	; (80081f4 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80081cc:	4605      	mov	r5, r0
 80081ce:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80081d0:	460b      	mov	r3, r1
 80081d2:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80081d6:	2104      	movs	r1, #4
 80081d8:	f00f ffbe 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80081dc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80081e0:	f00d ff3e 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80081e4:	b92c      	cbnz	r4, 80081f2 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80081e6:	f00c fe53 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80081ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80081ee:	f7fb bb55 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80081f2:	bd38      	pop	{r3, r4, r5, pc}
 80081f4:	0802bfa8 	.word	0x0802bfa8

080081f8 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80081f8:	4770      	bx	lr

080081fa <_ZThn4_N20MeasurementPresenterD1Ev>:
 80081fa:	3804      	subs	r0, #4
 80081fc:	4770      	bx	lr

080081fe <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80081fe:	4770      	bx	lr

08008200 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008200:	68c0      	ldr	r0, [r0, #12]
 8008202:	6803      	ldr	r3, [r0, #0]
 8008204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008206:	4718      	bx	r3

08008208 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008208:	f1a0 0004 	sub.w	r0, r0, #4
 800820c:	f7ff bff8 	b.w	8008200 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008210 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008210:	b510      	push	{r4, lr}
 8008212:	2110      	movs	r1, #16
 8008214:	4604      	mov	r4, r0
 8008216:	f01f fb9a 	bl	802794e <_ZdlPvj>
 800821a:	4620      	mov	r0, r4
 800821c:	bd10      	pop	{r4, pc}

0800821e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800821e:	f1a0 0004 	sub.w	r0, r0, #4
 8008222:	e7f5      	b.n	8008210 <_ZN20MeasurementPresenterD0Ev>

08008224 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008224:	b510      	push	{r4, lr}
 8008226:	2200      	movs	r2, #0
 8008228:	6082      	str	r2, [r0, #8]
    : view(v)
 800822a:	4a04      	ldr	r2, [pc, #16]	; (800823c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800822c:	60c1      	str	r1, [r0, #12]
 800822e:	f102 0408 	add.w	r4, r2, #8
 8008232:	3224      	adds	r2, #36	; 0x24
 8008234:	6004      	str	r4, [r0, #0]
 8008236:	6042      	str	r2, [r0, #4]
}
 8008238:	bd10      	pop	{r4, pc}
 800823a:	bf00      	nop
 800823c:	0802c204 	.word	0x0802c204

08008240 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008240:	4770      	bx	lr
	...

08008244 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008244:	b510      	push	{r4, lr}
 8008246:	4b03      	ldr	r3, [pc, #12]	; (8008254 <_ZN15MeasurementViewD1Ev+0x10>)
 8008248:	6003      	str	r3, [r0, #0]
 800824a:	4604      	mov	r4, r0
 800824c:	f7fd f9bc 	bl	80055c8 <_ZN19MeasurementViewBaseD1Ev>
 8008250:	4620      	mov	r0, r4
 8008252:	bd10      	pop	{r4, pc}
 8008254:	0802c23c 	.word	0x0802c23c

08008258 <_ZN15MeasurementViewD0Ev>:
 8008258:	b510      	push	{r4, lr}
 800825a:	4604      	mov	r4, r0
 800825c:	f7ff fff2 	bl	8008244 <_ZN15MeasurementViewD1Ev>
 8008260:	4620      	mov	r0, r4
 8008262:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008266:	f01f fb72 	bl	802794e <_ZdlPvj>
 800826a:	4620      	mov	r0, r4
 800826c:	bd10      	pop	{r4, pc}
	...

08008270 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008270:	b510      	push	{r4, lr}
 8008272:	4604      	mov	r4, r0
 8008274:	f7fd f9e2 	bl	800563c <_ZN19MeasurementViewBaseC1Ev>
 8008278:	4b01      	ldr	r3, [pc, #4]	; (8008280 <_ZN15MeasurementViewC1Ev+0x10>)
 800827a:	6023      	str	r3, [r4, #0]
}
 800827c:	4620      	mov	r0, r4
 800827e:	bd10      	pop	{r4, pc}
 8008280:	0802c23c 	.word	0x0802c23c

08008284 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008284:	f7fd b97c 	b.w	8005580 <_ZN19MeasurementViewBase11setupScreenEv>

08008288 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008288:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800828a:	4a0a      	ldr	r2, [pc, #40]	; (80082b4 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800828c:	4605      	mov	r5, r0
 800828e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008290:	460b      	mov	r3, r1
 8008292:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008296:	2104      	movs	r1, #4
 8008298:	f00f ff5e 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800829c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80082a0:	f00d fede 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80082a4:	b92c      	cbnz	r4, 80082b2 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80082a6:	f00c fdf3 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80082aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80082ae:	f7fb baf5 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80082b2:	bd38      	pop	{r3, r4, r5, pc}
 80082b4:	0802bfa8 	.word	0x0802bfa8

080082b8 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80082b8:	4770      	bx	lr

080082ba <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80082ba:	3804      	subs	r0, #4
 80082bc:	4770      	bx	lr

080082be <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80082be:	4770      	bx	lr

080082c0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80082c0:	68c0      	ldr	r0, [r0, #12]
 80082c2:	6803      	ldr	r3, [r0, #0]
 80082c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082c6:	4718      	bx	r3

080082c8 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80082c8:	f1a0 0004 	sub.w	r0, r0, #4
 80082cc:	f7ff bff8 	b.w	80082c0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080082d0 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80082d0:	b510      	push	{r4, lr}
 80082d2:	2110      	movs	r1, #16
 80082d4:	4604      	mov	r4, r0
 80082d6:	f01f fb3a 	bl	802794e <_ZdlPvj>
 80082da:	4620      	mov	r0, r4
 80082dc:	bd10      	pop	{r4, pc}

080082de <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80082de:	f1a0 0004 	sub.w	r0, r0, #4
 80082e2:	e7f5      	b.n	80082d0 <_ZN29Measurement_AccuratePresenterD0Ev>

080082e4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80082e4:	b510      	push	{r4, lr}
 80082e6:	2200      	movs	r2, #0
 80082e8:	6082      	str	r2, [r0, #8]
    : view(v)
 80082ea:	4a04      	ldr	r2, [pc, #16]	; (80082fc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80082ec:	60c1      	str	r1, [r0, #12]
 80082ee:	f102 0408 	add.w	r4, r2, #8
 80082f2:	3224      	adds	r2, #36	; 0x24
 80082f4:	6004      	str	r4, [r0, #0]
 80082f6:	6042      	str	r2, [r0, #4]
}
 80082f8:	bd10      	pop	{r4, pc}
 80082fa:	bf00      	nop
 80082fc:	0802c26c 	.word	0x0802c26c

08008300 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008300:	4770      	bx	lr
	...

08008304 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008304:	b510      	push	{r4, lr}
 8008306:	4b03      	ldr	r3, [pc, #12]	; (8008314 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008308:	6003      	str	r3, [r0, #0]
 800830a:	4604      	mov	r4, r0
 800830c:	f7fd fbde 	bl	8005acc <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008310:	4620      	mov	r0, r4
 8008312:	bd10      	pop	{r4, pc}
 8008314:	0802c2a4 	.word	0x0802c2a4

08008318 <_ZN24Measurement_AccurateViewD0Ev>:
 8008318:	b510      	push	{r4, lr}
 800831a:	4604      	mov	r4, r0
 800831c:	f7ff fff2 	bl	8008304 <_ZN24Measurement_AccurateViewD1Ev>
 8008320:	4620      	mov	r0, r4
 8008322:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008326:	f01f fb12 	bl	802794e <_ZdlPvj>
 800832a:	4620      	mov	r0, r4
 800832c:	bd10      	pop	{r4, pc}
	...

08008330 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008330:	b510      	push	{r4, lr}
 8008332:	4604      	mov	r4, r0
 8008334:	f7fd fc04 	bl	8005b40 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008338:	4b01      	ldr	r3, [pc, #4]	; (8008340 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800833a:	6023      	str	r3, [r4, #0]
}
 800833c:	4620      	mov	r0, r4
 800833e:	bd10      	pop	{r4, pc}
 8008340:	0802c2a4 	.word	0x0802c2a4

08008344 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008344:	f7fd bb9e 	b.w	8005a84 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008348 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008348:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800834a:	4a0a      	ldr	r2, [pc, #40]	; (8008374 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800834c:	4605      	mov	r5, r0
 800834e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008350:	460b      	mov	r3, r1
 8008352:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008356:	2104      	movs	r1, #4
 8008358:	f00f fefe 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800835c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008360:	f00d fe7e 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008364:	b92c      	cbnz	r4, 8008372 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008366:	f00c fd93 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800836a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800836e:	f7fb ba95 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008372:	bd38      	pop	{r3, r4, r5, pc}
 8008374:	0802bfa8 	.word	0x0802bfa8

08008378 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008378:	4770      	bx	lr

0800837a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800837a:	3804      	subs	r0, #4
 800837c:	4770      	bx	lr

0800837e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800837e:	4770      	bx	lr

08008380 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008380:	4770      	bx	lr

08008382 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008382:	b510      	push	{r4, lr}
 8008384:	2110      	movs	r1, #16
 8008386:	4604      	mov	r4, r0
 8008388:	f01f fae1 	bl	802794e <_ZdlPvj>
 800838c:	4620      	mov	r0, r4
 800838e:	bd10      	pop	{r4, pc}

08008390 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008390:	f1a0 0004 	sub.w	r0, r0, #4
 8008394:	e7f5      	b.n	8008382 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008396 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008396:	4770      	bx	lr

08008398 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008398:	b510      	push	{r4, lr}
 800839a:	2200      	movs	r2, #0
 800839c:	6082      	str	r2, [r0, #8]
    : view(v)
 800839e:	4a04      	ldr	r2, [pc, #16]	; (80083b0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 80083a0:	60c1      	str	r1, [r0, #12]
 80083a2:	f102 0408 	add.w	r4, r2, #8
 80083a6:	3224      	adds	r2, #36	; 0x24
 80083a8:	6004      	str	r4, [r0, #0]
 80083aa:	6042      	str	r2, [r0, #4]
}
 80083ac:	bd10      	pop	{r4, pc}
 80083ae:	bf00      	nop
 80083b0:	0802c2d4 	.word	0x0802c2d4

080083b4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80083b4:	4770      	bx	lr
	...

080083b8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80083b8:	b510      	push	{r4, lr}
 80083ba:	4b03      	ldr	r3, [pc, #12]	; (80083c8 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80083bc:	6003      	str	r3, [r0, #0]
 80083be:	4604      	mov	r4, r0
 80083c0:	f7fd fe10 	bl	8005fe4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80083c4:	4620      	mov	r0, r4
 80083c6:	bd10      	pop	{r4, pc}
 80083c8:	0802c30c 	.word	0x0802c30c

080083cc <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80083cc:	b510      	push	{r4, lr}
 80083ce:	4604      	mov	r4, r0
 80083d0:	f7ff fff2 	bl	80083b8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80083d4:	4620      	mov	r0, r4
 80083d6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80083da:	f01f fab8 	bl	802794e <_ZdlPvj>
 80083de:	4620      	mov	r0, r4
 80083e0:	bd10      	pop	{r4, pc}
	...

080083e4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80083e4:	b510      	push	{r4, lr}
 80083e6:	4604      	mov	r4, r0
 80083e8:	f7fd fe1c 	bl	8006024 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80083ec:	4b01      	ldr	r3, [pc, #4]	; (80083f4 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80083ee:	6023      	str	r3, [r4, #0]
}
 80083f0:	4620      	mov	r0, r4
 80083f2:	bd10      	pop	{r4, pc}
 80083f4:	0802c30c 	.word	0x0802c30c

080083f8 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80083f8:	f7fd bde5 	b.w	8005fc6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080083fc <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80083fc:	4770      	bx	lr

080083fe <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80083fe:	3804      	subs	r0, #4
 8008400:	4770      	bx	lr

08008402 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008402:	4770      	bx	lr

08008404 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008404:	4770      	bx	lr

08008406 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008406:	b510      	push	{r4, lr}
 8008408:	2110      	movs	r1, #16
 800840a:	4604      	mov	r4, r0
 800840c:	f01f fa9f 	bl	802794e <_ZdlPvj>
 8008410:	4620      	mov	r0, r4
 8008412:	bd10      	pop	{r4, pc}

08008414 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008414:	f1a0 0004 	sub.w	r0, r0, #4
 8008418:	e7f5      	b.n	8008406 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800841a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800841a:	4770      	bx	lr

0800841c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800841c:	b510      	push	{r4, lr}
 800841e:	2200      	movs	r2, #0
 8008420:	6082      	str	r2, [r0, #8]
    : view(v)
 8008422:	4a04      	ldr	r2, [pc, #16]	; (8008434 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008424:	60c1      	str	r1, [r0, #12]
 8008426:	f102 0408 	add.w	r4, r2, #8
 800842a:	3224      	adds	r2, #36	; 0x24
 800842c:	6004      	str	r4, [r0, #0]
 800842e:	6042      	str	r2, [r0, #4]
}
 8008430:	bd10      	pop	{r4, pc}
 8008432:	bf00      	nop
 8008434:	0802c338 	.word	0x0802c338

08008438 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008438:	4770      	bx	lr
	...

0800843c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800843c:	b510      	push	{r4, lr}
 800843e:	4b03      	ldr	r3, [pc, #12]	; (800844c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008440:	6003      	str	r3, [r0, #0]
 8008442:	4604      	mov	r4, r0
 8008444:	f7fd ff92 	bl	800636c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008448:	4620      	mov	r0, r4
 800844a:	bd10      	pop	{r4, pc}
 800844c:	0802c370 	.word	0x0802c370

08008450 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008450:	b510      	push	{r4, lr}
 8008452:	4604      	mov	r4, r0
 8008454:	f7ff fff2 	bl	800843c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008458:	4620      	mov	r0, r4
 800845a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800845e:	f01f fa76 	bl	802794e <_ZdlPvj>
 8008462:	4620      	mov	r0, r4
 8008464:	bd10      	pop	{r4, pc}
	...

08008468 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008468:	b510      	push	{r4, lr}
 800846a:	4604      	mov	r4, r0
 800846c:	f7fd ff9e 	bl	80063ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008470:	4b01      	ldr	r3, [pc, #4]	; (8008478 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008472:	6023      	str	r3, [r4, #0]
}
 8008474:	4620      	mov	r0, r4
 8008476:	bd10      	pop	{r4, pc}
 8008478:	0802c370 	.word	0x0802c370

0800847c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800847c:	f7fd bf67 	b.w	800634e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008480 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008480:	4770      	bx	lr

08008482 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008482:	3804      	subs	r0, #4
 8008484:	4770      	bx	lr

08008486 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008486:	4770      	bx	lr

08008488 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008488:	68c0      	ldr	r0, [r0, #12]
 800848a:	6803      	ldr	r3, [r0, #0]
 800848c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800848e:	4718      	bx	r3

08008490 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008490:	f1a0 0004 	sub.w	r0, r0, #4
 8008494:	f7ff bff8 	b.w	8008488 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008498 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008498:	b510      	push	{r4, lr}
 800849a:	2110      	movs	r1, #16
 800849c:	4604      	mov	r4, r0
 800849e:	f01f fa56 	bl	802794e <_ZdlPvj>
 80084a2:	4620      	mov	r0, r4
 80084a4:	bd10      	pop	{r4, pc}

080084a6 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80084a6:	f1a0 0004 	sub.w	r0, r0, #4
 80084aa:	e7f5      	b.n	8008498 <_ZN27Measurement_SinglePresenterD0Ev>

080084ac <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80084ac:	b510      	push	{r4, lr}
 80084ae:	2200      	movs	r2, #0
 80084b0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084b2:	4a04      	ldr	r2, [pc, #16]	; (80084c4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80084b4:	60c1      	str	r1, [r0, #12]
 80084b6:	f102 0408 	add.w	r4, r2, #8
 80084ba:	3224      	adds	r2, #36	; 0x24
 80084bc:	6004      	str	r4, [r0, #0]
 80084be:	6042      	str	r2, [r0, #4]
}
 80084c0:	bd10      	pop	{r4, pc}
 80084c2:	bf00      	nop
 80084c4:	0802c39c 	.word	0x0802c39c

080084c8 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80084c8:	4770      	bx	lr
	...

080084cc <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80084cc:	b510      	push	{r4, lr}
 80084ce:	4b03      	ldr	r3, [pc, #12]	; (80084dc <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80084d0:	6003      	str	r3, [r0, #0]
 80084d2:	4604      	mov	r4, r0
 80084d4:	f7fe f900 	bl	80066d8 <_ZN26Measurement_SingleViewBaseD1Ev>
 80084d8:	4620      	mov	r0, r4
 80084da:	bd10      	pop	{r4, pc}
 80084dc:	0802c3d4 	.word	0x0802c3d4

080084e0 <_ZN22Measurement_SingleViewD0Ev>:
 80084e0:	b510      	push	{r4, lr}
 80084e2:	4604      	mov	r4, r0
 80084e4:	f7ff fff2 	bl	80084cc <_ZN22Measurement_SingleViewD1Ev>
 80084e8:	4620      	mov	r0, r4
 80084ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80084ee:	f01f fa2e 	bl	802794e <_ZdlPvj>
 80084f2:	4620      	mov	r0, r4
 80084f4:	bd10      	pop	{r4, pc}
	...

080084f8 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80084f8:	b510      	push	{r4, lr}
 80084fa:	4604      	mov	r4, r0
 80084fc:	f7fe f926 	bl	800674c <_ZN26Measurement_SingleViewBaseC1Ev>
 8008500:	4b01      	ldr	r3, [pc, #4]	; (8008508 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008502:	6023      	str	r3, [r4, #0]
}
 8008504:	4620      	mov	r0, r4
 8008506:	bd10      	pop	{r4, pc}
 8008508:	0802c3d4 	.word	0x0802c3d4

0800850c <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800850c:	f7fe b8c0 	b.w	8006690 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008510 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008510:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008512:	4a0a      	ldr	r2, [pc, #40]	; (800853c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008514:	4605      	mov	r5, r0
 8008516:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008518:	460b      	mov	r3, r1
 800851a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800851e:	2104      	movs	r1, #4
 8008520:	f00f fe1a 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008524:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008528:	f00d fd9a 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800852c:	b92c      	cbnz	r4, 800853a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800852e:	f00c fcaf 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008532:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008536:	f7fb b9b1 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800853a:	bd38      	pop	{r3, r4, r5, pc}
 800853c:	0802bfa8 	.word	0x0802bfa8

08008540 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008540:	4770      	bx	lr

08008542 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008542:	3804      	subs	r0, #4
 8008544:	4770      	bx	lr

08008546 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008546:	4770      	bx	lr

08008548 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008548:	4770      	bx	lr

0800854a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800854a:	b510      	push	{r4, lr}
 800854c:	2110      	movs	r1, #16
 800854e:	4604      	mov	r4, r0
 8008550:	f01f f9fd 	bl	802794e <_ZdlPvj>
 8008554:	4620      	mov	r0, r4
 8008556:	bd10      	pop	{r4, pc}

08008558 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008558:	f1a0 0004 	sub.w	r0, r0, #4
 800855c:	e7f5      	b.n	800854a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800855e <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800855e:	4770      	bx	lr

08008560 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008560:	b510      	push	{r4, lr}
 8008562:	2200      	movs	r2, #0
 8008564:	6082      	str	r2, [r0, #8]
    : view(v)
 8008566:	4a04      	ldr	r2, [pc, #16]	; (8008578 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008568:	60c1      	str	r1, [r0, #12]
 800856a:	f102 0408 	add.w	r4, r2, #8
 800856e:	3224      	adds	r2, #36	; 0x24
 8008570:	6004      	str	r4, [r0, #0]
 8008572:	6042      	str	r2, [r0, #4]
}
 8008574:	bd10      	pop	{r4, pc}
 8008576:	bf00      	nop
 8008578:	0802c404 	.word	0x0802c404

0800857c <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800857c:	4770      	bx	lr
	...

08008580 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008580:	b510      	push	{r4, lr}
 8008582:	4b03      	ldr	r3, [pc, #12]	; (8008590 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008584:	6003      	str	r3, [r0, #0]
 8008586:	4604      	mov	r4, r0
 8008588:	f7fe fb2e 	bl	8006be8 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800858c:	4620      	mov	r0, r4
 800858e:	bd10      	pop	{r4, pc}
 8008590:	0802c43c 	.word	0x0802c43c

08008594 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008594:	b510      	push	{r4, lr}
 8008596:	4604      	mov	r4, r0
 8008598:	f7ff fff2 	bl	8008580 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800859c:	4620      	mov	r0, r4
 800859e:	f241 31f4 	movw	r1, #5108	; 0x13f4
 80085a2:	f01f f9d4 	bl	802794e <_ZdlPvj>
 80085a6:	4620      	mov	r0, r4
 80085a8:	bd10      	pop	{r4, pc}
	...

080085ac <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80085ac:	b510      	push	{r4, lr}
 80085ae:	4604      	mov	r4, r0
 80085b0:	f7fe fb42 	bl	8006c38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80085b4:	4b01      	ldr	r3, [pc, #4]	; (80085bc <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80085b6:	6023      	str	r3, [r4, #0]
}
 80085b8:	4620      	mov	r0, r4
 80085ba:	bd10      	pop	{r4, pc}
 80085bc:	0802c43c 	.word	0x0802c43c

080085c0 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80085c0:	f7fe baeb 	b.w	8006b9a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080085c4 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80085c4:	b513      	push	{r0, r1, r4, lr}
 80085c6:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 80085c8:	f7f8 ff0e 	bl	80013e8 <updateGUI_test>
 80085cc:	4603      	mov	r3, r0

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80085ce:	4619      	mov	r1, r3
 80085d0:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80085d4:	e9cd 0300 	strd	r0, r3, [sp]
 80085d8:	f009 fcee 	bl	8011fb8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80085dc:	9800      	ldr	r0, [sp, #0]
 80085de:	f00d fd3f 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80085e2:	9b01      	ldr	r3, [sp, #4]
 80085e4:	4a11      	ldr	r2, [pc, #68]	; (800862c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 80085e6:	9300      	str	r3, [sp, #0]
 80085e8:	210a      	movs	r1, #10
 80085ea:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80085ee:	f00f fdb3 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80085f2:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80085f6:	f00d fd33 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%d", test);
 80085fa:	9b00      	ldr	r3, [sp, #0]
 80085fc:	4a0b      	ldr	r2, [pc, #44]	; (800862c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 80085fe:	210a      	movs	r1, #10
 8008600:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008604:	f00f fda8 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Frequency.invalidate();
 8008608:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800860c:	f00d fd28 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%d", test);
 8008610:	9b00      	ldr	r3, [sp, #0]
 8008612:	4a06      	ldr	r2, [pc, #24]	; (800862c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x68>)
 8008614:	210a      	movs	r1, #10
 8008616:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800861a:	f00f fd9d 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Distance.invalidate();
 800861e:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 8008622:	b002      	add	sp, #8
 8008624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 8008628:	f00d bd1a 	b.w	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>
 800862c:	0802bfa8 	.word	0x0802bfa8

08008630 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008630:	4770      	bx	lr

08008632 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008632:	3804      	subs	r0, #4
 8008634:	4770      	bx	lr

08008636 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008636:	4770      	bx	lr

08008638 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008638:	4770      	bx	lr

0800863a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800863a:	b510      	push	{r4, lr}
 800863c:	2110      	movs	r1, #16
 800863e:	4604      	mov	r4, r0
 8008640:	f01f f985 	bl	802794e <_ZdlPvj>
 8008644:	4620      	mov	r0, r4
 8008646:	bd10      	pop	{r4, pc}

08008648 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008648:	f1a0 0004 	sub.w	r0, r0, #4
 800864c:	e7f5      	b.n	800863a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800864e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800864e:	4770      	bx	lr

08008650 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008650:	b510      	push	{r4, lr}
 8008652:	2200      	movs	r2, #0
 8008654:	6082      	str	r2, [r0, #8]
    : view(v)
 8008656:	4a04      	ldr	r2, [pc, #16]	; (8008668 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008658:	60c1      	str	r1, [r0, #12]
 800865a:	f102 0408 	add.w	r4, r2, #8
 800865e:	3224      	adds	r2, #36	; 0x24
 8008660:	6004      	str	r4, [r0, #0]
 8008662:	6042      	str	r2, [r0, #4]
}
 8008664:	bd10      	pop	{r4, pc}
 8008666:	bf00      	nop
 8008668:	0802c46c 	.word	0x0802c46c

0800866c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800866c:	4770      	bx	lr
	...

08008670 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008670:	b510      	push	{r4, lr}
 8008672:	4b03      	ldr	r3, [pc, #12]	; (8008680 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008674:	6003      	str	r3, [r0, #0]
 8008676:	4604      	mov	r4, r0
 8008678:	f7fe fe48 	bl	800730c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800867c:	4620      	mov	r0, r4
 800867e:	bd10      	pop	{r4, pc}
 8008680:	0802c4a4 	.word	0x0802c4a4

08008684 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008684:	b510      	push	{r4, lr}
 8008686:	4604      	mov	r4, r0
 8008688:	f7ff fff2 	bl	8008670 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800868c:	4620      	mov	r0, r4
 800868e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008692:	f01f f95c 	bl	802794e <_ZdlPvj>
 8008696:	4620      	mov	r0, r4
 8008698:	bd10      	pop	{r4, pc}
	...

0800869c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800869c:	b510      	push	{r4, lr}
 800869e:	4604      	mov	r4, r0
 80086a0:	f7fe fe54 	bl	800734c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80086a4:	4b01      	ldr	r3, [pc, #4]	; (80086ac <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80086a6:	6023      	str	r3, [r4, #0]
}
 80086a8:	4620      	mov	r0, r4
 80086aa:	bd10      	pop	{r4, pc}
 80086ac:	0802c4a4 	.word	0x0802c4a4

080086b0 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80086b0:	f7fe be1b 	b.w	80072ea <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080086b4 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80086b4:	2100      	movs	r1, #0
 80086b6:	223c      	movs	r2, #60	; 0x3c
 80086b8:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80086bc:	4770      	bx	lr
	...

080086c0 <_ZN5Model4tickEv>:

void Model::tick()
{
 80086c0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80086c2:	4d0a      	ldr	r5, [pc, #40]	; (80086ec <_ZN5Model4tickEv+0x2c>)
{
 80086c4:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80086c6:	6828      	ldr	r0, [r5, #0]
 80086c8:	f004 fb44 	bl	800cd54 <osMessageQueueGetCount>
 80086cc:	b168      	cbz	r0, 80086ea <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80086ce:	2300      	movs	r3, #0
 80086d0:	6828      	ldr	r0, [r5, #0]
 80086d2:	461a      	mov	r2, r3
 80086d4:	1d21      	adds	r1, r4, #4
 80086d6:	f004 fb09 	bl	800ccec <osMessageQueueGet>
 80086da:	b930      	cbnz	r0, 80086ea <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80086dc:	6820      	ldr	r0, [r4, #0]
 80086de:	6861      	ldr	r1, [r4, #4]
 80086e0:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80086e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80086e6:	689b      	ldr	r3, [r3, #8]
 80086e8:	4718      	bx	r3
}
 80086ea:	bd70      	pop	{r4, r5, r6, pc}
 80086ec:	20002630 	.word	0x20002630

080086f0 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80086f0:	4770      	bx	lr

080086f2 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80086f2:	3804      	subs	r0, #4
 80086f4:	4770      	bx	lr

080086f6 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80086f6:	4770      	bx	lr

080086f8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80086f8:	68c0      	ldr	r0, [r0, #12]
 80086fa:	6803      	ldr	r3, [r0, #0]
 80086fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086fe:	4718      	bx	r3

08008700 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008700:	f1a0 0004 	sub.w	r0, r0, #4
 8008704:	f7ff bff8 	b.w	80086f8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008708 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008708:	b510      	push	{r4, lr}
 800870a:	2110      	movs	r1, #16
 800870c:	4604      	mov	r4, r0
 800870e:	f01f f91e 	bl	802794e <_ZdlPvj>
 8008712:	4620      	mov	r0, r4
 8008714:	bd10      	pop	{r4, pc}

08008716 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008716:	f1a0 0004 	sub.w	r0, r0, #4
 800871a:	e7f5      	b.n	8008708 <_ZN21Project_InfoPresenterD0Ev>

0800871c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800871c:	b510      	push	{r4, lr}
 800871e:	2200      	movs	r2, #0
 8008720:	6082      	str	r2, [r0, #8]
    : view(v)
 8008722:	4a04      	ldr	r2, [pc, #16]	; (8008734 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008724:	60c1      	str	r1, [r0, #12]
 8008726:	f102 0408 	add.w	r4, r2, #8
 800872a:	3224      	adds	r2, #36	; 0x24
 800872c:	6004      	str	r4, [r0, #0]
 800872e:	6042      	str	r2, [r0, #4]
}
 8008730:	bd10      	pop	{r4, pc}
 8008732:	bf00      	nop
 8008734:	0802c4d0 	.word	0x0802c4d0

08008738 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008738:	4770      	bx	lr
	...

0800873c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800873c:	b510      	push	{r4, lr}
 800873e:	4b03      	ldr	r3, [pc, #12]	; (800874c <_ZN16Project_InfoViewD1Ev+0x10>)
 8008740:	6003      	str	r3, [r0, #0]
 8008742:	4604      	mov	r4, r0
 8008744:	f7fe ff9c 	bl	8007680 <_ZN20Project_InfoViewBaseD1Ev>
 8008748:	4620      	mov	r0, r4
 800874a:	bd10      	pop	{r4, pc}
 800874c:	0802c508 	.word	0x0802c508

08008750 <_ZN16Project_InfoViewD0Ev>:
 8008750:	b510      	push	{r4, lr}
 8008752:	4604      	mov	r4, r0
 8008754:	f7ff fff2 	bl	800873c <_ZN16Project_InfoViewD1Ev>
 8008758:	4620      	mov	r0, r4
 800875a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800875e:	f01f f8f6 	bl	802794e <_ZdlPvj>
 8008762:	4620      	mov	r0, r4
 8008764:	bd10      	pop	{r4, pc}
	...

08008768 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008768:	b510      	push	{r4, lr}
 800876a:	4604      	mov	r4, r0
 800876c:	f7fe ffb0 	bl	80076d0 <_ZN20Project_InfoViewBaseC1Ev>
 8008770:	4b01      	ldr	r3, [pc, #4]	; (8008778 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008772:	6023      	str	r3, [r4, #0]
}
 8008774:	4620      	mov	r0, r4
 8008776:	bd10      	pop	{r4, pc}
 8008778:	0802c508 	.word	0x0802c508

0800877c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800877c:	f7fe bf5c 	b.w	8007638 <_ZN20Project_InfoViewBase11setupScreenEv>

08008780 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008780:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008782:	4a0a      	ldr	r2, [pc, #40]	; (80087ac <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008784:	4605      	mov	r5, r0
 8008786:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008788:	460b      	mov	r3, r1
 800878a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800878e:	2104      	movs	r1, #4
 8008790:	f00f fce2 	bl	8018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008794:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008798:	f00d fc62 	bl	8016060 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800879c:	b92c      	cbnz	r4, 80087aa <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800879e:	f00c fb77 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80087a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80087a6:	f7fb b879 	b.w	800389c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80087aa:	bd38      	pop	{r3, r4, r5, pc}
 80087ac:	0802bfa8 	.word	0x0802bfa8

080087b0 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80087b0:	4770      	bx	lr

080087b2 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80087b2:	3804      	subs	r0, #4
 80087b4:	4770      	bx	lr

080087b6 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80087b6:	4770      	bx	lr

080087b8 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80087b8:	4770      	bx	lr

080087ba <_ZN21Shutting_OffPresenterD0Ev>:
 80087ba:	b510      	push	{r4, lr}
 80087bc:	2110      	movs	r1, #16
 80087be:	4604      	mov	r4, r0
 80087c0:	f01f f8c5 	bl	802794e <_ZdlPvj>
 80087c4:	4620      	mov	r0, r4
 80087c6:	bd10      	pop	{r4, pc}

080087c8 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80087c8:	f1a0 0004 	sub.w	r0, r0, #4
 80087cc:	e7f5      	b.n	80087ba <_ZN21Shutting_OffPresenterD0Ev>

080087ce <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80087ce:	4770      	bx	lr

080087d0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80087d0:	b510      	push	{r4, lr}
 80087d2:	2200      	movs	r2, #0
 80087d4:	6082      	str	r2, [r0, #8]
    : view(v)
 80087d6:	4a04      	ldr	r2, [pc, #16]	; (80087e8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80087d8:	60c1      	str	r1, [r0, #12]
 80087da:	f102 0408 	add.w	r4, r2, #8
 80087de:	3224      	adds	r2, #36	; 0x24
 80087e0:	6004      	str	r4, [r0, #0]
 80087e2:	6042      	str	r2, [r0, #4]
}
 80087e4:	bd10      	pop	{r4, pc}
 80087e6:	bf00      	nop
 80087e8:	0802c538 	.word	0x0802c538

080087ec <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80087ec:	4770      	bx	lr
	...

080087f0 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80087f0:	b510      	push	{r4, lr}
 80087f2:	4b03      	ldr	r3, [pc, #12]	; (8008800 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80087f4:	6003      	str	r3, [r0, #0]
 80087f6:	4604      	mov	r4, r0
 80087f8:	f7ff f938 	bl	8007a6c <_ZN20Shutting_OffViewBaseD1Ev>
 80087fc:	4620      	mov	r0, r4
 80087fe:	bd10      	pop	{r4, pc}
 8008800:	0802c570 	.word	0x0802c570

08008804 <_ZN16Shutting_OffViewD0Ev>:
 8008804:	b510      	push	{r4, lr}
 8008806:	4604      	mov	r4, r0
 8008808:	f7ff fff2 	bl	80087f0 <_ZN16Shutting_OffViewD1Ev>
 800880c:	4620      	mov	r0, r4
 800880e:	2198      	movs	r1, #152	; 0x98
 8008810:	f01f f89d 	bl	802794e <_ZdlPvj>
 8008814:	4620      	mov	r0, r4
 8008816:	bd10      	pop	{r4, pc}

08008818 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008818:	b510      	push	{r4, lr}
 800881a:	4604      	mov	r4, r0
 800881c:	f7ff f930 	bl	8007a80 <_ZN20Shutting_OffViewBaseC1Ev>
 8008820:	4b01      	ldr	r3, [pc, #4]	; (8008828 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008822:	6023      	str	r3, [r4, #0]
}
 8008824:	4620      	mov	r0, r4
 8008826:	bd10      	pop	{r4, pc}
 8008828:	0802c570 	.word	0x0802c570

0800882c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800882c:	f7ff b91f 	b.w	8007a6e <_ZN20Shutting_OffViewBase11setupScreenEv>

08008830 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008830:	20f0      	movs	r0, #240	; 0xf0
 8008832:	4770      	bx	lr

08008834 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008834:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008838:	4770      	bx	lr
 800883a:	bf00      	nop

0800883c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800883c:	2029      	movs	r0, #41	; 0x29
 800883e:	f7f9 b927 	b.w	8001a90 <LCD_IO_WriteReg>
 8008842:	bf00      	nop

08008844 <ili9341_DisplayOff>:
 8008844:	2028      	movs	r0, #40	; 0x28
 8008846:	f7f9 b923 	b.w	8001a90 <LCD_IO_WriteReg>
 800884a:	bf00      	nop

0800884c <ili9341_Init>:
{
 800884c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800884e:	f7f9 f8e5 	bl	8001a1c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008852:	20ca      	movs	r0, #202	; 0xca
 8008854:	f7f9 f91c 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008858:	20c3      	movs	r0, #195	; 0xc3
 800885a:	f7f9 f8ef 	bl	8001a3c <LCD_IO_WriteData>
 800885e:	2008      	movs	r0, #8
 8008860:	f7f9 f8ec 	bl	8001a3c <LCD_IO_WriteData>
 8008864:	2050      	movs	r0, #80	; 0x50
 8008866:	f7f9 f8e9 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800886a:	20cf      	movs	r0, #207	; 0xcf
 800886c:	f7f9 f910 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008870:	2000      	movs	r0, #0
 8008872:	f7f9 f8e3 	bl	8001a3c <LCD_IO_WriteData>
 8008876:	20c1      	movs	r0, #193	; 0xc1
 8008878:	f7f9 f8e0 	bl	8001a3c <LCD_IO_WriteData>
 800887c:	2030      	movs	r0, #48	; 0x30
 800887e:	f7f9 f8dd 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008882:	20ed      	movs	r0, #237	; 0xed
 8008884:	f7f9 f904 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008888:	2064      	movs	r0, #100	; 0x64
 800888a:	f7f9 f8d7 	bl	8001a3c <LCD_IO_WriteData>
 800888e:	2003      	movs	r0, #3
 8008890:	f7f9 f8d4 	bl	8001a3c <LCD_IO_WriteData>
 8008894:	2012      	movs	r0, #18
 8008896:	f7f9 f8d1 	bl	8001a3c <LCD_IO_WriteData>
 800889a:	2081      	movs	r0, #129	; 0x81
 800889c:	f7f9 f8ce 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088a0:	20e8      	movs	r0, #232	; 0xe8
 80088a2:	f7f9 f8f5 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088a6:	2085      	movs	r0, #133	; 0x85
 80088a8:	f7f9 f8c8 	bl	8001a3c <LCD_IO_WriteData>
 80088ac:	2000      	movs	r0, #0
 80088ae:	f7f9 f8c5 	bl	8001a3c <LCD_IO_WriteData>
 80088b2:	2078      	movs	r0, #120	; 0x78
 80088b4:	f7f9 f8c2 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088b8:	20cb      	movs	r0, #203	; 0xcb
 80088ba:	f7f9 f8e9 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088be:	2039      	movs	r0, #57	; 0x39
 80088c0:	f7f9 f8bc 	bl	8001a3c <LCD_IO_WriteData>
 80088c4:	202c      	movs	r0, #44	; 0x2c
 80088c6:	f7f9 f8b9 	bl	8001a3c <LCD_IO_WriteData>
 80088ca:	2000      	movs	r0, #0
 80088cc:	f7f9 f8b6 	bl	8001a3c <LCD_IO_WriteData>
 80088d0:	2034      	movs	r0, #52	; 0x34
 80088d2:	f7f9 f8b3 	bl	8001a3c <LCD_IO_WriteData>
 80088d6:	2002      	movs	r0, #2
 80088d8:	f7f9 f8b0 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088dc:	20f7      	movs	r0, #247	; 0xf7
 80088de:	f7f9 f8d7 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088e2:	2020      	movs	r0, #32
 80088e4:	f7f9 f8aa 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088e8:	20ea      	movs	r0, #234	; 0xea
 80088ea:	f7f9 f8d1 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80088ee:	2000      	movs	r0, #0
 80088f0:	f7f9 f8a4 	bl	8001a3c <LCD_IO_WriteData>
 80088f4:	2000      	movs	r0, #0
 80088f6:	f7f9 f8a1 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80088fa:	20b1      	movs	r0, #177	; 0xb1
 80088fc:	f7f9 f8c8 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008900:	2000      	movs	r0, #0
 8008902:	f7f9 f89b 	bl	8001a3c <LCD_IO_WriteData>
 8008906:	201b      	movs	r0, #27
 8008908:	f7f9 f898 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800890c:	20b6      	movs	r0, #182	; 0xb6
 800890e:	f7f9 f8bf 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008912:	200a      	movs	r0, #10
 8008914:	f7f9 f892 	bl	8001a3c <LCD_IO_WriteData>
 8008918:	20a2      	movs	r0, #162	; 0xa2
 800891a:	f7f9 f88f 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800891e:	20c0      	movs	r0, #192	; 0xc0
 8008920:	f7f9 f8b6 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008924:	2010      	movs	r0, #16
 8008926:	f7f9 f889 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800892a:	20c1      	movs	r0, #193	; 0xc1
 800892c:	f7f9 f8b0 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008930:	2010      	movs	r0, #16
 8008932:	f7f9 f883 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008936:	20c5      	movs	r0, #197	; 0xc5
 8008938:	f7f9 f8aa 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800893c:	2045      	movs	r0, #69	; 0x45
 800893e:	f7f9 f87d 	bl	8001a3c <LCD_IO_WriteData>
 8008942:	2015      	movs	r0, #21
 8008944:	f7f9 f87a 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008948:	20c7      	movs	r0, #199	; 0xc7
 800894a:	f7f9 f8a1 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800894e:	2090      	movs	r0, #144	; 0x90
 8008950:	f7f9 f874 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008954:	2036      	movs	r0, #54	; 0x36
 8008956:	f7f9 f89b 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800895a:	20c8      	movs	r0, #200	; 0xc8
 800895c:	f7f9 f86e 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008960:	20f2      	movs	r0, #242	; 0xf2
 8008962:	f7f9 f895 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008966:	2000      	movs	r0, #0
 8008968:	f7f9 f868 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800896c:	20b0      	movs	r0, #176	; 0xb0
 800896e:	f7f9 f88f 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008972:	20c2      	movs	r0, #194	; 0xc2
 8008974:	f7f9 f862 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008978:	20b6      	movs	r0, #182	; 0xb6
 800897a:	f7f9 f889 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800897e:	200a      	movs	r0, #10
 8008980:	f7f9 f85c 	bl	8001a3c <LCD_IO_WriteData>
 8008984:	20a7      	movs	r0, #167	; 0xa7
 8008986:	f7f9 f859 	bl	8001a3c <LCD_IO_WriteData>
 800898a:	2027      	movs	r0, #39	; 0x27
 800898c:	f7f9 f856 	bl	8001a3c <LCD_IO_WriteData>
 8008990:	2004      	movs	r0, #4
 8008992:	f7f9 f853 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008996:	202a      	movs	r0, #42	; 0x2a
 8008998:	f7f9 f87a 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800899c:	2000      	movs	r0, #0
 800899e:	f7f9 f84d 	bl	8001a3c <LCD_IO_WriteData>
 80089a2:	2000      	movs	r0, #0
 80089a4:	f7f9 f84a 	bl	8001a3c <LCD_IO_WriteData>
 80089a8:	2000      	movs	r0, #0
 80089aa:	f7f9 f847 	bl	8001a3c <LCD_IO_WriteData>
 80089ae:	20ef      	movs	r0, #239	; 0xef
 80089b0:	f7f9 f844 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089b4:	202b      	movs	r0, #43	; 0x2b
 80089b6:	f7f9 f86b 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089ba:	2000      	movs	r0, #0
 80089bc:	f7f9 f83e 	bl	8001a3c <LCD_IO_WriteData>
 80089c0:	2000      	movs	r0, #0
 80089c2:	f7f9 f83b 	bl	8001a3c <LCD_IO_WriteData>
 80089c6:	2001      	movs	r0, #1
 80089c8:	f7f9 f838 	bl	8001a3c <LCD_IO_WriteData>
 80089cc:	203f      	movs	r0, #63	; 0x3f
 80089ce:	f7f9 f835 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089d2:	20f6      	movs	r0, #246	; 0xf6
 80089d4:	f7f9 f85c 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089d8:	2001      	movs	r0, #1
 80089da:	f7f9 f82f 	bl	8001a3c <LCD_IO_WriteData>
 80089de:	2000      	movs	r0, #0
 80089e0:	f7f9 f82c 	bl	8001a3c <LCD_IO_WriteData>
 80089e4:	2006      	movs	r0, #6
 80089e6:	f7f9 f829 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80089ea:	202c      	movs	r0, #44	; 0x2c
 80089ec:	f7f9 f850 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80089f0:	20c8      	movs	r0, #200	; 0xc8
 80089f2:	f7f9 f8b5 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80089f6:	2026      	movs	r0, #38	; 0x26
 80089f8:	f7f9 f84a 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80089fc:	2001      	movs	r0, #1
 80089fe:	f7f9 f81d 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a02:	20e0      	movs	r0, #224	; 0xe0
 8008a04:	f7f9 f844 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a08:	200f      	movs	r0, #15
 8008a0a:	f7f9 f817 	bl	8001a3c <LCD_IO_WriteData>
 8008a0e:	2029      	movs	r0, #41	; 0x29
 8008a10:	f7f9 f814 	bl	8001a3c <LCD_IO_WriteData>
 8008a14:	2024      	movs	r0, #36	; 0x24
 8008a16:	f7f9 f811 	bl	8001a3c <LCD_IO_WriteData>
 8008a1a:	200c      	movs	r0, #12
 8008a1c:	f7f9 f80e 	bl	8001a3c <LCD_IO_WriteData>
 8008a20:	200e      	movs	r0, #14
 8008a22:	f7f9 f80b 	bl	8001a3c <LCD_IO_WriteData>
 8008a26:	2009      	movs	r0, #9
 8008a28:	f7f9 f808 	bl	8001a3c <LCD_IO_WriteData>
 8008a2c:	204e      	movs	r0, #78	; 0x4e
 8008a2e:	f7f9 f805 	bl	8001a3c <LCD_IO_WriteData>
 8008a32:	2078      	movs	r0, #120	; 0x78
 8008a34:	f7f9 f802 	bl	8001a3c <LCD_IO_WriteData>
 8008a38:	203c      	movs	r0, #60	; 0x3c
 8008a3a:	f7f8 ffff 	bl	8001a3c <LCD_IO_WriteData>
 8008a3e:	2009      	movs	r0, #9
 8008a40:	f7f8 fffc 	bl	8001a3c <LCD_IO_WriteData>
 8008a44:	2013      	movs	r0, #19
 8008a46:	f7f8 fff9 	bl	8001a3c <LCD_IO_WriteData>
 8008a4a:	2005      	movs	r0, #5
 8008a4c:	f7f8 fff6 	bl	8001a3c <LCD_IO_WriteData>
 8008a50:	2017      	movs	r0, #23
 8008a52:	f7f8 fff3 	bl	8001a3c <LCD_IO_WriteData>
 8008a56:	2011      	movs	r0, #17
 8008a58:	f7f8 fff0 	bl	8001a3c <LCD_IO_WriteData>
 8008a5c:	2000      	movs	r0, #0
 8008a5e:	f7f8 ffed 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008a62:	20e1      	movs	r0, #225	; 0xe1
 8008a64:	f7f9 f814 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008a68:	2000      	movs	r0, #0
 8008a6a:	f7f8 ffe7 	bl	8001a3c <LCD_IO_WriteData>
 8008a6e:	2016      	movs	r0, #22
 8008a70:	f7f8 ffe4 	bl	8001a3c <LCD_IO_WriteData>
 8008a74:	201b      	movs	r0, #27
 8008a76:	f7f8 ffe1 	bl	8001a3c <LCD_IO_WriteData>
 8008a7a:	2004      	movs	r0, #4
 8008a7c:	f7f8 ffde 	bl	8001a3c <LCD_IO_WriteData>
 8008a80:	2011      	movs	r0, #17
 8008a82:	f7f8 ffdb 	bl	8001a3c <LCD_IO_WriteData>
 8008a86:	2007      	movs	r0, #7
 8008a88:	f7f8 ffd8 	bl	8001a3c <LCD_IO_WriteData>
 8008a8c:	2031      	movs	r0, #49	; 0x31
 8008a8e:	f7f8 ffd5 	bl	8001a3c <LCD_IO_WriteData>
 8008a92:	2033      	movs	r0, #51	; 0x33
 8008a94:	f7f8 ffd2 	bl	8001a3c <LCD_IO_WriteData>
 8008a98:	2042      	movs	r0, #66	; 0x42
 8008a9a:	f7f8 ffcf 	bl	8001a3c <LCD_IO_WriteData>
 8008a9e:	2005      	movs	r0, #5
 8008aa0:	f7f8 ffcc 	bl	8001a3c <LCD_IO_WriteData>
 8008aa4:	200c      	movs	r0, #12
 8008aa6:	f7f8 ffc9 	bl	8001a3c <LCD_IO_WriteData>
 8008aaa:	200a      	movs	r0, #10
 8008aac:	f7f8 ffc6 	bl	8001a3c <LCD_IO_WriteData>
 8008ab0:	2028      	movs	r0, #40	; 0x28
 8008ab2:	f7f8 ffc3 	bl	8001a3c <LCD_IO_WriteData>
 8008ab6:	202f      	movs	r0, #47	; 0x2f
 8008ab8:	f7f8 ffc0 	bl	8001a3c <LCD_IO_WriteData>
 8008abc:	200f      	movs	r0, #15
 8008abe:	f7f8 ffbd 	bl	8001a3c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ac2:	2011      	movs	r0, #17
 8008ac4:	f7f8 ffe4 	bl	8001a90 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008ac8:	20c8      	movs	r0, #200	; 0xc8
 8008aca:	f7f9 f849 	bl	8001b60 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008ace:	2029      	movs	r0, #41	; 0x29
 8008ad0:	f7f8 ffde 	bl	8001a90 <LCD_IO_WriteReg>
}
 8008ad4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008ad8:	202c      	movs	r0, #44	; 0x2c
 8008ada:	f7f8 bfd9 	b.w	8001a90 <LCD_IO_WriteReg>
 8008ade:	bf00      	nop

08008ae0 <ili9341_ReadID>:
{
 8008ae0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008ae2:	f7f8 ff9b 	bl	8001a1c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008ae6:	2103      	movs	r1, #3
 8008ae8:	20d3      	movs	r0, #211	; 0xd3
 8008aea:	f7f8 fffb 	bl	8001ae4 <LCD_IO_ReadData>
}
 8008aee:	b280      	uxth	r0, r0
 8008af0:	bd08      	pop	{r3, pc}
 8008af2:	bf00      	nop

08008af4 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008af4:	221f      	movs	r2, #31
 8008af6:	210b      	movs	r1, #11
 8008af8:	b2c0      	uxtb	r0, r0
 8008afa:	f7f8 bf41 	b.w	8001980 <IOE_Write>
 8008afe:	bf00      	nop

08008b00 <stmpe811_Reset>:
{
 8008b00:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008b02:	b2c4      	uxtb	r4, r0
 8008b04:	2202      	movs	r2, #2
 8008b06:	2103      	movs	r1, #3
 8008b08:	4620      	mov	r0, r4
 8008b0a:	f7f8 ff39 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 8008b0e:	200a      	movs	r0, #10
 8008b10:	f7f8 ff82 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008b14:	4620      	mov	r0, r4
 8008b16:	2200      	movs	r2, #0
 8008b18:	2103      	movs	r1, #3
 8008b1a:	f7f8 ff31 	bl	8001980 <IOE_Write>
}
 8008b1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008b22:	2002      	movs	r0, #2
 8008b24:	f7f8 bf78 	b.w	8001a18 <IOE_Delay>

08008b28 <stmpe811_ReadID>:
{
 8008b28:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b2a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008b2c:	f7f8 ff24 	bl	8001978 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b30:	2100      	movs	r1, #0
 8008b32:	4620      	mov	r0, r4
 8008b34:	f7f8 ff3c 	bl	80019b0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b38:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b3a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b3c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b3e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008b40:	f7f8 ff36 	bl	80019b0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008b44:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008b48:	b280      	uxth	r0, r0
 8008b4a:	bd10      	pop	{r4, pc}

08008b4c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008b4c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008b4e:	b2c4      	uxtb	r4, r0
 8008b50:	2140      	movs	r1, #64	; 0x40
 8008b52:	4620      	mov	r0, r4
 8008b54:	f7f8 ff2c 	bl	80019b0 <IOE_Read>
  
  if(state > 0)
 8008b58:	0603      	lsls	r3, r0, #24
 8008b5a:	d40b      	bmi.n	8008b74 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	2201      	movs	r2, #1
 8008b60:	214b      	movs	r1, #75	; 0x4b
 8008b62:	f7f8 ff0d 	bl	8001980 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008b66:	4620      	mov	r0, r4
 8008b68:	2200      	movs	r2, #0
 8008b6a:	214b      	movs	r1, #75	; 0x4b
 8008b6c:	f7f8 ff08 	bl	8001980 <IOE_Write>
  uint8_t ret = 0;
 8008b70:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008b72:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008b74:	214c      	movs	r1, #76	; 0x4c
 8008b76:	4620      	mov	r0, r4
 8008b78:	f7f8 ff1a 	bl	80019b0 <IOE_Read>
      ret = 1;
 8008b7c:	3800      	subs	r0, #0
 8008b7e:	bf18      	it	ne
 8008b80:	2001      	movne	r0, #1
}
 8008b82:	bd10      	pop	{r4, pc}

08008b84 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008b84:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008b86:	210b      	movs	r1, #11
 8008b88:	b2c0      	uxtb	r0, r0
 8008b8a:	f7f8 ff11 	bl	80019b0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008b8e:	f000 001f 	and.w	r0, r0, #31
 8008b92:	bd08      	pop	{r3, pc}

08008b94 <stmpe811_TS_GetXY>:
{
 8008b94:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008b96:	2304      	movs	r3, #4
{
 8008b98:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008b9a:	b2c4      	uxtb	r4, r0
{
 8008b9c:	4615      	mov	r5, r2
 8008b9e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008ba0:	eb0d 0203 	add.w	r2, sp, r3
 8008ba4:	21d7      	movs	r1, #215	; 0xd7
 8008ba6:	4620      	mov	r0, r4
 8008ba8:	f7f8 ff1e 	bl	80019e8 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008bac:	9b01      	ldr	r3, [sp, #4]
 8008bae:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008bb0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008bb2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008bb6:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008bb8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008bba:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008bbc:	2201      	movs	r2, #1
 8008bbe:	214b      	movs	r1, #75	; 0x4b
 8008bc0:	f7f8 fede 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008bc4:	2200      	movs	r2, #0
 8008bc6:	214b      	movs	r1, #75	; 0x4b
 8008bc8:	4620      	mov	r0, r4
 8008bca:	f7f8 fed9 	bl	8001980 <IOE_Write>
}
 8008bce:	b002      	add	sp, #8
 8008bd0:	bd70      	pop	{r4, r5, r6, pc}
 8008bd2:	bf00      	nop

08008bd4 <stmpe811_TS_Start>:
{
 8008bd4:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008bd6:	b2c4      	uxtb	r4, r0
 8008bd8:	2104      	movs	r1, #4
 8008bda:	4620      	mov	r0, r4
 8008bdc:	f7f8 fee8 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008be0:	2104      	movs	r1, #4
 8008be2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008be6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008be8:	4620      	mov	r0, r4
 8008bea:	f7f8 fec9 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008bee:	2117      	movs	r1, #23
 8008bf0:	4620      	mov	r0, r4
 8008bf2:	f7f8 fedd 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008bf6:	2117      	movs	r1, #23
 8008bf8:	f000 020f 	and.w	r2, r0, #15
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	f7f8 febf 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008c02:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008c06:	4620      	mov	r0, r4
 8008c08:	2104      	movs	r1, #4
 8008c0a:	f7f8 feb9 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008c0e:	2249      	movs	r2, #73	; 0x49
 8008c10:	2120      	movs	r1, #32
 8008c12:	4620      	mov	r0, r4
 8008c14:	f7f8 feb4 	bl	8001980 <IOE_Write>
  IOE_Delay(2); 
 8008c18:	2002      	movs	r0, #2
 8008c1a:	f7f8 fefd 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008c1e:	4620      	mov	r0, r4
 8008c20:	2201      	movs	r2, #1
 8008c22:	2121      	movs	r1, #33	; 0x21
 8008c24:	f7f8 feac 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008c28:	4620      	mov	r0, r4
 8008c2a:	229a      	movs	r2, #154	; 0x9a
 8008c2c:	2141      	movs	r1, #65	; 0x41
 8008c2e:	f7f8 fea7 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008c32:	4620      	mov	r0, r4
 8008c34:	2201      	movs	r2, #1
 8008c36:	214a      	movs	r1, #74	; 0x4a
 8008c38:	f7f8 fea2 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008c3c:	4620      	mov	r0, r4
 8008c3e:	2201      	movs	r2, #1
 8008c40:	214b      	movs	r1, #75	; 0x4b
 8008c42:	f7f8 fe9d 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008c46:	4620      	mov	r0, r4
 8008c48:	2200      	movs	r2, #0
 8008c4a:	214b      	movs	r1, #75	; 0x4b
 8008c4c:	f7f8 fe98 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008c50:	4620      	mov	r0, r4
 8008c52:	2201      	movs	r2, #1
 8008c54:	2156      	movs	r1, #86	; 0x56
 8008c56:	f7f8 fe93 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008c5a:	4620      	mov	r0, r4
 8008c5c:	2201      	movs	r2, #1
 8008c5e:	2158      	movs	r1, #88	; 0x58
 8008c60:	f7f8 fe8e 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008c64:	4620      	mov	r0, r4
 8008c66:	2201      	movs	r2, #1
 8008c68:	2140      	movs	r1, #64	; 0x40
 8008c6a:	f7f8 fe89 	bl	8001980 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008c6e:	4620      	mov	r0, r4
 8008c70:	22ff      	movs	r2, #255	; 0xff
 8008c72:	210b      	movs	r1, #11
 8008c74:	f7f8 fe84 	bl	8001980 <IOE_Write>
}
 8008c78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008c7c:	2002      	movs	r0, #2
 8008c7e:	f7f8 becb 	b.w	8001a18 <IOE_Delay>
 8008c82:	bf00      	nop

08008c84 <stmpe811_TS_DisableIT>:
{
 8008c84:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008c86:	b2c4      	uxtb	r4, r0
 8008c88:	2109      	movs	r1, #9
 8008c8a:	4620      	mov	r0, r4
 8008c8c:	f7f8 fe90 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008c90:	2109      	movs	r1, #9
 8008c92:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008c96:	4620      	mov	r0, r4
 8008c98:	f7f8 fe72 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008c9c:	210a      	movs	r1, #10
 8008c9e:	4620      	mov	r0, r4
 8008ca0:	f7f8 fe86 	bl	80019b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008ca4:	210a      	movs	r1, #10
 8008ca6:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008caa:	4620      	mov	r0, r4
}
 8008cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008cb0:	f7f8 be66 	b.w	8001980 <IOE_Write>

08008cb4 <stmpe811_TS_EnableIT>:
{
 8008cb4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008cb6:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008cb8:	f7f8 fe60 	bl	800197c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008cbc:	210a      	movs	r1, #10
 8008cbe:	4620      	mov	r0, r4
 8008cc0:	f7f8 fe76 	bl	80019b0 <IOE_Read>
  tmp |= Source; 
 8008cc4:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008cc8:	b2c2      	uxtb	r2, r0
 8008cca:	210a      	movs	r1, #10
 8008ccc:	4620      	mov	r0, r4
 8008cce:	f7f8 fe57 	bl	8001980 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008cd2:	2109      	movs	r1, #9
 8008cd4:	4620      	mov	r0, r4
 8008cd6:	f7f8 fe6b 	bl	80019b0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008cda:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008cde:	b2c2      	uxtb	r2, r0
 8008ce0:	2109      	movs	r1, #9
 8008ce2:	4620      	mov	r0, r4
}
 8008ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008ce8:	f7f8 be4a 	b.w	8001980 <IOE_Write>

08008cec <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008cec:	4a10      	ldr	r2, [pc, #64]	; (8008d30 <stmpe811_Init+0x44>)
 8008cee:	7813      	ldrb	r3, [r2, #0]
 8008cf0:	4298      	cmp	r0, r3
 8008cf2:	d004      	beq.n	8008cfe <stmpe811_Init+0x12>
 8008cf4:	7851      	ldrb	r1, [r2, #1]
 8008cf6:	4288      	cmp	r0, r1
 8008cf8:	d001      	beq.n	8008cfe <stmpe811_Init+0x12>
 8008cfa:	b113      	cbz	r3, 8008d02 <stmpe811_Init+0x16>
 8008cfc:	b101      	cbz	r1, 8008d00 <stmpe811_Init+0x14>
 8008cfe:	4770      	bx	lr
 8008d00:	2301      	movs	r3, #1
{
 8008d02:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008d04:	b2c4      	uxtb	r4, r0
 8008d06:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008d08:	f7f8 fe36 	bl	8001978 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008d0c:	2202      	movs	r2, #2
 8008d0e:	2103      	movs	r1, #3
 8008d10:	4620      	mov	r0, r4
 8008d12:	f7f8 fe35 	bl	8001980 <IOE_Write>
  IOE_Delay(10); 
 8008d16:	200a      	movs	r0, #10
 8008d18:	f7f8 fe7e 	bl	8001a18 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008d1c:	4620      	mov	r0, r4
 8008d1e:	2200      	movs	r2, #0
 8008d20:	2103      	movs	r1, #3
 8008d22:	f7f8 fe2d 	bl	8001980 <IOE_Write>
}
 8008d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008d2a:	2002      	movs	r0, #2
 8008d2c:	f7f8 be74 	b.w	8001a18 <IOE_Delay>
 8008d30:	200029cc 	.word	0x200029cc

08008d34 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008d34:	4b05      	ldr	r3, [pc, #20]	; (8008d4c <SystemInit+0x18>)
 8008d36:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008d3a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008d3e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008d42:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008d46:	6099      	str	r1, [r3, #8]
#endif
}
 8008d48:	4770      	bx	lr
 8008d4a:	bf00      	nop
 8008d4c:	e000ed00 	.word	0xe000ed00

08008d50 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008d50:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008d52:	4b0b      	ldr	r3, [pc, #44]	; (8008d80 <HAL_Init+0x30>)
 8008d54:	681a      	ldr	r2, [r3, #0]
 8008d56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008d5a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008d5c:	681a      	ldr	r2, [r3, #0]
 8008d5e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008d62:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008d64:	681a      	ldr	r2, [r3, #0]
 8008d66:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008d6a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008d6c:	2003      	movs	r0, #3
 8008d6e:	f000 f82d 	bl	8008dcc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008d72:	2000      	movs	r0, #0
 8008d74:	f7f9 f984 	bl	8002080 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008d78:	f7f8 ff00 	bl	8001b7c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008d7c:	2000      	movs	r0, #0
 8008d7e:	bd08      	pop	{r3, pc}
 8008d80:	40023c00 	.word	0x40023c00

08008d84 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008d84:	4a03      	ldr	r2, [pc, #12]	; (8008d94 <HAL_IncTick+0x10>)
 8008d86:	4b04      	ldr	r3, [pc, #16]	; (8008d98 <HAL_IncTick+0x14>)
 8008d88:	6811      	ldr	r1, [r2, #0]
 8008d8a:	781b      	ldrb	r3, [r3, #0]
 8008d8c:	440b      	add	r3, r1
 8008d8e:	6013      	str	r3, [r2, #0]
}
 8008d90:	4770      	bx	lr
 8008d92:	bf00      	nop
 8008d94:	200029d0 	.word	0x200029d0
 8008d98:	2000007c 	.word	0x2000007c

08008d9c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008d9c:	4b01      	ldr	r3, [pc, #4]	; (8008da4 <HAL_GetTick+0x8>)
 8008d9e:	6818      	ldr	r0, [r3, #0]
}
 8008da0:	4770      	bx	lr
 8008da2:	bf00      	nop
 8008da4:	200029d0 	.word	0x200029d0

08008da8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008da8:	b538      	push	{r3, r4, r5, lr}
 8008daa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008dac:	f7ff fff6 	bl	8008d9c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008db0:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8008db2:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8008db4:	d002      	beq.n	8008dbc <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8008db6:	4b04      	ldr	r3, [pc, #16]	; (8008dc8 <HAL_Delay+0x20>)
 8008db8:	781b      	ldrb	r3, [r3, #0]
 8008dba:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008dbc:	f7ff ffee 	bl	8008d9c <HAL_GetTick>
 8008dc0:	1b43      	subs	r3, r0, r5
 8008dc2:	42a3      	cmp	r3, r4
 8008dc4:	d3fa      	bcc.n	8008dbc <HAL_Delay+0x14>
  {
  }
}
 8008dc6:	bd38      	pop	{r3, r4, r5, pc}
 8008dc8:	2000007c 	.word	0x2000007c

08008dcc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008dcc:	4907      	ldr	r1, [pc, #28]	; (8008dec <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008dce:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008dd0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008dd2:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8008dd6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8008dda:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8008ddc:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8008dde:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008de2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8008de6:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8008de8:	4770      	bx	lr
 8008dea:	bf00      	nop
 8008dec:	e000ed00 	.word	0xe000ed00

08008df0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008df0:	4b1c      	ldr	r3, [pc, #112]	; (8008e64 <HAL_NVIC_SetPriority+0x74>)
 8008df2:	68db      	ldr	r3, [r3, #12]
 8008df4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008df8:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008dfa:	f1c3 0e07 	rsb	lr, r3, #7
 8008dfe:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e02:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008e06:	bf28      	it	cs
 8008e08:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e0c:	f1bc 0f06 	cmp.w	ip, #6
 8008e10:	d91b      	bls.n	8008e4a <HAL_NVIC_SetPriority+0x5a>
 8008e12:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008e14:	f04f 3cff 	mov.w	ip, #4294967295
 8008e18:	fa0c fc03 	lsl.w	ip, ip, r3
 8008e1c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008e20:	f04f 3cff 	mov.w	ip, #4294967295
 8008e24:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008e28:	ea21 010c 	bic.w	r1, r1, ip
 8008e2c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008e2e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008e30:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008e34:	db0c      	blt.n	8008e50 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008e36:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008e3a:	0109      	lsls	r1, r1, #4
 8008e3c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008e40:	b2c9      	uxtb	r1, r1
 8008e42:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008e46:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e4a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008e4c:	4613      	mov	r3, r2
 8008e4e:	e7e7      	b.n	8008e20 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008e50:	4b05      	ldr	r3, [pc, #20]	; (8008e68 <HAL_NVIC_SetPriority+0x78>)
 8008e52:	f000 000f 	and.w	r0, r0, #15
 8008e56:	0109      	lsls	r1, r1, #4
 8008e58:	4403      	add	r3, r0
 8008e5a:	b2c9      	uxtb	r1, r1
 8008e5c:	7619      	strb	r1, [r3, #24]
 8008e5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e62:	bf00      	nop
 8008e64:	e000ed00 	.word	0xe000ed00
 8008e68:	e000ecfc 	.word	0xe000ecfc

08008e6c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008e6c:	2800      	cmp	r0, #0
 8008e6e:	db07      	blt.n	8008e80 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008e70:	0941      	lsrs	r1, r0, #5
 8008e72:	4a04      	ldr	r2, [pc, #16]	; (8008e84 <HAL_NVIC_EnableIRQ+0x18>)
 8008e74:	f000 001f 	and.w	r0, r0, #31
 8008e78:	2301      	movs	r3, #1
 8008e7a:	4083      	lsls	r3, r0
 8008e7c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008e80:	4770      	bx	lr
 8008e82:	bf00      	nop
 8008e84:	e000e100 	.word	0xe000e100

08008e88 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008e88:	b180      	cbz	r0, 8008eac <HAL_CRC_Init+0x24>
{
 8008e8a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008e8c:	7943      	ldrb	r3, [r0, #5]
 8008e8e:	4604      	mov	r4, r0
 8008e90:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008e94:	b11b      	cbz	r3, 8008e9e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008e96:	2301      	movs	r3, #1
 8008e98:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008e9a:	2000      	movs	r0, #0
}
 8008e9c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008e9e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008ea0:	f7f8 fe8c 	bl	8001bbc <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008ea4:	2301      	movs	r3, #1
 8008ea6:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008ea8:	2000      	movs	r0, #0
}
 8008eaa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008eac:	2001      	movs	r0, #1
}
 8008eae:	4770      	bx	lr

08008eb0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008eb0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008eb4:	2b02      	cmp	r3, #2
 8008eb6:	d003      	beq.n	8008ec0 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008eb8:	2380      	movs	r3, #128	; 0x80
 8008eba:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008ebc:	2001      	movs	r0, #1
 8008ebe:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008ec0:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008ec2:	2305      	movs	r3, #5
 8008ec4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008ec8:	6813      	ldr	r3, [r2, #0]
 8008eca:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008ece:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008ed0:	6013      	str	r3, [r2, #0]
}
 8008ed2:	4770      	bx	lr

08008ed4 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008ed4:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008ed8:	4770      	bx	lr
 8008eda:	bf00      	nop

08008edc <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008edc:	b348      	cbz	r0, 8008f32 <HAL_DMA2D_Init+0x56>
{
 8008ede:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8008ee0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008ee4:	4604      	mov	r4, r0
 8008ee6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008eea:	b1eb      	cbz	r3, 8008f28 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008eec:	6822      	ldr	r2, [r4, #0]
 8008eee:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008ef0:	2302      	movs	r3, #2
 8008ef2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008ef6:	6813      	ldr	r3, [r2, #0]
 8008ef8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008efc:	430b      	orrs	r3, r1
 8008efe:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8008f00:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008f02:	68a1      	ldr	r1, [r4, #8]
 8008f04:	f023 0307 	bic.w	r3, r3, #7
 8008f08:	430b      	orrs	r3, r1
 8008f0a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8008f0c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008f0e:	68e1      	ldr	r1, [r4, #12]
 8008f10:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008f14:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008f18:	430b      	orrs	r3, r1
 8008f1a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008f1c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008f1e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008f20:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008f22:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8008f26:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8008f28:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8008f2c:	f7f8 fe60 	bl	8001bf0 <HAL_DMA2D_MspInit>
 8008f30:	e7dc      	b.n	8008eec <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8008f32:	2001      	movs	r0, #1
}
 8008f34:	4770      	bx	lr
 8008f36:	bf00      	nop

08008f38 <HAL_DMA2D_LineEventCallback>:
 8008f38:	4770      	bx	lr
 8008f3a:	bf00      	nop

08008f3c <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8008f3c:	4770      	bx	lr
 8008f3e:	bf00      	nop

08008f40 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008f40:	6803      	ldr	r3, [r0, #0]
{
 8008f42:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008f44:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008f46:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008f48:	07ea      	lsls	r2, r5, #31
{
 8008f4a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008f4c:	d501      	bpl.n	8008f52 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8008f4e:	05f1      	lsls	r1, r6, #23
 8008f50:	d457      	bmi.n	8009002 <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8008f52:	06aa      	lsls	r2, r5, #26
 8008f54:	d501      	bpl.n	8008f5a <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8008f56:	04b3      	lsls	r3, r6, #18
 8008f58:	d43c      	bmi.n	8008fd4 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8008f5a:	0728      	lsls	r0, r5, #28
 8008f5c:	d501      	bpl.n	8008f62 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8008f5e:	0531      	lsls	r1, r6, #20
 8008f60:	d421      	bmi.n	8008fa6 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8008f62:	076a      	lsls	r2, r5, #29
 8008f64:	d501      	bpl.n	8008f6a <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8008f66:	0573      	lsls	r3, r6, #21
 8008f68:	d473      	bmi.n	8009052 <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008f6a:	07a8      	lsls	r0, r5, #30
 8008f6c:	d501      	bpl.n	8008f72 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8008f6e:	05b1      	lsls	r1, r6, #22
 8008f70:	d404      	bmi.n	8008f7c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8008f72:	06ea      	lsls	r2, r5, #27
 8008f74:	d501      	bpl.n	8008f7a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8008f76:	04f3      	lsls	r3, r6, #19
 8008f78:	d458      	bmi.n	800902c <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8008f7a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8008f7c:	6823      	ldr	r3, [r4, #0]
 8008f7e:	681a      	ldr	r2, [r3, #0]
 8008f80:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008f84:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8008f86:	2202      	movs	r2, #2
 8008f88:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008f8a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008f8c:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8008f8e:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008f90:	2201      	movs	r2, #1
 8008f92:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008f96:	2200      	movs	r2, #0
 8008f98:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8008f9c:	2b00      	cmp	r3, #0
 8008f9e:	d0e8      	beq.n	8008f72 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	4798      	blx	r3
 8008fa4:	e7e5      	b.n	8008f72 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8008fa6:	6823      	ldr	r3, [r4, #0]
 8008fa8:	681a      	ldr	r2, [r3, #0]
 8008faa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008fae:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8008fb0:	2208      	movs	r2, #8
 8008fb2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008fb4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008fb6:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008fb8:	f043 0304 	orr.w	r3, r3, #4
 8008fbc:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008fbe:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008fc0:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008fc2:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008fc6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008fca:	2a00      	cmp	r2, #0
 8008fcc:	d0c9      	beq.n	8008f62 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8008fce:	4620      	mov	r0, r4
 8008fd0:	4790      	blx	r2
 8008fd2:	e7c6      	b.n	8008f62 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8008fd4:	6823      	ldr	r3, [r4, #0]
 8008fd6:	681a      	ldr	r2, [r3, #0]
 8008fd8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008fdc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8008fde:	2220      	movs	r2, #32
 8008fe0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008fe2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008fe4:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008fe6:	f043 0302 	orr.w	r3, r3, #2
 8008fea:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008fec:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008fee:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008ff0:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008ff4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008ff8:	2a00      	cmp	r2, #0
 8008ffa:	d0ae      	beq.n	8008f5a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8008ffc:	4620      	mov	r0, r4
 8008ffe:	4790      	blx	r2
 8009000:	e7ab      	b.n	8008f5a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8009002:	681a      	ldr	r2, [r3, #0]
 8009004:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009008:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800900a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800900c:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800900e:	f042 0201 	orr.w	r2, r2, #1
 8009012:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8009014:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8009016:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009018:	2304      	movs	r3, #4
 800901a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800901e:	2300      	movs	r3, #0
 8009020:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8009024:	2a00      	cmp	r2, #0
 8009026:	d094      	beq.n	8008f52 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8009028:	4790      	blx	r2
 800902a:	e792      	b.n	8008f52 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800902c:	6823      	ldr	r3, [r4, #0]
 800902e:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8009030:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8009032:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009036:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8009038:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800903a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800903c:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800903e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8009040:	2300      	movs	r3, #0
 8009042:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8009046:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800904a:	4620      	mov	r0, r4
 800904c:	f7ff ff76 	bl	8008f3c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8009050:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8009052:	6823      	ldr	r3, [r4, #0]
 8009054:	681a      	ldr	r2, [r3, #0]
 8009056:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800905a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800905c:	2204      	movs	r2, #4
 800905e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8009060:	4620      	mov	r0, r4
 8009062:	f7ff ff69 	bl	8008f38 <HAL_DMA2D_LineEventCallback>
 8009066:	e780      	b.n	8008f6a <HAL_DMA2D_IRQHandler+0x2a>

08009068 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8009068:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800906c:	2b01      	cmp	r3, #1
 800906e:	d04d      	beq.n	800910c <HAL_DMA2D_ConfigLayer+0xa4>
 8009070:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009072:	2302      	movs	r3, #2
{
 8009074:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009076:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 800907a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800907e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009082:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8009086:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800908a:	3a09      	subs	r2, #9
 800908c:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800908e:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009092:	d91d      	bls.n	80090d0 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009094:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009098:	b189      	cbz	r1, 80090be <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800909a:	6801      	ldr	r1, [r0, #0]
 800909c:	4a1c      	ldr	r2, [pc, #112]	; (8009110 <HAL_DMA2D_ConfigLayer+0xa8>)
 800909e:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80090a0:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80090a4:	402a      	ands	r2, r5
 80090a6:	431a      	orrs	r2, r3
 80090a8:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80090aa:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80090ac:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80090ae:	2201      	movs	r2, #1
 80090b0:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80090b4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 80090b8:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 80090ba:	4618      	mov	r0, r3
}
 80090bc:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090be:	6801      	ldr	r1, [r0, #0]
 80090c0:	4a13      	ldr	r2, [pc, #76]	; (8009110 <HAL_DMA2D_ConfigLayer+0xa8>)
 80090c2:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 80090c4:	4022      	ands	r2, r4
 80090c6:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80090c8:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090ca:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80090cc:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80090ce:	e7ed      	b.n	80090ac <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80090d0:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 80090d4:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80090d6:	b961      	cbnz	r1, 80090f2 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090d8:	6801      	ldr	r1, [r0, #0]
 80090da:	4a0d      	ldr	r2, [pc, #52]	; (8009110 <HAL_DMA2D_ConfigLayer+0xa8>)
 80090dc:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80090de:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090e0:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80090e2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090e4:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80090e6:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80090ea:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80090ec:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80090ee:	628c      	str	r4, [r1, #40]	; 0x28
 80090f0:	e7dc      	b.n	80090ac <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80090f2:	6804      	ldr	r4, [r0, #0]
 80090f4:	4906      	ldr	r1, [pc, #24]	; (8009110 <HAL_DMA2D_ConfigLayer+0xa8>)
 80090f6:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80090f8:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80090fc:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80090fe:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009102:	4319      	orrs	r1, r3
 8009104:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009106:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8009108:	6222      	str	r2, [r4, #32]
 800910a:	e7cf      	b.n	80090ac <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 800910c:	2002      	movs	r0, #2
}
 800910e:	4770      	bx	lr
 8009110:	00fcfff0 	.word	0x00fcfff0

08009114 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009118:	2200      	movs	r2, #0
 800911a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800911c:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009380 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009120:	4e90      	ldr	r6, [pc, #576]	; (8009364 <HAL_GPIO_Init+0x250>)
{
 8009122:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009124:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009126:	4689      	mov	r9, r1
 8009128:	e005      	b.n	8009136 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800912a:	3301      	adds	r3, #1
 800912c:	2b10      	cmp	r3, #16
 800912e:	f102 0202 	add.w	r2, r2, #2
 8009132:	f000 8095 	beq.w	8009260 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009136:	2101      	movs	r1, #1
 8009138:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800913a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800913e:	43a1      	bics	r1, r4
 8009140:	d1f3      	bne.n	800912a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009142:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009146:	f00c 0103 	and.w	r1, ip, #3
 800914a:	1e4d      	subs	r5, r1, #1
 800914c:	2d01      	cmp	r5, #1
 800914e:	f240 808a 	bls.w	8009266 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009152:	2903      	cmp	r1, #3
 8009154:	f040 80ca 	bne.w	80092ec <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009158:	4091      	lsls	r1, r2
 800915a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800915c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800915e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009160:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009162:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009166:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009168:	d0df      	beq.n	800912a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800916a:	2100      	movs	r1, #0
 800916c:	9103      	str	r1, [sp, #12]
 800916e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009172:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009176:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800917a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800917e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009182:	9103      	str	r1, [sp, #12]
 8009184:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009186:	f023 0103 	bic.w	r1, r3, #3
 800918a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800918e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009192:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009196:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009198:	00bf      	lsls	r7, r7, #2
 800919a:	f04f 0e0f 	mov.w	lr, #15
 800919e:	fa0e fe07 	lsl.w	lr, lr, r7
 80091a2:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80091a6:	4d70      	ldr	r5, [pc, #448]	; (8009368 <HAL_GPIO_Init+0x254>)
 80091a8:	42a8      	cmp	r0, r5
 80091aa:	d02e      	beq.n	800920a <HAL_GPIO_Init+0xf6>
 80091ac:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80091b0:	42a8      	cmp	r0, r5
 80091b2:	f000 809f 	beq.w	80092f4 <HAL_GPIO_Init+0x1e0>
 80091b6:	4d6d      	ldr	r5, [pc, #436]	; (800936c <HAL_GPIO_Init+0x258>)
 80091b8:	42a8      	cmp	r0, r5
 80091ba:	f000 80a2 	beq.w	8009302 <HAL_GPIO_Init+0x1ee>
 80091be:	4d6c      	ldr	r5, [pc, #432]	; (8009370 <HAL_GPIO_Init+0x25c>)
 80091c0:	42a8      	cmp	r0, r5
 80091c2:	f000 80a5 	beq.w	8009310 <HAL_GPIO_Init+0x1fc>
 80091c6:	4d6b      	ldr	r5, [pc, #428]	; (8009374 <HAL_GPIO_Init+0x260>)
 80091c8:	42a8      	cmp	r0, r5
 80091ca:	f000 80a8 	beq.w	800931e <HAL_GPIO_Init+0x20a>
 80091ce:	4d6a      	ldr	r5, [pc, #424]	; (8009378 <HAL_GPIO_Init+0x264>)
 80091d0:	42a8      	cmp	r0, r5
 80091d2:	f000 80b2 	beq.w	800933a <HAL_GPIO_Init+0x226>
 80091d6:	4d69      	ldr	r5, [pc, #420]	; (800937c <HAL_GPIO_Init+0x268>)
 80091d8:	42a8      	cmp	r0, r5
 80091da:	f000 80b5 	beq.w	8009348 <HAL_GPIO_Init+0x234>
 80091de:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009384 <HAL_GPIO_Init+0x270>
 80091e2:	4570      	cmp	r0, lr
 80091e4:	f000 80a2 	beq.w	800932c <HAL_GPIO_Init+0x218>
 80091e8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009388 <HAL_GPIO_Init+0x274>
 80091ec:	4570      	cmp	r0, lr
 80091ee:	f000 80b2 	beq.w	8009356 <HAL_GPIO_Init+0x242>
 80091f2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800938c <HAL_GPIO_Init+0x278>
 80091f6:	4570      	cmp	r0, lr
 80091f8:	bf0c      	ite	eq
 80091fa:	f04f 0e09 	moveq.w	lr, #9
 80091fe:	f04f 0e0a 	movne.w	lr, #10
 8009202:	fa0e f707 	lsl.w	r7, lr, r7
 8009206:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800920a:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800920e:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009210:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009214:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009218:	bf0c      	ite	eq
 800921a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800921c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009220:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009222:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009224:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009228:	bf0c      	ite	eq
 800922a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800922c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009230:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009232:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009234:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009238:	bf0c      	ite	eq
 800923a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800923c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009240:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009242:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009244:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009248:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800924c:	bf0c      	ite	eq
 800924e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009250:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009254:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009256:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009258:	f102 0202 	add.w	r2, r2, #2
 800925c:	f47f af6b 	bne.w	8009136 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009260:	b005      	add	sp, #20
 8009262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009266:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800926a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800926e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009272:	2503      	movs	r5, #3
 8009274:	fa05 f802 	lsl.w	r8, r5, r2
 8009278:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800927c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009280:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009282:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009284:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009288:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800928c:	409f      	lsls	r7, r3
 800928e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009292:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009296:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009298:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800929a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800929e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 80092a2:	4097      	lsls	r7, r2
 80092a4:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80092a8:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 80092aa:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80092ac:	fa01 f102 	lsl.w	r1, r1, r2
 80092b0:	f47f af54 	bne.w	800915c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80092b4:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80092b8:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092bc:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80092c0:	f8de 7020 	ldr.w	r7, [lr, #32]
 80092c4:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092c6:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092ca:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092ce:	fa07 f708 	lsl.w	r7, r7, r8
 80092d2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80092d4:	270f      	movs	r7, #15
 80092d6:	fa07 f808 	lsl.w	r8, r7, r8
 80092da:	9f00      	ldr	r7, [sp, #0]
 80092dc:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80092e0:	9f01      	ldr	r7, [sp, #4]
 80092e2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80092e6:	f8ce 7020 	str.w	r7, [lr, #32]
 80092ea:	e737      	b.n	800915c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092ec:	2503      	movs	r5, #3
 80092ee:	4095      	lsls	r5, r2
 80092f0:	43ed      	mvns	r5, r5
 80092f2:	e7d1      	b.n	8009298 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80092f4:	f04f 0e01 	mov.w	lr, #1
 80092f8:	fa0e f707 	lsl.w	r7, lr, r7
 80092fc:	ea48 0807 	orr.w	r8, r8, r7
 8009300:	e783      	b.n	800920a <HAL_GPIO_Init+0xf6>
 8009302:	f04f 0e02 	mov.w	lr, #2
 8009306:	fa0e f707 	lsl.w	r7, lr, r7
 800930a:	ea48 0807 	orr.w	r8, r8, r7
 800930e:	e77c      	b.n	800920a <HAL_GPIO_Init+0xf6>
 8009310:	f04f 0e03 	mov.w	lr, #3
 8009314:	fa0e f707 	lsl.w	r7, lr, r7
 8009318:	ea48 0807 	orr.w	r8, r8, r7
 800931c:	e775      	b.n	800920a <HAL_GPIO_Init+0xf6>
 800931e:	f04f 0e04 	mov.w	lr, #4
 8009322:	fa0e f707 	lsl.w	r7, lr, r7
 8009326:	ea48 0807 	orr.w	r8, r8, r7
 800932a:	e76e      	b.n	800920a <HAL_GPIO_Init+0xf6>
 800932c:	f04f 0e07 	mov.w	lr, #7
 8009330:	fa0e f707 	lsl.w	r7, lr, r7
 8009334:	ea48 0807 	orr.w	r8, r8, r7
 8009338:	e767      	b.n	800920a <HAL_GPIO_Init+0xf6>
 800933a:	f04f 0e05 	mov.w	lr, #5
 800933e:	fa0e f707 	lsl.w	r7, lr, r7
 8009342:	ea48 0807 	orr.w	r8, r8, r7
 8009346:	e760      	b.n	800920a <HAL_GPIO_Init+0xf6>
 8009348:	f04f 0e06 	mov.w	lr, #6
 800934c:	fa0e f707 	lsl.w	r7, lr, r7
 8009350:	ea48 0807 	orr.w	r8, r8, r7
 8009354:	e759      	b.n	800920a <HAL_GPIO_Init+0xf6>
 8009356:	f04f 0e08 	mov.w	lr, #8
 800935a:	fa0e f707 	lsl.w	r7, lr, r7
 800935e:	ea48 0807 	orr.w	r8, r8, r7
 8009362:	e752      	b.n	800920a <HAL_GPIO_Init+0xf6>
 8009364:	40013c00 	.word	0x40013c00
 8009368:	40020000 	.word	0x40020000
 800936c:	40020800 	.word	0x40020800
 8009370:	40020c00 	.word	0x40020c00
 8009374:	40021000 	.word	0x40021000
 8009378:	40021400 	.word	0x40021400
 800937c:	40021800 	.word	0x40021800
 8009380:	40023800 	.word	0x40023800
 8009384:	40021c00 	.word	0x40021c00
 8009388:	40022000 	.word	0x40022000
 800938c:	40022400 	.word	0x40022400

08009390 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009390:	6903      	ldr	r3, [r0, #16]
 8009392:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009394:	bf14      	ite	ne
 8009396:	2001      	movne	r0, #1
 8009398:	2000      	moveq	r0, #0
 800939a:	4770      	bx	lr

0800939c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800939c:	b902      	cbnz	r2, 80093a0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800939e:	0409      	lsls	r1, r1, #16
 80093a0:	6181      	str	r1, [r0, #24]
  }
}
 80093a2:	4770      	bx	lr

080093a4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80093a4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80093a6:	ea01 0203 	and.w	r2, r1, r3
 80093aa:	ea21 0103 	bic.w	r1, r1, r3
 80093ae:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80093b2:	6181      	str	r1, [r0, #24]
}
 80093b4:	4770      	bx	lr
 80093b6:	bf00      	nop

080093b8 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80093b8:	4770      	bx	lr
 80093ba:	bf00      	nop

080093bc <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80093bc:	4a04      	ldr	r2, [pc, #16]	; (80093d0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80093be:	6951      	ldr	r1, [r2, #20]
 80093c0:	4201      	tst	r1, r0
 80093c2:	d100      	bne.n	80093c6 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80093c4:	4770      	bx	lr
{
 80093c6:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80093c8:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80093ca:	f7ff fff5 	bl	80093b8 <HAL_GPIO_EXTI_Callback>
}
 80093ce:	bd08      	pop	{r3, pc}
 80093d0:	40013c00 	.word	0x40013c00

080093d4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80093d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093d8:	6804      	ldr	r4, [r0, #0]
{
 80093da:	b083      	sub	sp, #12
 80093dc:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093de:	6823      	ldr	r3, [r4, #0]
{
 80093e0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80093e4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80093ec:	4606      	mov	r6, r0
 80093ee:	468a      	mov	sl, r1
 80093f0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80093f2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80093f4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80093f8:	d136      	bne.n	8009468 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80093fa:	6965      	ldr	r5, [r4, #20]
 80093fc:	07e8      	lsls	r0, r5, #31
 80093fe:	d5fc      	bpl.n	80093fa <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009400:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009404:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009406:	f1b9 3fff 	cmp.w	r9, #4294967295
 800940a:	d003      	beq.n	8009414 <I2C_RequestMemoryWrite+0x40>
 800940c:	e04f      	b.n	80094ae <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800940e:	6961      	ldr	r1, [r4, #20]
 8009410:	054d      	lsls	r5, r1, #21
 8009412:	d45d      	bmi.n	80094d0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009414:	6961      	ldr	r1, [r4, #20]
 8009416:	078b      	lsls	r3, r1, #30
 8009418:	d5f9      	bpl.n	800940e <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800941a:	2300      	movs	r3, #0
 800941c:	9301      	str	r3, [sp, #4]
 800941e:	6963      	ldr	r3, [r4, #20]
 8009420:	9301      	str	r3, [sp, #4]
 8009422:	69a3      	ldr	r3, [r4, #24]
 8009424:	9301      	str	r3, [sp, #4]
 8009426:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009428:	f1b9 3fff 	cmp.w	r9, #4294967295
 800942c:	f040 8088 	bne.w	8009540 <I2C_RequestMemoryWrite+0x16c>
 8009430:	6963      	ldr	r3, [r4, #20]
 8009432:	061a      	lsls	r2, r3, #24
 8009434:	d464      	bmi.n	8009500 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009436:	6963      	ldr	r3, [r4, #20]
 8009438:	055b      	lsls	r3, r3, #21
 800943a:	d5f9      	bpl.n	8009430 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800943c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800943e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009442:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009444:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009446:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009448:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800944c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009450:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009452:	f043 0304 	orr.w	r3, r3, #4
 8009456:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009458:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800945a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800945c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800945e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009462:	d066      	beq.n	8009532 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009464:	2001      	movs	r0, #1
 8009466:	e01f      	b.n	80094a8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009468:	6963      	ldr	r3, [r4, #20]
 800946a:	07d9      	lsls	r1, r3, #31
 800946c:	d4c8      	bmi.n	8009400 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800946e:	f7ff fc95 	bl	8008d9c <HAL_GetTick>
 8009472:	eba0 000b 	sub.w	r0, r0, fp
 8009476:	4581      	cmp	r9, r0
 8009478:	d304      	bcc.n	8009484 <I2C_RequestMemoryWrite+0xb0>
 800947a:	f1b9 0f00 	cmp.w	r9, #0
 800947e:	d001      	beq.n	8009484 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009480:	6834      	ldr	r4, [r6, #0]
 8009482:	e7b7      	b.n	80093f4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009484:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009486:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009488:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800948a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800948e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009492:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009494:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009496:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800949a:	f042 0220 	orr.w	r2, r2, #32
 800949e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80094a0:	680b      	ldr	r3, [r1, #0]
 80094a2:	05dc      	lsls	r4, r3, #23
 80094a4:	d435      	bmi.n	8009512 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80094a6:	2003      	movs	r0, #3
}
 80094a8:	b003      	add	sp, #12
 80094aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094ae:	6963      	ldr	r3, [r4, #20]
 80094b0:	0798      	lsls	r0, r3, #30
 80094b2:	d4b2      	bmi.n	800941a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094b4:	6963      	ldr	r3, [r4, #20]
 80094b6:	055a      	lsls	r2, r3, #21
 80094b8:	d40a      	bmi.n	80094d0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80094ba:	f7ff fc6f 	bl	8008d9c <HAL_GetTick>
 80094be:	eba0 000b 	sub.w	r0, r0, fp
 80094c2:	4581      	cmp	r9, r0
 80094c4:	d34e      	bcc.n	8009564 <I2C_RequestMemoryWrite+0x190>
 80094c6:	f1b9 0f00 	cmp.w	r9, #0
 80094ca:	d04b      	beq.n	8009564 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094cc:	6834      	ldr	r4, [r6, #0]
 80094ce:	e79a      	b.n	8009406 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80094d0:	6823      	ldr	r3, [r4, #0]
 80094d2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80094d6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80094d8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094da:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80094de:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094e0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80094e2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80094e4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80094e8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094ec:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80094ee:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094f2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80094f6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094f8:	6433      	str	r3, [r6, #64]	; 0x40
}
 80094fa:	b003      	add	sp, #12
 80094fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009500:	f1b8 0f01 	cmp.w	r8, #1
 8009504:	d109      	bne.n	800951a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009506:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009508:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800950a:	6127      	str	r7, [r4, #16]
}
 800950c:	b003      	add	sp, #12
 800950e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009512:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009516:	6433      	str	r3, [r6, #64]	; 0x40
 8009518:	e7c5      	b.n	80094a6 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800951a:	0a3b      	lsrs	r3, r7, #8
 800951c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800951e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009522:	d12e      	bne.n	8009582 <I2C_RequestMemoryWrite+0x1ae>
 8009524:	6963      	ldr	r3, [r4, #20]
 8009526:	0619      	lsls	r1, r3, #24
 8009528:	d4ed      	bmi.n	8009506 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800952a:	6963      	ldr	r3, [r4, #20]
 800952c:	055a      	lsls	r2, r3, #21
 800952e:	d5f9      	bpl.n	8009524 <I2C_RequestMemoryWrite+0x150>
 8009530:	e784      	b.n	800943c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009532:	6832      	ldr	r2, [r6, #0]
 8009534:	6813      	ldr	r3, [r2, #0]
 8009536:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800953a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800953c:	6013      	str	r3, [r2, #0]
 800953e:	e7b3      	b.n	80094a8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009540:	6963      	ldr	r3, [r4, #20]
 8009542:	061d      	lsls	r5, r3, #24
 8009544:	d4dc      	bmi.n	8009500 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009546:	6963      	ldr	r3, [r4, #20]
 8009548:	0559      	lsls	r1, r3, #21
 800954a:	f53f af77 	bmi.w	800943c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800954e:	f7ff fc25 	bl	8008d9c <HAL_GetTick>
 8009552:	eba0 000b 	sub.w	r0, r0, fp
 8009556:	4581      	cmp	r9, r0
 8009558:	d325      	bcc.n	80095a6 <I2C_RequestMemoryWrite+0x1d2>
 800955a:	f1b9 0f00 	cmp.w	r9, #0
 800955e:	d022      	beq.n	80095a6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009560:	6834      	ldr	r4, [r6, #0]
 8009562:	e761      	b.n	8009428 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009564:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009566:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009568:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800956a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800956e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009572:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009574:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009578:	f043 0320 	orr.w	r3, r3, #32
 800957c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800957e:	2001      	movs	r0, #1
 8009580:	e792      	b.n	80094a8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009582:	6963      	ldr	r3, [r4, #20]
 8009584:	061b      	lsls	r3, r3, #24
 8009586:	d4be      	bmi.n	8009506 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009588:	6963      	ldr	r3, [r4, #20]
 800958a:	0558      	lsls	r0, r3, #21
 800958c:	f53f af56 	bmi.w	800943c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009590:	f7ff fc04 	bl	8008d9c <HAL_GetTick>
 8009594:	eba0 000b 	sub.w	r0, r0, fp
 8009598:	4581      	cmp	r9, r0
 800959a:	d304      	bcc.n	80095a6 <I2C_RequestMemoryWrite+0x1d2>
 800959c:	f1b9 0f00 	cmp.w	r9, #0
 80095a0:	d001      	beq.n	80095a6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095a2:	6834      	ldr	r4, [r6, #0]
 80095a4:	e7bb      	b.n	800951e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80095a6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80095a8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80095aa:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80095ac:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80095b0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80095b4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80095b6:	4313      	orrs	r3, r2
 80095b8:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80095ba:	e74d      	b.n	8009458 <I2C_RequestMemoryWrite+0x84>

080095bc <I2C_RequestMemoryRead>:
{
 80095bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80095c0:	6804      	ldr	r4, [r0, #0]
{
 80095c2:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80095c4:	6823      	ldr	r3, [r4, #0]
 80095c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80095ca:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095cc:	6823      	ldr	r3, [r4, #0]
{
 80095ce:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80095d4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80095d8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80095dc:	6023      	str	r3, [r4, #0]
{
 80095de:	4606      	mov	r6, r0
 80095e0:	468b      	mov	fp, r1
 80095e2:	4617      	mov	r7, r2
 80095e4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80095e8:	d13a      	bne.n	8009660 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80095ea:	6965      	ldr	r5, [r4, #20]
 80095ec:	07eb      	lsls	r3, r5, #31
 80095ee:	d5fc      	bpl.n	80095ea <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80095f0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80095f4:	6123      	str	r3, [r4, #16]
 80095f6:	fa5f fb8b 	uxtb.w	fp, fp
 80095fa:	f1ba 3fff 	cmp.w	sl, #4294967295
 80095fe:	d003      	beq.n	8009608 <I2C_RequestMemoryRead+0x4c>
 8009600:	e069      	b.n	80096d6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009602:	6965      	ldr	r5, [r4, #20]
 8009604:	056a      	lsls	r2, r5, #21
 8009606:	d44e      	bmi.n	80096a6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009608:	6965      	ldr	r5, [r4, #20]
 800960a:	07a9      	lsls	r1, r5, #30
 800960c:	d5f9      	bpl.n	8009602 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800960e:	2300      	movs	r3, #0
 8009610:	9301      	str	r3, [sp, #4]
 8009612:	6963      	ldr	r3, [r4, #20]
 8009614:	9301      	str	r3, [sp, #4]
 8009616:	69a3      	ldr	r3, [r4, #24]
 8009618:	9301      	str	r3, [sp, #4]
 800961a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800961c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009620:	f040 80bd 	bne.w	800979e <I2C_RequestMemoryRead+0x1e2>
 8009624:	6963      	ldr	r3, [r4, #20]
 8009626:	0618      	lsls	r0, r3, #24
 8009628:	d468      	bmi.n	80096fc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800962a:	6963      	ldr	r3, [r4, #20]
 800962c:	0559      	lsls	r1, r3, #21
 800962e:	d5f9      	bpl.n	8009624 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009630:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009632:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009636:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009638:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800963a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800963c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009640:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009644:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009646:	f043 0304 	orr.w	r3, r3, #4
 800964a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800964c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800964e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009650:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009652:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009656:	d070      	beq.n	800973a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009658:	2001      	movs	r0, #1
}
 800965a:	b003      	add	sp, #12
 800965c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009660:	6963      	ldr	r3, [r4, #20]
 8009662:	07dd      	lsls	r5, r3, #31
 8009664:	d4c4      	bmi.n	80095f0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009666:	f7ff fb99 	bl	8008d9c <HAL_GetTick>
 800966a:	eba0 0009 	sub.w	r0, r0, r9
 800966e:	4582      	cmp	sl, r0
 8009670:	d304      	bcc.n	800967c <I2C_RequestMemoryRead+0xc0>
 8009672:	f1ba 0f00 	cmp.w	sl, #0
 8009676:	d001      	beq.n	800967c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009678:	6834      	ldr	r4, [r6, #0]
 800967a:	e7b3      	b.n	80095e4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800967c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800967e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009680:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009682:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009686:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800968a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800968c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800968e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009692:	f042 0220 	orr.w	r2, r2, #32
 8009696:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009698:	680b      	ldr	r3, [r1, #0]
 800969a:	05dc      	lsls	r4, r3, #23
 800969c:	d43d      	bmi.n	800971a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800969e:	2003      	movs	r0, #3
}
 80096a0:	b003      	add	sp, #12
 80096a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096a6:	6823      	ldr	r3, [r4, #0]
 80096a8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80096ac:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096ae:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096b0:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80096b4:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096b6:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80096b8:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80096ba:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096be:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096c2:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80096c4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096c8:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80096cc:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096ce:	6433      	str	r3, [r6, #64]	; 0x40
}
 80096d0:	b003      	add	sp, #12
 80096d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096d6:	6963      	ldr	r3, [r4, #20]
 80096d8:	079b      	lsls	r3, r3, #30
 80096da:	d498      	bmi.n	800960e <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096dc:	6963      	ldr	r3, [r4, #20]
 80096de:	0558      	lsls	r0, r3, #21
 80096e0:	d4e1      	bmi.n	80096a6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80096e2:	f7ff fb5b 	bl	8008d9c <HAL_GetTick>
 80096e6:	eba0 0009 	sub.w	r0, r0, r9
 80096ea:	4582      	cmp	sl, r0
 80096ec:	f0c0 808f 	bcc.w	800980e <I2C_RequestMemoryRead+0x252>
 80096f0:	f1ba 0f00 	cmp.w	sl, #0
 80096f4:	f000 808b 	beq.w	800980e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096f8:	6834      	ldr	r4, [r6, #0]
 80096fa:	e77e      	b.n	80095fa <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80096fc:	f1b8 0f01 	cmp.w	r8, #1
 8009700:	d10f      	bne.n	8009722 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009702:	b2ff      	uxtb	r7, r7
 8009704:	6127      	str	r7, [r4, #16]
 8009706:	f1ba 3fff 	cmp.w	sl, #4294967295
 800970a:	d16e      	bne.n	80097ea <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800970c:	6963      	ldr	r3, [r4, #20]
 800970e:	061b      	lsls	r3, r3, #24
 8009710:	d41a      	bmi.n	8009748 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009712:	6963      	ldr	r3, [r4, #20]
 8009714:	055f      	lsls	r7, r3, #21
 8009716:	d5f9      	bpl.n	800970c <I2C_RequestMemoryRead+0x150>
 8009718:	e78a      	b.n	8009630 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800971a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800971e:	6433      	str	r3, [r6, #64]	; 0x40
 8009720:	e7bd      	b.n	800969e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009722:	0a3b      	lsrs	r3, r7, #8
 8009724:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009726:	f1ba 3fff 	cmp.w	sl, #4294967295
 800972a:	d17e      	bne.n	800982a <I2C_RequestMemoryRead+0x26e>
 800972c:	6963      	ldr	r3, [r4, #20]
 800972e:	061d      	lsls	r5, r3, #24
 8009730:	d4e7      	bmi.n	8009702 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009732:	6963      	ldr	r3, [r4, #20]
 8009734:	0558      	lsls	r0, r3, #21
 8009736:	d5f9      	bpl.n	800972c <I2C_RequestMemoryRead+0x170>
 8009738:	e77a      	b.n	8009630 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800973a:	6832      	ldr	r2, [r6, #0]
 800973c:	6813      	ldr	r3, [r2, #0]
 800973e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009742:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009744:	6013      	str	r3, [r2, #0]
 8009746:	e7ab      	b.n	80096a0 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009748:	6823      	ldr	r3, [r4, #0]
 800974a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800974e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009750:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009754:	d113      	bne.n	800977e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009756:	6963      	ldr	r3, [r4, #20]
 8009758:	07d8      	lsls	r0, r3, #31
 800975a:	d5fc      	bpl.n	8009756 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800975c:	f04b 0301 	orr.w	r3, fp, #1
 8009760:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009762:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009766:	d003      	beq.n	8009770 <I2C_RequestMemoryRead+0x1b4>
 8009768:	e02b      	b.n	80097c2 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800976a:	6963      	ldr	r3, [r4, #20]
 800976c:	055b      	lsls	r3, r3, #21
 800976e:	d49a      	bmi.n	80096a6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009770:	6963      	ldr	r3, [r4, #20]
 8009772:	43db      	mvns	r3, r3
 8009774:	f013 0302 	ands.w	r3, r3, #2
 8009778:	d1f7      	bne.n	800976a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800977a:	4618      	mov	r0, r3
 800977c:	e790      	b.n	80096a0 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800977e:	6963      	ldr	r3, [r4, #20]
 8009780:	07d9      	lsls	r1, r3, #31
 8009782:	d4eb      	bmi.n	800975c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009784:	f7ff fb0a 	bl	8008d9c <HAL_GetTick>
 8009788:	eba0 0009 	sub.w	r0, r0, r9
 800978c:	4582      	cmp	sl, r0
 800978e:	f4ff af75 	bcc.w	800967c <I2C_RequestMemoryRead+0xc0>
 8009792:	f1ba 0f00 	cmp.w	sl, #0
 8009796:	f43f af71 	beq.w	800967c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800979a:	6834      	ldr	r4, [r6, #0]
 800979c:	e7d8      	b.n	8009750 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800979e:	6963      	ldr	r3, [r4, #20]
 80097a0:	061a      	lsls	r2, r3, #24
 80097a2:	d4ab      	bmi.n	80096fc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097a4:	6963      	ldr	r3, [r4, #20]
 80097a6:	055d      	lsls	r5, r3, #21
 80097a8:	f53f af42 	bmi.w	8009630 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097ac:	f7ff faf6 	bl	8008d9c <HAL_GetTick>
 80097b0:	eba0 0009 	sub.w	r0, r0, r9
 80097b4:	4582      	cmp	sl, r0
 80097b6:	d34b      	bcc.n	8009850 <I2C_RequestMemoryRead+0x294>
 80097b8:	f1ba 0f00 	cmp.w	sl, #0
 80097bc:	d048      	beq.n	8009850 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097be:	6834      	ldr	r4, [r6, #0]
 80097c0:	e72c      	b.n	800961c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097c2:	6963      	ldr	r3, [r4, #20]
 80097c4:	43db      	mvns	r3, r3
 80097c6:	f013 0302 	ands.w	r3, r3, #2
 80097ca:	d0d6      	beq.n	800977a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097cc:	6963      	ldr	r3, [r4, #20]
 80097ce:	055a      	lsls	r2, r3, #21
 80097d0:	f53f af69 	bmi.w	80096a6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097d4:	f7ff fae2 	bl	8008d9c <HAL_GetTick>
 80097d8:	eba0 0009 	sub.w	r0, r0, r9
 80097dc:	4582      	cmp	sl, r0
 80097de:	d316      	bcc.n	800980e <I2C_RequestMemoryRead+0x252>
 80097e0:	f1ba 0f00 	cmp.w	sl, #0
 80097e4:	d013      	beq.n	800980e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097e6:	6834      	ldr	r4, [r6, #0]
 80097e8:	e7bb      	b.n	8009762 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097ea:	6963      	ldr	r3, [r4, #20]
 80097ec:	061d      	lsls	r5, r3, #24
 80097ee:	d4ab      	bmi.n	8009748 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097f0:	6963      	ldr	r3, [r4, #20]
 80097f2:	055a      	lsls	r2, r3, #21
 80097f4:	f53f af1c 	bmi.w	8009630 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097f8:	f7ff fad0 	bl	8008d9c <HAL_GetTick>
 80097fc:	eba0 0009 	sub.w	r0, r0, r9
 8009800:	4582      	cmp	sl, r0
 8009802:	d325      	bcc.n	8009850 <I2C_RequestMemoryRead+0x294>
 8009804:	f1ba 0f00 	cmp.w	sl, #0
 8009808:	d022      	beq.n	8009850 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800980a:	6834      	ldr	r4, [r6, #0]
 800980c:	e77b      	b.n	8009706 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800980e:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009810:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009812:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009814:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009818:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800981c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800981e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009822:	f043 0320 	orr.w	r3, r3, #32
 8009826:	6433      	str	r3, [r6, #64]	; 0x40
 8009828:	e716      	b.n	8009658 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800982a:	6963      	ldr	r3, [r4, #20]
 800982c:	0619      	lsls	r1, r3, #24
 800982e:	f53f af68 	bmi.w	8009702 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009832:	6963      	ldr	r3, [r4, #20]
 8009834:	055b      	lsls	r3, r3, #21
 8009836:	f53f aefb 	bmi.w	8009630 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800983a:	f7ff faaf 	bl	8008d9c <HAL_GetTick>
 800983e:	eba0 0009 	sub.w	r0, r0, r9
 8009842:	4582      	cmp	sl, r0
 8009844:	d304      	bcc.n	8009850 <I2C_RequestMemoryRead+0x294>
 8009846:	f1ba 0f00 	cmp.w	sl, #0
 800984a:	d001      	beq.n	8009850 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800984c:	6834      	ldr	r4, [r6, #0]
 800984e:	e76a      	b.n	8009726 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009850:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009852:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009854:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009856:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800985a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800985e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009860:	4313      	orrs	r3, r2
 8009862:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009864:	e6f2      	b.n	800964c <I2C_RequestMemoryRead+0x90>
 8009866:	bf00      	nop

08009868 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009868:	2800      	cmp	r0, #0
 800986a:	f000 80b9 	beq.w	80099e0 <HAL_I2C_Init+0x178>
{
 800986e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009870:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009874:	4604      	mov	r4, r0
 8009876:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800987a:	2b00      	cmp	r3, #0
 800987c:	f000 8098 	beq.w	80099b0 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009880:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009882:	2224      	movs	r2, #36	; 0x24
 8009884:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009888:	681a      	ldr	r2, [r3, #0]
 800988a:	f022 0201 	bic.w	r2, r2, #1
 800988e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009890:	681a      	ldr	r2, [r3, #0]
 8009892:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009896:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009898:	681a      	ldr	r2, [r3, #0]
 800989a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800989e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80098a0:	f001 fe70 	bl	800b584 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80098a4:	6865      	ldr	r5, [r4, #4]
 80098a6:	4b4f      	ldr	r3, [pc, #316]	; (80099e4 <HAL_I2C_Init+0x17c>)
 80098a8:	429d      	cmp	r5, r3
 80098aa:	d84f      	bhi.n	800994c <HAL_I2C_Init+0xe4>
 80098ac:	4b4e      	ldr	r3, [pc, #312]	; (80099e8 <HAL_I2C_Init+0x180>)
 80098ae:	4298      	cmp	r0, r3
 80098b0:	d97c      	bls.n	80099ac <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80098b2:	4b4e      	ldr	r3, [pc, #312]	; (80099ec <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098b4:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80098b6:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098ba:	1e43      	subs	r3, r0, #1
 80098bc:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80098c0:	6822      	ldr	r2, [r4, #0]
 80098c2:	6851      	ldr	r1, [r2, #4]
 80098c4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80098c8:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 80098cc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80098ce:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 80098d0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80098d4:	f10c 0c01 	add.w	ip, ip, #1
 80098d8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80098dc:	ea41 010c 	orr.w	r1, r1, ip
 80098e0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80098e2:	69d1      	ldr	r1, [r2, #28]
 80098e4:	f640 70fc 	movw	r0, #4092	; 0xffc
 80098e8:	3301      	adds	r3, #1
 80098ea:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80098ee:	4203      	tst	r3, r0
 80098f0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80098f4:	d161      	bne.n	80099ba <HAL_I2C_Init+0x152>
 80098f6:	2304      	movs	r3, #4
 80098f8:	430b      	orrs	r3, r1
 80098fa:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80098fc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009900:	6811      	ldr	r1, [r2, #0]
 8009902:	4303      	orrs	r3, r0
 8009904:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009908:	430b      	orrs	r3, r1
 800990a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800990c:	6891      	ldr	r1, [r2, #8]
 800990e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009912:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009916:	4303      	orrs	r3, r0
 8009918:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800991c:	430b      	orrs	r3, r1
 800991e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009920:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009924:	68d1      	ldr	r1, [r2, #12]
 8009926:	4303      	orrs	r3, r0
 8009928:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800992c:	430b      	orrs	r3, r1
 800992e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009930:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009932:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009934:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009938:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800993a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800993c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800993e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009942:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009944:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009948:	4618      	mov	r0, r3
}
 800994a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800994c:	4b28      	ldr	r3, [pc, #160]	; (80099f0 <HAL_I2C_Init+0x188>)
 800994e:	4298      	cmp	r0, r3
 8009950:	d92c      	bls.n	80099ac <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009952:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009954:	4b25      	ldr	r3, [pc, #148]	; (80099ec <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009956:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009958:	4e26      	ldr	r6, [pc, #152]	; (80099f4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800995a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800995e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009962:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009966:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009968:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800996c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009970:	fb01 f303 	mul.w	r3, r1, r3
 8009974:	fba6 6303 	umull	r6, r3, r6, r3
 8009978:	6a11      	ldr	r1, [r2, #32]
 800997a:	099b      	lsrs	r3, r3, #6
 800997c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009980:	3301      	adds	r3, #1
 8009982:	430b      	orrs	r3, r1
 8009984:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009986:	69d1      	ldr	r1, [r2, #28]
 8009988:	68a3      	ldr	r3, [r4, #8]
 800998a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800998e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009992:	b9ab      	cbnz	r3, 80099c0 <HAL_I2C_Init+0x158>
 8009994:	1e43      	subs	r3, r0, #1
 8009996:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800999a:	fbb3 f3f5 	udiv	r3, r3, r5
 800999e:	3301      	adds	r3, #1
 80099a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099a4:	b1d3      	cbz	r3, 80099dc <HAL_I2C_Init+0x174>
 80099a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80099aa:	e7a5      	b.n	80098f8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80099ac:	2001      	movs	r0, #1
}
 80099ae:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80099b0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80099b4:	f7f8 f93c 	bl	8001c30 <HAL_I2C_MspInit>
 80099b8:	e762      	b.n	8009880 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80099ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099be:	e79b      	b.n	80098f8 <HAL_I2C_Init+0x90>
 80099c0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80099c4:	1e43      	subs	r3, r0, #1
 80099c6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80099ca:	fbb3 f3f5 	udiv	r3, r3, r5
 80099ce:	3301      	adds	r3, #1
 80099d0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099d4:	b113      	cbz	r3, 80099dc <HAL_I2C_Init+0x174>
 80099d6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80099da:	e78d      	b.n	80098f8 <HAL_I2C_Init+0x90>
 80099dc:	2301      	movs	r3, #1
 80099de:	e78b      	b.n	80098f8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80099e0:	2001      	movs	r0, #1
}
 80099e2:	4770      	bx	lr
 80099e4:	000186a0 	.word	0x000186a0
 80099e8:	001e847f 	.word	0x001e847f
 80099ec:	431bde83 	.word	0x431bde83
 80099f0:	003d08ff 	.word	0x003d08ff
 80099f4:	10624dd3 	.word	0x10624dd3

080099f8 <HAL_I2C_Mem_Write>:
{
 80099f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099fc:	4604      	mov	r4, r0
 80099fe:	b083      	sub	sp, #12
 8009a00:	4699      	mov	r9, r3
 8009a02:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009a06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009a08:	460f      	mov	r7, r1
 8009a0a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009a0c:	f7ff f9c6 	bl	8008d9c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009a10:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009a14:	2b20      	cmp	r3, #32
 8009a16:	d004      	beq.n	8009a22 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009a18:	2702      	movs	r7, #2
}
 8009a1a:	4638      	mov	r0, r7
 8009a1c:	b003      	add	sp, #12
 8009a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a22:	4605      	mov	r5, r0
 8009a24:	e005      	b.n	8009a32 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a26:	f7ff f9b9 	bl	8008d9c <HAL_GetTick>
 8009a2a:	1b40      	subs	r0, r0, r5
 8009a2c:	2819      	cmp	r0, #25
 8009a2e:	f200 80a8 	bhi.w	8009b82 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a32:	6820      	ldr	r0, [r4, #0]
 8009a34:	6983      	ldr	r3, [r0, #24]
 8009a36:	ea6f 0c03 	mvn.w	ip, r3
 8009a3a:	f01c 0b02 	ands.w	fp, ip, #2
 8009a3e:	d0f2      	beq.n	8009a26 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009a40:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009a44:	2b01      	cmp	r3, #1
 8009a46:	d0e7      	beq.n	8009a18 <HAL_I2C_Mem_Write+0x20>
 8009a48:	2301      	movs	r3, #1
 8009a4a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009a4e:	6803      	ldr	r3, [r0, #0]
 8009a50:	07db      	lsls	r3, r3, #31
 8009a52:	d572      	bpl.n	8009b3a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a54:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009a56:	6807      	ldr	r7, [r0, #0]
 8009a58:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009a5c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009a5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009a60:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009a62:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a64:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009a68:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009a6c:	2040      	movs	r0, #64	; 0x40
 8009a6e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009a72:	2000      	movs	r0, #0
 8009a74:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009a76:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009a7a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009a7c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009a7e:	4856      	ldr	r0, [pc, #344]	; (8009bd8 <HAL_I2C_Mem_Write+0x1e0>)
 8009a80:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a82:	464b      	mov	r3, r9
 8009a84:	4642      	mov	r2, r8
 8009a86:	4620      	mov	r0, r4
 8009a88:	f7ff fca4 	bl	80093d4 <I2C_RequestMemoryWrite>
 8009a8c:	4607      	mov	r7, r0
 8009a8e:	bb00      	cbnz	r0, 8009ad2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009a90:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009a92:	2b00      	cmp	r3, #0
 8009a94:	f000 809e 	beq.w	8009bd4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009a98:	6823      	ldr	r3, [r4, #0]
 8009a9a:	1c72      	adds	r2, r6, #1
 8009a9c:	d159      	bne.n	8009b52 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a9e:	695a      	ldr	r2, [r3, #20]
 8009aa0:	0610      	lsls	r0, r2, #24
 8009aa2:	d41b      	bmi.n	8009adc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009aa4:	695a      	ldr	r2, [r3, #20]
 8009aa6:	0551      	lsls	r1, r2, #21
 8009aa8:	d5f9      	bpl.n	8009a9e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009aaa:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009aac:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009ab0:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ab2:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009ab4:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009ab6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009aba:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009abe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009ac0:	f043 0304 	orr.w	r3, r3, #4
 8009ac4:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ac6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009ac8:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009aca:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009acc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009ad0:	d038      	beq.n	8009b44 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009ad2:	2701      	movs	r7, #1
}
 8009ad4:	4638      	mov	r0, r7
 8009ad6:	b003      	add	sp, #12
 8009ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009adc:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009ae0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ae4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009ae6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009aea:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009aee:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009af0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009af2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009af4:	3a01      	subs	r2, #1
 8009af6:	b292      	uxth	r2, r2
 8009af8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009afa:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009afc:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009afe:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009b00:	0740      	lsls	r0, r0, #29
 8009b02:	d517      	bpl.n	8009b34 <HAL_I2C_Mem_Write+0x13c>
 8009b04:	b942      	cbnz	r2, 8009b18 <HAL_I2C_Mem_Write+0x120>
 8009b06:	1c72      	adds	r2, r6, #1
 8009b08:	d156      	bne.n	8009bb8 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b0a:	695a      	ldr	r2, [r3, #20]
 8009b0c:	0750      	lsls	r0, r2, #29
 8009b0e:	d446      	bmi.n	8009b9e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b10:	695a      	ldr	r2, [r3, #20]
 8009b12:	0551      	lsls	r1, r2, #21
 8009b14:	d5f9      	bpl.n	8009b0a <HAL_I2C_Mem_Write+0x112>
 8009b16:	e7c8      	b.n	8009aaa <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b18:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009b1c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009b1e:	f10c 0102 	add.w	r1, ip, #2
 8009b22:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009b24:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009b26:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009b2a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009b2c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009b2e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009b30:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009b32:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009b34:	2a00      	cmp	r2, #0
 8009b36:	d1b0      	bne.n	8009a9a <HAL_I2C_Mem_Write+0xa2>
 8009b38:	e7e5      	b.n	8009b06 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009b3a:	6803      	ldr	r3, [r0, #0]
 8009b3c:	f043 0301 	orr.w	r3, r3, #1
 8009b40:	6003      	str	r3, [r0, #0]
 8009b42:	e787      	b.n	8009a54 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b44:	6822      	ldr	r2, [r4, #0]
 8009b46:	6813      	ldr	r3, [r2, #0]
 8009b48:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009b4c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b4e:	6013      	str	r3, [r2, #0]
 8009b50:	e763      	b.n	8009a1a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b52:	695a      	ldr	r2, [r3, #20]
 8009b54:	0612      	lsls	r2, r2, #24
 8009b56:	d4c1      	bmi.n	8009adc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b58:	695a      	ldr	r2, [r3, #20]
 8009b5a:	0551      	lsls	r1, r2, #21
 8009b5c:	d4a5      	bmi.n	8009aaa <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b5e:	f7ff f91d 	bl	8008d9c <HAL_GetTick>
 8009b62:	1b40      	subs	r0, r0, r5
 8009b64:	4286      	cmp	r6, r0
 8009b66:	d301      	bcc.n	8009b6c <HAL_I2C_Mem_Write+0x174>
 8009b68:	2e00      	cmp	r6, #0
 8009b6a:	d195      	bne.n	8009a98 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b6c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b6e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b70:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b72:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009b76:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b7a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b7c:	4313      	orrs	r3, r2
 8009b7e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009b80:	e7a1      	b.n	8009ac6 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b82:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b84:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b88:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009b8c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b90:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009b92:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009b96:	f043 0320 	orr.w	r3, r3, #32
 8009b9a:	6423      	str	r3, [r4, #64]	; 0x40
 8009b9c:	e73c      	b.n	8009a18 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b9e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ba0:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ba2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009ba6:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ba8:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009baa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009bae:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009bb2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009bb6:	e730      	b.n	8009a1a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bb8:	695a      	ldr	r2, [r3, #20]
 8009bba:	0752      	lsls	r2, r2, #29
 8009bbc:	d4ef      	bmi.n	8009b9e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bbe:	695a      	ldr	r2, [r3, #20]
 8009bc0:	0551      	lsls	r1, r2, #21
 8009bc2:	f53f af72 	bmi.w	8009aaa <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bc6:	f7ff f8e9 	bl	8008d9c <HAL_GetTick>
 8009bca:	1b40      	subs	r0, r0, r5
 8009bcc:	4286      	cmp	r6, r0
 8009bce:	d3cd      	bcc.n	8009b6c <HAL_I2C_Mem_Write+0x174>
 8009bd0:	2e00      	cmp	r6, #0
 8009bd2:	d0cb      	beq.n	8009b6c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bd4:	6823      	ldr	r3, [r4, #0]
 8009bd6:	e796      	b.n	8009b06 <HAL_I2C_Mem_Write+0x10e>
 8009bd8:	ffff0000 	.word	0xffff0000

08009bdc <HAL_I2C_Mem_Read>:
{
 8009bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009be0:	4604      	mov	r4, r0
 8009be2:	b087      	sub	sp, #28
 8009be4:	4699      	mov	r9, r3
 8009be6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009bea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009bec:	460f      	mov	r7, r1
 8009bee:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009bf0:	f7ff f8d4 	bl	8008d9c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009bf4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009bf8:	2b20      	cmp	r3, #32
 8009bfa:	d004      	beq.n	8009c06 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009bfc:	2702      	movs	r7, #2
}
 8009bfe:	4638      	mov	r0, r7
 8009c00:	b007      	add	sp, #28
 8009c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c06:	4606      	mov	r6, r0
 8009c08:	e005      	b.n	8009c16 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c0a:	f7ff f8c7 	bl	8008d9c <HAL_GetTick>
 8009c0e:	1b80      	subs	r0, r0, r6
 8009c10:	2819      	cmp	r0, #25
 8009c12:	f200 80d2 	bhi.w	8009dba <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c16:	f8d4 c000 	ldr.w	ip, [r4]
 8009c1a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009c1e:	43c0      	mvns	r0, r0
 8009c20:	f010 0b02 	ands.w	fp, r0, #2
 8009c24:	d0f1      	beq.n	8009c0a <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009c26:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d0e6      	beq.n	8009bfc <HAL_I2C_Mem_Read+0x20>
 8009c2e:	2301      	movs	r3, #1
 8009c30:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009c34:	f8dc 3000 	ldr.w	r3, [ip]
 8009c38:	07d9      	lsls	r1, r3, #31
 8009c3a:	d537      	bpl.n	8009cac <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c3c:	f8dc 0000 	ldr.w	r0, [ip]
 8009c40:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009c44:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009c48:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009c4a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009c4c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c4e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009c52:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009c56:	2040      	movs	r0, #64	; 0x40
 8009c58:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009c5c:	2000      	movs	r0, #0
 8009c5e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009c60:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009c64:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009c66:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009c68:	4893      	ldr	r0, [pc, #588]	; (8009eb8 <HAL_I2C_Mem_Read+0x2dc>)
 8009c6a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009c6c:	4639      	mov	r1, r7
 8009c6e:	464b      	mov	r3, r9
 8009c70:	4642      	mov	r2, r8
 8009c72:	4620      	mov	r0, r4
 8009c74:	f7ff fca2 	bl	80095bc <I2C_RequestMemoryRead>
 8009c78:	4607      	mov	r7, r0
 8009c7a:	2800      	cmp	r0, #0
 8009c7c:	f040 80ab 	bne.w	8009dd6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009c80:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009c82:	b9d2      	cbnz	r2, 8009cba <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009c84:	6823      	ldr	r3, [r4, #0]
 8009c86:	9002      	str	r0, [sp, #8]
 8009c88:	695a      	ldr	r2, [r3, #20]
 8009c8a:	9202      	str	r2, [sp, #8]
 8009c8c:	699a      	ldr	r2, [r3, #24]
 8009c8e:	9202      	str	r2, [sp, #8]
 8009c90:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c92:	681a      	ldr	r2, [r3, #0]
 8009c94:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c98:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c9a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009c9c:	2220      	movs	r2, #32
 8009c9e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009ca2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009ca6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009caa:	e7a8      	b.n	8009bfe <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009cac:	f8dc 3000 	ldr.w	r3, [ip]
 8009cb0:	f043 0301 	orr.w	r3, r3, #1
 8009cb4:	f8cc 3000 	str.w	r3, [ip]
 8009cb8:	e7c0      	b.n	8009c3c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009cba:	2a01      	cmp	r2, #1
 8009cbc:	f000 812c 	beq.w	8009f18 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009cc0:	2a02      	cmp	r2, #2
 8009cc2:	f000 80bd 	beq.w	8009e40 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009cc6:	6823      	ldr	r3, [r4, #0]
 8009cc8:	9005      	str	r0, [sp, #20]
 8009cca:	6959      	ldr	r1, [r3, #20]
 8009ccc:	9105      	str	r1, [sp, #20]
 8009cce:	6999      	ldr	r1, [r3, #24]
 8009cd0:	9105      	str	r1, [sp, #20]
 8009cd2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009cd4:	2a03      	cmp	r2, #3
 8009cd6:	d849      	bhi.n	8009d6c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009cd8:	2a01      	cmp	r2, #1
 8009cda:	f000 80eb 	beq.w	8009eb4 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009cde:	2a02      	cmp	r2, #2
 8009ce0:	f000 8089 	beq.w	8009df6 <HAL_I2C_Mem_Read+0x21a>
 8009ce4:	1c69      	adds	r1, r5, #1
 8009ce6:	f040 80bb 	bne.w	8009e60 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009cea:	695a      	ldr	r2, [r3, #20]
 8009cec:	0752      	lsls	r2, r2, #29
 8009cee:	d5fc      	bpl.n	8009cea <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cf0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cf2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cf4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009cf8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cfa:	691b      	ldr	r3, [r3, #16]
 8009cfc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009cfe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009d00:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d04:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009d06:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009d08:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009d0a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009d0c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d0e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d10:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009d12:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d14:	6822      	ldr	r2, [r4, #0]
 8009d16:	f040 80af 	bne.w	8009e78 <HAL_I2C_Mem_Read+0x29c>
 8009d1a:	6953      	ldr	r3, [r2, #20]
 8009d1c:	075b      	lsls	r3, r3, #29
 8009d1e:	d5fc      	bpl.n	8009d1a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d20:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d22:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d24:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009d28:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d2a:	6913      	ldr	r3, [r2, #16]
 8009d2c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009d2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009d30:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009d32:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d34:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009d36:	3b01      	subs	r3, #1
 8009d38:	b29b      	uxth	r3, r3
 8009d3a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d3c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009d3e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009d40:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009d44:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009d46:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d4a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009d4c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d4e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009d50:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d52:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009d54:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009d56:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009d58:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009d5a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009d5c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009d5e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009d60:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009d62:	2a00      	cmp	r2, #0
 8009d64:	d099      	beq.n	8009c9a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009d66:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009d68:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009d6a:	d9b5      	bls.n	8009cd8 <HAL_I2C_Mem_Read+0xfc>
 8009d6c:	b95d      	cbnz	r5, 8009d86 <HAL_I2C_Mem_Read+0x1aa>
 8009d6e:	e0c5      	b.n	8009efc <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009d70:	695a      	ldr	r2, [r3, #20]
 8009d72:	06d0      	lsls	r0, r2, #27
 8009d74:	f100 80b2 	bmi.w	8009edc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d78:	f7ff f810 	bl	8008d9c <HAL_GetTick>
 8009d7c:	1b80      	subs	r0, r0, r6
 8009d7e:	4285      	cmp	r5, r0
 8009d80:	f0c0 8086 	bcc.w	8009e90 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009d84:	6823      	ldr	r3, [r4, #0]
 8009d86:	695a      	ldr	r2, [r3, #20]
 8009d88:	0652      	lsls	r2, r2, #25
 8009d8a:	d5f1      	bpl.n	8009d70 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d8e:	691b      	ldr	r3, [r3, #16]
 8009d90:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009d92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d94:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009d96:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009d98:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009d9a:	3b01      	subs	r3, #1
 8009d9c:	b29b      	uxth	r3, r3
 8009d9e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009da0:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009da2:	3a01      	subs	r2, #1
 8009da4:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009da6:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009daa:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009dac:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009dae:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009db2:	d5d6      	bpl.n	8009d62 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009db4:	6903      	ldr	r3, [r0, #16]
 8009db6:	704b      	strb	r3, [r1, #1]
 8009db8:	e036      	b.n	8009e28 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009dba:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009dbc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009dc0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009dc4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dc8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009dca:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009dce:	f043 0320 	orr.w	r3, r3, #32
 8009dd2:	6423      	str	r3, [r4, #64]	; 0x40
 8009dd4:	e712      	b.n	8009bfc <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009dd6:	2701      	movs	r7, #1
}
 8009dd8:	4638      	mov	r0, r7
 8009dda:	b007      	add	sp, #28
 8009ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009de0:	695a      	ldr	r2, [r3, #20]
 8009de2:	0750      	lsls	r0, r2, #29
 8009de4:	d40c      	bmi.n	8009e00 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009de6:	f7fe ffd9 	bl	8008d9c <HAL_GetTick>
 8009dea:	1b80      	subs	r0, r0, r6
 8009dec:	4285      	cmp	r5, r0
 8009dee:	d34f      	bcc.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
 8009df0:	2d00      	cmp	r5, #0
 8009df2:	d04d      	beq.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009df4:	6823      	ldr	r3, [r4, #0]
 8009df6:	1c69      	adds	r1, r5, #1
 8009df8:	d1f2      	bne.n	8009de0 <HAL_I2C_Mem_Read+0x204>
 8009dfa:	695a      	ldr	r2, [r3, #20]
 8009dfc:	0752      	lsls	r2, r2, #29
 8009dfe:	d5fc      	bpl.n	8009dfa <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009e00:	681a      	ldr	r2, [r3, #0]
 8009e02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e06:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e08:	691a      	ldr	r2, [r3, #16]
 8009e0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009e0c:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009e0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009e10:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009e12:	3b01      	subs	r3, #1
 8009e14:	b29b      	uxth	r3, r3
 8009e16:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009e18:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009e1a:	3b01      	subs	r3, #1
 8009e1c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e1e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009e20:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e22:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009e24:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e26:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009e28:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e2a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009e2c:	3301      	adds	r3, #1
 8009e2e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009e30:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009e32:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009e34:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009e36:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009e38:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009e3a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e3c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009e3e:	e790      	b.n	8009d62 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009e40:	6823      	ldr	r3, [r4, #0]
 8009e42:	6819      	ldr	r1, [r3, #0]
 8009e44:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009e48:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009e4a:	6819      	ldr	r1, [r3, #0]
 8009e4c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009e50:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009e52:	9004      	str	r0, [sp, #16]
 8009e54:	6959      	ldr	r1, [r3, #20]
 8009e56:	9104      	str	r1, [sp, #16]
 8009e58:	6999      	ldr	r1, [r3, #24]
 8009e5a:	9104      	str	r1, [sp, #16]
 8009e5c:	9904      	ldr	r1, [sp, #16]
 8009e5e:	e739      	b.n	8009cd4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e60:	695a      	ldr	r2, [r3, #20]
 8009e62:	0750      	lsls	r0, r2, #29
 8009e64:	f53f af44 	bmi.w	8009cf0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e68:	f7fe ff98 	bl	8008d9c <HAL_GetTick>
 8009e6c:	1b80      	subs	r0, r0, r6
 8009e6e:	4285      	cmp	r5, r0
 8009e70:	d30e      	bcc.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
 8009e72:	b16d      	cbz	r5, 8009e90 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e74:	6823      	ldr	r3, [r4, #0]
 8009e76:	e735      	b.n	8009ce4 <HAL_I2C_Mem_Read+0x108>
 8009e78:	6953      	ldr	r3, [r2, #20]
 8009e7a:	0758      	lsls	r0, r3, #29
 8009e7c:	f53f af50 	bmi.w	8009d20 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e80:	f7fe ff8c 	bl	8008d9c <HAL_GetTick>
 8009e84:	1b80      	subs	r0, r0, r6
 8009e86:	4285      	cmp	r5, r0
 8009e88:	d302      	bcc.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
 8009e8a:	2d00      	cmp	r5, #0
 8009e8c:	f47f af41 	bne.w	8009d12 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e90:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e92:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e94:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e96:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e9a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e9e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009ea0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ea4:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ea6:	f043 0320 	orr.w	r3, r3, #32
}
 8009eaa:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009eac:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009eae:	b007      	add	sp, #28
 8009eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009eb4:	b95d      	cbnz	r5, 8009ece <HAL_I2C_Mem_Read+0x2f2>
 8009eb6:	e02b      	b.n	8009f10 <HAL_I2C_Mem_Read+0x334>
 8009eb8:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009ebc:	695a      	ldr	r2, [r3, #20]
 8009ebe:	06d2      	lsls	r2, r2, #27
 8009ec0:	d40c      	bmi.n	8009edc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ec2:	f7fe ff6b 	bl	8008d9c <HAL_GetTick>
 8009ec6:	1b80      	subs	r0, r0, r6
 8009ec8:	4285      	cmp	r5, r0
 8009eca:	d3e1      	bcc.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009ecc:	6823      	ldr	r3, [r4, #0]
 8009ece:	695a      	ldr	r2, [r3, #20]
 8009ed0:	0651      	lsls	r1, r2, #25
 8009ed2:	d5f3      	bpl.n	8009ebc <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ed4:	691a      	ldr	r2, [r3, #16]
 8009ed6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ed8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009eda:	e7a5      	b.n	8009e28 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009edc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009ede:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ee2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009ee4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ee6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ee8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009eec:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009ef0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009ef2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009ef4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ef8:	2701      	movs	r7, #1
 8009efa:	e680      	b.n	8009bfe <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009efc:	695a      	ldr	r2, [r3, #20]
 8009efe:	0652      	lsls	r2, r2, #25
 8009f00:	f53f af44 	bmi.w	8009d8c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f04:	695a      	ldr	r2, [r3, #20]
 8009f06:	06d1      	lsls	r1, r2, #27
 8009f08:	d4e8      	bmi.n	8009edc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f0a:	f7fe ff47 	bl	8008d9c <HAL_GetTick>
 8009f0e:	e7bf      	b.n	8009e90 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f10:	695a      	ldr	r2, [r3, #20]
 8009f12:	0650      	lsls	r0, r2, #25
 8009f14:	d5f6      	bpl.n	8009f04 <HAL_I2C_Mem_Read+0x328>
 8009f16:	e7dd      	b.n	8009ed4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009f18:	6823      	ldr	r3, [r4, #0]
 8009f1a:	6819      	ldr	r1, [r3, #0]
 8009f1c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009f20:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009f22:	9003      	str	r0, [sp, #12]
 8009f24:	6959      	ldr	r1, [r3, #20]
 8009f26:	9103      	str	r1, [sp, #12]
 8009f28:	6999      	ldr	r1, [r3, #24]
 8009f2a:	9103      	str	r1, [sp, #12]
 8009f2c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f2e:	6819      	ldr	r1, [r3, #0]
 8009f30:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009f34:	6019      	str	r1, [r3, #0]
 8009f36:	e6cd      	b.n	8009cd4 <HAL_I2C_Mem_Read+0xf8>

08009f38 <HAL_I2C_MasterTxCpltCallback>:
 8009f38:	4770      	bx	lr
 8009f3a:	bf00      	nop

08009f3c <HAL_I2C_MasterRxCpltCallback>:
 8009f3c:	4770      	bx	lr
 8009f3e:	bf00      	nop

08009f40 <HAL_I2C_SlaveTxCpltCallback>:
 8009f40:	4770      	bx	lr
 8009f42:	bf00      	nop

08009f44 <HAL_I2C_SlaveRxCpltCallback>:
 8009f44:	4770      	bx	lr
 8009f46:	bf00      	nop

08009f48 <HAL_I2C_AddrCallback>:
}
 8009f48:	4770      	bx	lr
 8009f4a:	bf00      	nop

08009f4c <HAL_I2C_ListenCpltCallback>:
 8009f4c:	4770      	bx	lr
 8009f4e:	bf00      	nop

08009f50 <HAL_I2C_MemTxCpltCallback>:
 8009f50:	4770      	bx	lr
 8009f52:	bf00      	nop

08009f54 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009f54:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009f58:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009f5a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009f5c:	b959      	cbnz	r1, 8009f76 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f5e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f60:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f62:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f64:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009f66:	d00d      	beq.n	8009f84 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009f68:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009f6c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8009f6e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f70:	3201      	adds	r2, #1
 8009f72:	6502      	str	r2, [r0, #80]	; 0x50
 8009f74:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8009f76:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009f78:	2901      	cmp	r1, #1
 8009f7a:	d009      	beq.n	8009f90 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8009f7c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009f7e:	2902      	cmp	r1, #2
 8009f80:	d00e      	beq.n	8009fa0 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8009f82:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f84:	b2d2      	uxtb	r2, r2
 8009f86:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8009f88:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f8a:	3202      	adds	r2, #2
 8009f8c:	6502      	str	r2, [r0, #80]	; 0x50
 8009f8e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009f90:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8009f92:	6801      	ldr	r1, [r0, #0]
 8009f94:	b2d2      	uxtb	r2, r2
 8009f96:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8009f98:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009f9a:	3201      	adds	r2, #1
 8009f9c:	6502      	str	r2, [r0, #80]	; 0x50
 8009f9e:	4770      	bx	lr
 8009fa0:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8009fa2:	2a22      	cmp	r2, #34	; 0x22
 8009fa4:	d01f      	beq.n	8009fe6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fa6:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009fa8:	b289      	uxth	r1, r1
 8009faa:	b9c1      	cbnz	r1, 8009fde <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fac:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009fae:	b289      	uxth	r1, r1
 8009fb0:	2900      	cmp	r1, #0
 8009fb2:	d1e6      	bne.n	8009f82 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8009fb4:	2a21      	cmp	r2, #33	; 0x21
 8009fb6:	d1e4      	bne.n	8009f82 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009fb8:	6802      	ldr	r2, [r0, #0]
{
 8009fba:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009fbc:	6854      	ldr	r4, [r2, #4]
 8009fbe:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8009fc2:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fc4:	6814      	ldr	r4, [r2, #0]
 8009fc6:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8009fca:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8009fcc:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009fce:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8009fd0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009fd4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8009fd8:	f7ff ffba 	bl	8009f50 <HAL_I2C_MemTxCpltCallback>
}
 8009fdc:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fde:	2a21      	cmp	r2, #33	; 0x21
 8009fe0:	d00a      	beq.n	8009ff8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009fe2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009fe4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8009fe6:	6801      	ldr	r1, [r0, #0]
 8009fe8:	680a      	ldr	r2, [r1, #0]
 8009fea:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009fee:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8009ff0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009ff2:	3201      	adds	r2, #1
 8009ff4:	6502      	str	r2, [r0, #80]	; 0x50
 8009ff6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ff8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8009ffa:	6802      	ldr	r2, [r0, #0]
 8009ffc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a000:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a002:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a004:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a006:	3a01      	subs	r2, #1
 800a008:	b292      	uxth	r2, r2
 800a00a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a00c:	4770      	bx	lr
 800a00e:	bf00      	nop

0800a010 <HAL_I2C_MemRxCpltCallback>:
 800a010:	4770      	bx	lr
 800a012:	bf00      	nop

0800a014 <HAL_I2C_ErrorCallback>:
 800a014:	4770      	bx	lr
 800a016:	bf00      	nop

0800a018 <HAL_I2C_AbortCpltCallback>:
 800a018:	4770      	bx	lr
 800a01a:	bf00      	nop

0800a01c <I2C_DMAAbort>:
{
 800a01c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a01e:	4b3a      	ldr	r3, [pc, #232]	; (800a108 <I2C_DMAAbort+0xec>)
 800a020:	4a3a      	ldr	r2, [pc, #232]	; (800a10c <I2C_DMAAbort+0xf0>)
 800a022:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a024:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a026:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a028:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a02a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a02c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a030:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a032:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a034:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a038:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a03a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a03e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a042:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a044:	9301      	str	r3, [sp, #4]
 800a046:	e005      	b.n	800a054 <I2C_DMAAbort+0x38>
    count--;
 800a048:	9b01      	ldr	r3, [sp, #4]
 800a04a:	3b01      	subs	r3, #1
 800a04c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a04e:	6813      	ldr	r3, [r2, #0]
 800a050:	059b      	lsls	r3, r3, #22
 800a052:	d506      	bpl.n	800a062 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a054:	9b01      	ldr	r3, [sp, #4]
 800a056:	2b00      	cmp	r3, #0
 800a058:	d1f6      	bne.n	800a048 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a05a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a05c:	f043 0320 	orr.w	r3, r3, #32
 800a060:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a062:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a064:	b34c      	cbz	r4, 800a0ba <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a066:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a068:	2500      	movs	r5, #0
 800a06a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a06c:	b1f3      	cbz	r3, 800a0ac <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a06e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a070:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a072:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a076:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a078:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a07a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a07c:	2400      	movs	r4, #0
 800a07e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a080:	6813      	ldr	r3, [r2, #0]
 800a082:	f023 0301 	bic.w	r3, r3, #1
 800a086:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a088:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a08c:	2b60      	cmp	r3, #96	; 0x60
 800a08e:	d02a      	beq.n	800a0e6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a090:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a094:	2928      	cmp	r1, #40	; 0x28
 800a096:	d019      	beq.n	800a0cc <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a098:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a09a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a09c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a0a0:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a0a4:	f7ff ffb6 	bl	800a014 <HAL_I2C_ErrorCallback>
}
 800a0a8:	b002      	add	sp, #8
 800a0aa:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0ac:	6815      	ldr	r5, [r2, #0]
 800a0ae:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a0b2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a0b4:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a0b6:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a0b8:	e7e2      	b.n	800a080 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a0ba:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a0bc:	b1f3      	cbz	r3, 800a0fc <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0be:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a0c0:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0c2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a0c6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a0c8:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a0ca:	e7d7      	b.n	800a07c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a0cc:	6813      	ldr	r3, [r2, #0]
 800a0ce:	f043 0301 	orr.w	r3, r3, #1
 800a0d2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0d4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a0d6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0d8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a0dc:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a0de:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a0e0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a0e4:	e7de      	b.n	800a0a4 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a0e6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a0e8:	2220      	movs	r2, #32
 800a0ea:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a0ee:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a0f2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a0f4:	f7ff ff90 	bl	800a018 <HAL_I2C_AbortCpltCallback>
}
 800a0f8:	b002      	add	sp, #8
 800a0fa:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0fc:	6814      	ldr	r4, [r2, #0]
 800a0fe:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a102:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a104:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a106:	e7bb      	b.n	800a080 <I2C_DMAAbort+0x64>
 800a108:	20000078 	.word	0x20000078
 800a10c:	14f8b589 	.word	0x14f8b589

0800a110 <I2C_ITError>:
{
 800a110:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a112:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a116:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a11a:	2b10      	cmp	r3, #16
{
 800a11c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a11e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a120:	d039      	beq.n	800a196 <I2C_ITError+0x86>
 800a122:	b2d9      	uxtb	r1, r3
 800a124:	2940      	cmp	r1, #64	; 0x40
 800a126:	d036      	beq.n	800a196 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a128:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a12c:	2928      	cmp	r1, #40	; 0x28
 800a12e:	d03d      	beq.n	800a1ac <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a130:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a132:	6859      	ldr	r1, [r3, #4]
 800a134:	0508      	lsls	r0, r1, #20
 800a136:	d407      	bmi.n	800a148 <I2C_ITError+0x38>
 800a138:	2a60      	cmp	r2, #96	; 0x60
 800a13a:	d005      	beq.n	800a148 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a13c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a13e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a140:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a144:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a148:	2200      	movs	r2, #0
 800a14a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a14c:	685a      	ldr	r2, [r3, #4]
 800a14e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a152:	d134      	bne.n	800a1be <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a154:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a158:	2960      	cmp	r1, #96	; 0x60
 800a15a:	d075      	beq.n	800a248 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a15c:	695a      	ldr	r2, [r3, #20]
 800a15e:	0650      	lsls	r0, r2, #25
 800a160:	d505      	bpl.n	800a16e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a162:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a164:	691b      	ldr	r3, [r3, #16]
 800a166:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a168:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a16a:	3301      	adds	r3, #1
 800a16c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a16e:	4620      	mov	r0, r4
 800a170:	f7ff ff50 	bl	800a014 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a174:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a176:	0719      	lsls	r1, r3, #28
 800a178:	d004      	beq.n	800a184 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a17a:	6822      	ldr	r2, [r4, #0]
 800a17c:	6853      	ldr	r3, [r2, #4]
 800a17e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a182:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a184:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a188:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a18a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a18c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a18e:	d501      	bpl.n	800a194 <I2C_ITError+0x84>
 800a190:	2b28      	cmp	r3, #40	; 0x28
 800a192:	d02f      	beq.n	800a1f4 <I2C_ITError+0xe4>
}
 800a194:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a196:	2a22      	cmp	r2, #34	; 0x22
 800a198:	d1c6      	bne.n	800a128 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a19a:	6823      	ldr	r3, [r4, #0]
 800a19c:	681a      	ldr	r2, [r3, #0]
 800a19e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a1a2:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a1a4:	685a      	ldr	r2, [r3, #4]
 800a1a6:	0512      	lsls	r2, r2, #20
 800a1a8:	d5c8      	bpl.n	800a13c <I2C_ITError+0x2c>
 800a1aa:	e7cd      	b.n	800a148 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1ac:	2300      	movs	r3, #0
 800a1ae:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a1b0:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1b2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a1b6:	685a      	ldr	r2, [r3, #4]
 800a1b8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a1bc:	d0ca      	beq.n	800a154 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a1be:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a1c0:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a1c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a1c6:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a1c8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a1cc:	2b01      	cmp	r3, #1
 800a1ce:	d01e      	beq.n	800a20e <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a1d0:	4b28      	ldr	r3, [pc, #160]	; (800a274 <I2C_ITError+0x164>)
 800a1d2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a1d4:	f7fe fe6c 	bl	8008eb0 <HAL_DMA_Abort_IT>
 800a1d8:	2800      	cmp	r0, #0
 800a1da:	d0cb      	beq.n	800a174 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a1dc:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a1de:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a1e0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a1e2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a1e4:	f023 0301 	bic.w	r3, r3, #1
 800a1e8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a1ea:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a1ee:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a1f0:	4798      	blx	r3
 800a1f2:	e7bf      	b.n	800a174 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1f4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a1f6:	4920      	ldr	r1, [pc, #128]	; (800a278 <I2C_ITError+0x168>)
 800a1f8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a1fa:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1fc:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a1fe:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a200:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a204:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a208:	f7ff fea0 	bl	8009f4c <HAL_I2C_ListenCpltCallback>
}
 800a20c:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a20e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a210:	4b18      	ldr	r3, [pc, #96]	; (800a274 <I2C_ITError+0x164>)
 800a212:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a214:	f7fe fe4c 	bl	8008eb0 <HAL_DMA_Abort_IT>
 800a218:	2800      	cmp	r0, #0
 800a21a:	d0ab      	beq.n	800a174 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a21c:	6823      	ldr	r3, [r4, #0]
 800a21e:	695a      	ldr	r2, [r3, #20]
 800a220:	0651      	lsls	r1, r2, #25
 800a222:	d506      	bpl.n	800a232 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a224:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a226:	691b      	ldr	r3, [r3, #16]
 800a228:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a22a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a22c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a22e:	3201      	adds	r2, #1
 800a230:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a232:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a234:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a236:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a23a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a23c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a23e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a242:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a244:	4798      	blx	r3
 800a246:	e795      	b.n	800a174 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a248:	2120      	movs	r1, #32
 800a24a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a24e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a250:	695a      	ldr	r2, [r3, #20]
 800a252:	0652      	lsls	r2, r2, #25
 800a254:	d506      	bpl.n	800a264 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a256:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a258:	691b      	ldr	r3, [r3, #16]
 800a25a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a25c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a25e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a260:	3201      	adds	r2, #1
 800a262:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a264:	681a      	ldr	r2, [r3, #0]
 800a266:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a26a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a26c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a26e:	f7ff fed3 	bl	800a018 <HAL_I2C_AbortCpltCallback>
 800a272:	e77f      	b.n	800a174 <I2C_ITError+0x64>
 800a274:	0800a01d 	.word	0x0800a01d
 800a278:	ffff0000 	.word	0xffff0000

0800a27c <HAL_I2C_EV_IRQHandler>:
{
 800a27c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a27e:	6803      	ldr	r3, [r0, #0]
{
 800a280:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a282:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a284:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a286:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a28a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a28e:	2910      	cmp	r1, #16
{
 800a290:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a292:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a294:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a298:	d022      	beq.n	800a2e0 <HAL_I2C_EV_IRQHandler+0x64>
 800a29a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a29e:	d01f      	beq.n	800a2e0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a2a0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a2a2:	2900      	cmp	r1, #0
 800a2a4:	f000 8094 	beq.w	800a3d0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a2a8:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a2aa:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a2ac:	f011 0602 	ands.w	r6, r1, #2
 800a2b0:	d059      	beq.n	800a366 <HAL_I2C_EV_IRQHandler+0xea>
 800a2b2:	0586      	lsls	r6, r0, #22
 800a2b4:	d559      	bpl.n	800a36a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a2b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a2b8:	b102      	cbz	r2, 800a2bc <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a2ba:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a2bc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a2c0:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a2c4:	2a28      	cmp	r2, #40	; 0x28
 800a2c6:	f000 821e 	beq.w	800a706 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2ca:	2200      	movs	r2, #0
 800a2cc:	920c      	str	r2, [sp, #48]	; 0x30
 800a2ce:	6959      	ldr	r1, [r3, #20]
 800a2d0:	910c      	str	r1, [sp, #48]	; 0x30
 800a2d2:	699b      	ldr	r3, [r3, #24]
 800a2d4:	930c      	str	r3, [sp, #48]	; 0x30
 800a2d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a2d8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a2dc:	b00e      	add	sp, #56	; 0x38
 800a2de:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a2e0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a2e2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a2e4:	f011 0f01 	tst.w	r1, #1
 800a2e8:	d11a      	bne.n	800a320 <HAL_I2C_EV_IRQHandler+0xa4>
 800a2ea:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a2ee:	d0f5      	beq.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a2f0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a2f4:	d0f2      	beq.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a2f6:	070d      	lsls	r5, r1, #28
 800a2f8:	d56d      	bpl.n	800a3d6 <HAL_I2C_EV_IRQHandler+0x15a>
 800a2fa:	0585      	lsls	r5, r0, #22
 800a2fc:	f140 8083 	bpl.w	800a406 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a300:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a302:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a304:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a306:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a308:	2900      	cmp	r1, #0
 800a30a:	f000 81e3 	beq.w	800a6d4 <HAL_I2C_EV_IRQHandler+0x458>
 800a30e:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a310:	2a00      	cmp	r2, #0
 800a312:	f000 81df 	beq.w	800a6d4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a316:	685a      	ldr	r2, [r3, #4]
 800a318:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a31c:	605a      	str	r2, [r3, #4]
 800a31e:	e7dd      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a320:	0585      	lsls	r5, r0, #22
 800a322:	d56e      	bpl.n	800a402 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a324:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a326:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a32a:	f000 81e9 	beq.w	800a700 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a32e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a330:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a334:	bf04      	itt	eq
 800a336:	2208      	moveq	r2, #8
 800a338:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a33a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a33e:	2a40      	cmp	r2, #64	; 0x40
 800a340:	f000 81d7 	beq.w	800a6f2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a344:	6922      	ldr	r2, [r4, #16]
 800a346:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a34a:	f000 81b2 	beq.w	800a6b2 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a34e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a350:	2a00      	cmp	r2, #0
 800a352:	f040 81ef 	bne.w	800a734 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a356:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a358:	11d2      	asrs	r2, r2, #7
 800a35a:	f002 0206 	and.w	r2, r2, #6
 800a35e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a362:	611a      	str	r2, [r3, #16]
 800a364:	e7ba      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a366:	06cd      	lsls	r5, r1, #27
 800a368:	d47c      	bmi.n	800a464 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a36a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a36e:	2a21      	cmp	r2, #33	; 0x21
 800a370:	f000 80f5 	beq.w	800a55e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a374:	064e      	lsls	r6, r1, #25
 800a376:	f140 8132 	bpl.w	800a5de <HAL_I2C_EV_IRQHandler+0x362>
 800a37a:	0545      	lsls	r5, r0, #21
 800a37c:	f140 812f 	bpl.w	800a5de <HAL_I2C_EV_IRQHandler+0x362>
 800a380:	0749      	lsls	r1, r1, #29
 800a382:	f100 812f 	bmi.w	800a5e4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a386:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a38a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a38c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a38e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a390:	2a00      	cmp	r2, #0
 800a392:	d0a3      	beq.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a394:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a396:	691b      	ldr	r3, [r3, #16]
 800a398:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a39a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a39c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a39e:	3b01      	subs	r3, #1
 800a3a0:	b29b      	uxth	r3, r3
 800a3a2:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a3a6:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3a8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a3aa:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a3ac:	2b00      	cmp	r3, #0
 800a3ae:	d195      	bne.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a3b0:	292a      	cmp	r1, #42	; 0x2a
 800a3b2:	d193      	bne.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a3b4:	6822      	ldr	r2, [r4, #0]
 800a3b6:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a3b8:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3ba:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a3bc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a3c0:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3c2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a3c4:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3c6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3ca:	f7ff fdbb 	bl	8009f44 <HAL_I2C_SlaveRxCpltCallback>
 800a3ce:	e785      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a3d0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a3d2:	6959      	ldr	r1, [r3, #20]
 800a3d4:	e76a      	b.n	800a2ac <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3d6:	078d      	lsls	r5, r1, #30
 800a3d8:	d515      	bpl.n	800a406 <HAL_I2C_EV_IRQHandler+0x18a>
 800a3da:	0585      	lsls	r5, r0, #22
 800a3dc:	d513      	bpl.n	800a406 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a3de:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a3e2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a3e4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a3e6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a3ea:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a3ec:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a3ee:	f000 81b3 	beq.w	800a758 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3f2:	2200      	movs	r2, #0
 800a3f4:	920a      	str	r2, [sp, #40]	; 0x28
 800a3f6:	695a      	ldr	r2, [r3, #20]
 800a3f8:	920a      	str	r2, [sp, #40]	; 0x28
 800a3fa:	699b      	ldr	r3, [r3, #24]
 800a3fc:	930a      	str	r3, [sp, #40]	; 0x28
 800a3fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a400:	e76c      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a402:	070d      	lsls	r5, r1, #28
 800a404:	d5e7      	bpl.n	800a3d6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a406:	0776      	lsls	r6, r6, #29
 800a408:	f140 80f5 	bpl.w	800a5f6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a40c:	685d      	ldr	r5, [r3, #4]
 800a40e:	052d      	lsls	r5, r5, #20
 800a410:	f53f af64 	bmi.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a414:	060e      	lsls	r6, r1, #24
 800a416:	f140 8115 	bpl.w	800a644 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a41a:	0545      	lsls	r5, r0, #21
 800a41c:	f140 8112 	bpl.w	800a644 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a420:	074e      	lsls	r6, r1, #29
 800a422:	f100 8112 	bmi.w	800a64a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a426:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a42a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a42c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a430:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a432:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a434:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a436:	2800      	cmp	r0, #0
 800a438:	f040 8235 	bne.w	800a8a6 <HAL_I2C_EV_IRQHandler+0x62a>
 800a43c:	2a21      	cmp	r2, #33	; 0x21
 800a43e:	f000 8347 	beq.w	800aad0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a442:	2940      	cmp	r1, #64	; 0x40
 800a444:	f47f af4a 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a448:	2a22      	cmp	r2, #34	; 0x22
 800a44a:	f47f af47 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a44e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a450:	b292      	uxth	r2, r2
 800a452:	2a00      	cmp	r2, #0
 800a454:	f000 8268 	beq.w	800a928 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a458:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a45c:	2a40      	cmp	r2, #64	; 0x40
 800a45e:	f040 80b4 	bne.w	800a5ca <HAL_I2C_EV_IRQHandler+0x34e>
 800a462:	e0fc      	b.n	800a65e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a464:	0585      	lsls	r5, r0, #22
 800a466:	d580      	bpl.n	800a36a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a468:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a46c:	685a      	ldr	r2, [r3, #4]
 800a46e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a472:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a474:	960d      	str	r6, [sp, #52]	; 0x34
 800a476:	695a      	ldr	r2, [r3, #20]
 800a478:	920d      	str	r2, [sp, #52]	; 0x34
 800a47a:	681a      	ldr	r2, [r3, #0]
 800a47c:	f042 0201 	orr.w	r2, r2, #1
 800a480:	601a      	str	r2, [r3, #0]
 800a482:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a484:	681a      	ldr	r2, [r3, #0]
 800a486:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a48a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a48c:	685a      	ldr	r2, [r3, #4]
 800a48e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a490:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a492:	d521      	bpl.n	800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a494:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a498:	2a22      	cmp	r2, #34	; 0x22
 800a49a:	f000 817a 	beq.w	800a792 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a49e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a4a0:	6802      	ldr	r2, [r0, #0]
 800a4a2:	6852      	ldr	r2, [r2, #4]
 800a4a4:	b292      	uxth	r2, r2
 800a4a6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a4a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a4aa:	b292      	uxth	r2, r2
 800a4ac:	b11a      	cbz	r2, 800a4b6 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a4ae:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a4b0:	f042 0204 	orr.w	r2, r2, #4
 800a4b4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a4b6:	685a      	ldr	r2, [r3, #4]
 800a4b8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a4bc:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a4be:	f7fe fd09 	bl	8008ed4 <HAL_DMA_GetState>
 800a4c2:	2801      	cmp	r0, #1
 800a4c4:	d008      	beq.n	800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a4c6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a4c8:	4b99      	ldr	r3, [pc, #612]	; (800a730 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a4ca:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a4cc:	f7fe fcf0 	bl	8008eb0 <HAL_DMA_Abort_IT>
 800a4d0:	b110      	cbz	r0, 800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a4d2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a4d4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a4d6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a4d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a4da:	b29b      	uxth	r3, r3
 800a4dc:	b313      	cbz	r3, 800a524 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a4de:	6823      	ldr	r3, [r4, #0]
 800a4e0:	695a      	ldr	r2, [r3, #20]
 800a4e2:	0752      	lsls	r2, r2, #29
 800a4e4:	d50a      	bpl.n	800a4fc <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a4e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a4e8:	691b      	ldr	r3, [r3, #16]
 800a4ea:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a4ec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a4ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a4f0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a4f2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a4f4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a4f6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a4f8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a4fa:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a4fc:	695a      	ldr	r2, [r3, #20]
 800a4fe:	0656      	lsls	r6, r2, #25
 800a500:	d509      	bpl.n	800a516 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a502:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a504:	691b      	ldr	r3, [r3, #16]
 800a506:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a508:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a50a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a50c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a50e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a510:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a512:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a514:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a516:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a518:	b29b      	uxth	r3, r3
 800a51a:	b11b      	cbz	r3, 800a524 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a51c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a51e:	f043 0304 	orr.w	r3, r3, #4
 800a522:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a524:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a526:	2b00      	cmp	r3, #0
 800a528:	f040 80dd 	bne.w	800a6e6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a52c:	2d2a      	cmp	r5, #42	; 0x2a
 800a52e:	f000 8151 	beq.w	800a7d4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a532:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a536:	2b28      	cmp	r3, #40	; 0x28
 800a538:	f000 8154 	beq.w	800a7e4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a53c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a53e:	2b22      	cmp	r3, #34	; 0x22
 800a540:	d002      	beq.n	800a548 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a542:	2d22      	cmp	r5, #34	; 0x22
 800a544:	f47f aeca 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a548:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a54a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a54c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a54e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a550:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a554:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a558:	f7ff fcf4 	bl	8009f44 <HAL_I2C_SlaveRxCpltCallback>
 800a55c:	e6be      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a55e:	060d      	lsls	r5, r1, #24
 800a560:	d528      	bpl.n	800a5b4 <HAL_I2C_EV_IRQHandler+0x338>
 800a562:	0546      	lsls	r6, r0, #21
 800a564:	d526      	bpl.n	800a5b4 <HAL_I2C_EV_IRQHandler+0x338>
 800a566:	074d      	lsls	r5, r1, #29
 800a568:	d427      	bmi.n	800a5ba <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a56a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a56e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a570:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a572:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a574:	2900      	cmp	r1, #0
 800a576:	f43f aeb1 	beq.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a57a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a57c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a580:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a582:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a584:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a586:	3901      	subs	r1, #1
 800a588:	b289      	uxth	r1, r1
 800a58a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a58c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a58e:	b289      	uxth	r1, r1
 800a590:	2900      	cmp	r1, #0
 800a592:	f47f aea3 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a596:	2829      	cmp	r0, #41	; 0x29
 800a598:	f47f aea0 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a59c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a59e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a5a0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a5a4:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a5a6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a5a8:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a5aa:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a5ae:	f7ff fcc7 	bl	8009f40 <HAL_I2C_SlaveTxCpltCallback>
 800a5b2:	e693      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5b4:	0749      	lsls	r1, r1, #29
 800a5b6:	f57f ae91 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a5ba:	0582      	lsls	r2, r0, #22
 800a5bc:	f57f ae8e 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a5c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5c2:	b292      	uxth	r2, r2
 800a5c4:	2a00      	cmp	r2, #0
 800a5c6:	f43f ae89 	beq.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5cc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a5d0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a5d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a5d4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a5d6:	3b01      	subs	r3, #1
 800a5d8:	b29b      	uxth	r3, r3
 800a5da:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a5dc:	e67e      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a5de:	074a      	lsls	r2, r1, #29
 800a5e0:	f57f ae7c 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a5e4:	0586      	lsls	r6, r0, #22
 800a5e6:	f57f ae79 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a5ea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a5ec:	b292      	uxth	r2, r2
 800a5ee:	2a00      	cmp	r2, #0
 800a5f0:	f43f ae74 	beq.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a5f4:	e01b      	b.n	800a62e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a5f6:	685a      	ldr	r2, [r3, #4]
 800a5f8:	0512      	lsls	r2, r2, #20
 800a5fa:	f53f ae6f 	bmi.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a5fe:	064e      	lsls	r6, r1, #25
 800a600:	d433      	bmi.n	800a66a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a602:	0749      	lsls	r1, r1, #29
 800a604:	f57f ae6a 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a608:	0582      	lsls	r2, r0, #22
 800a60a:	f57f ae67 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a60e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a610:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a612:	b292      	uxth	r2, r2
 800a614:	2a04      	cmp	r2, #4
 800a616:	f000 8113 	beq.w	800a840 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a61a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a61c:	b292      	uxth	r2, r2
 800a61e:	2a03      	cmp	r2, #3
 800a620:	f000 8153 	beq.w	800a8ca <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a624:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a626:	b292      	uxth	r2, r2
 800a628:	2a02      	cmp	r2, #2
 800a62a:	f000 8182 	beq.w	800a932 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a62e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a630:	691b      	ldr	r3, [r3, #16]
 800a632:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a634:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a636:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a638:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a63a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a63c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a63e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a640:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a642:	e64b      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a644:	074d      	lsls	r5, r1, #29
 800a646:	f57f ae49 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a64a:	0581      	lsls	r1, r0, #22
 800a64c:	f57f ae46 	bpl.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a650:	2a21      	cmp	r2, #33	; 0x21
 800a652:	f000 80fd 	beq.w	800a850 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a656:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a65a:	f47f ae3f 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a65e:	4620      	mov	r0, r4
}
 800a660:	b00e      	add	sp, #56	; 0x38
 800a662:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a666:	f7ff bc75 	b.w	8009f54 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a66a:	0545      	lsls	r5, r0, #21
 800a66c:	d5c9      	bpl.n	800a602 <HAL_I2C_EV_IRQHandler+0x386>
 800a66e:	f011 0104 	ands.w	r1, r1, #4
 800a672:	d1c9      	bne.n	800a608 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a674:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a678:	2a22      	cmp	r2, #34	; 0x22
 800a67a:	f47f ae2f 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a67e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a680:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a682:	2a03      	cmp	r2, #3
 800a684:	f240 81ec 	bls.w	800aa60 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a688:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a68a:	691b      	ldr	r3, [r3, #16]
 800a68c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a68e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a690:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a692:	3b01      	subs	r3, #1
 800a694:	b29b      	uxth	r3, r3
 800a696:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a698:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a69a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a69c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a69e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a6a0:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a6a2:	f47f ae1b 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a6a6:	6822      	ldr	r2, [r4, #0]
 800a6a8:	6853      	ldr	r3, [r2, #4]
 800a6aa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a6ae:	6053      	str	r3, [r2, #4]
 800a6b0:	e614      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a6b2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a6b6:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6b8:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a6ba:	bf16      	itet	ne
 800a6bc:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6c0:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a6c4:	b2d2      	uxtbne	r2, r2
 800a6c6:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6c8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a6ca:	b11a      	cbz	r2, 800a6d4 <HAL_I2C_EV_IRQHandler+0x458>
 800a6cc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a6ce:	2a00      	cmp	r2, #0
 800a6d0:	f47f ae21 	bne.w	800a316 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a6d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a6d6:	2a00      	cmp	r2, #0
 800a6d8:	f43f ae00 	beq.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a6dc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a6de:	2a00      	cmp	r2, #0
 800a6e0:	f47f ae19 	bne.w	800a316 <HAL_I2C_EV_IRQHandler+0x9a>
 800a6e4:	e5fa      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a6e6:	4620      	mov	r0, r4
}
 800a6e8:	b00e      	add	sp, #56	; 0x38
 800a6ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a6ee:	f7ff bd0f 	b.w	800a110 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a6f2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a6f4:	bb52      	cbnz	r2, 800a74c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a6f6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a6f8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a6fc:	611a      	str	r2, [r3, #16]
 800a6fe:	e5ed      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a700:	2201      	movs	r2, #1
 800a702:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a704:	e619      	b.n	800a33a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a706:	685a      	ldr	r2, [r3, #4]
 800a708:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a70c:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a70e:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a710:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a714:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a718:	bf54      	ite	pl
 800a71a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a71c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a71e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a722:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a726:	4620      	mov	r0, r4
 800a728:	f7ff fc0e 	bl	8009f48 <HAL_I2C_AddrCallback>
 800a72c:	e5d6      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800a72e:	bf00      	nop
 800a730:	0800a01d 	.word	0x0800a01d
      else if (hi2c->EventCount == 1U)
 800a734:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a736:	2a01      	cmp	r2, #1
 800a738:	f47f add0 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a73c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a73e:	11d2      	asrs	r2, r2, #7
 800a740:	f002 0206 	and.w	r2, r2, #6
 800a744:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a748:	611a      	str	r2, [r3, #16]
 800a74a:	e5c7      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a74c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a74e:	f042 0201 	orr.w	r2, r2, #1
 800a752:	b2d2      	uxtb	r2, r2
 800a754:	611a      	str	r2, [r3, #16]
 800a756:	e5c1      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a758:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a75a:	b911      	cbnz	r1, 800a762 <HAL_I2C_EV_IRQHandler+0x4e6>
 800a75c:	2a40      	cmp	r2, #64	; 0x40
 800a75e:	f000 809b 	beq.w	800a898 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a762:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a764:	b922      	cbnz	r2, 800a770 <HAL_I2C_EV_IRQHandler+0x4f4>
 800a766:	6921      	ldr	r1, [r4, #16]
 800a768:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a76c:	f000 809f 	beq.w	800a8ae <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a770:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a772:	b292      	uxth	r2, r2
 800a774:	2a00      	cmp	r2, #0
 800a776:	d142      	bne.n	800a7fe <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a778:	9203      	str	r2, [sp, #12]
 800a77a:	695a      	ldr	r2, [r3, #20]
 800a77c:	9203      	str	r2, [sp, #12]
 800a77e:	699a      	ldr	r2, [r3, #24]
 800a780:	9203      	str	r2, [sp, #12]
 800a782:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a784:	681a      	ldr	r2, [r3, #0]
 800a786:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a78a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a78c:	2300      	movs	r3, #0
 800a78e:	6523      	str	r3, [r4, #80]	; 0x50
 800a790:	e5a4      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a792:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a794:	6802      	ldr	r2, [r0, #0]
 800a796:	6852      	ldr	r2, [r2, #4]
 800a798:	b292      	uxth	r2, r2
 800a79a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a79c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a79e:	b292      	uxth	r2, r2
 800a7a0:	b11a      	cbz	r2, 800a7aa <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a7a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a7a4:	f042 0204 	orr.w	r2, r2, #4
 800a7a8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a7aa:	685a      	ldr	r2, [r3, #4]
 800a7ac:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a7b0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a7b2:	f7fe fb8f 	bl	8008ed4 <HAL_DMA_GetState>
 800a7b6:	2801      	cmp	r0, #1
 800a7b8:	f43f ae8e 	beq.w	800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a7bc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a7be:	4b98      	ldr	r3, [pc, #608]	; (800aa20 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a7c0:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a7c2:	f7fe fb75 	bl	8008eb0 <HAL_DMA_Abort_IT>
 800a7c6:	2800      	cmp	r0, #0
 800a7c8:	f43f ae86 	beq.w	800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a7cc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a7ce:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a7d0:	4798      	blx	r3
 800a7d2:	e681      	b.n	800a4d8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7d4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7d6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7d8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7da:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7de:	f7ff fbb1 	bl	8009f44 <HAL_I2C_SlaveRxCpltCallback>
 800a7e2:	e6a6      	b.n	800a532 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7e4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a7e6:	498f      	ldr	r1, [pc, #572]	; (800aa24 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a7e8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a7ea:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a7ec:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a7ee:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a7f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a7f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a7f8:	f7ff fba8 	bl	8009f4c <HAL_I2C_ListenCpltCallback>
 800a7fc:	e56e      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a7fe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a800:	b292      	uxth	r2, r2
 800a802:	2a01      	cmp	r2, #1
 800a804:	d070      	beq.n	800a8e8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a806:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a808:	b292      	uxth	r2, r2
 800a80a:	2a02      	cmp	r2, #2
 800a80c:	f000 80d6 	beq.w	800a9bc <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a810:	681a      	ldr	r2, [r3, #0]
 800a812:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a816:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a818:	685a      	ldr	r2, [r3, #4]
 800a81a:	0511      	lsls	r1, r2, #20
 800a81c:	d508      	bpl.n	800a830 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a81e:	2820      	cmp	r0, #32
 800a820:	f200 80f8 	bhi.w	800aa14 <HAL_I2C_EV_IRQHandler+0x798>
 800a824:	2807      	cmp	r0, #7
 800a826:	f200 80ea 	bhi.w	800a9fe <HAL_I2C_EV_IRQHandler+0x782>
 800a82a:	2801      	cmp	r0, #1
 800a82c:	f000 80ed 	beq.w	800aa0a <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a830:	2200      	movs	r2, #0
 800a832:	9209      	str	r2, [sp, #36]	; 0x24
 800a834:	695a      	ldr	r2, [r3, #20]
 800a836:	9209      	str	r2, [sp, #36]	; 0x24
 800a838:	699b      	ldr	r3, [r3, #24]
 800a83a:	9309      	str	r3, [sp, #36]	; 0x24
 800a83c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a83e:	e7a5      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a840:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a842:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a844:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a848:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a84a:	691b      	ldr	r3, [r3, #16]
 800a84c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a84e:	e6f1      	b.n	800a634 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a850:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a852:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a856:	2a21      	cmp	r2, #33	; 0x21
 800a858:	f47f ad40 	bne.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a85c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a85e:	b292      	uxth	r2, r2
 800a860:	2a00      	cmp	r2, #0
 800a862:	f47f aeb2 	bne.w	800a5ca <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a866:	2908      	cmp	r1, #8
 800a868:	f000 80e2 	beq.w	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a86c:	2920      	cmp	r1, #32
 800a86e:	f000 80df 	beq.w	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a872:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a876:	f000 80db 	beq.w	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a87a:	6859      	ldr	r1, [r3, #4]
 800a87c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a880:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a882:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a884:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a886:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a888:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a88c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a88e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a892:	f7ff fb51 	bl	8009f38 <HAL_I2C_MasterTxCpltCallback>
 800a896:	e521      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a898:	9101      	str	r1, [sp, #4]
 800a89a:	695a      	ldr	r2, [r3, #20]
 800a89c:	9201      	str	r2, [sp, #4]
 800a89e:	699b      	ldr	r3, [r3, #24]
 800a8a0:	9301      	str	r3, [sp, #4]
 800a8a2:	9b01      	ldr	r3, [sp, #4]
 800a8a4:	e51a      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a8a6:	2a21      	cmp	r2, #33	; 0x21
 800a8a8:	f43f add1 	beq.w	800a44e <HAL_I2C_EV_IRQHandler+0x1d2>
 800a8ac:	e5c9      	b.n	800a442 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8ae:	9202      	str	r2, [sp, #8]
 800a8b0:	695a      	ldr	r2, [r3, #20]
 800a8b2:	9202      	str	r2, [sp, #8]
 800a8b4:	699a      	ldr	r2, [r3, #24]
 800a8b6:	9202      	str	r2, [sp, #8]
 800a8b8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a8ba:	681a      	ldr	r2, [r3, #0]
 800a8bc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a8c0:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a8c2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a8c4:	3301      	adds	r3, #1
 800a8c6:	6523      	str	r3, [r4, #80]	; 0x50
 800a8c8:	e508      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8ca:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a8cc:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8d2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a8d4:	f43f aeab 	beq.w	800a62e <HAL_I2C_EV_IRQHandler+0x3b2>
 800a8d8:	2902      	cmp	r1, #2
 800a8da:	f43f aea8 	beq.w	800a62e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a8de:	681a      	ldr	r2, [r3, #0]
 800a8e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8e4:	601a      	str	r2, [r3, #0]
 800a8e6:	e6a2      	b.n	800a62e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a8e8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a8ec:	f000 811b 	beq.w	800ab26 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a8f0:	2808      	cmp	r0, #8
 800a8f2:	f000 8108 	beq.w	800ab06 <HAL_I2C_EV_IRQHandler+0x88a>
 800a8f6:	2820      	cmp	r0, #32
 800a8f8:	f000 8105 	beq.w	800ab06 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a8fc:	2d12      	cmp	r5, #18
 800a8fe:	f000 80ff 	beq.w	800ab00 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a902:	2810      	cmp	r0, #16
 800a904:	d804      	bhi.n	800a910 <HAL_I2C_EV_IRQHandler+0x694>
 800a906:	4a48      	ldr	r2, [pc, #288]	; (800aa28 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a908:	40c2      	lsrs	r2, r0
 800a90a:	07d1      	lsls	r1, r2, #31
 800a90c:	f100 814c 	bmi.w	800aba8 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a910:	681a      	ldr	r2, [r3, #0]
 800a912:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a916:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a918:	2200      	movs	r2, #0
 800a91a:	9206      	str	r2, [sp, #24]
 800a91c:	695a      	ldr	r2, [r3, #20]
 800a91e:	9206      	str	r2, [sp, #24]
 800a920:	699b      	ldr	r3, [r3, #24]
 800a922:	9306      	str	r3, [sp, #24]
 800a924:	9b06      	ldr	r3, [sp, #24]
 800a926:	e731      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a928:	685a      	ldr	r2, [r3, #4]
 800a92a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a92e:	605a      	str	r2, [r3, #4]
 800a930:	e4d4      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a932:	3901      	subs	r1, #1
 800a934:	290f      	cmp	r1, #15
 800a936:	d809      	bhi.n	800a94c <HAL_I2C_EV_IRQHandler+0x6d0>
 800a938:	e8df f001 	tbb	[pc, r1]
 800a93c:	3608363b 	.word	0x3608363b
 800a940:	08080808 	.word	0x08080808
 800a944:	08080808 	.word	0x08080808
 800a948:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a94c:	681a      	ldr	r2, [r3, #0]
 800a94e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a952:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a954:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a956:	691b      	ldr	r3, [r3, #16]
 800a958:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a95a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a95c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a95e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a960:	3b01      	subs	r3, #1
 800a962:	b29b      	uxth	r3, r3
 800a964:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a966:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a968:	1c51      	adds	r1, r2, #1
 800a96a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a96c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a96e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a970:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800a972:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a974:	3b01      	subs	r3, #1
 800a976:	b29b      	uxth	r3, r3
 800a978:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a97a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800a97c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a97e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800a982:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800a984:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a986:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800a988:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a98c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800a990:	2b40      	cmp	r3, #64	; 0x40
 800a992:	f000 80f5 	beq.w	800ab80 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a996:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a998:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a99a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a99e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a9a0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a9a2:	f7ff facb 	bl	8009f3c <HAL_I2C_MasterRxCpltCallback>
 800a9a6:	e499      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9a8:	681a      	ldr	r2, [r3, #0]
 800a9aa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a9ae:	601a      	str	r2, [r3, #0]
 800a9b0:	e7d0      	b.n	800a954 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9b2:	681a      	ldr	r2, [r3, #0]
 800a9b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9b8:	601a      	str	r2, [r3, #0]
 800a9ba:	e7cb      	b.n	800a954 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a9bc:	2810      	cmp	r0, #16
 800a9be:	d804      	bhi.n	800a9ca <HAL_I2C_EV_IRQHandler+0x74e>
 800a9c0:	4a19      	ldr	r2, [pc, #100]	; (800aa28 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a9c2:	40c2      	lsrs	r2, r0
 800a9c4:	07d2      	lsls	r2, r2, #31
 800a9c6:	f100 80c2 	bmi.w	800ab4e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9ca:	681a      	ldr	r2, [r3, #0]
 800a9cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9d0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9d2:	681a      	ldr	r2, [r3, #0]
 800a9d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a9d8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a9da:	685a      	ldr	r2, [r3, #4]
 800a9dc:	0516      	lsls	r6, r2, #20
 800a9de:	d506      	bpl.n	800a9ee <HAL_I2C_EV_IRQHandler+0x772>
 800a9e0:	2820      	cmp	r0, #32
 800a9e2:	f240 80bc 	bls.w	800ab5e <HAL_I2C_EV_IRQHandler+0x8e2>
 800a9e6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a9ea:	f000 80bd 	beq.w	800ab68 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9ee:	2200      	movs	r2, #0
 800a9f0:	9208      	str	r2, [sp, #32]
 800a9f2:	695a      	ldr	r2, [r3, #20]
 800a9f4:	9208      	str	r2, [sp, #32]
 800a9f6:	699b      	ldr	r3, [r3, #24]
 800a9f8:	9308      	str	r3, [sp, #32]
 800a9fa:	9b08      	ldr	r3, [sp, #32]
 800a9fc:	e6c6      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
 800a9fe:	4a0b      	ldr	r2, [pc, #44]	; (800aa2c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800aa00:	3808      	subs	r0, #8
 800aa02:	40c2      	lsrs	r2, r0
 800aa04:	07d2      	lsls	r2, r2, #31
 800aa06:	f57f af13 	bpl.w	800a830 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800aa0a:	685a      	ldr	r2, [r3, #4]
 800aa0c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aa10:	605a      	str	r2, [r3, #4]
 800aa12:	e70d      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aa14:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa18:	f47f af0a 	bne.w	800a830 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aa1c:	e7f5      	b.n	800aa0a <HAL_I2C_EV_IRQHandler+0x78e>
 800aa1e:	bf00      	nop
 800aa20:	0800a01d 	.word	0x0800a01d
 800aa24:	ffff0000 	.word	0xffff0000
 800aa28:	00010014 	.word	0x00010014
 800aa2c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa30:	6859      	ldr	r1, [r3, #4]
 800aa32:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aa36:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa38:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa3a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aa3c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa3e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aa42:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aa44:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800aa46:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa4a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa4e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa52:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aa54:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa56:	f47f af1c 	bne.w	800a892 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aa5a:	f7ff fa79 	bl	8009f50 <HAL_I2C_MemTxCpltCallback>
 800aa5e:	e43d      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800aa60:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800aa62:	2802      	cmp	r0, #2
 800aa64:	f43f af60 	beq.w	800a928 <HAL_I2C_EV_IRQHandler+0x6ac>
 800aa68:	2a01      	cmp	r2, #1
 800aa6a:	f63f af5d 	bhi.w	800a928 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800aa6e:	4a62      	ldr	r2, [pc, #392]	; (800abf8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800aa70:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800aa72:	6812      	ldr	r2, [r2, #0]
 800aa74:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800aa78:	fbb2 f2f0 	udiv	r2, r2, r0
 800aa7c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800aa80:	920b      	str	r2, [sp, #44]	; 0x2c
 800aa82:	e004      	b.n	800aa8e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800aa84:	681a      	ldr	r2, [r3, #0]
 800aa86:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800aa8a:	f000 8092 	beq.w	800abb2 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800aa8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa90:	3a01      	subs	r2, #1
 800aa92:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800aa94:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aa96:	2900      	cmp	r1, #0
 800aa98:	d1f4      	bne.n	800aa84 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa9a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa9c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aa9e:	f042 0220 	orr.w	r2, r2, #32
 800aaa2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aaa4:	685a      	ldr	r2, [r3, #4]
 800aaa6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aaaa:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaac:	691b      	ldr	r3, [r3, #16]
 800aaae:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800aab0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aab2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800aab4:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800aab6:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800aab8:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800aaba:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800aabc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aabe:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800aac0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800aac4:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aac6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800aaca:	f7ff faa3 	bl	800a014 <HAL_I2C_ErrorCallback>
 800aace:	e405      	b.n	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aad0:	2d08      	cmp	r5, #8
 800aad2:	d0ad      	beq.n	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aad4:	2d20      	cmp	r5, #32
 800aad6:	d0ab      	beq.n	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aad8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800aadc:	d0a8      	beq.n	800aa30 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aade:	685a      	ldr	r2, [r3, #4]
 800aae0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aae4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aae6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aae8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aaea:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aaec:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aaee:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaf2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aaf4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aaf8:	f7ff fa1e 	bl	8009f38 <HAL_I2C_MasterTxCpltCallback>
 800aafc:	f7ff bbee 	b.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ab00:	2801      	cmp	r0, #1
 800ab02:	f43f af05 	beq.w	800a910 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab06:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab08:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab0e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab10:	9107      	str	r1, [sp, #28]
 800ab12:	695a      	ldr	r2, [r3, #20]
 800ab14:	9207      	str	r2, [sp, #28]
 800ab16:	699a      	ldr	r2, [r3, #24]
 800ab18:	9207      	str	r2, [sp, #28]
 800ab1a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab1c:	681a      	ldr	r2, [r3, #0]
 800ab1e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab22:	601a      	str	r2, [r3, #0]
 800ab24:	e632      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab26:	681a      	ldr	r2, [r3, #0]
 800ab28:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab2c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ab2e:	685a      	ldr	r2, [r3, #4]
 800ab30:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ab34:	d02d      	beq.n	800ab92 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab36:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab38:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab3a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab3e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab40:	9104      	str	r1, [sp, #16]
 800ab42:	695a      	ldr	r2, [r3, #20]
 800ab44:	9204      	str	r2, [sp, #16]
 800ab46:	699b      	ldr	r3, [r3, #24]
 800ab48:	9304      	str	r3, [sp, #16]
 800ab4a:	9b04      	ldr	r3, [sp, #16]
 800ab4c:	e61e      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab4e:	681a      	ldr	r2, [r3, #0]
 800ab50:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ab54:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ab56:	685a      	ldr	r2, [r3, #4]
 800ab58:	0515      	lsls	r5, r2, #20
 800ab5a:	f57f af48 	bpl.w	800a9ee <HAL_I2C_EV_IRQHandler+0x772>
 800ab5e:	2807      	cmp	r0, #7
 800ab60:	d807      	bhi.n	800ab72 <HAL_I2C_EV_IRQHandler+0x8f6>
 800ab62:	2801      	cmp	r0, #1
 800ab64:	f47f af43 	bne.w	800a9ee <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ab68:	685a      	ldr	r2, [r3, #4]
 800ab6a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ab6e:	605a      	str	r2, [r3, #4]
 800ab70:	e73d      	b.n	800a9ee <HAL_I2C_EV_IRQHandler+0x772>
 800ab72:	4a22      	ldr	r2, [pc, #136]	; (800abfc <HAL_I2C_EV_IRQHandler+0x980>)
 800ab74:	3808      	subs	r0, #8
 800ab76:	40c2      	lsrs	r2, r0
 800ab78:	07d0      	lsls	r0, r2, #31
 800ab7a:	f57f af38 	bpl.w	800a9ee <HAL_I2C_EV_IRQHandler+0x772>
 800ab7e:	e7f3      	b.n	800ab68 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab80:	2300      	movs	r3, #0
 800ab82:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ab86:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ab88:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ab8a:	f7ff fa41 	bl	800a010 <HAL_I2C_MemRxCpltCallback>
 800ab8e:	f7ff bba5 	b.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab92:	9205      	str	r2, [sp, #20]
 800ab94:	695a      	ldr	r2, [r3, #20]
 800ab96:	9205      	str	r2, [sp, #20]
 800ab98:	699a      	ldr	r2, [r3, #24]
 800ab9a:	9205      	str	r2, [sp, #20]
 800ab9c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab9e:	681a      	ldr	r2, [r3, #0]
 800aba0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aba4:	601a      	str	r2, [r3, #0]
 800aba6:	e5f1      	b.n	800a78c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aba8:	681a      	ldr	r2, [r3, #0]
 800abaa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abae:	601a      	str	r2, [r3, #0]
 800abb0:	e6b2      	b.n	800a918 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abb2:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abb4:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abb6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abba:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800abbc:	6859      	ldr	r1, [r3, #4]
 800abbe:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800abc2:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abc4:	691b      	ldr	r3, [r3, #16]
 800abc6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800abc8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800abca:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800abcc:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800abce:	b29b      	uxth	r3, r3
 800abd0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800abd2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800abd6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abd8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800abdc:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abde:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800abe0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800abe2:	f47f aed9 	bne.w	800a998 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800abe6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800abea:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800abec:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800abee:	f7ff fa0f 	bl	800a010 <HAL_I2C_MemRxCpltCallback>
 800abf2:	f7ff bb73 	b.w	800a2dc <HAL_I2C_EV_IRQHandler+0x60>
 800abf6:	bf00      	nop
 800abf8:	20000078 	.word	0x20000078
 800abfc:	01000101 	.word	0x01000101

0800ac00 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac00:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ac04:	2a20      	cmp	r2, #32
{
 800ac06:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac08:	fa5f fc82 	uxtb.w	ip, r2
 800ac0c:	d001      	beq.n	800ac12 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ac0e:	2002      	movs	r0, #2
  }
}
 800ac10:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800ac12:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ac14:	2024      	movs	r0, #36	; 0x24
 800ac16:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ac1a:	6810      	ldr	r0, [r2, #0]
 800ac1c:	f020 0001 	bic.w	r0, r0, #1
 800ac20:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800ac22:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ac24:	f020 0010 	bic.w	r0, r0, #16
 800ac28:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ac2a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ac2c:	4301      	orrs	r1, r0
 800ac2e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ac30:	6811      	ldr	r1, [r2, #0]
 800ac32:	f041 0101 	orr.w	r1, r1, #1
 800ac36:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800ac38:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ac3a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ac3e:	4770      	bx	lr

0800ac40 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ac40:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ac44:	2a20      	cmp	r2, #32
 800ac46:	d001      	beq.n	800ac4c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ac48:	2002      	movs	r0, #2
  }
}
 800ac4a:	4770      	bx	lr
{
 800ac4c:	b410      	push	{r4}
 800ac4e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800ac52:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ac54:	2224      	movs	r2, #36	; 0x24
 800ac56:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ac5a:	6822      	ldr	r2, [r4, #0]
 800ac5c:	f022 0201 	bic.w	r2, r2, #1
 800ac60:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ac62:	4603      	mov	r3, r0
 800ac64:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ac66:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ac6a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ac6c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ac6e:	b289      	uxth	r1, r1
 800ac70:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ac72:	6822      	ldr	r2, [r4, #0]
 800ac74:	f042 0201 	orr.w	r2, r2, #1
 800ac78:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ac7a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ac7e:	2000      	movs	r0, #0
}
 800ac80:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ac84:	4770      	bx	lr
 800ac86:	bf00      	nop

0800ac88 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ac88:	2800      	cmp	r0, #0
 800ac8a:	d069      	beq.n	800ad60 <HAL_LTDC_Init+0xd8>
{
 800ac8c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ac8e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ac92:	4604      	mov	r4, r0
 800ac94:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ac98:	2b00      	cmp	r3, #0
 800ac9a:	d05c      	beq.n	800ad56 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ac9c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ac9e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aca0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800aca4:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800aca8:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800acaa:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800acac:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800acb0:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800acb4:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800acb6:	6999      	ldr	r1, [r3, #24]
 800acb8:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800acba:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800acbc:	430a      	orrs	r2, r1
 800acbe:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800acc0:	689a      	ldr	r2, [r3, #8]
 800acc2:	4928      	ldr	r1, [pc, #160]	; (800ad64 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800acc4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800acc6:	400a      	ands	r2, r1
 800acc8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800acca:	689a      	ldr	r2, [r3, #8]
 800accc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800acd0:	69a0      	ldr	r0, [r4, #24]
 800acd2:	4302      	orrs	r2, r0
 800acd4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800acd6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800acd8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800acda:	400a      	ands	r2, r1
 800acdc:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800acde:	68da      	ldr	r2, [r3, #12]
 800ace0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ace4:	6a20      	ldr	r0, [r4, #32]
 800ace6:	4302      	orrs	r2, r0
 800ace8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800acea:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800acec:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800acee:	400a      	ands	r2, r1
 800acf0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800acf2:	691a      	ldr	r2, [r3, #16]
 800acf4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800acf8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800acfa:	4302      	orrs	r2, r0
 800acfc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800acfe:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ad00:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ad02:	400a      	ands	r2, r1
 800ad04:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ad06:	695a      	ldr	r2, [r3, #20]
 800ad08:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad0a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad0e:	430a      	orrs	r2, r1
 800ad10:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ad12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ad14:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ad18:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ad1c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800ad20:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800ad22:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ad24:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800ad28:	432a      	orrs	r2, r5
 800ad2a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800ad2e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800ad32:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800ad34:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ad36:	f042 0206 	orr.w	r2, r2, #6
 800ad3a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800ad3c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800ad3e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ad42:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800ad44:	ea42 020c 	orr.w	r2, r2, ip
 800ad48:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ad4a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800ad4e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800ad52:	4608      	mov	r0, r1
}
 800ad54:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800ad56:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800ad5a:	f7f6 ffd1 	bl	8001d00 <HAL_LTDC_MspInit>
 800ad5e:	e79d      	b.n	800ac9c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800ad60:	2001      	movs	r0, #1
}
 800ad62:	4770      	bx	lr
 800ad64:	f000f800 	.word	0xf000f800

0800ad68 <HAL_LTDC_ErrorCallback>:
 800ad68:	4770      	bx	lr
 800ad6a:	bf00      	nop

0800ad6c <HAL_LTDC_ReloadEventCallback>:
 800ad6c:	4770      	bx	lr
 800ad6e:	bf00      	nop

0800ad70 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ad70:	6803      	ldr	r3, [r0, #0]
{
 800ad72:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ad74:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ad76:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ad78:	076a      	lsls	r2, r5, #29
{
 800ad7a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ad7c:	d501      	bpl.n	800ad82 <HAL_LTDC_IRQHandler+0x12>
 800ad7e:	0771      	lsls	r1, r6, #29
 800ad80:	d41d      	bmi.n	800adbe <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ad82:	07aa      	lsls	r2, r5, #30
 800ad84:	d501      	bpl.n	800ad8a <HAL_LTDC_IRQHandler+0x1a>
 800ad86:	07b3      	lsls	r3, r6, #30
 800ad88:	d42d      	bmi.n	800ade6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ad8a:	07e8      	lsls	r0, r5, #31
 800ad8c:	d501      	bpl.n	800ad92 <HAL_LTDC_IRQHandler+0x22>
 800ad8e:	07f1      	lsls	r1, r6, #31
 800ad90:	d440      	bmi.n	800ae14 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ad92:	072a      	lsls	r2, r5, #28
 800ad94:	d501      	bpl.n	800ad9a <HAL_LTDC_IRQHandler+0x2a>
 800ad96:	0733      	lsls	r3, r6, #28
 800ad98:	d400      	bmi.n	800ad9c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ad9a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ad9c:	6823      	ldr	r3, [r4, #0]
 800ad9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ada0:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ada2:	f022 0208 	bic.w	r2, r2, #8
 800ada6:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ada8:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800adaa:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800adac:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800adae:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800adb2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800adb6:	4620      	mov	r0, r4
 800adb8:	f7ff ffd8 	bl	800ad6c <HAL_LTDC_ReloadEventCallback>
}
 800adbc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800adbe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adc0:	f022 0204 	bic.w	r2, r2, #4
 800adc4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800adc6:	2204      	movs	r2, #4
 800adc8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800adca:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800adce:	f043 0301 	orr.w	r3, r3, #1
 800add2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800add6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800add8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800addc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ade0:	f7ff ffc2 	bl	800ad68 <HAL_LTDC_ErrorCallback>
 800ade4:	e7cd      	b.n	800ad82 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800ade6:	6823      	ldr	r3, [r4, #0]
 800ade8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adea:	f022 0202 	bic.w	r2, r2, #2
 800adee:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800adf0:	2202      	movs	r2, #2
 800adf2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800adf4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800adf8:	f043 0302 	orr.w	r3, r3, #2
 800adfc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae00:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800ae02:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae04:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae08:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae0c:	4620      	mov	r0, r4
 800ae0e:	f7ff ffab 	bl	800ad68 <HAL_LTDC_ErrorCallback>
 800ae12:	e7ba      	b.n	800ad8a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ae14:	6823      	ldr	r3, [r4, #0]
 800ae16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae18:	f022 0201 	bic.w	r2, r2, #1
 800ae1c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800ae1e:	2201      	movs	r2, #1
 800ae20:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ae22:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae24:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae28:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800ae2c:	4620      	mov	r0, r4
 800ae2e:	f7f6 fa79 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800ae32:	e7ae      	b.n	800ad92 <HAL_LTDC_IRQHandler+0x22>

0800ae34 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800ae34:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ae38:	2b01      	cmp	r3, #1
 800ae3a:	f000 80c2 	beq.w	800afc2 <HAL_LTDC_ConfigLayer+0x18e>
{
 800ae3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae42:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae46:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae4a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae4e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae50:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ae52:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae56:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800ae5a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae5e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800ae62:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae66:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800ae6a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae6c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae70:	460c      	mov	r4, r1
 800ae72:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae74:	9301      	str	r3, [sp, #4]
 800ae76:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ae7a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800ae7e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ae84:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ae86:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae8a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ae8c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800ae90:	6823      	ldr	r3, [r4, #0]
 800ae92:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ae96:	9b01      	ldr	r3, [sp, #4]
 800ae98:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ae9c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aea0:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aea2:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800aea4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aea8:	1c51      	adds	r1, r2, #1
 800aeaa:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800aeae:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aeb0:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aeb2:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aeb6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aeba:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800aebe:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800aec2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800aec6:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aeca:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aece:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aed0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aed2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800aed6:	3301      	adds	r3, #1
 800aed8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800aedc:	4403      	add	r3, r0
 800aede:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800aee2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aee6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800aeea:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aeec:	f023 0307 	bic.w	r3, r3, #7
 800aef0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800aef4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800aef8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800aefc:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800af00:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800af04:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af08:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800af0c:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800af10:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800af14:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800af18:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800af1c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800af20:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800af24:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800af28:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800af2c:	696b      	ldr	r3, [r5, #20]
 800af2e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800af32:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800af36:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af3a:	f023 0307 	bic.w	r3, r3, #7
 800af3e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800af42:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800af46:	4303      	orrs	r3, r0
 800af48:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800af4c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800af50:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800af52:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800af56:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800af5a:	bb69      	cbnz	r1, 800afb8 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800af5c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800af5e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af60:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800af62:	fb03 f707 	mul.w	r7, r3, r7
 800af66:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af68:	fb02 f303 	mul.w	r3, r2, r3
 800af6c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800af70:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800af74:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800af76:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800af7a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800af7e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800af82:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800af86:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800af8a:	f023 0307 	bic.w	r3, r3, #7
 800af8e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800af92:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800af96:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800af9a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800af9c:	4313      	orrs	r3, r2
 800af9e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800afa2:	2300      	movs	r3, #0
  return HAL_OK;
 800afa4:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800afa6:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800afaa:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800afae:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800afb2:	b003      	add	sp, #12
 800afb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800afb8:	3901      	subs	r1, #1
 800afba:	2906      	cmp	r1, #6
 800afbc:	d903      	bls.n	800afc6 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800afbe:	2301      	movs	r3, #1
 800afc0:	e7cd      	b.n	800af5e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800afc2:	2002      	movs	r0, #2
}
 800afc4:	4770      	bx	lr
 800afc6:	4b02      	ldr	r3, [pc, #8]	; (800afd0 <HAL_LTDC_ConfigLayer+0x19c>)
 800afc8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800afcc:	e7c7      	b.n	800af5e <HAL_LTDC_ConfigLayer+0x12a>
 800afce:	bf00      	nop
 800afd0:	0802c5b4 	.word	0x0802c5b4

0800afd4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800afd4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800afd8:	2b01      	cmp	r3, #1
 800afda:	d019      	beq.n	800b010 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afdc:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afde:	2302      	movs	r3, #2
{
 800afe0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800afe2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afe6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800afe8:	4c0a      	ldr	r4, [pc, #40]	; (800b014 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800afea:	f023 0301 	bic.w	r3, r3, #1
 800afee:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800aff0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800aff2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800aff4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800aff6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800affa:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800affe:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b000:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b004:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b008:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b00c:	4618      	mov	r0, r3
}
 800b00e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b010:	2002      	movs	r0, #2
}
 800b012:	4770      	bx	lr
 800b014:	40016800 	.word	0x40016800

0800b018 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b018:	2800      	cmp	r0, #0
 800b01a:	f000 81a2 	beq.w	800b362 <HAL_RCC_OscConfig+0x34a>
{
 800b01e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b022:	6803      	ldr	r3, [r0, #0]
 800b024:	07dd      	lsls	r5, r3, #31
{
 800b026:	b082      	sub	sp, #8
 800b028:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b02a:	d52f      	bpl.n	800b08c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b02c:	499e      	ldr	r1, [pc, #632]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b02e:	688a      	ldr	r2, [r1, #8]
 800b030:	f002 020c 	and.w	r2, r2, #12
 800b034:	2a04      	cmp	r2, #4
 800b036:	f000 80ed 	beq.w	800b214 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b03a:	688a      	ldr	r2, [r1, #8]
 800b03c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b040:	2a08      	cmp	r2, #8
 800b042:	f000 80e3 	beq.w	800b20c <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b046:	6863      	ldr	r3, [r4, #4]
 800b048:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b04c:	f000 80ec 	beq.w	800b228 <HAL_RCC_OscConfig+0x210>
 800b050:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b054:	f000 8175 	beq.w	800b342 <HAL_RCC_OscConfig+0x32a>
 800b058:	4d93      	ldr	r5, [pc, #588]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b05a:	682a      	ldr	r2, [r5, #0]
 800b05c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b060:	602a      	str	r2, [r5, #0]
 800b062:	682a      	ldr	r2, [r5, #0]
 800b064:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b068:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b06a:	2b00      	cmp	r3, #0
 800b06c:	f040 80e1 	bne.w	800b232 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b070:	f7fd fe94 	bl	8008d9c <HAL_GetTick>
 800b074:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b076:	e005      	b.n	800b084 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b078:	f7fd fe90 	bl	8008d9c <HAL_GetTick>
 800b07c:	1b80      	subs	r0, r0, r6
 800b07e:	2864      	cmp	r0, #100	; 0x64
 800b080:	f200 8101 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b084:	682b      	ldr	r3, [r5, #0]
 800b086:	039b      	lsls	r3, r3, #14
 800b088:	d4f6      	bmi.n	800b078 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b08a:	6823      	ldr	r3, [r4, #0]
 800b08c:	079f      	lsls	r7, r3, #30
 800b08e:	d528      	bpl.n	800b0e2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b090:	4a85      	ldr	r2, [pc, #532]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b092:	6891      	ldr	r1, [r2, #8]
 800b094:	f011 0f0c 	tst.w	r1, #12
 800b098:	f000 8090 	beq.w	800b1bc <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b09c:	6891      	ldr	r1, [r2, #8]
 800b09e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b0a2:	2908      	cmp	r1, #8
 800b0a4:	f000 8086 	beq.w	800b1b4 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b0a8:	68e3      	ldr	r3, [r4, #12]
 800b0aa:	2b00      	cmp	r3, #0
 800b0ac:	f000 810e 	beq.w	800b2cc <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b0b0:	4b7e      	ldr	r3, [pc, #504]	; (800b2ac <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0b2:	4e7d      	ldr	r6, [pc, #500]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b0b4:	2201      	movs	r2, #1
 800b0b6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b0b8:	f7fd fe70 	bl	8008d9c <HAL_GetTick>
 800b0bc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0be:	e005      	b.n	800b0cc <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b0c0:	f7fd fe6c 	bl	8008d9c <HAL_GetTick>
 800b0c4:	1b40      	subs	r0, r0, r5
 800b0c6:	2802      	cmp	r0, #2
 800b0c8:	f200 80dd 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0cc:	6833      	ldr	r3, [r6, #0]
 800b0ce:	0798      	lsls	r0, r3, #30
 800b0d0:	d5f6      	bpl.n	800b0c0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b0d2:	6833      	ldr	r3, [r6, #0]
 800b0d4:	6922      	ldr	r2, [r4, #16]
 800b0d6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b0da:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b0de:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b0e0:	6823      	ldr	r3, [r4, #0]
 800b0e2:	071a      	lsls	r2, r3, #28
 800b0e4:	d451      	bmi.n	800b18a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b0e6:	0758      	lsls	r0, r3, #29
 800b0e8:	d52f      	bpl.n	800b14a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b0ea:	4a6f      	ldr	r2, [pc, #444]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b0ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b0ee:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b0f2:	d07f      	beq.n	800b1f4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b0f4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b0f6:	4e6e      	ldr	r6, [pc, #440]	; (800b2b0 <HAL_RCC_OscConfig+0x298>)
 800b0f8:	6833      	ldr	r3, [r6, #0]
 800b0fa:	05d9      	lsls	r1, r3, #23
 800b0fc:	f140 80b3 	bpl.w	800b266 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b100:	68a3      	ldr	r3, [r4, #8]
 800b102:	2b01      	cmp	r3, #1
 800b104:	f000 80c3 	beq.w	800b28e <HAL_RCC_OscConfig+0x276>
 800b108:	2b05      	cmp	r3, #5
 800b10a:	f000 812c 	beq.w	800b366 <HAL_RCC_OscConfig+0x34e>
 800b10e:	4e66      	ldr	r6, [pc, #408]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b110:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b112:	f022 0201 	bic.w	r2, r2, #1
 800b116:	6732      	str	r2, [r6, #112]	; 0x70
 800b118:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b11a:	f022 0204 	bic.w	r2, r2, #4
 800b11e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b120:	2b00      	cmp	r3, #0
 800b122:	f040 80b9 	bne.w	800b298 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b126:	f7fd fe39 	bl	8008d9c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b12a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b12e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b130:	e005      	b.n	800b13e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b132:	f7fd fe33 	bl	8008d9c <HAL_GetTick>
 800b136:	1bc0      	subs	r0, r0, r7
 800b138:	4540      	cmp	r0, r8
 800b13a:	f200 80a4 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b13e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b140:	0798      	lsls	r0, r3, #30
 800b142:	d4f6      	bmi.n	800b132 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b144:	2d00      	cmp	r5, #0
 800b146:	f040 8106 	bne.w	800b356 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b14a:	69a0      	ldr	r0, [r4, #24]
 800b14c:	b1c8      	cbz	r0, 800b182 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b14e:	4d56      	ldr	r5, [pc, #344]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b150:	68ab      	ldr	r3, [r5, #8]
 800b152:	f003 030c 	and.w	r3, r3, #12
 800b156:	2b08      	cmp	r3, #8
 800b158:	f000 80c9 	beq.w	800b2ee <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b15c:	4b53      	ldr	r3, [pc, #332]	; (800b2ac <HAL_RCC_OscConfig+0x294>)
 800b15e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b160:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b162:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b164:	f000 8109 	beq.w	800b37a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b168:	f7fd fe18 	bl	8008d9c <HAL_GetTick>
 800b16c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b16e:	e005      	b.n	800b17c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b170:	f7fd fe14 	bl	8008d9c <HAL_GetTick>
 800b174:	1b00      	subs	r0, r0, r4
 800b176:	2802      	cmp	r0, #2
 800b178:	f200 8085 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b17c:	682b      	ldr	r3, [r5, #0]
 800b17e:	019b      	lsls	r3, r3, #6
 800b180:	d4f6      	bmi.n	800b170 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b182:	2000      	movs	r0, #0
}
 800b184:	b002      	add	sp, #8
 800b186:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b18a:	6963      	ldr	r3, [r4, #20]
 800b18c:	b30b      	cbz	r3, 800b1d2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b18e:	4b47      	ldr	r3, [pc, #284]	; (800b2ac <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b190:	4e45      	ldr	r6, [pc, #276]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b192:	2201      	movs	r2, #1
 800b194:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b198:	f7fd fe00 	bl	8008d9c <HAL_GetTick>
 800b19c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b19e:	e004      	b.n	800b1aa <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b1a0:	f7fd fdfc 	bl	8008d9c <HAL_GetTick>
 800b1a4:	1b40      	subs	r0, r0, r5
 800b1a6:	2802      	cmp	r0, #2
 800b1a8:	d86d      	bhi.n	800b286 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b1aa:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b1ac:	079b      	lsls	r3, r3, #30
 800b1ae:	d5f7      	bpl.n	800b1a0 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b1b0:	6823      	ldr	r3, [r4, #0]
 800b1b2:	e798      	b.n	800b0e6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b1b4:	6852      	ldr	r2, [r2, #4]
 800b1b6:	0256      	lsls	r6, r2, #9
 800b1b8:	f53f af76 	bmi.w	800b0a8 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b1bc:	4a3a      	ldr	r2, [pc, #232]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b1be:	6812      	ldr	r2, [r2, #0]
 800b1c0:	0795      	lsls	r5, r2, #30
 800b1c2:	d544      	bpl.n	800b24e <HAL_RCC_OscConfig+0x236>
 800b1c4:	68e2      	ldr	r2, [r4, #12]
 800b1c6:	2a01      	cmp	r2, #1
 800b1c8:	d041      	beq.n	800b24e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b1ca:	2001      	movs	r0, #1
}
 800b1cc:	b002      	add	sp, #8
 800b1ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b1d2:	4a36      	ldr	r2, [pc, #216]	; (800b2ac <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1d4:	4e34      	ldr	r6, [pc, #208]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b1d6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b1da:	f7fd fddf 	bl	8008d9c <HAL_GetTick>
 800b1de:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1e0:	e004      	b.n	800b1ec <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b1e2:	f7fd fddb 	bl	8008d9c <HAL_GetTick>
 800b1e6:	1b40      	subs	r0, r0, r5
 800b1e8:	2802      	cmp	r0, #2
 800b1ea:	d84c      	bhi.n	800b286 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b1ec:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b1ee:	079f      	lsls	r7, r3, #30
 800b1f0:	d4f7      	bmi.n	800b1e2 <HAL_RCC_OscConfig+0x1ca>
 800b1f2:	e7dd      	b.n	800b1b0 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b1f4:	9301      	str	r3, [sp, #4]
 800b1f6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b1f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b1fc:	6413      	str	r3, [r2, #64]	; 0x40
 800b1fe:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b200:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b204:	9301      	str	r3, [sp, #4]
 800b206:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b208:	2501      	movs	r5, #1
 800b20a:	e774      	b.n	800b0f6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b20c:	684a      	ldr	r2, [r1, #4]
 800b20e:	0250      	lsls	r0, r2, #9
 800b210:	f57f af19 	bpl.w	800b046 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b214:	4a24      	ldr	r2, [pc, #144]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b216:	6812      	ldr	r2, [r2, #0]
 800b218:	0391      	lsls	r1, r2, #14
 800b21a:	f57f af37 	bpl.w	800b08c <HAL_RCC_OscConfig+0x74>
 800b21e:	6862      	ldr	r2, [r4, #4]
 800b220:	2a00      	cmp	r2, #0
 800b222:	f47f af33 	bne.w	800b08c <HAL_RCC_OscConfig+0x74>
 800b226:	e7d0      	b.n	800b1ca <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b228:	4a1f      	ldr	r2, [pc, #124]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b22a:	6813      	ldr	r3, [r2, #0]
 800b22c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b230:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b232:	f7fd fdb3 	bl	8008d9c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b236:	4e1c      	ldr	r6, [pc, #112]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b238:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b23a:	e004      	b.n	800b246 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b23c:	f7fd fdae 	bl	8008d9c <HAL_GetTick>
 800b240:	1b40      	subs	r0, r0, r5
 800b242:	2864      	cmp	r0, #100	; 0x64
 800b244:	d81f      	bhi.n	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b246:	6833      	ldr	r3, [r6, #0]
 800b248:	039a      	lsls	r2, r3, #14
 800b24a:	d5f7      	bpl.n	800b23c <HAL_RCC_OscConfig+0x224>
 800b24c:	e71d      	b.n	800b08a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b24e:	4916      	ldr	r1, [pc, #88]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b250:	6920      	ldr	r0, [r4, #16]
 800b252:	680a      	ldr	r2, [r1, #0]
 800b254:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b258:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b25c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b25e:	071a      	lsls	r2, r3, #28
 800b260:	f57f af41 	bpl.w	800b0e6 <HAL_RCC_OscConfig+0xce>
 800b264:	e791      	b.n	800b18a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b266:	6833      	ldr	r3, [r6, #0]
 800b268:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b26c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b26e:	f7fd fd95 	bl	8008d9c <HAL_GetTick>
 800b272:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b274:	6833      	ldr	r3, [r6, #0]
 800b276:	05da      	lsls	r2, r3, #23
 800b278:	f53f af42 	bmi.w	800b100 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b27c:	f7fd fd8e 	bl	8008d9c <HAL_GetTick>
 800b280:	1bc0      	subs	r0, r0, r7
 800b282:	2802      	cmp	r0, #2
 800b284:	d9f6      	bls.n	800b274 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b286:	2003      	movs	r0, #3
}
 800b288:	b002      	add	sp, #8
 800b28a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b28e:	4a06      	ldr	r2, [pc, #24]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
 800b290:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b292:	f043 0301 	orr.w	r3, r3, #1
 800b296:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b298:	f7fd fd80 	bl	8008d9c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b29c:	4f02      	ldr	r7, [pc, #8]	; (800b2a8 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b29e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2a0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2a4:	e00b      	b.n	800b2be <HAL_RCC_OscConfig+0x2a6>
 800b2a6:	bf00      	nop
 800b2a8:	40023800 	.word	0x40023800
 800b2ac:	42470000 	.word	0x42470000
 800b2b0:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2b4:	f7fd fd72 	bl	8008d9c <HAL_GetTick>
 800b2b8:	1b80      	subs	r0, r0, r6
 800b2ba:	4540      	cmp	r0, r8
 800b2bc:	d8e3      	bhi.n	800b286 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2be:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b2c0:	079b      	lsls	r3, r3, #30
 800b2c2:	d5f7      	bpl.n	800b2b4 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b2c4:	2d00      	cmp	r5, #0
 800b2c6:	f43f af40 	beq.w	800b14a <HAL_RCC_OscConfig+0x132>
 800b2ca:	e044      	b.n	800b356 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b2cc:	4a42      	ldr	r2, [pc, #264]	; (800b3d8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2ce:	4e43      	ldr	r6, [pc, #268]	; (800b3dc <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b2d0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b2d2:	f7fd fd63 	bl	8008d9c <HAL_GetTick>
 800b2d6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2d8:	e004      	b.n	800b2e4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b2da:	f7fd fd5f 	bl	8008d9c <HAL_GetTick>
 800b2de:	1b40      	subs	r0, r0, r5
 800b2e0:	2802      	cmp	r0, #2
 800b2e2:	d8d0      	bhi.n	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b2e4:	6833      	ldr	r3, [r6, #0]
 800b2e6:	0799      	lsls	r1, r3, #30
 800b2e8:	d4f7      	bmi.n	800b2da <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b2ea:	6823      	ldr	r3, [r4, #0]
 800b2ec:	e6f9      	b.n	800b0e2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b2ee:	2801      	cmp	r0, #1
 800b2f0:	f43f af48 	beq.w	800b184 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b2f4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b2f6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b2f8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b2fc:	4291      	cmp	r1, r2
 800b2fe:	f47f af64 	bne.w	800b1ca <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b302:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b304:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b308:	4291      	cmp	r1, r2
 800b30a:	f47f af5e 	bne.w	800b1ca <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b30e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b310:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b314:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b316:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b31a:	f47f af56 	bne.w	800b1ca <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b31e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b320:	0852      	lsrs	r2, r2, #1
 800b322:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b326:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b328:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b32c:	f47f af4d 	bne.w	800b1ca <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b330:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b332:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b336:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b33a:	bf14      	ite	ne
 800b33c:	2001      	movne	r0, #1
 800b33e:	2000      	moveq	r0, #0
 800b340:	e720      	b.n	800b184 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b342:	4b26      	ldr	r3, [pc, #152]	; (800b3dc <HAL_RCC_OscConfig+0x3c4>)
 800b344:	681a      	ldr	r2, [r3, #0]
 800b346:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b34a:	601a      	str	r2, [r3, #0]
 800b34c:	681a      	ldr	r2, [r3, #0]
 800b34e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b352:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b354:	e76d      	b.n	800b232 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b356:	4a21      	ldr	r2, [pc, #132]	; (800b3dc <HAL_RCC_OscConfig+0x3c4>)
 800b358:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b35a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b35e:	6413      	str	r3, [r2, #64]	; 0x40
 800b360:	e6f3      	b.n	800b14a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b362:	2001      	movs	r0, #1
}
 800b364:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b366:	4b1d      	ldr	r3, [pc, #116]	; (800b3dc <HAL_RCC_OscConfig+0x3c4>)
 800b368:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b36a:	f042 0204 	orr.w	r2, r2, #4
 800b36e:	671a      	str	r2, [r3, #112]	; 0x70
 800b370:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b372:	f042 0201 	orr.w	r2, r2, #1
 800b376:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b378:	e78e      	b.n	800b298 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b37a:	f7fd fd0f 	bl	8008d9c <HAL_GetTick>
 800b37e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b380:	e005      	b.n	800b38e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b382:	f7fd fd0b 	bl	8008d9c <HAL_GetTick>
 800b386:	1b80      	subs	r0, r0, r6
 800b388:	2802      	cmp	r0, #2
 800b38a:	f63f af7c 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b38e:	682b      	ldr	r3, [r5, #0]
 800b390:	0199      	lsls	r1, r3, #6
 800b392:	d4f6      	bmi.n	800b382 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b394:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b398:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b39a:	430b      	orrs	r3, r1
 800b39c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b3a0:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b3a4:	0852      	lsrs	r2, r2, #1
 800b3a6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b3aa:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b3ac:	490a      	ldr	r1, [pc, #40]	; (800b3d8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b3ae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b3b2:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b3b4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b3b6:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b3b8:	f7fd fcf0 	bl	8008d9c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3bc:	4d07      	ldr	r5, [pc, #28]	; (800b3dc <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b3be:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3c0:	e005      	b.n	800b3ce <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b3c2:	f7fd fceb 	bl	8008d9c <HAL_GetTick>
 800b3c6:	1b00      	subs	r0, r0, r4
 800b3c8:	2802      	cmp	r0, #2
 800b3ca:	f63f af5c 	bhi.w	800b286 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b3ce:	682b      	ldr	r3, [r5, #0]
 800b3d0:	019a      	lsls	r2, r3, #6
 800b3d2:	d5f6      	bpl.n	800b3c2 <HAL_RCC_OscConfig+0x3aa>
 800b3d4:	e6d5      	b.n	800b182 <HAL_RCC_OscConfig+0x16a>
 800b3d6:	bf00      	nop
 800b3d8:	42470000 	.word	0x42470000
 800b3dc:	40023800 	.word	0x40023800

0800b3e0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b3e0:	4916      	ldr	r1, [pc, #88]	; (800b43c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b3e2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b3e4:	688b      	ldr	r3, [r1, #8]
 800b3e6:	f003 030c 	and.w	r3, r3, #12
 800b3ea:	2b04      	cmp	r3, #4
 800b3ec:	d01b      	beq.n	800b426 <HAL_RCC_GetSysClockFreq+0x46>
 800b3ee:	2b08      	cmp	r3, #8
 800b3f0:	d117      	bne.n	800b422 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b3f2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b3f4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b3f6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b3f8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b3fc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b400:	d113      	bne.n	800b42a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b402:	480f      	ldr	r0, [pc, #60]	; (800b440 <HAL_RCC_GetSysClockFreq+0x60>)
 800b404:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b408:	fba1 0100 	umull	r0, r1, r1, r0
 800b40c:	f7f4 ff40 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b410:	4b0a      	ldr	r3, [pc, #40]	; (800b43c <HAL_RCC_GetSysClockFreq+0x5c>)
 800b412:	685b      	ldr	r3, [r3, #4]
 800b414:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b418:	3301      	adds	r3, #1
 800b41a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b41c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b420:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b422:	4807      	ldr	r0, [pc, #28]	; (800b440 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b424:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b426:	4807      	ldr	r0, [pc, #28]	; (800b444 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b428:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b42a:	4806      	ldr	r0, [pc, #24]	; (800b444 <HAL_RCC_GetSysClockFreq+0x64>)
 800b42c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b430:	2300      	movs	r3, #0
 800b432:	fba1 0100 	umull	r0, r1, r1, r0
 800b436:	f7f4 ff2b 	bl	8000290 <__aeabi_uldivmod>
 800b43a:	e7e9      	b.n	800b410 <HAL_RCC_GetSysClockFreq+0x30>
 800b43c:	40023800 	.word	0x40023800
 800b440:	00f42400 	.word	0x00f42400
 800b444:	007a1200 	.word	0x007a1200

0800b448 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b448:	2800      	cmp	r0, #0
 800b44a:	f000 8087 	beq.w	800b55c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b44e:	4a48      	ldr	r2, [pc, #288]	; (800b570 <HAL_RCC_ClockConfig+0x128>)
 800b450:	6813      	ldr	r3, [r2, #0]
 800b452:	f003 030f 	and.w	r3, r3, #15
 800b456:	428b      	cmp	r3, r1
{
 800b458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b45c:	460d      	mov	r5, r1
 800b45e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b460:	d209      	bcs.n	800b476 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b462:	b2cb      	uxtb	r3, r1
 800b464:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b466:	6813      	ldr	r3, [r2, #0]
 800b468:	f003 030f 	and.w	r3, r3, #15
 800b46c:	428b      	cmp	r3, r1
 800b46e:	d002      	beq.n	800b476 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b470:	2001      	movs	r0, #1
}
 800b472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b476:	6823      	ldr	r3, [r4, #0]
 800b478:	0798      	lsls	r0, r3, #30
 800b47a:	d514      	bpl.n	800b4a6 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b47c:	0759      	lsls	r1, r3, #29
 800b47e:	d504      	bpl.n	800b48a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b480:	493c      	ldr	r1, [pc, #240]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b482:	688a      	ldr	r2, [r1, #8]
 800b484:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b488:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b48a:	071a      	lsls	r2, r3, #28
 800b48c:	d504      	bpl.n	800b498 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b48e:	4939      	ldr	r1, [pc, #228]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b490:	688a      	ldr	r2, [r1, #8]
 800b492:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b496:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b498:	4936      	ldr	r1, [pc, #216]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b49a:	68a0      	ldr	r0, [r4, #8]
 800b49c:	688a      	ldr	r2, [r1, #8]
 800b49e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b4a2:	4302      	orrs	r2, r0
 800b4a4:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b4a6:	07df      	lsls	r7, r3, #31
 800b4a8:	d521      	bpl.n	800b4ee <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b4aa:	6862      	ldr	r2, [r4, #4]
 800b4ac:	2a01      	cmp	r2, #1
 800b4ae:	d057      	beq.n	800b560 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b4b0:	1e93      	subs	r3, r2, #2
 800b4b2:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b4b4:	4b2f      	ldr	r3, [pc, #188]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b4b6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b4b8:	d94d      	bls.n	800b556 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4ba:	0799      	lsls	r1, r3, #30
 800b4bc:	d5d8      	bpl.n	800b470 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b4be:	4e2d      	ldr	r6, [pc, #180]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b4c0:	68b3      	ldr	r3, [r6, #8]
 800b4c2:	f023 0303 	bic.w	r3, r3, #3
 800b4c6:	4313      	orrs	r3, r2
 800b4c8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b4ca:	f7fd fc67 	bl	8008d9c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b4ce:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b4d2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b4d4:	e004      	b.n	800b4e0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b4d6:	f7fd fc61 	bl	8008d9c <HAL_GetTick>
 800b4da:	1bc0      	subs	r0, r0, r7
 800b4dc:	4540      	cmp	r0, r8
 800b4de:	d844      	bhi.n	800b56a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b4e0:	68b3      	ldr	r3, [r6, #8]
 800b4e2:	6862      	ldr	r2, [r4, #4]
 800b4e4:	f003 030c 	and.w	r3, r3, #12
 800b4e8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b4ec:	d1f3      	bne.n	800b4d6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b4ee:	4a20      	ldr	r2, [pc, #128]	; (800b570 <HAL_RCC_ClockConfig+0x128>)
 800b4f0:	6813      	ldr	r3, [r2, #0]
 800b4f2:	f003 030f 	and.w	r3, r3, #15
 800b4f6:	42ab      	cmp	r3, r5
 800b4f8:	d906      	bls.n	800b508 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b4fa:	b2eb      	uxtb	r3, r5
 800b4fc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b4fe:	6813      	ldr	r3, [r2, #0]
 800b500:	f003 030f 	and.w	r3, r3, #15
 800b504:	42ab      	cmp	r3, r5
 800b506:	d1b3      	bne.n	800b470 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b508:	6823      	ldr	r3, [r4, #0]
 800b50a:	075a      	lsls	r2, r3, #29
 800b50c:	d506      	bpl.n	800b51c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b50e:	4919      	ldr	r1, [pc, #100]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b510:	68e0      	ldr	r0, [r4, #12]
 800b512:	688a      	ldr	r2, [r1, #8]
 800b514:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b518:	4302      	orrs	r2, r0
 800b51a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b51c:	071b      	lsls	r3, r3, #28
 800b51e:	d507      	bpl.n	800b530 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b520:	4a14      	ldr	r2, [pc, #80]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b522:	6921      	ldr	r1, [r4, #16]
 800b524:	6893      	ldr	r3, [r2, #8]
 800b526:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b52a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b52e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b530:	f7ff ff56 	bl	800b3e0 <HAL_RCC_GetSysClockFreq>
 800b534:	4a0f      	ldr	r2, [pc, #60]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b536:	4c10      	ldr	r4, [pc, #64]	; (800b578 <HAL_RCC_ClockConfig+0x130>)
 800b538:	6892      	ldr	r2, [r2, #8]
 800b53a:	4910      	ldr	r1, [pc, #64]	; (800b57c <HAL_RCC_ClockConfig+0x134>)
 800b53c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b540:	4603      	mov	r3, r0
 800b542:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b544:	480e      	ldr	r0, [pc, #56]	; (800b580 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b546:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b548:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b54a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b54c:	f7f6 fd98 	bl	8002080 <HAL_InitTick>
  return HAL_OK;
 800b550:	2000      	movs	r0, #0
}
 800b552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b556:	0198      	lsls	r0, r3, #6
 800b558:	d4b1      	bmi.n	800b4be <HAL_RCC_ClockConfig+0x76>
 800b55a:	e789      	b.n	800b470 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b55c:	2001      	movs	r0, #1
}
 800b55e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b560:	4b04      	ldr	r3, [pc, #16]	; (800b574 <HAL_RCC_ClockConfig+0x12c>)
 800b562:	681b      	ldr	r3, [r3, #0]
 800b564:	039e      	lsls	r6, r3, #14
 800b566:	d4aa      	bmi.n	800b4be <HAL_RCC_ClockConfig+0x76>
 800b568:	e782      	b.n	800b470 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b56a:	2003      	movs	r0, #3
 800b56c:	e781      	b.n	800b472 <HAL_RCC_ClockConfig+0x2a>
 800b56e:	bf00      	nop
 800b570:	40023c00 	.word	0x40023c00
 800b574:	40023800 	.word	0x40023800
 800b578:	0802c59c 	.word	0x0802c59c
 800b57c:	20000078 	.word	0x20000078
 800b580:	20000080 	.word	0x20000080

0800b584 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b584:	4b04      	ldr	r3, [pc, #16]	; (800b598 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b586:	4905      	ldr	r1, [pc, #20]	; (800b59c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b588:	689b      	ldr	r3, [r3, #8]
 800b58a:	4a05      	ldr	r2, [pc, #20]	; (800b5a0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b58c:	6808      	ldr	r0, [r1, #0]
 800b58e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b592:	5cd3      	ldrb	r3, [r2, r3]
}
 800b594:	40d8      	lsrs	r0, r3
 800b596:	4770      	bx	lr
 800b598:	40023800 	.word	0x40023800
 800b59c:	20000078 	.word	0x20000078
 800b5a0:	0802c5ac 	.word	0x0802c5ac

0800b5a4 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b5a4:	4b0e      	ldr	r3, [pc, #56]	; (800b5e0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b5a6:	220f      	movs	r2, #15
 800b5a8:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b5aa:	689a      	ldr	r2, [r3, #8]
 800b5ac:	f002 0203 	and.w	r2, r2, #3
 800b5b0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b5b2:	689a      	ldr	r2, [r3, #8]
 800b5b4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b5b8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b5ba:	689a      	ldr	r2, [r3, #8]
 800b5bc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b5c0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5c2:	689b      	ldr	r3, [r3, #8]
 800b5c4:	08db      	lsrs	r3, r3, #3
{
 800b5c6:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5c8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5cc:	4c05      	ldr	r4, [pc, #20]	; (800b5e4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b5ce:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5d0:	6823      	ldr	r3, [r4, #0]
}
 800b5d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b5d6:	f003 030f 	and.w	r3, r3, #15
 800b5da:	600b      	str	r3, [r1, #0]
}
 800b5dc:	4770      	bx	lr
 800b5de:	bf00      	nop
 800b5e0:	40023800 	.word	0x40023800
 800b5e4:	40023c00 	.word	0x40023c00

0800b5e8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b5e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b5ea:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b5ec:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b5f0:	b083      	sub	sp, #12
 800b5f2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b5f4:	d111      	bne.n	800b61a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b5f6:	f013 0f0c 	tst.w	r3, #12
 800b5fa:	d16f      	bne.n	800b6dc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b5fc:	0698      	lsls	r0, r3, #26
 800b5fe:	f100 80c2 	bmi.w	800b786 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b602:	f013 0310 	ands.w	r3, r3, #16
 800b606:	f000 80bb 	beq.w	800b780 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b60a:	4b89      	ldr	r3, [pc, #548]	; (800b830 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b60c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b610:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b614:	2000      	movs	r0, #0
}
 800b616:	b003      	add	sp, #12
 800b618:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b61a:	4b86      	ldr	r3, [pc, #536]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b61c:	4e86      	ldr	r6, [pc, #536]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b61e:	2200      	movs	r2, #0
 800b620:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b622:	f7fd fbbb 	bl	8008d9c <HAL_GetTick>
 800b626:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b628:	e004      	b.n	800b634 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b62a:	f7fd fbb7 	bl	8008d9c <HAL_GetTick>
 800b62e:	1b43      	subs	r3, r0, r5
 800b630:	2b02      	cmp	r3, #2
 800b632:	d850      	bhi.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b634:	6833      	ldr	r3, [r6, #0]
 800b636:	0118      	lsls	r0, r3, #4
 800b638:	d4f7      	bmi.n	800b62a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b63a:	6823      	ldr	r3, [r4, #0]
 800b63c:	07d9      	lsls	r1, r3, #31
 800b63e:	d506      	bpl.n	800b64e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b640:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b644:	0712      	lsls	r2, r2, #28
 800b646:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b64a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b64e:	079a      	lsls	r2, r3, #30
 800b650:	d515      	bpl.n	800b67e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b652:	4979      	ldr	r1, [pc, #484]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b654:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b656:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b65a:	6865      	ldr	r5, [r4, #4]
 800b65c:	0612      	lsls	r2, r2, #24
 800b65e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b662:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b666:	4302      	orrs	r2, r0
 800b668:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b66c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b670:	69e2      	ldr	r2, [r4, #28]
 800b672:	f020 001f 	bic.w	r0, r0, #31
 800b676:	3a01      	subs	r2, #1
 800b678:	4302      	orrs	r2, r0
 800b67a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b67e:	065b      	lsls	r3, r3, #25
 800b680:	d509      	bpl.n	800b696 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b682:	1d20      	adds	r0, r4, #4
 800b684:	c80b      	ldmia	r0, {r0, r1, r3}
 800b686:	061b      	lsls	r3, r3, #24
 800b688:	4a6b      	ldr	r2, [pc, #428]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b68a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b68e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b692:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b696:	4b67      	ldr	r3, [pc, #412]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b698:	4e67      	ldr	r6, [pc, #412]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b69a:	2201      	movs	r2, #1
 800b69c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b69e:	f7fd fb7d 	bl	8008d9c <HAL_GetTick>
 800b6a2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b6a4:	e004      	b.n	800b6b0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b6a6:	f7fd fb79 	bl	8008d9c <HAL_GetTick>
 800b6aa:	1b40      	subs	r0, r0, r5
 800b6ac:	2802      	cmp	r0, #2
 800b6ae:	d812      	bhi.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b6b0:	6833      	ldr	r3, [r6, #0]
 800b6b2:	011f      	lsls	r7, r3, #4
 800b6b4:	d5f7      	bpl.n	800b6a6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b6b6:	6823      	ldr	r3, [r4, #0]
 800b6b8:	e79d      	b.n	800b5f6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b6ba:	f7fd fb6f 	bl	8008d9c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b6be:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b6c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b6c4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b6c6:	079b      	lsls	r3, r3, #30
 800b6c8:	f100 80a5 	bmi.w	800b816 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b6cc:	f7fd fb66 	bl	8008d9c <HAL_GetTick>
 800b6d0:	1b80      	subs	r0, r0, r6
 800b6d2:	42b8      	cmp	r0, r7
 800b6d4:	d9f6      	bls.n	800b6c4 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b6d6:	2003      	movs	r0, #3
}
 800b6d8:	b003      	add	sp, #12
 800b6da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b6dc:	4b55      	ldr	r3, [pc, #340]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6de:	4e56      	ldr	r6, [pc, #344]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b6e0:	2200      	movs	r2, #0
 800b6e2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b6e4:	f7fd fb5a 	bl	8008d9c <HAL_GetTick>
 800b6e8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6ea:	e004      	b.n	800b6f6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b6ec:	f7fd fb56 	bl	8008d9c <HAL_GetTick>
 800b6f0:	1b43      	subs	r3, r0, r5
 800b6f2:	2b02      	cmp	r3, #2
 800b6f4:	d8ef      	bhi.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b6f6:	6833      	ldr	r3, [r6, #0]
 800b6f8:	0098      	lsls	r0, r3, #2
 800b6fa:	d4f7      	bmi.n	800b6ec <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b6fc:	6822      	ldr	r2, [r4, #0]
 800b6fe:	0751      	lsls	r1, r2, #29
 800b700:	d515      	bpl.n	800b72e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b702:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b704:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b708:	6920      	ldr	r0, [r4, #16]
 800b70a:	061b      	lsls	r3, r3, #24
 800b70c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b710:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b714:	430b      	orrs	r3, r1
 800b716:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b71a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b71e:	6a21      	ldr	r1, [r4, #32]
 800b720:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b724:	3901      	subs	r1, #1
 800b726:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b72a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b72e:	0713      	lsls	r3, r2, #28
 800b730:	d514      	bpl.n	800b75c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b732:	4a41      	ldr	r2, [pc, #260]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b734:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b736:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b73a:	6920      	ldr	r0, [r4, #16]
 800b73c:	071b      	lsls	r3, r3, #28
 800b73e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b742:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b746:	430b      	orrs	r3, r1
 800b748:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b74c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b750:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b752:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b756:	430b      	orrs	r3, r1
 800b758:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b75c:	4b35      	ldr	r3, [pc, #212]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b75e:	4e36      	ldr	r6, [pc, #216]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b760:	2201      	movs	r2, #1
 800b762:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b764:	f7fd fb1a 	bl	8008d9c <HAL_GetTick>
 800b768:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b76a:	e004      	b.n	800b776 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b76c:	f7fd fb16 	bl	8008d9c <HAL_GetTick>
 800b770:	1b40      	subs	r0, r0, r5
 800b772:	2802      	cmp	r0, #2
 800b774:	d8af      	bhi.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b776:	6833      	ldr	r3, [r6, #0]
 800b778:	009f      	lsls	r7, r3, #2
 800b77a:	d5f7      	bpl.n	800b76c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b77c:	6823      	ldr	r3, [r4, #0]
 800b77e:	e73d      	b.n	800b5fc <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b780:	4618      	mov	r0, r3
}
 800b782:	b003      	add	sp, #12
 800b784:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b786:	4b2c      	ldr	r3, [pc, #176]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b788:	4d2c      	ldr	r5, [pc, #176]	; (800b83c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b78a:	2200      	movs	r2, #0
 800b78c:	9201      	str	r2, [sp, #4]
 800b78e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b790:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b794:	641a      	str	r2, [r3, #64]	; 0x40
 800b796:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b798:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b79c:	9301      	str	r3, [sp, #4]
 800b79e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b7a0:	682b      	ldr	r3, [r5, #0]
 800b7a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b7a6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b7a8:	f7fd faf8 	bl	8008d9c <HAL_GetTick>
 800b7ac:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b7ae:	e004      	b.n	800b7ba <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b7b0:	f7fd faf4 	bl	8008d9c <HAL_GetTick>
 800b7b4:	1b83      	subs	r3, r0, r6
 800b7b6:	2b02      	cmp	r3, #2
 800b7b8:	d88d      	bhi.n	800b6d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b7ba:	682b      	ldr	r3, [r5, #0]
 800b7bc:	05d9      	lsls	r1, r3, #23
 800b7be:	d5f7      	bpl.n	800b7b0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b7c0:	4d1d      	ldr	r5, [pc, #116]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b7c4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7c6:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b7ca:	d111      	bne.n	800b7f0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b7cc:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b7d0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b7d4:	d021      	beq.n	800b81a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b7d6:	4918      	ldr	r1, [pc, #96]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b7d8:	688a      	ldr	r2, [r1, #8]
 800b7da:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b7de:	608a      	str	r2, [r1, #8]
 800b7e0:	4a15      	ldr	r2, [pc, #84]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b7e2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b7e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b7e8:	430b      	orrs	r3, r1
 800b7ea:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b7ec:	6823      	ldr	r3, [r4, #0]
 800b7ee:	e708      	b.n	800b602 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b7f0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b7f4:	4291      	cmp	r1, r2
 800b7f6:	d0eb      	beq.n	800b7d0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b7f8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b7fa:	4a0e      	ldr	r2, [pc, #56]	; (800b834 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b7fc:	2101      	movs	r1, #1
 800b7fe:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b802:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b806:	2100      	movs	r1, #0
 800b808:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b80c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b80e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b810:	07da      	lsls	r2, r3, #31
 800b812:	f53f af52 	bmi.w	800b6ba <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b816:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b818:	e7d8      	b.n	800b7cc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b81a:	4807      	ldr	r0, [pc, #28]	; (800b838 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b81c:	6882      	ldr	r2, [r0, #8]
 800b81e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b822:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b826:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b82a:	430a      	orrs	r2, r1
 800b82c:	6082      	str	r2, [r0, #8]
 800b82e:	e7d7      	b.n	800b7e0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b830:	42471000 	.word	0x42471000
 800b834:	42470000 	.word	0x42470000
 800b838:	40023800 	.word	0x40023800
 800b83c:	40007000 	.word	0x40007000

0800b840 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b840:	b1f0      	cbz	r0, 800b880 <HAL_SDRAM_Init+0x40>
{
 800b842:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b844:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b848:	460d      	mov	r5, r1
 800b84a:	4604      	mov	r4, r0
 800b84c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b850:	b18b      	cbz	r3, 800b876 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b852:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b854:	2302      	movs	r3, #2
 800b856:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b85a:	f851 0b04 	ldr.w	r0, [r1], #4
 800b85e:	f000 ffcd 	bl	800c7fc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b862:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b866:	4629      	mov	r1, r5
 800b868:	f001 f806 	bl	800c878 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b86c:	2301      	movs	r3, #1
 800b86e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b872:	2000      	movs	r0, #0
}
 800b874:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b876:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b87a:	f7f6 fb99 	bl	8001fb0 <HAL_SDRAM_MspInit>
 800b87e:	e7e8      	b.n	800b852 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b880:	2001      	movs	r0, #1
}
 800b882:	4770      	bx	lr

0800b884 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b884:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b886:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b88a:	2b02      	cmp	r3, #2
{
 800b88c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b88e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b890:	d004      	beq.n	800b89c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b892:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b896:	2c01      	cmp	r4, #1
 800b898:	d001      	beq.n	800b89e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b89a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b89c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b89e:	460e      	mov	r6, r1
 800b8a0:	2302      	movs	r3, #2
 800b8a2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b8a6:	6828      	ldr	r0, [r5, #0]
 800b8a8:	f001 f832 	bl	800c910 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b8ac:	6833      	ldr	r3, [r6, #0]
 800b8ae:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b8b0:	bf06      	itte	eq
 800b8b2:	2305      	moveq	r3, #5
 800b8b4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b8b8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b8bc:	2000      	movs	r0, #0
}
 800b8be:	bd70      	pop	{r4, r5, r6, pc}

0800b8c0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b8c0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b8c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b8c6:	2b02      	cmp	r3, #2
{
 800b8c8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b8ca:	b2d8      	uxtb	r0, r3
 800b8cc:	d005      	beq.n	800b8da <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b8ce:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b8d2:	2b01      	cmp	r3, #1
 800b8d4:	b2dd      	uxtb	r5, r3
 800b8d6:	d001      	beq.n	800b8dc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b8d8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b8da:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8dc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b8de:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8e0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b8e4:	f001 f83e 	bl	800c964 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b8e8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b8ec:	2000      	movs	r0, #0
}
 800b8ee:	bd38      	pop	{r3, r4, r5, pc}

0800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b8f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8f4:	b082      	sub	sp, #8
 800b8f6:	461d      	mov	r5, r3
 800b8f8:	4616      	mov	r6, r2
 800b8fa:	460c      	mov	r4, r1
 800b8fc:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b8fe:	f7fd fa4d 	bl	8008d9c <HAL_GetTick>
 800b902:	4435      	add	r5, r6
 800b904:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b906:	f7fd fa49 	bl	8008d9c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b90a:	4b27      	ldr	r3, [pc, #156]	; (800b9a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b90c:	681b      	ldr	r3, [r3, #0]
 800b90e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b912:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b916:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b918:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b91a:	1c73      	adds	r3, r6, #1
 800b91c:	6839      	ldr	r1, [r7, #0]
 800b91e:	d107      	bne.n	800b930 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b920:	688b      	ldr	r3, [r1, #8]
 800b922:	ea34 0303 	bics.w	r3, r4, r3
 800b926:	d0fb      	beq.n	800b920 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b928:	2000      	movs	r0, #0
}
 800b92a:	b002      	add	sp, #8
 800b92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b930:	688b      	ldr	r3, [r1, #8]
 800b932:	ea34 0303 	bics.w	r3, r4, r3
 800b936:	d1f7      	bne.n	800b928 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b938:	f7fd fa30 	bl	8008d9c <HAL_GetTick>
 800b93c:	eba0 0008 	sub.w	r0, r0, r8
 800b940:	42a8      	cmp	r0, r5
 800b942:	d208      	bcs.n	800b956 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b944:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b946:	2b00      	cmp	r3, #0
      count--;
 800b948:	9b01      	ldr	r3, [sp, #4]
 800b94a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b94e:	bf08      	it	eq
 800b950:	2500      	moveq	r5, #0
      count--;
 800b952:	9301      	str	r3, [sp, #4]
 800b954:	e7e1      	b.n	800b91a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b956:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b95a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b95c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b960:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b964:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b966:	d013      	beq.n	800b990 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b968:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b96a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b96e:	d107      	bne.n	800b980 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800b970:	681a      	ldr	r2, [r3, #0]
 800b972:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b976:	601a      	str	r2, [r3, #0]
 800b978:	681a      	ldr	r2, [r3, #0]
 800b97a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b97e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800b980:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800b982:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800b984:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800b988:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800b98c:	2003      	movs	r0, #3
 800b98e:	e7cc      	b.n	800b92a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b990:	68ba      	ldr	r2, [r7, #8]
 800b992:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b996:	d002      	beq.n	800b99e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b998:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b99c:	d1e4      	bne.n	800b968 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800b99e:	681a      	ldr	r2, [r3, #0]
 800b9a0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b9a4:	601a      	str	r2, [r3, #0]
 800b9a6:	e7df      	b.n	800b968 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800b9a8:	20000078 	.word	0x20000078

0800b9ac <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800b9ac:	b538      	push	{r3, r4, r5, lr}
 800b9ae:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9b0:	6842      	ldr	r2, [r0, #4]
 800b9b2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800b9b6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9b8:	d006      	beq.n	800b9c8 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9ba:	460a      	mov	r2, r1
 800b9bc:	2101      	movs	r1, #1
 800b9be:	f7ff ff97 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b9c2:	b978      	cbnz	r0, 800b9e4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800b9c4:	2000      	movs	r0, #0
}
 800b9c6:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9c8:	6882      	ldr	r2, [r0, #8]
 800b9ca:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b9ce:	d01c      	beq.n	800ba0a <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b9d0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b9d4:	d00c      	beq.n	800b9f0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b9d6:	460a      	mov	r2, r1
 800b9d8:	4620      	mov	r0, r4
 800b9da:	2180      	movs	r1, #128	; 0x80
 800b9dc:	f7ff ff88 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b9e0:	2800      	cmp	r0, #0
 800b9e2:	d0ef      	beq.n	800b9c4 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b9e4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b9e6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800b9ea:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b9ec:	6563      	str	r3, [r4, #84]	; 0x54
}
 800b9ee:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800b9f0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9f2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800b9f4:	6829      	ldr	r1, [r5, #0]
 800b9f6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b9fa:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b9fc:	2101      	movs	r1, #1
 800b9fe:	f7ff ff77 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba02:	2800      	cmp	r0, #0
 800ba04:	d1ee      	bne.n	800b9e4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800ba06:	2000      	movs	r0, #0
 800ba08:	e7dd      	b.n	800b9c6 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800ba0a:	6800      	ldr	r0, [r0, #0]
 800ba0c:	6802      	ldr	r2, [r0, #0]
 800ba0e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ba12:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ba14:	460a      	mov	r2, r1
 800ba16:	4620      	mov	r0, r4
 800ba18:	2180      	movs	r1, #128	; 0x80
 800ba1a:	f7ff ff69 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba1e:	2800      	cmp	r0, #0
 800ba20:	d0d0      	beq.n	800b9c4 <SPI_EndRxTransaction+0x18>
 800ba22:	e7df      	b.n	800b9e4 <SPI_EndRxTransaction+0x38>

0800ba24 <HAL_SPI_Init>:
  if (hspi == NULL)
 800ba24:	2800      	cmp	r0, #0
 800ba26:	d05c      	beq.n	800bae2 <HAL_SPI_Init+0xbe>
{
 800ba28:	b570      	push	{r4, r5, r6, lr}
 800ba2a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ba2c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ba2e:	2800      	cmp	r0, #0
 800ba30:	d047      	beq.n	800bac2 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800ba32:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800ba34:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ba38:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ba3c:	2200      	movs	r2, #0
 800ba3e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ba40:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800ba44:	2b00      	cmp	r3, #0
 800ba46:	d042      	beq.n	800bace <HAL_SPI_Init+0xaa>
 800ba48:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800ba4a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba4c:	68a5      	ldr	r5, [r4, #8]
 800ba4e:	69a2      	ldr	r2, [r4, #24]
 800ba50:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ba52:	2302      	movs	r3, #2
 800ba54:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ba58:	680b      	ldr	r3, [r1, #0]
 800ba5a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ba5e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba60:	6863      	ldr	r3, [r4, #4]
 800ba62:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800ba66:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800ba6a:	432b      	orrs	r3, r5
 800ba6c:	68e5      	ldr	r5, [r4, #12]
 800ba6e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800ba72:	432b      	orrs	r3, r5
 800ba74:	6925      	ldr	r5, [r4, #16]
 800ba76:	f005 0502 	and.w	r5, r5, #2
 800ba7a:	432b      	orrs	r3, r5
 800ba7c:	6965      	ldr	r5, [r4, #20]
 800ba7e:	f005 0501 	and.w	r5, r5, #1
 800ba82:	432b      	orrs	r3, r5
 800ba84:	69e5      	ldr	r5, [r4, #28]
 800ba86:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800ba8a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800ba8e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800ba92:	4333      	orrs	r3, r6
 800ba94:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ba96:	0c12      	lsrs	r2, r2, #16
 800ba98:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ba9c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800baa0:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baa4:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800baa8:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baaa:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800baac:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800baae:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bab0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bab2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bab6:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bab8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800baba:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800babc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bac0:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bac2:	6863      	ldr	r3, [r4, #4]
 800bac4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bac8:	d0b6      	beq.n	800ba38 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800baca:	61e0      	str	r0, [r4, #28]
 800bacc:	e7b4      	b.n	800ba38 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bace:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bad0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bad4:	f7f6 fa04 	bl	8001ee0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bad8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800badc:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bae0:	e7b3      	b.n	800ba4a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bae2:	2001      	movs	r0, #1
}
 800bae4:	4770      	bx	lr
 800bae6:	bf00      	nop

0800bae8 <HAL_SPI_Transmit>:
{
 800bae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baec:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800baee:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800baf2:	2801      	cmp	r0, #1
{
 800baf4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800baf6:	f000 8085 	beq.w	800bc04 <HAL_SPI_Transmit+0x11c>
 800bafa:	461d      	mov	r5, r3
 800bafc:	2301      	movs	r3, #1
 800bafe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bb02:	4688      	mov	r8, r1
 800bb04:	4617      	mov	r7, r2
 800bb06:	f7fd f949 	bl	8008d9c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bb0a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bb0e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bb10:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bb12:	b2d8      	uxtb	r0, r3
 800bb14:	d009      	beq.n	800bb2a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bb16:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bb18:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bb1a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bb1c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bb20:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bb24:	b002      	add	sp, #8
 800bb26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bb2a:	f1b8 0f00 	cmp.w	r8, #0
 800bb2e:	d0f3      	beq.n	800bb18 <HAL_SPI_Transmit+0x30>
 800bb30:	2f00      	cmp	r7, #0
 800bb32:	d0f1      	beq.n	800bb18 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb34:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bb36:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bb38:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bb3c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bb3e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb40:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bb44:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bb48:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bb4c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bb4e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bb50:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bb52:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bb54:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bb56:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bb58:	f000 8085 	beq.w	800bc66 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bb5c:	6803      	ldr	r3, [r0, #0]
 800bb5e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bb60:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bb62:	d403      	bmi.n	800bb6c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bb64:	6803      	ldr	r3, [r0, #0]
 800bb66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bb6a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bb6c:	68e3      	ldr	r3, [r4, #12]
 800bb6e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bb72:	d04b      	beq.n	800bc0c <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bb74:	6863      	ldr	r3, [r4, #4]
 800bb76:	2b00      	cmp	r3, #0
 800bb78:	f000 8097 	beq.w	800bcaa <HAL_SPI_Transmit+0x1c2>
 800bb7c:	2f01      	cmp	r7, #1
 800bb7e:	f000 8094 	beq.w	800bcaa <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bb82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bb84:	b29b      	uxth	r3, r3
 800bb86:	b1ab      	cbz	r3, 800bbb4 <HAL_SPI_Transmit+0xcc>
 800bb88:	1c68      	adds	r0, r5, #1
 800bb8a:	f040 8083 	bne.w	800bc94 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bb8e:	6823      	ldr	r3, [r4, #0]
 800bb90:	689a      	ldr	r2, [r3, #8]
 800bb92:	0791      	lsls	r1, r2, #30
 800bb94:	f140 8094 	bpl.w	800bcc0 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bb98:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bb9a:	7812      	ldrb	r2, [r2, #0]
 800bb9c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bb9e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bba0:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bba2:	3901      	subs	r1, #1
 800bba4:	b289      	uxth	r1, r1
 800bba6:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bba8:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bbaa:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bbac:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bbae:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bbb0:	2900      	cmp	r1, #0
 800bbb2:	d1ec      	bne.n	800bb8e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbb4:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bbb6:	4b5b      	ldr	r3, [pc, #364]	; (800bd24 <HAL_SPI_Transmit+0x23c>)
 800bbb8:	4a5b      	ldr	r2, [pc, #364]	; (800bd28 <HAL_SPI_Transmit+0x240>)
 800bbba:	681b      	ldr	r3, [r3, #0]
 800bbbc:	fba2 2303 	umull	r2, r3, r2, r3
 800bbc0:	0d5b      	lsrs	r3, r3, #21
 800bbc2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bbc6:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbca:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bbce:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bbd0:	d107      	bne.n	800bbe2 <HAL_SPI_Transmit+0xfa>
 800bbd2:	e098      	b.n	800bd06 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bbd4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bbd6:	6822      	ldr	r2, [r4, #0]
      count--;
 800bbd8:	3b01      	subs	r3, #1
 800bbda:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bbdc:	6893      	ldr	r3, [r2, #8]
 800bbde:	061b      	lsls	r3, r3, #24
 800bbe0:	d502      	bpl.n	800bbe8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bbe2:	9b01      	ldr	r3, [sp, #4]
 800bbe4:	2b00      	cmp	r3, #0
 800bbe6:	d1f5      	bne.n	800bbd4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bbe8:	68a3      	ldr	r3, [r4, #8]
 800bbea:	b933      	cbnz	r3, 800bbfa <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bbec:	6822      	ldr	r2, [r4, #0]
 800bbee:	9300      	str	r3, [sp, #0]
 800bbf0:	68d3      	ldr	r3, [r2, #12]
 800bbf2:	9300      	str	r3, [sp, #0]
 800bbf4:	6893      	ldr	r3, [r2, #8]
 800bbf6:	9300      	str	r3, [sp, #0]
 800bbf8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bbfa:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bbfc:	3800      	subs	r0, #0
 800bbfe:	bf18      	it	ne
 800bc00:	2001      	movne	r0, #1
error:
 800bc02:	e789      	b.n	800bb18 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bc04:	2002      	movs	r0, #2
}
 800bc06:	b002      	add	sp, #8
 800bc08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc0c:	6861      	ldr	r1, [r4, #4]
 800bc0e:	2900      	cmp	r1, #0
 800bc10:	d176      	bne.n	800bd00 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bc12:	4643      	mov	r3, r8
 800bc14:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bc18:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bc1a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bc1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc1e:	3b01      	subs	r3, #1
 800bc20:	b29b      	uxth	r3, r3
 800bc22:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc26:	b29b      	uxth	r3, r3
 800bc28:	2b00      	cmp	r3, #0
 800bc2a:	d0c4      	beq.n	800bbb6 <HAL_SPI_Transmit+0xce>
 800bc2c:	1c6b      	adds	r3, r5, #1
 800bc2e:	d15e      	bne.n	800bcee <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc30:	6883      	ldr	r3, [r0, #8]
 800bc32:	079f      	lsls	r7, r3, #30
 800bc34:	d50f      	bpl.n	800bc56 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bc36:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc38:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bc3c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bc3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bc40:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc42:	3b01      	subs	r3, #1
 800bc44:	b29b      	uxth	r3, r3
 800bc46:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc4a:	b29b      	uxth	r3, r3
 800bc4c:	2b00      	cmp	r3, #0
 800bc4e:	d0b1      	beq.n	800bbb4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc50:	6883      	ldr	r3, [r0, #8]
 800bc52:	079f      	lsls	r7, r3, #30
 800bc54:	d4ef      	bmi.n	800bc36 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bc56:	f7fd f8a1 	bl	8008d9c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bc5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc5c:	b29b      	uxth	r3, r3
 800bc5e:	2b00      	cmp	r3, #0
 800bc60:	d0a8      	beq.n	800bbb4 <HAL_SPI_Transmit+0xcc>
 800bc62:	6820      	ldr	r0, [r4, #0]
 800bc64:	e7e4      	b.n	800bc30 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bc66:	6803      	ldr	r3, [r0, #0]
 800bc68:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc6c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bc6e:	6803      	ldr	r3, [r0, #0]
 800bc70:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bc74:	6003      	str	r3, [r0, #0]
 800bc76:	e771      	b.n	800bb5c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bc78:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc7a:	7812      	ldrb	r2, [r2, #0]
 800bc7c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bc7e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc80:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc82:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc84:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bc86:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc88:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc8a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc8e:	b29b      	uxth	r3, r3
 800bc90:	2b00      	cmp	r3, #0
 800bc92:	d08f      	beq.n	800bbb4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc94:	6823      	ldr	r3, [r4, #0]
 800bc96:	689a      	ldr	r2, [r3, #8]
 800bc98:	0792      	lsls	r2, r2, #30
 800bc9a:	d4ed      	bmi.n	800bc78 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bc9c:	f7fd f87e 	bl	8008d9c <HAL_GetTick>
 800bca0:	1b80      	subs	r0, r0, r6
 800bca2:	42a8      	cmp	r0, r5
 800bca4:	d3f2      	bcc.n	800bc8c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bca6:	2003      	movs	r0, #3
 800bca8:	e736      	b.n	800bb18 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bcaa:	f898 3000 	ldrb.w	r3, [r8]
 800bcae:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bcb0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcb2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcb4:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcb6:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bcb8:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bcba:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcbc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bcbe:	e760      	b.n	800bb82 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bcc0:	f7fd f86c 	bl	8008d9c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bcc4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcc6:	b29b      	uxth	r3, r3
 800bcc8:	2b00      	cmp	r3, #0
 800bcca:	f47f af60 	bne.w	800bb8e <HAL_SPI_Transmit+0xa6>
 800bcce:	e771      	b.n	800bbb4 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcd0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bcd2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bcd6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bcd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcda:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bcdc:	3b01      	subs	r3, #1
 800bcde:	b29b      	uxth	r3, r3
 800bce0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bce2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bce4:	b29b      	uxth	r3, r3
 800bce6:	2b00      	cmp	r3, #0
 800bce8:	f43f af64 	beq.w	800bbb4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bcec:	6822      	ldr	r2, [r4, #0]
 800bcee:	6893      	ldr	r3, [r2, #8]
 800bcf0:	0799      	lsls	r1, r3, #30
 800bcf2:	d4ed      	bmi.n	800bcd0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bcf4:	f7fd f852 	bl	8008d9c <HAL_GetTick>
 800bcf8:	1b80      	subs	r0, r0, r6
 800bcfa:	42a8      	cmp	r0, r5
 800bcfc:	d3f1      	bcc.n	800bce2 <HAL_SPI_Transmit+0x1fa>
 800bcfe:	e7d2      	b.n	800bca6 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bd00:	2f01      	cmp	r7, #1
 800bd02:	d18f      	bne.n	800bc24 <HAL_SPI_Transmit+0x13c>
 800bd04:	e785      	b.n	800bc12 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bd06:	4633      	mov	r3, r6
 800bd08:	462a      	mov	r2, r5
 800bd0a:	2180      	movs	r1, #128	; 0x80
 800bd0c:	4620      	mov	r0, r4
 800bd0e:	f7ff fdef 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bd12:	2800      	cmp	r0, #0
 800bd14:	f43f af68 	beq.w	800bbe8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bd18:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd1a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bd1c:	4313      	orrs	r3, r2
 800bd1e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd20:	6562      	str	r2, [r4, #84]	; 0x54
 800bd22:	e761      	b.n	800bbe8 <HAL_SPI_Transmit+0x100>
 800bd24:	20000078 	.word	0x20000078
 800bd28:	165e9f81 	.word	0x165e9f81

0800bd2c <HAL_SPI_TransmitReceive>:
{
 800bd2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd30:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bd32:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bd36:	2801      	cmp	r0, #1
{
 800bd38:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bd3a:	f000 80ac 	beq.w	800be96 <HAL_SPI_TransmitReceive+0x16a>
 800bd3e:	461e      	mov	r6, r3
 800bd40:	2301      	movs	r3, #1
 800bd42:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bd46:	4690      	mov	r8, r2
 800bd48:	460f      	mov	r7, r1
 800bd4a:	f7fd f827 	bl	8008d9c <HAL_GetTick>
 800bd4e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800bd50:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bd54:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bd56:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bd58:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bd5a:	d011      	beq.n	800bd80 <HAL_SPI_TransmitReceive+0x54>
 800bd5c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bd60:	d009      	beq.n	800bd76 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800bd62:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bd64:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bd66:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bd68:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bd6c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bd70:	b002      	add	sp, #8
 800bd72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800bd76:	68a1      	ldr	r1, [r4, #8]
 800bd78:	2900      	cmp	r1, #0
 800bd7a:	d1f2      	bne.n	800bd62 <HAL_SPI_TransmitReceive+0x36>
 800bd7c:	2a04      	cmp	r2, #4
 800bd7e:	d1f0      	bne.n	800bd62 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800bd80:	2f00      	cmp	r7, #0
 800bd82:	f000 808c 	beq.w	800be9e <HAL_SPI_TransmitReceive+0x172>
 800bd86:	f1b8 0f00 	cmp.w	r8, #0
 800bd8a:	f000 8088 	beq.w	800be9e <HAL_SPI_TransmitReceive+0x172>
 800bd8e:	2e00      	cmp	r6, #0
 800bd90:	f000 8085 	beq.w	800be9e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bd94:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800bd98:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800bd9c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800bd9e:	bf1c      	itt	ne
 800bda0:	2205      	movne	r2, #5
 800bda2:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bda6:	2200      	movs	r2, #0
 800bda8:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800bdaa:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdae:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800bdb0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800bdb2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdb4:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800bdb6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdb8:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800bdba:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800bdbc:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bdbe:	d403      	bmi.n	800bdc8 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800bdc0:	6811      	ldr	r1, [r2, #0]
 800bdc2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bdc6:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bdc8:	68e1      	ldr	r1, [r4, #12]
 800bdca:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800bdce:	f000 809e 	beq.w	800bf0e <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bdd2:	2b00      	cmp	r3, #0
 800bdd4:	f000 8091 	beq.w	800befa <HAL_SPI_TransmitReceive+0x1ce>
 800bdd8:	2e01      	cmp	r6, #1
 800bdda:	f000 808e 	beq.w	800befa <HAL_SPI_TransmitReceive+0x1ce>
 800bdde:	9b08      	ldr	r3, [sp, #32]
 800bde0:	3301      	adds	r3, #1
        txallowed = 1U;
 800bde2:	f04f 0601 	mov.w	r6, #1
 800bde6:	d028      	beq.n	800be3a <HAL_SPI_TransmitReceive+0x10e>
 800bde8:	e05b      	b.n	800bea2 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bdea:	6821      	ldr	r1, [r4, #0]
 800bdec:	688b      	ldr	r3, [r1, #8]
 800bdee:	0798      	lsls	r0, r3, #30
 800bdf0:	d50f      	bpl.n	800be12 <HAL_SPI_TransmitReceive+0xe6>
 800bdf2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bdf4:	b29b      	uxth	r3, r3
 800bdf6:	b163      	cbz	r3, 800be12 <HAL_SPI_TransmitReceive+0xe6>
 800bdf8:	b15e      	cbz	r6, 800be12 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bdfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bdfc:	781b      	ldrb	r3, [r3, #0]
 800bdfe:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800be00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800be02:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800be04:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800be06:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800be08:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800be0a:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800be0c:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800be0e:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800be10:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800be12:	688a      	ldr	r2, [r1, #8]
 800be14:	f012 0201 	ands.w	r2, r2, #1
 800be18:	d00d      	beq.n	800be36 <HAL_SPI_TransmitReceive+0x10a>
 800be1a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800be1c:	b29b      	uxth	r3, r3
 800be1e:	b153      	cbz	r3, 800be36 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800be20:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800be22:	68c9      	ldr	r1, [r1, #12]
 800be24:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800be26:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800be28:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be2a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800be2c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800be2e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800be30:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800be32:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800be34:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800be36:	f7fc ffb1 	bl	8008d9c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800be3a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800be3c:	b292      	uxth	r2, r2
 800be3e:	2a00      	cmp	r2, #0
 800be40:	d1d3      	bne.n	800bdea <HAL_SPI_TransmitReceive+0xbe>
 800be42:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800be44:	b29b      	uxth	r3, r3
 800be46:	2b00      	cmp	r3, #0
 800be48:	d1cf      	bne.n	800bdea <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be4a:	4b79      	ldr	r3, [pc, #484]	; (800c030 <HAL_SPI_TransmitReceive+0x304>)
 800be4c:	4a79      	ldr	r2, [pc, #484]	; (800c034 <HAL_SPI_TransmitReceive+0x308>)
 800be4e:	681b      	ldr	r3, [r3, #0]
 800be50:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be54:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be56:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800be5a:	0d5b      	lsrs	r3, r3, #21
 800be5c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be60:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800be64:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800be66:	d107      	bne.n	800be78 <HAL_SPI_TransmitReceive+0x14c>
 800be68:	e0d2      	b.n	800c010 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800be6a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800be6c:	6822      	ldr	r2, [r4, #0]
      count--;
 800be6e:	3b01      	subs	r3, #1
 800be70:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800be72:	6893      	ldr	r3, [r2, #8]
 800be74:	061b      	lsls	r3, r3, #24
 800be76:	d502      	bpl.n	800be7e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800be78:	9b01      	ldr	r3, [sp, #4]
 800be7a:	2b00      	cmp	r3, #0
 800be7c:	d1f5      	bne.n	800be6a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800be7e:	68a0      	ldr	r0, [r4, #8]
 800be80:	2800      	cmp	r0, #0
 800be82:	f040 8082 	bne.w	800bf8a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800be86:	6823      	ldr	r3, [r4, #0]
 800be88:	9000      	str	r0, [sp, #0]
 800be8a:	68da      	ldr	r2, [r3, #12]
 800be8c:	9200      	str	r2, [sp, #0]
 800be8e:	689b      	ldr	r3, [r3, #8]
 800be90:	9300      	str	r3, [sp, #0]
 800be92:	9b00      	ldr	r3, [sp, #0]
 800be94:	e766      	b.n	800bd64 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800be96:	2002      	movs	r0, #2
}
 800be98:	b002      	add	sp, #8
 800be9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800be9e:	2001      	movs	r0, #1
 800bea0:	e760      	b.n	800bd64 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bea2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bea4:	b29b      	uxth	r3, r3
 800bea6:	b91b      	cbnz	r3, 800beb0 <HAL_SPI_TransmitReceive+0x184>
 800bea8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800beaa:	b29b      	uxth	r3, r3
 800beac:	2b00      	cmp	r3, #0
 800beae:	d0cc      	beq.n	800be4a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800beb0:	6822      	ldr	r2, [r4, #0]
 800beb2:	6893      	ldr	r3, [r2, #8]
 800beb4:	0799      	lsls	r1, r3, #30
 800beb6:	d50f      	bpl.n	800bed8 <HAL_SPI_TransmitReceive+0x1ac>
 800beb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800beba:	b29b      	uxth	r3, r3
 800bebc:	b163      	cbz	r3, 800bed8 <HAL_SPI_TransmitReceive+0x1ac>
 800bebe:	b15e      	cbz	r6, 800bed8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bec0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bec2:	781b      	ldrb	r3, [r3, #0]
 800bec4:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bec6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bec8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800beca:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800becc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bece:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bed0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bed2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bed4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bed6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bed8:	6893      	ldr	r3, [r2, #8]
 800beda:	f013 0301 	ands.w	r3, r3, #1
 800bede:	d004      	beq.n	800beea <HAL_SPI_TransmitReceive+0x1be>
 800bee0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bee2:	b289      	uxth	r1, r1
 800bee4:	2900      	cmp	r1, #0
 800bee6:	f040 8087 	bne.w	800bff8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800beea:	f7fc ff57 	bl	8008d9c <HAL_GetTick>
 800beee:	9b08      	ldr	r3, [sp, #32]
 800bef0:	1b40      	subs	r0, r0, r5
 800bef2:	4298      	cmp	r0, r3
 800bef4:	d3d5      	bcc.n	800bea2 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bef6:	2003      	movs	r0, #3
 800bef8:	e734      	b.n	800bd64 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800befa:	783b      	ldrb	r3, [r7, #0]
 800befc:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800befe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf00:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf02:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf04:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bf06:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf08:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf0a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bf0c:	e767      	b.n	800bdde <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	d13d      	bne.n	800bf8e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bf12:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bf16:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bf18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bf1a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bf1c:	3b01      	subs	r3, #1
 800bf1e:	b29b      	uxth	r3, r3
 800bf20:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bf22:	9b08      	ldr	r3, [sp, #32]
 800bf24:	3301      	adds	r3, #1
{
 800bf26:	f04f 0601 	mov.w	r6, #1
 800bf2a:	d025      	beq.n	800bf78 <HAL_SPI_TransmitReceive+0x24c>
 800bf2c:	e032      	b.n	800bf94 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf2e:	6823      	ldr	r3, [r4, #0]
 800bf30:	689a      	ldr	r2, [r3, #8]
 800bf32:	0792      	lsls	r2, r2, #30
 800bf34:	d50d      	bpl.n	800bf52 <HAL_SPI_TransmitReceive+0x226>
 800bf36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bf38:	b292      	uxth	r2, r2
 800bf3a:	b152      	cbz	r2, 800bf52 <HAL_SPI_TransmitReceive+0x226>
 800bf3c:	b14e      	cbz	r6, 800bf52 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bf3e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bf40:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bf44:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bf46:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bf48:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf4a:	3a01      	subs	r2, #1
 800bf4c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bf4e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bf50:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf52:	689a      	ldr	r2, [r3, #8]
 800bf54:	f012 0201 	ands.w	r2, r2, #1
 800bf58:	d00c      	beq.n	800bf74 <HAL_SPI_TransmitReceive+0x248>
 800bf5a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bf5c:	b289      	uxth	r1, r1
 800bf5e:	b149      	cbz	r1, 800bf74 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bf60:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bf62:	68db      	ldr	r3, [r3, #12]
 800bf64:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800bf68:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bf6a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bf6c:	3b01      	subs	r3, #1
 800bf6e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800bf70:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800bf72:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bf74:	f7fc ff12 	bl	8008d9c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf7a:	b29b      	uxth	r3, r3
 800bf7c:	2b00      	cmp	r3, #0
 800bf7e:	d1d6      	bne.n	800bf2e <HAL_SPI_TransmitReceive+0x202>
 800bf80:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf82:	b29b      	uxth	r3, r3
 800bf84:	2b00      	cmp	r3, #0
 800bf86:	d1d2      	bne.n	800bf2e <HAL_SPI_TransmitReceive+0x202>
 800bf88:	e75f      	b.n	800be4a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800bf8a:	2000      	movs	r0, #0
 800bf8c:	e6ea      	b.n	800bd64 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf8e:	2e01      	cmp	r6, #1
 800bf90:	d1c7      	bne.n	800bf22 <HAL_SPI_TransmitReceive+0x1f6>
 800bf92:	e7be      	b.n	800bf12 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf96:	b29b      	uxth	r3, r3
 800bf98:	b923      	cbnz	r3, 800bfa4 <HAL_SPI_TransmitReceive+0x278>
 800bf9a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf9c:	b29b      	uxth	r3, r3
 800bf9e:	2b00      	cmp	r3, #0
 800bfa0:	f43f af53 	beq.w	800be4a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bfa4:	6822      	ldr	r2, [r4, #0]
 800bfa6:	6893      	ldr	r3, [r2, #8]
 800bfa8:	079f      	lsls	r7, r3, #30
 800bfaa:	d50d      	bpl.n	800bfc8 <HAL_SPI_TransmitReceive+0x29c>
 800bfac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bfae:	b29b      	uxth	r3, r3
 800bfb0:	b153      	cbz	r3, 800bfc8 <HAL_SPI_TransmitReceive+0x29c>
 800bfb2:	b14e      	cbz	r6, 800bfc8 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfb4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bfb6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bfba:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bfbc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfbe:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bfc0:	3b01      	subs	r3, #1
 800bfc2:	b29b      	uxth	r3, r3
 800bfc4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bfc6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bfc8:	6893      	ldr	r3, [r2, #8]
 800bfca:	f013 0301 	ands.w	r3, r3, #1
 800bfce:	d00c      	beq.n	800bfea <HAL_SPI_TransmitReceive+0x2be>
 800bfd0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bfd2:	b289      	uxth	r1, r1
 800bfd4:	b149      	cbz	r1, 800bfea <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bfd6:	68d1      	ldr	r1, [r2, #12]
 800bfd8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bfda:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800bfde:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800bfe0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bfe2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bfe4:	3b01      	subs	r3, #1
 800bfe6:	b29b      	uxth	r3, r3
 800bfe8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bfea:	f7fc fed7 	bl	8008d9c <HAL_GetTick>
 800bfee:	9b08      	ldr	r3, [sp, #32]
 800bff0:	1b40      	subs	r0, r0, r5
 800bff2:	4298      	cmp	r0, r3
 800bff4:	d3ce      	bcc.n	800bf94 <HAL_SPI_TransmitReceive+0x268>
 800bff6:	e77e      	b.n	800bef6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bff8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bffa:	68d2      	ldr	r2, [r2, #12]
 800bffc:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800bffe:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c000:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c002:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c004:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c006:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c008:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c00a:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c00c:	461e      	mov	r6, r3
 800c00e:	e76c      	b.n	800beea <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c010:	9a08      	ldr	r2, [sp, #32]
 800c012:	462b      	mov	r3, r5
 800c014:	2180      	movs	r1, #128	; 0x80
 800c016:	4620      	mov	r0, r4
 800c018:	f7ff fc6a 	bl	800b8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c01c:	2800      	cmp	r0, #0
 800c01e:	f43f af2e 	beq.w	800be7e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c022:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c024:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c026:	4313      	orrs	r3, r2
 800c028:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c02a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c02c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c02e:	e699      	b.n	800bd64 <HAL_SPI_TransmitReceive+0x38>
 800c030:	20000078 	.word	0x20000078
 800c034:	165e9f81 	.word	0x165e9f81

0800c038 <HAL_SPI_Receive>:
{
 800c038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c03c:	6846      	ldr	r6, [r0, #4]
 800c03e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c042:	b082      	sub	sp, #8
 800c044:	4604      	mov	r4, r0
 800c046:	4690      	mov	r8, r2
 800c048:	461d      	mov	r5, r3
 800c04a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c04c:	d06e      	beq.n	800c12c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c04e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c052:	2b01      	cmp	r3, #1
 800c054:	d076      	beq.n	800c144 <HAL_SPI_Receive+0x10c>
 800c056:	2301      	movs	r3, #1
 800c058:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c05c:	f7fc fe9e 	bl	8008d9c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c060:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c064:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c068:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c06a:	fa5f f08c 	uxtb.w	r0, ip
 800c06e:	d009      	beq.n	800c084 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c070:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c072:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c074:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c076:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c07a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c07e:	b002      	add	sp, #8
 800c080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c084:	2f00      	cmp	r7, #0
 800c086:	d0f4      	beq.n	800c072 <HAL_SPI_Receive+0x3a>
 800c088:	f1b8 0f00 	cmp.w	r8, #0
 800c08c:	d0f1      	beq.n	800c072 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c08e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c090:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c092:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c096:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c098:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c09c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c0a0:	f04f 0104 	mov.w	r1, #4
 800c0a4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c0a8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c0ac:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c0ae:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c0b0:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c0b2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c0b6:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c0b8:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c0ba:	d107      	bne.n	800c0cc <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c0bc:	6811      	ldr	r1, [r2, #0]
 800c0be:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c0c2:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c0c4:	6811      	ldr	r1, [r2, #0]
 800c0c6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c0ca:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c0cc:	6811      	ldr	r1, [r2, #0]
 800c0ce:	0648      	lsls	r0, r1, #25
 800c0d0:	d403      	bmi.n	800c0da <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c0d2:	6811      	ldr	r1, [r2, #0]
 800c0d4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c0d8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c0da:	68e1      	ldr	r1, [r4, #12]
 800c0dc:	2900      	cmp	r1, #0
 800c0de:	d054      	beq.n	800c18a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c0e0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c0e2:	b289      	uxth	r1, r1
 800c0e4:	b1a9      	cbz	r1, 800c112 <HAL_SPI_Receive+0xda>
 800c0e6:	1c69      	adds	r1, r5, #1
 800c0e8:	d13e      	bne.n	800c168 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c0ea:	6893      	ldr	r3, [r2, #8]
 800c0ec:	07db      	lsls	r3, r3, #31
 800c0ee:	d544      	bpl.n	800c17a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c0f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c0f2:	68d1      	ldr	r1, [r2, #12]
 800c0f4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c0f8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c0fc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0fe:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c102:	fa1f fc8c 	uxth.w	ip, ip
 800c106:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c10a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c10c:	b29b      	uxth	r3, r3
 800c10e:	2b00      	cmp	r3, #0
 800c110:	d1eb      	bne.n	800c0ea <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c112:	4632      	mov	r2, r6
 800c114:	4629      	mov	r1, r5
 800c116:	4620      	mov	r0, r4
 800c118:	f7ff fc48 	bl	800b9ac <SPI_EndRxTransaction>
 800c11c:	b108      	cbz	r0, 800c122 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c11e:	2320      	movs	r3, #32
 800c120:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c122:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c124:	3800      	subs	r0, #0
 800c126:	bf18      	it	ne
 800c128:	2001      	movne	r0, #1
error :
 800c12a:	e7a2      	b.n	800c072 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c12c:	6883      	ldr	r3, [r0, #8]
 800c12e:	2b00      	cmp	r3, #0
 800c130:	d18d      	bne.n	800c04e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c132:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c134:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c136:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c138:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c13c:	460a      	mov	r2, r1
 800c13e:	f7ff fdf5 	bl	800bd2c <HAL_SPI_TransmitReceive>
 800c142:	e79c      	b.n	800c07e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c144:	2002      	movs	r0, #2
}
 800c146:	b002      	add	sp, #8
 800c148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c14c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c14e:	68db      	ldr	r3, [r3, #12]
 800c150:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c154:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c156:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c158:	3b01      	subs	r3, #1
 800c15a:	b29b      	uxth	r3, r3
 800c15c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c15e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c160:	b29b      	uxth	r3, r3
 800c162:	2b00      	cmp	r3, #0
 800c164:	d0d5      	beq.n	800c112 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c166:	6823      	ldr	r3, [r4, #0]
 800c168:	689a      	ldr	r2, [r3, #8]
 800c16a:	07d2      	lsls	r2, r2, #31
 800c16c:	d4ee      	bmi.n	800c14c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c16e:	f7fc fe15 	bl	8008d9c <HAL_GetTick>
 800c172:	1b80      	subs	r0, r0, r6
 800c174:	42a8      	cmp	r0, r5
 800c176:	d243      	bcs.n	800c200 <HAL_SPI_Receive+0x1c8>
 800c178:	e7f1      	b.n	800c15e <HAL_SPI_Receive+0x126>
 800c17a:	f7fc fe0f 	bl	8008d9c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c17e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c180:	b29b      	uxth	r3, r3
 800c182:	2b00      	cmp	r3, #0
 800c184:	d0c5      	beq.n	800c112 <HAL_SPI_Receive+0xda>
 800c186:	6822      	ldr	r2, [r4, #0]
 800c188:	e7af      	b.n	800c0ea <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c18a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c18c:	b292      	uxth	r2, r2
 800c18e:	2a00      	cmp	r2, #0
 800c190:	d0bf      	beq.n	800c112 <HAL_SPI_Receive+0xda>
 800c192:	1c6f      	adds	r7, r5, #1
 800c194:	d013      	beq.n	800c1be <HAL_SPI_Receive+0x186>
 800c196:	e02b      	b.n	800c1f0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c198:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c19a:	7b1b      	ldrb	r3, [r3, #12]
 800c19c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c19e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c1a8:	fa1f fc8c 	uxth.w	ip, ip
 800c1ac:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1b2:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c1b4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1b6:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c1b8:	2b00      	cmp	r3, #0
 800c1ba:	d0aa      	beq.n	800c112 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1bc:	6823      	ldr	r3, [r4, #0]
 800c1be:	689a      	ldr	r2, [r3, #8]
 800c1c0:	07d0      	lsls	r0, r2, #31
 800c1c2:	d4e9      	bmi.n	800c198 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1c4:	f7fc fdea 	bl	8008d9c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c1c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1ca:	b29b      	uxth	r3, r3
 800c1cc:	2b00      	cmp	r3, #0
 800c1ce:	d1f5      	bne.n	800c1bc <HAL_SPI_Receive+0x184>
 800c1d0:	e79f      	b.n	800c112 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c1d2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c1d4:	7b1b      	ldrb	r3, [r3, #12]
 800c1d6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c1d8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1dc:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1de:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c1e0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c1e2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1e4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1e8:	b29b      	uxth	r3, r3
 800c1ea:	2b00      	cmp	r3, #0
 800c1ec:	d091      	beq.n	800c112 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c1ee:	6823      	ldr	r3, [r4, #0]
 800c1f0:	689a      	ldr	r2, [r3, #8]
 800c1f2:	07d1      	lsls	r1, r2, #31
 800c1f4:	d4ed      	bmi.n	800c1d2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c1f6:	f7fc fdd1 	bl	8008d9c <HAL_GetTick>
 800c1fa:	1b80      	subs	r0, r0, r6
 800c1fc:	42a8      	cmp	r0, r5
 800c1fe:	d3f2      	bcc.n	800c1e6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c200:	2003      	movs	r0, #3
 800c202:	e736      	b.n	800c072 <HAL_SPI_Receive+0x3a>

0800c204 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c204:	2800      	cmp	r0, #0
 800c206:	f000 8087 	beq.w	800c318 <HAL_TIM_Base_Init+0x114>
{
 800c20a:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c20c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c210:	4604      	mov	r4, r0
 800c212:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c216:	2b00      	cmp	r3, #0
 800c218:	d079      	beq.n	800c30e <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c21a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c21c:	493f      	ldr	r1, [pc, #252]	; (800c31c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c21e:	2302      	movs	r3, #2
 800c220:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c224:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c226:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c228:	d05d      	beq.n	800c2e6 <HAL_TIM_Base_Init+0xe2>
 800c22a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c22e:	d031      	beq.n	800c294 <HAL_TIM_Base_Init+0x90>
 800c230:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c234:	428a      	cmp	r2, r1
 800c236:	d02d      	beq.n	800c294 <HAL_TIM_Base_Init+0x90>
 800c238:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c23c:	428a      	cmp	r2, r1
 800c23e:	d029      	beq.n	800c294 <HAL_TIM_Base_Init+0x90>
 800c240:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c244:	428a      	cmp	r2, r1
 800c246:	d025      	beq.n	800c294 <HAL_TIM_Base_Init+0x90>
 800c248:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c24c:	428a      	cmp	r2, r1
 800c24e:	d04a      	beq.n	800c2e6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c250:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c254:	428a      	cmp	r2, r1
 800c256:	d021      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
 800c258:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c25c:	428a      	cmp	r2, r1
 800c25e:	d01d      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
 800c260:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c264:	428a      	cmp	r2, r1
 800c266:	d019      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
 800c268:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c26c:	428a      	cmp	r2, r1
 800c26e:	d015      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
 800c270:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c274:	428a      	cmp	r2, r1
 800c276:	d011      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
 800c278:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c27c:	428a      	cmp	r2, r1
 800c27e:	d00d      	beq.n	800c29c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c280:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c282:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c284:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c288:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c28a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c28c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c28e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c290:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c292:	e010      	b.n	800c2b6 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c294:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c296:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c29a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c29c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c29e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c2a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2a4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2a6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c2aa:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2ac:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c2ae:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c2b0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c2b2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c2b4:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c2b6:	2301      	movs	r3, #1
 800c2b8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c2ba:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c2be:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c2c2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c2c6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c2ca:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c2ce:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c2d2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c2d6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c2da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c2de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c2e2:	2000      	movs	r0, #0
}
 800c2e4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c2e6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2e8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c2ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c2ee:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c2f0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c2f4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c2f6:	69a1      	ldr	r1, [r4, #24]
 800c2f8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c2fc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c2fe:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c300:	68e3      	ldr	r3, [r4, #12]
 800c302:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c304:	6863      	ldr	r3, [r4, #4]
 800c306:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c308:	6963      	ldr	r3, [r4, #20]
 800c30a:	6313      	str	r3, [r2, #48]	; 0x30
 800c30c:	e7d3      	b.n	800c2b6 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c30e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c312:	f7f5 fe21 	bl	8001f58 <HAL_TIM_Base_MspInit>
 800c316:	e780      	b.n	800c21a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c318:	2001      	movs	r0, #1
}
 800c31a:	4770      	bx	lr
 800c31c:	40010000 	.word	0x40010000

0800c320 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c320:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c324:	2b01      	cmp	r3, #1
 800c326:	d12f      	bne.n	800c388 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c328:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c32a:	4919      	ldr	r1, [pc, #100]	; (800c390 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c32c:	2202      	movs	r2, #2
 800c32e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c332:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c334:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c336:	f042 0201 	orr.w	r2, r2, #1
 800c33a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c33c:	d019      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c33e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c342:	d016      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c344:	4a13      	ldr	r2, [pc, #76]	; (800c394 <HAL_TIM_Base_Start_IT+0x74>)
 800c346:	4293      	cmp	r3, r2
 800c348:	d013      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c34a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c34e:	4293      	cmp	r3, r2
 800c350:	d00f      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c352:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c356:	4293      	cmp	r3, r2
 800c358:	d00b      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c35a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c35e:	4293      	cmp	r3, r2
 800c360:	d007      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c362:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c366:	4293      	cmp	r3, r2
 800c368:	d003      	beq.n	800c372 <HAL_TIM_Base_Start_IT+0x52>
 800c36a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c36e:	4293      	cmp	r3, r2
 800c370:	d104      	bne.n	800c37c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c372:	689a      	ldr	r2, [r3, #8]
 800c374:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c378:	2a06      	cmp	r2, #6
 800c37a:	d007      	beq.n	800c38c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c37c:	681a      	ldr	r2, [r3, #0]
 800c37e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c382:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c384:	601a      	str	r2, [r3, #0]
 800c386:	4770      	bx	lr
    return HAL_ERROR;
 800c388:	2001      	movs	r0, #1
 800c38a:	4770      	bx	lr
  return HAL_OK;
 800c38c:	2000      	movs	r0, #0
}
 800c38e:	4770      	bx	lr
 800c390:	40010000 	.word	0x40010000
 800c394:	40000400 	.word	0x40000400

0800c398 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c398:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c39c:	2b01      	cmp	r3, #1
 800c39e:	d075      	beq.n	800c48c <HAL_TIM_ConfigClockSource+0xf4>
 800c3a0:	4602      	mov	r2, r0
{
 800c3a2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c3a4:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c3a6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c3a8:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c3ac:	2001      	movs	r0, #1
 800c3ae:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c3b2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c3b4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c3b8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c3bc:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c3be:	680b      	ldr	r3, [r1, #0]
 800c3c0:	2b60      	cmp	r3, #96	; 0x60
 800c3c2:	d065      	beq.n	800c490 <HAL_TIM_ConfigClockSource+0xf8>
 800c3c4:	d824      	bhi.n	800c410 <HAL_TIM_ConfigClockSource+0x78>
 800c3c6:	2b40      	cmp	r3, #64	; 0x40
 800c3c8:	d07c      	beq.n	800c4c4 <HAL_TIM_ConfigClockSource+0x12c>
 800c3ca:	d94b      	bls.n	800c464 <HAL_TIM_ConfigClockSource+0xcc>
 800c3cc:	2b50      	cmp	r3, #80	; 0x50
 800c3ce:	d117      	bne.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c3d0:	684b      	ldr	r3, [r1, #4]
 800c3d2:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c3d4:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c3d6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c3da:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c3dc:	6a23      	ldr	r3, [r4, #32]
 800c3de:	f023 0301 	bic.w	r3, r3, #1
 800c3e2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c3e4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c3e6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c3ea:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c3ee:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c3f0:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c3f2:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c3f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c3f8:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c3fc:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c3fe:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c400:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c402:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c404:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c408:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c40c:	bc30      	pop	{r4, r5}
 800c40e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c410:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c414:	d038      	beq.n	800c488 <HAL_TIM_ConfigClockSource+0xf0>
 800c416:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c41a:	d110      	bne.n	800c43e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c41c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c420:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c422:	432b      	orrs	r3, r5
 800c424:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c426:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c42a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c42e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c430:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c432:	68a3      	ldr	r3, [r4, #8]
 800c434:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c438:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c43a:	60a3      	str	r3, [r4, #8]
      break;
 800c43c:	e7e0      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c43e:	2b70      	cmp	r3, #112	; 0x70
 800c440:	d1de      	bne.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c442:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c446:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c448:	432b      	orrs	r3, r5
 800c44a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c44c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c450:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c454:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c456:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c458:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c45a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c45e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c460:	60a3      	str	r3, [r4, #8]
      break;
 800c462:	e7cd      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c464:	2b20      	cmp	r3, #32
 800c466:	d002      	beq.n	800c46e <HAL_TIM_ConfigClockSource+0xd6>
 800c468:	d90a      	bls.n	800c480 <HAL_TIM_ConfigClockSource+0xe8>
 800c46a:	2b30      	cmp	r3, #48	; 0x30
 800c46c:	d1c8      	bne.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c46e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c470:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c474:	430b      	orrs	r3, r1
 800c476:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c47a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c47c:	60a3      	str	r3, [r4, #8]
}
 800c47e:	e7bf      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c480:	f033 0110 	bics.w	r1, r3, #16
 800c484:	d1bc      	bne.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
 800c486:	e7f2      	b.n	800c46e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c488:	2000      	movs	r0, #0
 800c48a:	e7b9      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c48c:	2002      	movs	r0, #2
}
 800c48e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c490:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c492:	6848      	ldr	r0, [r1, #4]
 800c494:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c496:	f023 0310 	bic.w	r3, r3, #16
 800c49a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c49c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c49e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c4a0:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c4a4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c4a8:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c4ac:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c4b0:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c4b2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c4b4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c4b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c4ba:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c4be:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c4c0:	60a3      	str	r3, [r4, #8]
}
 800c4c2:	e79d      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c4c4:	684b      	ldr	r3, [r1, #4]
 800c4c6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c4c8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c4ca:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c4ce:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c4d0:	6a23      	ldr	r3, [r4, #32]
 800c4d2:	f023 0301 	bic.w	r3, r3, #1
 800c4d6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c4d8:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c4da:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c4de:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c4e2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c4e4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c4e6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c4e8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c4ec:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c4f0:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c4f2:	60a3      	str	r3, [r4, #8]
}
 800c4f4:	e784      	b.n	800c400 <HAL_TIM_ConfigClockSource+0x68>
 800c4f6:	bf00      	nop

0800c4f8 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c4f8:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c4fc:	2a01      	cmp	r2, #1
 800c4fe:	d050      	beq.n	800c5a2 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c500:	4603      	mov	r3, r0
{
 800c502:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c504:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c506:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c508:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c50c:	2001      	movs	r0, #1
 800c50e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c512:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c514:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c516:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c518:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c51c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c51e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c522:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c524:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c526:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c528:	d060      	beq.n	800c5ec <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c52a:	d90f      	bls.n	800c54c <HAL_TIM_SlaveConfigSynchro+0x54>
 800c52c:	2860      	cmp	r0, #96	; 0x60
 800c52e:	d03a      	beq.n	800c5a6 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c530:	2870      	cmp	r0, #112	; 0x70
 800c532:	d10e      	bne.n	800c552 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c534:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c538:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c53a:	432a      	orrs	r2, r5
 800c53c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c53e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c542:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c546:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c548:	60a2      	str	r2, [r4, #8]
 800c54a:	e00f      	b.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c54c:	2840      	cmp	r0, #64	; 0x40
 800c54e:	d03d      	beq.n	800c5cc <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c550:	d907      	bls.n	800c562 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c552:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c554:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c556:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c55a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c55e:	bc30      	pop	{r4, r5}
 800c560:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c562:	2820      	cmp	r0, #32
 800c564:	d002      	beq.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>
 800c566:	d912      	bls.n	800c58e <HAL_TIM_SlaveConfigSynchro+0x96>
 800c568:	2830      	cmp	r0, #48	; 0x30
 800c56a:	d1f2      	bne.n	800c552 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c56c:	68e2      	ldr	r2, [r4, #12]
 800c56e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c572:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c574:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c576:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c578:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c57a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c57e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c580:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c584:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c588:	4608      	mov	r0, r1
}
 800c58a:	bc30      	pop	{r4, r5}
 800c58c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c58e:	f030 0210 	bics.w	r2, r0, #16
 800c592:	d0eb      	beq.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c594:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c596:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c598:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c59c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c5a0:	e7dd      	b.n	800c55e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c5a2:	2002      	movs	r0, #2
}
 800c5a4:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c5a6:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c5a8:	6888      	ldr	r0, [r1, #8]
 800c5aa:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c5ac:	f022 0210 	bic.w	r2, r2, #16
 800c5b0:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c5b2:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c5b4:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c5b6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c5ba:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c5be:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c5c2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c5c6:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c5c8:	6222      	str	r2, [r4, #32]
 800c5ca:	e7cf      	b.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c5cc:	2d05      	cmp	r5, #5
 800c5ce:	d0c0      	beq.n	800c552 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c5d0:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c5d2:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c5d4:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c5d6:	f022 0201 	bic.w	r2, r2, #1
 800c5da:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c5dc:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c5de:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c5e2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c5e6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c5e8:	6220      	str	r0, [r4, #32]
      break;
 800c5ea:	e7bf      	b.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c5ec:	688a      	ldr	r2, [r1, #8]
 800c5ee:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c5f0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c5f2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c5f6:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c5f8:	6a22      	ldr	r2, [r4, #32]
 800c5fa:	f022 0201 	bic.w	r2, r2, #1
 800c5fe:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c600:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c602:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c606:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c60a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c60c:	6221      	str	r1, [r4, #32]
 800c60e:	e7ad      	b.n	800c56c <HAL_TIM_SlaveConfigSynchro+0x74>

0800c610 <HAL_TIM_OC_DelayElapsedCallback>:
 800c610:	4770      	bx	lr
 800c612:	bf00      	nop

0800c614 <HAL_TIM_IC_CaptureCallback>:
 800c614:	4770      	bx	lr
 800c616:	bf00      	nop

0800c618 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c618:	4770      	bx	lr
 800c61a:	bf00      	nop

0800c61c <HAL_TIM_TriggerCallback>:
 800c61c:	4770      	bx	lr
 800c61e:	bf00      	nop

0800c620 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c620:	6803      	ldr	r3, [r0, #0]
 800c622:	691a      	ldr	r2, [r3, #16]
 800c624:	0791      	lsls	r1, r2, #30
{
 800c626:	b510      	push	{r4, lr}
 800c628:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c62a:	d502      	bpl.n	800c632 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c62c:	68da      	ldr	r2, [r3, #12]
 800c62e:	0792      	lsls	r2, r2, #30
 800c630:	d45f      	bmi.n	800c6f2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c632:	691a      	ldr	r2, [r3, #16]
 800c634:	0750      	lsls	r0, r2, #29
 800c636:	d502      	bpl.n	800c63e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c638:	68da      	ldr	r2, [r3, #12]
 800c63a:	0751      	lsls	r1, r2, #29
 800c63c:	d446      	bmi.n	800c6cc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c63e:	691a      	ldr	r2, [r3, #16]
 800c640:	0712      	lsls	r2, r2, #28
 800c642:	d502      	bpl.n	800c64a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c644:	68da      	ldr	r2, [r3, #12]
 800c646:	0710      	lsls	r0, r2, #28
 800c648:	d42e      	bmi.n	800c6a8 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c64a:	691a      	ldr	r2, [r3, #16]
 800c64c:	06d2      	lsls	r2, r2, #27
 800c64e:	d502      	bpl.n	800c656 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c650:	68da      	ldr	r2, [r3, #12]
 800c652:	06d0      	lsls	r0, r2, #27
 800c654:	d418      	bmi.n	800c688 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c656:	691a      	ldr	r2, [r3, #16]
 800c658:	07d1      	lsls	r1, r2, #31
 800c65a:	d502      	bpl.n	800c662 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c65c:	68da      	ldr	r2, [r3, #12]
 800c65e:	07d2      	lsls	r2, r2, #31
 800c660:	d45d      	bmi.n	800c71e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c662:	691a      	ldr	r2, [r3, #16]
 800c664:	0610      	lsls	r0, r2, #24
 800c666:	d502      	bpl.n	800c66e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c668:	68da      	ldr	r2, [r3, #12]
 800c66a:	0611      	lsls	r1, r2, #24
 800c66c:	d45f      	bmi.n	800c72e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c66e:	691a      	ldr	r2, [r3, #16]
 800c670:	0652      	lsls	r2, r2, #25
 800c672:	d502      	bpl.n	800c67a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c674:	68da      	ldr	r2, [r3, #12]
 800c676:	0650      	lsls	r0, r2, #25
 800c678:	d461      	bmi.n	800c73e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c67a:	691a      	ldr	r2, [r3, #16]
 800c67c:	0691      	lsls	r1, r2, #26
 800c67e:	d502      	bpl.n	800c686 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c680:	68da      	ldr	r2, [r3, #12]
 800c682:	0692      	lsls	r2, r2, #26
 800c684:	d443      	bmi.n	800c70e <HAL_TIM_IRQHandler+0xee>
}
 800c686:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c688:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c68c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c68e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c690:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c692:	69db      	ldr	r3, [r3, #28]
 800c694:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c698:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c69a:	d064      	beq.n	800c766 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c69c:	f7ff ffba 	bl	800c614 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6a0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c6a2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6a4:	7722      	strb	r2, [r4, #28]
 800c6a6:	e7d6      	b.n	800c656 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c6a8:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c6ac:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c6ae:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c6b0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c6b2:	69db      	ldr	r3, [r3, #28]
 800c6b4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c6b6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c6b8:	d152      	bne.n	800c760 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c6ba:	f7ff ffa9 	bl	800c610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c6be:	4620      	mov	r0, r4
 800c6c0:	f7ff ffaa 	bl	800c618 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6c4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c6c6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6c8:	7722      	strb	r2, [r4, #28]
 800c6ca:	e7be      	b.n	800c64a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c6cc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c6d0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c6d2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c6d4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c6d6:	699b      	ldr	r3, [r3, #24]
 800c6d8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c6dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c6de:	d13c      	bne.n	800c75a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c6e0:	f7ff ff96 	bl	800c610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c6e4:	4620      	mov	r0, r4
 800c6e6:	f7ff ff97 	bl	800c618 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6ea:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c6ec:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c6ee:	7722      	strb	r2, [r4, #28]
 800c6f0:	e7a5      	b.n	800c63e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c6f2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c6f6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c6f8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c6fa:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c6fc:	699b      	ldr	r3, [r3, #24]
 800c6fe:	079b      	lsls	r3, r3, #30
 800c700:	d025      	beq.n	800c74e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c702:	f7ff ff87 	bl	800c614 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c706:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c708:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c70a:	7722      	strb	r2, [r4, #28]
 800c70c:	e791      	b.n	800c632 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c70e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c712:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c714:	611a      	str	r2, [r3, #16]
}
 800c716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c71a:	f000 b86b 	b.w	800c7f4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c71e:	f06f 0201 	mvn.w	r2, #1
 800c722:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c724:	4620      	mov	r0, r4
 800c726:	f7f5 fa1d 	bl	8001b64 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c72a:	6823      	ldr	r3, [r4, #0]
 800c72c:	e799      	b.n	800c662 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c72e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c732:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c734:	4620      	mov	r0, r4
 800c736:	f000 f85f 	bl	800c7f8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c73a:	6823      	ldr	r3, [r4, #0]
 800c73c:	e797      	b.n	800c66e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c73e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c742:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c744:	4620      	mov	r0, r4
 800c746:	f7ff ff69 	bl	800c61c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c74a:	6823      	ldr	r3, [r4, #0]
 800c74c:	e795      	b.n	800c67a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c74e:	f7ff ff5f 	bl	800c610 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c752:	4620      	mov	r0, r4
 800c754:	f7ff ff60 	bl	800c618 <HAL_TIM_PWM_PulseFinishedCallback>
 800c758:	e7d5      	b.n	800c706 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c75a:	f7ff ff5b 	bl	800c614 <HAL_TIM_IC_CaptureCallback>
 800c75e:	e7c4      	b.n	800c6ea <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c760:	f7ff ff58 	bl	800c614 <HAL_TIM_IC_CaptureCallback>
 800c764:	e7ae      	b.n	800c6c4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c766:	f7ff ff53 	bl	800c610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c76a:	4620      	mov	r0, r4
 800c76c:	f7ff ff54 	bl	800c618 <HAL_TIM_PWM_PulseFinishedCallback>
 800c770:	e796      	b.n	800c6a0 <HAL_TIM_IRQHandler+0x80>
 800c772:	bf00      	nop

0800c774 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c774:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c778:	2b01      	cmp	r3, #1
 800c77a:	d037      	beq.n	800c7ec <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c77c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c77e:	2202      	movs	r2, #2
{
 800c780:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c782:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c786:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c788:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c78a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c78c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c790:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c792:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c794:	4a16      	ldr	r2, [pc, #88]	; (800c7f0 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c796:	4293      	cmp	r3, r2
 800c798:	d01a      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c79a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c79e:	d017      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7a0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c7a4:	4293      	cmp	r3, r2
 800c7a6:	d013      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c7ac:	4293      	cmp	r3, r2
 800c7ae:	d00f      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7b0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c7b4:	4293      	cmp	r3, r2
 800c7b6:	d00b      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7b8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c7bc:	4293      	cmp	r3, r2
 800c7be:	d007      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7c0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c7c4:	4293      	cmp	r3, r2
 800c7c6:	d003      	beq.n	800c7d0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c7c8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c7cc:	4293      	cmp	r3, r2
 800c7ce:	d104      	bne.n	800c7da <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c7d0:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c7d2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c7d6:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c7d8:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c7da:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c7dc:	2201      	movs	r2, #1
 800c7de:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c7e2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c7e6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c7e8:	4618      	mov	r0, r3
}
 800c7ea:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c7ec:	2002      	movs	r0, #2
}
 800c7ee:	4770      	bx	lr
 800c7f0:	40010000 	.word	0x40010000

0800c7f4 <HAL_TIMEx_CommutCallback>:
 800c7f4:	4770      	bx	lr
 800c7f6:	bf00      	nop

0800c7f8 <HAL_TIMEx_BreakCallback>:
 800c7f8:	4770      	bx	lr
 800c7fa:	bf00      	nop

0800c7fc <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c7fc:	680b      	ldr	r3, [r1, #0]
{
 800c7fe:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c800:	b9d3      	cbnz	r3, 800c838 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c802:	6803      	ldr	r3, [r0, #0]
 800c804:	684c      	ldr	r4, [r1, #4]
 800c806:	688a      	ldr	r2, [r1, #8]
 800c808:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c80c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c810:	4323      	orrs	r3, r4
 800c812:	4313      	orrs	r3, r2
 800c814:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c818:	4323      	orrs	r3, r4
 800c81a:	4313      	orrs	r3, r2
 800c81c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c820:	4323      	orrs	r3, r4
 800c822:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c826:	4313      	orrs	r3, r2
 800c828:	432b      	orrs	r3, r5
 800c82a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c82c:	4323      	orrs	r3, r4
 800c82e:	4313      	orrs	r3, r2
 800c830:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c832:	bc30      	pop	{r4, r5}
 800c834:	2000      	movs	r0, #0
 800c836:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c838:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c83c:	6803      	ldr	r3, [r0, #0]
 800c83e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c842:	4323      	orrs	r3, r4
 800c844:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c846:	4313      	orrs	r3, r2
 800c848:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c84a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c84c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c84e:	6843      	ldr	r3, [r0, #4]
 800c850:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c854:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c858:	4313      	orrs	r3, r2
 800c85a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c85e:	4323      	orrs	r3, r4
 800c860:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c864:	4313      	orrs	r3, r2
 800c866:	432b      	orrs	r3, r5
 800c868:	698a      	ldr	r2, [r1, #24]
 800c86a:	4323      	orrs	r3, r4
 800c86c:	4313      	orrs	r3, r2
 800c86e:	6043      	str	r3, [r0, #4]
}
 800c870:	bc30      	pop	{r4, r5}
 800c872:	2000      	movs	r0, #0
 800c874:	4770      	bx	lr
 800c876:	bf00      	nop

0800c878 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c878:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c87a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c87c:	bb02      	cbnz	r2, 800c8c0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c87e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c882:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c886:	3c01      	subs	r4, #1
 800c888:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c88c:	3a01      	subs	r2, #1
 800c88e:	4313      	orrs	r3, r2
 800c890:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c894:	3c01      	subs	r4, #1
 800c896:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c89a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c89e:	3a01      	subs	r2, #1
 800c8a0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c8a4:	698a      	ldr	r2, [r1, #24]
 800c8a6:	1e69      	subs	r1, r5, #1
 800c8a8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c8ac:	1e61      	subs	r1, r4, #1
 800c8ae:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c8b2:	3a01      	subs	r2, #1
 800c8b4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c8b8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c8ba:	bc30      	pop	{r4, r5}
 800c8bc:	2000      	movs	r0, #0
 800c8be:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c8c0:	68cc      	ldr	r4, [r1, #12]
 800c8c2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c8c4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c8c6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c8ca:	3c01      	subs	r4, #1
 800c8cc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c8d0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c8d4:	3a01      	subs	r2, #1
 800c8d6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c8da:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c8dc:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c8e0:	68c3      	ldr	r3, [r0, #12]
 800c8e2:	3c01      	subs	r4, #1
 800c8e4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c8e8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c8ec:	3a01      	subs	r2, #1
 800c8ee:	690c      	ldr	r4, [r1, #16]
 800c8f0:	4313      	orrs	r3, r2
 800c8f2:	698a      	ldr	r2, [r1, #24]
 800c8f4:	1e69      	subs	r1, r5, #1
 800c8f6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c8fa:	1e61      	subs	r1, r4, #1
 800c8fc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c900:	3a01      	subs	r2, #1
 800c902:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c906:	60c3      	str	r3, [r0, #12]
}
 800c908:	bc30      	pop	{r4, r5}
 800c90a:	2000      	movs	r0, #0
 800c90c:	4770      	bx	lr
 800c90e:	bf00      	nop

0800c910 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c910:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c912:	680b      	ldr	r3, [r1, #0]
{
 800c914:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c916:	684a      	ldr	r2, [r1, #4]
{
 800c918:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c91a:	4313      	orrs	r3, r2
 800c91c:	6900      	ldr	r0, [r0, #16]
 800c91e:	68ca      	ldr	r2, [r1, #12]
 800c920:	0d80      	lsrs	r0, r0, #22
 800c922:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c926:	688a      	ldr	r2, [r1, #8]
 800c928:	0580      	lsls	r0, r0, #22
 800c92a:	4303      	orrs	r3, r0
 800c92c:	3a01      	subs	r2, #1
 800c92e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c932:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c934:	f7fc fa32 	bl	8008d9c <HAL_GetTick>
 800c938:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c93a:	1c6b      	adds	r3, r5, #1
 800c93c:	d105      	bne.n	800c94a <FMC_SDRAM_SendCommand+0x3a>
 800c93e:	69a3      	ldr	r3, [r4, #24]
 800c940:	f013 0320 	ands.w	r3, r3, #32
 800c944:	d1fb      	bne.n	800c93e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c946:	4618      	mov	r0, r3
}
 800c948:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c94a:	69a3      	ldr	r3, [r4, #24]
 800c94c:	f013 0320 	ands.w	r3, r3, #32
 800c950:	d0f9      	beq.n	800c946 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c952:	b125      	cbz	r5, 800c95e <FMC_SDRAM_SendCommand+0x4e>
 800c954:	f7fc fa22 	bl	8008d9c <HAL_GetTick>
 800c958:	1b80      	subs	r0, r0, r6
 800c95a:	42a8      	cmp	r0, r5
 800c95c:	d9ed      	bls.n	800c93a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c95e:	2003      	movs	r0, #3
}
 800c960:	bd70      	pop	{r4, r5, r6, pc}
 800c962:	bf00      	nop

0800c964 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c964:	6943      	ldr	r3, [r0, #20]
 800c966:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c96a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c96c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c970:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c974:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c976:	6151      	str	r1, [r2, #20]
}
 800c978:	4770      	bx	lr
 800c97a:	bf00      	nop

0800c97c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c97c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c97e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c982:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c984:	f002 fafe 	bl	800ef84 <xTaskGetSchedulerState>
 800c988:	2801      	cmp	r0, #1
 800c98a:	d100      	bne.n	800c98e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c98c:	bd08      	pop	{r3, pc}
 800c98e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c992:	f000 bc3f 	b.w	800d214 <xPortSysTickHandler>
 800c996:	bf00      	nop

0800c998 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c998:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c99c:	b92b      	cbnz	r3, 800c9aa <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c99e:	4b06      	ldr	r3, [pc, #24]	; (800c9b8 <osKernelInitialize+0x20>)
 800c9a0:	6818      	ldr	r0, [r3, #0]
 800c9a2:	b928      	cbnz	r0, 800c9b0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c9a4:	2201      	movs	r2, #1
 800c9a6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c9a8:	4770      	bx	lr
    stat = osErrorISR;
 800c9aa:	f06f 0005 	mvn.w	r0, #5
 800c9ae:	4770      	bx	lr
    } else {
      stat = osError;
 800c9b0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c9b4:	4770      	bx	lr
 800c9b6:	bf00      	nop
 800c9b8:	20002c80 	.word	0x20002c80

0800c9bc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c9bc:	b510      	push	{r4, lr}
 800c9be:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c9c2:	b974      	cbnz	r4, 800c9e2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c9c4:	4b08      	ldr	r3, [pc, #32]	; (800c9e8 <osKernelStart+0x2c>)
 800c9c6:	681a      	ldr	r2, [r3, #0]
 800c9c8:	2a01      	cmp	r2, #1
 800c9ca:	d107      	bne.n	800c9dc <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c9cc:	4907      	ldr	r1, [pc, #28]	; (800c9ec <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c9ce:	2202      	movs	r2, #2
 800c9d0:	77cc      	strb	r4, [r1, #31]
 800c9d2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c9d4:	f002 f8b0 	bl	800eb38 <vTaskStartScheduler>
      stat = osOK;
 800c9d8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c9da:	bd10      	pop	{r4, pc}
      stat = osError;
 800c9dc:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c9e0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c9e2:	f06f 0005 	mvn.w	r0, #5
}
 800c9e6:	bd10      	pop	{r4, pc}
 800c9e8:	20002c80 	.word	0x20002c80
 800c9ec:	e000ed00 	.word	0xe000ed00

0800c9f0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c9f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9f2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c9f4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c9f6:	4615      	mov	r5, r2
  hTask = NULL;
 800c9f8:	9405      	str	r4, [sp, #20]
 800c9fa:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c9fe:	b9ea      	cbnz	r2, 800ca3c <osThreadNew+0x4c>
 800ca00:	b350      	cbz	r0, 800ca58 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ca02:	b1f5      	cbz	r5, 800ca42 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ca04:	69ab      	ldr	r3, [r5, #24]
 800ca06:	bb5b      	cbnz	r3, 800ca60 <osThreadNew+0x70>
 800ca08:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ca0a:	686a      	ldr	r2, [r5, #4]
 800ca0c:	07d2      	lsls	r2, r2, #31
 800ca0e:	d423      	bmi.n	800ca58 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800ca10:	696e      	ldr	r6, [r5, #20]
 800ca12:	b34e      	cbz	r6, 800ca68 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800ca14:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ca18:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800ca1a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ca1c:	b34c      	cbz	r4, 800ca72 <osThreadNew+0x82>
 800ca1e:	68ea      	ldr	r2, [r5, #12]
 800ca20:	2aab      	cmp	r2, #171	; 0xab
 800ca22:	d919      	bls.n	800ca58 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ca24:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ca26:	b1bd      	cbz	r5, 800ca58 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ca28:	b1b6      	cbz	r6, 800ca58 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800ca2a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800ca2e:	9300      	str	r3, [sp, #0]
 800ca30:	4662      	mov	r2, ip
 800ca32:	460b      	mov	r3, r1
 800ca34:	4639      	mov	r1, r7
 800ca36:	f001 ffbd 	bl	800e9b4 <xTaskCreateStatic>
 800ca3a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800ca3c:	4620      	mov	r0, r4
 800ca3e:	b007      	add	sp, #28
 800ca40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca42:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800ca44:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800ca46:	ac05      	add	r4, sp, #20
 800ca48:	9300      	str	r3, [sp, #0]
 800ca4a:	9401      	str	r4, [sp, #4]
 800ca4c:	460b      	mov	r3, r1
 800ca4e:	4629      	mov	r1, r5
 800ca50:	f001 ffea 	bl	800ea28 <xTaskCreate>
 800ca54:	2801      	cmp	r0, #1
 800ca56:	d00a      	beq.n	800ca6e <osThreadNew+0x7e>
        return (NULL);
 800ca58:	2400      	movs	r4, #0
}
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	b007      	add	sp, #28
 800ca5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ca60:	1e5c      	subs	r4, r3, #1
 800ca62:	2c37      	cmp	r4, #55	; 0x37
 800ca64:	d9d1      	bls.n	800ca0a <osThreadNew+0x1a>
 800ca66:	e7f7      	b.n	800ca58 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800ca68:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800ca6c:	e7d4      	b.n	800ca18 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800ca6e:	9c05      	ldr	r4, [sp, #20]
 800ca70:	e7e4      	b.n	800ca3c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800ca72:	68ee      	ldr	r6, [r5, #12]
 800ca74:	2e00      	cmp	r6, #0
 800ca76:	d1e1      	bne.n	800ca3c <osThreadNew+0x4c>
 800ca78:	692d      	ldr	r5, [r5, #16]
 800ca7a:	2d00      	cmp	r5, #0
 800ca7c:	d1de      	bne.n	800ca3c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800ca7e:	fa1f f28c 	uxth.w	r2, ip
 800ca82:	463d      	mov	r5, r7
 800ca84:	e7df      	b.n	800ca46 <osThreadNew+0x56>
 800ca86:	bf00      	nop

0800ca88 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800ca88:	b510      	push	{r4, lr}
 800ca8a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ca8e:	b92c      	cbnz	r4, 800ca9c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800ca90:	b900      	cbnz	r0, 800ca94 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800ca92:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800ca94:	f001 fffa 	bl	800ea8c <vTaskDelay>
    stat = osOK;
 800ca98:	4620      	mov	r0, r4
}
 800ca9a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ca9c:	f06f 0005 	mvn.w	r0, #5
}
 800caa0:	bd10      	pop	{r4, pc}
 800caa2:	bf00      	nop

0800caa4 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800caa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caa6:	b083      	sub	sp, #12
 800caa8:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800caac:	b9fe      	cbnz	r6, 800caee <osSemaphoreNew+0x4a>
 800caae:	b1f0      	cbz	r0, 800caee <osSemaphoreNew+0x4a>
 800cab0:	4288      	cmp	r0, r1
 800cab2:	460f      	mov	r7, r1
 800cab4:	d31b      	bcc.n	800caee <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800cab6:	4615      	mov	r5, r2
 800cab8:	b192      	cbz	r2, 800cae0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800caba:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cabe:	b1d2      	cbz	r2, 800caf6 <osSemaphoreNew+0x52>
 800cac0:	2b4f      	cmp	r3, #79	; 0x4f
 800cac2:	d914      	bls.n	800caee <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800cac4:	2801      	cmp	r0, #1
 800cac6:	d038      	beq.n	800cb3a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800cac8:	f000 fd8a 	bl	800d5e0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800cacc:	4604      	mov	r4, r0
 800cace:	b170      	cbz	r0, 800caee <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800cad0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800cad2:	4620      	mov	r0, r4
 800cad4:	4629      	mov	r1, r5
 800cad6:	f001 fc35 	bl	800e344 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cada:	4620      	mov	r0, r4
 800cadc:	b003      	add	sp, #12
 800cade:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cae0:	2801      	cmp	r0, #1
 800cae2:	d012      	beq.n	800cb0a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cae4:	f000 fddc 	bl	800d6a0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cae8:	4604      	mov	r4, r0
 800caea:	2800      	cmp	r0, #0
 800caec:	d1f1      	bne.n	800cad2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800caee:	2400      	movs	r4, #0
}
 800caf0:	4620      	mov	r0, r4
 800caf2:	b003      	add	sp, #12
 800caf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800caf6:	2b00      	cmp	r3, #0
 800caf8:	d1f9      	bne.n	800caee <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cafa:	2801      	cmp	r0, #1
 800cafc:	d005      	beq.n	800cb0a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cafe:	f000 fdcf 	bl	800d6a0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cb02:	4604      	mov	r4, r0
 800cb04:	2800      	cmp	r0, #0
 800cb06:	d1e3      	bne.n	800cad0 <osSemaphoreNew+0x2c>
 800cb08:	e7f1      	b.n	800caee <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cb0a:	2203      	movs	r2, #3
 800cb0c:	2100      	movs	r1, #0
 800cb0e:	2001      	movs	r0, #1
 800cb10:	f000 fd24 	bl	800d55c <xQueueGenericCreate>
 800cb14:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cb16:	2c00      	cmp	r4, #0
 800cb18:	d0e9      	beq.n	800caee <osSemaphoreNew+0x4a>
 800cb1a:	b917      	cbnz	r7, 800cb22 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cb1c:	2d00      	cmp	r5, #0
 800cb1e:	d1d7      	bne.n	800cad0 <osSemaphoreNew+0x2c>
 800cb20:	e7d7      	b.n	800cad2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cb22:	2300      	movs	r3, #0
 800cb24:	461a      	mov	r2, r3
 800cb26:	4619      	mov	r1, r3
 800cb28:	4620      	mov	r0, r4
 800cb2a:	f000 fdff 	bl	800d72c <xQueueGenericSend>
 800cb2e:	2801      	cmp	r0, #1
 800cb30:	d0f4      	beq.n	800cb1c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cb32:	4620      	mov	r0, r4
 800cb34:	f001 fbc0 	bl	800e2b8 <vQueueDelete>
 800cb38:	e7d9      	b.n	800caee <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cb3a:	4613      	mov	r3, r2
 800cb3c:	2203      	movs	r2, #3
 800cb3e:	9200      	str	r2, [sp, #0]
 800cb40:	4631      	mov	r1, r6
 800cb42:	4632      	mov	r2, r6
 800cb44:	f000 fc9c 	bl	800d480 <xQueueGenericCreateStatic>
 800cb48:	4604      	mov	r4, r0
 800cb4a:	e7e4      	b.n	800cb16 <osSemaphoreNew+0x72>

0800cb4c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cb4c:	b370      	cbz	r0, 800cbac <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cb4e:	b510      	push	{r4, lr}
 800cb50:	460c      	mov	r4, r1
 800cb52:	b082      	sub	sp, #8
 800cb54:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cb58:	b1c3      	cbz	r3, 800cb8c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cb5a:	bb21      	cbnz	r1, 800cba6 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cb5c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cb5e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cb60:	f001 fb28 	bl	800e1b4 <xQueueReceiveFromISR>
 800cb64:	2801      	cmp	r0, #1
 800cb66:	d11a      	bne.n	800cb9e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cb68:	9b01      	ldr	r3, [sp, #4]
 800cb6a:	b913      	cbnz	r3, 800cb72 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cb6c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cb6e:	b002      	add	sp, #8
 800cb70:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cb72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cb76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cb7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cb7e:	f3bf 8f4f 	dsb	sy
 800cb82:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cb86:	4620      	mov	r0, r4
}
 800cb88:	b002      	add	sp, #8
 800cb8a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cb8c:	f001 f988 	bl	800dea0 <xQueueSemaphoreTake>
 800cb90:	2801      	cmp	r0, #1
 800cb92:	d0eb      	beq.n	800cb6c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cb94:	b11c      	cbz	r4, 800cb9e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cb96:	f06f 0001 	mvn.w	r0, #1
}
 800cb9a:	b002      	add	sp, #8
 800cb9c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cb9e:	f06f 0002 	mvn.w	r0, #2
}
 800cba2:	b002      	add	sp, #8
 800cba4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cba6:	f06f 0003 	mvn.w	r0, #3
 800cbaa:	e7e0      	b.n	800cb6e <osSemaphoreAcquire+0x22>
 800cbac:	f06f 0003 	mvn.w	r0, #3
}
 800cbb0:	4770      	bx	lr
 800cbb2:	bf00      	nop

0800cbb4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cbb4:	b330      	cbz	r0, 800cc04 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cbb6:	b510      	push	{r4, lr}
 800cbb8:	b082      	sub	sp, #8
 800cbba:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cbbe:	b1ab      	cbz	r3, 800cbec <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cbc0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cbc2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cbc4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cbc6:	f000 ff95 	bl	800daf4 <xQueueGiveFromISR>
 800cbca:	2801      	cmp	r0, #1
 800cbcc:	d117      	bne.n	800cbfe <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cbce:	9b01      	ldr	r3, [sp, #4]
 800cbd0:	b193      	cbz	r3, 800cbf8 <osSemaphoreRelease+0x44>
 800cbd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cbd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cbda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cbde:	f3bf 8f4f 	dsb	sy
 800cbe2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cbe6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cbe8:	b002      	add	sp, #8
 800cbea:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cbec:	461a      	mov	r2, r3
 800cbee:	4619      	mov	r1, r3
 800cbf0:	f000 fd9c 	bl	800d72c <xQueueGenericSend>
 800cbf4:	2801      	cmp	r0, #1
 800cbf6:	d102      	bne.n	800cbfe <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cbf8:	2000      	movs	r0, #0
}
 800cbfa:	b002      	add	sp, #8
 800cbfc:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cbfe:	f06f 0002 	mvn.w	r0, #2
 800cc02:	e7fa      	b.n	800cbfa <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cc04:	f06f 0003 	mvn.w	r0, #3
}
 800cc08:	4770      	bx	lr
 800cc0a:	bf00      	nop

0800cc0c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cc0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc0e:	b085      	sub	sp, #20
 800cc10:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cc14:	b987      	cbnz	r7, 800cc38 <osMessageQueueNew+0x2c>
 800cc16:	4605      	mov	r5, r0
 800cc18:	b170      	cbz	r0, 800cc38 <osMessageQueueNew+0x2c>
 800cc1a:	b169      	cbz	r1, 800cc38 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800cc1c:	4614      	mov	r4, r2
 800cc1e:	b1ea      	cbz	r2, 800cc5c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cc20:	6893      	ldr	r3, [r2, #8]
 800cc22:	b163      	cbz	r3, 800cc3e <osMessageQueueNew+0x32>
 800cc24:	68d2      	ldr	r2, [r2, #12]
 800cc26:	2a4f      	cmp	r2, #79	; 0x4f
 800cc28:	d906      	bls.n	800cc38 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cc2a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cc2c:	b122      	cbz	r2, 800cc38 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cc2e:	6966      	ldr	r6, [r4, #20]
 800cc30:	fb01 f505 	mul.w	r5, r1, r5
 800cc34:	42ae      	cmp	r6, r5
 800cc36:	d21c      	bcs.n	800cc72 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800cc38:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800cc3a:	b005      	add	sp, #20
 800cc3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cc3e:	68d3      	ldr	r3, [r2, #12]
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	d1f9      	bne.n	800cc38 <osMessageQueueNew+0x2c>
 800cc44:	6913      	ldr	r3, [r2, #16]
 800cc46:	2b00      	cmp	r3, #0
 800cc48:	d1f6      	bne.n	800cc38 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cc4a:	6952      	ldr	r2, [r2, #20]
 800cc4c:	2a00      	cmp	r2, #0
 800cc4e:	d1f3      	bne.n	800cc38 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cc50:	f000 fc84 	bl	800d55c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cc54:	2800      	cmp	r0, #0
 800cc56:	d0ef      	beq.n	800cc38 <osMessageQueueNew+0x2c>
        name = attr->name;
 800cc58:	6824      	ldr	r4, [r4, #0]
 800cc5a:	e003      	b.n	800cc64 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cc5c:	f000 fc7e 	bl	800d55c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cc60:	2800      	cmp	r0, #0
 800cc62:	d0e9      	beq.n	800cc38 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800cc64:	4621      	mov	r1, r4
 800cc66:	9003      	str	r0, [sp, #12]
 800cc68:	f001 fb6c 	bl	800e344 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cc6c:	9803      	ldr	r0, [sp, #12]
}
 800cc6e:	b005      	add	sp, #20
 800cc70:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cc72:	9700      	str	r7, [sp, #0]
 800cc74:	f000 fc04 	bl	800d480 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cc78:	2800      	cmp	r0, #0
 800cc7a:	d1ed      	bne.n	800cc58 <osMessageQueueNew+0x4c>
 800cc7c:	e7dc      	b.n	800cc38 <osMessageQueueNew+0x2c>
 800cc7e:	bf00      	nop

0800cc80 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cc80:	b570      	push	{r4, r5, r6, lr}
 800cc82:	461c      	mov	r4, r3
 800cc84:	b082      	sub	sp, #8
 800cc86:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cc8a:	b1be      	cbz	r6, 800ccbc <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cc8c:	b350      	cbz	r0, 800cce4 <osMessageQueuePut+0x64>
 800cc8e:	b349      	cbz	r1, 800cce4 <osMessageQueuePut+0x64>
 800cc90:	bb43      	cbnz	r3, 800cce4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cc92:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cc94:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cc96:	f000 fec7 	bl	800da28 <xQueueGenericSendFromISR>
 800cc9a:	2801      	cmp	r0, #1
 800cc9c:	d11e      	bne.n	800ccdc <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cc9e:	9b01      	ldr	r3, [sp, #4]
 800cca0:	b1cb      	cbz	r3, 800ccd6 <osMessageQueuePut+0x56>
 800cca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cca6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ccaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ccae:	f3bf 8f4f 	dsb	sy
 800ccb2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ccb6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ccb8:	b002      	add	sp, #8
 800ccba:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ccbc:	b190      	cbz	r0, 800cce4 <osMessageQueuePut+0x64>
 800ccbe:	b189      	cbz	r1, 800cce4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ccc0:	4633      	mov	r3, r6
 800ccc2:	4622      	mov	r2, r4
 800ccc4:	f000 fd32 	bl	800d72c <xQueueGenericSend>
 800ccc8:	2801      	cmp	r0, #1
 800ccca:	d004      	beq.n	800ccd6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800cccc:	b134      	cbz	r4, 800ccdc <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800ccce:	f06f 0001 	mvn.w	r0, #1
}
 800ccd2:	b002      	add	sp, #8
 800ccd4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ccd6:	2000      	movs	r0, #0
}
 800ccd8:	b002      	add	sp, #8
 800ccda:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800ccdc:	f06f 0002 	mvn.w	r0, #2
}
 800cce0:	b002      	add	sp, #8
 800cce2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800cce4:	f06f 0003 	mvn.w	r0, #3
 800cce8:	e7e6      	b.n	800ccb8 <osMessageQueuePut+0x38>
 800ccea:	bf00      	nop

0800ccec <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ccec:	b530      	push	{r4, r5, lr}
 800ccee:	461c      	mov	r4, r3
 800ccf0:	b083      	sub	sp, #12
 800ccf2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ccf6:	b1bb      	cbz	r3, 800cd28 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ccf8:	b348      	cbz	r0, 800cd4e <osMessageQueueGet+0x62>
 800ccfa:	b341      	cbz	r1, 800cd4e <osMessageQueueGet+0x62>
 800ccfc:	bb3c      	cbnz	r4, 800cd4e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800ccfe:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cd00:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cd02:	f001 fa57 	bl	800e1b4 <xQueueReceiveFromISR>
 800cd06:	2801      	cmp	r0, #1
 800cd08:	d11d      	bne.n	800cd46 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cd0a:	9b01      	ldr	r3, [sp, #4]
 800cd0c:	b1c3      	cbz	r3, 800cd40 <osMessageQueueGet+0x54>
 800cd0e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd12:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cd16:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cd1a:	f3bf 8f4f 	dsb	sy
 800cd1e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cd22:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cd24:	b003      	add	sp, #12
 800cd26:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cd28:	b188      	cbz	r0, 800cd4e <osMessageQueueGet+0x62>
 800cd2a:	b181      	cbz	r1, 800cd4e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cd2c:	4622      	mov	r2, r4
 800cd2e:	f000 ff39 	bl	800dba4 <xQueueReceive>
 800cd32:	2801      	cmp	r0, #1
 800cd34:	d004      	beq.n	800cd40 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cd36:	b134      	cbz	r4, 800cd46 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cd38:	f06f 0001 	mvn.w	r0, #1
}
 800cd3c:	b003      	add	sp, #12
 800cd3e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800cd40:	2000      	movs	r0, #0
}
 800cd42:	b003      	add	sp, #12
 800cd44:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800cd46:	f06f 0002 	mvn.w	r0, #2
}
 800cd4a:	b003      	add	sp, #12
 800cd4c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800cd4e:	f06f 0003 	mvn.w	r0, #3
 800cd52:	e7e7      	b.n	800cd24 <osMessageQueueGet+0x38>

0800cd54 <osMessageQueueGetCount>:
 800cd54:	b130      	cbz	r0, 800cd64 <osMessageQueueGetCount+0x10>
 800cd56:	f3ef 8305 	mrs	r3, IPSR
 800cd5a:	b10b      	cbz	r3, 800cd60 <osMessageQueueGetCount+0xc>
 800cd5c:	f001 ba9e 	b.w	800e29c <uxQueueMessagesWaitingFromISR>
 800cd60:	f001 ba86 	b.w	800e270 <uxQueueMessagesWaiting>
 800cd64:	4770      	bx	lr
 800cd66:	bf00      	nop

0800cd68 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cd68:	4b04      	ldr	r3, [pc, #16]	; (800cd7c <vApplicationGetIdleTaskMemory+0x14>)
 800cd6a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cd6c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cd6e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cd70:	4c03      	ldr	r4, [pc, #12]	; (800cd80 <vApplicationGetIdleTaskMemory+0x18>)
 800cd72:	600c      	str	r4, [r1, #0]
}
 800cd74:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cd78:	6013      	str	r3, [r2, #0]
}
 800cd7a:	4770      	bx	lr
 800cd7c:	20002bd4 	.word	0x20002bd4
 800cd80:	200029d4 	.word	0x200029d4

0800cd84 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800cd84:	4b05      	ldr	r3, [pc, #20]	; (800cd9c <vApplicationGetTimerTaskMemory+0x18>)
 800cd86:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800cd88:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cd8a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cd8e:	4c04      	ldr	r4, [pc, #16]	; (800cda0 <vApplicationGetTimerTaskMemory+0x1c>)
 800cd90:	600c      	str	r4, [r1, #0]
}
 800cd92:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cd96:	6013      	str	r3, [r2, #0]
}
 800cd98:	4770      	bx	lr
 800cd9a:	bf00      	nop
 800cd9c:	20003084 	.word	0x20003084
 800cda0:	20002c84 	.word	0x20002c84

0800cda4 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800cda4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cda8:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800cdaa:	f001 ff41 	bl	800ec30 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cdae:	4a54      	ldr	r2, [pc, #336]	; (800cf00 <pvPortMalloc+0x15c>)
 800cdb0:	6816      	ldr	r6, [r2, #0]
 800cdb2:	2e00      	cmp	r6, #0
 800cdb4:	d06e      	beq.n	800ce94 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cdb6:	4b53      	ldr	r3, [pc, #332]	; (800cf04 <pvPortMalloc+0x160>)
 800cdb8:	681f      	ldr	r7, [r3, #0]
 800cdba:	423d      	tst	r5, r7
 800cdbc:	d12e      	bne.n	800ce1c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cdbe:	b36d      	cbz	r5, 800ce1c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cdc0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cdc4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cdc6:	bf1c      	itt	ne
 800cdc8:	f024 0407 	bicne.w	r4, r4, #7
 800cdcc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cdce:	b32c      	cbz	r4, 800ce1c <pvPortMalloc+0x78>
 800cdd0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cf18 <pvPortMalloc+0x174>
 800cdd4:	f8dc 5000 	ldr.w	r5, [ip]
 800cdd8:	42a5      	cmp	r5, r4
 800cdda:	d31f      	bcc.n	800ce1c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cddc:	484a      	ldr	r0, [pc, #296]	; (800cf08 <pvPortMalloc+0x164>)
 800cdde:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cde0:	e003      	b.n	800cdea <pvPortMalloc+0x46>
 800cde2:	681a      	ldr	r2, [r3, #0]
 800cde4:	b122      	cbz	r2, 800cdf0 <pvPortMalloc+0x4c>
 800cde6:	4618      	mov	r0, r3
 800cde8:	4613      	mov	r3, r2
 800cdea:	6859      	ldr	r1, [r3, #4]
 800cdec:	42a1      	cmp	r1, r4
 800cdee:	d3f8      	bcc.n	800cde2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800cdf0:	42b3      	cmp	r3, r6
 800cdf2:	d013      	beq.n	800ce1c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cdf4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cdf6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cdf8:	f858 eb08 	ldr.w	lr, [r8], #8
 800cdfc:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ce00:	2a10      	cmp	r2, #16
 800ce02:	d929      	bls.n	800ce58 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800ce04:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800ce06:	0748      	lsls	r0, r1, #29
 800ce08:	d00f      	beq.n	800ce2a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800ce0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce0e:	f383 8811 	msr	BASEPRI, r3
 800ce12:	f3bf 8f6f 	isb	sy
 800ce16:	f3bf 8f4f 	dsb	sy
 800ce1a:	e7fe      	b.n	800ce1a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ce1c:	f001 ff10 	bl	800ec40 <xTaskResumeAll>
 800ce20:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800ce24:	4640      	mov	r0, r8
 800ce26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800ce2a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ce2c:	4a36      	ldr	r2, [pc, #216]	; (800cf08 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800ce2e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ce30:	4614      	mov	r4, r2
 800ce32:	6812      	ldr	r2, [r2, #0]
 800ce34:	4291      	cmp	r1, r2
 800ce36:	d8fb      	bhi.n	800ce30 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ce38:	6860      	ldr	r0, [r4, #4]
 800ce3a:	eb04 0e00 	add.w	lr, r4, r0
 800ce3e:	4571      	cmp	r1, lr
 800ce40:	d04b      	beq.n	800ceda <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ce42:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ce46:	eb01 000e 	add.w	r0, r1, lr
 800ce4a:	4282      	cmp	r2, r0
 800ce4c:	d051      	beq.n	800cef2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800ce4e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ce50:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ce52:	bf18      	it	ne
 800ce54:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ce56:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ce58:	4a2c      	ldr	r2, [pc, #176]	; (800cf0c <pvPortMalloc+0x168>)
 800ce5a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ce5c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ce5e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800ce60:	bf38      	it	cc
 800ce62:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800ce64:	4a2a      	ldr	r2, [pc, #168]	; (800cf10 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ce66:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800ce6a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800ce6c:	2000      	movs	r0, #0
 800ce6e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800ce72:	6813      	ldr	r3, [r2, #0]
 800ce74:	3301      	adds	r3, #1
 800ce76:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800ce78:	f001 fee2 	bl	800ec40 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800ce7c:	f018 0f07 	tst.w	r8, #7
 800ce80:	d0d0      	beq.n	800ce24 <pvPortMalloc+0x80>
 800ce82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce86:	f383 8811 	msr	BASEPRI, r3
 800ce8a:	f3bf 8f6f 	isb	sy
 800ce8e:	f3bf 8f4f 	dsb	sy
 800ce92:	e7fe      	b.n	800ce92 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800ce94:	4b1f      	ldr	r3, [pc, #124]	; (800cf14 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800ce96:	075e      	lsls	r6, r3, #29
 800ce98:	d118      	bne.n	800cecc <pvPortMalloc+0x128>
 800ce9a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800ce9e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cea0:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cea2:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cea6:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cea8:	4a18      	ldr	r2, [pc, #96]	; (800cf0c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ceaa:	4817      	ldr	r0, [pc, #92]	; (800cf08 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ceac:	4c15      	ldr	r4, [pc, #84]	; (800cf04 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800ceae:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800ceb0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ceb2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ceb4:	4a18      	ldr	r2, [pc, #96]	; (800cf18 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800ceb6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800ceba:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cebc:	2200      	movs	r2, #0
 800cebe:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cec0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cec2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cec6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800ceca:	e776      	b.n	800cdba <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cecc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cece:	f021 0107 	bic.w	r1, r1, #7
 800ced2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800ced6:	460b      	mov	r3, r1
 800ced8:	e7e2      	b.n	800cea0 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ceda:	6849      	ldr	r1, [r1, #4]
 800cedc:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cee0:	eb04 010e 	add.w	r1, r4, lr
 800cee4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cee6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ceea:	d001      	beq.n	800cef0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ceec:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800ceee:	e7b2      	b.n	800ce56 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cef0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cef2:	42b2      	cmp	r2, r6
 800cef4:	d0ab      	beq.n	800ce4e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cef6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cef8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cefa:	4470      	add	r0, lr
 800cefc:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cefe:	e7a6      	b.n	800ce4e <pvPortMalloc+0xaa>
 800cf00:	20003130 	.word	0x20003130
 800cf04:	20013134 	.word	0x20013134
 800cf08:	20013148 	.word	0x20013148
 800cf0c:	2001313c 	.word	0x2001313c
 800cf10:	20013140 	.word	0x20013140
 800cf14:	20003134 	.word	0x20003134
 800cf18:	20013138 	.word	0x20013138

0800cf1c <vPortFree>:
	if( pv != NULL )
 800cf1c:	b1d0      	cbz	r0, 800cf54 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cf1e:	4a2c      	ldr	r2, [pc, #176]	; (800cfd0 <vPortFree+0xb4>)
 800cf20:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cf24:	6812      	ldr	r2, [r2, #0]
 800cf26:	4213      	tst	r3, r2
 800cf28:	d00b      	beq.n	800cf42 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cf2a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cf2e:	b191      	cbz	r1, 800cf56 <vPortFree+0x3a>
 800cf30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf34:	f383 8811 	msr	BASEPRI, r3
 800cf38:	f3bf 8f6f 	isb	sy
 800cf3c:	f3bf 8f4f 	dsb	sy
 800cf40:	e7fe      	b.n	800cf40 <vPortFree+0x24>
 800cf42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf46:	f383 8811 	msr	BASEPRI, r3
 800cf4a:	f3bf 8f6f 	isb	sy
 800cf4e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cf52:	e7fe      	b.n	800cf52 <vPortFree+0x36>
 800cf54:	4770      	bx	lr
{
 800cf56:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cf58:	ea23 0302 	bic.w	r3, r3, r2
{
 800cf5c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cf5e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cf62:	4c1c      	ldr	r4, [pc, #112]	; (800cfd4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cf64:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cf66:	f001 fe63 	bl	800ec30 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cf6a:	9801      	ldr	r0, [sp, #4]
 800cf6c:	6822      	ldr	r2, [r4, #0]
 800cf6e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cf72:	4b19      	ldr	r3, [pc, #100]	; (800cfd8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cf74:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800cf76:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cf78:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cf7a:	461a      	mov	r2, r3
 800cf7c:	681b      	ldr	r3, [r3, #0]
 800cf7e:	4298      	cmp	r0, r3
 800cf80:	d8fb      	bhi.n	800cf7a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cf82:	6854      	ldr	r4, [r2, #4]
 800cf84:	eb02 0e04 	add.w	lr, r2, r4
 800cf88:	4570      	cmp	r0, lr
 800cf8a:	d010      	beq.n	800cfae <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cf8c:	eb00 0c01 	add.w	ip, r0, r1
 800cf90:	4563      	cmp	r3, ip
 800cf92:	d014      	beq.n	800cfbe <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800cf94:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cf96:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cf98:	bf18      	it	ne
 800cf9a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800cf9c:	4a0f      	ldr	r2, [pc, #60]	; (800cfdc <vPortFree+0xc0>)
 800cf9e:	6813      	ldr	r3, [r2, #0]
 800cfa0:	3301      	adds	r3, #1
 800cfa2:	6013      	str	r3, [r2, #0]
}
 800cfa4:	b002      	add	sp, #8
 800cfa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800cfaa:	f001 be49 	b.w	800ec40 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfae:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfb0:	1850      	adds	r0, r2, r1
 800cfb2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cfb4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfb6:	d001      	beq.n	800cfbc <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfb8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800cfba:	e7ef      	b.n	800cf9c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cfbc:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cfbe:	4c08      	ldr	r4, [pc, #32]	; (800cfe0 <vPortFree+0xc4>)
 800cfc0:	6824      	ldr	r4, [r4, #0]
 800cfc2:	42a3      	cmp	r3, r4
 800cfc4:	d0e6      	beq.n	800cf94 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfc6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cfca:	4421      	add	r1, r4
 800cfcc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cfce:	e7e1      	b.n	800cf94 <vPortFree+0x78>
 800cfd0:	20013134 	.word	0x20013134
 800cfd4:	20013138 	.word	0x20013138
 800cfd8:	20013148 	.word	0x20013148
 800cfdc:	20013144 	.word	0x20013144
 800cfe0:	20003130 	.word	0x20003130

0800cfe4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cfe4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cfe8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cfec:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cfee:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cff2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cff6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800cff8:	4770      	bx	lr
 800cffa:	bf00      	nop

0800cffc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800cffc:	2300      	movs	r3, #0
 800cffe:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d000:	4770      	bx	lr
 800d002:	bf00      	nop

0800d004 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d004:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d006:	689a      	ldr	r2, [r3, #8]
 800d008:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d00a:	6802      	ldr	r2, [r0, #0]
{
 800d00c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d00e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d010:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d012:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d014:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d016:	6099      	str	r1, [r3, #8]
}
 800d018:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d01c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d01e:	6002      	str	r2, [r0, #0]
}
 800d020:	4770      	bx	lr
 800d022:	bf00      	nop

0800d024 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d024:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d026:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d028:	1c6b      	adds	r3, r5, #1
 800d02a:	d010      	beq.n	800d04e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d02c:	f100 0308 	add.w	r3, r0, #8
 800d030:	461c      	mov	r4, r3
 800d032:	685b      	ldr	r3, [r3, #4]
 800d034:	681a      	ldr	r2, [r3, #0]
 800d036:	42aa      	cmp	r2, r5
 800d038:	d9fa      	bls.n	800d030 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d03a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d03c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d03e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d040:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d042:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d044:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d046:	6108      	str	r0, [r1, #16]
}
 800d048:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d04a:	6002      	str	r2, [r0, #0]
}
 800d04c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d04e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d050:	6863      	ldr	r3, [r4, #4]
 800d052:	e7f2      	b.n	800d03a <vListInsert+0x16>

0800d054 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d054:	6903      	ldr	r3, [r0, #16]
{
 800d056:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d058:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d05c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d05e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d060:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d062:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d064:	bf08      	it	eq
 800d066:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d068:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d06a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d06e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d070:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d072:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d074:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d076:	6818      	ldr	r0, [r3, #0]
}
 800d078:	4770      	bx	lr
 800d07a:	bf00      	nop

0800d07c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d07c:	4808      	ldr	r0, [pc, #32]	; (800d0a0 <prvPortStartFirstTask+0x24>)
 800d07e:	6800      	ldr	r0, [r0, #0]
 800d080:	6800      	ldr	r0, [r0, #0]
 800d082:	f380 8808 	msr	MSP, r0
 800d086:	f04f 0000 	mov.w	r0, #0
 800d08a:	f380 8814 	msr	CONTROL, r0
 800d08e:	b662      	cpsie	i
 800d090:	b661      	cpsie	f
 800d092:	f3bf 8f4f 	dsb	sy
 800d096:	f3bf 8f6f 	isb	sy
 800d09a:	df00      	svc	0
 800d09c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d09e:	0000      	.short	0x0000
 800d0a0:	e000ed08 	.word	0xe000ed08

0800d0a4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d0a4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d0b4 <vPortEnableVFP+0x10>
 800d0a8:	6801      	ldr	r1, [r0, #0]
 800d0aa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d0ae:	6001      	str	r1, [r0, #0]
 800d0b0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d0b2:	0000      	.short	0x0000
 800d0b4:	e000ed88 	.word	0xe000ed88

0800d0b8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d0b8:	4b0e      	ldr	r3, [pc, #56]	; (800d0f4 <prvTaskExitError+0x3c>)
 800d0ba:	681b      	ldr	r3, [r3, #0]
{
 800d0bc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d0be:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d0c0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d0c2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d0c4:	d008      	beq.n	800d0d8 <prvTaskExitError+0x20>
 800d0c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0ca:	f383 8811 	msr	BASEPRI, r3
 800d0ce:	f3bf 8f6f 	isb	sy
 800d0d2:	f3bf 8f4f 	dsb	sy
 800d0d6:	e7fe      	b.n	800d0d6 <prvTaskExitError+0x1e>
 800d0d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0dc:	f383 8811 	msr	BASEPRI, r3
 800d0e0:	f3bf 8f6f 	isb	sy
 800d0e4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d0e8:	9b01      	ldr	r3, [sp, #4]
 800d0ea:	2b00      	cmp	r3, #0
 800d0ec:	d0fc      	beq.n	800d0e8 <prvTaskExitError+0x30>
}
 800d0ee:	b002      	add	sp, #8
 800d0f0:	4770      	bx	lr
 800d0f2:	bf00      	nop
 800d0f4:	20000084 	.word	0x20000084

0800d0f8 <pxPortInitialiseStack>:
{
 800d0f8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d0fa:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d0fe:	4c07      	ldr	r4, [pc, #28]	; (800d11c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d100:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d104:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d108:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d10c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d110:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d114:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d118:	3844      	subs	r0, #68	; 0x44
 800d11a:	4770      	bx	lr
 800d11c:	0800d0b9 	.word	0x0800d0b9

0800d120 <SVC_Handler>:
	__asm volatile (
 800d120:	4b07      	ldr	r3, [pc, #28]	; (800d140 <pxCurrentTCBConst2>)
 800d122:	6819      	ldr	r1, [r3, #0]
 800d124:	6808      	ldr	r0, [r1, #0]
 800d126:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d12a:	f380 8809 	msr	PSP, r0
 800d12e:	f3bf 8f6f 	isb	sy
 800d132:	f04f 0000 	mov.w	r0, #0
 800d136:	f380 8811 	msr	BASEPRI, r0
 800d13a:	4770      	bx	lr
 800d13c:	f3af 8000 	nop.w

0800d140 <pxCurrentTCBConst2>:
 800d140:	20013198 	.word	0x20013198

0800d144 <vPortEnterCritical>:
 800d144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d148:	f383 8811 	msr	BASEPRI, r3
 800d14c:	f3bf 8f6f 	isb	sy
 800d150:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d154:	4a0b      	ldr	r2, [pc, #44]	; (800d184 <vPortEnterCritical+0x40>)
 800d156:	6813      	ldr	r3, [r2, #0]
 800d158:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d15a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d15c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d15e:	d000      	beq.n	800d162 <vPortEnterCritical+0x1e>
}
 800d160:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d162:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d166:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d16a:	b2db      	uxtb	r3, r3
 800d16c:	2b00      	cmp	r3, #0
 800d16e:	d0f7      	beq.n	800d160 <vPortEnterCritical+0x1c>
 800d170:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d174:	f383 8811 	msr	BASEPRI, r3
 800d178:	f3bf 8f6f 	isb	sy
 800d17c:	f3bf 8f4f 	dsb	sy
 800d180:	e7fe      	b.n	800d180 <vPortEnterCritical+0x3c>
 800d182:	bf00      	nop
 800d184:	20000084 	.word	0x20000084

0800d188 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d188:	4a08      	ldr	r2, [pc, #32]	; (800d1ac <vPortExitCritical+0x24>)
 800d18a:	6813      	ldr	r3, [r2, #0]
 800d18c:	b943      	cbnz	r3, 800d1a0 <vPortExitCritical+0x18>
 800d18e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d192:	f383 8811 	msr	BASEPRI, r3
 800d196:	f3bf 8f6f 	isb	sy
 800d19a:	f3bf 8f4f 	dsb	sy
 800d19e:	e7fe      	b.n	800d19e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d1a0:	3b01      	subs	r3, #1
 800d1a2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d1a4:	b90b      	cbnz	r3, 800d1aa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d1a6:	f383 8811 	msr	BASEPRI, r3
}
 800d1aa:	4770      	bx	lr
 800d1ac:	20000084 	.word	0x20000084

0800d1b0 <PendSV_Handler>:
	__asm volatile
 800d1b0:	f3ef 8009 	mrs	r0, PSP
 800d1b4:	f3bf 8f6f 	isb	sy
 800d1b8:	4b15      	ldr	r3, [pc, #84]	; (800d210 <pxCurrentTCBConst>)
 800d1ba:	681a      	ldr	r2, [r3, #0]
 800d1bc:	f01e 0f10 	tst.w	lr, #16
 800d1c0:	bf08      	it	eq
 800d1c2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d1c6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1ca:	6010      	str	r0, [r2, #0]
 800d1cc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d1d0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d1d4:	f380 8811 	msr	BASEPRI, r0
 800d1d8:	f3bf 8f4f 	dsb	sy
 800d1dc:	f3bf 8f6f 	isb	sy
 800d1e0:	f001 fd54 	bl	800ec8c <vTaskSwitchContext>
 800d1e4:	f04f 0000 	mov.w	r0, #0
 800d1e8:	f380 8811 	msr	BASEPRI, r0
 800d1ec:	bc09      	pop	{r0, r3}
 800d1ee:	6819      	ldr	r1, [r3, #0]
 800d1f0:	6808      	ldr	r0, [r1, #0]
 800d1f2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1f6:	f01e 0f10 	tst.w	lr, #16
 800d1fa:	bf08      	it	eq
 800d1fc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d200:	f380 8809 	msr	PSP, r0
 800d204:	f3bf 8f6f 	isb	sy
 800d208:	4770      	bx	lr
 800d20a:	bf00      	nop
 800d20c:	f3af 8000 	nop.w

0800d210 <pxCurrentTCBConst>:
 800d210:	20013198 	.word	0x20013198

0800d214 <xPortSysTickHandler>:
{
 800d214:	b508      	push	{r3, lr}
	__asm volatile
 800d216:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d21a:	f383 8811 	msr	BASEPRI, r3
 800d21e:	f3bf 8f6f 	isb	sy
 800d222:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d226:	f001 fd21 	bl	800ec6c <xTaskIncrementTick>
 800d22a:	b128      	cbz	r0, 800d238 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d22c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d230:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d234:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d238:	2300      	movs	r3, #0
 800d23a:	f383 8811 	msr	BASEPRI, r3
}
 800d23e:	bd08      	pop	{r3, pc}

0800d240 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d240:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d244:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d246:	4906      	ldr	r1, [pc, #24]	; (800d260 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d248:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d24a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d24c:	680b      	ldr	r3, [r1, #0]
 800d24e:	4905      	ldr	r1, [pc, #20]	; (800d264 <vPortSetupTimerInterrupt+0x24>)
 800d250:	fba1 1303 	umull	r1, r3, r1, r3
 800d254:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d256:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d258:	3b01      	subs	r3, #1
 800d25a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d25c:	6110      	str	r0, [r2, #16]
}
 800d25e:	4770      	bx	lr
 800d260:	20000078 	.word	0x20000078
 800d264:	10624dd3 	.word	0x10624dd3

0800d268 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d268:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d26c:	4a49      	ldr	r2, [pc, #292]	; (800d394 <xPortStartScheduler+0x12c>)
 800d26e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d272:	4291      	cmp	r1, r2
 800d274:	d043      	beq.n	800d2fe <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d276:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d27a:	4b47      	ldr	r3, [pc, #284]	; (800d398 <xPortStartScheduler+0x130>)
 800d27c:	429a      	cmp	r2, r3
 800d27e:	d035      	beq.n	800d2ec <xPortStartScheduler+0x84>
{
 800d280:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d282:	4b46      	ldr	r3, [pc, #280]	; (800d39c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d284:	4846      	ldr	r0, [pc, #280]	; (800d3a0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d286:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d288:	4c46      	ldr	r4, [pc, #280]	; (800d3a4 <xPortStartScheduler+0x13c>)
{
 800d28a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d28c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d28e:	b2d2      	uxtb	r2, r2
 800d290:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d292:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d294:	781b      	ldrb	r3, [r3, #0]
 800d296:	b2db      	uxtb	r3, r3
 800d298:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d29c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d2a0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d2a4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d2a8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d2aa:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d2ac:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d2ae:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d2b0:	bf48      	it	mi
 800d2b2:	2206      	movmi	r2, #6
 800d2b4:	d511      	bpl.n	800d2da <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d2b6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d2ba:	005b      	lsls	r3, r3, #1
 800d2bc:	b2db      	uxtb	r3, r3
 800d2be:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d2c2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d2c6:	0609      	lsls	r1, r1, #24
 800d2c8:	4610      	mov	r0, r2
 800d2ca:	f102 32ff 	add.w	r2, r2, #4294967295
 800d2ce:	d4f2      	bmi.n	800d2b6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d2d0:	2803      	cmp	r0, #3
 800d2d2:	6020      	str	r0, [r4, #0]
 800d2d4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d2d8:	d01a      	beq.n	800d310 <xPortStartScheduler+0xa8>
	__asm volatile
 800d2da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2de:	f383 8811 	msr	BASEPRI, r3
 800d2e2:	f3bf 8f6f 	isb	sy
 800d2e6:	f3bf 8f4f 	dsb	sy
 800d2ea:	e7fe      	b.n	800d2ea <xPortStartScheduler+0x82>
 800d2ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f0:	f383 8811 	msr	BASEPRI, r3
 800d2f4:	f3bf 8f6f 	isb	sy
 800d2f8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d2fc:	e7fe      	b.n	800d2fc <xPortStartScheduler+0x94>
 800d2fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d302:	f383 8811 	msr	BASEPRI, r3
 800d306:	f3bf 8f6f 	isb	sy
 800d30a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d30e:	e7fe      	b.n	800d30e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d310:	9b02      	ldr	r3, [sp, #8]
 800d312:	4a22      	ldr	r2, [pc, #136]	; (800d39c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d314:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d318:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d31c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d31e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d320:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d322:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d326:	4c20      	ldr	r4, [pc, #128]	; (800d3a8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d328:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d32c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d330:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d334:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d338:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d33c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d33e:	f7ff ff7f 	bl	800d240 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d342:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d344:	f7ff feae 	bl	800d0a4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d348:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d34c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d350:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d354:	f7ff fe92 	bl	800d07c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d358:	f001 fc98 	bl	800ec8c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d35c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d35e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d360:	3301      	adds	r3, #1
 800d362:	d008      	beq.n	800d376 <xPortStartScheduler+0x10e>
 800d364:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d368:	f383 8811 	msr	BASEPRI, r3
 800d36c:	f3bf 8f6f 	isb	sy
 800d370:	f3bf 8f4f 	dsb	sy
 800d374:	e7fe      	b.n	800d374 <xPortStartScheduler+0x10c>
 800d376:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d37a:	f383 8811 	msr	BASEPRI, r3
 800d37e:	f3bf 8f6f 	isb	sy
 800d382:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d386:	9b03      	ldr	r3, [sp, #12]
 800d388:	2b00      	cmp	r3, #0
 800d38a:	d0fc      	beq.n	800d386 <xPortStartScheduler+0x11e>
}
 800d38c:	2000      	movs	r0, #0
 800d38e:	b004      	add	sp, #16
 800d390:	bd70      	pop	{r4, r5, r6, pc}
 800d392:	bf00      	nop
 800d394:	410fc271 	.word	0x410fc271
 800d398:	410fc270 	.word	0x410fc270
 800d39c:	e000e400 	.word	0xe000e400
 800d3a0:	20013150 	.word	0x20013150
 800d3a4:	20013154 	.word	0x20013154
 800d3a8:	20000084 	.word	0x20000084

0800d3ac <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d3ac:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d3b0:	2b0f      	cmp	r3, #15
 800d3b2:	d90e      	bls.n	800d3d2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d3b4:	4911      	ldr	r1, [pc, #68]	; (800d3fc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d3b6:	4a12      	ldr	r2, [pc, #72]	; (800d400 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d3b8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d3ba:	7812      	ldrb	r2, [r2, #0]
 800d3bc:	429a      	cmp	r2, r3
 800d3be:	d908      	bls.n	800d3d2 <vPortValidateInterruptPriority+0x26>
 800d3c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3c4:	f383 8811 	msr	BASEPRI, r3
 800d3c8:	f3bf 8f6f 	isb	sy
 800d3cc:	f3bf 8f4f 	dsb	sy
 800d3d0:	e7fe      	b.n	800d3d0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d3d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d3d6:	4a0b      	ldr	r2, [pc, #44]	; (800d404 <vPortValidateInterruptPriority+0x58>)
 800d3d8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d3dc:	6812      	ldr	r2, [r2, #0]
 800d3de:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d3e2:	4293      	cmp	r3, r2
 800d3e4:	d908      	bls.n	800d3f8 <vPortValidateInterruptPriority+0x4c>
 800d3e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3ea:	f383 8811 	msr	BASEPRI, r3
 800d3ee:	f3bf 8f6f 	isb	sy
 800d3f2:	f3bf 8f4f 	dsb	sy
 800d3f6:	e7fe      	b.n	800d3f6 <vPortValidateInterruptPriority+0x4a>
	}
 800d3f8:	4770      	bx	lr
 800d3fa:	bf00      	nop
 800d3fc:	e000e3f0 	.word	0xe000e3f0
 800d400:	20013150 	.word	0x20013150
 800d404:	20013154 	.word	0x20013154

0800d408 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d408:	b570      	push	{r4, r5, r6, lr}
 800d40a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d40c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d40e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d410:	b920      	cbnz	r0, 800d41c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d412:	6825      	ldr	r5, [r4, #0]
 800d414:	b34d      	cbz	r5, 800d46a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d416:	3601      	adds	r6, #1
 800d418:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d41a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d41c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d41e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d420:	b97d      	cbnz	r5, 800d442 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d422:	6860      	ldr	r0, [r4, #4]
 800d424:	f01b fbaf 	bl	8028b86 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d428:	6863      	ldr	r3, [r4, #4]
 800d42a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d42c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d42e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d430:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d432:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d434:	bf24      	itt	cs
 800d436:	6823      	ldrcs	r3, [r4, #0]
 800d438:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d43a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d43c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d43e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d440:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d442:	68e0      	ldr	r0, [r4, #12]
 800d444:	f01b fb9f 	bl	8028b86 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d448:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d44a:	68e3      	ldr	r3, [r4, #12]
 800d44c:	4251      	negs	r1, r2
 800d44e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d450:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d452:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d454:	4293      	cmp	r3, r2
 800d456:	d202      	bcs.n	800d45e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d458:	68a3      	ldr	r3, [r4, #8]
 800d45a:	440b      	add	r3, r1
 800d45c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d45e:	2d02      	cmp	r5, #2
 800d460:	d008      	beq.n	800d474 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d462:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d464:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d466:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d468:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d46a:	68a0      	ldr	r0, [r4, #8]
 800d46c:	f001 fde0 	bl	800f030 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d470:	60a5      	str	r5, [r4, #8]
 800d472:	e7d0      	b.n	800d416 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d474:	2e01      	cmp	r6, #1
 800d476:	bf38      	it	cc
 800d478:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d47a:	2000      	movs	r0, #0
 800d47c:	e7cc      	b.n	800d418 <prvCopyDataToQueue+0x10>
 800d47e:	bf00      	nop

0800d480 <xQueueGenericCreateStatic>:
	{
 800d480:	b530      	push	{r4, r5, lr}
 800d482:	b083      	sub	sp, #12
 800d484:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d488:	b940      	cbnz	r0, 800d49c <xQueueGenericCreateStatic+0x1c>
 800d48a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d48e:	f383 8811 	msr	BASEPRI, r3
 800d492:	f3bf 8f6f 	isb	sy
 800d496:	f3bf 8f4f 	dsb	sy
 800d49a:	e7fe      	b.n	800d49a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d49c:	461d      	mov	r5, r3
 800d49e:	b17b      	cbz	r3, 800d4c0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d4a0:	b302      	cbz	r2, 800d4e4 <xQueueGenericCreateStatic+0x64>
 800d4a2:	b1b1      	cbz	r1, 800d4d2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d4a4:	2350      	movs	r3, #80	; 0x50
 800d4a6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d4a8:	9b01      	ldr	r3, [sp, #4]
 800d4aa:	2b50      	cmp	r3, #80	; 0x50
 800d4ac:	d023      	beq.n	800d4f6 <xQueueGenericCreateStatic+0x76>
 800d4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b2:	f383 8811 	msr	BASEPRI, r3
 800d4b6:	f3bf 8f6f 	isb	sy
 800d4ba:	f3bf 8f4f 	dsb	sy
 800d4be:	e7fe      	b.n	800d4be <xQueueGenericCreateStatic+0x3e>
 800d4c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4c4:	f383 8811 	msr	BASEPRI, r3
 800d4c8:	f3bf 8f6f 	isb	sy
 800d4cc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d4d0:	e7fe      	b.n	800d4d0 <xQueueGenericCreateStatic+0x50>
 800d4d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4d6:	f383 8811 	msr	BASEPRI, r3
 800d4da:	f3bf 8f6f 	isb	sy
 800d4de:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d4e2:	e7fe      	b.n	800d4e2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d4e4:	bb89      	cbnz	r1, 800d54a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d4e6:	2250      	movs	r2, #80	; 0x50
 800d4e8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d4ea:	9a01      	ldr	r2, [sp, #4]
 800d4ec:	2a50      	cmp	r2, #80	; 0x50
 800d4ee:	d1de      	bne.n	800d4ae <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d4f0:	9a01      	ldr	r2, [sp, #4]
 800d4f2:	462a      	mov	r2, r5
 800d4f4:	e000      	b.n	800d4f8 <xQueueGenericCreateStatic+0x78>
 800d4f6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d4f8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d4fa:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d4fc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d500:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d504:	f7ff fe1e 	bl	800d144 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d508:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d50c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d50e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d510:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d514:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d516:	4401      	add	r1, r0
 800d518:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d51a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d51c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d51e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d520:	21ff      	movs	r1, #255	; 0xff
 800d522:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d526:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d528:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d52c:	f105 0010 	add.w	r0, r5, #16
 800d530:	f7ff fd58 	bl	800cfe4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d534:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d538:	f7ff fd54 	bl	800cfe4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d53c:	f7ff fe24 	bl	800d188 <vPortExitCritical>
	}
 800d540:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d542:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d546:	b003      	add	sp, #12
 800d548:	bd30      	pop	{r4, r5, pc}
 800d54a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d54e:	f383 8811 	msr	BASEPRI, r3
 800d552:	f3bf 8f6f 	isb	sy
 800d556:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d55a:	e7fe      	b.n	800d55a <xQueueGenericCreateStatic+0xda>

0800d55c <xQueueGenericCreate>:
	{
 800d55c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d55e:	b940      	cbnz	r0, 800d572 <xQueueGenericCreate+0x16>
 800d560:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d564:	f383 8811 	msr	BASEPRI, r3
 800d568:	f3bf 8f6f 	isb	sy
 800d56c:	f3bf 8f4f 	dsb	sy
 800d570:	e7fe      	b.n	800d570 <xQueueGenericCreate+0x14>
 800d572:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d574:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d578:	3050      	adds	r0, #80	; 0x50
 800d57a:	460e      	mov	r6, r1
 800d57c:	4617      	mov	r7, r2
 800d57e:	f7ff fc11 	bl	800cda4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d582:	4604      	mov	r4, r0
 800d584:	b340      	cbz	r0, 800d5d8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d586:	2300      	movs	r3, #0
 800d588:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d58c:	b336      	cbz	r6, 800d5dc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d58e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d592:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d594:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d598:	f7ff fdd4 	bl	800d144 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d59c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d5a0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d5a2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5a4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5a8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5aa:	440a      	add	r2, r1
 800d5ac:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5ae:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5b0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d5b2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d5b4:	22ff      	movs	r2, #255	; 0xff
 800d5b6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d5ba:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d5bc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d5c0:	f104 0010 	add.w	r0, r4, #16
 800d5c4:	f7ff fd0e 	bl	800cfe4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d5c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d5cc:	f7ff fd0a 	bl	800cfe4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d5d0:	f7ff fdda 	bl	800d188 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d5d4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d5d8:	4620      	mov	r0, r4
 800d5da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d5dc:	4603      	mov	r3, r0
 800d5de:	e7d8      	b.n	800d592 <xQueueGenericCreate+0x36>

0800d5e0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d5e0:	b940      	cbnz	r0, 800d5f4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d5e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5e6:	f383 8811 	msr	BASEPRI, r3
 800d5ea:	f3bf 8f6f 	isb	sy
 800d5ee:	f3bf 8f4f 	dsb	sy
 800d5f2:	e7fe      	b.n	800d5f2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d5f4:	4288      	cmp	r0, r1
 800d5f6:	d208      	bcs.n	800d60a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d5f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5fc:	f383 8811 	msr	BASEPRI, r3
 800d600:	f3bf 8f6f 	isb	sy
 800d604:	f3bf 8f4f 	dsb	sy
 800d608:	e7fe      	b.n	800d608 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d60a:	b530      	push	{r4, r5, lr}
 800d60c:	4615      	mov	r5, r2
 800d60e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d610:	2a00      	cmp	r2, #0
 800d612:	d03c      	beq.n	800d68e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d614:	2350      	movs	r3, #80	; 0x50
 800d616:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d618:	9b03      	ldr	r3, [sp, #12]
 800d61a:	2b50      	cmp	r3, #80	; 0x50
 800d61c:	d008      	beq.n	800d630 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d61e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d622:	f383 8811 	msr	BASEPRI, r3
 800d626:	f3bf 8f6f 	isb	sy
 800d62a:	f3bf 8f4f 	dsb	sy
 800d62e:	e7fe      	b.n	800d62e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d630:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d632:	2301      	movs	r3, #1
 800d634:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d638:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d63a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d63e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d640:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d642:	f7ff fd7f 	bl	800d144 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d646:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d64a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d64c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d64e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d652:	1ac3      	subs	r3, r0, r3
 800d654:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d656:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d658:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d65c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d660:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d662:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d664:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d668:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d66a:	f105 0010 	add.w	r0, r5, #16
 800d66e:	f7ff fcb9 	bl	800cfe4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d672:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d676:	f7ff fcb5 	bl	800cfe4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d67a:	f7ff fd85 	bl	800d188 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d67e:	9901      	ldr	r1, [sp, #4]
 800d680:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d682:	2302      	movs	r3, #2
	}
 800d684:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d686:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d68a:	b005      	add	sp, #20
 800d68c:	bd30      	pop	{r4, r5, pc}
 800d68e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d692:	f383 8811 	msr	BASEPRI, r3
 800d696:	f3bf 8f6f 	isb	sy
 800d69a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d69e:	e7fe      	b.n	800d69e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d6a0 <xQueueCreateCountingSemaphore>:
	{
 800d6a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d6a2:	b940      	cbnz	r0, 800d6b6 <xQueueCreateCountingSemaphore+0x16>
 800d6a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6a8:	f383 8811 	msr	BASEPRI, r3
 800d6ac:	f3bf 8f6f 	isb	sy
 800d6b0:	f3bf 8f4f 	dsb	sy
 800d6b4:	e7fe      	b.n	800d6b4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d6b6:	4288      	cmp	r0, r1
 800d6b8:	460e      	mov	r6, r1
 800d6ba:	4604      	mov	r4, r0
 800d6bc:	d208      	bcs.n	800d6d0 <xQueueCreateCountingSemaphore+0x30>
 800d6be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6c2:	f383 8811 	msr	BASEPRI, r3
 800d6c6:	f3bf 8f6f 	isb	sy
 800d6ca:	f3bf 8f4f 	dsb	sy
 800d6ce:	e7fe      	b.n	800d6ce <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d6d0:	2050      	movs	r0, #80	; 0x50
 800d6d2:	f7ff fb67 	bl	800cda4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d6d6:	4605      	mov	r5, r0
 800d6d8:	b330      	cbz	r0, 800d728 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d6da:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d6dc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d6e0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d6e4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d6e6:	f7ff fd2d 	bl	800d144 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6ea:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d6ee:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d6f0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6f2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6f6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6f8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6fa:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d6fc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d6fe:	22ff      	movs	r2, #255	; 0xff
 800d700:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d704:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d706:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d708:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d70c:	f105 0010 	add.w	r0, r5, #16
 800d710:	f7ff fc68 	bl	800cfe4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d714:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d718:	f7ff fc64 	bl	800cfe4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d71c:	f7ff fd34 	bl	800d188 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d720:	2302      	movs	r3, #2
 800d722:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d726:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d728:	4628      	mov	r0, r5
 800d72a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d72c <xQueueGenericSend>:
{
 800d72c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d730:	b085      	sub	sp, #20
 800d732:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d734:	2800      	cmp	r0, #0
 800d736:	f000 80a4 	beq.w	800d882 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d73a:	4688      	mov	r8, r1
 800d73c:	461f      	mov	r7, r3
 800d73e:	4604      	mov	r4, r0
 800d740:	2900      	cmp	r1, #0
 800d742:	f000 8091 	beq.w	800d868 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d746:	2f02      	cmp	r7, #2
 800d748:	d10b      	bne.n	800d762 <xQueueGenericSend+0x36>
 800d74a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d74c:	2b01      	cmp	r3, #1
 800d74e:	d008      	beq.n	800d762 <xQueueGenericSend+0x36>
 800d750:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d754:	f383 8811 	msr	BASEPRI, r3
 800d758:	f3bf 8f6f 	isb	sy
 800d75c:	f3bf 8f4f 	dsb	sy
 800d760:	e7fe      	b.n	800d760 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d762:	f001 fc0f 	bl	800ef84 <xTaskGetSchedulerState>
 800d766:	4605      	mov	r5, r0
 800d768:	2800      	cmp	r0, #0
 800d76a:	f000 8093 	beq.w	800d894 <xQueueGenericSend+0x168>
 800d76e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d770:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d774:	f7ff fce6 	bl	800d144 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d778:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d77a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d77c:	429a      	cmp	r2, r3
 800d77e:	f0c0 80ef 	bcc.w	800d960 <xQueueGenericSend+0x234>
 800d782:	2f02      	cmp	r7, #2
 800d784:	f000 80ec 	beq.w	800d960 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d788:	9801      	ldr	r0, [sp, #4]
 800d78a:	2800      	cmp	r0, #0
 800d78c:	f000 8101 	beq.w	800d992 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d790:	2d00      	cmp	r5, #0
 800d792:	f000 80e1 	beq.w	800d958 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d796:	f7ff fcf7 	bl	800d188 <vPortExitCritical>
		vTaskSuspendAll();
 800d79a:	f001 fa49 	bl	800ec30 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d79e:	f7ff fcd1 	bl	800d144 <vPortEnterCritical>
 800d7a2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d7a6:	2bff      	cmp	r3, #255	; 0xff
 800d7a8:	bf04      	itt	eq
 800d7aa:	2300      	moveq	r3, #0
 800d7ac:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d7b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d7b4:	2bff      	cmp	r3, #255	; 0xff
 800d7b6:	bf04      	itt	eq
 800d7b8:	2300      	moveq	r3, #0
 800d7ba:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d7be:	f7ff fce3 	bl	800d188 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d7c2:	a901      	add	r1, sp, #4
 800d7c4:	a802      	add	r0, sp, #8
 800d7c6:	f001 fb8f 	bl	800eee8 <xTaskCheckForTimeOut>
 800d7ca:	2800      	cmp	r0, #0
 800d7cc:	f040 80e6 	bne.w	800d99c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d7d0:	f7ff fcb8 	bl	800d144 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d7d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d7d6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d7d8:	429a      	cmp	r2, r3
 800d7da:	d068      	beq.n	800d8ae <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d7dc:	f7ff fcd4 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d7e0:	f7ff fcb0 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d7e4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d7e8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d7ea:	2d00      	cmp	r5, #0
 800d7ec:	dc04      	bgt.n	800d7f8 <xQueueGenericSend+0xcc>
 800d7ee:	e011      	b.n	800d814 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d7f0:	1e6a      	subs	r2, r5, #1
 800d7f2:	b2d3      	uxtb	r3, r2
 800d7f4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d7f6:	b16b      	cbz	r3, 800d814 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d7f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7fa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d7fc:	b153      	cbz	r3, 800d814 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7fe:	f001 fb1f 	bl	800ee40 <xTaskRemoveFromEventList>
 800d802:	2800      	cmp	r0, #0
 800d804:	d0f4      	beq.n	800d7f0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d806:	f001 fbb7 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800d80a:	1e6a      	subs	r2, r5, #1
 800d80c:	b2d3      	uxtb	r3, r2
 800d80e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d810:	2b00      	cmp	r3, #0
 800d812:	d1f1      	bne.n	800d7f8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d814:	23ff      	movs	r3, #255	; 0xff
 800d816:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d81a:	f7ff fcb5 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d81e:	f7ff fc91 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d822:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d826:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d828:	2d00      	cmp	r5, #0
 800d82a:	dd14      	ble.n	800d856 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d82c:	f104 0910 	add.w	r9, r4, #16
 800d830:	e003      	b.n	800d83a <xQueueGenericSend+0x10e>
				--cRxLock;
 800d832:	1e6a      	subs	r2, r5, #1
 800d834:	b2d3      	uxtb	r3, r2
 800d836:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d838:	b16b      	cbz	r3, 800d856 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d83a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d83c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d83e:	b153      	cbz	r3, 800d856 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d840:	f001 fafe 	bl	800ee40 <xTaskRemoveFromEventList>
 800d844:	2800      	cmp	r0, #0
 800d846:	d0f4      	beq.n	800d832 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d848:	f001 fb96 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800d84c:	1e6a      	subs	r2, r5, #1
 800d84e:	b2d3      	uxtb	r3, r2
 800d850:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d852:	2b00      	cmp	r3, #0
 800d854:	d1f1      	bne.n	800d83a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d856:	23ff      	movs	r3, #255	; 0xff
 800d858:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d85c:	f7ff fc94 	bl	800d188 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d860:	f001 f9ee 	bl	800ec40 <xTaskResumeAll>
 800d864:	2501      	movs	r5, #1
 800d866:	e785      	b.n	800d774 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d868:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d86a:	2b00      	cmp	r3, #0
 800d86c:	f43f af6b 	beq.w	800d746 <xQueueGenericSend+0x1a>
 800d870:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d874:	f383 8811 	msr	BASEPRI, r3
 800d878:	f3bf 8f6f 	isb	sy
 800d87c:	f3bf 8f4f 	dsb	sy
 800d880:	e7fe      	b.n	800d880 <xQueueGenericSend+0x154>
 800d882:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d886:	f383 8811 	msr	BASEPRI, r3
 800d88a:	f3bf 8f6f 	isb	sy
 800d88e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d892:	e7fe      	b.n	800d892 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d894:	9b01      	ldr	r3, [sp, #4]
 800d896:	2b00      	cmp	r3, #0
 800d898:	f43f af6a 	beq.w	800d770 <xQueueGenericSend+0x44>
 800d89c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8a0:	f383 8811 	msr	BASEPRI, r3
 800d8a4:	f3bf 8f6f 	isb	sy
 800d8a8:	f3bf 8f4f 	dsb	sy
 800d8ac:	e7fe      	b.n	800d8ac <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d8ae:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d8b2:	f7ff fc69 	bl	800d188 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d8b6:	9901      	ldr	r1, [sp, #4]
 800d8b8:	4648      	mov	r0, r9
 800d8ba:	f001 fa33 	bl	800ed24 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d8be:	f7ff fc41 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d8c2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d8c6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8c8:	2d00      	cmp	r5, #0
 800d8ca:	dc04      	bgt.n	800d8d6 <xQueueGenericSend+0x1aa>
 800d8cc:	e011      	b.n	800d8f2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d8ce:	1e6b      	subs	r3, r5, #1
 800d8d0:	b2da      	uxtb	r2, r3
 800d8d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8d4:	b16a      	cbz	r2, 800d8f2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d8d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8d8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d8da:	b153      	cbz	r3, 800d8f2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d8dc:	f001 fab0 	bl	800ee40 <xTaskRemoveFromEventList>
 800d8e0:	2800      	cmp	r0, #0
 800d8e2:	d0f4      	beq.n	800d8ce <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d8e4:	f001 fb48 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800d8e8:	1e6b      	subs	r3, r5, #1
 800d8ea:	b2da      	uxtb	r2, r3
 800d8ec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8ee:	2a00      	cmp	r2, #0
 800d8f0:	d1f1      	bne.n	800d8d6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d8f2:	23ff      	movs	r3, #255	; 0xff
 800d8f4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d8f8:	f7ff fc46 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d8fc:	f7ff fc22 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d900:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d904:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d906:	2d00      	cmp	r5, #0
 800d908:	dc04      	bgt.n	800d914 <xQueueGenericSend+0x1e8>
 800d90a:	e011      	b.n	800d930 <xQueueGenericSend+0x204>
				--cRxLock;
 800d90c:	1e6b      	subs	r3, r5, #1
 800d90e:	b2da      	uxtb	r2, r3
 800d910:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d912:	b16a      	cbz	r2, 800d930 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d914:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d916:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d918:	b153      	cbz	r3, 800d930 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d91a:	f001 fa91 	bl	800ee40 <xTaskRemoveFromEventList>
 800d91e:	2800      	cmp	r0, #0
 800d920:	d0f4      	beq.n	800d90c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d922:	f001 fb29 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800d926:	1e6b      	subs	r3, r5, #1
 800d928:	b2da      	uxtb	r2, r3
 800d92a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d92c:	2a00      	cmp	r2, #0
 800d92e:	d1f1      	bne.n	800d914 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d930:	23ff      	movs	r3, #255	; 0xff
 800d932:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d936:	f7ff fc27 	bl	800d188 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d93a:	f001 f981 	bl	800ec40 <xTaskResumeAll>
 800d93e:	2800      	cmp	r0, #0
 800d940:	d190      	bne.n	800d864 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d942:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d946:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d94a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d94e:	f3bf 8f4f 	dsb	sy
 800d952:	f3bf 8f6f 	isb	sy
 800d956:	e785      	b.n	800d864 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d958:	a802      	add	r0, sp, #8
 800d95a:	f001 fab9 	bl	800eed0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d95e:	e71a      	b.n	800d796 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d960:	463a      	mov	r2, r7
 800d962:	4641      	mov	r1, r8
 800d964:	4620      	mov	r0, r4
 800d966:	f7ff fd4f 	bl	800d408 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d96a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d96c:	2b00      	cmp	r3, #0
 800d96e:	d153      	bne.n	800da18 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d970:	b148      	cbz	r0, 800d986 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d972:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d976:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d97a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d97e:	f3bf 8f4f 	dsb	sy
 800d982:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d986:	f7ff fbff 	bl	800d188 <vPortExitCritical>
				return pdPASS;
 800d98a:	2001      	movs	r0, #1
}
 800d98c:	b005      	add	sp, #20
 800d98e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d992:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d994:	f7ff fbf8 	bl	800d188 <vPortExitCritical>
					return errQUEUE_FULL;
 800d998:	9800      	ldr	r0, [sp, #0]
 800d99a:	e7f7      	b.n	800d98c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d99c:	f7ff fbd2 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d9a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9a6:	2d00      	cmp	r5, #0
 800d9a8:	dd10      	ble.n	800d9cc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9aa:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d9ae:	e003      	b.n	800d9b8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d9b0:	1e6b      	subs	r3, r5, #1
 800d9b2:	b2da      	uxtb	r2, r3
 800d9b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9b6:	b14a      	cbz	r2, 800d9cc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9bc:	b133      	cbz	r3, 800d9cc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9be:	f001 fa3f 	bl	800ee40 <xTaskRemoveFromEventList>
 800d9c2:	2800      	cmp	r0, #0
 800d9c4:	d0f4      	beq.n	800d9b0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d9c6:	f001 fad7 	bl	800ef78 <vTaskMissedYield>
 800d9ca:	e7f1      	b.n	800d9b0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d9cc:	23ff      	movs	r3, #255	; 0xff
 800d9ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d9d2:	f7ff fbd9 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d9d6:	f7ff fbb5 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d9da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9e0:	2d00      	cmp	r5, #0
 800d9e2:	dd10      	ble.n	800da06 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9e4:	f104 0610 	add.w	r6, r4, #16
 800d9e8:	e003      	b.n	800d9f2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d9ea:	1e6b      	subs	r3, r5, #1
 800d9ec:	b2da      	uxtb	r2, r3
 800d9ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9f0:	b14a      	cbz	r2, 800da06 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9f2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9f4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9f6:	b133      	cbz	r3, 800da06 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9f8:	f001 fa22 	bl	800ee40 <xTaskRemoveFromEventList>
 800d9fc:	2800      	cmp	r0, #0
 800d9fe:	d0f4      	beq.n	800d9ea <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800da00:	f001 faba 	bl	800ef78 <vTaskMissedYield>
 800da04:	e7f1      	b.n	800d9ea <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800da06:	23ff      	movs	r3, #255	; 0xff
 800da08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da0c:	f7ff fbbc 	bl	800d188 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800da10:	f001 f916 	bl	800ec40 <xTaskResumeAll>
			return errQUEUE_FULL;
 800da14:	2000      	movs	r0, #0
 800da16:	e7b9      	b.n	800d98c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da18:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da1c:	f001 fa10 	bl	800ee40 <xTaskRemoveFromEventList>
 800da20:	2800      	cmp	r0, #0
 800da22:	d0b0      	beq.n	800d986 <xQueueGenericSend+0x25a>
 800da24:	e7a5      	b.n	800d972 <xQueueGenericSend+0x246>
 800da26:	bf00      	nop

0800da28 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800da28:	2800      	cmp	r0, #0
 800da2a:	d04b      	beq.n	800dac4 <xQueueGenericSendFromISR+0x9c>
{
 800da2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da30:	460e      	mov	r6, r1
 800da32:	4617      	mov	r7, r2
 800da34:	461d      	mov	r5, r3
 800da36:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da38:	b321      	cbz	r1, 800da84 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800da3a:	2d02      	cmp	r5, #2
 800da3c:	d10b      	bne.n	800da56 <xQueueGenericSendFromISR+0x2e>
 800da3e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da40:	2b01      	cmp	r3, #1
 800da42:	d008      	beq.n	800da56 <xQueueGenericSendFromISR+0x2e>
 800da44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da48:	f383 8811 	msr	BASEPRI, r3
 800da4c:	f3bf 8f6f 	isb	sy
 800da50:	f3bf 8f4f 	dsb	sy
 800da54:	e7fe      	b.n	800da54 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800da56:	f7ff fca9 	bl	800d3ac <vPortValidateInterruptPriority>
	__asm volatile
 800da5a:	f3ef 8811 	mrs	r8, BASEPRI
 800da5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da62:	f383 8811 	msr	BASEPRI, r3
 800da66:	f3bf 8f6f 	isb	sy
 800da6a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800da6e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800da70:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800da72:	429a      	cmp	r2, r3
 800da74:	d312      	bcc.n	800da9c <xQueueGenericSendFromISR+0x74>
 800da76:	2d02      	cmp	r5, #2
 800da78:	d010      	beq.n	800da9c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800da7a:	2000      	movs	r0, #0
	__asm volatile
 800da7c:	f388 8811 	msr	BASEPRI, r8
}
 800da80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da84:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da86:	2b00      	cmp	r3, #0
 800da88:	d0d7      	beq.n	800da3a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800da8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da8e:	f383 8811 	msr	BASEPRI, r3
 800da92:	f3bf 8f6f 	isb	sy
 800da96:	f3bf 8f4f 	dsb	sy
 800da9a:	e7fe      	b.n	800da9a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800da9c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800da9e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800daa2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800daa4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800daa6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800daa8:	4620      	mov	r0, r4
 800daaa:	f7ff fcad 	bl	800d408 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800daae:	1c6b      	adds	r3, r5, #1
 800dab0:	d011      	beq.n	800dad6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dab2:	1c6b      	adds	r3, r5, #1
 800dab4:	b25b      	sxtb	r3, r3
 800dab6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800daba:	2001      	movs	r0, #1
	__asm volatile
 800dabc:	f388 8811 	msr	BASEPRI, r8
}
 800dac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800dac4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac8:	f383 8811 	msr	BASEPRI, r3
 800dacc:	f3bf 8f6f 	isb	sy
 800dad0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dad4:	e7fe      	b.n	800dad4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dad6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dad8:	2b00      	cmp	r3, #0
 800dada:	d0ee      	beq.n	800daba <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dadc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dae0:	f001 f9ae 	bl	800ee40 <xTaskRemoveFromEventList>
 800dae4:	2800      	cmp	r0, #0
 800dae6:	d0e8      	beq.n	800daba <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dae8:	2f00      	cmp	r7, #0
 800daea:	d0e6      	beq.n	800daba <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800daec:	2001      	movs	r0, #1
 800daee:	6038      	str	r0, [r7, #0]
 800daf0:	e7c4      	b.n	800da7c <xQueueGenericSendFromISR+0x54>
 800daf2:	bf00      	nop

0800daf4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800daf4:	b370      	cbz	r0, 800db54 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800daf6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800daf8:	b570      	push	{r4, r5, r6, lr}
 800dafa:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800dafc:	b143      	cbz	r3, 800db10 <xQueueGiveFromISR+0x1c>
 800dafe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db02:	f383 8811 	msr	BASEPRI, r3
 800db06:	f3bf 8f6f 	isb	sy
 800db0a:	f3bf 8f4f 	dsb	sy
 800db0e:	e7fe      	b.n	800db0e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800db10:	6803      	ldr	r3, [r0, #0]
 800db12:	460c      	mov	r4, r1
 800db14:	b33b      	cbz	r3, 800db66 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800db16:	f7ff fc49 	bl	800d3ac <vPortValidateInterruptPriority>
	__asm volatile
 800db1a:	f3ef 8511 	mrs	r5, BASEPRI
 800db1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db22:	f383 8811 	msr	BASEPRI, r3
 800db26:	f3bf 8f6f 	isb	sy
 800db2a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db2e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800db30:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800db32:	429a      	cmp	r2, r3
 800db34:	d923      	bls.n	800db7e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800db36:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800db3a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800db3c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800db3e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800db40:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800db42:	d020      	beq.n	800db86 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800db44:	3301      	adds	r3, #1
 800db46:	b25b      	sxtb	r3, r3
 800db48:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800db4c:	2001      	movs	r0, #1
	__asm volatile
 800db4e:	f385 8811 	msr	BASEPRI, r5
}
 800db52:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800db54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db58:	f383 8811 	msr	BASEPRI, r3
 800db5c:	f3bf 8f6f 	isb	sy
 800db60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800db64:	e7fe      	b.n	800db64 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800db66:	6883      	ldr	r3, [r0, #8]
 800db68:	2b00      	cmp	r3, #0
 800db6a:	d0d4      	beq.n	800db16 <xQueueGiveFromISR+0x22>
 800db6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db70:	f383 8811 	msr	BASEPRI, r3
 800db74:	f3bf 8f6f 	isb	sy
 800db78:	f3bf 8f4f 	dsb	sy
 800db7c:	e7fe      	b.n	800db7c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800db7e:	2000      	movs	r0, #0
	__asm volatile
 800db80:	f385 8811 	msr	BASEPRI, r5
}
 800db84:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db86:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800db88:	2b00      	cmp	r3, #0
 800db8a:	d0df      	beq.n	800db4c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db8c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800db90:	f001 f956 	bl	800ee40 <xTaskRemoveFromEventList>
 800db94:	2800      	cmp	r0, #0
 800db96:	d0d9      	beq.n	800db4c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800db98:	2c00      	cmp	r4, #0
 800db9a:	d0d7      	beq.n	800db4c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800db9c:	2001      	movs	r0, #1
 800db9e:	6020      	str	r0, [r4, #0]
 800dba0:	e7ee      	b.n	800db80 <xQueueGiveFromISR+0x8c>
 800dba2:	bf00      	nop

0800dba4 <xQueueReceive>:
{
 800dba4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dba8:	b085      	sub	sp, #20
 800dbaa:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dbac:	2800      	cmp	r0, #0
 800dbae:	f000 815c 	beq.w	800de6a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbb2:	460f      	mov	r7, r1
 800dbb4:	4604      	mov	r4, r0
 800dbb6:	2900      	cmp	r1, #0
 800dbb8:	d079      	beq.n	800dcae <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dbba:	f001 f9e3 	bl	800ef84 <xTaskGetSchedulerState>
 800dbbe:	2800      	cmp	r0, #0
 800dbc0:	f000 8081 	beq.w	800dcc6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dbc4:	f7ff fabe 	bl	800d144 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dbc8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dbca:	2d00      	cmp	r5, #0
 800dbcc:	f040 8138 	bne.w	800de40 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dbd0:	9b01      	ldr	r3, [sp, #4]
 800dbd2:	2b00      	cmp	r3, #0
 800dbd4:	f000 80d5 	beq.w	800dd82 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dbd8:	a802      	add	r0, sp, #8
 800dbda:	f001 f979 	bl	800eed0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dbde:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbe0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dbe4:	f7ff fad0 	bl	800d188 <vPortExitCritical>
		vTaskSuspendAll();
 800dbe8:	f001 f822 	bl	800ec30 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dbec:	f7ff faaa 	bl	800d144 <vPortEnterCritical>
 800dbf0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dbf4:	2bff      	cmp	r3, #255	; 0xff
 800dbf6:	bf08      	it	eq
 800dbf8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dbfc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc00:	2bff      	cmp	r3, #255	; 0xff
 800dc02:	bf08      	it	eq
 800dc04:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dc08:	f7ff fabe 	bl	800d188 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc0c:	a901      	add	r1, sp, #4
 800dc0e:	a802      	add	r0, sp, #8
 800dc10:	f001 f96a 	bl	800eee8 <xTaskCheckForTimeOut>
 800dc14:	2800      	cmp	r0, #0
 800dc16:	d163      	bne.n	800dce0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800dc18:	f7ff fa94 	bl	800d144 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dc1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dc1e:	2b00      	cmp	r3, #0
 800dc20:	f000 80b5 	beq.w	800dd8e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800dc24:	f7ff fab0 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc28:	f7ff fa8c 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dc2c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc32:	2d00      	cmp	r5, #0
 800dc34:	dc04      	bgt.n	800dc40 <xQueueReceive+0x9c>
 800dc36:	e011      	b.n	800dc5c <xQueueReceive+0xb8>
			--cTxLock;
 800dc38:	1e6b      	subs	r3, r5, #1
 800dc3a:	b2da      	uxtb	r2, r3
 800dc3c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc3e:	b16a      	cbz	r2, 800dc5c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dc44:	b153      	cbz	r3, 800dc5c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc46:	f001 f8fb 	bl	800ee40 <xTaskRemoveFromEventList>
 800dc4a:	2800      	cmp	r0, #0
 800dc4c:	d0f4      	beq.n	800dc38 <xQueueReceive+0x94>
						vTaskMissedYield();
 800dc4e:	f001 f993 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800dc52:	1e6b      	subs	r3, r5, #1
 800dc54:	b2da      	uxtb	r2, r3
 800dc56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc58:	2a00      	cmp	r2, #0
 800dc5a:	d1f1      	bne.n	800dc40 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800dc5c:	23ff      	movs	r3, #255	; 0xff
 800dc5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dc62:	f7ff fa91 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc66:	f7ff fa6d 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc70:	2d00      	cmp	r5, #0
 800dc72:	dd14      	ble.n	800dc9e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc74:	f104 0910 	add.w	r9, r4, #16
 800dc78:	e003      	b.n	800dc82 <xQueueReceive+0xde>
				--cRxLock;
 800dc7a:	1e6b      	subs	r3, r5, #1
 800dc7c:	b2da      	uxtb	r2, r3
 800dc7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc80:	b16a      	cbz	r2, 800dc9e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc84:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc86:	b153      	cbz	r3, 800dc9e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc88:	f001 f8da 	bl	800ee40 <xTaskRemoveFromEventList>
 800dc8c:	2800      	cmp	r0, #0
 800dc8e:	d0f4      	beq.n	800dc7a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800dc90:	f001 f972 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800dc94:	1e6b      	subs	r3, r5, #1
 800dc96:	b2da      	uxtb	r2, r3
 800dc98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc9a:	2a00      	cmp	r2, #0
 800dc9c:	d1f1      	bne.n	800dc82 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc9e:	23ff      	movs	r3, #255	; 0xff
 800dca0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dca4:	f7ff fa70 	bl	800d188 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dca8:	f000 ffca 	bl	800ec40 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800dcac:	e060      	b.n	800dd70 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dcae:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dcb0:	2b00      	cmp	r3, #0
 800dcb2:	d082      	beq.n	800dbba <xQueueReceive+0x16>
	__asm volatile
 800dcb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcb8:	f383 8811 	msr	BASEPRI, r3
 800dcbc:	f3bf 8f6f 	isb	sy
 800dcc0:	f3bf 8f4f 	dsb	sy
 800dcc4:	e7fe      	b.n	800dcc4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dcc6:	9b01      	ldr	r3, [sp, #4]
 800dcc8:	2b00      	cmp	r3, #0
 800dcca:	f43f af7b 	beq.w	800dbc4 <xQueueReceive+0x20>
 800dcce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcd2:	f383 8811 	msr	BASEPRI, r3
 800dcd6:	f3bf 8f6f 	isb	sy
 800dcda:	f3bf 8f4f 	dsb	sy
 800dcde:	e7fe      	b.n	800dcde <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800dce0:	f7ff fa30 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dce4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dce8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcea:	2d00      	cmp	r5, #0
 800dcec:	dc04      	bgt.n	800dcf8 <xQueueReceive+0x154>
 800dcee:	e011      	b.n	800dd14 <xQueueReceive+0x170>
			--cTxLock;
 800dcf0:	1e6b      	subs	r3, r5, #1
 800dcf2:	b2da      	uxtb	r2, r3
 800dcf4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcf6:	b16a      	cbz	r2, 800dd14 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcf8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcfa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcfc:	b153      	cbz	r3, 800dd14 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcfe:	f001 f89f 	bl	800ee40 <xTaskRemoveFromEventList>
 800dd02:	2800      	cmp	r0, #0
 800dd04:	d0f4      	beq.n	800dcf0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800dd06:	f001 f937 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800dd0a:	1e6b      	subs	r3, r5, #1
 800dd0c:	b2da      	uxtb	r2, r3
 800dd0e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd10:	2a00      	cmp	r2, #0
 800dd12:	d1f1      	bne.n	800dcf8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd14:	23ff      	movs	r3, #255	; 0xff
 800dd16:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd1a:	f7ff fa35 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd1e:	f7ff fa11 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dd22:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd28:	2d00      	cmp	r5, #0
 800dd2a:	dd14      	ble.n	800dd56 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd2c:	f104 0910 	add.w	r9, r4, #16
 800dd30:	e003      	b.n	800dd3a <xQueueReceive+0x196>
				--cRxLock;
 800dd32:	1e6b      	subs	r3, r5, #1
 800dd34:	b2da      	uxtb	r2, r3
 800dd36:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd38:	b16a      	cbz	r2, 800dd56 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd3a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd3c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd3e:	b153      	cbz	r3, 800dd56 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd40:	f001 f87e 	bl	800ee40 <xTaskRemoveFromEventList>
 800dd44:	2800      	cmp	r0, #0
 800dd46:	d0f4      	beq.n	800dd32 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800dd48:	f001 f916 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800dd4c:	1e6b      	subs	r3, r5, #1
 800dd4e:	b2da      	uxtb	r2, r3
 800dd50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd52:	2a00      	cmp	r2, #0
 800dd54:	d1f1      	bne.n	800dd3a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd56:	23ff      	movs	r3, #255	; 0xff
 800dd58:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd5c:	f7ff fa14 	bl	800d188 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dd60:	f000 ff6e 	bl	800ec40 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800dd64:	f7ff f9ee 	bl	800d144 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dd68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dd6a:	b153      	cbz	r3, 800dd82 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800dd6c:	f7ff fa0c 	bl	800d188 <vPortExitCritical>
		taskENTER_CRITICAL();
 800dd70:	f7ff f9e8 	bl	800d144 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd74:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dd76:	2d00      	cmp	r5, #0
 800dd78:	d162      	bne.n	800de40 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dd7a:	9b01      	ldr	r3, [sp, #4]
 800dd7c:	2b00      	cmp	r3, #0
 800dd7e:	f47f af31 	bne.w	800dbe4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800dd82:	f7ff fa01 	bl	800d188 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dd86:	2000      	movs	r0, #0
}
 800dd88:	b005      	add	sp, #20
 800dd8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800dd8e:	f7ff f9fb 	bl	800d188 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dd92:	9901      	ldr	r1, [sp, #4]
 800dd94:	4630      	mov	r0, r6
 800dd96:	f000 ffc5 	bl	800ed24 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dd9a:	f7ff f9d3 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd9e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dda2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dda4:	2d00      	cmp	r5, #0
 800dda6:	dc04      	bgt.n	800ddb2 <xQueueReceive+0x20e>
 800dda8:	e011      	b.n	800ddce <xQueueReceive+0x22a>
			--cTxLock;
 800ddaa:	1e6b      	subs	r3, r5, #1
 800ddac:	b2da      	uxtb	r2, r3
 800ddae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddb0:	b16a      	cbz	r2, 800ddce <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddb4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddb6:	b153      	cbz	r3, 800ddce <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddb8:	f001 f842 	bl	800ee40 <xTaskRemoveFromEventList>
 800ddbc:	2800      	cmp	r0, #0
 800ddbe:	d0f4      	beq.n	800ddaa <xQueueReceive+0x206>
						vTaskMissedYield();
 800ddc0:	f001 f8da 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800ddc4:	1e6b      	subs	r3, r5, #1
 800ddc6:	b2da      	uxtb	r2, r3
 800ddc8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddca:	2a00      	cmp	r2, #0
 800ddcc:	d1f1      	bne.n	800ddb2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ddce:	23ff      	movs	r3, #255	; 0xff
 800ddd0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ddd4:	f7ff f9d8 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddd8:	f7ff f9b4 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dddc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dde0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dde2:	2d00      	cmp	r5, #0
 800dde4:	dd14      	ble.n	800de10 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dde6:	f104 0910 	add.w	r9, r4, #16
 800ddea:	e003      	b.n	800ddf4 <xQueueReceive+0x250>
				--cRxLock;
 800ddec:	1e6b      	subs	r3, r5, #1
 800ddee:	b2da      	uxtb	r2, r3
 800ddf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddf2:	b16a      	cbz	r2, 800de10 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddf4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddf6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ddf8:	b153      	cbz	r3, 800de10 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddfa:	f001 f821 	bl	800ee40 <xTaskRemoveFromEventList>
 800ddfe:	2800      	cmp	r0, #0
 800de00:	d0f4      	beq.n	800ddec <xQueueReceive+0x248>
					vTaskMissedYield();
 800de02:	f001 f8b9 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800de06:	1e6b      	subs	r3, r5, #1
 800de08:	b2da      	uxtb	r2, r3
 800de0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de0c:	2a00      	cmp	r2, #0
 800de0e:	d1f1      	bne.n	800ddf4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800de10:	23ff      	movs	r3, #255	; 0xff
 800de12:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de16:	f7ff f9b7 	bl	800d188 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800de1a:	f000 ff11 	bl	800ec40 <xTaskResumeAll>
 800de1e:	2800      	cmp	r0, #0
 800de20:	d1a6      	bne.n	800dd70 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800de22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de2e:	f3bf 8f4f 	dsb	sy
 800de32:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800de36:	f7ff f985 	bl	800d144 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de3a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800de3c:	2d00      	cmp	r5, #0
 800de3e:	d09c      	beq.n	800dd7a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800de40:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800de42:	b152      	cbz	r2, 800de5a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de44:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de46:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de48:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de4a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de4c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800de4e:	bf24      	itt	cs
 800de50:	6821      	ldrcs	r1, [r4, #0]
 800de52:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800de54:	4638      	mov	r0, r7
 800de56:	f01a fe96 	bl	8028b86 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de5a:	3d01      	subs	r5, #1
 800de5c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de5e:	6923      	ldr	r3, [r4, #16]
 800de60:	b963      	cbnz	r3, 800de7c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800de62:	f7ff f991 	bl	800d188 <vPortExitCritical>
				return pdPASS;
 800de66:	2001      	movs	r0, #1
 800de68:	e78e      	b.n	800dd88 <xQueueReceive+0x1e4>
 800de6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de6e:	f383 8811 	msr	BASEPRI, r3
 800de72:	f3bf 8f6f 	isb	sy
 800de76:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800de7a:	e7fe      	b.n	800de7a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de7c:	f104 0010 	add.w	r0, r4, #16
 800de80:	f000 ffde 	bl	800ee40 <xTaskRemoveFromEventList>
 800de84:	2800      	cmp	r0, #0
 800de86:	d0ec      	beq.n	800de62 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800de88:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de90:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de94:	f3bf 8f4f 	dsb	sy
 800de98:	f3bf 8f6f 	isb	sy
 800de9c:	e7e1      	b.n	800de62 <xQueueReceive+0x2be>
 800de9e:	bf00      	nop

0800dea0 <xQueueSemaphoreTake>:
{
 800dea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dea4:	b084      	sub	sp, #16
 800dea6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dea8:	2800      	cmp	r0, #0
 800deaa:	d05c      	beq.n	800df66 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800deac:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800deae:	4604      	mov	r4, r0
 800deb0:	b147      	cbz	r7, 800dec4 <xQueueSemaphoreTake+0x24>
 800deb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deb6:	f383 8811 	msr	BASEPRI, r3
 800deba:	f3bf 8f6f 	isb	sy
 800debe:	f3bf 8f4f 	dsb	sy
 800dec2:	e7fe      	b.n	800dec2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dec4:	f001 f85e 	bl	800ef84 <xTaskGetSchedulerState>
 800dec8:	4605      	mov	r5, r0
 800deca:	2800      	cmp	r0, #0
 800decc:	d054      	beq.n	800df78 <xQueueSemaphoreTake+0xd8>
 800dece:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ded0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ded4:	f7ff f936 	bl	800d144 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ded8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800deda:	2b00      	cmp	r3, #0
 800dedc:	f040 8148 	bne.w	800e170 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dee0:	9b01      	ldr	r3, [sp, #4]
 800dee2:	2b00      	cmp	r3, #0
 800dee4:	f000 813a 	beq.w	800e15c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800dee8:	2d00      	cmp	r5, #0
 800deea:	f000 809d 	beq.w	800e028 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800deee:	f7ff f94b 	bl	800d188 <vPortExitCritical>
		vTaskSuspendAll();
 800def2:	f000 fe9d 	bl	800ec30 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800def6:	f7ff f925 	bl	800d144 <vPortEnterCritical>
 800defa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800defe:	2bff      	cmp	r3, #255	; 0xff
 800df00:	bf04      	itt	eq
 800df02:	2300      	moveq	r3, #0
 800df04:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800df08:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df0c:	2bff      	cmp	r3, #255	; 0xff
 800df0e:	bf04      	itt	eq
 800df10:	2300      	moveq	r3, #0
 800df12:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800df16:	f7ff f937 	bl	800d188 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800df1a:	a901      	add	r1, sp, #4
 800df1c:	a802      	add	r0, sp, #8
 800df1e:	f000 ffe3 	bl	800eee8 <xTaskCheckForTimeOut>
 800df22:	2800      	cmp	r0, #0
 800df24:	d135      	bne.n	800df92 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800df26:	f7ff f90d 	bl	800d144 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800df2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800df2c:	2b00      	cmp	r3, #0
 800df2e:	f000 80a4 	beq.w	800e07a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800df32:	f7ff f929 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800df36:	f7ff f905 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df3a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df3e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df40:	2d00      	cmp	r5, #0
 800df42:	dc05      	bgt.n	800df50 <xQueueSemaphoreTake+0xb0>
 800df44:	e074      	b.n	800e030 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800df46:	1e6b      	subs	r3, r5, #1
 800df48:	b2da      	uxtb	r2, r3
 800df4a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df4c:	2a00      	cmp	r2, #0
 800df4e:	d06f      	beq.n	800e030 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df50:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df52:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df54:	2b00      	cmp	r3, #0
 800df56:	d06b      	beq.n	800e030 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df58:	f000 ff72 	bl	800ee40 <xTaskRemoveFromEventList>
 800df5c:	2800      	cmp	r0, #0
 800df5e:	d0f2      	beq.n	800df46 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800df60:	f001 f80a 	bl	800ef78 <vTaskMissedYield>
 800df64:	e7ef      	b.n	800df46 <xQueueSemaphoreTake+0xa6>
 800df66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df6a:	f383 8811 	msr	BASEPRI, r3
 800df6e:	f3bf 8f6f 	isb	sy
 800df72:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800df76:	e7fe      	b.n	800df76 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800df78:	9b01      	ldr	r3, [sp, #4]
 800df7a:	2b00      	cmp	r3, #0
 800df7c:	f000 80d4 	beq.w	800e128 <xQueueSemaphoreTake+0x288>
 800df80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df84:	f383 8811 	msr	BASEPRI, r3
 800df88:	f3bf 8f6f 	isb	sy
 800df8c:	f3bf 8f4f 	dsb	sy
 800df90:	e7fe      	b.n	800df90 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800df92:	f7ff f8d7 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df96:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df9a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df9c:	2d00      	cmp	r5, #0
 800df9e:	dc04      	bgt.n	800dfaa <xQueueSemaphoreTake+0x10a>
 800dfa0:	e011      	b.n	800dfc6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800dfa2:	1e6b      	subs	r3, r5, #1
 800dfa4:	b2da      	uxtb	r2, r3
 800dfa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfa8:	b16a      	cbz	r2, 800dfc6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfae:	b153      	cbz	r3, 800dfc6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfb0:	f000 ff46 	bl	800ee40 <xTaskRemoveFromEventList>
 800dfb4:	2800      	cmp	r0, #0
 800dfb6:	d0f4      	beq.n	800dfa2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800dfb8:	f000 ffde 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800dfbc:	1e6b      	subs	r3, r5, #1
 800dfbe:	b2da      	uxtb	r2, r3
 800dfc0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfc2:	2a00      	cmp	r2, #0
 800dfc4:	d1f1      	bne.n	800dfaa <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800dfc6:	23ff      	movs	r3, #255	; 0xff
 800dfc8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dfcc:	f7ff f8dc 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dfd0:	f7ff f8b8 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dfd4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dfd8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfda:	2d00      	cmp	r5, #0
 800dfdc:	dd14      	ble.n	800e008 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfde:	f104 0810 	add.w	r8, r4, #16
 800dfe2:	e003      	b.n	800dfec <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800dfe4:	1e6b      	subs	r3, r5, #1
 800dfe6:	b2da      	uxtb	r2, r3
 800dfe8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfea:	b16a      	cbz	r2, 800e008 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfee:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dff0:	b153      	cbz	r3, 800e008 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dff2:	f000 ff25 	bl	800ee40 <xTaskRemoveFromEventList>
 800dff6:	2800      	cmp	r0, #0
 800dff8:	d0f4      	beq.n	800dfe4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800dffa:	f000 ffbd 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800dffe:	1e6b      	subs	r3, r5, #1
 800e000:	b2da      	uxtb	r2, r3
 800e002:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e004:	2a00      	cmp	r2, #0
 800e006:	d1f1      	bne.n	800dfec <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e008:	23ff      	movs	r3, #255	; 0xff
 800e00a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e00e:	f7ff f8bb 	bl	800d188 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e012:	f000 fe15 	bl	800ec40 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e016:	f7ff f895 	bl	800d144 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e01a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e01c:	2b00      	cmp	r3, #0
 800e01e:	d07c      	beq.n	800e11a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e020:	f7ff f8b2 	bl	800d188 <vPortExitCritical>
	return xReturn;
 800e024:	2501      	movs	r5, #1
 800e026:	e755      	b.n	800ded4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e028:	a802      	add	r0, sp, #8
 800e02a:	f000 ff51 	bl	800eed0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e02e:	e75e      	b.n	800deee <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e030:	23ff      	movs	r3, #255	; 0xff
 800e032:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e036:	f7ff f8a7 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e03a:	f7ff f883 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e03e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e042:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e044:	2d00      	cmp	r5, #0
 800e046:	dd10      	ble.n	800e06a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e048:	f104 0810 	add.w	r8, r4, #16
 800e04c:	e003      	b.n	800e056 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e04e:	1e6b      	subs	r3, r5, #1
 800e050:	b2da      	uxtb	r2, r3
 800e052:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e054:	b14a      	cbz	r2, 800e06a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e056:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e058:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e05a:	b133      	cbz	r3, 800e06a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e05c:	f000 fef0 	bl	800ee40 <xTaskRemoveFromEventList>
 800e060:	2800      	cmp	r0, #0
 800e062:	d0f4      	beq.n	800e04e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e064:	f000 ff88 	bl	800ef78 <vTaskMissedYield>
 800e068:	e7f1      	b.n	800e04e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e06a:	23ff      	movs	r3, #255	; 0xff
 800e06c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e070:	f7ff f88a 	bl	800d188 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e074:	f000 fde4 	bl	800ec40 <xTaskResumeAll>
 800e078:	e7d4      	b.n	800e024 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e07a:	f7ff f885 	bl	800d188 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e07e:	6823      	ldr	r3, [r4, #0]
 800e080:	2b00      	cmp	r3, #0
 800e082:	d062      	beq.n	800e14a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e084:	9901      	ldr	r1, [sp, #4]
 800e086:	4630      	mov	r0, r6
 800e088:	f000 fe4c 	bl	800ed24 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e08c:	f7ff f85a 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e090:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e094:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e096:	2d00      	cmp	r5, #0
 800e098:	dc04      	bgt.n	800e0a4 <xQueueSemaphoreTake+0x204>
 800e09a:	e00d      	b.n	800e0b8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e09c:	1e6b      	subs	r3, r5, #1
 800e09e:	b2da      	uxtb	r2, r3
 800e0a0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0a2:	b14a      	cbz	r2, 800e0b8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0a6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0a8:	b133      	cbz	r3, 800e0b8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0aa:	f000 fec9 	bl	800ee40 <xTaskRemoveFromEventList>
 800e0ae:	2800      	cmp	r0, #0
 800e0b0:	d0f4      	beq.n	800e09c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e0b2:	f000 ff61 	bl	800ef78 <vTaskMissedYield>
 800e0b6:	e7f1      	b.n	800e09c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e0b8:	23ff      	movs	r3, #255	; 0xff
 800e0ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e0be:	f7ff f863 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e0c2:	f7ff f83f 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e0c6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e0ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0cc:	2d00      	cmp	r5, #0
 800e0ce:	dd10      	ble.n	800e0f2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0d0:	f104 0810 	add.w	r8, r4, #16
 800e0d4:	e003      	b.n	800e0de <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e0d6:	1e6b      	subs	r3, r5, #1
 800e0d8:	b2da      	uxtb	r2, r3
 800e0da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e0dc:	b14a      	cbz	r2, 800e0f2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0de:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0e0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0e2:	b133      	cbz	r3, 800e0f2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0e4:	f000 feac 	bl	800ee40 <xTaskRemoveFromEventList>
 800e0e8:	2800      	cmp	r0, #0
 800e0ea:	d0f4      	beq.n	800e0d6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e0ec:	f000 ff44 	bl	800ef78 <vTaskMissedYield>
 800e0f0:	e7f1      	b.n	800e0d6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e0f2:	23ff      	movs	r3, #255	; 0xff
 800e0f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e0f8:	f7ff f846 	bl	800d188 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e0fc:	f000 fda0 	bl	800ec40 <xTaskResumeAll>
 800e100:	2800      	cmp	r0, #0
 800e102:	d18f      	bne.n	800e024 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e104:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e108:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e10c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e110:	f3bf 8f4f 	dsb	sy
 800e114:	f3bf 8f6f 	isb	sy
 800e118:	e784      	b.n	800e024 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e11a:	f7ff f835 	bl	800d188 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e11e:	b92f      	cbnz	r7, 800e12c <xQueueSemaphoreTake+0x28c>
}
 800e120:	4638      	mov	r0, r7
 800e122:	b004      	add	sp, #16
 800e124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e128:	4607      	mov	r7, r0
 800e12a:	e6d1      	b.n	800ded0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e12c:	f7ff f80a 	bl	800d144 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e130:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e132:	b119      	cbz	r1, 800e13c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e134:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e136:	6819      	ldr	r1, [r3, #0]
 800e138:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e13c:	68a0      	ldr	r0, [r4, #8]
 800e13e:	f000 ffbd 	bl	800f0bc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e142:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e144:	f7ff f820 	bl	800d188 <vPortExitCritical>
 800e148:	e7ea      	b.n	800e120 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e14a:	f7fe fffb 	bl	800d144 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e14e:	68a0      	ldr	r0, [r4, #8]
 800e150:	f000 ff28 	bl	800efa4 <xTaskPriorityInherit>
 800e154:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e156:	f7ff f817 	bl	800d188 <vPortExitCritical>
 800e15a:	e793      	b.n	800e084 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e15c:	b197      	cbz	r7, 800e184 <xQueueSemaphoreTake+0x2e4>
 800e15e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e162:	f383 8811 	msr	BASEPRI, r3
 800e166:	f3bf 8f6f 	isb	sy
 800e16a:	f3bf 8f4f 	dsb	sy
 800e16e:	e7fe      	b.n	800e16e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e170:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e172:	3b01      	subs	r3, #1
 800e174:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e176:	b1ca      	cbz	r2, 800e1ac <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e178:	6923      	ldr	r3, [r4, #16]
 800e17a:	b933      	cbnz	r3, 800e18a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e17c:	f7ff f804 	bl	800d188 <vPortExitCritical>
				return pdPASS;
 800e180:	2701      	movs	r7, #1
 800e182:	e7cd      	b.n	800e120 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e184:	f7ff f800 	bl	800d188 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e188:	e7ca      	b.n	800e120 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e18a:	f104 0010 	add.w	r0, r4, #16
 800e18e:	f000 fe57 	bl	800ee40 <xTaskRemoveFromEventList>
 800e192:	2800      	cmp	r0, #0
 800e194:	d0f2      	beq.n	800e17c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e196:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e19a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e19e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1a2:	f3bf 8f4f 	dsb	sy
 800e1a6:	f3bf 8f6f 	isb	sy
 800e1aa:	e7e7      	b.n	800e17c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e1ac:	f000 ffda 	bl	800f164 <pvTaskIncrementMutexHeldCount>
 800e1b0:	60a0      	str	r0, [r4, #8]
 800e1b2:	e7e1      	b.n	800e178 <xQueueSemaphoreTake+0x2d8>

0800e1b4 <xQueueReceiveFromISR>:
{
 800e1b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e1b8:	b310      	cbz	r0, 800e200 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1ba:	460e      	mov	r6, r1
 800e1bc:	4617      	mov	r7, r2
 800e1be:	4604      	mov	r4, r0
 800e1c0:	b191      	cbz	r1, 800e1e8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e1c2:	f7ff f8f3 	bl	800d3ac <vPortValidateInterruptPriority>
	__asm volatile
 800e1c6:	f3ef 8911 	mrs	r9, BASEPRI
 800e1ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1ce:	f383 8811 	msr	BASEPRI, r3
 800e1d2:	f3bf 8f6f 	isb	sy
 800e1d6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e1da:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e1dc:	b9cd      	cbnz	r5, 800e212 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e1de:	4628      	mov	r0, r5
	__asm volatile
 800e1e0:	f389 8811 	msr	BASEPRI, r9
}
 800e1e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1e8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	d0e9      	beq.n	800e1c2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f2:	f383 8811 	msr	BASEPRI, r3
 800e1f6:	f3bf 8f6f 	isb	sy
 800e1fa:	f3bf 8f4f 	dsb	sy
 800e1fe:	e7fe      	b.n	800e1fe <xQueueReceiveFromISR+0x4a>
 800e200:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e204:	f383 8811 	msr	BASEPRI, r3
 800e208:	f3bf 8f6f 	isb	sy
 800e20c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e210:	e7fe      	b.n	800e210 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e212:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e216:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e218:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e21c:	b152      	cbz	r2, 800e234 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e21e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e220:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e222:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e224:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e226:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e228:	bf24      	itt	cs
 800e22a:	6821      	ldrcs	r1, [r4, #0]
 800e22c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e22e:	4630      	mov	r0, r6
 800e230:	f01a fca9 	bl	8028b86 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e234:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e236:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e23a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e23c:	d009      	beq.n	800e252 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e23e:	f108 0301 	add.w	r3, r8, #1
 800e242:	b25b      	sxtb	r3, r3
 800e244:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e248:	2001      	movs	r0, #1
	__asm volatile
 800e24a:	f389 8811 	msr	BASEPRI, r9
}
 800e24e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e252:	6923      	ldr	r3, [r4, #16]
 800e254:	2b00      	cmp	r3, #0
 800e256:	d0f7      	beq.n	800e248 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e258:	f104 0010 	add.w	r0, r4, #16
 800e25c:	f000 fdf0 	bl	800ee40 <xTaskRemoveFromEventList>
 800e260:	2800      	cmp	r0, #0
 800e262:	d0f1      	beq.n	800e248 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e264:	2f00      	cmp	r7, #0
 800e266:	d0ef      	beq.n	800e248 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e268:	2001      	movs	r0, #1
 800e26a:	6038      	str	r0, [r7, #0]
 800e26c:	e7b8      	b.n	800e1e0 <xQueueReceiveFromISR+0x2c>
 800e26e:	bf00      	nop

0800e270 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e270:	b158      	cbz	r0, 800e28a <uxQueueMessagesWaiting+0x1a>
{
 800e272:	b510      	push	{r4, lr}
 800e274:	4604      	mov	r4, r0
 800e276:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e278:	f7fe ff64 	bl	800d144 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e27c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e27e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e280:	f7fe ff82 	bl	800d188 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e284:	9801      	ldr	r0, [sp, #4]
 800e286:	b002      	add	sp, #8
 800e288:	bd10      	pop	{r4, pc}
	__asm volatile
 800e28a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e28e:	f383 8811 	msr	BASEPRI, r3
 800e292:	f3bf 8f6f 	isb	sy
 800e296:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e29a:	e7fe      	b.n	800e29a <uxQueueMessagesWaiting+0x2a>

0800e29c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e29c:	b108      	cbz	r0, 800e2a2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e29e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e2a0:	4770      	bx	lr
 800e2a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2a6:	f383 8811 	msr	BASEPRI, r3
 800e2aa:	f3bf 8f6f 	isb	sy
 800e2ae:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e2b2:	e7fe      	b.n	800e2b2 <uxQueueMessagesWaitingFromISR+0x16>
 800e2b4:	0000      	movs	r0, r0
	...

0800e2b8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e2b8:	b1f0      	cbz	r0, 800e2f8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e2ba:	4b21      	ldr	r3, [pc, #132]	; (800e340 <vQueueDelete+0x88>)
 800e2bc:	685a      	ldr	r2, [r3, #4]
 800e2be:	4290      	cmp	r0, r2
 800e2c0:	d025      	beq.n	800e30e <vQueueDelete+0x56>
 800e2c2:	68da      	ldr	r2, [r3, #12]
 800e2c4:	4290      	cmp	r0, r2
 800e2c6:	d02c      	beq.n	800e322 <vQueueDelete+0x6a>
 800e2c8:	695a      	ldr	r2, [r3, #20]
 800e2ca:	4290      	cmp	r0, r2
 800e2cc:	d02b      	beq.n	800e326 <vQueueDelete+0x6e>
 800e2ce:	69da      	ldr	r2, [r3, #28]
 800e2d0:	4290      	cmp	r0, r2
 800e2d2:	d02a      	beq.n	800e32a <vQueueDelete+0x72>
 800e2d4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e2d6:	4290      	cmp	r0, r2
 800e2d8:	d029      	beq.n	800e32e <vQueueDelete+0x76>
 800e2da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2dc:	4290      	cmp	r0, r2
 800e2de:	d01e      	beq.n	800e31e <vQueueDelete+0x66>
 800e2e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e2e2:	4290      	cmp	r0, r2
 800e2e4:	d025      	beq.n	800e332 <vQueueDelete+0x7a>
 800e2e6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e2e8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e2ea:	bf08      	it	eq
 800e2ec:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e2ee:	d00f      	beq.n	800e310 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e2f0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e2f4:	b14b      	cbz	r3, 800e30a <vQueueDelete+0x52>
}
 800e2f6:	4770      	bx	lr
 800e2f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2fc:	f383 8811 	msr	BASEPRI, r3
 800e300:	f3bf 8f6f 	isb	sy
 800e304:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e308:	e7fe      	b.n	800e308 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e30a:	f7fe be07 	b.w	800cf1c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e30e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e310:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e338 <vQueueDelete+0x80>
 800e314:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e318:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e31c:	e7e8      	b.n	800e2f0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e31e:	2205      	movs	r2, #5
 800e320:	e7f6      	b.n	800e310 <vQueueDelete+0x58>
 800e322:	2201      	movs	r2, #1
 800e324:	e7f4      	b.n	800e310 <vQueueDelete+0x58>
 800e326:	2202      	movs	r2, #2
 800e328:	e7f2      	b.n	800e310 <vQueueDelete+0x58>
 800e32a:	2203      	movs	r2, #3
 800e32c:	e7f0      	b.n	800e310 <vQueueDelete+0x58>
 800e32e:	2204      	movs	r2, #4
 800e330:	e7ee      	b.n	800e310 <vQueueDelete+0x58>
 800e332:	2206      	movs	r2, #6
 800e334:	e7ec      	b.n	800e310 <vQueueDelete+0x58>
 800e336:	bf00      	nop
	...
 800e340:	20013158 	.word	0x20013158

0800e344 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e344:	4b12      	ldr	r3, [pc, #72]	; (800e390 <vQueueAddToRegistry+0x4c>)
 800e346:	681a      	ldr	r2, [r3, #0]
 800e348:	b17a      	cbz	r2, 800e36a <vQueueAddToRegistry+0x26>
 800e34a:	689a      	ldr	r2, [r3, #8]
 800e34c:	b162      	cbz	r2, 800e368 <vQueueAddToRegistry+0x24>
 800e34e:	691a      	ldr	r2, [r3, #16]
 800e350:	b192      	cbz	r2, 800e378 <vQueueAddToRegistry+0x34>
 800e352:	699a      	ldr	r2, [r3, #24]
 800e354:	b192      	cbz	r2, 800e37c <vQueueAddToRegistry+0x38>
 800e356:	6a1a      	ldr	r2, [r3, #32]
 800e358:	b192      	cbz	r2, 800e380 <vQueueAddToRegistry+0x3c>
 800e35a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e35c:	b192      	cbz	r2, 800e384 <vQueueAddToRegistry+0x40>
 800e35e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e360:	b192      	cbz	r2, 800e388 <vQueueAddToRegistry+0x44>
 800e362:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e364:	b192      	cbz	r2, 800e38c <vQueueAddToRegistry+0x48>
	}
 800e366:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e368:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e36a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e36e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e372:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e376:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e378:	2202      	movs	r2, #2
 800e37a:	e7f6      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e37c:	2203      	movs	r2, #3
 800e37e:	e7f4      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e380:	2204      	movs	r2, #4
 800e382:	e7f2      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e384:	2205      	movs	r2, #5
 800e386:	e7f0      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e388:	2206      	movs	r2, #6
 800e38a:	e7ee      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e38c:	2207      	movs	r2, #7
 800e38e:	e7ec      	b.n	800e36a <vQueueAddToRegistry+0x26>
 800e390:	20013158 	.word	0x20013158

0800e394 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e394:	b570      	push	{r4, r5, r6, lr}
 800e396:	4605      	mov	r5, r0
 800e398:	460e      	mov	r6, r1
 800e39a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e39c:	f7fe fed2 	bl	800d144 <vPortEnterCritical>
 800e3a0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e3a4:	2bff      	cmp	r3, #255	; 0xff
 800e3a6:	bf04      	itt	eq
 800e3a8:	2300      	moveq	r3, #0
 800e3aa:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e3ae:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e3b2:	2bff      	cmp	r3, #255	; 0xff
 800e3b4:	bf04      	itt	eq
 800e3b6:	2300      	moveq	r3, #0
 800e3b8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e3bc:	f7fe fee4 	bl	800d188 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e3c0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	d043      	beq.n	800e44e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e3c6:	f7fe febd 	bl	800d144 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e3ca:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e3ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3d0:	2c00      	cmp	r4, #0
 800e3d2:	dd14      	ble.n	800e3fe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3d4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e3d8:	e003      	b.n	800e3e2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e3da:	1e63      	subs	r3, r4, #1
 800e3dc:	b2da      	uxtb	r2, r3
 800e3de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3e0:	b16a      	cbz	r2, 800e3fe <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3e2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3e4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3e6:	b153      	cbz	r3, 800e3fe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3e8:	f000 fd2a 	bl	800ee40 <xTaskRemoveFromEventList>
 800e3ec:	2800      	cmp	r0, #0
 800e3ee:	d0f4      	beq.n	800e3da <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e3f0:	f000 fdc2 	bl	800ef78 <vTaskMissedYield>
			--cTxLock;
 800e3f4:	1e63      	subs	r3, r4, #1
 800e3f6:	b2da      	uxtb	r2, r3
 800e3f8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3fa:	2a00      	cmp	r2, #0
 800e3fc:	d1f1      	bne.n	800e3e2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e3fe:	23ff      	movs	r3, #255	; 0xff
 800e400:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e404:	f7fe fec0 	bl	800d188 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e408:	f7fe fe9c 	bl	800d144 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e40c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e410:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e412:	2c00      	cmp	r4, #0
 800e414:	dd14      	ble.n	800e440 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e416:	f105 0610 	add.w	r6, r5, #16
 800e41a:	e003      	b.n	800e424 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e41c:	1e63      	subs	r3, r4, #1
 800e41e:	b2da      	uxtb	r2, r3
 800e420:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e422:	b16a      	cbz	r2, 800e440 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e424:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e426:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e428:	b153      	cbz	r3, 800e440 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e42a:	f000 fd09 	bl	800ee40 <xTaskRemoveFromEventList>
 800e42e:	2800      	cmp	r0, #0
 800e430:	d0f4      	beq.n	800e41c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e432:	f000 fda1 	bl	800ef78 <vTaskMissedYield>
				--cRxLock;
 800e436:	1e63      	subs	r3, r4, #1
 800e438:	b2da      	uxtb	r2, r3
 800e43a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e43c:	2a00      	cmp	r2, #0
 800e43e:	d1f1      	bne.n	800e424 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e440:	23ff      	movs	r3, #255	; 0xff
 800e442:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e446:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e44a:	f7fe be9d 	b.w	800d188 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e44e:	4622      	mov	r2, r4
 800e450:	4631      	mov	r1, r6
 800e452:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e456:	f000 fca9 	bl	800edac <vTaskPlaceOnEventListRestricted>
 800e45a:	e7b4      	b.n	800e3c6 <vQueueWaitForMessageRestricted+0x32>

0800e45c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e45c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e460:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e462:	f7fe fe6f 	bl	800d144 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e466:	4a34      	ldr	r2, [pc, #208]	; (800e538 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e468:	4e34      	ldr	r6, [pc, #208]	; (800e53c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e46a:	6813      	ldr	r3, [r2, #0]
 800e46c:	3301      	adds	r3, #1
 800e46e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e470:	6833      	ldr	r3, [r6, #0]
 800e472:	2b00      	cmp	r3, #0
 800e474:	d032      	beq.n	800e4dc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e476:	4c32      	ldr	r4, [pc, #200]	; (800e540 <prvAddNewTaskToReadyList+0xe4>)
 800e478:	6823      	ldr	r3, [r4, #0]
 800e47a:	b33b      	cbz	r3, 800e4cc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e47c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e47e:	4f31      	ldr	r7, [pc, #196]	; (800e544 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e480:	4a31      	ldr	r2, [pc, #196]	; (800e548 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e482:	4932      	ldr	r1, [pc, #200]	; (800e54c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e484:	6813      	ldr	r3, [r2, #0]
 800e486:	3301      	adds	r3, #1
 800e488:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e48a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e48c:	680b      	ldr	r3, [r1, #0]
 800e48e:	4283      	cmp	r3, r0
 800e490:	bf38      	it	cc
 800e492:	6008      	strcc	r0, [r1, #0]
 800e494:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e498:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e49c:	1d29      	adds	r1, r5, #4
 800e49e:	f7fe fdb1 	bl	800d004 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e4a2:	f7fe fe71 	bl	800d188 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e4a6:	6823      	ldr	r3, [r4, #0]
 800e4a8:	b173      	cbz	r3, 800e4c8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e4aa:	6832      	ldr	r2, [r6, #0]
 800e4ac:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e4ae:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e4b0:	429a      	cmp	r2, r3
 800e4b2:	d209      	bcs.n	800e4c8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e4b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e4b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e4bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e4c0:	f3bf 8f4f 	dsb	sy
 800e4c4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e4c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e4cc:	6833      	ldr	r3, [r6, #0]
 800e4ce:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e4d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4d2:	4f1c      	ldr	r7, [pc, #112]	; (800e544 <prvAddNewTaskToReadyList+0xe8>)
 800e4d4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e4d6:	bf98      	it	ls
 800e4d8:	6035      	strls	r5, [r6, #0]
 800e4da:	e7d1      	b.n	800e480 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e4dc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e4de:	6813      	ldr	r3, [r2, #0]
 800e4e0:	2b01      	cmp	r3, #1
 800e4e2:	d003      	beq.n	800e4ec <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e4e4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e4e6:	4f17      	ldr	r7, [pc, #92]	; (800e544 <prvAddNewTaskToReadyList+0xe8>)
 800e4e8:	4c15      	ldr	r4, [pc, #84]	; (800e540 <prvAddNewTaskToReadyList+0xe4>)
 800e4ea:	e7c9      	b.n	800e480 <prvAddNewTaskToReadyList+0x24>
 800e4ec:	4f15      	ldr	r7, [pc, #84]	; (800e544 <prvAddNewTaskToReadyList+0xe8>)
 800e4ee:	463c      	mov	r4, r7
 800e4f0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e4f4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e4f6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e4f8:	f7fe fd74 	bl	800cfe4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e4fc:	45a0      	cmp	r8, r4
 800e4fe:	d1f9      	bne.n	800e4f4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e500:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e564 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e504:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e568 <prvAddNewTaskToReadyList+0x10c>
 800e508:	4c0d      	ldr	r4, [pc, #52]	; (800e540 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e50a:	4648      	mov	r0, r9
 800e50c:	f7fe fd6a 	bl	800cfe4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e510:	4640      	mov	r0, r8
 800e512:	f7fe fd67 	bl	800cfe4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e516:	480e      	ldr	r0, [pc, #56]	; (800e550 <prvAddNewTaskToReadyList+0xf4>)
 800e518:	f7fe fd64 	bl	800cfe4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e51c:	480d      	ldr	r0, [pc, #52]	; (800e554 <prvAddNewTaskToReadyList+0xf8>)
 800e51e:	f7fe fd61 	bl	800cfe4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e522:	480d      	ldr	r0, [pc, #52]	; (800e558 <prvAddNewTaskToReadyList+0xfc>)
 800e524:	f7fe fd5e 	bl	800cfe4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e528:	4b0c      	ldr	r3, [pc, #48]	; (800e55c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e52a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e52c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e530:	4b0b      	ldr	r3, [pc, #44]	; (800e560 <prvAddNewTaskToReadyList+0x104>)
 800e532:	f8c3 8000 	str.w	r8, [r3]
}
 800e536:	e7a3      	b.n	800e480 <prvAddNewTaskToReadyList+0x24>
 800e538:	20013604 	.word	0x20013604
 800e53c:	20013198 	.word	0x20013198
 800e540:	20013660 	.word	0x20013660
 800e544:	200131a4 	.word	0x200131a4
 800e548:	20013610 	.word	0x20013610
 800e54c:	20013614 	.word	0x20013614
 800e550:	2001364c 	.word	0x2001364c
 800e554:	20013678 	.word	0x20013678
 800e558:	20013664 	.word	0x20013664
 800e55c:	2001319c 	.word	0x2001319c
 800e560:	200131a0 	.word	0x200131a0
 800e564:	20013618 	.word	0x20013618
 800e568:	2001362c 	.word	0x2001362c

0800e56c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e56c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e570:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e572:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e576:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e57a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e57c:	4606      	mov	r6, r0
 800e57e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e580:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e582:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e584:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e586:	f01a f9d8 	bl	802893a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e58a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e58c:	f1a9 0904 	sub.w	r9, r9, #4
 800e590:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e592:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e596:	2d00      	cmp	r5, #0
 800e598:	d079      	beq.n	800e68e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e59a:	782b      	ldrb	r3, [r5, #0]
 800e59c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e5a0:	2b00      	cmp	r3, #0
 800e5a2:	d03b      	beq.n	800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5a4:	786b      	ldrb	r3, [r5, #1]
 800e5a6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e5aa:	2b00      	cmp	r3, #0
 800e5ac:	d036      	beq.n	800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5ae:	78ab      	ldrb	r3, [r5, #2]
 800e5b0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e5b4:	b393      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5b6:	78eb      	ldrb	r3, [r5, #3]
 800e5b8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e5bc:	b373      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5be:	792b      	ldrb	r3, [r5, #4]
 800e5c0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e5c4:	b353      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5c6:	796b      	ldrb	r3, [r5, #5]
 800e5c8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e5cc:	b333      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5ce:	79ab      	ldrb	r3, [r5, #6]
 800e5d0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e5d4:	b313      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5d6:	79eb      	ldrb	r3, [r5, #7]
 800e5d8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e5dc:	b1f3      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5de:	7a2b      	ldrb	r3, [r5, #8]
 800e5e0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e5e4:	b1d3      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5e6:	7a6b      	ldrb	r3, [r5, #9]
 800e5e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e5ec:	b1b3      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5ee:	7aab      	ldrb	r3, [r5, #10]
 800e5f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e5f4:	b193      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5f6:	7aeb      	ldrb	r3, [r5, #11]
 800e5f8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e5fc:	b173      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e5fe:	7b2b      	ldrb	r3, [r5, #12]
 800e600:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e604:	b153      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e606:	7b6b      	ldrb	r3, [r5, #13]
 800e608:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e60c:	b133      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e60e:	7bab      	ldrb	r3, [r5, #14]
 800e610:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e614:	b113      	cbz	r3, 800e61c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e616:	7beb      	ldrb	r3, [r5, #15]
 800e618:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e61c:	2300      	movs	r3, #0
 800e61e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e622:	9d08      	ldr	r5, [sp, #32]
 800e624:	2d37      	cmp	r5, #55	; 0x37
 800e626:	bf28      	it	cs
 800e628:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e62a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e62e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e630:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e632:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e634:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e638:	f7fe fce0 	bl	800cffc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e63c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e640:	f104 0018 	add.w	r0, r4, #24
 800e644:	f7fe fcda 	bl	800cffc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e648:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e64a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e64e:	4651      	mov	r1, sl
 800e650:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e652:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e654:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e656:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e65a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e65e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e662:	f01a f96a 	bl	802893a <memset>
 800e666:	4b0b      	ldr	r3, [pc, #44]	; (800e694 <prvInitialiseNewTask.constprop.0+0x128>)
 800e668:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e66a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e66e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e670:	463a      	mov	r2, r7
 800e672:	4631      	mov	r1, r6
 800e674:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e676:	6625      	str	r5, [r4, #96]	; 0x60
 800e678:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e67a:	f7fe fd3d 	bl	800d0f8 <pxPortInitialiseStack>
 800e67e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e680:	f1b8 0f00 	cmp.w	r8, #0
 800e684:	d001      	beq.n	800e68a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e686:	f8c8 4000 	str.w	r4, [r8]
}
 800e68a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e68e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e692:	e7c6      	b.n	800e622 <prvInitialiseNewTask.constprop.0+0xb6>
 800e694:	20014128 	.word	0x20014128

0800e698 <prvIdleTask>:
{
 800e698:	b580      	push	{r7, lr}
 800e69a:	4d23      	ldr	r5, [pc, #140]	; (800e728 <prvIdleTask+0x90>)
 800e69c:	4f23      	ldr	r7, [pc, #140]	; (800e72c <prvIdleTask+0x94>)
 800e69e:	4e24      	ldr	r6, [pc, #144]	; (800e730 <prvIdleTask+0x98>)
 800e6a0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e734 <prvIdleTask+0x9c>
				taskYIELD();
 800e6a4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e6a8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e6ac:	682b      	ldr	r3, [r5, #0]
 800e6ae:	b35b      	cbz	r3, 800e708 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e6b0:	f7fe fd48 	bl	800d144 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6b4:	68fb      	ldr	r3, [r7, #12]
 800e6b6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e6b8:	1d20      	adds	r0, r4, #4
 800e6ba:	f7fe fccb 	bl	800d054 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e6be:	6833      	ldr	r3, [r6, #0]
 800e6c0:	3b01      	subs	r3, #1
 800e6c2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e6c4:	682b      	ldr	r3, [r5, #0]
 800e6c6:	3b01      	subs	r3, #1
 800e6c8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e6ca:	f7fe fd5d 	bl	800d188 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e6ce:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e6d2:	f01a f97b 	bl	80289cc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e6d6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e6da:	b163      	cbz	r3, 800e6f6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e6dc:	2b01      	cmp	r3, #1
 800e6de:	d01e      	beq.n	800e71e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e6e0:	2b02      	cmp	r3, #2
 800e6e2:	d0e3      	beq.n	800e6ac <prvIdleTask+0x14>
 800e6e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6e8:	f383 8811 	msr	BASEPRI, r3
 800e6ec:	f3bf 8f6f 	isb	sy
 800e6f0:	f3bf 8f4f 	dsb	sy
 800e6f4:	e7fe      	b.n	800e6f4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e6f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e6f8:	f7fe fc10 	bl	800cf1c <vPortFree>
				vPortFree( pxTCB );
 800e6fc:	4620      	mov	r0, r4
 800e6fe:	f7fe fc0d 	bl	800cf1c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e702:	682b      	ldr	r3, [r5, #0]
 800e704:	2b00      	cmp	r3, #0
 800e706:	d1d3      	bne.n	800e6b0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e708:	f8d8 3000 	ldr.w	r3, [r8]
 800e70c:	2b01      	cmp	r3, #1
 800e70e:	d9cd      	bls.n	800e6ac <prvIdleTask+0x14>
				taskYIELD();
 800e710:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e714:	f3bf 8f4f 	dsb	sy
 800e718:	f3bf 8f6f 	isb	sy
 800e71c:	e7c6      	b.n	800e6ac <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e71e:	4620      	mov	r0, r4
 800e720:	f7fe fbfc 	bl	800cf1c <vPortFree>
 800e724:	e7c2      	b.n	800e6ac <prvIdleTask+0x14>
 800e726:	bf00      	nop
 800e728:	20013608 	.word	0x20013608
 800e72c:	20013678 	.word	0x20013678
 800e730:	20013604 	.word	0x20013604
 800e734:	200131a4 	.word	0x200131a4

0800e738 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e73c:	4b47      	ldr	r3, [pc, #284]	; (800e85c <xTaskIncrementTick.part.0+0x124>)
 800e73e:	681e      	ldr	r6, [r3, #0]
 800e740:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e742:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e744:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e746:	2e00      	cmp	r6, #0
 800e748:	d040      	beq.n	800e7cc <xTaskIncrementTick.part.0+0x94>
 800e74a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e870 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e74e:	f8db 3000 	ldr.w	r3, [fp]
 800e752:	429e      	cmp	r6, r3
 800e754:	d347      	bcc.n	800e7e6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e756:	4f42      	ldr	r7, [pc, #264]	; (800e860 <xTaskIncrementTick.part.0+0x128>)
 800e758:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e874 <xTaskIncrementTick.part.0+0x13c>
 800e75c:	683b      	ldr	r3, [r7, #0]
 800e75e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e878 <xTaskIncrementTick.part.0+0x140>
 800e762:	681d      	ldr	r5, [r3, #0]
 800e764:	2d00      	cmp	r5, #0
 800e766:	d073      	beq.n	800e850 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e768:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e87c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e76c:	2500      	movs	r5, #0
 800e76e:	e022      	b.n	800e7b6 <xTaskIncrementTick.part.0+0x7e>
 800e770:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e772:	f7fe fc6f 	bl	800d054 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e776:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e778:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e77a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e77e:	b113      	cbz	r3, 800e786 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e780:	f7fe fc68 	bl	800d054 <uxListRemove>
 800e784:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e786:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e788:	f8d8 2000 	ldr.w	r2, [r8]
 800e78c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e790:	4293      	cmp	r3, r2
 800e792:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e796:	bf88      	it	hi
 800e798:	f8c8 3000 	strhi.w	r3, [r8]
 800e79c:	f7fe fc32 	bl	800d004 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e7a0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e7a4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e7a6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e7a8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e7aa:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e7ac:	4291      	cmp	r1, r2
 800e7ae:	bf28      	it	cs
 800e7b0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	d04c      	beq.n	800e850 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7b6:	683b      	ldr	r3, [r7, #0]
 800e7b8:	68db      	ldr	r3, [r3, #12]
 800e7ba:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e7bc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e7be:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e7c0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e7c2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e7c4:	d2d4      	bcs.n	800e770 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e7c6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e7ca:	e011      	b.n	800e7f0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e7cc:	4b24      	ldr	r3, [pc, #144]	; (800e860 <xTaskIncrementTick.part.0+0x128>)
 800e7ce:	681a      	ldr	r2, [r3, #0]
 800e7d0:	6812      	ldr	r2, [r2, #0]
 800e7d2:	b30a      	cbz	r2, 800e818 <xTaskIncrementTick.part.0+0xe0>
 800e7d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7d8:	f383 8811 	msr	BASEPRI, r3
 800e7dc:	f3bf 8f6f 	isb	sy
 800e7e0:	f3bf 8f4f 	dsb	sy
 800e7e4:	e7fe      	b.n	800e7e4 <xTaskIncrementTick.part.0+0xac>
 800e7e6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e874 <xTaskIncrementTick.part.0+0x13c>
 800e7ea:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e878 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e7ee:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e7f0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e7f4:	491b      	ldr	r1, [pc, #108]	; (800e864 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e7f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7f8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e7fc:	009b      	lsls	r3, r3, #2
 800e7fe:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e802:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e804:	2a02      	cmp	r2, #2
 800e806:	bf28      	it	cs
 800e808:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e80a:	2b00      	cmp	r3, #0
}
 800e80c:	bf0c      	ite	eq
 800e80e:	4628      	moveq	r0, r5
 800e810:	2001      	movne	r0, #1
 800e812:	b003      	add	sp, #12
 800e814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e818:	4a13      	ldr	r2, [pc, #76]	; (800e868 <xTaskIncrementTick.part.0+0x130>)
 800e81a:	6818      	ldr	r0, [r3, #0]
 800e81c:	6811      	ldr	r1, [r2, #0]
 800e81e:	6019      	str	r1, [r3, #0]
 800e820:	4912      	ldr	r1, [pc, #72]	; (800e86c <xTaskIncrementTick.part.0+0x134>)
 800e822:	6010      	str	r0, [r2, #0]
 800e824:	680a      	ldr	r2, [r1, #0]
 800e826:	3201      	adds	r2, #1
 800e828:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e82a:	681a      	ldr	r2, [r3, #0]
 800e82c:	6812      	ldr	r2, [r2, #0]
 800e82e:	b932      	cbnz	r2, 800e83e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e830:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e870 <xTaskIncrementTick.part.0+0x138>
 800e834:	f04f 33ff 	mov.w	r3, #4294967295
 800e838:	f8cb 3000 	str.w	r3, [fp]
 800e83c:	e787      	b.n	800e74e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e83e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e840:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e870 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e844:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e846:	68db      	ldr	r3, [r3, #12]
 800e848:	685b      	ldr	r3, [r3, #4]
 800e84a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e84e:	e77e      	b.n	800e74e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e850:	f04f 33ff 	mov.w	r3, #4294967295
 800e854:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e858:	e7ca      	b.n	800e7f0 <xTaskIncrementTick.part.0+0xb8>
 800e85a:	bf00      	nop
 800e85c:	2001368c 	.word	0x2001368c
 800e860:	2001319c 	.word	0x2001319c
 800e864:	20013690 	.word	0x20013690
 800e868:	200131a0 	.word	0x200131a0
 800e86c:	20013644 	.word	0x20013644
 800e870:	20013640 	.word	0x20013640
 800e874:	200131a4 	.word	0x200131a4
 800e878:	20013198 	.word	0x20013198
 800e87c:	20013614 	.word	0x20013614

0800e880 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e884:	4d41      	ldr	r5, [pc, #260]	; (800e98c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e886:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e888:	f7fe fc5c 	bl	800d144 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e88c:	682b      	ldr	r3, [r5, #0]
 800e88e:	3b01      	subs	r3, #1
 800e890:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e892:	682b      	ldr	r3, [r5, #0]
 800e894:	2b00      	cmp	r3, #0
 800e896:	d161      	bne.n	800e95c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e898:	4b3d      	ldr	r3, [pc, #244]	; (800e990 <xTaskResumeAll.part.0+0x110>)
 800e89a:	681b      	ldr	r3, [r3, #0]
 800e89c:	2b00      	cmp	r3, #0
 800e89e:	d05d      	beq.n	800e95c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e8a0:	4e3c      	ldr	r6, [pc, #240]	; (800e994 <xTaskResumeAll.part.0+0x114>)
 800e8a2:	6833      	ldr	r3, [r6, #0]
 800e8a4:	2b00      	cmp	r3, #0
 800e8a6:	d06e      	beq.n	800e986 <xTaskResumeAll.part.0+0x106>
 800e8a8:	4f3b      	ldr	r7, [pc, #236]	; (800e998 <xTaskResumeAll.part.0+0x118>)
 800e8aa:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e9a8 <xTaskResumeAll.part.0+0x128>
 800e8ae:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e9ac <xTaskResumeAll.part.0+0x12c>
 800e8b2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e9b0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8b6:	68f3      	ldr	r3, [r6, #12]
 800e8b8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e8ba:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e8be:	f104 0018 	add.w	r0, r4, #24
 800e8c2:	f7fe fbc7 	bl	800d054 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e8c6:	4658      	mov	r0, fp
 800e8c8:	f7fe fbc4 	bl	800d054 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e8cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e8ce:	683a      	ldr	r2, [r7, #0]
 800e8d0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e8d4:	4293      	cmp	r3, r2
 800e8d6:	4659      	mov	r1, fp
 800e8d8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e8dc:	bf88      	it	hi
 800e8de:	603b      	strhi	r3, [r7, #0]
 800e8e0:	f7fe fb90 	bl	800d004 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e8e4:	f8d8 3000 	ldr.w	r3, [r8]
 800e8e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e8ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8ec:	429a      	cmp	r2, r3
 800e8ee:	d33d      	bcc.n	800e96c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e8f0:	2301      	movs	r3, #1
 800e8f2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e8f6:	6833      	ldr	r3, [r6, #0]
 800e8f8:	2b00      	cmp	r3, #0
 800e8fa:	d1dc      	bne.n	800e8b6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e8fc:	4b27      	ldr	r3, [pc, #156]	; (800e99c <xTaskResumeAll.part.0+0x11c>)
 800e8fe:	681a      	ldr	r2, [r3, #0]
 800e900:	6812      	ldr	r2, [r2, #0]
 800e902:	2a00      	cmp	r2, #0
 800e904:	d03a      	beq.n	800e97c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e906:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e908:	4b25      	ldr	r3, [pc, #148]	; (800e9a0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e90a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e90c:	68d2      	ldr	r2, [r2, #12]
 800e90e:	6852      	ldr	r2, [r2, #4]
 800e910:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e912:	4e24      	ldr	r6, [pc, #144]	; (800e9a4 <xTaskResumeAll.part.0+0x124>)
 800e914:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e916:	b194      	cbz	r4, 800e93e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e918:	2701      	movs	r7, #1
 800e91a:	e006      	b.n	800e92a <xTaskResumeAll.part.0+0xaa>
 800e91c:	f7ff ff0c 	bl	800e738 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e920:	b108      	cbz	r0, 800e926 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e922:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e926:	3c01      	subs	r4, #1
 800e928:	d008      	beq.n	800e93c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e92a:	682b      	ldr	r3, [r5, #0]
 800e92c:	2b00      	cmp	r3, #0
 800e92e:	d0f5      	beq.n	800e91c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e930:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e932:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e934:	f103 0301 	add.w	r3, r3, #1
 800e938:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e93a:	d1f6      	bne.n	800e92a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e93c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e93e:	f8da 3000 	ldr.w	r3, [sl]
 800e942:	b15b      	cbz	r3, 800e95c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e944:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e948:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e94c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e950:	f3bf 8f4f 	dsb	sy
 800e954:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e958:	2001      	movs	r0, #1
 800e95a:	e000      	b.n	800e95e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e95c:	2000      	movs	r0, #0
 800e95e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e960:	f7fe fc12 	bl	800d188 <vPortExitCritical>
}
 800e964:	9801      	ldr	r0, [sp, #4]
 800e966:	b003      	add	sp, #12
 800e968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e96c:	6833      	ldr	r3, [r6, #0]
 800e96e:	2b00      	cmp	r3, #0
 800e970:	d1a1      	bne.n	800e8b6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e972:	4b0a      	ldr	r3, [pc, #40]	; (800e99c <xTaskResumeAll.part.0+0x11c>)
 800e974:	681a      	ldr	r2, [r3, #0]
 800e976:	6812      	ldr	r2, [r2, #0]
 800e978:	2a00      	cmp	r2, #0
 800e97a:	d1c4      	bne.n	800e906 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e97c:	4b08      	ldr	r3, [pc, #32]	; (800e9a0 <xTaskResumeAll.part.0+0x120>)
 800e97e:	f04f 32ff 	mov.w	r2, #4294967295
 800e982:	601a      	str	r2, [r3, #0]
 800e984:	e7c5      	b.n	800e912 <xTaskResumeAll.part.0+0x92>
 800e986:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e9b0 <xTaskResumeAll.part.0+0x130>
 800e98a:	e7c2      	b.n	800e912 <xTaskResumeAll.part.0+0x92>
 800e98c:	2001360c 	.word	0x2001360c
 800e990:	20013604 	.word	0x20013604
 800e994:	2001364c 	.word	0x2001364c
 800e998:	20013614 	.word	0x20013614
 800e99c:	2001319c 	.word	0x2001319c
 800e9a0:	20013640 	.word	0x20013640
 800e9a4:	20013648 	.word	0x20013648
 800e9a8:	200131a4 	.word	0x200131a4
 800e9ac:	20013198 	.word	0x20013198
 800e9b0:	20013690 	.word	0x20013690

0800e9b4 <xTaskCreateStatic>:
	{
 800e9b4:	b530      	push	{r4, r5, lr}
 800e9b6:	b087      	sub	sp, #28
 800e9b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e9ba:	b1c4      	cbz	r4, 800e9ee <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e9bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e9be:	b16d      	cbz	r5, 800e9dc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e9c0:	25ac      	movs	r5, #172	; 0xac
 800e9c2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e9c4:	9d05      	ldr	r5, [sp, #20]
 800e9c6:	2dac      	cmp	r5, #172	; 0xac
 800e9c8:	d01a      	beq.n	800ea00 <xTaskCreateStatic+0x4c>
 800e9ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9ce:	f383 8811 	msr	BASEPRI, r3
 800e9d2:	f3bf 8f6f 	isb	sy
 800e9d6:	f3bf 8f4f 	dsb	sy
 800e9da:	e7fe      	b.n	800e9da <xTaskCreateStatic+0x26>
 800e9dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9e0:	f383 8811 	msr	BASEPRI, r3
 800e9e4:	f3bf 8f6f 	isb	sy
 800e9e8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e9ec:	e7fe      	b.n	800e9ec <xTaskCreateStatic+0x38>
 800e9ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f2:	f383 8811 	msr	BASEPRI, r3
 800e9f6:	f3bf 8f6f 	isb	sy
 800e9fa:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e9fe:	e7fe      	b.n	800e9fe <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ea00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ea02:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ea04:	2402      	movs	r4, #2
 800ea06:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ea0a:	ac04      	add	r4, sp, #16
 800ea0c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ea10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ea12:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ea14:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ea16:	f7ff fda9 	bl	800e56c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ea1a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ea1c:	f7ff fd1e 	bl	800e45c <prvAddNewTaskToReadyList>
	}
 800ea20:	9804      	ldr	r0, [sp, #16]
 800ea22:	b007      	add	sp, #28
 800ea24:	bd30      	pop	{r4, r5, pc}
 800ea26:	bf00      	nop

0800ea28 <xTaskCreate>:
	{
 800ea28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea2c:	4607      	mov	r7, r0
 800ea2e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ea30:	0090      	lsls	r0, r2, #2
	{
 800ea32:	4615      	mov	r5, r2
 800ea34:	4688      	mov	r8, r1
 800ea36:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ea38:	f7fe f9b4 	bl	800cda4 <pvPortMalloc>
			if( pxStack != NULL )
 800ea3c:	b1d8      	cbz	r0, 800ea76 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ea3e:	4604      	mov	r4, r0
 800ea40:	20ac      	movs	r0, #172	; 0xac
 800ea42:	f7fe f9af 	bl	800cda4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ea46:	4606      	mov	r6, r0
 800ea48:	b1d0      	cbz	r0, 800ea80 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ea4a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ea4c:	2400      	movs	r4, #0
 800ea4e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ea52:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ea54:	9401      	str	r4, [sp, #4]
 800ea56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ea58:	9602      	str	r6, [sp, #8]
 800ea5a:	464b      	mov	r3, r9
 800ea5c:	462a      	mov	r2, r5
 800ea5e:	4641      	mov	r1, r8
 800ea60:	4638      	mov	r0, r7
 800ea62:	9400      	str	r4, [sp, #0]
 800ea64:	f7ff fd82 	bl	800e56c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ea68:	4630      	mov	r0, r6
 800ea6a:	f7ff fcf7 	bl	800e45c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ea6e:	2001      	movs	r0, #1
	}
 800ea70:	b005      	add	sp, #20
 800ea72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ea76:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ea7a:	b005      	add	sp, #20
 800ea7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ea80:	4620      	mov	r0, r4
 800ea82:	f7fe fa4b 	bl	800cf1c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ea86:	f04f 30ff 	mov.w	r0, #4294967295
 800ea8a:	e7f1      	b.n	800ea70 <xTaskCreate+0x48>

0800ea8c <vTaskDelay>:
	{
 800ea8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ea8e:	b950      	cbnz	r0, 800eaa6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ea90:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ea94:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ea98:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ea9c:	f3bf 8f4f 	dsb	sy
 800eaa0:	f3bf 8f6f 	isb	sy
	}
 800eaa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800eaa6:	4d1e      	ldr	r5, [pc, #120]	; (800eb20 <vTaskDelay+0x94>)
 800eaa8:	682b      	ldr	r3, [r5, #0]
 800eaaa:	b143      	cbz	r3, 800eabe <vTaskDelay+0x32>
 800eaac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eab0:	f383 8811 	msr	BASEPRI, r3
 800eab4:	f3bf 8f6f 	isb	sy
 800eab8:	f3bf 8f4f 	dsb	sy
 800eabc:	e7fe      	b.n	800eabc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800eabe:	682b      	ldr	r3, [r5, #0]
 800eac0:	3301      	adds	r3, #1
 800eac2:	4604      	mov	r4, r0
 800eac4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eac6:	4b17      	ldr	r3, [pc, #92]	; (800eb24 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eac8:	4e17      	ldr	r6, [pc, #92]	; (800eb28 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800eaca:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eacc:	6830      	ldr	r0, [r6, #0]
 800eace:	3004      	adds	r0, #4
 800ead0:	f7fe fac0 	bl	800d054 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ead4:	6833      	ldr	r3, [r6, #0]
 800ead6:	19e4      	adds	r4, r4, r7
 800ead8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800eada:	d310      	bcc.n	800eafe <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eadc:	4b13      	ldr	r3, [pc, #76]	; (800eb2c <vTaskDelay+0xa0>)
 800eade:	6818      	ldr	r0, [r3, #0]
 800eae0:	6831      	ldr	r1, [r6, #0]
 800eae2:	3104      	adds	r1, #4
 800eae4:	f7fe fa9e 	bl	800d024 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800eae8:	682b      	ldr	r3, [r5, #0]
 800eaea:	b9a3      	cbnz	r3, 800eb16 <vTaskDelay+0x8a>
 800eaec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaf0:	f383 8811 	msr	BASEPRI, r3
 800eaf4:	f3bf 8f6f 	isb	sy
 800eaf8:	f3bf 8f4f 	dsb	sy
 800eafc:	e7fe      	b.n	800eafc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eafe:	4b0c      	ldr	r3, [pc, #48]	; (800eb30 <vTaskDelay+0xa4>)
 800eb00:	6818      	ldr	r0, [r3, #0]
 800eb02:	6831      	ldr	r1, [r6, #0]
 800eb04:	3104      	adds	r1, #4
 800eb06:	f7fe fa8d 	bl	800d024 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800eb0a:	4b0a      	ldr	r3, [pc, #40]	; (800eb34 <vTaskDelay+0xa8>)
 800eb0c:	681a      	ldr	r2, [r3, #0]
 800eb0e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800eb10:	bf38      	it	cc
 800eb12:	601c      	strcc	r4, [r3, #0]
 800eb14:	e7e8      	b.n	800eae8 <vTaskDelay+0x5c>
 800eb16:	f7ff feb3 	bl	800e880 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800eb1a:	2800      	cmp	r0, #0
 800eb1c:	d0b8      	beq.n	800ea90 <vTaskDelay+0x4>
	}
 800eb1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eb20:	2001360c 	.word	0x2001360c
 800eb24:	2001368c 	.word	0x2001368c
 800eb28:	20013198 	.word	0x20013198
 800eb2c:	200131a0 	.word	0x200131a0
 800eb30:	2001319c 	.word	0x2001319c
 800eb34:	20013640 	.word	0x20013640

0800eb38 <vTaskStartScheduler>:
{
 800eb38:	b530      	push	{r4, r5, lr}
 800eb3a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800eb3c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800eb3e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800eb40:	a906      	add	r1, sp, #24
 800eb42:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800eb44:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800eb48:	f7fe f90e 	bl	800cd68 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800eb4c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800eb50:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800eb52:	b1bb      	cbz	r3, 800eb84 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800eb54:	b16d      	cbz	r5, 800eb72 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800eb56:	21ac      	movs	r1, #172	; 0xac
 800eb58:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800eb5a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800eb5c:	29ac      	cmp	r1, #172	; 0xac
 800eb5e:	d01a      	beq.n	800eb96 <vTaskStartScheduler+0x5e>
 800eb60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb64:	f383 8811 	msr	BASEPRI, r3
 800eb68:	f3bf 8f6f 	isb	sy
 800eb6c:	f3bf 8f4f 	dsb	sy
 800eb70:	e7fe      	b.n	800eb70 <vTaskStartScheduler+0x38>
 800eb72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb76:	f383 8811 	msr	BASEPRI, r3
 800eb7a:	f3bf 8f6f 	isb	sy
 800eb7e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eb82:	e7fe      	b.n	800eb82 <vTaskStartScheduler+0x4a>
 800eb84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb88:	f383 8811 	msr	BASEPRI, r3
 800eb8c:	f3bf 8f6f 	isb	sy
 800eb90:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800eb94:	e7fe      	b.n	800eb94 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eb96:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eb98:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eb9a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eb9c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800eba0:	4623      	mov	r3, r4
 800eba2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800eba6:	491b      	ldr	r1, [pc, #108]	; (800ec14 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800eba8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ebaa:	9400      	str	r4, [sp, #0]
 800ebac:	481a      	ldr	r0, [pc, #104]	; (800ec18 <vTaskStartScheduler+0xe0>)
 800ebae:	f7ff fcdd 	bl	800e56c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ebb2:	4628      	mov	r0, r5
 800ebb4:	f7ff fc52 	bl	800e45c <prvAddNewTaskToReadyList>
		return xReturn;
 800ebb8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800ebba:	b1eb      	cbz	r3, 800ebf8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800ebbc:	f000 fc6e 	bl	800f49c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800ebc0:	2801      	cmp	r0, #1
 800ebc2:	d11b      	bne.n	800ebfc <vTaskStartScheduler+0xc4>
 800ebc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebc8:	f383 8811 	msr	BASEPRI, r3
 800ebcc:	f3bf 8f6f 	isb	sy
 800ebd0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ebd4:	4b11      	ldr	r3, [pc, #68]	; (800ec1c <vTaskStartScheduler+0xe4>)
 800ebd6:	4a12      	ldr	r2, [pc, #72]	; (800ec20 <vTaskStartScheduler+0xe8>)
 800ebd8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ebda:	4912      	ldr	r1, [pc, #72]	; (800ec24 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ebdc:	3358      	adds	r3, #88	; 0x58
 800ebde:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ebe0:	4a11      	ldr	r2, [pc, #68]	; (800ec28 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ebe2:	4b12      	ldr	r3, [pc, #72]	; (800ec2c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ebe4:	f04f 35ff 	mov.w	r5, #4294967295
 800ebe8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ebea:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ebec:	601c      	str	r4, [r3, #0]
}
 800ebee:	b00b      	add	sp, #44	; 0x2c
 800ebf0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ebf4:	f7fe bb38 	b.w	800d268 <xPortStartScheduler>
}
 800ebf8:	b00b      	add	sp, #44	; 0x2c
 800ebfa:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ebfc:	3001      	adds	r0, #1
 800ebfe:	d1fb      	bne.n	800ebf8 <vTaskStartScheduler+0xc0>
 800ec00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec04:	f383 8811 	msr	BASEPRI, r3
 800ec08:	f3bf 8f6f 	isb	sy
 800ec0c:	f3bf 8f4f 	dsb	sy
 800ec10:	e7fe      	b.n	800ec10 <vTaskStartScheduler+0xd8>
 800ec12:	bf00      	nop
 800ec14:	0802c5d0 	.word	0x0802c5d0
 800ec18:	0800e699 	.word	0x0800e699
 800ec1c:	20013198 	.word	0x20013198
 800ec20:	20000160 	.word	0x20000160
 800ec24:	20013640 	.word	0x20013640
 800ec28:	20013660 	.word	0x20013660
 800ec2c:	2001368c 	.word	0x2001368c

0800ec30 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ec30:	4a02      	ldr	r2, [pc, #8]	; (800ec3c <vTaskSuspendAll+0xc>)
 800ec32:	6813      	ldr	r3, [r2, #0]
 800ec34:	3301      	adds	r3, #1
 800ec36:	6013      	str	r3, [r2, #0]
}
 800ec38:	4770      	bx	lr
 800ec3a:	bf00      	nop
 800ec3c:	2001360c 	.word	0x2001360c

0800ec40 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ec40:	4b06      	ldr	r3, [pc, #24]	; (800ec5c <xTaskResumeAll+0x1c>)
 800ec42:	681b      	ldr	r3, [r3, #0]
 800ec44:	b943      	cbnz	r3, 800ec58 <xTaskResumeAll+0x18>
 800ec46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec4a:	f383 8811 	msr	BASEPRI, r3
 800ec4e:	f3bf 8f6f 	isb	sy
 800ec52:	f3bf 8f4f 	dsb	sy
 800ec56:	e7fe      	b.n	800ec56 <xTaskResumeAll+0x16>
 800ec58:	f7ff be12 	b.w	800e880 <xTaskResumeAll.part.0>
 800ec5c:	2001360c 	.word	0x2001360c

0800ec60 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ec60:	4b01      	ldr	r3, [pc, #4]	; (800ec68 <xTaskGetTickCount+0x8>)
 800ec62:	6818      	ldr	r0, [r3, #0]
}
 800ec64:	4770      	bx	lr
 800ec66:	bf00      	nop
 800ec68:	2001368c 	.word	0x2001368c

0800ec6c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec6c:	4b05      	ldr	r3, [pc, #20]	; (800ec84 <xTaskIncrementTick+0x18>)
 800ec6e:	681b      	ldr	r3, [r3, #0]
 800ec70:	b90b      	cbnz	r3, 800ec76 <xTaskIncrementTick+0xa>
 800ec72:	f7ff bd61 	b.w	800e738 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ec76:	4a04      	ldr	r2, [pc, #16]	; (800ec88 <xTaskIncrementTick+0x1c>)
 800ec78:	6813      	ldr	r3, [r2, #0]
 800ec7a:	3301      	adds	r3, #1
}
 800ec7c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ec7e:	6013      	str	r3, [r2, #0]
}
 800ec80:	4770      	bx	lr
 800ec82:	bf00      	nop
 800ec84:	2001360c 	.word	0x2001360c
 800ec88:	20013648 	.word	0x20013648

0800ec8c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ec8c:	4b1f      	ldr	r3, [pc, #124]	; (800ed0c <vTaskSwitchContext+0x80>)
 800ec8e:	681b      	ldr	r3, [r3, #0]
 800ec90:	b11b      	cbz	r3, 800ec9a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ec92:	4b1f      	ldr	r3, [pc, #124]	; (800ed10 <vTaskSwitchContext+0x84>)
 800ec94:	2201      	movs	r2, #1
 800ec96:	601a      	str	r2, [r3, #0]
 800ec98:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ec9a:	4a1d      	ldr	r2, [pc, #116]	; (800ed10 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec9c:	491d      	ldr	r1, [pc, #116]	; (800ed14 <vTaskSwitchContext+0x88>)
{
 800ec9e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eca0:	4c1d      	ldr	r4, [pc, #116]	; (800ed18 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800eca2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eca4:	6823      	ldr	r3, [r4, #0]
 800eca6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ecaa:	0092      	lsls	r2, r2, #2
 800ecac:	0098      	lsls	r0, r3, #2
 800ecae:	588a      	ldr	r2, [r1, r2]
 800ecb0:	b942      	cbnz	r2, 800ecc4 <vTaskSwitchContext+0x38>
 800ecb2:	b313      	cbz	r3, 800ecfa <vTaskSwitchContext+0x6e>
 800ecb4:	3b01      	subs	r3, #1
 800ecb6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ecba:	0098      	lsls	r0, r3, #2
 800ecbc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ecc0:	2a00      	cmp	r2, #0
 800ecc2:	d0f6      	beq.n	800ecb2 <vTaskSwitchContext+0x26>
 800ecc4:	4418      	add	r0, r3
 800ecc6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ecca:	4662      	mov	r2, ip
 800eccc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ecd0:	6849      	ldr	r1, [r1, #4]
 800ecd2:	f8cc 1004 	str.w	r1, [ip, #4]
 800ecd6:	3208      	adds	r2, #8
 800ecd8:	4291      	cmp	r1, r2
 800ecda:	bf08      	it	eq
 800ecdc:	6849      	ldreq	r1, [r1, #4]
 800ecde:	4a0f      	ldr	r2, [pc, #60]	; (800ed1c <vTaskSwitchContext+0x90>)
 800ece0:	bf08      	it	eq
 800ece2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ece6:	68c9      	ldr	r1, [r1, #12]
 800ece8:	6011      	str	r1, [r2, #0]
 800ecea:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ecec:	6813      	ldr	r3, [r2, #0]
 800ecee:	4a0c      	ldr	r2, [pc, #48]	; (800ed20 <vTaskSwitchContext+0x94>)
}
 800ecf0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ecf4:	3358      	adds	r3, #88	; 0x58
 800ecf6:	6013      	str	r3, [r2, #0]
}
 800ecf8:	4770      	bx	lr
 800ecfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecfe:	f383 8811 	msr	BASEPRI, r3
 800ed02:	f3bf 8f6f 	isb	sy
 800ed06:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed0a:	e7fe      	b.n	800ed0a <vTaskSwitchContext+0x7e>
 800ed0c:	2001360c 	.word	0x2001360c
 800ed10:	20013690 	.word	0x20013690
 800ed14:	200131a4 	.word	0x200131a4
 800ed18:	20013614 	.word	0x20013614
 800ed1c:	20013198 	.word	0x20013198
 800ed20:	20000160 	.word	0x20000160

0800ed24 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800ed24:	b1d0      	cbz	r0, 800ed5c <vTaskPlaceOnEventList+0x38>
{
 800ed26:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ed28:	4d1a      	ldr	r5, [pc, #104]	; (800ed94 <vTaskPlaceOnEventList+0x70>)
 800ed2a:	460c      	mov	r4, r1
 800ed2c:	6829      	ldr	r1, [r5, #0]
 800ed2e:	3118      	adds	r1, #24
 800ed30:	f7fe f978 	bl	800d024 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ed34:	4b18      	ldr	r3, [pc, #96]	; (800ed98 <vTaskPlaceOnEventList+0x74>)
 800ed36:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed38:	6828      	ldr	r0, [r5, #0]
 800ed3a:	3004      	adds	r0, #4
 800ed3c:	f7fe f98a 	bl	800d054 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ed40:	1c63      	adds	r3, r4, #1
 800ed42:	d014      	beq.n	800ed6e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ed44:	682b      	ldr	r3, [r5, #0]
 800ed46:	19a4      	adds	r4, r4, r6
 800ed48:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ed4a:	d317      	bcc.n	800ed7c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed4c:	4b13      	ldr	r3, [pc, #76]	; (800ed9c <vTaskPlaceOnEventList+0x78>)
 800ed4e:	6818      	ldr	r0, [r3, #0]
 800ed50:	6829      	ldr	r1, [r5, #0]
}
 800ed52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed56:	3104      	adds	r1, #4
 800ed58:	f7fe b964 	b.w	800d024 <vListInsert>
 800ed5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed60:	f383 8811 	msr	BASEPRI, r3
 800ed64:	f3bf 8f6f 	isb	sy
 800ed68:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ed6c:	e7fe      	b.n	800ed6c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed6e:	6829      	ldr	r1, [r5, #0]
 800ed70:	480b      	ldr	r0, [pc, #44]	; (800eda0 <vTaskPlaceOnEventList+0x7c>)
}
 800ed72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed76:	3104      	adds	r1, #4
 800ed78:	f7fe b944 	b.w	800d004 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ed7c:	4b09      	ldr	r3, [pc, #36]	; (800eda4 <vTaskPlaceOnEventList+0x80>)
 800ed7e:	6818      	ldr	r0, [r3, #0]
 800ed80:	6829      	ldr	r1, [r5, #0]
 800ed82:	3104      	adds	r1, #4
 800ed84:	f7fe f94e 	bl	800d024 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ed88:	4b07      	ldr	r3, [pc, #28]	; (800eda8 <vTaskPlaceOnEventList+0x84>)
 800ed8a:	681a      	ldr	r2, [r3, #0]
 800ed8c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ed8e:	bf38      	it	cc
 800ed90:	601c      	strcc	r4, [r3, #0]
}
 800ed92:	bd70      	pop	{r4, r5, r6, pc}
 800ed94:	20013198 	.word	0x20013198
 800ed98:	2001368c 	.word	0x2001368c
 800ed9c:	200131a0 	.word	0x200131a0
 800eda0:	20013664 	.word	0x20013664
 800eda4:	2001319c 	.word	0x2001319c
 800eda8:	20013640 	.word	0x20013640

0800edac <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800edac:	b330      	cbz	r0, 800edfc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800edae:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800edb0:	4e1d      	ldr	r6, [pc, #116]	; (800ee28 <vTaskPlaceOnEventListRestricted+0x7c>)
 800edb2:	460c      	mov	r4, r1
 800edb4:	6831      	ldr	r1, [r6, #0]
 800edb6:	4615      	mov	r5, r2
 800edb8:	3118      	adds	r1, #24
 800edba:	f7fe f923 	bl	800d004 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800edbe:	4b1b      	ldr	r3, [pc, #108]	; (800ee2c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800edc0:	b985      	cbnz	r5, 800ede4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800edc2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800edc4:	6830      	ldr	r0, [r6, #0]
 800edc6:	3004      	adds	r0, #4
 800edc8:	f7fe f944 	bl	800d054 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800edcc:	6833      	ldr	r3, [r6, #0]
 800edce:	1964      	adds	r4, r4, r5
 800edd0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800edd2:	d31c      	bcc.n	800ee0e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edd4:	4b16      	ldr	r3, [pc, #88]	; (800ee30 <vTaskPlaceOnEventListRestricted+0x84>)
 800edd6:	6818      	ldr	r0, [r3, #0]
 800edd8:	6831      	ldr	r1, [r6, #0]
	}
 800edda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edde:	3104      	adds	r1, #4
 800ede0:	f7fe b920 	b.w	800d024 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ede4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ede6:	6830      	ldr	r0, [r6, #0]
 800ede8:	3004      	adds	r0, #4
 800edea:	f7fe f933 	bl	800d054 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edee:	6831      	ldr	r1, [r6, #0]
 800edf0:	4810      	ldr	r0, [pc, #64]	; (800ee34 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800edf2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800edf6:	3104      	adds	r1, #4
 800edf8:	f7fe b904 	b.w	800d004 <vListInsertEnd>
 800edfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee00:	f383 8811 	msr	BASEPRI, r3
 800ee04:	f3bf 8f6f 	isb	sy
 800ee08:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ee0c:	e7fe      	b.n	800ee0c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ee0e:	4b0a      	ldr	r3, [pc, #40]	; (800ee38 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ee10:	6818      	ldr	r0, [r3, #0]
 800ee12:	6831      	ldr	r1, [r6, #0]
 800ee14:	3104      	adds	r1, #4
 800ee16:	f7fe f905 	bl	800d024 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ee1a:	4b08      	ldr	r3, [pc, #32]	; (800ee3c <vTaskPlaceOnEventListRestricted+0x90>)
 800ee1c:	681a      	ldr	r2, [r3, #0]
 800ee1e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ee20:	bf38      	it	cc
 800ee22:	601c      	strcc	r4, [r3, #0]
	}
 800ee24:	bd70      	pop	{r4, r5, r6, pc}
 800ee26:	bf00      	nop
 800ee28:	20013198 	.word	0x20013198
 800ee2c:	2001368c 	.word	0x2001368c
 800ee30:	200131a0 	.word	0x200131a0
 800ee34:	20013664 	.word	0x20013664
 800ee38:	2001319c 	.word	0x2001319c
 800ee3c:	20013640 	.word	0x20013640

0800ee40 <xTaskRemoveFromEventList>:
{
 800ee40:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee42:	68c3      	ldr	r3, [r0, #12]
 800ee44:	68dc      	ldr	r4, [r3, #12]
{
 800ee46:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ee48:	2c00      	cmp	r4, #0
 800ee4a:	d02b      	beq.n	800eea4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ee4c:	f104 0518 	add.w	r5, r4, #24
 800ee50:	4628      	mov	r0, r5
 800ee52:	f7fe f8ff 	bl	800d054 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee56:	4b18      	ldr	r3, [pc, #96]	; (800eeb8 <xTaskRemoveFromEventList+0x78>)
 800ee58:	681b      	ldr	r3, [r3, #0]
 800ee5a:	b17b      	cbz	r3, 800ee7c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ee5c:	4817      	ldr	r0, [pc, #92]	; (800eebc <xTaskRemoveFromEventList+0x7c>)
 800ee5e:	4629      	mov	r1, r5
 800ee60:	f7fe f8d0 	bl	800d004 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ee64:	4b16      	ldr	r3, [pc, #88]	; (800eec0 <xTaskRemoveFromEventList+0x80>)
 800ee66:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ee68:	681b      	ldr	r3, [r3, #0]
 800ee6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee6c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ee6e:	bf85      	ittet	hi
 800ee70:	4b14      	ldrhi	r3, [pc, #80]	; (800eec4 <xTaskRemoveFromEventList+0x84>)
 800ee72:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ee74:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ee76:	6018      	strhi	r0, [r3, #0]
}
 800ee78:	b003      	add	sp, #12
 800ee7a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ee7c:	1d21      	adds	r1, r4, #4
 800ee7e:	4608      	mov	r0, r1
 800ee80:	9101      	str	r1, [sp, #4]
 800ee82:	f7fe f8e7 	bl	800d054 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ee86:	4a10      	ldr	r2, [pc, #64]	; (800eec8 <xTaskRemoveFromEventList+0x88>)
 800ee88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ee8a:	6810      	ldr	r0, [r2, #0]
 800ee8c:	9901      	ldr	r1, [sp, #4]
 800ee8e:	4283      	cmp	r3, r0
 800ee90:	480e      	ldr	r0, [pc, #56]	; (800eecc <xTaskRemoveFromEventList+0x8c>)
 800ee92:	bf88      	it	hi
 800ee94:	6013      	strhi	r3, [r2, #0]
 800ee96:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ee9a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ee9e:	f7fe f8b1 	bl	800d004 <vListInsertEnd>
 800eea2:	e7df      	b.n	800ee64 <xTaskRemoveFromEventList+0x24>
 800eea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea8:	f383 8811 	msr	BASEPRI, r3
 800eeac:	f3bf 8f6f 	isb	sy
 800eeb0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800eeb4:	e7fe      	b.n	800eeb4 <xTaskRemoveFromEventList+0x74>
 800eeb6:	bf00      	nop
 800eeb8:	2001360c 	.word	0x2001360c
 800eebc:	2001364c 	.word	0x2001364c
 800eec0:	20013198 	.word	0x20013198
 800eec4:	20013690 	.word	0x20013690
 800eec8:	20013614 	.word	0x20013614
 800eecc:	200131a4 	.word	0x200131a4

0800eed0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eed0:	4a03      	ldr	r2, [pc, #12]	; (800eee0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eed2:	4b04      	ldr	r3, [pc, #16]	; (800eee4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eed4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eed6:	681b      	ldr	r3, [r3, #0]
 800eed8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800eedc:	4770      	bx	lr
 800eede:	bf00      	nop
 800eee0:	20013644 	.word	0x20013644
 800eee4:	2001368c 	.word	0x2001368c

0800eee8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800eee8:	b328      	cbz	r0, 800ef36 <xTaskCheckForTimeOut+0x4e>
{
 800eeea:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eeec:	460d      	mov	r5, r1
 800eeee:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800eef0:	b1c1      	cbz	r1, 800ef24 <xTaskCheckForTimeOut+0x3c>
 800eef2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800eef4:	f7fe f926 	bl	800d144 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800eef8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800eefa:	4a1d      	ldr	r2, [pc, #116]	; (800ef70 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800eefc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800eefe:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ef00:	d030      	beq.n	800ef64 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ef02:	f8df c070 	ldr.w	ip, [pc, #112]	; 800ef74 <xTaskCheckForTimeOut+0x8c>
 800ef06:	e9d4 6000 	ldrd	r6, r0, [r4]
 800ef0a:	f8dc 7000 	ldr.w	r7, [ip]
 800ef0e:	42be      	cmp	r6, r7
 800ef10:	d01a      	beq.n	800ef48 <xTaskCheckForTimeOut+0x60>
 800ef12:	4288      	cmp	r0, r1
 800ef14:	d818      	bhi.n	800ef48 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800ef16:	2001      	movs	r0, #1
 800ef18:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ef1a:	f7fe f935 	bl	800d188 <vPortExitCritical>
}
 800ef1e:	9801      	ldr	r0, [sp, #4]
 800ef20:	b003      	add	sp, #12
 800ef22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef28:	f383 8811 	msr	BASEPRI, r3
 800ef2c:	f3bf 8f6f 	isb	sy
 800ef30:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800ef34:	e7fe      	b.n	800ef34 <xTaskCheckForTimeOut+0x4c>
 800ef36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef3a:	f383 8811 	msr	BASEPRI, r3
 800ef3e:	f3bf 8f6f 	isb	sy
 800ef42:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800ef46:	e7fe      	b.n	800ef46 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ef48:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800ef4c:	4573      	cmp	r3, lr
 800ef4e:	d90b      	bls.n	800ef68 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800ef50:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ef52:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef56:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800ef58:	4403      	add	r3, r0
 800ef5a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800ef5c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ef5e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800ef62:	e7d9      	b.n	800ef18 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800ef64:	2000      	movs	r0, #0
 800ef66:	e7d7      	b.n	800ef18 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800ef68:	2300      	movs	r3, #0
 800ef6a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800ef6c:	2001      	movs	r0, #1
 800ef6e:	e7d3      	b.n	800ef18 <xTaskCheckForTimeOut+0x30>
 800ef70:	2001368c 	.word	0x2001368c
 800ef74:	20013644 	.word	0x20013644

0800ef78 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800ef78:	4b01      	ldr	r3, [pc, #4]	; (800ef80 <vTaskMissedYield+0x8>)
 800ef7a:	2201      	movs	r2, #1
 800ef7c:	601a      	str	r2, [r3, #0]
}
 800ef7e:	4770      	bx	lr
 800ef80:	20013690 	.word	0x20013690

0800ef84 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ef84:	4b05      	ldr	r3, [pc, #20]	; (800ef9c <xTaskGetSchedulerState+0x18>)
 800ef86:	681b      	ldr	r3, [r3, #0]
 800ef88:	b133      	cbz	r3, 800ef98 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ef8a:	4b05      	ldr	r3, [pc, #20]	; (800efa0 <xTaskGetSchedulerState+0x1c>)
 800ef8c:	6818      	ldr	r0, [r3, #0]
 800ef8e:	fab0 f080 	clz	r0, r0
 800ef92:	0940      	lsrs	r0, r0, #5
 800ef94:	0040      	lsls	r0, r0, #1
 800ef96:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ef98:	2001      	movs	r0, #1
	}
 800ef9a:	4770      	bx	lr
 800ef9c:	20013660 	.word	0x20013660
 800efa0:	2001360c 	.word	0x2001360c

0800efa4 <xTaskPriorityInherit>:
	{
 800efa4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800efa6:	4604      	mov	r4, r0
	{
 800efa8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800efaa:	b1c8      	cbz	r0, 800efe0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800efac:	4d1d      	ldr	r5, [pc, #116]	; (800f024 <xTaskPriorityInherit+0x80>)
 800efae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800efb0:	682a      	ldr	r2, [r5, #0]
 800efb2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800efb4:	4293      	cmp	r3, r2
 800efb6:	d215      	bcs.n	800efe4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800efb8:	6982      	ldr	r2, [r0, #24]
 800efba:	2a00      	cmp	r2, #0
 800efbc:	db04      	blt.n	800efc8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800efbe:	682a      	ldr	r2, [r5, #0]
 800efc0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800efc2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800efc6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800efc8:	4e17      	ldr	r6, [pc, #92]	; (800f028 <xTaskPriorityInherit+0x84>)
 800efca:	6962      	ldr	r2, [r4, #20]
 800efcc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800efd0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800efd4:	429a      	cmp	r2, r3
 800efd6:	d00e      	beq.n	800eff6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800efd8:	682b      	ldr	r3, [r5, #0]
 800efda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efdc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800efde:	2001      	movs	r0, #1
	}
 800efe0:	b002      	add	sp, #8
 800efe2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800efe4:	682b      	ldr	r3, [r5, #0]
 800efe6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800efe8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800efea:	4298      	cmp	r0, r3
 800efec:	bf2c      	ite	cs
 800efee:	2000      	movcs	r0, #0
 800eff0:	2001      	movcc	r0, #1
	}
 800eff2:	b002      	add	sp, #8
 800eff4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eff6:	1d21      	adds	r1, r4, #4
 800eff8:	4608      	mov	r0, r1
 800effa:	9101      	str	r1, [sp, #4]
 800effc:	f7fe f82a 	bl	800d054 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f000:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f002:	4b0a      	ldr	r3, [pc, #40]	; (800f02c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f004:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f006:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f008:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f00a:	4290      	cmp	r0, r2
 800f00c:	bf88      	it	hi
 800f00e:	6018      	strhi	r0, [r3, #0]
 800f010:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f014:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f018:	9901      	ldr	r1, [sp, #4]
 800f01a:	f7fd fff3 	bl	800d004 <vListInsertEnd>
				xReturn = pdTRUE;
 800f01e:	2001      	movs	r0, #1
 800f020:	e7de      	b.n	800efe0 <xTaskPriorityInherit+0x3c>
 800f022:	bf00      	nop
 800f024:	20013198 	.word	0x20013198
 800f028:	200131a4 	.word	0x200131a4
 800f02c:	20013614 	.word	0x20013614

0800f030 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f030:	b318      	cbz	r0, 800f07a <xTaskPriorityDisinherit+0x4a>
	{
 800f032:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f034:	4b1e      	ldr	r3, [pc, #120]	; (800f0b0 <xTaskPriorityDisinherit+0x80>)
 800f036:	681c      	ldr	r4, [r3, #0]
 800f038:	4284      	cmp	r4, r0
	{
 800f03a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f03c:	d008      	beq.n	800f050 <xTaskPriorityDisinherit+0x20>
 800f03e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f042:	f383 8811 	msr	BASEPRI, r3
 800f046:	f3bf 8f6f 	isb	sy
 800f04a:	f3bf 8f4f 	dsb	sy
 800f04e:	e7fe      	b.n	800f04e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f050:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f052:	b14b      	cbz	r3, 800f068 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f054:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f056:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f058:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f05a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f05c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f05e:	d000      	beq.n	800f062 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f060:	b16b      	cbz	r3, 800f07e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f062:	2000      	movs	r0, #0
	}
 800f064:	b002      	add	sp, #8
 800f066:	bd10      	pop	{r4, pc}
 800f068:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f06c:	f383 8811 	msr	BASEPRI, r3
 800f070:	f3bf 8f6f 	isb	sy
 800f074:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f078:	e7fe      	b.n	800f078 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f07a:	2000      	movs	r0, #0
	}
 800f07c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f07e:	1d21      	adds	r1, r4, #4
 800f080:	4608      	mov	r0, r1
 800f082:	9101      	str	r1, [sp, #4]
 800f084:	f7fd ffe6 	bl	800d054 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f088:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f08a:	4a0a      	ldr	r2, [pc, #40]	; (800f0b4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f08c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f08e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f092:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f094:	6810      	ldr	r0, [r2, #0]
 800f096:	9901      	ldr	r1, [sp, #4]
 800f098:	4283      	cmp	r3, r0
 800f09a:	4807      	ldr	r0, [pc, #28]	; (800f0b8 <xTaskPriorityDisinherit+0x88>)
 800f09c:	bf88      	it	hi
 800f09e:	6013      	strhi	r3, [r2, #0]
 800f0a0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f0a4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f0a8:	f7fd ffac 	bl	800d004 <vListInsertEnd>
					xReturn = pdTRUE;
 800f0ac:	2001      	movs	r0, #1
		return xReturn;
 800f0ae:	e7d9      	b.n	800f064 <xTaskPriorityDisinherit+0x34>
 800f0b0:	20013198 	.word	0x20013198
 800f0b4:	20013614 	.word	0x20013614
 800f0b8:	200131a4 	.word	0x200131a4

0800f0bc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f0bc:	2800      	cmp	r0, #0
 800f0be:	d041      	beq.n	800f144 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f0c0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f0c2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f0c4:	b083      	sub	sp, #12
 800f0c6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f0c8:	b153      	cbz	r3, 800f0e0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f0ca:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f0cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f0ce:	4281      	cmp	r1, r0
 800f0d0:	bf38      	it	cc
 800f0d2:	4601      	movcc	r1, r0
 800f0d4:	428a      	cmp	r2, r1
 800f0d6:	d001      	beq.n	800f0dc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f0d8:	2b01      	cmp	r3, #1
 800f0da:	d00a      	beq.n	800f0f2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f0dc:	b003      	add	sp, #12
 800f0de:	bd30      	pop	{r4, r5, pc}
 800f0e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0e4:	f383 8811 	msr	BASEPRI, r3
 800f0e8:	f3bf 8f6f 	isb	sy
 800f0ec:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f0f0:	e7fe      	b.n	800f0f0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f0f2:	4b19      	ldr	r3, [pc, #100]	; (800f158 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f0f4:	681b      	ldr	r3, [r3, #0]
 800f0f6:	42a3      	cmp	r3, r4
 800f0f8:	d025      	beq.n	800f146 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f0fa:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f0fc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f0fe:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f100:	bfa8      	it	ge
 800f102:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f106:	4d15      	ldr	r5, [pc, #84]	; (800f15c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f108:	bfa8      	it	ge
 800f10a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f10c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f110:	6961      	ldr	r1, [r4, #20]
 800f112:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f116:	4299      	cmp	r1, r3
 800f118:	d1e0      	bne.n	800f0dc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f11a:	1d21      	adds	r1, r4, #4
 800f11c:	4608      	mov	r0, r1
 800f11e:	9101      	str	r1, [sp, #4]
 800f120:	f7fd ff98 	bl	800d054 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f124:	4b0e      	ldr	r3, [pc, #56]	; (800f160 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f126:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f128:	681a      	ldr	r2, [r3, #0]
 800f12a:	9901      	ldr	r1, [sp, #4]
 800f12c:	4290      	cmp	r0, r2
 800f12e:	bf88      	it	hi
 800f130:	6018      	strhi	r0, [r3, #0]
 800f132:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f136:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f13a:	b003      	add	sp, #12
 800f13c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f140:	f7fd bf60 	b.w	800d004 <vListInsertEnd>
 800f144:	4770      	bx	lr
 800f146:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f14a:	f383 8811 	msr	BASEPRI, r3
 800f14e:	f3bf 8f6f 	isb	sy
 800f152:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f156:	e7fe      	b.n	800f156 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f158:	20013198 	.word	0x20013198
 800f15c:	200131a4 	.word	0x200131a4
 800f160:	20013614 	.word	0x20013614

0800f164 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f164:	4b04      	ldr	r3, [pc, #16]	; (800f178 <pvTaskIncrementMutexHeldCount+0x14>)
 800f166:	681a      	ldr	r2, [r3, #0]
 800f168:	b11a      	cbz	r2, 800f172 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f16a:	6819      	ldr	r1, [r3, #0]
 800f16c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f16e:	3201      	adds	r2, #1
 800f170:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f172:	6818      	ldr	r0, [r3, #0]
	}
 800f174:	4770      	bx	lr
 800f176:	bf00      	nop
 800f178:	20013198 	.word	0x20013198

0800f17c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f17c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f180:	4e22      	ldr	r6, [pc, #136]	; (800f20c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f182:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f214 <prvSwitchTimerLists+0x98>
{
 800f186:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f188:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f18c:	e00d      	b.n	800f1aa <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f18e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f190:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f192:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f194:	1d25      	adds	r5, r4, #4
 800f196:	4628      	mov	r0, r5
 800f198:	f7fd ff5c 	bl	800d054 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f19c:	6a23      	ldr	r3, [r4, #32]
 800f19e:	4620      	mov	r0, r4
 800f1a0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f1a2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f1a6:	075b      	lsls	r3, r3, #29
 800f1a8:	d40a      	bmi.n	800f1c0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f1aa:	6833      	ldr	r3, [r6, #0]
 800f1ac:	681a      	ldr	r2, [r3, #0]
 800f1ae:	2a00      	cmp	r2, #0
 800f1b0:	d1ed      	bne.n	800f18e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f1b2:	4a17      	ldr	r2, [pc, #92]	; (800f210 <prvSwitchTimerLists+0x94>)
 800f1b4:	6811      	ldr	r1, [r2, #0]
 800f1b6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f1b8:	6013      	str	r3, [r2, #0]
}
 800f1ba:	b005      	add	sp, #20
 800f1bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f1c0:	69a3      	ldr	r3, [r4, #24]
 800f1c2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f1c4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1c6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f1c8:	d205      	bcs.n	800f1d6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1ca:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f1cc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f1ce:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1d0:	f7fd ff28 	bl	800d024 <vListInsert>
 800f1d4:	e7e9      	b.n	800f1aa <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f1d6:	f8d9 3000 	ldr.w	r3, [r9]
 800f1da:	b16b      	cbz	r3, 800f1f8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f1dc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f1e0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f1e2:	f7ff fecf 	bl	800ef84 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f1e6:	2300      	movs	r3, #0
 800f1e8:	f8d9 0000 	ldr.w	r0, [r9]
 800f1ec:	461a      	mov	r2, r3
 800f1ee:	4669      	mov	r1, sp
 800f1f0:	f7fe fa9c 	bl	800d72c <xQueueGenericSend>
				configASSERT( xResult );
 800f1f4:	2800      	cmp	r0, #0
 800f1f6:	d1d8      	bne.n	800f1aa <prvSwitchTimerLists+0x2e>
 800f1f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1fc:	f383 8811 	msr	BASEPRI, r3
 800f200:	f3bf 8f6f 	isb	sy
 800f204:	f3bf 8f4f 	dsb	sy
 800f208:	e7fe      	b.n	800f208 <prvSwitchTimerLists+0x8c>
 800f20a:	bf00      	nop
 800f20c:	20013694 	.word	0x20013694
 800f210:	20013698 	.word	0x20013698
 800f214:	200137b8 	.word	0x200137b8

0800f218 <prvTimerTask>:
{
 800f218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f21c:	4e9b      	ldr	r6, [pc, #620]	; (800f48c <prvTimerTask+0x274>)
 800f21e:	4d9c      	ldr	r5, [pc, #624]	; (800f490 <prvTimerTask+0x278>)
 800f220:	4c9c      	ldr	r4, [pc, #624]	; (800f494 <prvTimerTask+0x27c>)
 800f222:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f224:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f228:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f22c:	6833      	ldr	r3, [r6, #0]
 800f22e:	681f      	ldr	r7, [r3, #0]
 800f230:	2f00      	cmp	r7, #0
 800f232:	f000 80a8 	beq.w	800f386 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f236:	68db      	ldr	r3, [r3, #12]
 800f238:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f23a:	f7ff fcf9 	bl	800ec30 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f23e:	f7ff fd0f 	bl	800ec60 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f242:	682a      	ldr	r2, [r5, #0]
 800f244:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f246:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f248:	f0c0 80ae 	bcc.w	800f3a8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f24c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f24e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f250:	f240 80b4 	bls.w	800f3bc <prvTimerTask+0x1a4>
 800f254:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f256:	6820      	ldr	r0, [r4, #0]
 800f258:	eba7 010a 	sub.w	r1, r7, sl
 800f25c:	f7ff f89a 	bl	800e394 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f260:	f7ff fcee 	bl	800ec40 <xTaskResumeAll>
 800f264:	b928      	cbnz	r0, 800f272 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f266:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f26a:	f3bf 8f4f 	dsb	sy
 800f26e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f272:	6820      	ldr	r0, [r4, #0]
 800f274:	2200      	movs	r2, #0
 800f276:	a902      	add	r1, sp, #8
 800f278:	f7fe fc94 	bl	800dba4 <xQueueReceive>
 800f27c:	2800      	cmp	r0, #0
 800f27e:	d0d5      	beq.n	800f22c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f280:	9b02      	ldr	r3, [sp, #8]
 800f282:	2b00      	cmp	r3, #0
 800f284:	db76      	blt.n	800f374 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f286:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f288:	697b      	ldr	r3, [r7, #20]
 800f28a:	b113      	cbz	r3, 800f292 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f28c:	1d38      	adds	r0, r7, #4
 800f28e:	f7fd fee1 	bl	800d054 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f292:	f7ff fce5 	bl	800ec60 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f296:	682b      	ldr	r3, [r5, #0]
 800f298:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f29a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f29c:	f0c0 808b 	bcc.w	800f3b6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f2a0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f2a2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f2a6:	2b09      	cmp	r3, #9
 800f2a8:	d8e3      	bhi.n	800f272 <prvTimerTask+0x5a>
 800f2aa:	e8df f003 	tbb	[pc, r3]
 800f2ae:	0505      	.short	0x0505
 800f2b0:	5a3d5305 	.word	0x5a3d5305
 800f2b4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f2b8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f2bc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f2be:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f2c0:	f043 0301 	orr.w	r3, r3, #1
 800f2c4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f2c8:	9b03      	ldr	r3, [sp, #12]
 800f2ca:	1899      	adds	r1, r3, r2
 800f2cc:	bf2c      	ite	cs
 800f2ce:	2001      	movcs	r0, #1
 800f2d0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f2d2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f2d4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f2d6:	f200 808c 	bhi.w	800f3f2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2da:	ebaa 0303 	sub.w	r3, sl, r3
 800f2de:	429a      	cmp	r2, r3
 800f2e0:	d832      	bhi.n	800f348 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f2e2:	6a3b      	ldr	r3, [r7, #32]
 800f2e4:	4638      	mov	r0, r7
 800f2e6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f2e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f2ec:	075b      	lsls	r3, r3, #29
 800f2ee:	d5c0      	bpl.n	800f272 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f2f0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f2f2:	9903      	ldr	r1, [sp, #12]
 800f2f4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f2f6:	b172      	cbz	r2, 800f316 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f2f8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f2fa:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f2fe:	2300      	movs	r3, #0
 800f300:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f302:	f7ff fe3f 	bl	800ef84 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f306:	2300      	movs	r3, #0
 800f308:	6820      	ldr	r0, [r4, #0]
 800f30a:	461a      	mov	r2, r3
 800f30c:	a906      	add	r1, sp, #24
 800f30e:	f7fe fa0d 	bl	800d72c <xQueueGenericSend>
							configASSERT( xResult );
 800f312:	2800      	cmp	r0, #0
 800f314:	d1ad      	bne.n	800f272 <prvTimerTask+0x5a>
 800f316:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f31a:	f383 8811 	msr	BASEPRI, r3
 800f31e:	f3bf 8f6f 	isb	sy
 800f322:	f3bf 8f4f 	dsb	sy
 800f326:	e7fe      	b.n	800f326 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f328:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f32c:	f043 0301 	orr.w	r3, r3, #1
 800f330:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f334:	9b03      	ldr	r3, [sp, #12]
 800f336:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f338:	2b00      	cmp	r3, #0
 800f33a:	f000 809d 	beq.w	800f478 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f33e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f340:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f342:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f344:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f346:	d85e      	bhi.n	800f406 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f348:	4b53      	ldr	r3, [pc, #332]	; (800f498 <prvTimerTask+0x280>)
 800f34a:	1d39      	adds	r1, r7, #4
 800f34c:	6818      	ldr	r0, [r3, #0]
 800f34e:	f7fd fe69 	bl	800d024 <vListInsert>
	return xProcessTimerNow;
 800f352:	e78e      	b.n	800f272 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f354:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f358:	f023 0301 	bic.w	r3, r3, #1
 800f35c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f360:	e787      	b.n	800f272 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f362:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f366:	079a      	lsls	r2, r3, #30
 800f368:	d552      	bpl.n	800f410 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f36a:	f023 0301 	bic.w	r3, r3, #1
 800f36e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f372:	e77e      	b.n	800f272 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f374:	9b03      	ldr	r3, [sp, #12]
 800f376:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f37a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f37c:	9b02      	ldr	r3, [sp, #8]
 800f37e:	2b00      	cmp	r3, #0
 800f380:	f6ff af77 	blt.w	800f272 <prvTimerTask+0x5a>
 800f384:	e77f      	b.n	800f286 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f386:	f7ff fc53 	bl	800ec30 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f38a:	f7ff fc69 	bl	800ec60 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f38e:	682a      	ldr	r2, [r5, #0]
 800f390:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f392:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f394:	d808      	bhi.n	800f3a8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f396:	4b40      	ldr	r3, [pc, #256]	; (800f498 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f398:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f39c:	681a      	ldr	r2, [r3, #0]
 800f39e:	6812      	ldr	r2, [r2, #0]
 800f3a0:	fab2 f282 	clz	r2, r2
 800f3a4:	0952      	lsrs	r2, r2, #5
 800f3a6:	e756      	b.n	800f256 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f3a8:	f7ff fee8 	bl	800f17c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f3ac:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f3b0:	f7ff fc46 	bl	800ec40 <xTaskResumeAll>
 800f3b4:	e75d      	b.n	800f272 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f3b6:	f7ff fee1 	bl	800f17c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f3ba:	e771      	b.n	800f2a0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f3bc:	f7ff fc40 	bl	800ec40 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3c0:	6832      	ldr	r2, [r6, #0]
 800f3c2:	68d2      	ldr	r2, [r2, #12]
 800f3c4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f3c8:	f10b 0104 	add.w	r1, fp, #4
 800f3cc:	4608      	mov	r0, r1
 800f3ce:	9101      	str	r1, [sp, #4]
 800f3d0:	f7fd fe40 	bl	800d054 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f3d4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f3d8:	9901      	ldr	r1, [sp, #4]
 800f3da:	f010 0f04 	tst.w	r0, #4
 800f3de:	d11b      	bne.n	800f418 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f3e0:	f020 0001 	bic.w	r0, r0, #1
 800f3e4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f3e8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f3ec:	4658      	mov	r0, fp
 800f3ee:	4798      	blx	r3
}
 800f3f0:	e73f      	b.n	800f272 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f3f2:	4553      	cmp	r3, sl
 800f3f4:	d902      	bls.n	800f3fc <prvTimerTask+0x1e4>
 800f3f6:	2800      	cmp	r0, #0
 800f3f8:	f43f af73 	beq.w	800f2e2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f3fc:	6830      	ldr	r0, [r6, #0]
 800f3fe:	1d39      	adds	r1, r7, #4
 800f400:	f7fd fe10 	bl	800d024 <vListInsert>
	return xProcessTimerNow;
 800f404:	e735      	b.n	800f272 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f406:	6830      	ldr	r0, [r6, #0]
 800f408:	1d39      	adds	r1, r7, #4
 800f40a:	f7fd fe0b 	bl	800d024 <vListInsert>
 800f40e:	e730      	b.n	800f272 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f410:	4638      	mov	r0, r7
 800f412:	f7fd fd83 	bl	800cf1c <vPortFree>
 800f416:	e72c      	b.n	800f272 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f418:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f41c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f420:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f422:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f424:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f428:	d903      	bls.n	800f432 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f42a:	6830      	ldr	r0, [r6, #0]
 800f42c:	f7fd fdfa 	bl	800d024 <vListInsert>
	return xProcessTimerNow;
 800f430:	e7da      	b.n	800f3e8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f432:	ebaa 0307 	sub.w	r3, sl, r7
 800f436:	429a      	cmp	r2, r3
 800f438:	d819      	bhi.n	800f46e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f43a:	6823      	ldr	r3, [r4, #0]
 800f43c:	b173      	cbz	r3, 800f45c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f43e:	2300      	movs	r3, #0
 800f440:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f442:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f444:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f448:	f7ff fd9c 	bl	800ef84 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f44c:	2300      	movs	r3, #0
 800f44e:	6820      	ldr	r0, [r4, #0]
 800f450:	461a      	mov	r2, r3
 800f452:	a906      	add	r1, sp, #24
 800f454:	f7fe f96a 	bl	800d72c <xQueueGenericSend>
			configASSERT( xResult );
 800f458:	2800      	cmp	r0, #0
 800f45a:	d1c5      	bne.n	800f3e8 <prvTimerTask+0x1d0>
 800f45c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f460:	f383 8811 	msr	BASEPRI, r3
 800f464:	f3bf 8f6f 	isb	sy
 800f468:	f3bf 8f4f 	dsb	sy
 800f46c:	e7fe      	b.n	800f46c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f46e:	4b0a      	ldr	r3, [pc, #40]	; (800f498 <prvTimerTask+0x280>)
 800f470:	6818      	ldr	r0, [r3, #0]
 800f472:	f7fd fdd7 	bl	800d024 <vListInsert>
	return xProcessTimerNow;
 800f476:	e7b7      	b.n	800f3e8 <prvTimerTask+0x1d0>
 800f478:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f47c:	f383 8811 	msr	BASEPRI, r3
 800f480:	f3bf 8f6f 	isb	sy
 800f484:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f488:	e7fe      	b.n	800f488 <prvTimerTask+0x270>
 800f48a:	bf00      	nop
 800f48c:	20013694 	.word	0x20013694
 800f490:	20013764 	.word	0x20013764
 800f494:	200137b8 	.word	0x200137b8
 800f498:	20013698 	.word	0x20013698

0800f49c <xTimerCreateTimerTask>:
{
 800f49c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f49e:	4c23      	ldr	r4, [pc, #140]	; (800f52c <xTimerCreateTimerTask+0x90>)
{
 800f4a0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f4a2:	f7fd fe4f 	bl	800d144 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f4a6:	6825      	ldr	r5, [r4, #0]
 800f4a8:	b335      	cbz	r5, 800f4f8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f4aa:	f7fd fe6d 	bl	800d188 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f4ae:	6823      	ldr	r3, [r4, #0]
 800f4b0:	b1cb      	cbz	r3, 800f4e6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f4b2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f4b4:	aa07      	add	r2, sp, #28
 800f4b6:	a906      	add	r1, sp, #24
 800f4b8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f4ba:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f4be:	f7fd fc61 	bl	800cd84 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f4c2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f4c6:	2302      	movs	r3, #2
 800f4c8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f4cc:	9300      	str	r3, [sp, #0]
 800f4ce:	9a07      	ldr	r2, [sp, #28]
 800f4d0:	4917      	ldr	r1, [pc, #92]	; (800f530 <xTimerCreateTimerTask+0x94>)
 800f4d2:	4818      	ldr	r0, [pc, #96]	; (800f534 <xTimerCreateTimerTask+0x98>)
 800f4d4:	4623      	mov	r3, r4
 800f4d6:	f7ff fa6d 	bl	800e9b4 <xTaskCreateStatic>
 800f4da:	4b17      	ldr	r3, [pc, #92]	; (800f538 <xTimerCreateTimerTask+0x9c>)
 800f4dc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f4de:	b110      	cbz	r0, 800f4e6 <xTimerCreateTimerTask+0x4a>
}
 800f4e0:	2001      	movs	r0, #1
 800f4e2:	b009      	add	sp, #36	; 0x24
 800f4e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4ea:	f383 8811 	msr	BASEPRI, r3
 800f4ee:	f3bf 8f6f 	isb	sy
 800f4f2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f4f6:	e7fe      	b.n	800f4f6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f4f8:	4f10      	ldr	r7, [pc, #64]	; (800f53c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f4fa:	4e11      	ldr	r6, [pc, #68]	; (800f540 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f4fc:	4638      	mov	r0, r7
 800f4fe:	f7fd fd71 	bl	800cfe4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f502:	4630      	mov	r0, r6
 800f504:	f7fd fd6e 	bl	800cfe4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f508:	4a0e      	ldr	r2, [pc, #56]	; (800f544 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f50a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f50c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f50e:	4a0e      	ldr	r2, [pc, #56]	; (800f548 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f510:	4b0e      	ldr	r3, [pc, #56]	; (800f54c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f512:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f514:	2110      	movs	r1, #16
 800f516:	4a0e      	ldr	r2, [pc, #56]	; (800f550 <xTimerCreateTimerTask+0xb4>)
 800f518:	200a      	movs	r0, #10
 800f51a:	f7fd ffb1 	bl	800d480 <xQueueGenericCreateStatic>
 800f51e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f520:	2800      	cmp	r0, #0
 800f522:	d0c2      	beq.n	800f4aa <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f524:	490b      	ldr	r1, [pc, #44]	; (800f554 <xTimerCreateTimerTask+0xb8>)
 800f526:	f7fe ff0d 	bl	800e344 <vQueueAddToRegistry>
 800f52a:	e7be      	b.n	800f4aa <xTimerCreateTimerTask+0xe>
 800f52c:	200137b8 	.word	0x200137b8
 800f530:	0802c5e0 	.word	0x0802c5e0
 800f534:	0800f219 	.word	0x0800f219
 800f538:	200137bc 	.word	0x200137bc
 800f53c:	2001373c 	.word	0x2001373c
 800f540:	20013750 	.word	0x20013750
 800f544:	20013694 	.word	0x20013694
 800f548:	20013698 	.word	0x20013698
 800f54c:	20013768 	.word	0x20013768
 800f550:	2001369c 	.word	0x2001369c
 800f554:	0802c5d8 	.word	0x0802c5d8

0800f558 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f558:	8880      	ldrh	r0, [r0, #4]
 800f55a:	4770      	bx	lr

0800f55c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f55c:	b570      	push	{r4, r5, r6, lr}
 800f55e:	6803      	ldr	r3, [r0, #0]
 800f560:	4605      	mov	r5, r0
 800f562:	460c      	mov	r4, r1
 800f564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f566:	2100      	movs	r1, #0
 800f568:	4798      	blx	r3
 800f56a:	682b      	ldr	r3, [r5, #0]
 800f56c:	4606      	mov	r6, r0
 800f56e:	6a1b      	ldr	r3, [r3, #32]
 800f570:	4628      	mov	r0, r5
 800f572:	4798      	blx	r3
 800f574:	1ba4      	subs	r4, r4, r6
 800f576:	b2a4      	uxth	r4, r4
 800f578:	fbb4 f0f0 	udiv	r0, r4, r0
 800f57c:	bd70      	pop	{r4, r5, r6, pc}

0800f57e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f57e:	2300      	movs	r3, #0
 800f580:	8083      	strh	r3, [r0, #4]
 800f582:	4770      	bx	lr

0800f584 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f584:	b510      	push	{r4, lr}
 800f586:	6803      	ldr	r3, [r0, #0]
 800f588:	8881      	ldrh	r1, [r0, #4]
 800f58a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f58c:	4604      	mov	r4, r0
 800f58e:	4798      	blx	r3
 800f590:	88a3      	ldrh	r3, [r4, #4]
 800f592:	3301      	adds	r3, #1
 800f594:	80a3      	strh	r3, [r4, #4]
 800f596:	bd10      	pop	{r4, pc}

0800f598 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f598:	6803      	ldr	r3, [r0, #0]
 800f59a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f59c:	4718      	bx	r3

0800f59e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f59e:	4770      	bx	lr

0800f5a0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f5a0:	4a02      	ldr	r2, [pc, #8]	; (800f5ac <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f5a2:	6002      	str	r2, [r0, #0]
 800f5a4:	2200      	movs	r2, #0
 800f5a6:	8082      	strh	r2, [r0, #4]
 800f5a8:	4770      	bx	lr
 800f5aa:	bf00      	nop
 800f5ac:	0802c5f0 	.word	0x0802c5f0

0800f5b0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f5b0:	b510      	push	{r4, lr}
 800f5b2:	6803      	ldr	r3, [r0, #0]
 800f5b4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f5b8:	4604      	mov	r4, r0
 800f5ba:	4798      	blx	r3
 800f5bc:	b110      	cbz	r0, 800f5c4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f5be:	4620      	mov	r0, r4
 800f5c0:	f7f1 fe58 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f5c4:	bd10      	pop	{r4, pc}

0800f5c6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f5c6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f5ca:	4770      	bx	lr

0800f5cc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f5cc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f5d0:	4770      	bx	lr

0800f5d2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f5d2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f5d6:	4770      	bx	lr

0800f5d8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f5d8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f5dc:	4770      	bx	lr

0800f5de <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f5de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5e0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f5e4:	461e      	mov	r6, r3
 800f5e6:	6803      	ldr	r3, [r0, #0]
 800f5e8:	460f      	mov	r7, r1
 800f5ea:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f5ee:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f5f2:	4604      	mov	r4, r0
 800f5f4:	4615      	mov	r5, r2
 800f5f6:	4798      	blx	r3
 800f5f8:	b93e      	cbnz	r6, 800f60a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f5fa:	1bed      	subs	r5, r5, r7
 800f5fc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f600:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f604:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f60a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f60e:	e7f7      	b.n	800f600 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f610 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f610:	b510      	push	{r4, lr}
 800f612:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f616:	600c      	str	r4, [r1, #0]
 800f618:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f61c:	6011      	str	r1, [r2, #0]
 800f61e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f622:	801a      	strh	r2, [r3, #0]
 800f624:	9b02      	ldr	r3, [sp, #8]
 800f626:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f62a:	801a      	strh	r2, [r3, #0]
 800f62c:	bd10      	pop	{r4, pc}

0800f62e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f62e:	b510      	push	{r4, lr}
 800f630:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f634:	600c      	str	r4, [r1, #0]
 800f636:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f63a:	6011      	str	r1, [r2, #0]
 800f63c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f640:	801a      	strh	r2, [r3, #0]
 800f642:	bd10      	pop	{r4, pc}

0800f644 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f644:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f648:	600b      	str	r3, [r1, #0]
 800f64a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f64e:	6013      	str	r3, [r2, #0]
 800f650:	4770      	bx	lr

0800f652 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f652:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f656:	4770      	bx	lr

0800f658 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f658:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f65c:	4770      	bx	lr

0800f65e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f65e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f662:	4770      	bx	lr

0800f664 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f664:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f668:	4770      	bx	lr

0800f66a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f66a:	4770      	bx	lr

0800f66c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f66c:	b510      	push	{r4, lr}
 800f66e:	21b4      	movs	r1, #180	; 0xb4
 800f670:	4604      	mov	r4, r0
 800f672:	f018 f96c 	bl	802794e <_ZdlPvj>
 800f676:	4620      	mov	r0, r4
 800f678:	bd10      	pop	{r4, pc}

0800f67a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f67a:	b570      	push	{r4, r5, r6, lr}
 800f67c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f680:	428d      	cmp	r5, r1
 800f682:	bfb8      	it	lt
 800f684:	460d      	movlt	r5, r1
 800f686:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f68a:	428d      	cmp	r5, r1
 800f68c:	4604      	mov	r4, r0
 800f68e:	bfa8      	it	ge
 800f690:	460d      	movge	r5, r1
 800f692:	4616      	mov	r6, r2
 800f694:	b99a      	cbnz	r2, 800f6be <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f696:	6803      	ldr	r3, [r0, #0]
 800f698:	4629      	mov	r1, r5
 800f69a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f69e:	4798      	blx	r3
 800f6a0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f6a4:	b368      	cbz	r0, 800f702 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f6a6:	6803      	ldr	r3, [r0, #0]
 800f6a8:	68db      	ldr	r3, [r3, #12]
 800f6aa:	4798      	blx	r3
 800f6ac:	b348      	cbz	r0, 800f702 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f6ae:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f6b2:	6803      	ldr	r3, [r0, #0]
 800f6b4:	4621      	mov	r1, r4
 800f6b6:	689b      	ldr	r3, [r3, #8]
 800f6b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f6bc:	4718      	bx	r3
 800f6be:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	dd08      	ble.n	800f6d8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f6c6:	f005 fbe3 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800f6ca:	4621      	mov	r1, r4
 800f6cc:	3004      	adds	r0, #4
 800f6ce:	f005 fc2c 	bl	8014f2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f6d2:	2300      	movs	r3, #0
 800f6d4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f6d8:	6823      	ldr	r3, [r4, #0]
 800f6da:	4620      	mov	r0, r4
 800f6dc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f6e0:	4798      	blx	r3
 800f6e2:	2300      	movs	r3, #0
 800f6e4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f6e8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f6ec:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f6f0:	f005 fbce 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800f6f4:	4621      	mov	r1, r4
 800f6f6:	3004      	adds	r0, #4
 800f6f8:	f005 fcc0 	bl	801507c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f6fc:	2301      	movs	r3, #1
 800f6fe:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f702:	bd70      	pop	{r4, r5, r6, pc}

0800f704 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f704:	b510      	push	{r4, lr}
 800f706:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f70a:	4299      	cmp	r1, r3
 800f70c:	bfb8      	it	lt
 800f70e:	4619      	movlt	r1, r3
 800f710:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f714:	4299      	cmp	r1, r3
 800f716:	bfa8      	it	ge
 800f718:	4619      	movge	r1, r3
 800f71a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f71e:	428b      	cmp	r3, r1
 800f720:	4604      	mov	r4, r0
 800f722:	d010      	beq.n	800f746 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f724:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f728:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f72c:	b158      	cbz	r0, 800f746 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f72e:	6803      	ldr	r3, [r0, #0]
 800f730:	68db      	ldr	r3, [r3, #12]
 800f732:	4798      	blx	r3
 800f734:	b138      	cbz	r0, 800f746 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f736:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f73a:	6803      	ldr	r3, [r0, #0]
 800f73c:	4621      	mov	r1, r4
 800f73e:	689b      	ldr	r3, [r3, #8]
 800f740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f744:	4718      	bx	r3
 800f746:	bd10      	pop	{r4, pc}

0800f748 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f748:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f74a:	4604      	mov	r4, r0
 800f74c:	460d      	mov	r5, r1
 800f74e:	b1a9      	cbz	r1, 800f77c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f750:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f754:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f758:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f75c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f760:	ab01      	add	r3, sp, #4
 800f762:	1a12      	subs	r2, r2, r0
 800f764:	1b89      	subs	r1, r1, r6
 800f766:	1a38      	subs	r0, r7, r0
 800f768:	f006 fe48 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 800f76c:	4629      	mov	r1, r5
 800f76e:	ab01      	add	r3, sp, #4
 800f770:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f774:	4430      	add	r0, r6
 800f776:	f006 fe41 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 800f77a:	b285      	uxth	r5, r0
 800f77c:	4628      	mov	r0, r5
 800f77e:	b003      	add	sp, #12
 800f780:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f782 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f782:	b570      	push	{r4, r5, r6, lr}
 800f784:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f788:	4604      	mov	r4, r0
 800f78a:	2b00      	cmp	r3, #0
 800f78c:	d035      	beq.n	800f7fa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f78e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f792:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f796:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f79a:	3001      	adds	r0, #1
 800f79c:	1ad2      	subs	r2, r2, r3
 800f79e:	b212      	sxth	r2, r2
 800f7a0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f7a4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f7a8:	2100      	movs	r1, #0
 800f7aa:	b280      	uxth	r0, r0
 800f7ac:	47a8      	blx	r5
 800f7ae:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f7b2:	6823      	ldr	r3, [r4, #0]
 800f7b4:	4401      	add	r1, r0
 800f7b6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f7ba:	4620      	mov	r0, r4
 800f7bc:	4798      	blx	r3
 800f7be:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f7c2:	429a      	cmp	r2, r3
 800f7c4:	db19      	blt.n	800f7fa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f7c6:	2500      	movs	r5, #0
 800f7c8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f7cc:	f005 fb60 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800f7d0:	4621      	mov	r1, r4
 800f7d2:	3004      	adds	r0, #4
 800f7d4:	f005 fba9 	bl	8014f2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f7d8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f7dc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f7e0:	b158      	cbz	r0, 800f7fa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f7e2:	6803      	ldr	r3, [r0, #0]
 800f7e4:	68db      	ldr	r3, [r3, #12]
 800f7e6:	4798      	blx	r3
 800f7e8:	b138      	cbz	r0, 800f7fa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f7ea:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f7ee:	6803      	ldr	r3, [r0, #0]
 800f7f0:	4621      	mov	r1, r4
 800f7f2:	689b      	ldr	r3, [r3, #8]
 800f7f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f7f8:	4718      	bx	r3
 800f7fa:	bd70      	pop	{r4, r5, r6, pc}

0800f7fc <_ZN8touchgfx8DrawableC1Ev>:
 800f7fc:	4a0a      	ldr	r2, [pc, #40]	; (800f828 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f7fe:	6002      	str	r2, [r0, #0]
 800f800:	2200      	movs	r2, #0
 800f802:	8082      	strh	r2, [r0, #4]
 800f804:	80c2      	strh	r2, [r0, #6]
 800f806:	8102      	strh	r2, [r0, #8]
 800f808:	8142      	strh	r2, [r0, #10]
 800f80a:	8182      	strh	r2, [r0, #12]
 800f80c:	81c2      	strh	r2, [r0, #14]
 800f80e:	8202      	strh	r2, [r0, #16]
 800f810:	8242      	strh	r2, [r0, #18]
 800f812:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f816:	61c2      	str	r2, [r0, #28]
 800f818:	8402      	strh	r2, [r0, #32]
 800f81a:	8442      	strh	r2, [r0, #34]	; 0x22
 800f81c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f820:	2201      	movs	r2, #1
 800f822:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f826:	4770      	bx	lr
 800f828:	0802cd90 	.word	0x0802cd90

0800f82c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f82c:	b570      	push	{r4, r5, r6, lr}
 800f82e:	6803      	ldr	r3, [r0, #0]
 800f830:	4604      	mov	r4, r0
 800f832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f834:	4615      	mov	r5, r2
 800f836:	4798      	blx	r3
 800f838:	6823      	ldr	r3, [r4, #0]
 800f83a:	4629      	mov	r1, r5
 800f83c:	4620      	mov	r0, r4
 800f83e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f840:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f844:	4718      	bx	r3

0800f846 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f846:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f84a:	4604      	mov	r4, r0
 800f84c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f850:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f854:	460e      	mov	r6, r1
 800f856:	4615      	mov	r5, r2
 800f858:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f85c:	4619      	mov	r1, r3
 800f85e:	463a      	mov	r2, r7
 800f860:	3058      	adds	r0, #88	; 0x58
 800f862:	4698      	mov	r8, r3
 800f864:	f7ff ffe2 	bl	800f82c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f868:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f86c:	4446      	add	r6, r8
 800f86e:	42b3      	cmp	r3, r6
 800f870:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f874:	bfb8      	it	lt
 800f876:	8126      	strhlt	r6, [r4, #8]
 800f878:	443d      	add	r5, r7
 800f87a:	42ab      	cmp	r3, r5
 800f87c:	bfb8      	it	lt
 800f87e:	8165      	strhlt	r5, [r4, #10]
 800f880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f884 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f884:	b510      	push	{r4, lr}
 800f886:	4604      	mov	r4, r0
 800f888:	302c      	adds	r0, #44	; 0x2c
 800f88a:	f002 fdf8 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f88e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f892:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f896:	4620      	mov	r0, r4
 800f898:	f7ff ffc8 	bl	800f82c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f89c:	bd10      	pop	{r4, pc}
	...

0800f8a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f8a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8a2:	4604      	mov	r4, r0
 800f8a4:	4626      	mov	r6, r4
 800f8a6:	2500      	movs	r5, #0
 800f8a8:	f7ff ffa8 	bl	800f7fc <_ZN8touchgfx8DrawableC1Ev>
 800f8ac:	4b23      	ldr	r3, [pc, #140]	; (800f93c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f8ae:	62a5      	str	r5, [r4, #40]	; 0x28
 800f8b0:	f846 3b2c 	str.w	r3, [r6], #44
 800f8b4:	2226      	movs	r2, #38	; 0x26
 800f8b6:	4629      	mov	r1, r5
 800f8b8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f8bc:	4630      	mov	r0, r6
 800f8be:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f8c2:	f019 f83a 	bl	802893a <memset>
 800f8c6:	4630      	mov	r0, r6
 800f8c8:	f7ff ff98 	bl	800f7fc <_ZN8touchgfx8DrawableC1Ev>
 800f8cc:	a902      	add	r1, sp, #8
 800f8ce:	4b1c      	ldr	r3, [pc, #112]	; (800f940 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f8d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f8d2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f8d6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f8da:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f8de:	4630      	mov	r0, r6
 800f8e0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f8e4:	f002 fdcb 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f8e8:	4638      	mov	r0, r7
 800f8ea:	f7ff ff87 	bl	800f7fc <_ZN8touchgfx8DrawableC1Ev>
 800f8ee:	4b15      	ldr	r3, [pc, #84]	; (800f944 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f8f0:	65a3      	str	r3, [r4, #88]	; 0x58
 800f8f2:	2364      	movs	r3, #100	; 0x64
 800f8f4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f8f8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f8fc:	4b12      	ldr	r3, [pc, #72]	; (800f948 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f8fe:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f902:	4629      	mov	r1, r5
 800f904:	4630      	mov	r0, r6
 800f906:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f90a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f90e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f912:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f916:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f91a:	f7f1 fc0d 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800f91e:	4629      	mov	r1, r5
 800f920:	4630      	mov	r0, r6
 800f922:	f7f1 fc0b 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800f926:	4631      	mov	r1, r6
 800f928:	4620      	mov	r0, r4
 800f92a:	f000 f819 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f92e:	4620      	mov	r0, r4
 800f930:	4639      	mov	r1, r7
 800f932:	f000 f815 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f936:	4620      	mov	r0, r4
 800f938:	b003      	add	sp, #12
 800f93a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f93c:	0802c624 	.word	0x0802c624
 800f940:	0802cc4c 	.word	0x0802cc4c
 800f944:	0802c6f8 	.word	0x0802c6f8
 800f948:	08016b5b 	.word	0x08016b5b

0800f94c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f94c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f94e:	2000      	movs	r0, #0
 800f950:	b12b      	cbz	r3, 800f95e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f952:	b920      	cbnz	r0, 800f95e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f954:	1a5a      	subs	r2, r3, r1
 800f956:	4250      	negs	r0, r2
 800f958:	4150      	adcs	r0, r2
 800f95a:	699b      	ldr	r3, [r3, #24]
 800f95c:	e7f8      	b.n	800f950 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f95e:	4770      	bx	lr

0800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f960:	2300      	movs	r3, #0
 800f962:	6148      	str	r0, [r1, #20]
 800f964:	618b      	str	r3, [r1, #24]
 800f966:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f968:	b913      	cbnz	r3, 800f970 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f96a:	6281      	str	r1, [r0, #40]	; 0x28
 800f96c:	4770      	bx	lr
 800f96e:	4613      	mov	r3, r2
 800f970:	699a      	ldr	r2, [r3, #24]
 800f972:	2a00      	cmp	r2, #0
 800f974:	d1fb      	bne.n	800f96e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f976:	6199      	str	r1, [r3, #24]
 800f978:	4770      	bx	lr

0800f97a <_ZN8touchgfx9Container9removeAllEv>:
 800f97a:	2200      	movs	r2, #0
 800f97c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f97e:	b123      	cbz	r3, 800f98a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f980:	6999      	ldr	r1, [r3, #24]
 800f982:	6281      	str	r1, [r0, #40]	; 0x28
 800f984:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f988:	e7f8      	b.n	800f97c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f98a:	4770      	bx	lr

0800f98c <_ZN8touchgfx9Container6unlinkEv>:
 800f98c:	2300      	movs	r3, #0
 800f98e:	6283      	str	r3, [r0, #40]	; 0x28
 800f990:	4770      	bx	lr

0800f992 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f992:	2200      	movs	r2, #0
 800f994:	8002      	strh	r2, [r0, #0]
 800f996:	8042      	strh	r2, [r0, #2]
 800f998:	8082      	strh	r2, [r0, #4]
 800f99a:	80c2      	strh	r2, [r0, #6]
 800f99c:	4770      	bx	lr

0800f99e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f99e:	b570      	push	{r4, r5, r6, lr}
 800f9a0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f9a2:	460d      	mov	r5, r1
 800f9a4:	4616      	mov	r6, r2
 800f9a6:	b13c      	cbz	r4, 800f9b8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f9a8:	6823      	ldr	r3, [r4, #0]
 800f9aa:	4620      	mov	r0, r4
 800f9ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f9ae:	4632      	mov	r2, r6
 800f9b0:	4629      	mov	r1, r5
 800f9b2:	4798      	blx	r3
 800f9b4:	69a4      	ldr	r4, [r4, #24]
 800f9b6:	e7f6      	b.n	800f9a6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f9b8:	bd70      	pop	{r4, r5, r6, pc}

0800f9ba <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f9ba:	b538      	push	{r3, r4, r5, lr}
 800f9bc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f9be:	460d      	mov	r5, r1
 800f9c0:	b134      	cbz	r4, 800f9d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f9c2:	682b      	ldr	r3, [r5, #0]
 800f9c4:	4621      	mov	r1, r4
 800f9c6:	689b      	ldr	r3, [r3, #8]
 800f9c8:	4628      	mov	r0, r5
 800f9ca:	4798      	blx	r3
 800f9cc:	69a4      	ldr	r4, [r4, #24]
 800f9ce:	e7f7      	b.n	800f9c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f9d0:	bd38      	pop	{r3, r4, r5, pc}

0800f9d2 <_ZN8touchgfx9ContainerD1Ev>:
 800f9d2:	4770      	bx	lr

0800f9d4 <_ZN8touchgfx9ContainerD0Ev>:
 800f9d4:	b510      	push	{r4, lr}
 800f9d6:	212c      	movs	r1, #44	; 0x2c
 800f9d8:	4604      	mov	r4, r0
 800f9da:	f017 ffb8 	bl	802794e <_ZdlPvj>
 800f9de:	4620      	mov	r0, r4
 800f9e0:	bd10      	pop	{r4, pc}

0800f9e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f9e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f9e4:	b19b      	cbz	r3, 800fa0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f9e6:	428b      	cmp	r3, r1
 800f9e8:	d109      	bne.n	800f9fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f9ea:	699a      	ldr	r2, [r3, #24]
 800f9ec:	2100      	movs	r1, #0
 800f9ee:	6159      	str	r1, [r3, #20]
 800f9f0:	6282      	str	r2, [r0, #40]	; 0x28
 800f9f2:	b902      	cbnz	r2, 800f9f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f9f4:	4770      	bx	lr
 800f9f6:	6199      	str	r1, [r3, #24]
 800f9f8:	4770      	bx	lr
 800f9fa:	4613      	mov	r3, r2
 800f9fc:	b13a      	cbz	r2, 800fa0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f9fe:	699a      	ldr	r2, [r3, #24]
 800fa00:	428a      	cmp	r2, r1
 800fa02:	d1fa      	bne.n	800f9fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fa04:	698a      	ldr	r2, [r1, #24]
 800fa06:	619a      	str	r2, [r3, #24]
 800fa08:	2300      	movs	r3, #0
 800fa0a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fa0e:	4770      	bx	lr

0800fa10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fa10:	b410      	push	{r4}
 800fa12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fa14:	4604      	mov	r4, r0
 800fa16:	b92b      	cbnz	r3, 800fa24 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fa18:	6803      	ldr	r3, [r0, #0]
 800fa1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fa1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fa20:	4611      	mov	r1, r2
 800fa22:	4718      	bx	r3
 800fa24:	b941      	cbnz	r1, 800fa38 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fa26:	6193      	str	r3, [r2, #24]
 800fa28:	6282      	str	r2, [r0, #40]	; 0x28
 800fa2a:	6154      	str	r4, [r2, #20]
 800fa2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fa30:	4770      	bx	lr
 800fa32:	4603      	mov	r3, r0
 800fa34:	2800      	cmp	r0, #0
 800fa36:	d0f9      	beq.n	800fa2c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fa38:	4299      	cmp	r1, r3
 800fa3a:	6998      	ldr	r0, [r3, #24]
 800fa3c:	d1f9      	bne.n	800fa32 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fa3e:	6190      	str	r0, [r2, #24]
 800fa40:	618a      	str	r2, [r1, #24]
 800fa42:	e7f2      	b.n	800fa2a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fa44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fa44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa48:	461f      	mov	r7, r3
 800fa4a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fa4e:	460d      	mov	r5, r1
 800fa50:	4616      	mov	r6, r2
 800fa52:	b103      	cbz	r3, 800fa56 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fa54:	6038      	str	r0, [r7, #0]
 800fa56:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa58:	b314      	cbz	r4, 800faa0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fa5a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fa5e:	b1eb      	cbz	r3, 800fa9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fa64:	428d      	cmp	r5, r1
 800fa66:	db19      	blt.n	800fa9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa68:	8923      	ldrh	r3, [r4, #8]
 800fa6a:	b289      	uxth	r1, r1
 800fa6c:	440b      	add	r3, r1
 800fa6e:	b21b      	sxth	r3, r3
 800fa70:	429d      	cmp	r5, r3
 800fa72:	da13      	bge.n	800fa9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa74:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fa78:	4296      	cmp	r6, r2
 800fa7a:	db0f      	blt.n	800fa9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa7c:	8963      	ldrh	r3, [r4, #10]
 800fa7e:	b292      	uxth	r2, r2
 800fa80:	4413      	add	r3, r2
 800fa82:	b21b      	sxth	r3, r3
 800fa84:	429e      	cmp	r6, r3
 800fa86:	da09      	bge.n	800fa9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa88:	6823      	ldr	r3, [r4, #0]
 800fa8a:	1ab2      	subs	r2, r6, r2
 800fa8c:	1a69      	subs	r1, r5, r1
 800fa8e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fa92:	b212      	sxth	r2, r2
 800fa94:	463b      	mov	r3, r7
 800fa96:	b209      	sxth	r1, r1
 800fa98:	4620      	mov	r0, r4
 800fa9a:	47c0      	blx	r8
 800fa9c:	69a4      	ldr	r4, [r4, #24]
 800fa9e:	e7db      	b.n	800fa58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800faa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800faa4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800faa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800faa8:	4c6e      	ldr	r4, [pc, #440]	; (800fc64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800faaa:	b0a1      	sub	sp, #132	; 0x84
 800faac:	6824      	ldr	r4, [r4, #0]
 800faae:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fab0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fab4:	9303      	str	r3, [sp, #12]
 800fab6:	2400      	movs	r4, #0
 800fab8:	802c      	strh	r4, [r5, #0]
 800faba:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fabc:	802c      	strh	r4, [r5, #0]
 800fabe:	601c      	str	r4, [r3, #0]
 800fac0:	4606      	mov	r6, r0
 800fac2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fac6:	f7ff ffbd 	bl	800fa44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800faca:	f1b9 0f03 	cmp.w	r9, #3
 800face:	f340 80c2 	ble.w	800fc56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fad2:	4631      	mov	r1, r6
 800fad4:	a80c      	add	r0, sp, #48	; 0x30
 800fad6:	f006 fb5f 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fada:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fade:	9306      	str	r3, [sp, #24]
 800fae0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fae4:	9307      	str	r3, [sp, #28]
 800fae6:	9b03      	ldr	r3, [sp, #12]
 800fae8:	f8d3 a000 	ldr.w	sl, [r3]
 800faec:	f1ba 0f00 	cmp.w	sl, #0
 800faf0:	f000 80b4 	beq.w	800fc5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800faf4:	4651      	mov	r1, sl
 800faf6:	a810      	add	r0, sp, #64	; 0x40
 800faf8:	f006 fb4e 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fafc:	9b01      	ldr	r3, [sp, #4]
 800fafe:	9a06      	ldr	r2, [sp, #24]
 800fb00:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fb04:	189d      	adds	r5, r3, r2
 800fb06:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fb0a:	9a07      	ldr	r2, [sp, #28]
 800fb0c:	2002      	movs	r0, #2
 800fb0e:	fb91 f1f0 	sdiv	r1, r1, r0
 800fb12:	4419      	add	r1, r3
 800fb14:	1a6d      	subs	r5, r5, r1
 800fb16:	9b02      	ldr	r3, [sp, #8]
 800fb18:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fb1c:	4413      	add	r3, r2
 800fb1e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fb22:	fb92 f2f0 	sdiv	r2, r2, r0
 800fb26:	440a      	add	r2, r1
 800fb28:	1a9b      	subs	r3, r3, r2
 800fb2a:	435b      	muls	r3, r3
 800fb2c:	fb05 3505 	mla	r5, r5, r5, r3
 800fb30:	4f4d      	ldr	r7, [pc, #308]	; (800fc68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800fb32:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fb34:	ac10      	add	r4, sp, #64	; 0x40
 800fb36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fb38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fb3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fb3c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fb3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fb40:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fb44:	f1b9 0f0c 	cmp.w	r9, #12
 800fb48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fb4c:	f04f 0303 	mov.w	r3, #3
 800fb50:	bfc8      	it	gt
 800fb52:	4698      	movgt	r8, r3
 800fb54:	f8cd 9000 	str.w	r9, [sp]
 800fb58:	f04f 0400 	mov.w	r4, #0
 800fb5c:	bfdc      	itt	le
 800fb5e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fb62:	fb92 f8f3 	sdivle	r8, r2, r3
 800fb66:	1c63      	adds	r3, r4, #1
 800fb68:	aa10      	add	r2, sp, #64	; 0x40
 800fb6a:	f004 0401 	and.w	r4, r4, #1
 800fb6e:	9308      	str	r3, [sp, #32]
 800fb70:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fb74:	9b00      	ldr	r3, [sp, #0]
 800fb76:	fb93 f3f8 	sdiv	r3, r3, r8
 800fb7a:	b29b      	uxth	r3, r3
 800fb7c:	3404      	adds	r4, #4
 800fb7e:	f04f 0b00 	mov.w	fp, #0
 800fb82:	9304      	str	r3, [sp, #16]
 800fb84:	9a04      	ldr	r2, [sp, #16]
 800fb86:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fb8a:	fb13 f302 	smulbb	r3, r3, r2
 800fb8e:	9a01      	ldr	r2, [sp, #4]
 800fb90:	b29b      	uxth	r3, r3
 800fb92:	1899      	adds	r1, r3, r2
 800fb94:	9305      	str	r3, [sp, #20]
 800fb96:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fb9a:	b209      	sxth	r1, r1
 800fb9c:	4299      	cmp	r1, r3
 800fb9e:	db4d      	blt.n	800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fba0:	8932      	ldrh	r2, [r6, #8]
 800fba2:	4413      	add	r3, r2
 800fba4:	b21b      	sxth	r3, r3
 800fba6:	4299      	cmp	r1, r3
 800fba8:	da48      	bge.n	800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fbaa:	9b04      	ldr	r3, [sp, #16]
 800fbac:	6827      	ldr	r7, [r4, #0]
 800fbae:	fb17 f703 	smulbb	r7, r7, r3
 800fbb2:	9b02      	ldr	r3, [sp, #8]
 800fbb4:	b2bf      	uxth	r7, r7
 800fbb6:	18fa      	adds	r2, r7, r3
 800fbb8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fbbc:	b212      	sxth	r2, r2
 800fbbe:	429a      	cmp	r2, r3
 800fbc0:	db3c      	blt.n	800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fbc2:	8970      	ldrh	r0, [r6, #10]
 800fbc4:	4403      	add	r3, r0
 800fbc6:	b21b      	sxth	r3, r3
 800fbc8:	429a      	cmp	r2, r3
 800fbca:	da37      	bge.n	800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fbcc:	2300      	movs	r3, #0
 800fbce:	930b      	str	r3, [sp, #44]	; 0x2c
 800fbd0:	4630      	mov	r0, r6
 800fbd2:	ab0b      	add	r3, sp, #44	; 0x2c
 800fbd4:	f7ff ff36 	bl	800fa44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fbd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fbda:	b37a      	cbz	r2, 800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fbdc:	4552      	cmp	r2, sl
 800fbde:	d02d      	beq.n	800fc3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fbe0:	4611      	mov	r1, r2
 800fbe2:	a80e      	add	r0, sp, #56	; 0x38
 800fbe4:	9209      	str	r2, [sp, #36]	; 0x24
 800fbe6:	f006 fad7 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fbea:	9a06      	ldr	r2, [sp, #24]
 800fbec:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fbf0:	9b01      	ldr	r3, [sp, #4]
 800fbf2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fbf6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fbfa:	4413      	add	r3, r2
 800fbfc:	f04f 0e02 	mov.w	lr, #2
 800fc00:	fb91 f1fe 	sdiv	r1, r1, lr
 800fc04:	4401      	add	r1, r0
 800fc06:	1a58      	subs	r0, r3, r1
 800fc08:	9a07      	ldr	r2, [sp, #28]
 800fc0a:	9b02      	ldr	r3, [sp, #8]
 800fc0c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fc10:	fb9c fcfe 	sdiv	ip, ip, lr
 800fc14:	4413      	add	r3, r2
 800fc16:	448c      	add	ip, r1
 800fc18:	eba3 030c 	sub.w	r3, r3, ip
 800fc1c:	435b      	muls	r3, r3
 800fc1e:	fb00 3300 	mla	r3, r0, r0, r3
 800fc22:	42ab      	cmp	r3, r5
 800fc24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fc26:	d208      	bcs.n	800fc3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fc28:	9803      	ldr	r0, [sp, #12]
 800fc2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fc2c:	6001      	str	r1, [r0, #0]
 800fc2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fc30:	9805      	ldr	r0, [sp, #20]
 800fc32:	8008      	strh	r0, [r1, #0]
 800fc34:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fc36:	461d      	mov	r5, r3
 800fc38:	800f      	strh	r7, [r1, #0]
 800fc3a:	4692      	mov	sl, r2
 800fc3c:	f10b 0b01 	add.w	fp, fp, #1
 800fc40:	f1bb 0f04 	cmp.w	fp, #4
 800fc44:	f104 0408 	add.w	r4, r4, #8
 800fc48:	d19c      	bne.n	800fb84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fc4a:	9b00      	ldr	r3, [sp, #0]
 800fc4c:	9c08      	ldr	r4, [sp, #32]
 800fc4e:	444b      	add	r3, r9
 800fc50:	4544      	cmp	r4, r8
 800fc52:	9300      	str	r3, [sp, #0]
 800fc54:	d187      	bne.n	800fb66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fc56:	b021      	add	sp, #132	; 0x84
 800fc58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc5c:	f04f 35ff 	mov.w	r5, #4294967295
 800fc60:	e766      	b.n	800fb30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fc62:	bf00      	nop
 800fc64:	200137cc 	.word	0x200137cc
 800fc68:	08029648 	.word	0x08029648

0800fc6c <_ZN8touchgfx4RectaNERKS0_>:
 800fc6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc70:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fc74:	888c      	ldrh	r4, [r1, #4]
 800fc76:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fc7a:	443c      	add	r4, r7
 800fc7c:	b2a4      	uxth	r4, r4
 800fc7e:	fa0f f884 	sxth.w	r8, r4
 800fc82:	45c1      	cmp	r9, r8
 800fc84:	da2f      	bge.n	800fce6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc86:	8882      	ldrh	r2, [r0, #4]
 800fc88:	444a      	add	r2, r9
 800fc8a:	b292      	uxth	r2, r2
 800fc8c:	fa0f fe82 	sxth.w	lr, r2
 800fc90:	4577      	cmp	r7, lr
 800fc92:	da28      	bge.n	800fce6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc94:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fc98:	88cb      	ldrh	r3, [r1, #6]
 800fc9a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fc9e:	442b      	add	r3, r5
 800fca0:	b21b      	sxth	r3, r3
 800fca2:	429e      	cmp	r6, r3
 800fca4:	da1f      	bge.n	800fce6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fca6:	88c3      	ldrh	r3, [r0, #6]
 800fca8:	4433      	add	r3, r6
 800fcaa:	b29b      	uxth	r3, r3
 800fcac:	fa0f fc83 	sxth.w	ip, r3
 800fcb0:	4565      	cmp	r5, ip
 800fcb2:	da18      	bge.n	800fce6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fcb4:	454f      	cmp	r7, r9
 800fcb6:	bfb8      	it	lt
 800fcb8:	464f      	movlt	r7, r9
 800fcba:	42b5      	cmp	r5, r6
 800fcbc:	bfb8      	it	lt
 800fcbe:	4635      	movlt	r5, r6
 800fcc0:	45f0      	cmp	r8, lr
 800fcc2:	bfd8      	it	le
 800fcc4:	4622      	movle	r2, r4
 800fcc6:	1bd2      	subs	r2, r2, r7
 800fcc8:	8082      	strh	r2, [r0, #4]
 800fcca:	884a      	ldrh	r2, [r1, #2]
 800fccc:	88c9      	ldrh	r1, [r1, #6]
 800fcce:	8007      	strh	r7, [r0, #0]
 800fcd0:	440a      	add	r2, r1
 800fcd2:	b292      	uxth	r2, r2
 800fcd4:	b211      	sxth	r1, r2
 800fcd6:	458c      	cmp	ip, r1
 800fcd8:	bfa8      	it	ge
 800fcda:	4613      	movge	r3, r2
 800fcdc:	1b5b      	subs	r3, r3, r5
 800fcde:	80c3      	strh	r3, [r0, #6]
 800fce0:	8045      	strh	r5, [r0, #2]
 800fce2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fce6:	2300      	movs	r3, #0
 800fce8:	8003      	strh	r3, [r0, #0]
 800fcea:	8043      	strh	r3, [r0, #2]
 800fcec:	8083      	strh	r3, [r0, #4]
 800fcee:	80c3      	strh	r3, [r0, #6]
 800fcf0:	e7f7      	b.n	800fce2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fcf2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fcf6:	2b00      	cmp	r3, #0
 800fcf8:	dd06      	ble.n	800fd08 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fcfa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fcfe:	2800      	cmp	r0, #0
 800fd00:	bfcc      	ite	gt
 800fd02:	2000      	movgt	r0, #0
 800fd04:	2001      	movle	r0, #1
 800fd06:	4770      	bx	lr
 800fd08:	2001      	movs	r0, #1
 800fd0a:	4770      	bx	lr

0800fd0c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fd0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd10:	2300      	movs	r3, #0
 800fd12:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fd14:	8003      	strh	r3, [r0, #0]
 800fd16:	4604      	mov	r4, r0
 800fd18:	8043      	strh	r3, [r0, #2]
 800fd1a:	8083      	strh	r3, [r0, #4]
 800fd1c:	80c3      	strh	r3, [r0, #6]
 800fd1e:	2d00      	cmp	r5, #0
 800fd20:	d040      	beq.n	800fda4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fd22:	1d28      	adds	r0, r5, #4
 800fd24:	f7ff ffe5 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fd28:	b988      	cbnz	r0, 800fd4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fd2a:	4620      	mov	r0, r4
 800fd2c:	f7ff ffe1 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fd30:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fd34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fd38:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fd3c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fd40:	b138      	cbz	r0, 800fd52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fd42:	8022      	strh	r2, [r4, #0]
 800fd44:	8063      	strh	r3, [r4, #2]
 800fd46:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fd4a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fd4e:	69ad      	ldr	r5, [r5, #24]
 800fd50:	e7e5      	b.n	800fd1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fd52:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fd56:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fd5a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fd5e:	4290      	cmp	r0, r2
 800fd60:	4607      	mov	r7, r0
 800fd62:	bfa8      	it	ge
 800fd64:	4617      	movge	r7, r2
 800fd66:	4472      	add	r2, lr
 800fd68:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fd6c:	8027      	strh	r7, [r4, #0]
 800fd6e:	4299      	cmp	r1, r3
 800fd70:	460e      	mov	r6, r1
 800fd72:	4440      	add	r0, r8
 800fd74:	bfa8      	it	ge
 800fd76:	461e      	movge	r6, r3
 800fd78:	4471      	add	r1, lr
 800fd7a:	4463      	add	r3, ip
 800fd7c:	b200      	sxth	r0, r0
 800fd7e:	b212      	sxth	r2, r2
 800fd80:	b209      	sxth	r1, r1
 800fd82:	b21b      	sxth	r3, r3
 800fd84:	4290      	cmp	r0, r2
 800fd86:	bfac      	ite	ge
 800fd88:	ebc7 0200 	rsbge	r2, r7, r0
 800fd8c:	ebc7 0202 	rsblt	r2, r7, r2
 800fd90:	4299      	cmp	r1, r3
 800fd92:	bfac      	ite	ge
 800fd94:	ebc6 0301 	rsbge	r3, r6, r1
 800fd98:	ebc6 0303 	rsblt	r3, r6, r3
 800fd9c:	8066      	strh	r6, [r4, #2]
 800fd9e:	80a2      	strh	r2, [r4, #4]
 800fda0:	80e3      	strh	r3, [r4, #6]
 800fda2:	e7d4      	b.n	800fd4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fda4:	4620      	mov	r0, r4
 800fda6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fdaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fdaa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fdae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fdb2:	b383      	cbz	r3, 800fe16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fdb4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fdb6:	b374      	cbz	r4, 800fe16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fdb8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fdbc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fdc0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fdc4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fdc8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fdcc:	b303      	cbz	r3, 800fe10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fdce:	4668      	mov	r0, sp
 800fdd0:	1d21      	adds	r1, r4, #4
 800fdd2:	f8ad 5000 	strh.w	r5, [sp]
 800fdd6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fdda:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fdde:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fde2:	f7ff ff43 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 800fde6:	4668      	mov	r0, sp
 800fde8:	f7ff ff83 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fdec:	b980      	cbnz	r0, 800fe10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fdee:	f8bd 3000 	ldrh.w	r3, [sp]
 800fdf2:	88a2      	ldrh	r2, [r4, #4]
 800fdf4:	1a9b      	subs	r3, r3, r2
 800fdf6:	f8ad 3000 	strh.w	r3, [sp]
 800fdfa:	88e2      	ldrh	r2, [r4, #6]
 800fdfc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fe00:	1a9b      	subs	r3, r3, r2
 800fe02:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fe06:	6823      	ldr	r3, [r4, #0]
 800fe08:	4669      	mov	r1, sp
 800fe0a:	689b      	ldr	r3, [r3, #8]
 800fe0c:	4620      	mov	r0, r4
 800fe0e:	4798      	blx	r3
 800fe10:	69a4      	ldr	r4, [r4, #24]
 800fe12:	2c00      	cmp	r4, #0
 800fe14:	d1d8      	bne.n	800fdc8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fe16:	b002      	add	sp, #8
 800fe18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fe1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fe1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fe22:	460d      	mov	r5, r1
 800fe24:	4616      	mov	r6, r2
 800fe26:	b323      	cbz	r3, 800fe72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fe28:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe2a:	b314      	cbz	r4, 800fe72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fe2c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fe30:	b1eb      	cbz	r3, 800fe6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fe32:	6828      	ldr	r0, [r5, #0]
 800fe34:	6869      	ldr	r1, [r5, #4]
 800fe36:	466b      	mov	r3, sp
 800fe38:	c303      	stmia	r3!, {r0, r1}
 800fe3a:	4668      	mov	r0, sp
 800fe3c:	1d21      	adds	r1, r4, #4
 800fe3e:	f7ff ff15 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 800fe42:	4668      	mov	r0, sp
 800fe44:	f7ff ff55 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe48:	b988      	cbnz	r0, 800fe6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fe4a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fe4e:	88a2      	ldrh	r2, [r4, #4]
 800fe50:	1a9b      	subs	r3, r3, r2
 800fe52:	f8ad 3000 	strh.w	r3, [sp]
 800fe56:	88e2      	ldrh	r2, [r4, #6]
 800fe58:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fe5c:	1a9b      	subs	r3, r3, r2
 800fe5e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fe62:	6823      	ldr	r3, [r4, #0]
 800fe64:	4632      	mov	r2, r6
 800fe66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fe68:	4669      	mov	r1, sp
 800fe6a:	4620      	mov	r0, r4
 800fe6c:	4798      	blx	r3
 800fe6e:	69a4      	ldr	r4, [r4, #24]
 800fe70:	e7db      	b.n	800fe2a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fe72:	b002      	add	sp, #8
 800fe74:	bd70      	pop	{r4, r5, r6, pc}

0800fe76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fe76:	b513      	push	{r0, r1, r4, lr}
 800fe78:	6803      	ldr	r3, [r0, #0]
 800fe7a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fe7e:	2300      	movs	r3, #0
 800fe80:	e9cd 3300 	strd	r3, r3, [sp]
 800fe84:	466b      	mov	r3, sp
 800fe86:	47a0      	blx	r4
 800fe88:	b002      	add	sp, #8
 800fe8a:	bd10      	pop	{r4, pc}

0800fe8c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fe8c:	2301      	movs	r3, #1
 800fe8e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fe92:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fe96:	4770      	bx	lr

0800fe98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fe98:	2301      	movs	r3, #1
 800fe9a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fe9e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fea2:	4770      	bx	lr

0800fea4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fea4:	6843      	ldr	r3, [r0, #4]
 800fea6:	2201      	movs	r2, #1
 800fea8:	725a      	strb	r2, [r3, #9]
 800feaa:	6840      	ldr	r0, [r0, #4]
 800feac:	6803      	ldr	r3, [r0, #0]
 800feae:	691b      	ldr	r3, [r3, #16]
 800feb0:	4718      	bx	r3

0800feb2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800feb2:	6840      	ldr	r0, [r0, #4]
 800feb4:	6803      	ldr	r3, [r0, #0]
 800feb6:	689b      	ldr	r3, [r3, #8]
 800feb8:	4718      	bx	r3

0800feba <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800feba:	b530      	push	{r4, r5, lr}
 800febc:	b08b      	sub	sp, #44	; 0x2c
 800febe:	6804      	ldr	r4, [r0, #0]
 800fec0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fec4:	9509      	str	r5, [sp, #36]	; 0x24
 800fec6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800feca:	9508      	str	r5, [sp, #32]
 800fecc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fed0:	9507      	str	r5, [sp, #28]
 800fed2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fed6:	9506      	str	r5, [sp, #24]
 800fed8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fedc:	9505      	str	r5, [sp, #20]
 800fede:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fee2:	9504      	str	r5, [sp, #16]
 800fee4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fee8:	9503      	str	r5, [sp, #12]
 800feea:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800feee:	9502      	str	r5, [sp, #8]
 800fef0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fef4:	e9cd 3500 	strd	r3, r5, [sp]
 800fef8:	4613      	mov	r3, r2
 800fefa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fefc:	2200      	movs	r2, #0
 800fefe:	47a0      	blx	r4
 800ff00:	b00b      	add	sp, #44	; 0x2c
 800ff02:	bd30      	pop	{r4, r5, pc}

0800ff04 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ff04:	4b04      	ldr	r3, [pc, #16]	; (800ff18 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ff06:	781b      	ldrb	r3, [r3, #0]
 800ff08:	b123      	cbz	r3, 800ff14 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ff0a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800ff0e:	f080 0001 	eor.w	r0, r0, #1
 800ff12:	4770      	bx	lr
 800ff14:	2001      	movs	r0, #1
 800ff16:	4770      	bx	lr
 800ff18:	200137ca 	.word	0x200137ca

0800ff1c <_ZN8touchgfx3HAL8endFrameEv>:
 800ff1c:	b510      	push	{r4, lr}
 800ff1e:	4604      	mov	r4, r0
 800ff20:	6840      	ldr	r0, [r0, #4]
 800ff22:	6803      	ldr	r3, [r0, #0]
 800ff24:	689b      	ldr	r3, [r3, #8]
 800ff26:	4798      	blx	r3
 800ff28:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800ff2c:	b113      	cbz	r3, 800ff34 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ff2e:	2301      	movs	r3, #1
 800ff30:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800ff34:	bd10      	pop	{r4, pc}

0800ff36 <_ZN8touchgfx3HAL10initializeEv>:
 800ff36:	b510      	push	{r4, lr}
 800ff38:	4604      	mov	r4, r0
 800ff3a:	f7f0 fd57 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800ff3e:	f7f0 fc63 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800ff42:	6860      	ldr	r0, [r4, #4]
 800ff44:	6803      	ldr	r3, [r0, #0]
 800ff46:	68db      	ldr	r3, [r3, #12]
 800ff48:	4798      	blx	r3
 800ff4a:	68e0      	ldr	r0, [r4, #12]
 800ff4c:	6803      	ldr	r3, [r0, #0]
 800ff4e:	689b      	ldr	r3, [r3, #8]
 800ff50:	4798      	blx	r3
 800ff52:	6823      	ldr	r3, [r4, #0]
 800ff54:	4620      	mov	r0, r4
 800ff56:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ff58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff5c:	4718      	bx	r3
	...

0800ff60 <_ZN8touchgfx3HAL4tickEv>:
 800ff60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ff62:	6803      	ldr	r3, [r0, #0]
 800ff64:	4d5b      	ldr	r5, [pc, #364]	; (80100d4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ff66:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ff6a:	4604      	mov	r4, r0
 800ff6c:	4798      	blx	r3
 800ff6e:	2800      	cmp	r0, #0
 800ff70:	f000 8095 	beq.w	801009e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ff74:	2001      	movs	r0, #1
 800ff76:	f7f0 fbf9 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ff7a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800ff7e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ff82:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800ff86:	2600      	movs	r6, #0
 800ff88:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800ff8c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ff90:	b133      	cbz	r3, 800ffa0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800ff92:	6823      	ldr	r3, [r4, #0]
 800ff94:	4620      	mov	r0, r4
 800ff96:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ff9a:	4798      	blx	r3
 800ff9c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ffa0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ffa4:	6862      	ldr	r2, [r4, #4]
 800ffa6:	f083 0301 	eor.w	r3, r3, #1
 800ffaa:	7253      	strb	r3, [r2, #9]
 800ffac:	2601      	movs	r6, #1
 800ffae:	702e      	strb	r6, [r5, #0]
 800ffb0:	f004 ff6e 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800ffb4:	6803      	ldr	r3, [r0, #0]
 800ffb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ffb8:	4798      	blx	r3
 800ffba:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ffbe:	b90b      	cbnz	r3, 800ffc4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ffc0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800ffc4:	f004 ff64 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 800ffc8:	6803      	ldr	r3, [r0, #0]
 800ffca:	695b      	ldr	r3, [r3, #20]
 800ffcc:	4798      	blx	r3
 800ffce:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ffd0:	6803      	ldr	r3, [r0, #0]
 800ffd2:	691b      	ldr	r3, [r3, #16]
 800ffd4:	4798      	blx	r3
 800ffd6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ffda:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ffde:	3b01      	subs	r3, #1
 800ffe0:	b2db      	uxtb	r3, r3
 800ffe2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ffe6:	b10a      	cbz	r2, 800ffec <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ffe8:	2b00      	cmp	r3, #0
 800ffea:	d1eb      	bne.n	800ffc4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ffec:	4a3a      	ldr	r2, [pc, #232]	; (80100d8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ffee:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fff2:	7813      	ldrb	r3, [r2, #0]
 800fff4:	3301      	adds	r3, #1
 800fff6:	b25b      	sxtb	r3, r3
 800fff8:	4299      	cmp	r1, r3
 800fffa:	7013      	strb	r3, [r2, #0]
 800fffc:	dc10      	bgt.n	8010020 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fffe:	68e0      	ldr	r0, [r4, #12]
 8010000:	2300      	movs	r3, #0
 8010002:	7013      	strb	r3, [r2, #0]
 8010004:	6803      	ldr	r3, [r0, #0]
 8010006:	aa03      	add	r2, sp, #12
 8010008:	68db      	ldr	r3, [r3, #12]
 801000a:	a902      	add	r1, sp, #8
 801000c:	4798      	blx	r3
 801000e:	6823      	ldr	r3, [r4, #0]
 8010010:	2800      	cmp	r0, #0
 8010012:	d050      	beq.n	80100b6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010014:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010018:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801001c:	4620      	mov	r0, r4
 801001e:	4798      	blx	r3
 8010020:	6960      	ldr	r0, [r4, #20]
 8010022:	2300      	movs	r3, #0
 8010024:	f88d 3007 	strb.w	r3, [sp, #7]
 8010028:	b158      	cbz	r0, 8010042 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801002a:	6803      	ldr	r3, [r0, #0]
 801002c:	f10d 0107 	add.w	r1, sp, #7
 8010030:	68db      	ldr	r3, [r3, #12]
 8010032:	4798      	blx	r3
 8010034:	b128      	cbz	r0, 8010042 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010036:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010038:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801003c:	6803      	ldr	r3, [r0, #0]
 801003e:	68db      	ldr	r3, [r3, #12]
 8010040:	4798      	blx	r3
 8010042:	f104 001c 	add.w	r0, r4, #28
 8010046:	f015 fcc5 	bl	80259d4 <_ZN8touchgfx8Gestures4tickEv>
 801004a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801004e:	b30b      	cbz	r3, 8010094 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010050:	6920      	ldr	r0, [r4, #16]
 8010052:	6803      	ldr	r3, [r0, #0]
 8010054:	691b      	ldr	r3, [r3, #16]
 8010056:	4798      	blx	r3
 8010058:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801005a:	4606      	mov	r6, r0
 801005c:	b903      	cbnz	r3, 8010060 <_ZN8touchgfx3HAL4tickEv+0x100>
 801005e:	6760      	str	r0, [r4, #116]	; 0x74
 8010060:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010062:	4a1e      	ldr	r2, [pc, #120]	; (80100dc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010064:	1af3      	subs	r3, r6, r3
 8010066:	4293      	cmp	r3, r2
 8010068:	d914      	bls.n	8010094 <_ZN8touchgfx3HAL4tickEv+0x134>
 801006a:	6920      	ldr	r0, [r4, #16]
 801006c:	6803      	ldr	r3, [r0, #0]
 801006e:	699b      	ldr	r3, [r3, #24]
 8010070:	4798      	blx	r3
 8010072:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010074:	2264      	movs	r2, #100	; 0x64
 8010076:	1af3      	subs	r3, r6, r3
 8010078:	fbb3 f3f2 	udiv	r3, r3, r2
 801007c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010080:	2800      	cmp	r0, #0
 8010082:	dc1d      	bgt.n	80100c0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010084:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010088:	6920      	ldr	r0, [r4, #16]
 801008a:	6803      	ldr	r3, [r0, #0]
 801008c:	2100      	movs	r1, #0
 801008e:	69db      	ldr	r3, [r3, #28]
 8010090:	4798      	blx	r3
 8010092:	6766      	str	r6, [r4, #116]	; 0x74
 8010094:	f004 fefc 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 8010098:	6803      	ldr	r3, [r0, #0]
 801009a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801009c:	4798      	blx	r3
 801009e:	6823      	ldr	r3, [r4, #0]
 80100a0:	4620      	mov	r0, r4
 80100a2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80100a6:	4798      	blx	r3
 80100a8:	2001      	movs	r0, #1
 80100aa:	f7f0 fb77 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80100ae:	2300      	movs	r3, #0
 80100b0:	702b      	strb	r3, [r5, #0]
 80100b2:	b004      	add	sp, #16
 80100b4:	bd70      	pop	{r4, r5, r6, pc}
 80100b6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80100ba:	4620      	mov	r0, r4
 80100bc:	4798      	blx	r3
 80100be:	e7af      	b.n	8010020 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80100c0:	2863      	cmp	r0, #99	; 0x63
 80100c2:	bfcb      	itete	gt
 80100c4:	2300      	movgt	r3, #0
 80100c6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80100ca:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80100ce:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80100d2:	e7d9      	b.n	8010088 <_ZN8touchgfx3HAL4tickEv+0x128>
 80100d4:	200137d0 	.word	0x200137d0
 80100d8:	200137d1 	.word	0x200137d1
 80100dc:	05f5e100 	.word	0x05f5e100

080100e0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80100e0:	b510      	push	{r4, lr}
 80100e2:	4604      	mov	r4, r0
 80100e4:	f7f0 fcb2 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80100e8:	6863      	ldr	r3, [r4, #4]
 80100ea:	2200      	movs	r2, #0
 80100ec:	729a      	strb	r2, [r3, #10]
 80100ee:	bd10      	pop	{r4, pc}

080100f0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80100f0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80100f2:	301c      	adds	r0, #28
 80100f4:	f015 bc6c 	b.w	80259d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080100f8 <_ZN8touchgfx3HAL5touchEll>:
 80100f8:	b530      	push	{r4, r5, lr}
 80100fa:	b087      	sub	sp, #28
 80100fc:	4604      	mov	r4, r0
 80100fe:	a804      	add	r0, sp, #16
 8010100:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010104:	f004 fc90 	bl	8014a28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010108:	9b04      	ldr	r3, [sp, #16]
 801010a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801010e:	a906      	add	r1, sp, #24
 8010110:	9b05      	ldr	r3, [sp, #20]
 8010112:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010116:	a803      	add	r0, sp, #12
 8010118:	f004 fcd8 	bl	8014acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801011c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010120:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010124:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010128:	f104 001c 	add.w	r0, r4, #28
 801012c:	b189      	cbz	r1, 8010152 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801012e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010132:	9300      	str	r3, [sp, #0]
 8010134:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010138:	4613      	mov	r3, r2
 801013a:	462a      	mov	r2, r5
 801013c:	f015 fc58 	bl	80259f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010140:	b128      	cbz	r0, 801014e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010142:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010146:	6623      	str	r3, [r4, #96]	; 0x60
 8010148:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801014c:	6663      	str	r3, [r4, #100]	; 0x64
 801014e:	b007      	add	sp, #28
 8010150:	bd30      	pop	{r4, r5, pc}
 8010152:	f015 fc8d 	bl	8025a70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010156:	2301      	movs	r3, #1
 8010158:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801015c:	e7f1      	b.n	8010142 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801015e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801015e:	b510      	push	{r4, lr}
 8010160:	2b00      	cmp	r3, #0
 8010162:	d046      	beq.n	80101f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010164:	ea81 0002 	eor.w	r0, r1, r2
 8010168:	07c4      	lsls	r4, r0, #31
 801016a:	d508      	bpl.n	801017e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801016c:	440b      	add	r3, r1
 801016e:	3a01      	subs	r2, #1
 8010170:	428b      	cmp	r3, r1
 8010172:	d93e      	bls.n	80101f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010174:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010178:	f801 0b01 	strb.w	r0, [r1], #1
 801017c:	e7f8      	b.n	8010170 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801017e:	07d0      	lsls	r0, r2, #31
 8010180:	bf42      	ittt	mi
 8010182:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010186:	f801 0b01 	strbmi.w	r0, [r1], #1
 801018a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801018e:	2b01      	cmp	r3, #1
 8010190:	d911      	bls.n	80101b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010192:	ea81 0402 	eor.w	r4, r1, r2
 8010196:	07a4      	lsls	r4, r4, #30
 8010198:	4610      	mov	r0, r2
 801019a:	d022      	beq.n	80101e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801019c:	f023 0401 	bic.w	r4, r3, #1
 80101a0:	440c      	add	r4, r1
 80101a2:	428c      	cmp	r4, r1
 80101a4:	4602      	mov	r2, r0
 80101a6:	d904      	bls.n	80101b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80101a8:	8812      	ldrh	r2, [r2, #0]
 80101aa:	f821 2b02 	strh.w	r2, [r1], #2
 80101ae:	3002      	adds	r0, #2
 80101b0:	e7f7      	b.n	80101a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80101b2:	f003 0301 	and.w	r3, r3, #1
 80101b6:	f023 0003 	bic.w	r0, r3, #3
 80101ba:	4408      	add	r0, r1
 80101bc:	4288      	cmp	r0, r1
 80101be:	4614      	mov	r4, r2
 80101c0:	d904      	bls.n	80101cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80101c2:	6824      	ldr	r4, [r4, #0]
 80101c4:	f841 4b04 	str.w	r4, [r1], #4
 80101c8:	3204      	adds	r2, #4
 80101ca:	e7f7      	b.n	80101bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80101cc:	f003 0303 	and.w	r3, r3, #3
 80101d0:	440b      	add	r3, r1
 80101d2:	3a01      	subs	r2, #1
 80101d4:	428b      	cmp	r3, r1
 80101d6:	d90c      	bls.n	80101f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80101d8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80101dc:	f801 0b01 	strb.w	r0, [r1], #1
 80101e0:	e7f8      	b.n	80101d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80101e2:	0790      	lsls	r0, r2, #30
 80101e4:	d0e7      	beq.n	80101b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80101e6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80101ea:	f821 0b02 	strh.w	r0, [r1], #2
 80101ee:	3b02      	subs	r3, #2
 80101f0:	e7e1      	b.n	80101b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80101f2:	2001      	movs	r0, #1
 80101f4:	bd10      	pop	{r4, pc}

080101f6 <_ZN8touchgfx3HAL7noTouchEv>:
 80101f6:	b510      	push	{r4, lr}
 80101f8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80101fc:	4604      	mov	r4, r0
 80101fe:	b153      	cbz	r3, 8010216 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010200:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010204:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010208:	2101      	movs	r1, #1
 801020a:	301c      	adds	r0, #28
 801020c:	f015 fc30 	bl	8025a70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010210:	2300      	movs	r3, #0
 8010212:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010216:	bd10      	pop	{r4, pc}

08010218 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010218:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801021c:	b085      	sub	sp, #20
 801021e:	ad04      	add	r5, sp, #16
 8010220:	4604      	mov	r4, r0
 8010222:	2000      	movs	r0, #0
 8010224:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010228:	69a0      	ldr	r0, [r4, #24]
 801022a:	6806      	ldr	r6, [r0, #0]
 801022c:	9501      	str	r5, [sp, #4]
 801022e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010232:	9500      	str	r5, [sp, #0]
 8010234:	6835      	ldr	r5, [r6, #0]
 8010236:	4699      	mov	r9, r3
 8010238:	460f      	mov	r7, r1
 801023a:	4690      	mov	r8, r2
 801023c:	47a8      	blx	r5
 801023e:	4d10      	ldr	r5, [pc, #64]	; (8010280 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010240:	4606      	mov	r6, r0
 8010242:	f8a5 9000 	strh.w	r9, [r5]
 8010246:	f7f3 f9ed 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 801024a:	6803      	ldr	r3, [r0, #0]
 801024c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801024e:	4798      	blx	r3
 8010250:	b128      	cbz	r0, 801025e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010252:	2801      	cmp	r0, #1
 8010254:	d00b      	beq.n	801026e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010256:	4630      	mov	r0, r6
 8010258:	b005      	add	sp, #20
 801025a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801025e:	882b      	ldrh	r3, [r5, #0]
 8010260:	fb08 7203 	mla	r2, r8, r3, r7
 8010264:	9b03      	ldr	r3, [sp, #12]
 8010266:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801026a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801026c:	e7f3      	b.n	8010256 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801026e:	882a      	ldrh	r2, [r5, #0]
 8010270:	9b03      	ldr	r3, [sp, #12]
 8010272:	fb08 7202 	mla	r2, r8, r2, r7
 8010276:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801027a:	1a9a      	subs	r2, r3, r2
 801027c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801027e:	e7ea      	b.n	8010256 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010280:	200137c6 	.word	0x200137c6

08010284 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010284:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010286:	b08b      	sub	sp, #44	; 0x2c
 8010288:	4617      	mov	r7, r2
 801028a:	4604      	mov	r4, r0
 801028c:	460e      	mov	r6, r1
 801028e:	461d      	mov	r5, r3
 8010290:	f7f3 f9c8 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010294:	6803      	ldr	r3, [r0, #0]
 8010296:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010298:	4798      	blx	r3
 801029a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801029e:	9007      	str	r0, [sp, #28]
 80102a0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80102a4:	4b0d      	ldr	r3, [pc, #52]	; (80102dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80102a6:	6822      	ldr	r2, [r4, #0]
 80102a8:	881b      	ldrh	r3, [r3, #0]
 80102aa:	9306      	str	r3, [sp, #24]
 80102ac:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80102b0:	9305      	str	r3, [sp, #20]
 80102b2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80102b6:	9304      	str	r3, [sp, #16]
 80102b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80102bc:	9303      	str	r3, [sp, #12]
 80102be:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80102c2:	9302      	str	r3, [sp, #8]
 80102c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80102c8:	e9cd 5300 	strd	r5, r3, [sp]
 80102cc:	4631      	mov	r1, r6
 80102ce:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80102d0:	463b      	mov	r3, r7
 80102d2:	2200      	movs	r2, #0
 80102d4:	4620      	mov	r0, r4
 80102d6:	47a8      	blx	r5
 80102d8:	b00b      	add	sp, #44	; 0x2c
 80102da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80102dc:	200137c6 	.word	0x200137c6

080102e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80102e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80102e4:	4698      	mov	r8, r3
 80102e6:	6803      	ldr	r3, [r0, #0]
 80102e8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80102ea:	4b15      	ldr	r3, [pc, #84]	; (8010340 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80102ec:	b08b      	sub	sp, #44	; 0x2c
 80102ee:	4617      	mov	r7, r2
 80102f0:	f8b3 9000 	ldrh.w	r9, [r3]
 80102f4:	460e      	mov	r6, r1
 80102f6:	4604      	mov	r4, r0
 80102f8:	f7f3 f994 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80102fc:	6803      	ldr	r3, [r0, #0]
 80102fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010300:	4798      	blx	r3
 8010302:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010306:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801030a:	2302      	movs	r3, #2
 801030c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010310:	2301      	movs	r3, #1
 8010312:	9305      	str	r3, [sp, #20]
 8010314:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010318:	9304      	str	r3, [sp, #16]
 801031a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801031e:	9303      	str	r3, [sp, #12]
 8010320:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010324:	9302      	str	r3, [sp, #8]
 8010326:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801032a:	2200      	movs	r2, #0
 801032c:	e9cd 8300 	strd	r8, r3, [sp]
 8010330:	4631      	mov	r1, r6
 8010332:	463b      	mov	r3, r7
 8010334:	4620      	mov	r0, r4
 8010336:	47a8      	blx	r5
 8010338:	b00b      	add	sp, #44	; 0x2c
 801033a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801033e:	bf00      	nop
 8010340:	200137c6 	.word	0x200137c6

08010344 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010344:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010348:	4698      	mov	r8, r3
 801034a:	6803      	ldr	r3, [r0, #0]
 801034c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801034e:	4b11      	ldr	r3, [pc, #68]	; (8010394 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010350:	b087      	sub	sp, #28
 8010352:	f8b3 9000 	ldrh.w	r9, [r3]
 8010356:	460e      	mov	r6, r1
 8010358:	4617      	mov	r7, r2
 801035a:	4604      	mov	r4, r0
 801035c:	f7f3 f962 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010360:	6803      	ldr	r3, [r0, #0]
 8010362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010364:	4798      	blx	r3
 8010366:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801036a:	f8cd 900c 	str.w	r9, [sp, #12]
 801036e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010372:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010376:	9302      	str	r3, [sp, #8]
 8010378:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801037c:	9301      	str	r3, [sp, #4]
 801037e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010382:	9300      	str	r3, [sp, #0]
 8010384:	463a      	mov	r2, r7
 8010386:	4643      	mov	r3, r8
 8010388:	4631      	mov	r1, r6
 801038a:	4620      	mov	r0, r4
 801038c:	47a8      	blx	r5
 801038e:	b007      	add	sp, #28
 8010390:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010394:	200137c6 	.word	0x200137c6

08010398 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801039c:	4604      	mov	r4, r0
 801039e:	b08f      	sub	sp, #60	; 0x3c
 80103a0:	4610      	mov	r0, r2
 80103a2:	460d      	mov	r5, r1
 80103a4:	4691      	mov	r9, r2
 80103a6:	461e      	mov	r6, r3
 80103a8:	f007 fefc 	bl	80181a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80103ac:	2800      	cmp	r0, #0
 80103ae:	f000 809d 	beq.w	80104ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80103b2:	6823      	ldr	r3, [r4, #0]
 80103b4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80103b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80103ba:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80103be:	4f61      	ldr	r7, [pc, #388]	; (8010544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80103c0:	4620      	mov	r0, r4
 80103c2:	4798      	blx	r3
 80103c4:	6823      	ldr	r3, [r4, #0]
 80103c6:	4620      	mov	r0, r4
 80103c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103ca:	4798      	blx	r3
 80103cc:	f8bb 3000 	ldrh.w	r3, [fp]
 80103d0:	9301      	str	r3, [sp, #4]
 80103d2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80103d6:	f8ba 3000 	ldrh.w	r3, [sl]
 80103da:	9302      	str	r3, [sp, #8]
 80103dc:	883b      	ldrh	r3, [r7, #0]
 80103de:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80103e2:	9303      	str	r3, [sp, #12]
 80103e4:	4b58      	ldr	r3, [pc, #352]	; (8010548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80103e6:	9305      	str	r3, [sp, #20]
 80103e8:	881a      	ldrh	r2, [r3, #0]
 80103ea:	9204      	str	r2, [sp, #16]
 80103ec:	4640      	mov	r0, r8
 80103ee:	f007 ff6d 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80103f2:	8038      	strh	r0, [r7, #0]
 80103f4:	4640      	mov	r0, r8
 80103f6:	f007 ff9d 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80103fa:	9b05      	ldr	r3, [sp, #20]
 80103fc:	b280      	uxth	r0, r0
 80103fe:	8018      	strh	r0, [r3, #0]
 8010400:	4b52      	ldr	r3, [pc, #328]	; (801054c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010402:	781b      	ldrb	r3, [r3, #0]
 8010404:	2b00      	cmp	r3, #0
 8010406:	d174      	bne.n	80104f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010408:	883b      	ldrh	r3, [r7, #0]
 801040a:	f8ab 3000 	strh.w	r3, [fp]
 801040e:	f8aa 0000 	strh.w	r0, [sl]
 8010412:	4648      	mov	r0, r9
 8010414:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010418:	f007 fec4 	bl	80181a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801041c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010420:	2200      	movs	r2, #0
 8010422:	4611      	mov	r1, r2
 8010424:	4628      	mov	r0, r5
 8010426:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801042a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801042e:	f7f2 f83e 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8010432:	2301      	movs	r3, #1
 8010434:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010438:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801043c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010440:	2b00      	cmp	r3, #0
 8010442:	dd5c      	ble.n	80104fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010444:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010448:	2b00      	cmp	r3, #0
 801044a:	dd58      	ble.n	80104fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801044c:	462a      	mov	r2, r5
 801044e:	ab0a      	add	r3, sp, #40	; 0x28
 8010450:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010454:	6851      	ldr	r1, [r2, #4]
 8010456:	c303      	stmia	r3!, {r0, r1}
 8010458:	4631      	mov	r1, r6
 801045a:	a80a      	add	r0, sp, #40	; 0x28
 801045c:	f7ff fc06 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8010460:	4b38      	ldr	r3, [pc, #224]	; (8010544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010462:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010466:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801046a:	2100      	movs	r1, #0
 801046c:	aa0a      	add	r2, sp, #40	; 0x28
 801046e:	4b36      	ldr	r3, [pc, #216]	; (8010548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010470:	910c      	str	r1, [sp, #48]	; 0x30
 8010472:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010476:	f9b3 3000 	ldrsh.w	r3, [r3]
 801047a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801047e:	ab08      	add	r3, sp, #32
 8010480:	e883 0003 	stmia.w	r3, {r0, r1}
 8010484:	4618      	mov	r0, r3
 8010486:	a90c      	add	r1, sp, #48	; 0x30
 8010488:	f7ff fbf0 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 801048c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801048e:	2b00      	cmp	r3, #0
 8010490:	d13c      	bne.n	801050c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010492:	2000      	movs	r0, #0
 8010494:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010498:	2600      	movs	r6, #0
 801049a:	682a      	ldr	r2, [r5, #0]
 801049c:	696b      	ldr	r3, [r5, #20]
 801049e:	616e      	str	r6, [r5, #20]
 80104a0:	9305      	str	r3, [sp, #20]
 80104a2:	6892      	ldr	r2, [r2, #8]
 80104a4:	a908      	add	r1, sp, #32
 80104a6:	4628      	mov	r0, r5
 80104a8:	4790      	blx	r2
 80104aa:	9b05      	ldr	r3, [sp, #20]
 80104ac:	616b      	str	r3, [r5, #20]
 80104ae:	4652      	mov	r2, sl
 80104b0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80104b4:	4649      	mov	r1, r9
 80104b6:	4628      	mov	r0, r5
 80104b8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80104bc:	f7f1 fff7 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 80104c0:	4b23      	ldr	r3, [pc, #140]	; (8010550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80104c2:	9a01      	ldr	r2, [sp, #4]
 80104c4:	801a      	strh	r2, [r3, #0]
 80104c6:	4b23      	ldr	r3, [pc, #140]	; (8010554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80104c8:	9a02      	ldr	r2, [sp, #8]
 80104ca:	801a      	strh	r2, [r3, #0]
 80104cc:	4b1d      	ldr	r3, [pc, #116]	; (8010544 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80104ce:	9a03      	ldr	r2, [sp, #12]
 80104d0:	801a      	strh	r2, [r3, #0]
 80104d2:	4b1d      	ldr	r3, [pc, #116]	; (8010548 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80104d4:	9a04      	ldr	r2, [sp, #16]
 80104d6:	801a      	strh	r2, [r3, #0]
 80104d8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80104dc:	6823      	ldr	r3, [r4, #0]
 80104de:	4620      	mov	r0, r4
 80104e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80104e2:	4798      	blx	r3
 80104e4:	6823      	ldr	r3, [r4, #0]
 80104e6:	4620      	mov	r0, r4
 80104e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104ea:	4798      	blx	r3
 80104ec:	b00f      	add	sp, #60	; 0x3c
 80104ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104f2:	883b      	ldrh	r3, [r7, #0]
 80104f4:	f8ab 0000 	strh.w	r0, [fp]
 80104f8:	f8aa 3000 	strh.w	r3, [sl]
 80104fc:	e789      	b.n	8010412 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80104fe:	462a      	mov	r2, r5
 8010500:	ab0a      	add	r3, sp, #40	; 0x28
 8010502:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010506:	6851      	ldr	r1, [r2, #4]
 8010508:	c303      	stmia	r3!, {r0, r1}
 801050a:	e7a9      	b.n	8010460 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801050c:	a807      	add	r0, sp, #28
 801050e:	f008 f84d 	bl	80185ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010512:	4606      	mov	r6, r0
 8010514:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010516:	6803      	ldr	r3, [r0, #0]
 8010518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801051a:	4798      	blx	r3
 801051c:	4286      	cmp	r6, r0
 801051e:	d1b8      	bne.n	8010492 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010520:	f7f3 f880 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010524:	6803      	ldr	r3, [r0, #0]
 8010526:	4606      	mov	r6, r0
 8010528:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801052a:	9305      	str	r3, [sp, #20]
 801052c:	a807      	add	r0, sp, #28
 801052e:	f008 f83d 	bl	80185ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010532:	9b05      	ldr	r3, [sp, #20]
 8010534:	4601      	mov	r1, r0
 8010536:	4630      	mov	r0, r6
 8010538:	4798      	blx	r3
 801053a:	f080 0001 	eor.w	r0, r0, #1
 801053e:	b2c0      	uxtb	r0, r0
 8010540:	e7a8      	b.n	8010494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010542:	bf00      	nop
 8010544:	200137c0 	.word	0x200137c0
 8010548:	200137c2 	.word	0x200137c2
 801054c:	200137c4 	.word	0x200137c4
 8010550:	200137c6 	.word	0x200137c6
 8010554:	200137c8 	.word	0x200137c8

08010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010558:	b510      	push	{r4, lr}
 801055a:	4b07      	ldr	r3, [pc, #28]	; (8010578 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801055c:	781b      	ldrb	r3, [r3, #0]
 801055e:	4604      	mov	r4, r0
 8010560:	b13b      	cbz	r3, 8010572 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010562:	6803      	ldr	r3, [r0, #0]
 8010564:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010566:	4798      	blx	r3
 8010568:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801056a:	4283      	cmp	r3, r0
 801056c:	d101      	bne.n	8010572 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801056e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010570:	bd10      	pop	{r4, pc}
 8010572:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010574:	e7fc      	b.n	8010570 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010576:	bf00      	nop
 8010578:	200137ca 	.word	0x200137ca

0801057c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801057c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010580:	b08a      	sub	sp, #40	; 0x28
 8010582:	461d      	mov	r5, r3
 8010584:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010588:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801058c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010590:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010594:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010598:	f8ad 301a 	strh.w	r3, [sp, #26]
 801059c:	2400      	movs	r4, #0
 801059e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80105a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80105a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80105aa:	4690      	mov	r8, r2
 80105ac:	4607      	mov	r7, r0
 80105ae:	9404      	str	r4, [sp, #16]
 80105b0:	f88d 4020 	strb.w	r4, [sp, #32]
 80105b4:	f7ff ffd0 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105b8:	fb06 8505 	mla	r5, r6, r5, r8
 80105bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80105c0:	6878      	ldr	r0, [r7, #4]
 80105c2:	9505      	str	r5, [sp, #20]
 80105c4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80105c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80105cc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80105d0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80105d4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80105d8:	6803      	ldr	r3, [r0, #0]
 80105da:	a901      	add	r1, sp, #4
 80105dc:	685b      	ldr	r3, [r3, #4]
 80105de:	4798      	blx	r3
 80105e0:	b00a      	add	sp, #40	; 0x28
 80105e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105e6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80105e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105ea:	b08b      	sub	sp, #44	; 0x2c
 80105ec:	2400      	movs	r4, #0
 80105ee:	461d      	mov	r5, r3
 80105f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80105f4:	4688      	mov	r8, r1
 80105f6:	4691      	mov	r9, r2
 80105f8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80105fc:	9404      	str	r4, [sp, #16]
 80105fe:	4607      	mov	r7, r0
 8010600:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010604:	f7ff ffa8 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010608:	fb06 9505 	mla	r5, r6, r5, r9
 801060c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010610:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010614:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010618:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801061c:	6878      	ldr	r0, [r7, #4]
 801061e:	9505      	str	r5, [sp, #20]
 8010620:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010624:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010628:	f8ad 601e 	strh.w	r6, [sp, #30]
 801062c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010630:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010634:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010638:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801063c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010640:	6803      	ldr	r3, [r0, #0]
 8010642:	a901      	add	r1, sp, #4
 8010644:	685b      	ldr	r3, [r3, #4]
 8010646:	4798      	blx	r3
 8010648:	b00b      	add	sp, #44	; 0x2c
 801064a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010650 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010654:	b08a      	sub	sp, #40	; 0x28
 8010656:	4698      	mov	r8, r3
 8010658:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801065c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010660:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010664:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010668:	2300      	movs	r3, #0
 801066a:	2d0b      	cmp	r5, #11
 801066c:	4606      	mov	r6, r0
 801066e:	9304      	str	r3, [sp, #16]
 8010670:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010674:	d138      	bne.n	80106e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010676:	2380      	movs	r3, #128	; 0x80
 8010678:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801067c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010680:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010684:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010688:	f8ad 301a 	strh.w	r3, [sp, #26]
 801068c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010690:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010694:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010698:	4630      	mov	r0, r6
 801069a:	9203      	str	r2, [sp, #12]
 801069c:	f7ff ff5c 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80106a0:	2c0b      	cmp	r4, #11
 80106a2:	bf98      	it	ls
 80106a4:	4b1b      	ldrls	r3, [pc, #108]	; (8010714 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80106a6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80106aa:	bf98      	it	ls
 80106ac:	5d19      	ldrbls	r1, [r3, r4]
 80106ae:	f8ad 701e 	strh.w	r7, [sp, #30]
 80106b2:	bf88      	it	hi
 80106b4:	2100      	movhi	r1, #0
 80106b6:	fb02 8307 	mla	r3, r2, r7, r8
 80106ba:	10c9      	asrs	r1, r1, #3
 80106bc:	fb01 0003 	mla	r0, r1, r3, r0
 80106c0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80106c4:	9005      	str	r0, [sp, #20]
 80106c6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80106ca:	6870      	ldr	r0, [r6, #4]
 80106cc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80106d0:	2300      	movs	r3, #0
 80106d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80106d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80106da:	6803      	ldr	r3, [r0, #0]
 80106dc:	a901      	add	r1, sp, #4
 80106de:	685b      	ldr	r3, [r3, #4]
 80106e0:	4798      	blx	r3
 80106e2:	b00a      	add	sp, #40	; 0x28
 80106e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106e8:	2d02      	cmp	r5, #2
 80106ea:	d109      	bne.n	8010700 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80106ec:	28ff      	cmp	r0, #255	; 0xff
 80106ee:	d105      	bne.n	80106fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80106f0:	f1bc 0f00 	cmp.w	ip, #0
 80106f4:	bf14      	ite	ne
 80106f6:	2340      	movne	r3, #64	; 0x40
 80106f8:	2320      	moveq	r3, #32
 80106fa:	e7bd      	b.n	8010678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80106fc:	2340      	movs	r3, #64	; 0x40
 80106fe:	e7bb      	b.n	8010678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010700:	28ff      	cmp	r0, #255	; 0xff
 8010702:	d105      	bne.n	8010710 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010704:	f1bc 0f00 	cmp.w	ip, #0
 8010708:	bf14      	ite	ne
 801070a:	2304      	movne	r3, #4
 801070c:	2301      	moveq	r3, #1
 801070e:	e7b3      	b.n	8010678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010710:	2304      	movs	r3, #4
 8010712:	e7b1      	b.n	8010678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010714:	0802c780 	.word	0x0802c780

08010718 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801071c:	b08b      	sub	sp, #44	; 0x2c
 801071e:	461d      	mov	r5, r3
 8010720:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010724:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010728:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801072c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010730:	bf14      	ite	ne
 8010732:	2308      	movne	r3, #8
 8010734:	2302      	moveq	r3, #2
 8010736:	2400      	movs	r4, #0
 8010738:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801073c:	4688      	mov	r8, r1
 801073e:	4693      	mov	fp, r2
 8010740:	9404      	str	r4, [sp, #16]
 8010742:	4607      	mov	r7, r0
 8010744:	f7ff ff08 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010748:	2e0b      	cmp	r6, #11
 801074a:	bf98      	it	ls
 801074c:	4b15      	ldrls	r3, [pc, #84]	; (80107a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801074e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010752:	bf98      	it	ls
 8010754:	5d9c      	ldrbls	r4, [r3, r6]
 8010756:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801075a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801075e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010762:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010766:	f8ad 301a 	strh.w	r3, [sp, #26]
 801076a:	10e4      	asrs	r4, r4, #3
 801076c:	fb04 0405 	mla	r4, r4, r5, r0
 8010770:	2300      	movs	r3, #0
 8010772:	6878      	ldr	r0, [r7, #4]
 8010774:	9405      	str	r4, [sp, #20]
 8010776:	f8ad 301c 	strh.w	r3, [sp, #28]
 801077a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801077e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010782:	f88d 9020 	strb.w	r9, [sp, #32]
 8010786:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801078a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801078e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010792:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010796:	6803      	ldr	r3, [r0, #0]
 8010798:	a901      	add	r1, sp, #4
 801079a:	685b      	ldr	r3, [r3, #4]
 801079c:	4798      	blx	r3
 801079e:	b00b      	add	sp, #44	; 0x2c
 80107a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107a4:	0802c780 	.word	0x0802c780

080107a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80107a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107ac:	461e      	mov	r6, r3
 80107ae:	4b0a      	ldr	r3, [pc, #40]	; (80107d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80107b0:	460f      	mov	r7, r1
 80107b2:	881d      	ldrh	r5, [r3, #0]
 80107b4:	4690      	mov	r8, r2
 80107b6:	f7f2 ff35 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80107ba:	6803      	ldr	r3, [r0, #0]
 80107bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107be:	4798      	blx	r3
 80107c0:	280b      	cmp	r0, #11
 80107c2:	bf9a      	itte	ls
 80107c4:	4b05      	ldrls	r3, [pc, #20]	; (80107dc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80107c6:	5c1c      	ldrbls	r4, [r3, r0]
 80107c8:	2400      	movhi	r4, #0
 80107ca:	fb08 7005 	mla	r0, r8, r5, r7
 80107ce:	10e4      	asrs	r4, r4, #3
 80107d0:	fb04 6000 	mla	r0, r4, r0, r6
 80107d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107d8:	200137c6 	.word	0x200137c6
 80107dc:	0802c780 	.word	0x0802c780

080107e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80107e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107e2:	b08b      	sub	sp, #44	; 0x2c
 80107e4:	461f      	mov	r7, r3
 80107e6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80107ea:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80107ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80107f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80107fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80107fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010802:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010806:	2500      	movs	r5, #0
 8010808:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801080c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010810:	4604      	mov	r4, r0
 8010812:	4616      	mov	r6, r2
 8010814:	9504      	str	r5, [sp, #16]
 8010816:	f7ff fe9f 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801081a:	463a      	mov	r2, r7
 801081c:	4631      	mov	r1, r6
 801081e:	4603      	mov	r3, r0
 8010820:	4620      	mov	r0, r4
 8010822:	f7ff ffc1 	bl	80107a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010826:	4b0e      	ldr	r3, [pc, #56]	; (8010860 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010828:	9005      	str	r0, [sp, #20]
 801082a:	881b      	ldrh	r3, [r3, #0]
 801082c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010830:	f7f2 fef8 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010834:	6803      	ldr	r3, [r0, #0]
 8010836:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010838:	4798      	blx	r3
 801083a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801083c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010840:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010844:	9304      	str	r3, [sp, #16]
 8010846:	6860      	ldr	r0, [r4, #4]
 8010848:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801084c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010850:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010854:	6803      	ldr	r3, [r0, #0]
 8010856:	a901      	add	r1, sp, #4
 8010858:	685b      	ldr	r3, [r3, #4]
 801085a:	4798      	blx	r3
 801085c:	b00b      	add	sp, #44	; 0x2c
 801085e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010860:	200137c6 	.word	0x200137c6

08010864 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010866:	b08d      	sub	sp, #52	; 0x34
 8010868:	466b      	mov	r3, sp
 801086a:	e883 0006 	stmia.w	r3, {r1, r2}
 801086e:	2300      	movs	r3, #0
 8010870:	9306      	str	r3, [sp, #24]
 8010872:	6803      	ldr	r3, [r0, #0]
 8010874:	f8bd 6000 	ldrh.w	r6, [sp]
 8010878:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801087a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801087e:	2501      	movs	r5, #1
 8010880:	9503      	str	r5, [sp, #12]
 8010882:	4604      	mov	r4, r0
 8010884:	4798      	blx	r3
 8010886:	463a      	mov	r2, r7
 8010888:	4631      	mov	r1, r6
 801088a:	4603      	mov	r3, r0
 801088c:	4620      	mov	r0, r4
 801088e:	f7ff ff8b 	bl	80107a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010892:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010894:	9307      	str	r3, [sp, #28]
 8010896:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801089a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801089e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80108a2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80108a6:	4b0f      	ldr	r3, [pc, #60]	; (80108e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80108a8:	9004      	str	r0, [sp, #16]
 80108aa:	881b      	ldrh	r3, [r3, #0]
 80108ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80108b0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80108b4:	f7f2 feb6 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80108b8:	6803      	ldr	r3, [r0, #0]
 80108ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108bc:	4798      	blx	r3
 80108be:	23ff      	movs	r3, #255	; 0xff
 80108c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80108c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80108c8:	6860      	ldr	r0, [r4, #4]
 80108ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80108ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80108d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80108d6:	6803      	ldr	r3, [r0, #0]
 80108d8:	a903      	add	r1, sp, #12
 80108da:	685b      	ldr	r3, [r3, #4]
 80108dc:	4798      	blx	r3
 80108de:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80108e0:	b00d      	add	sp, #52	; 0x34
 80108e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108e4:	200137c6 	.word	0x200137c6

080108e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80108e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108ec:	b08c      	sub	sp, #48	; 0x30
 80108ee:	461e      	mov	r6, r3
 80108f0:	466d      	mov	r5, sp
 80108f2:	2300      	movs	r3, #0
 80108f4:	e885 0006 	stmia.w	r5, {r1, r2}
 80108f8:	9306      	str	r3, [sp, #24]
 80108fa:	6803      	ldr	r3, [r0, #0]
 80108fc:	f8bd 7000 	ldrh.w	r7, [sp]
 8010900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010902:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010906:	2501      	movs	r5, #1
 8010908:	9503      	str	r5, [sp, #12]
 801090a:	4604      	mov	r4, r0
 801090c:	4798      	blx	r3
 801090e:	4642      	mov	r2, r8
 8010910:	4639      	mov	r1, r7
 8010912:	4603      	mov	r3, r0
 8010914:	4620      	mov	r0, r4
 8010916:	f7ff ff47 	bl	80107a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801091a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801091e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010922:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010926:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801092a:	4b11      	ldr	r3, [pc, #68]	; (8010970 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801092c:	9004      	str	r0, [sp, #16]
 801092e:	881b      	ldrh	r3, [r3, #0]
 8010930:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010934:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010936:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801093a:	9607      	str	r6, [sp, #28]
 801093c:	f7f2 fe72 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8010940:	6803      	ldr	r3, [r0, #0]
 8010942:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010944:	4798      	blx	r3
 8010946:	23ff      	movs	r3, #255	; 0xff
 8010948:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801094c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010950:	6860      	ldr	r0, [r4, #4]
 8010952:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010956:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801095a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801095e:	6803      	ldr	r3, [r0, #0]
 8010960:	a903      	add	r1, sp, #12
 8010962:	685b      	ldr	r3, [r3, #4]
 8010964:	4798      	blx	r3
 8010966:	4630      	mov	r0, r6
 8010968:	b00c      	add	sp, #48	; 0x30
 801096a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801096e:	bf00      	nop
 8010970:	200137c6 	.word	0x200137c6

08010974 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010976:	b085      	sub	sp, #20
 8010978:	ac02      	add	r4, sp, #8
 801097a:	e884 0006 	stmia.w	r4, {r1, r2}
 801097e:	4605      	mov	r5, r0
 8010980:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010984:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010988:	f7ff fde6 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801098c:	463a      	mov	r2, r7
 801098e:	4603      	mov	r3, r0
 8010990:	4631      	mov	r1, r6
 8010992:	4628      	mov	r0, r5
 8010994:	f7ff ff08 	bl	80107a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010998:	4a05      	ldr	r2, [pc, #20]	; (80109b0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801099a:	682b      	ldr	r3, [r5, #0]
 801099c:	8812      	ldrh	r2, [r2, #0]
 801099e:	9200      	str	r2, [sp, #0]
 80109a0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80109a2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80109a6:	4603      	mov	r3, r0
 80109a8:	4628      	mov	r0, r5
 80109aa:	47b0      	blx	r6
 80109ac:	b005      	add	sp, #20
 80109ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109b0:	200137c6 	.word	0x200137c6

080109b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80109b4:	b570      	push	{r4, r5, r6, lr}
 80109b6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80109ba:	4604      	mov	r4, r0
 80109bc:	b19b      	cbz	r3, 80109e6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80109be:	2002      	movs	r0, #2
 80109c0:	f7ef ff04 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80109c4:	2300      	movs	r3, #0
 80109c6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80109ca:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80109ce:	6823      	ldr	r3, [r4, #0]
 80109d0:	4620      	mov	r0, r4
 80109d2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80109d6:	f7ff fdbf 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80109da:	462b      	mov	r3, r5
 80109dc:	4601      	mov	r1, r0
 80109de:	4620      	mov	r0, r4
 80109e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109e4:	4718      	bx	r3
 80109e6:	bd70      	pop	{r4, r5, r6, pc}

080109e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80109e8:	b538      	push	{r3, r4, r5, lr}
 80109ea:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80109ee:	428b      	cmp	r3, r1
 80109f0:	4604      	mov	r4, r0
 80109f2:	460d      	mov	r5, r1
 80109f4:	d006      	beq.n	8010a04 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80109f6:	6803      	ldr	r3, [r0, #0]
 80109f8:	b929      	cbnz	r1, 8010a06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80109fa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80109fe:	4798      	blx	r3
 8010a00:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010a04:	bd38      	pop	{r3, r4, r5, pc}
 8010a06:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010a0a:	e7f8      	b.n	80109fe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010a0c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010a0c:	b510      	push	{r4, lr}
 8010a0e:	4b0d      	ldr	r3, [pc, #52]	; (8010a44 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010a10:	781b      	ldrb	r3, [r3, #0]
 8010a12:	4604      	mov	r4, r0
 8010a14:	b95b      	cbnz	r3, 8010a2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010a16:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010a1a:	2b02      	cmp	r3, #2
 8010a1c:	d007      	beq.n	8010a2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010a1e:	6840      	ldr	r0, [r0, #4]
 8010a20:	f000 f92c 	bl	8010c7c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010a24:	b118      	cbz	r0, 8010a2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010a26:	6862      	ldr	r2, [r4, #4]
 8010a28:	7a53      	ldrb	r3, [r2, #9]
 8010a2a:	2b00      	cmp	r3, #0
 8010a2c:	d0fc      	beq.n	8010a28 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010a2e:	f7f0 f805 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010a32:	4620      	mov	r0, r4
 8010a34:	2100      	movs	r1, #0
 8010a36:	f7ff ffd7 	bl	80109e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010a3a:	4620      	mov	r0, r4
 8010a3c:	f7ff fd8c 	bl	8010558 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a40:	bd10      	pop	{r4, pc}
 8010a42:	bf00      	nop
 8010a44:	200137ca 	.word	0x200137ca

08010a48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010a48:	b570      	push	{r4, r5, r6, lr}
 8010a4a:	4604      	mov	r4, r0
 8010a4c:	6803      	ldr	r3, [r0, #0]
 8010a4e:	b919      	cbnz	r1, 8010a58 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010a50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010a52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a56:	4718      	bx	r3
 8010a58:	2200      	movs	r2, #0
 8010a5a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010a5e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010a62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010a64:	4798      	blx	r3
 8010a66:	6863      	ldr	r3, [r4, #4]
 8010a68:	2101      	movs	r1, #1
 8010a6a:	4605      	mov	r5, r0
 8010a6c:	7299      	strb	r1, [r3, #10]
 8010a6e:	4620      	mov	r0, r4
 8010a70:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010a74:	f7ff ffb8 	bl	80109e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010a78:	4628      	mov	r0, r5
 8010a7a:	bd70      	pop	{r4, r5, r6, pc}

08010a7c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010a7c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010a80:	1a13      	subs	r3, r2, r0
 8010a82:	4258      	negs	r0, r3
 8010a84:	4158      	adcs	r0, r3
 8010a86:	4770      	bx	lr

08010a88 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010a88:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010a8c:	1a9b      	subs	r3, r3, r2
 8010a8e:	2b00      	cmp	r3, #0
 8010a90:	bfdc      	itt	le
 8010a92:	6882      	ldrle	r2, [r0, #8]
 8010a94:	189b      	addle	r3, r3, r2
 8010a96:	2b01      	cmp	r3, #1
 8010a98:	bfcc      	ite	gt
 8010a9a:	2000      	movgt	r0, #0
 8010a9c:	2001      	movle	r0, #1
 8010a9e:	4770      	bx	lr

08010aa0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010aa0:	6902      	ldr	r2, [r0, #16]
 8010aa2:	6843      	ldr	r3, [r0, #4]
 8010aa4:	2024      	movs	r0, #36	; 0x24
 8010aa6:	fb00 3002 	mla	r0, r0, r2, r3
 8010aaa:	4770      	bx	lr

08010aac <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010aac:	6803      	ldr	r3, [r0, #0]
 8010aae:	691b      	ldr	r3, [r3, #16]
 8010ab0:	4718      	bx	r3

08010ab2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010ab2:	b570      	push	{r4, r5, r6, lr}
 8010ab4:	2301      	movs	r3, #1
 8010ab6:	7203      	strb	r3, [r0, #8]
 8010ab8:	4604      	mov	r4, r0
 8010aba:	6840      	ldr	r0, [r0, #4]
 8010abc:	6803      	ldr	r3, [r0, #0]
 8010abe:	699b      	ldr	r3, [r3, #24]
 8010ac0:	4798      	blx	r3
 8010ac2:	6803      	ldr	r3, [r0, #0]
 8010ac4:	2b40      	cmp	r3, #64	; 0x40
 8010ac6:	4605      	mov	r5, r0
 8010ac8:	d00c      	beq.n	8010ae4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010aca:	d810      	bhi.n	8010aee <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010acc:	2b04      	cmp	r3, #4
 8010ace:	d01d      	beq.n	8010b0c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010ad0:	d804      	bhi.n	8010adc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010ad2:	2b01      	cmp	r3, #1
 8010ad4:	d006      	beq.n	8010ae4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ad6:	2b02      	cmp	r3, #2
 8010ad8:	d02c      	beq.n	8010b34 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010ada:	bd70      	pop	{r4, r5, r6, pc}
 8010adc:	2b08      	cmp	r3, #8
 8010ade:	d01d      	beq.n	8010b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010ae0:	2b20      	cmp	r3, #32
 8010ae2:	d1fa      	bne.n	8010ada <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010ae4:	6823      	ldr	r3, [r4, #0]
 8010ae6:	4620      	mov	r0, r4
 8010ae8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010aea:	4798      	blx	r3
 8010aec:	e013      	b.n	8010b16 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010aee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010af2:	d0f7      	beq.n	8010ae4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010af4:	d804      	bhi.n	8010b00 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010af6:	2b80      	cmp	r3, #128	; 0x80
 8010af8:	d0f4      	beq.n	8010ae4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010afa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010afe:	e7f0      	b.n	8010ae2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010b00:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010b04:	d0ee      	beq.n	8010ae4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010b06:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010b0a:	e7e5      	b.n	8010ad8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010b0c:	6823      	ldr	r3, [r4, #0]
 8010b0e:	7f01      	ldrb	r1, [r0, #28]
 8010b10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010b12:	4620      	mov	r0, r4
 8010b14:	4798      	blx	r3
 8010b16:	6823      	ldr	r3, [r4, #0]
 8010b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b1a:	e006      	b.n	8010b2a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010b1c:	6823      	ldr	r3, [r4, #0]
 8010b1e:	7f01      	ldrb	r1, [r0, #28]
 8010b20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010b22:	4620      	mov	r0, r4
 8010b24:	4798      	blx	r3
 8010b26:	6823      	ldr	r3, [r4, #0]
 8010b28:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010b2a:	4629      	mov	r1, r5
 8010b2c:	4620      	mov	r0, r4
 8010b2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b32:	4718      	bx	r3
 8010b34:	6823      	ldr	r3, [r4, #0]
 8010b36:	4620      	mov	r0, r4
 8010b38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b3a:	4798      	blx	r3
 8010b3c:	e7f3      	b.n	8010b26 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010b3e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010b3e:	4770      	bx	lr

08010b40 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010b40:	4770      	bx	lr

08010b42 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010b42:	4770      	bx	lr

08010b44 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010b44:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010b48:	1ad2      	subs	r2, r2, r3
 8010b4a:	2a00      	cmp	r2, #0
 8010b4c:	b510      	push	{r4, lr}
 8010b4e:	bfdc      	itt	le
 8010b50:	6884      	ldrle	r4, [r0, #8]
 8010b52:	1912      	addle	r2, r2, r4
 8010b54:	2a01      	cmp	r2, #1
 8010b56:	dd16      	ble.n	8010b86 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010b58:	6842      	ldr	r2, [r0, #4]
 8010b5a:	2424      	movs	r4, #36	; 0x24
 8010b5c:	fb04 2303 	mla	r3, r4, r3, r2
 8010b60:	f101 0220 	add.w	r2, r1, #32
 8010b64:	f851 4b04 	ldr.w	r4, [r1], #4
 8010b68:	f843 4b04 	str.w	r4, [r3], #4
 8010b6c:	4291      	cmp	r1, r2
 8010b6e:	d1f9      	bne.n	8010b64 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010b70:	780a      	ldrb	r2, [r1, #0]
 8010b72:	701a      	strb	r2, [r3, #0]
 8010b74:	68c3      	ldr	r3, [r0, #12]
 8010b76:	6882      	ldr	r2, [r0, #8]
 8010b78:	f3bf 8f5b 	dmb	ish
 8010b7c:	3301      	adds	r3, #1
 8010b7e:	429a      	cmp	r2, r3
 8010b80:	bfd8      	it	le
 8010b82:	1a9b      	suble	r3, r3, r2
 8010b84:	60c3      	str	r3, [r0, #12]
 8010b86:	bd10      	pop	{r4, pc}

08010b88 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010b88:	6903      	ldr	r3, [r0, #16]
 8010b8a:	6882      	ldr	r2, [r0, #8]
 8010b8c:	f3bf 8f5b 	dmb	ish
 8010b90:	3301      	adds	r3, #1
 8010b92:	429a      	cmp	r2, r3
 8010b94:	bfd8      	it	le
 8010b96:	1a9b      	suble	r3, r3, r2
 8010b98:	6103      	str	r3, [r0, #16]
 8010b9a:	4770      	bx	lr

08010b9c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010b9c:	b570      	push	{r4, r5, r6, lr}
 8010b9e:	4604      	mov	r4, r0
 8010ba0:	460e      	mov	r6, r1
 8010ba2:	6860      	ldr	r0, [r4, #4]
 8010ba4:	6803      	ldr	r3, [r0, #0]
 8010ba6:	685b      	ldr	r3, [r3, #4]
 8010ba8:	4798      	blx	r3
 8010baa:	2800      	cmp	r0, #0
 8010bac:	d1f9      	bne.n	8010ba2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010bae:	4d0d      	ldr	r5, [pc, #52]	; (8010be4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010bb0:	6828      	ldr	r0, [r5, #0]
 8010bb2:	6803      	ldr	r3, [r0, #0]
 8010bb4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010bb6:	4798      	blx	r3
 8010bb8:	f7ef ff4e 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010bbc:	6828      	ldr	r0, [r5, #0]
 8010bbe:	2101      	movs	r1, #1
 8010bc0:	f7ff ff12 	bl	80109e8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010bc4:	6860      	ldr	r0, [r4, #4]
 8010bc6:	6803      	ldr	r3, [r0, #0]
 8010bc8:	4631      	mov	r1, r6
 8010bca:	689b      	ldr	r3, [r3, #8]
 8010bcc:	4798      	blx	r3
 8010bce:	6823      	ldr	r3, [r4, #0]
 8010bd0:	4620      	mov	r0, r4
 8010bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010bd4:	4798      	blx	r3
 8010bd6:	6828      	ldr	r0, [r5, #0]
 8010bd8:	6803      	ldr	r3, [r0, #0]
 8010bda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bde:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010be0:	4718      	bx	r3
 8010be2:	bf00      	nop
 8010be4:	200137cc 	.word	0x200137cc

08010be8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010be8:	b508      	push	{r3, lr}
 8010bea:	f7ef ff27 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010bee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010bf2:	f7ef bf2b 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010bf6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010bf6:	b510      	push	{r4, lr}
 8010bf8:	2114      	movs	r1, #20
 8010bfa:	4604      	mov	r4, r0
 8010bfc:	f016 fea7 	bl	802794e <_ZdlPvj>
 8010c00:	4620      	mov	r0, r4
 8010c02:	bd10      	pop	{r4, pc}

08010c04 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010c04:	b510      	push	{r4, lr}
 8010c06:	4604      	mov	r4, r0
 8010c08:	6840      	ldr	r0, [r0, #4]
 8010c0a:	6803      	ldr	r3, [r0, #0]
 8010c0c:	681b      	ldr	r3, [r3, #0]
 8010c0e:	4798      	blx	r3
 8010c10:	b948      	cbnz	r0, 8010c26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010c12:	7a63      	ldrb	r3, [r4, #9]
 8010c14:	b13b      	cbz	r3, 8010c26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010c16:	7a23      	ldrb	r3, [r4, #8]
 8010c18:	b92b      	cbnz	r3, 8010c26 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010c1a:	6823      	ldr	r3, [r4, #0]
 8010c1c:	4620      	mov	r0, r4
 8010c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010c20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c24:	4718      	bx	r3
 8010c26:	bd10      	pop	{r4, pc}

08010c28 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010c28:	b570      	push	{r4, r5, r6, lr}
 8010c2a:	4604      	mov	r4, r0
 8010c2c:	6840      	ldr	r0, [r0, #4]
 8010c2e:	6803      	ldr	r3, [r0, #0]
 8010c30:	681b      	ldr	r3, [r3, #0]
 8010c32:	4798      	blx	r3
 8010c34:	4605      	mov	r5, r0
 8010c36:	b930      	cbnz	r0, 8010c46 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010c38:	7a23      	ldrb	r3, [r4, #8]
 8010c3a:	b123      	cbz	r3, 8010c46 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010c3c:	6860      	ldr	r0, [r4, #4]
 8010c3e:	6803      	ldr	r3, [r0, #0]
 8010c40:	695b      	ldr	r3, [r3, #20]
 8010c42:	4798      	blx	r3
 8010c44:	7225      	strb	r5, [r4, #8]
 8010c46:	6860      	ldr	r0, [r4, #4]
 8010c48:	6803      	ldr	r3, [r0, #0]
 8010c4a:	681b      	ldr	r3, [r3, #0]
 8010c4c:	4798      	blx	r3
 8010c4e:	b928      	cbnz	r0, 8010c5c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010c50:	6823      	ldr	r3, [r4, #0]
 8010c52:	4620      	mov	r0, r4
 8010c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010c56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c5a:	4718      	bx	r3
 8010c5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c60:	f7ef bf02 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010c64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010c64:	b510      	push	{r4, lr}
 8010c66:	4c04      	ldr	r4, [pc, #16]	; (8010c78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010c68:	6082      	str	r2, [r0, #8]
 8010c6a:	2200      	movs	r2, #0
 8010c6c:	e9c0 4100 	strd	r4, r1, [r0]
 8010c70:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010c74:	bd10      	pop	{r4, pc}
 8010c76:	bf00      	nop
 8010c78:	0802c794 	.word	0x0802c794

08010c7c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010c7c:	6840      	ldr	r0, [r0, #4]
 8010c7e:	6803      	ldr	r3, [r0, #0]
 8010c80:	681b      	ldr	r3, [r3, #0]
 8010c82:	4718      	bx	r3

08010c84 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010c84:	4b06      	ldr	r3, [pc, #24]	; (8010ca0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010c86:	60c1      	str	r1, [r0, #12]
 8010c88:	094a      	lsrs	r2, r1, #5
 8010c8a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010c8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010c92:	4313      	orrs	r3, r2
 8010c94:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010c98:	4319      	orrs	r1, r3
 8010c9a:	8201      	strh	r1, [r0, #16]
 8010c9c:	4770      	bx	lr
 8010c9e:	bf00      	nop
 8010ca0:	fffff800 	.word	0xfffff800

08010ca4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010ca4:	f1a0 0008 	sub.w	r0, r0, #8
 8010ca8:	e7ec      	b.n	8010c84 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010caa:	bf00      	nop

08010cac <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010cac:	b508      	push	{r3, lr}
 8010cae:	4b05      	ldr	r3, [pc, #20]	; (8010cc4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010cb0:	6818      	ldr	r0, [r3, #0]
 8010cb2:	6803      	ldr	r3, [r0, #0]
 8010cb4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010cb8:	4798      	blx	r3
 8010cba:	1e43      	subs	r3, r0, #1
 8010cbc:	4258      	negs	r0, r3
 8010cbe:	4158      	adcs	r0, r3
 8010cc0:	bd08      	pop	{r3, pc}
 8010cc2:	bf00      	nop
 8010cc4:	200137cc 	.word	0x200137cc

08010cc8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010cc8:	4770      	bx	lr

08010cca <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010cca:	3808      	subs	r0, #8
 8010ccc:	4770      	bx	lr

08010cce <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010cce:	b430      	push	{r4, r5}
 8010cd0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010cd4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010cd8:	8a02      	ldrh	r2, [r0, #16]
 8010cda:	9202      	str	r2, [sp, #8]
 8010cdc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010ce0:	68c2      	ldr	r2, [r0, #12]
 8010ce2:	4629      	mov	r1, r5
 8010ce4:	4620      	mov	r0, r4
 8010ce6:	bc30      	pop	{r4, r5}
 8010ce8:	f7f0 b882 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010cec <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010cec:	f7f0 b876 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

08010cf0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010cf0:	b510      	push	{r4, lr}
 8010cf2:	2114      	movs	r1, #20
 8010cf4:	4604      	mov	r4, r0
 8010cf6:	f016 fe2a 	bl	802794e <_ZdlPvj>
 8010cfa:	4620      	mov	r0, r4
 8010cfc:	bd10      	pop	{r4, pc}

08010cfe <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010cfe:	f1a0 0008 	sub.w	r0, r0, #8
 8010d02:	e7f5      	b.n	8010cf0 <_ZN8touchgfx13PainterRGB565D0Ev>

08010d04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010d04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d06:	6803      	ldr	r3, [r0, #0]
 8010d08:	460d      	mov	r5, r1
 8010d0a:	4604      	mov	r4, r0
 8010d0c:	4601      	mov	r1, r0
 8010d0e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010d10:	a802      	add	r0, sp, #8
 8010d12:	4798      	blx	r3
 8010d14:	6828      	ldr	r0, [r5, #0]
 8010d16:	6869      	ldr	r1, [r5, #4]
 8010d18:	466b      	mov	r3, sp
 8010d1a:	c303      	stmia	r3!, {r0, r1}
 8010d1c:	4668      	mov	r0, sp
 8010d1e:	4619      	mov	r1, r3
 8010d20:	f7fe ffa4 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8010d24:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010d26:	b188      	cbz	r0, 8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	1d21      	adds	r1, r4, #4
 8010d2c:	68db      	ldr	r3, [r3, #12]
 8010d2e:	4798      	blx	r3
 8010d30:	b160      	cbz	r0, 8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010d32:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010d36:	2b00      	cmp	r3, #0
 8010d38:	dd08      	ble.n	8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010d3a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010d3e:	2d00      	cmp	r5, #0
 8010d40:	dd04      	ble.n	8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010d42:	4a2b      	ldr	r2, [pc, #172]	; (8010df0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010d44:	7812      	ldrb	r2, [r2, #0]
 8010d46:	b11a      	cbz	r2, 8010d50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010d48:	2a01      	cmp	r2, #1
 8010d4a:	d029      	beq.n	8010da0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010d4c:	b004      	add	sp, #16
 8010d4e:	bd70      	pop	{r4, r5, r6, pc}
 8010d50:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d54:	441d      	add	r5, r3
 8010d56:	b2ad      	uxth	r5, r5
 8010d58:	b22e      	sxth	r6, r5
 8010d5a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010d5e:	42b3      	cmp	r3, r6
 8010d60:	daf4      	bge.n	8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010d62:	6823      	ldr	r3, [r4, #0]
 8010d64:	4669      	mov	r1, sp
 8010d66:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010d68:	4620      	mov	r0, r4
 8010d6a:	4798      	blx	r3
 8010d6c:	b940      	cbnz	r0, 8010d80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010d6e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010d72:	2b01      	cmp	r3, #1
 8010d74:	d004      	beq.n	8010d80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010d76:	3301      	adds	r3, #1
 8010d78:	105b      	asrs	r3, r3, #1
 8010d7a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010d7e:	e7f0      	b.n	8010d62 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010d80:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010d84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d88:	4413      	add	r3, r2
 8010d8a:	b29b      	uxth	r3, r3
 8010d8c:	441a      	add	r2, r3
 8010d8e:	b212      	sxth	r2, r2
 8010d90:	4296      	cmp	r6, r2
 8010d92:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d96:	dae0      	bge.n	8010d5a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010d98:	1aeb      	subs	r3, r5, r3
 8010d9a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010d9e:	e7dc      	b.n	8010d5a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010da0:	f8bd 5000 	ldrh.w	r5, [sp]
 8010da4:	441d      	add	r5, r3
 8010da6:	b2ad      	uxth	r5, r5
 8010da8:	b22e      	sxth	r6, r5
 8010daa:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010dae:	42b3      	cmp	r3, r6
 8010db0:	dacc      	bge.n	8010d4c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010db2:	6823      	ldr	r3, [r4, #0]
 8010db4:	4669      	mov	r1, sp
 8010db6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010db8:	4620      	mov	r0, r4
 8010dba:	4798      	blx	r3
 8010dbc:	b940      	cbnz	r0, 8010dd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010dbe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010dc2:	2b01      	cmp	r3, #1
 8010dc4:	d004      	beq.n	8010dd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010dc6:	3301      	adds	r3, #1
 8010dc8:	105b      	asrs	r3, r3, #1
 8010dca:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010dce:	e7f0      	b.n	8010db2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010dd0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010dd4:	f8bd 3000 	ldrh.w	r3, [sp]
 8010dd8:	4413      	add	r3, r2
 8010dda:	b29b      	uxth	r3, r3
 8010ddc:	441a      	add	r2, r3
 8010dde:	b212      	sxth	r2, r2
 8010de0:	4296      	cmp	r6, r2
 8010de2:	f8ad 3000 	strh.w	r3, [sp]
 8010de6:	dae0      	bge.n	8010daa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010de8:	1aeb      	subs	r3, r5, r3
 8010dea:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010dee:	e7dc      	b.n	8010daa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010df0:	200137c4 	.word	0x200137c4

08010df4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010df4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010df6:	6803      	ldr	r3, [r0, #0]
 8010df8:	4604      	mov	r4, r0
 8010dfa:	4601      	mov	r1, r0
 8010dfc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010dfe:	4668      	mov	r0, sp
 8010e00:	4798      	blx	r3
 8010e02:	2100      	movs	r1, #0
 8010e04:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010e08:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010e0c:	9102      	str	r1, [sp, #8]
 8010e0e:	4668      	mov	r0, sp
 8010e10:	a902      	add	r1, sp, #8
 8010e12:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010e16:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010e1a:	f7fe ff27 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8010e1e:	6823      	ldr	r3, [r4, #0]
 8010e20:	4669      	mov	r1, sp
 8010e22:	691b      	ldr	r3, [r3, #16]
 8010e24:	4620      	mov	r0, r4
 8010e26:	4798      	blx	r3
 8010e28:	b004      	add	sp, #16
 8010e2a:	bd10      	pop	{r4, pc}

08010e2c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010e2c:	2101      	movs	r1, #1
 8010e2e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010e32:	490b      	ldr	r1, [pc, #44]	; (8010e60 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010e34:	6001      	str	r1, [r0, #0]
 8010e36:	2200      	movs	r2, #0
 8010e38:	21ff      	movs	r1, #255	; 0xff
 8010e3a:	8082      	strh	r2, [r0, #4]
 8010e3c:	80c2      	strh	r2, [r0, #6]
 8010e3e:	8102      	strh	r2, [r0, #8]
 8010e40:	8142      	strh	r2, [r0, #10]
 8010e42:	8182      	strh	r2, [r0, #12]
 8010e44:	81c2      	strh	r2, [r0, #14]
 8010e46:	8202      	strh	r2, [r0, #16]
 8010e48:	8242      	strh	r2, [r0, #18]
 8010e4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010e4e:	61c2      	str	r2, [r0, #28]
 8010e50:	8402      	strh	r2, [r0, #32]
 8010e52:	8442      	strh	r2, [r0, #34]	; 0x22
 8010e54:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010e58:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010e5c:	6282      	str	r2, [r0, #40]	; 0x28
 8010e5e:	4770      	bx	lr
 8010e60:	0802c7f0 	.word	0x0802c7f0

08010e64 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010e64:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010e68:	4602      	mov	r2, r0
 8010e6a:	cb03      	ldmia	r3!, {r0, r1}
 8010e6c:	6010      	str	r0, [r2, #0]
 8010e6e:	6051      	str	r1, [r2, #4]
 8010e70:	4610      	mov	r0, r2
 8010e72:	4770      	bx	lr

08010e74 <_ZN8touchgfx4LineD1Ev>:
 8010e74:	4770      	bx	lr

08010e76 <_ZN8touchgfx4LineD0Ev>:
 8010e76:	b510      	push	{r4, lr}
 8010e78:	2170      	movs	r1, #112	; 0x70
 8010e7a:	4604      	mov	r4, r0
 8010e7c:	f016 fd67 	bl	802794e <_ZdlPvj>
 8010e80:	4620      	mov	r0, r4
 8010e82:	bd10      	pop	{r4, pc}

08010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010e84:	b507      	push	{r0, r1, r2, lr}
 8010e86:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010e8a:	ab01      	add	r3, sp, #4
 8010e8c:	6809      	ldr	r1, [r1, #0]
 8010e8e:	6800      	ldr	r0, [r0, #0]
 8010e90:	f005 fab4 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 8010e94:	b003      	add	sp, #12
 8010e96:	f85d fb04 	ldr.w	pc, [sp], #4

08010e9a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010e9a:	6800      	ldr	r0, [r0, #0]
 8010e9c:	2800      	cmp	r0, #0
 8010e9e:	bfb9      	ittee	lt
 8010ea0:	2320      	movlt	r3, #32
 8010ea2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010ea6:	301f      	addge	r0, #31
 8010ea8:	1140      	asrge	r0, r0, #5
 8010eaa:	4770      	bx	lr

08010eac <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010eb0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010eb4:	b089      	sub	sp, #36	; 0x24
 8010eb6:	4604      	mov	r4, r0
 8010eb8:	b353      	cbz	r3, 8010f10 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010eba:	6803      	ldr	r3, [r0, #0]
 8010ebc:	4601      	mov	r1, r0
 8010ebe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010ec0:	a802      	add	r0, sp, #8
 8010ec2:	4798      	blx	r3
 8010ec4:	2220      	movs	r2, #32
 8010ec6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010eca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010ecc:	fb9a f0f2 	sdiv	r0, sl, r2
 8010ed0:	fb91 f5f2 	sdiv	r5, r1, r2
 8010ed4:	1b40      	subs	r0, r0, r5
 8010ed6:	2800      	cmp	r0, #0
 8010ed8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010eda:	fb93 f6f2 	sdiv	r6, r3, r2
 8010ede:	bfb8      	it	lt
 8010ee0:	4240      	neglt	r0, r0
 8010ee2:	0076      	lsls	r6, r6, #1
 8010ee4:	4286      	cmp	r6, r0
 8010ee6:	f8d4 b000 	ldr.w	fp, [r4]
 8010eea:	dc0c      	bgt.n	8010f06 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010eec:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010eee:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010ef2:	fb95 f0f2 	sdiv	r0, r5, r2
 8010ef6:	fb98 f7f2 	sdiv	r7, r8, r2
 8010efa:	1bc0      	subs	r0, r0, r7
 8010efc:	2800      	cmp	r0, #0
 8010efe:	bfb8      	it	lt
 8010f00:	4240      	neglt	r0, r0
 8010f02:	4286      	cmp	r6, r0
 8010f04:	dd07      	ble.n	8010f16 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010f06:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010f0a:	a902      	add	r1, sp, #8
 8010f0c:	4620      	mov	r0, r4
 8010f0e:	4798      	blx	r3
 8010f10:	b009      	add	sp, #36	; 0x24
 8010f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f16:	3301      	adds	r3, #1
 8010f18:	2002      	movs	r0, #2
 8010f1a:	f10d 0920 	add.w	r9, sp, #32
 8010f1e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010f22:	4103      	asrs	r3, r0
 8010f24:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010f28:	eb01 060a 	add.w	r6, r1, sl
 8010f2c:	eb08 0705 	add.w	r7, r8, r5
 8010f30:	fb96 f6f0 	sdiv	r6, r6, r0
 8010f34:	fb97 f7f0 	sdiv	r7, r7, r0
 8010f38:	4648      	mov	r0, r9
 8010f3a:	9101      	str	r1, [sp, #4]
 8010f3c:	b236      	sxth	r6, r6
 8010f3e:	b23f      	sxth	r7, r7
 8010f40:	fb96 f6f2 	sdiv	r6, r6, r2
 8010f44:	fb97 f7f2 	sdiv	r7, r7, r2
 8010f48:	f7ff ffa7 	bl	8010e9a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010f4c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010f50:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010f54:	9901      	ldr	r1, [sp, #4]
 8010f56:	4293      	cmp	r3, r2
 8010f58:	fa1f fe87 	uxth.w	lr, r7
 8010f5c:	fa1f fc86 	uxth.w	ip, r6
 8010f60:	eba1 0a0a 	sub.w	sl, r1, sl
 8010f64:	b280      	uxth	r0, r0
 8010f66:	da54      	bge.n	8011012 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010f68:	ebac 0100 	sub.w	r1, ip, r0
 8010f6c:	b289      	uxth	r1, r1
 8010f6e:	4460      	add	r0, ip
 8010f70:	f1ba 0f00 	cmp.w	sl, #0
 8010f74:	b20e      	sxth	r6, r1
 8010f76:	b280      	uxth	r0, r0
 8010f78:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010f7c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010f80:	da29      	bge.n	8010fd6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010f82:	eba8 0505 	sub.w	r5, r8, r5
 8010f86:	2d00      	cmp	r5, #0
 8010f88:	da2a      	bge.n	8010fe0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010f8a:	fa1f f88a 	uxth.w	r8, sl
 8010f8e:	eba0 0008 	sub.w	r0, r0, r8
 8010f92:	fa1f f58c 	uxth.w	r5, ip
 8010f96:	4443      	add	r3, r8
 8010f98:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010f9c:	1a59      	subs	r1, r3, r1
 8010f9e:	ebae 0005 	sub.w	r0, lr, r5
 8010fa2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010fa6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010faa:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010fae:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010fb2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010fb6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010fba:	442a      	add	r2, r5
 8010fbc:	eba2 0e0e 	sub.w	lr, r2, lr
 8010fc0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010fc4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010fc8:	a904      	add	r1, sp, #16
 8010fca:	4620      	mov	r0, r4
 8010fcc:	4798      	blx	r3
 8010fce:	6823      	ldr	r3, [r4, #0]
 8010fd0:	4649      	mov	r1, r9
 8010fd2:	691b      	ldr	r3, [r3, #16]
 8010fd4:	e79a      	b.n	8010f0c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010fd6:	d003      	beq.n	8010fe0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010fd8:	eba8 0505 	sub.w	r5, r8, r5
 8010fdc:	2d00      	cmp	r5, #0
 8010fde:	dcd4      	bgt.n	8010f8a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010fe0:	fa1f f88a 	uxth.w	r8, sl
 8010fe4:	4443      	add	r3, r8
 8010fe6:	fa1f f58c 	uxth.w	r5, ip
 8010fea:	1a59      	subs	r1, r3, r1
 8010fec:	eba0 0008 	sub.w	r0, r0, r8
 8010ff0:	ebae 0305 	sub.w	r3, lr, r5
 8010ff4:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010ff8:	f8ad c012 	strh.w	ip, [sp, #18]
 8010ffc:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011000:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011004:	f8ad a018 	strh.w	sl, [sp, #24]
 8011008:	f8ad 701a 	strh.w	r7, [sp, #26]
 801100c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011010:	e7d3      	b.n	8010fba <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011012:	ebae 0100 	sub.w	r1, lr, r0
 8011016:	b289      	uxth	r1, r1
 8011018:	4470      	add	r0, lr
 801101a:	f1ba 0f00 	cmp.w	sl, #0
 801101e:	b20f      	sxth	r7, r1
 8011020:	b280      	uxth	r0, r0
 8011022:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011026:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801102a:	da20      	bge.n	801106e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801102c:	eba8 0505 	sub.w	r5, r8, r5
 8011030:	2d00      	cmp	r5, #0
 8011032:	da21      	bge.n	8011078 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011034:	fa1f f88e 	uxth.w	r8, lr
 8011038:	fa1f f58a 	uxth.w	r5, sl
 801103c:	4443      	add	r3, r8
 801103e:	442a      	add	r2, r5
 8011040:	f8ad e010 	strh.w	lr, [sp, #16]
 8011044:	1b40      	subs	r0, r0, r5
 8011046:	ebac 0e08 	sub.w	lr, ip, r8
 801104a:	1a51      	subs	r1, r2, r1
 801104c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011050:	f8ad a012 	strh.w	sl, [sp, #18]
 8011054:	f8ad e014 	strh.w	lr, [sp, #20]
 8011058:	f8ad 0016 	strh.w	r0, [sp, #22]
 801105c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011060:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011064:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011068:	f8ad 101e 	strh.w	r1, [sp, #30]
 801106c:	e7aa      	b.n	8010fc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801106e:	d003      	beq.n	8011078 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011070:	eba8 0505 	sub.w	r5, r8, r5
 8011074:	2d00      	cmp	r5, #0
 8011076:	dcdd      	bgt.n	8011034 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011078:	fa1f f58e 	uxth.w	r5, lr
 801107c:	fa1f f88a 	uxth.w	r8, sl
 8011080:	4442      	add	r2, r8
 8011082:	442b      	add	r3, r5
 8011084:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011088:	1a51      	subs	r1, r2, r1
 801108a:	ebac 0705 	sub.w	r7, ip, r5
 801108e:	eba0 0008 	sub.w	r0, r0, r8
 8011092:	eba3 0c0c 	sub.w	ip, r3, ip
 8011096:	f8ad e010 	strh.w	lr, [sp, #16]
 801109a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801109e:	f8ad 1016 	strh.w	r1, [sp, #22]
 80110a2:	f8ad 6018 	strh.w	r6, [sp, #24]
 80110a6:	f8ad a01a 	strh.w	sl, [sp, #26]
 80110aa:	f8ad c01c 	strh.w	ip, [sp, #28]
 80110ae:	f8ad 001e 	strh.w	r0, [sp, #30]
 80110b2:	e787      	b.n	8010fc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080110b4 <_ZN8touchgfx7CWRUtil4sineEi>:
 80110b4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80110b8:	fb90 f2f3 	sdiv	r2, r0, r3
 80110bc:	fb02 0013 	mls	r0, r2, r3, r0
 80110c0:	2800      	cmp	r0, #0
 80110c2:	bfb8      	it	lt
 80110c4:	18c0      	addlt	r0, r0, r3
 80110c6:	285a      	cmp	r0, #90	; 0x5a
 80110c8:	4b09      	ldr	r3, [pc, #36]	; (80110f0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80110ca:	dc02      	bgt.n	80110d2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80110cc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80110d0:	4770      	bx	lr
 80110d2:	28b4      	cmp	r0, #180	; 0xb4
 80110d4:	dc02      	bgt.n	80110dc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80110d6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80110da:	e7f7      	b.n	80110cc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80110dc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80110e0:	bfd4      	ite	le
 80110e2:	38b4      	suble	r0, #180	; 0xb4
 80110e4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80110e8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80110ec:	4240      	negs	r0, r0
 80110ee:	4770      	bx	lr
 80110f0:	0802c8bc 	.word	0x0802c8bc

080110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80110f4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80110f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80110fa:	fb90 f2f3 	sdiv	r2, r0, r3
 80110fe:	fb02 0013 	mls	r0, r2, r3, r0
 8011102:	2800      	cmp	r0, #0
 8011104:	bfb8      	it	lt
 8011106:	18c0      	addlt	r0, r0, r3
 8011108:	1144      	asrs	r4, r0, #5
 801110a:	f000 061f 	and.w	r6, r0, #31
 801110e:	4620      	mov	r0, r4
 8011110:	f7ff ffd0 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011114:	4605      	mov	r5, r0
 8011116:	b90e      	cbnz	r6, 801111c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011118:	b002      	add	sp, #8
 801111a:	bd70      	pop	{r4, r5, r6, pc}
 801111c:	1c60      	adds	r0, r4, #1
 801111e:	f7ff ffc9 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011122:	ab01      	add	r3, sp, #4
 8011124:	2220      	movs	r2, #32
 8011126:	4631      	mov	r1, r6
 8011128:	1b40      	subs	r0, r0, r5
 801112a:	f005 f967 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 801112e:	4428      	add	r0, r5
 8011130:	e7f2      	b.n	8011118 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011132 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011132:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011136:	bf2c      	ite	cs
 8011138:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801113c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011140:	2300      	movs	r3, #0
 8011142:	1899      	adds	r1, r3, r2
 8011144:	4288      	cmp	r0, r1
 8011146:	bf24      	itt	cs
 8011148:	1853      	addcs	r3, r2, r1
 801114a:	1a40      	subcs	r0, r0, r1
 801114c:	0892      	lsrs	r2, r2, #2
 801114e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011152:	d1f6      	bne.n	8011142 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011154:	4618      	mov	r0, r3
 8011156:	4770      	bx	lr

08011158 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011158:	b510      	push	{r4, lr}
 801115a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801115e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011162:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011166:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801116a:	13a4      	asrs	r4, r4, #14
 801116c:	139b      	asrs	r3, r3, #14
 801116e:	429c      	cmp	r4, r3
 8011170:	bfb8      	it	lt
 8011172:	461c      	movlt	r4, r3
 8011174:	2c01      	cmp	r4, #1
 8011176:	dd07      	ble.n	8011188 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011178:	fb91 f1f4 	sdiv	r1, r1, r4
 801117c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011180:	f7ff ffea 	bl	8011158 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011184:	4360      	muls	r0, r4
 8011186:	bd10      	pop	{r4, pc}
 8011188:	4340      	muls	r0, r0
 801118a:	fb01 0001 	mla	r0, r1, r1, r0
 801118e:	f7ff ffd0 	bl	8011132 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011192:	e7f8      	b.n	8011186 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011194 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011194:	2800      	cmp	r0, #0
 8011196:	b508      	push	{r3, lr}
 8011198:	da05      	bge.n	80111a6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801119a:	4240      	negs	r0, r0
 801119c:	f7ff fffa 	bl	8011194 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80111a0:	4240      	negs	r0, r0
 80111a2:	b240      	sxtb	r0, r0
 80111a4:	bd08      	pop	{r3, pc}
 80111a6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80111aa:	dc11      	bgt.n	80111d0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80111ac:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80111b0:	dd09      	ble.n	80111c6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80111b2:	4340      	muls	r0, r0
 80111b4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80111b8:	f7ff ffbb 	bl	8011132 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80111bc:	f7ff ffea 	bl	8011194 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80111c0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80111c4:	e7ed      	b.n	80111a2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80111c6:	3003      	adds	r0, #3
 80111c8:	10c0      	asrs	r0, r0, #3
 80111ca:	4b02      	ldr	r3, [pc, #8]	; (80111d4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80111cc:	5618      	ldrsb	r0, [r3, r0]
 80111ce:	e7e9      	b.n	80111a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80111d0:	2000      	movs	r0, #0
 80111d2:	e7e7      	b.n	80111a4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80111d4:	0802c860 	.word	0x0802c860

080111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80111d8:	4281      	cmp	r1, r0
 80111da:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80111dc:	460c      	mov	r4, r1
 80111de:	4615      	mov	r5, r2
 80111e0:	dd07      	ble.n	80111f2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80111e2:	4601      	mov	r1, r0
 80111e4:	4620      	mov	r0, r4
 80111e6:	f7ff fff7 	bl	80111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80111ea:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80111ee:	b003      	add	sp, #12
 80111f0:	bd30      	pop	{r4, r5, pc}
 80111f2:	f7ff ffb1 	bl	8011158 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80111f6:	6028      	str	r0, [r5, #0]
 80111f8:	2800      	cmp	r0, #0
 80111fa:	d0f8      	beq.n	80111ee <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80111fc:	4602      	mov	r2, r0
 80111fe:	ab01      	add	r3, sp, #4
 8011200:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011204:	4620      	mov	r0, r4
 8011206:	f005 f8f9 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 801120a:	f7ff ffc3 	bl	8011194 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801120e:	e7ee      	b.n	80111ee <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011210 <_ZN8touchgfx4LineC1Ev>:
 8011210:	b510      	push	{r4, lr}
 8011212:	4604      	mov	r4, r0
 8011214:	f7ff fe0a 	bl	8010e2c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011218:	4b0c      	ldr	r3, [pc, #48]	; (801124c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801121a:	6023      	str	r3, [r4, #0]
 801121c:	2220      	movs	r2, #32
 801121e:	2300      	movs	r3, #0
 8011220:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011222:	2212      	movs	r2, #18
 8011224:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011228:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801122c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011230:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011234:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011238:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801123c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011240:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011244:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011246:	60a3      	str	r3, [r4, #8]
 8011248:	4620      	mov	r0, r4
 801124a:	bd10      	pop	{r4, pc}
 801124c:	0802c97c 	.word	0x0802c97c

08011250 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011250:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011254:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011256:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011258:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801125a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801125c:	1aff      	subs	r7, r7, r3
 801125e:	4604      	mov	r4, r0
 8011260:	eba5 0502 	sub.w	r5, r5, r2
 8011264:	d142      	bne.n	80112ec <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011266:	b955      	cbnz	r5, 801127e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011268:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801126c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011270:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011274:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011278:	b002      	add	sp, #8
 801127a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801127e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011282:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011286:	4629      	mov	r1, r5
 8011288:	4642      	mov	r2, r8
 801128a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801128c:	f005 f8d5 	bl	801643a <_ZN8touchgfx6muldivElll>
 8011290:	2502      	movs	r5, #2
 8011292:	4642      	mov	r2, r8
 8011294:	fb90 f6f5 	sdiv	r6, r0, r5
 8011298:	4639      	mov	r1, r7
 801129a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801129c:	f005 f8cd 	bl	801643a <_ZN8touchgfx6muldivElll>
 80112a0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80112a4:	fb90 f5f5 	sdiv	r5, r0, r5
 80112a8:	f1b9 0f00 	cmp.w	r9, #0
 80112ac:	d067      	beq.n	801137e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80112ae:	f1b9 0f02 	cmp.w	r9, #2
 80112b2:	d878      	bhi.n	80113a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80112b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80112b6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80112b8:	1b93      	subs	r3, r2, r6
 80112ba:	1b5b      	subs	r3, r3, r5
 80112bc:	6463      	str	r3, [r4, #68]	; 0x44
 80112be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80112c0:	18e9      	adds	r1, r5, r3
 80112c2:	1b89      	subs	r1, r1, r6
 80112c4:	6561      	str	r1, [r4, #84]	; 0x54
 80112c6:	1b81      	subs	r1, r0, r6
 80112c8:	4429      	add	r1, r5
 80112ca:	64a1      	str	r1, [r4, #72]	; 0x48
 80112cc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80112ce:	4430      	add	r0, r6
 80112d0:	186f      	adds	r7, r5, r1
 80112d2:	4432      	add	r2, r6
 80112d4:	1b49      	subs	r1, r1, r5
 80112d6:	4437      	add	r7, r6
 80112d8:	4428      	add	r0, r5
 80112da:	4431      	add	r1, r6
 80112dc:	1b52      	subs	r2, r2, r5
 80112de:	1b5b      	subs	r3, r3, r5
 80112e0:	65a7      	str	r7, [r4, #88]	; 0x58
 80112e2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80112e4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80112e6:	6522      	str	r2, [r4, #80]	; 0x50
 80112e8:	1b9b      	subs	r3, r3, r6
 80112ea:	e05b      	b.n	80113a4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80112ec:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80112f0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80112f4:	2d00      	cmp	r5, #0
 80112f6:	d0c6      	beq.n	8011286 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80112f8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80112fc:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011300:	fb93 f2f8 	sdiv	r2, r3, r8
 8011304:	fb08 3312 	mls	r3, r8, r2, r3
 8011308:	b353      	cbz	r3, 8011360 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801130a:	fb98 f2f3 	sdiv	r2, r8, r3
 801130e:	fb03 8812 	mls	r8, r3, r2, r8
 8011312:	f1b8 0f00 	cmp.w	r8, #0
 8011316:	d1f3      	bne.n	8011300 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011318:	2b01      	cmp	r3, #1
 801131a:	bf1c      	itt	ne
 801131c:	fb95 f5f3 	sdivne	r5, r5, r3
 8011320:	fb97 f7f3 	sdivne	r7, r7, r3
 8011324:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011328:	f24b 5104 	movw	r1, #46340	; 0xb504
 801132c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011330:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011334:	428b      	cmp	r3, r1
 8011336:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801133a:	4608      	mov	r0, r1
 801133c:	dd01      	ble.n	8011342 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801133e:	428a      	cmp	r2, r1
 8011340:	dc10      	bgt.n	8011364 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011342:	fb90 f3f3 	sdiv	r3, r0, r3
 8011346:	fb90 f2f2 	sdiv	r2, r0, r2
 801134a:	4293      	cmp	r3, r2
 801134c:	bfa8      	it	ge
 801134e:	4613      	movge	r3, r2
 8011350:	435f      	muls	r7, r3
 8011352:	435d      	muls	r5, r3
 8011354:	4629      	mov	r1, r5
 8011356:	4638      	mov	r0, r7
 8011358:	f7ff fefe 	bl	8011158 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801135c:	4680      	mov	r8, r0
 801135e:	e792      	b.n	8011286 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011360:	4643      	mov	r3, r8
 8011362:	e7d9      	b.n	8011318 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011364:	fb93 f3f1 	sdiv	r3, r3, r1
 8011368:	fb92 f2f1 	sdiv	r2, r2, r1
 801136c:	4293      	cmp	r3, r2
 801136e:	bfcc      	ite	gt
 8011370:	3301      	addgt	r3, #1
 8011372:	1c53      	addle	r3, r2, #1
 8011374:	fb97 f7f3 	sdiv	r7, r7, r3
 8011378:	fb95 f5f3 	sdiv	r5, r5, r3
 801137c:	e7ea      	b.n	8011354 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801137e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011380:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011382:	1b93      	subs	r3, r2, r6
 8011384:	6463      	str	r3, [r4, #68]	; 0x44
 8011386:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011388:	18e9      	adds	r1, r5, r3
 801138a:	6561      	str	r1, [r4, #84]	; 0x54
 801138c:	1b81      	subs	r1, r0, r6
 801138e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011390:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011392:	4430      	add	r0, r6
 8011394:	186f      	adds	r7, r5, r1
 8011396:	4432      	add	r2, r6
 8011398:	1b49      	subs	r1, r1, r5
 801139a:	65a7      	str	r7, [r4, #88]	; 0x58
 801139c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801139e:	65e1      	str	r1, [r4, #92]	; 0x5c
 80113a0:	6522      	str	r2, [r4, #80]	; 0x50
 80113a2:	1b5b      	subs	r3, r3, r5
 80113a4:	6623      	str	r3, [r4, #96]	; 0x60
 80113a6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80113a8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80113aa:	9200      	str	r2, [sp, #0]
 80113ac:	9301      	str	r3, [sp, #4]
 80113ae:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80113b2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80113b6:	680f      	ldr	r7, [r1, #0]
 80113b8:	9800      	ldr	r0, [sp, #0]
 80113ba:	42ba      	cmp	r2, r7
 80113bc:	bfa8      	it	ge
 80113be:	463a      	movge	r2, r7
 80113c0:	4287      	cmp	r7, r0
 80113c2:	bfc8      	it	gt
 80113c4:	9700      	strgt	r7, [sp, #0]
 80113c6:	690f      	ldr	r7, [r1, #16]
 80113c8:	9801      	ldr	r0, [sp, #4]
 80113ca:	42bb      	cmp	r3, r7
 80113cc:	bfa8      	it	ge
 80113ce:	463b      	movge	r3, r7
 80113d0:	3104      	adds	r1, #4
 80113d2:	4287      	cmp	r7, r0
 80113d4:	bfc8      	it	gt
 80113d6:	9701      	strgt	r7, [sp, #4]
 80113d8:	458c      	cmp	ip, r1
 80113da:	d1ec      	bne.n	80113b6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80113dc:	4668      	mov	r0, sp
 80113de:	2720      	movs	r7, #32
 80113e0:	fb92 f8f7 	sdiv	r8, r2, r7
 80113e4:	fb93 f7f7 	sdiv	r7, r3, r7
 80113e8:	f7ff fd57 	bl	8010e9a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80113ec:	4682      	mov	sl, r0
 80113ee:	a801      	add	r0, sp, #4
 80113f0:	f7ff fd53 	bl	8010e9a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80113f4:	ebaa 0208 	sub.w	r2, sl, r8
 80113f8:	1bc0      	subs	r0, r0, r7
 80113fa:	f1b9 0f01 	cmp.w	r9, #1
 80113fe:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011402:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011406:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801140a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801140e:	f47f af33 	bne.w	8011278 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011412:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011414:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011416:	1b83      	subs	r3, r0, r6
 8011418:	6463      	str	r3, [r4, #68]	; 0x44
 801141a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801141c:	18ea      	adds	r2, r5, r3
 801141e:	6562      	str	r2, [r4, #84]	; 0x54
 8011420:	1b8a      	subs	r2, r1, r6
 8011422:	64a2      	str	r2, [r4, #72]	; 0x48
 8011424:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011426:	4431      	add	r1, r6
 8011428:	18af      	adds	r7, r5, r2
 801142a:	4406      	add	r6, r0
 801142c:	1b52      	subs	r2, r2, r5
 801142e:	1b5d      	subs	r5, r3, r5
 8011430:	65a7      	str	r7, [r4, #88]	; 0x58
 8011432:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011434:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011436:	6526      	str	r6, [r4, #80]	; 0x50
 8011438:	6625      	str	r5, [r4, #96]	; 0x60
 801143a:	e71d      	b.n	8011278 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801143c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801143c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801143e:	428b      	cmp	r3, r1
 8011440:	d102      	bne.n	8011448 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011442:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011444:	4293      	cmp	r3, r2
 8011446:	d003      	beq.n	8011450 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011448:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801144c:	f7ff bf00 	b.w	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011450:	4770      	bx	lr

08011452 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011452:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011454:	428b      	cmp	r3, r1
 8011456:	d102      	bne.n	801145e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011458:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801145a:	4293      	cmp	r3, r2
 801145c:	d003      	beq.n	8011466 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801145e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011462:	f7ff bef5 	b.w	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011466:	4770      	bx	lr

08011468 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011468:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801146c:	f7ff bef0 	b.w	8011250 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011470 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011470:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011474:	b0a0      	sub	sp, #128	; 0x80
 8011476:	4604      	mov	r4, r0
 8011478:	460a      	mov	r2, r1
 801147a:	4601      	mov	r1, r0
 801147c:	a804      	add	r0, sp, #16
 801147e:	f014 fc47 	bl	8025d10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011482:	2300      	movs	r3, #0
 8011484:	9301      	str	r3, [sp, #4]
 8011486:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801148a:	2b01      	cmp	r3, #1
 801148c:	d17c      	bne.n	8011588 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801148e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011490:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011492:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011494:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011496:	1ac0      	subs	r0, r0, r3
 8011498:	eba1 0102 	sub.w	r1, r1, r2
 801149c:	d437      	bmi.n	801150e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801149e:	2900      	cmp	r1, #0
 80114a0:	aa01      	add	r2, sp, #4
 80114a2:	db2e      	blt.n	8011502 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80114a4:	f7ff fe98 	bl	80111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80114a8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80114ac:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80114ae:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80114b0:	a804      	add	r0, sp, #16
 80114b2:	f014 fdad 	bl	8026010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80114b6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80114b8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80114ba:	a804      	add	r0, sp, #16
 80114bc:	f014 fdf5 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80114c0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80114c2:	2db3      	cmp	r5, #179	; 0xb3
 80114c4:	dc33      	bgt.n	801152e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80114c6:	eba6 0805 	sub.w	r8, r6, r5
 80114ca:	4640      	mov	r0, r8
 80114cc:	f7ff fdf2 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 80114d0:	a902      	add	r1, sp, #8
 80114d2:	9002      	str	r0, [sp, #8]
 80114d4:	a801      	add	r0, sp, #4
 80114d6:	f7ff fcd5 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80114da:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80114dc:	1847      	adds	r7, r0, r1
 80114de:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80114e2:	f7ff fde7 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 80114e6:	a903      	add	r1, sp, #12
 80114e8:	9003      	str	r0, [sp, #12]
 80114ea:	a801      	add	r0, sp, #4
 80114ec:	f7ff fcca 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80114f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80114f2:	4639      	mov	r1, r7
 80114f4:	1a12      	subs	r2, r2, r0
 80114f6:	a804      	add	r0, sp, #16
 80114f8:	f014 fdd7 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80114fc:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80114fe:	441d      	add	r5, r3
 8011500:	e7df      	b.n	80114c2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011502:	4249      	negs	r1, r1
 8011504:	f7ff fe68 	bl	80111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011508:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801150c:	e7ce      	b.n	80114ac <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801150e:	2900      	cmp	r1, #0
 8011510:	f1c0 0000 	rsb	r0, r0, #0
 8011514:	aa01      	add	r2, sp, #4
 8011516:	db04      	blt.n	8011522 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011518:	f7ff fe5e 	bl	80111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801151c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011520:	e7c4      	b.n	80114ac <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011522:	4249      	negs	r1, r1
 8011524:	f7ff fe58 	bl	80111d8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011528:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801152c:	e7be      	b.n	80114ac <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801152e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011530:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011532:	a804      	add	r0, sp, #16
 8011534:	f014 fdb9 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011538:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801153a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801153c:	a804      	add	r0, sp, #16
 801153e:	f014 fdb4 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011542:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011544:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011548:	2d00      	cmp	r5, #0
 801154a:	dd31      	ble.n	80115b0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801154c:	eb05 0806 	add.w	r8, r5, r6
 8011550:	4640      	mov	r0, r8
 8011552:	f7ff fdaf 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011556:	a902      	add	r1, sp, #8
 8011558:	9002      	str	r0, [sp, #8]
 801155a:	a801      	add	r0, sp, #4
 801155c:	f7ff fc92 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011560:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011562:	1847      	adds	r7, r0, r1
 8011564:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011568:	f7ff fda4 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 801156c:	a903      	add	r1, sp, #12
 801156e:	9003      	str	r0, [sp, #12]
 8011570:	a801      	add	r0, sp, #4
 8011572:	f7ff fc87 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011576:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011578:	4639      	mov	r1, r7
 801157a:	1a12      	subs	r2, r2, r0
 801157c:	a804      	add	r0, sp, #16
 801157e:	f014 fd94 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011582:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011584:	1aed      	subs	r5, r5, r3
 8011586:	e7df      	b.n	8011548 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011588:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801158a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801158c:	a804      	add	r0, sp, #16
 801158e:	f014 fd3f 	bl	8026010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011592:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011594:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011596:	a804      	add	r0, sp, #16
 8011598:	f014 fd87 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801159c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801159e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80115a0:	a804      	add	r0, sp, #16
 80115a2:	f014 fd82 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115a6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80115a8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80115aa:	a804      	add	r0, sp, #16
 80115ac:	f014 fd7d 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80115b0:	21ff      	movs	r1, #255	; 0xff
 80115b2:	a804      	add	r0, sp, #16
 80115b4:	f014 fc68 	bl	8025e88 <_ZN8touchgfx6Canvas6renderEh>
 80115b8:	4b04      	ldr	r3, [pc, #16]	; (80115cc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80115ba:	9304      	str	r3, [sp, #16]
 80115bc:	4604      	mov	r4, r0
 80115be:	a80c      	add	r0, sp, #48	; 0x30
 80115c0:	f001 f8cc 	bl	801275c <_ZN8touchgfx7OutlineD1Ev>
 80115c4:	4620      	mov	r0, r4
 80115c6:	b020      	add	sp, #128	; 0x80
 80115c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115cc:	0802d1a4 	.word	0x0802d1a4

080115d0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80115d0:	2000      	movs	r0, #0
 80115d2:	4770      	bx	lr

080115d4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80115d4:	4b07      	ldr	r3, [pc, #28]	; (80115f4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80115d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80115d8:	881b      	ldrh	r3, [r3, #0]
 80115da:	4293      	cmp	r3, r2
 80115dc:	bf81      	itttt	hi
 80115de:	4b06      	ldrhi	r3, [pc, #24]	; (80115f8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80115e0:	681b      	ldrhi	r3, [r3, #0]
 80115e2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80115e6:	7858      	ldrbhi	r0, [r3, #1]
 80115e8:	bf8c      	ite	hi
 80115ea:	f000 0003 	andhi.w	r0, r0, #3
 80115ee:	2000      	movls	r0, #0
 80115f0:	4770      	bx	lr
 80115f2:	bf00      	nop
 80115f4:	20013828 	.word	0x20013828
 80115f8:	20013824 	.word	0x20013824

080115fc <_ZN8touchgfx8TextAreaD1Ev>:
 80115fc:	4770      	bx	lr
	...

08011600 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011604:	4b10      	ldr	r3, [pc, #64]	; (8011648 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011606:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011608:	881b      	ldrh	r3, [r3, #0]
 801160a:	428b      	cmp	r3, r1
 801160c:	4604      	mov	r4, r0
 801160e:	d918      	bls.n	8011642 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011610:	6803      	ldr	r3, [r0, #0]
 8011612:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011614:	4b0d      	ldr	r3, [pc, #52]	; (801164c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011616:	6818      	ldr	r0, [r3, #0]
 8011618:	f7f6 fc44 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 801161c:	6823      	ldr	r3, [r4, #0]
 801161e:	4606      	mov	r6, r0
 8011620:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011622:	4620      	mov	r0, r4
 8011624:	4798      	blx	r3
 8011626:	6823      	ldr	r3, [r4, #0]
 8011628:	4607      	mov	r7, r0
 801162a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801162e:	4620      	mov	r0, r4
 8011630:	4798      	blx	r3
 8011632:	463a      	mov	r2, r7
 8011634:	4603      	mov	r3, r0
 8011636:	4631      	mov	r1, r6
 8011638:	4620      	mov	r0, r4
 801163a:	46ac      	mov	ip, r5
 801163c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011640:	4760      	bx	ip
 8011642:	2000      	movs	r0, #0
 8011644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011648:	20013828 	.word	0x20013828
 801164c:	20013830 	.word	0x20013830

08011650 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011650:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011654:	4b17      	ldr	r3, [pc, #92]	; (80116b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011656:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011658:	881b      	ldrh	r3, [r3, #0]
 801165a:	428b      	cmp	r3, r1
 801165c:	4604      	mov	r4, r0
 801165e:	d926      	bls.n	80116ae <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011660:	4b15      	ldr	r3, [pc, #84]	; (80116b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011662:	681b      	ldr	r3, [r3, #0]
 8011664:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011668:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801166c:	4b13      	ldr	r3, [pc, #76]	; (80116bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801166e:	7855      	ldrb	r5, [r2, #1]
 8011670:	681b      	ldr	r3, [r3, #0]
 8011672:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011676:	6833      	ldr	r3, [r6, #0]
 8011678:	69df      	ldr	r7, [r3, #28]
 801167a:	4b11      	ldr	r3, [pc, #68]	; (80116c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801167c:	6818      	ldr	r0, [r3, #0]
 801167e:	f7f6 fc11 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8011682:	6823      	ldr	r3, [r4, #0]
 8011684:	4680      	mov	r8, r0
 8011686:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011688:	4620      	mov	r0, r4
 801168a:	4798      	blx	r3
 801168c:	6823      	ldr	r3, [r4, #0]
 801168e:	4681      	mov	r9, r0
 8011690:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011694:	4620      	mov	r0, r4
 8011696:	4798      	blx	r3
 8011698:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801169c:	9000      	str	r0, [sp, #0]
 801169e:	464b      	mov	r3, r9
 80116a0:	4642      	mov	r2, r8
 80116a2:	4629      	mov	r1, r5
 80116a4:	4630      	mov	r0, r6
 80116a6:	47b8      	blx	r7
 80116a8:	b003      	add	sp, #12
 80116aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80116ae:	2000      	movs	r0, #0
 80116b0:	e7fa      	b.n	80116a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80116b2:	bf00      	nop
 80116b4:	20013828 	.word	0x20013828
 80116b8:	20013824 	.word	0x20013824
 80116bc:	2001382c 	.word	0x2001382c
 80116c0:	20013830 	.word	0x20013830

080116c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80116c4:	b40e      	push	{r1, r2, r3}
 80116c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80116ca:	4b2f      	ldr	r3, [pc, #188]	; (8011788 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80116cc:	881a      	ldrh	r2, [r3, #0]
 80116ce:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80116d0:	429a      	cmp	r2, r3
 80116d2:	b09d      	sub	sp, #116	; 0x74
 80116d4:	4604      	mov	r4, r0
 80116d6:	d954      	bls.n	8011782 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80116d8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801178c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80116dc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011790 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80116e0:	aa26      	add	r2, sp, #152	; 0x98
 80116e2:	9202      	str	r2, [sp, #8]
 80116e4:	f8d9 2000 	ldr.w	r2, [r9]
 80116e8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80116ec:	f8d8 3000 	ldr.w	r3, [r8]
 80116f0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80116f4:	682b      	ldr	r3, [r5, #0]
 80116f6:	4628      	mov	r0, r5
 80116f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80116fa:	4798      	blx	r3
 80116fc:	b207      	sxth	r7, r0
 80116fe:	4606      	mov	r6, r0
 8011700:	a803      	add	r0, sp, #12
 8011702:	f005 fa57 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8011706:	682b      	ldr	r3, [r5, #0]
 8011708:	4628      	mov	r0, r5
 801170a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801170c:	4798      	blx	r3
 801170e:	682b      	ldr	r3, [r5, #0]
 8011710:	4682      	mov	sl, r0
 8011712:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011714:	4628      	mov	r0, r5
 8011716:	4798      	blx	r3
 8011718:	4653      	mov	r3, sl
 801171a:	9000      	str	r0, [sp, #0]
 801171c:	9a02      	ldr	r2, [sp, #8]
 801171e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011720:	a803      	add	r0, sp, #12
 8011722:	f005 faa2 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011726:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011728:	f8d9 3000 	ldr.w	r3, [r9]
 801172c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011730:	8925      	ldrh	r5, [r4, #8]
 8011732:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011736:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801173a:	eba5 050c 	sub.w	r5, r5, ip
 801173e:	784a      	ldrb	r2, [r1, #1]
 8011740:	f8d8 3000 	ldr.w	r3, [r8]
 8011744:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011748:	b22d      	sxth	r5, r5
 801174a:	9500      	str	r5, [sp, #0]
 801174c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011750:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011754:	a803      	add	r0, sp, #12
 8011756:	f002 feed 	bl	8014534 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801175a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801175e:	18b9      	adds	r1, r7, r2
 8011760:	2900      	cmp	r1, #0
 8011762:	b203      	sxth	r3, r0
 8011764:	dd0b      	ble.n	801177e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011766:	3b01      	subs	r3, #1
 8011768:	fb13 f302 	smulbb	r3, r3, r2
 801176c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011770:	b21f      	sxth	r7, r3
 8011772:	4638      	mov	r0, r7
 8011774:	b01d      	add	sp, #116	; 0x74
 8011776:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801177a:	b003      	add	sp, #12
 801177c:	4770      	bx	lr
 801177e:	2b00      	cmp	r3, #0
 8011780:	dcf7      	bgt.n	8011772 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011782:	2700      	movs	r7, #0
 8011784:	e7f5      	b.n	8011772 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011786:	bf00      	nop
 8011788:	20013828 	.word	0x20013828
 801178c:	20013824 	.word	0x20013824
 8011790:	2001382c 	.word	0x2001382c

08011794 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011798:	4bbc      	ldr	r3, [pc, #752]	; (8011a8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801179a:	460c      	mov	r4, r1
 801179c:	881b      	ldrh	r3, [r3, #0]
 801179e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80117a0:	428b      	cmp	r3, r1
 80117a2:	b0a9      	sub	sp, #164	; 0xa4
 80117a4:	4680      	mov	r8, r0
 80117a6:	d809      	bhi.n	80117bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80117a8:	2300      	movs	r3, #0
 80117aa:	f04f 32ff 	mov.w	r2, #4294967295
 80117ae:	e9c0 3200 	strd	r3, r2, [r0]
 80117b2:	6083      	str	r3, [r0, #8]
 80117b4:	4640      	mov	r0, r8
 80117b6:	b029      	add	sp, #164	; 0xa4
 80117b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117bc:	4eb4      	ldr	r6, [pc, #720]	; (8011a90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80117be:	6833      	ldr	r3, [r6, #0]
 80117c0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80117c4:	4bb3      	ldr	r3, [pc, #716]	; (8011a94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80117c6:	681b      	ldr	r3, [r3, #0]
 80117c8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80117cc:	4bb2      	ldr	r3, [pc, #712]	; (8011a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80117ce:	6818      	ldr	r0, [r3, #0]
 80117d0:	f7f6 fb68 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 80117d4:	682b      	ldr	r3, [r5, #0]
 80117d6:	4681      	mov	r9, r0
 80117d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117da:	4628      	mov	r0, r5
 80117dc:	4798      	blx	r3
 80117de:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80117e0:	b203      	sxth	r3, r0
 80117e2:	4407      	add	r7, r0
 80117e4:	9304      	str	r3, [sp, #16]
 80117e6:	b2bb      	uxth	r3, r7
 80117e8:	9303      	str	r3, [sp, #12]
 80117ea:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80117ee:	4682      	mov	sl, r0
 80117f0:	a80f      	add	r0, sp, #60	; 0x3c
 80117f2:	2b00      	cmp	r3, #0
 80117f4:	f040 80a6 	bne.w	8011944 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80117f8:	f005 f9dc 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 80117fc:	682b      	ldr	r3, [r5, #0]
 80117fe:	4628      	mov	r0, r5
 8011800:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011802:	4798      	blx	r3
 8011804:	682b      	ldr	r3, [r5, #0]
 8011806:	4606      	mov	r6, r0
 8011808:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801180a:	4628      	mov	r0, r5
 801180c:	4798      	blx	r3
 801180e:	6823      	ldr	r3, [r4, #0]
 8011810:	4607      	mov	r7, r0
 8011812:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011814:	4620      	mov	r0, r4
 8011816:	4798      	blx	r3
 8011818:	6823      	ldr	r3, [r4, #0]
 801181a:	4683      	mov	fp, r0
 801181c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011820:	4620      	mov	r0, r4
 8011822:	4798      	blx	r3
 8011824:	463b      	mov	r3, r7
 8011826:	e9cd b000 	strd	fp, r0, [sp]
 801182a:	4649      	mov	r1, r9
 801182c:	4632      	mov	r2, r6
 801182e:	a80f      	add	r0, sp, #60	; 0x3c
 8011830:	f005 fa30 	bl	8016c94 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011834:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011838:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011a90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801183c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011840:	f04f 0600 	mov.w	r6, #0
 8011844:	bf0c      	ite	eq
 8011846:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801184a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801184e:	4637      	mov	r7, r6
 8011850:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011852:	f8db 3000 	ldr.w	r3, [fp]
 8011856:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801185a:	4629      	mov	r1, r5
 801185c:	785b      	ldrb	r3, [r3, #1]
 801185e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011862:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011866:	a80f      	add	r0, sp, #60	; 0x3c
 8011868:	f002 fb7f 	bl	8013f6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801186c:	9b03      	ldr	r3, [sp, #12]
 801186e:	4286      	cmp	r6, r0
 8011870:	bfb8      	it	lt
 8011872:	4606      	movlt	r6, r0
 8011874:	3701      	adds	r7, #1
 8011876:	eba9 0903 	sub.w	r9, r9, r3
 801187a:	a80f      	add	r0, sp, #60	; 0x3c
 801187c:	b236      	sxth	r6, r6
 801187e:	b2bf      	uxth	r7, r7
 8011880:	fa0f f989 	sxth.w	r9, r9
 8011884:	f005 f9bd 	bl	8016c02 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011888:	b918      	cbnz	r0, 8011892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801188a:	7a2b      	ldrb	r3, [r5, #8]
 801188c:	444b      	add	r3, r9
 801188e:	2b00      	cmp	r3, #0
 8011890:	dcde      	bgt.n	8011850 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011892:	9b03      	ldr	r3, [sp, #12]
 8011894:	9a04      	ldr	r2, [sp, #16]
 8011896:	f895 9009 	ldrb.w	r9, [r5, #9]
 801189a:	fb13 f707 	smulbb	r7, r3, r7
 801189e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80118a0:	1aff      	subs	r7, r7, r3
 80118a2:	b2bf      	uxth	r7, r7
 80118a4:	b23b      	sxth	r3, r7
 80118a6:	429a      	cmp	r2, r3
 80118a8:	bfa8      	it	ge
 80118aa:	4657      	movge	r7, sl
 80118ac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80118b0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80118b4:	6823      	ldr	r3, [r4, #0]
 80118b6:	bf08      	it	eq
 80118b8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80118bc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80118be:	bf18      	it	ne
 80118c0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80118c4:	4620      	mov	r0, r4
 80118c6:	4798      	blx	r3
 80118c8:	444f      	add	r7, r9
 80118ca:	fa1f f987 	uxth.w	r9, r7
 80118ce:	2801      	cmp	r0, #1
 80118d0:	fa0f f789 	sxth.w	r7, r9
 80118d4:	b2b3      	uxth	r3, r6
 80118d6:	f000 80e1 	beq.w	8011a9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80118da:	2802      	cmp	r0, #2
 80118dc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80118e0:	f000 80e2 	beq.w	8011aa8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80118e4:	7aea      	ldrb	r2, [r5, #11]
 80118e6:	7b2d      	ldrb	r5, [r5, #12]
 80118e8:	b236      	sxth	r6, r6
 80118ea:	1ab6      	subs	r6, r6, r2
 80118ec:	442a      	add	r2, r5
 80118ee:	4413      	add	r3, r2
 80118f0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80118f4:	fa1f fa86 	uxth.w	sl, r6
 80118f8:	b29b      	uxth	r3, r3
 80118fa:	2a02      	cmp	r2, #2
 80118fc:	fa0f fb8a 	sxth.w	fp, sl
 8011900:	b21e      	sxth	r6, r3
 8011902:	f000 80d5 	beq.w	8011ab0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011906:	2a03      	cmp	r2, #3
 8011908:	f000 80dd 	beq.w	8011ac6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801190c:	2a01      	cmp	r2, #1
 801190e:	f040 80e5 	bne.w	8011adc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011912:	8925      	ldrh	r5, [r4, #8]
 8011914:	4633      	mov	r3, r6
 8011916:	eba5 0909 	sub.w	r9, r5, r9
 801191a:	463e      	mov	r6, r7
 801191c:	465d      	mov	r5, fp
 801191e:	461f      	mov	r7, r3
 8011920:	fa0f fb89 	sxth.w	fp, r9
 8011924:	4b5c      	ldr	r3, [pc, #368]	; (8011a98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011926:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011928:	6818      	ldr	r0, [r3, #0]
 801192a:	f7f6 fabb 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 801192e:	f8a8 b000 	strh.w	fp, [r8]
 8011932:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011936:	f8a8 6004 	strh.w	r6, [r8, #4]
 801193a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801193e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011942:	e737      	b.n	80117b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011944:	f005 f936 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8011948:	682b      	ldr	r3, [r5, #0]
 801194a:	4628      	mov	r0, r5
 801194c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801194e:	4798      	blx	r3
 8011950:	682b      	ldr	r3, [r5, #0]
 8011952:	4607      	mov	r7, r0
 8011954:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011956:	4628      	mov	r0, r5
 8011958:	4798      	blx	r3
 801195a:	6823      	ldr	r3, [r4, #0]
 801195c:	4683      	mov	fp, r0
 801195e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011960:	4620      	mov	r0, r4
 8011962:	4798      	blx	r3
 8011964:	6822      	ldr	r2, [r4, #0]
 8011966:	9005      	str	r0, [sp, #20]
 8011968:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801196c:	4620      	mov	r0, r4
 801196e:	4790      	blx	r2
 8011970:	9b05      	ldr	r3, [sp, #20]
 8011972:	9001      	str	r0, [sp, #4]
 8011974:	463a      	mov	r2, r7
 8011976:	4649      	mov	r1, r9
 8011978:	9300      	str	r3, [sp, #0]
 801197a:	a80f      	add	r0, sp, #60	; 0x3c
 801197c:	465b      	mov	r3, fp
 801197e:	f005 f989 	bl	8016c94 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011982:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011986:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801198a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801198c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011990:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011994:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011998:	bf0a      	itet	eq
 801199a:	464a      	moveq	r2, r9
 801199c:	461a      	movne	r2, r3
 801199e:	4699      	moveq	r9, r3
 80119a0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80119a4:	1ad2      	subs	r2, r2, r3
 80119a6:	6833      	ldr	r3, [r6, #0]
 80119a8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80119ac:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80119b0:	af0f      	add	r7, sp, #60	; 0x3c
 80119b2:	7859      	ldrb	r1, [r3, #1]
 80119b4:	9707      	str	r7, [sp, #28]
 80119b6:	2300      	movs	r3, #0
 80119b8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80119bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80119c0:	f88d 1020 	strb.w	r1, [sp, #32]
 80119c4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80119c8:	9509      	str	r5, [sp, #36]	; 0x24
 80119ca:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80119ce:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80119d2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80119d6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80119da:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80119de:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80119e2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80119e6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80119ea:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80119ee:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80119f2:	b350      	cbz	r0, 8011a4a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80119f4:	682b      	ldr	r3, [r5, #0]
 80119f6:	4628      	mov	r0, r5
 80119f8:	695b      	ldr	r3, [r3, #20]
 80119fa:	4798      	blx	r3
 80119fc:	4607      	mov	r7, r0
 80119fe:	b320      	cbz	r0, 8011a4a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011a02:	6803      	ldr	r3, [r0, #0]
 8011a04:	4639      	mov	r1, r7
 8011a06:	68db      	ldr	r3, [r3, #12]
 8011a08:	4798      	blx	r3
 8011a0a:	4606      	mov	r6, r0
 8011a0c:	b1e8      	cbz	r0, 8011a4a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a0e:	7b43      	ldrb	r3, [r0, #13]
 8011a10:	7a82      	ldrb	r2, [r0, #10]
 8011a12:	005b      	lsls	r3, r3, #1
 8011a14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011a18:	4313      	orrs	r3, r2
 8011a1a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011a1e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011a22:	2b06      	cmp	r3, #6
 8011a24:	d111      	bne.n	8011a4a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011a26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011a28:	6803      	ldr	r3, [r0, #0]
 8011a2a:	4632      	mov	r2, r6
 8011a2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a2e:	4639      	mov	r1, r7
 8011a30:	4798      	blx	r3
 8011a32:	7b73      	ldrb	r3, [r6, #13]
 8011a34:	005b      	lsls	r3, r3, #1
 8011a36:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011a3a:	7ab3      	ldrb	r3, [r6, #10]
 8011a3c:	4313      	orrs	r3, r2
 8011a3e:	4418      	add	r0, r3
 8011a40:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011a44:	4418      	add	r0, r3
 8011a46:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011a4a:	2600      	movs	r6, #0
 8011a4c:	4637      	mov	r7, r6
 8011a4e:	a806      	add	r0, sp, #24
 8011a50:	f002 fc6c 	bl	801432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011a54:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011a58:	9b03      	ldr	r3, [sp, #12]
 8011a5a:	4286      	cmp	r6, r0
 8011a5c:	eba9 0903 	sub.w	r9, r9, r3
 8011a60:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011a64:	bfb8      	it	lt
 8011a66:	4606      	movlt	r6, r0
 8011a68:	3701      	adds	r7, #1
 8011a6a:	b236      	sxth	r6, r6
 8011a6c:	b2bf      	uxth	r7, r7
 8011a6e:	fa0f f989 	sxth.w	r9, r9
 8011a72:	2b00      	cmp	r3, #0
 8011a74:	f43f af0d 	beq.w	8011892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011a78:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011a7c:	2b00      	cmp	r3, #0
 8011a7e:	f47f af08 	bne.w	8011892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011a82:	7a2b      	ldrb	r3, [r5, #8]
 8011a84:	444b      	add	r3, r9
 8011a86:	2b00      	cmp	r3, #0
 8011a88:	dce1      	bgt.n	8011a4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011a8a:	e702      	b.n	8011892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011a8c:	20013828 	.word	0x20013828
 8011a90:	20013824 	.word	0x20013824
 8011a94:	2001382c 	.word	0x2001382c
 8011a98:	20013830 	.word	0x20013830
 8011a9c:	ebaa 0606 	sub.w	r6, sl, r6
 8011aa0:	2002      	movs	r0, #2
 8011aa2:	fb96 f6f0 	sdiv	r6, r6, r0
 8011aa6:	e71d      	b.n	80118e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011aa8:	441e      	add	r6, r3
 8011aaa:	ebaa 0606 	sub.w	r6, sl, r6
 8011aae:	e719      	b.n	80118e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011ab0:	8925      	ldrh	r5, [r4, #8]
 8011ab2:	1aed      	subs	r5, r5, r3
 8011ab4:	eba5 050a 	sub.w	r5, r5, sl
 8011ab8:	fa0f fb85 	sxth.w	fp, r5
 8011abc:	8965      	ldrh	r5, [r4, #10]
 8011abe:	eba5 0509 	sub.w	r5, r5, r9
 8011ac2:	b22d      	sxth	r5, r5
 8011ac4:	e72e      	b.n	8011924 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011ac6:	8965      	ldrh	r5, [r4, #10]
 8011ac8:	1aed      	subs	r5, r5, r3
 8011aca:	eba5 050a 	sub.w	r5, r5, sl
 8011ace:	4633      	mov	r3, r6
 8011ad0:	b22d      	sxth	r5, r5
 8011ad2:	463e      	mov	r6, r7
 8011ad4:	f04f 0b00 	mov.w	fp, #0
 8011ad8:	461f      	mov	r7, r3
 8011ada:	e723      	b.n	8011924 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011adc:	2500      	movs	r5, #0
 8011ade:	e721      	b.n	8011924 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011ae0 <_ZN8touchgfx8TextAreaD0Ev>:
 8011ae0:	b510      	push	{r4, lr}
 8011ae2:	2148      	movs	r1, #72	; 0x48
 8011ae4:	4604      	mov	r4, r0
 8011ae6:	f015 ff32 	bl	802794e <_ZdlPvj>
 8011aea:	4620      	mov	r0, r4
 8011aec:	bd10      	pop	{r4, pc}
	...

08011af0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011af0:	b513      	push	{r0, r1, r4, lr}
 8011af2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011af6:	4604      	mov	r4, r0
 8011af8:	b1fb      	cbz	r3, 8011b3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011afa:	4b16      	ldr	r3, [pc, #88]	; (8011b54 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011afc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011afe:	881b      	ldrh	r3, [r3, #0]
 8011b00:	428b      	cmp	r3, r1
 8011b02:	d91a      	bls.n	8011b3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b04:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011b08:	2b00      	cmp	r3, #0
 8011b0a:	dd16      	ble.n	8011b3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b0c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011b10:	2b00      	cmp	r3, #0
 8011b12:	dd12      	ble.n	8011b3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b14:	4b10      	ldr	r3, [pc, #64]	; (8011b58 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011b16:	6818      	ldr	r0, [r3, #0]
 8011b18:	f7f6 f9c4 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8011b1c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011b20:	6822      	ldr	r2, [r4, #0]
 8011b22:	2b00      	cmp	r3, #0
 8011b24:	db06      	blt.n	8011b34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011b26:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011b2a:	2b00      	cmp	r3, #0
 8011b2c:	db02      	blt.n	8011b34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011b2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011b30:	4298      	cmp	r0, r3
 8011b32:	d004      	beq.n	8011b3e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011b34:	6953      	ldr	r3, [r2, #20]
 8011b36:	4620      	mov	r0, r4
 8011b38:	4798      	blx	r3
 8011b3a:	b002      	add	sp, #8
 8011b3c:	bd10      	pop	{r4, pc}
 8011b3e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011b42:	c903      	ldmia	r1, {r0, r1}
 8011b44:	466b      	mov	r3, sp
 8011b46:	e883 0003 	stmia.w	r3, {r0, r1}
 8011b4a:	6912      	ldr	r2, [r2, #16]
 8011b4c:	4619      	mov	r1, r3
 8011b4e:	4620      	mov	r0, r4
 8011b50:	4790      	blx	r2
 8011b52:	e7f2      	b.n	8011b3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011b54:	20013828 	.word	0x20013828
 8011b58:	20013830 	.word	0x20013830

08011b5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011b5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b60:	4b44      	ldr	r3, [pc, #272]	; (8011c74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011b62:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011b64:	881b      	ldrh	r3, [r3, #0]
 8011b66:	4293      	cmp	r3, r2
 8011b68:	b08e      	sub	sp, #56	; 0x38
 8011b6a:	4604      	mov	r4, r0
 8011b6c:	d97e      	bls.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011b6e:	6808      	ldr	r0, [r1, #0]
 8011b70:	4d41      	ldr	r5, [pc, #260]	; (8011c78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011b72:	6849      	ldr	r1, [r1, #4]
 8011b74:	ab05      	add	r3, sp, #20
 8011b76:	c303      	stmia	r3!, {r0, r1}
 8011b78:	4611      	mov	r1, r2
 8011b7a:	6828      	ldr	r0, [r5, #0]
 8011b7c:	f7f6 f992 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8011b80:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011b84:	2b00      	cmp	r3, #0
 8011b86:	db11      	blt.n	8011bac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011b88:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011b8c:	2b00      	cmp	r3, #0
 8011b8e:	db0d      	blt.n	8011bac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011b90:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011b92:	4298      	cmp	r0, r3
 8011b94:	d10a      	bne.n	8011bac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011b96:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011b9a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011b9e:	ab09      	add	r3, sp, #36	; 0x24
 8011ba0:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ba4:	4619      	mov	r1, r3
 8011ba6:	a805      	add	r0, sp, #20
 8011ba8:	f7fe f860 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8011bac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011bb0:	2b00      	cmp	r3, #0
 8011bb2:	dd5b      	ble.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011bb4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011bb8:	2b00      	cmp	r3, #0
 8011bba:	dd57      	ble.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011bbc:	4f2f      	ldr	r7, [pc, #188]	; (8011c7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011bbe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011bc0:	683b      	ldr	r3, [r7, #0]
 8011bc2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011bc6:	4b2e      	ldr	r3, [pc, #184]	; (8011c80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011bc8:	681b      	ldr	r3, [r3, #0]
 8011bca:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011bce:	2e00      	cmp	r6, #0
 8011bd0:	d04c      	beq.n	8011c6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011bd2:	6823      	ldr	r3, [r4, #0]
 8011bd4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011bd8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011bda:	4620      	mov	r0, r4
 8011bdc:	4798      	blx	r3
 8011bde:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011be0:	683b      	ldr	r3, [r7, #0]
 8011be2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011be6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011bea:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011bee:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011bf0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011bf4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011bf8:	785b      	ldrb	r3, [r3, #1]
 8011bfa:	9609      	str	r6, [sp, #36]	; 0x24
 8011bfc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c00:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011c04:	4b1f      	ldr	r3, [pc, #124]	; (8011c84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011c06:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011c0a:	681b      	ldr	r3, [r3, #0]
 8011c0c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011c10:	910b      	str	r1, [sp, #44]	; 0x2c
 8011c12:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011c16:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011c1a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011c1e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011c22:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011c26:	b10a      	cbz	r2, 8011c2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011c28:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011c2a:	b906      	cbnz	r6, 8011c2e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011c2c:	689e      	ldr	r6, [r3, #8]
 8011c2e:	af07      	add	r7, sp, #28
 8011c30:	4621      	mov	r1, r4
 8011c32:	4638      	mov	r0, r7
 8011c34:	f004 fab0 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c38:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011c3a:	6828      	ldr	r0, [r5, #0]
 8011c3c:	f7f6 f932 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8011c40:	6823      	ldr	r3, [r4, #0]
 8011c42:	4605      	mov	r5, r0
 8011c44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c46:	4620      	mov	r0, r4
 8011c48:	4798      	blx	r3
 8011c4a:	6823      	ldr	r3, [r4, #0]
 8011c4c:	4680      	mov	r8, r0
 8011c4e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011c52:	4620      	mov	r0, r4
 8011c54:	4798      	blx	r3
 8011c56:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011c5a:	ab09      	add	r3, sp, #36	; 0x24
 8011c5c:	9300      	str	r3, [sp, #0]
 8011c5e:	9501      	str	r5, [sp, #4]
 8011c60:	ab05      	add	r3, sp, #20
 8011c62:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011c66:	4630      	mov	r0, r6
 8011c68:	f7f6 f8ce 	bl	8007e08 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011c6c:	b00e      	add	sp, #56	; 0x38
 8011c6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c72:	bf00      	nop
 8011c74:	20013828 	.word	0x20013828
 8011c78:	20013830 	.word	0x20013830
 8011c7c:	20013824 	.word	0x20013824
 8011c80:	2001382c 	.word	0x2001382c
 8011c84:	200137cc 	.word	0x200137cc

08011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011c88:	b538      	push	{r3, r4, r5, lr}
 8011c8a:	4b0e      	ldr	r3, [pc, #56]	; (8011cc4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011c8c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011c8e:	881b      	ldrh	r3, [r3, #0]
 8011c90:	429a      	cmp	r2, r3
 8011c92:	4604      	mov	r4, r0
 8011c94:	d214      	bcs.n	8011cc0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011c96:	6803      	ldr	r3, [r0, #0]
 8011c98:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011c9a:	4798      	blx	r3
 8011c9c:	6823      	ldr	r3, [r4, #0]
 8011c9e:	4605      	mov	r5, r0
 8011ca0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011ca2:	4620      	mov	r0, r4
 8011ca4:	4798      	blx	r3
 8011ca6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011caa:	b22d      	sxth	r5, r5
 8011cac:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011cb0:	4601      	mov	r1, r0
 8011cb2:	bf06      	itte	eq
 8011cb4:	4602      	moveq	r2, r0
 8011cb6:	4629      	moveq	r1, r5
 8011cb8:	462a      	movne	r2, r5
 8011cba:	4620      	mov	r0, r4
 8011cbc:	f7fd fdb6 	bl	800f82c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011cc0:	bd38      	pop	{r3, r4, r5, pc}
 8011cc2:	bf00      	nop
 8011cc4:	20013828 	.word	0x20013828

08011cc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011cc8:	b530      	push	{r4, r5, lr}
 8011cca:	888b      	ldrh	r3, [r1, #4]
 8011ccc:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011cce:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011cd2:	b085      	sub	sp, #20
 8011cd4:	4604      	mov	r4, r0
 8011cd6:	b923      	cbnz	r3, 8011ce2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011cd8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011cdc:	b90b      	cbnz	r3, 8011ce2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011cde:	f7ff ffd3 	bl	8011c88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011ce2:	6823      	ldr	r3, [r4, #0]
 8011ce4:	466d      	mov	r5, sp
 8011ce6:	4621      	mov	r1, r4
 8011ce8:	4628      	mov	r0, r5
 8011cea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011cee:	4798      	blx	r3
 8011cf0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011cf4:	343c      	adds	r4, #60	; 0x3c
 8011cf6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011cfa:	b005      	add	sp, #20
 8011cfc:	bd30      	pop	{r4, r5, pc}

08011cfe <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011cfe:	2300      	movs	r3, #0
 8011d00:	8083      	strh	r3, [r0, #4]
 8011d02:	80c3      	strh	r3, [r0, #6]
 8011d04:	8003      	strh	r3, [r0, #0]
 8011d06:	8043      	strh	r3, [r0, #2]
 8011d08:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011d0c:	2bff      	cmp	r3, #255	; 0xff
 8011d0e:	bf01      	itttt	eq
 8011d10:	890b      	ldrheq	r3, [r1, #8]
 8011d12:	8083      	strheq	r3, [r0, #4]
 8011d14:	894b      	ldrheq	r3, [r1, #10]
 8011d16:	80c3      	strheq	r3, [r0, #6]
 8011d18:	4770      	bx	lr
	...

08011d1c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011d1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011d1e:	4604      	mov	r4, r0
 8011d20:	6808      	ldr	r0, [r1, #0]
 8011d22:	6849      	ldr	r1, [r1, #4]
 8011d24:	466b      	mov	r3, sp
 8011d26:	c303      	stmia	r3!, {r0, r1}
 8011d28:	6823      	ldr	r3, [r4, #0]
 8011d2a:	4669      	mov	r1, sp
 8011d2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d2e:	4620      	mov	r0, r4
 8011d30:	4798      	blx	r3
 8011d32:	4b08      	ldr	r3, [pc, #32]	; (8011d54 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011d34:	681b      	ldr	r3, [r3, #0]
 8011d36:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011d3a:	b10a      	cbz	r2, 8011d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011d3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011d3e:	b900      	cbnz	r0, 8011d42 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011d40:	6898      	ldr	r0, [r3, #8]
 8011d42:	6803      	ldr	r3, [r0, #0]
 8011d44:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011d46:	6a1d      	ldr	r5, [r3, #32]
 8011d48:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011d4c:	4669      	mov	r1, sp
 8011d4e:	47a8      	blx	r5
 8011d50:	b003      	add	sp, #12
 8011d52:	bd30      	pop	{r4, r5, pc}
 8011d54:	200137cc 	.word	0x200137cc

08011d58 <_ZN8touchgfx3BoxD1Ev>:
 8011d58:	4770      	bx	lr

08011d5a <_ZN8touchgfx3BoxD0Ev>:
 8011d5a:	b510      	push	{r4, lr}
 8011d5c:	212c      	movs	r1, #44	; 0x2c
 8011d5e:	4604      	mov	r4, r0
 8011d60:	f015 fdf5 	bl	802794e <_ZdlPvj>
 8011d64:	4620      	mov	r0, r4
 8011d66:	bd10      	pop	{r4, pc}

08011d68 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011d68:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011d6c:	b12a      	cbz	r2, 8011d7a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011d6e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011d72:	b112      	cbz	r2, 8011d7a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011d74:	6803      	ldr	r3, [r0, #0]
 8011d76:	695b      	ldr	r3, [r3, #20]
 8011d78:	4718      	bx	r3
 8011d7a:	4770      	bx	lr

08011d7c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8011d7c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011d80:	600b      	str	r3, [r1, #0]
 8011d82:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011d86:	6013      	str	r3, [r2, #0]
 8011d88:	4770      	bx	lr

08011d8a <_ZN8touchgfx5Gauge8setWidthEs>:
 8011d8a:	8101      	strh	r1, [r0, #8]
 8011d8c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011d90:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011d94:	4770      	bx	lr

08011d96 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011d96:	8141      	strh	r1, [r0, #10]
 8011d98:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8011d9c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011da0:	4770      	bx	lr

08011da2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011da2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011da6:	4770      	bx	lr

08011da8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011da8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8011dac:	4770      	bx	lr

08011dae <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8011dae:	4770      	bx	lr

08011db0 <_ZN8touchgfx5GaugeD1Ev>:
 8011db0:	4770      	bx	lr

08011db2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011db2:	b538      	push	{r3, r4, r5, lr}
 8011db4:	4604      	mov	r4, r0
 8011db6:	460d      	mov	r5, r1
 8011db8:	f7fd fc51 	bl	800f65e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011dbc:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011dc0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011dc4:	bd38      	pop	{r3, r4, r5, pc}

08011dc6 <_ZN8touchgfx5GaugeD0Ev>:
 8011dc6:	b510      	push	{r4, lr}
 8011dc8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8011dcc:	4604      	mov	r4, r0
 8011dce:	f015 fdbe 	bl	802794e <_ZdlPvj>
 8011dd2:	4620      	mov	r0, r4
 8011dd4:	bd10      	pop	{r4, pc}

08011dd6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011dd6:	b510      	push	{r4, lr}
 8011dd8:	6803      	ldr	r3, [r0, #0]
 8011dda:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011dde:	4604      	mov	r4, r0
 8011de0:	4798      	blx	r3
 8011de2:	b170      	cbz	r0, 8011e02 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011de4:	6823      	ldr	r3, [r4, #0]
 8011de6:	4620      	mov	r0, r4
 8011de8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011dec:	4798      	blx	r3
 8011dee:	b140      	cbz	r0, 8011e02 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011df0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011df4:	b12b      	cbz	r3, 8011e02 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011df6:	6823      	ldr	r3, [r4, #0]
 8011df8:	4620      	mov	r0, r4
 8011dfa:	695b      	ldr	r3, [r3, #20]
 8011dfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e00:	4718      	bx	r3
 8011e02:	bd10      	pop	{r4, pc}

08011e04 <_ZN8touchgfx5GaugeC1Ev>:
 8011e04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011e06:	4604      	mov	r4, r0
 8011e08:	4626      	mov	r6, r4
 8011e0a:	f7fd fd49 	bl	800f8a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011e0e:	4b18      	ldr	r3, [pc, #96]	; (8011e70 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011e10:	f846 3bb4 	str.w	r3, [r6], #180
 8011e14:	a902      	add	r1, sp, #8
 8011e16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011e1a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011e1e:	4630      	mov	r0, r6
 8011e20:	f014 ff7c 	bl	8026d1c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011e24:	2500      	movs	r5, #0
 8011e26:	2301      	movs	r3, #1
 8011e28:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011e2c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011e30:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011e34:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011e38:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011e3c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011e40:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011e44:	4638      	mov	r0, r7
 8011e46:	f014 f9ad 	bl	80261a4 <_ZN8touchgfx6CircleC1Ev>
 8011e4a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011e4e:	4620      	mov	r0, r4
 8011e50:	f7fd fdc7 	bl	800f9e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011e54:	4639      	mov	r1, r7
 8011e56:	4620      	mov	r0, r4
 8011e58:	f7fd fd82 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e5c:	4620      	mov	r0, r4
 8011e5e:	4631      	mov	r1, r6
 8011e60:	f7fd fd7e 	bl	800f960 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011e64:	4620      	mov	r0, r4
 8011e66:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011e6a:	b003      	add	sp, #12
 8011e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e6e:	bf00      	nop
 8011e70:	0802caec 	.word	0x0802caec

08011e74 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011e74:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011e78:	4770      	bx	lr

08011e7a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011e7a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011e7e:	4770      	bx	lr

08011e80 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011e80:	b538      	push	{r3, r4, r5, lr}
 8011e82:	8902      	ldrh	r2, [r0, #8]
 8011e84:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011e88:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011e8c:	4604      	mov	r4, r0
 8011e8e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011e92:	2200      	movs	r2, #0
 8011e94:	4611      	mov	r1, r2
 8011e96:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011e9a:	4628      	mov	r0, r5
 8011e9c:	f7f0 fb07 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 8011ea0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011ea4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011ea8:	1a9b      	subs	r3, r3, r2
 8011eaa:	ee07 3a90 	vmov	s15, r3
 8011eae:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011eb2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011eb6:	1a9b      	subs	r3, r3, r2
 8011eb8:	ee07 3a10 	vmov	s14, r3
 8011ebc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ec0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ec4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011ec8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011ecc:	4628      	mov	r0, r5
 8011ece:	f014 ff71 	bl	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011ed2:	4b16      	ldr	r3, [pc, #88]	; (8011f2c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011ed4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011ed8:	4628      	mov	r0, r5
 8011eda:	f014 ff6b 	bl	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011ede:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011ee2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011ee6:	ee07 3a90 	vmov	s15, r3
 8011eea:	ee07 2a10 	vmov	s14, r2
 8011eee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ef2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ef6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011efa:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011efe:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011f02:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011f06:	4628      	mov	r0, r5
 8011f08:	f014 ff54 	bl	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f0c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011f10:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011f14:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011f18:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011f1c:	4628      	mov	r0, r5
 8011f1e:	f014 ff49 	bl	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011f22:	2301      	movs	r3, #1
 8011f24:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011f28:	bd38      	pop	{r3, r4, r5, pc}
 8011f2a:	bf00      	nop
 8011f2c:	43960000 	.word	0x43960000

08011f30 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011f30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011f32:	4604      	mov	r4, r0
 8011f34:	a802      	add	r0, sp, #8
 8011f36:	4616      	mov	r6, r2
 8011f38:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011f3c:	461d      	mov	r5, r3
 8011f3e:	4601      	mov	r1, r0
 8011f40:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011f44:	f015 f88c 	bl	8027060 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011f48:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011f4c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011f50:	4620      	mov	r0, r4
 8011f52:	f7ff ff95 	bl	8011e80 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011f56:	b002      	add	sp, #8
 8011f58:	bd70      	pop	{r4, r5, r6, pc}

08011f5a <_ZN8touchgfx5Gauge9setCenterEii>:
 8011f5a:	b570      	push	{r4, r5, r6, lr}
 8011f5c:	4606      	mov	r6, r0
 8011f5e:	460d      	mov	r5, r1
 8011f60:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011f64:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011f68:	4614      	mov	r4, r2
 8011f6a:	f7ff ff89 	bl	8011e80 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011f6e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011f72:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011f76:	1aa4      	subs	r4, r4, r2
 8011f78:	1a6d      	subs	r5, r5, r1
 8011f7a:	0164      	lsls	r4, r4, #5
 8011f7c:	016d      	lsls	r5, r5, #5
 8011f7e:	3410      	adds	r4, #16
 8011f80:	3510      	adds	r5, #16
 8011f82:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011f86:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8011f8a:	bd70      	pop	{r4, r5, r6, pc}

08011f8c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8011f8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011f8e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011f90:	0149      	lsls	r1, r1, #5
 8011f92:	4299      	cmp	r1, r3
 8011f94:	4604      	mov	r4, r0
 8011f96:	9101      	str	r1, [sp, #4]
 8011f98:	d00b      	beq.n	8011fb2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8011f9a:	4601      	mov	r1, r0
 8011f9c:	aa01      	add	r2, sp, #4
 8011f9e:	a802      	add	r0, sp, #8
 8011fa0:	f014 fafe 	bl	80265a0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011fa4:	9b01      	ldr	r3, [sp, #4]
 8011fa6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011fa8:	6823      	ldr	r3, [r4, #0]
 8011faa:	a902      	add	r1, sp, #8
 8011fac:	691b      	ldr	r3, [r3, #16]
 8011fae:	4620      	mov	r0, r4
 8011fb0:	4798      	blx	r3
 8011fb2:	b004      	add	sp, #16
 8011fb4:	bd10      	pop	{r4, pc}
	...

08011fb8 <_ZN8touchgfx5Gauge8setValueEi>:
 8011fb8:	b570      	push	{r4, r5, r6, lr}
 8011fba:	4604      	mov	r4, r0
 8011fbc:	f7fd fba2 	bl	800f704 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011fc0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011fc4:	429a      	cmp	r2, r3
 8011fc6:	bfac      	ite	ge
 8011fc8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8011fcc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011fd0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011fd4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011fd8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011fdc:	1ac9      	subs	r1, r1, r3
 8011fde:	2900      	cmp	r1, #0
 8011fe0:	bfb8      	it	lt
 8011fe2:	4249      	neglt	r1, r1
 8011fe4:	b289      	uxth	r1, r1
 8011fe6:	4620      	mov	r0, r4
 8011fe8:	f7fd fbae 	bl	800f748 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011fec:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011ff0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8011ff4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801205c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8011ff8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012060 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8011ffc:	429a      	cmp	r2, r3
 8011ffe:	4605      	mov	r5, r0
 8012000:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012004:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012008:	da15      	bge.n	8012036 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801200a:	1b5b      	subs	r3, r3, r5
 801200c:	ee07 3a90 	vmov	s15, r3
 8012010:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012014:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012018:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801201c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012020:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012024:	f014 fe35 	bl	8026c92 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012028:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801202c:	1b49      	subs	r1, r1, r5
 801202e:	4630      	mov	r0, r6
 8012030:	f7ff ffac 	bl	8011f8c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012034:	bd70      	pop	{r4, r5, r6, pc}
 8012036:	442b      	add	r3, r5
 8012038:	ee07 3a90 	vmov	s15, r3
 801203c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012040:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012044:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012048:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801204c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012050:	f014 fe1f 	bl	8026c92 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012054:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012058:	4429      	add	r1, r5
 801205a:	e7e8      	b.n	801202e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801205c:	43340000 	.word	0x43340000
 8012060:	40490fdb 	.word	0x40490fdb

08012064 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012064:	b510      	push	{r4, lr}
 8012066:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801206a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801206e:	0149      	lsls	r1, r1, #5
 8012070:	0152      	lsls	r2, r2, #5
 8012072:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012076:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801207a:	4604      	mov	r4, r0
 801207c:	f7fd faec 	bl	800f658 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012080:	4601      	mov	r1, r0
 8012082:	4620      	mov	r0, r4
 8012084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012088:	f7ff bf96 	b.w	8011fb8 <_ZN8touchgfx5Gauge8setValueEi>

0801208c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801208c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012090:	4770      	bx	lr

08012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012092:	b570      	push	{r4, r5, r6, lr}
 8012094:	880b      	ldrh	r3, [r1, #0]
 8012096:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012098:	4605      	mov	r5, r0
 801209a:	8813      	ldrh	r3, [r2, #0]
 801209c:	f825 3f30 	strh.w	r3, [r5, #48]!
 80120a0:	4604      	mov	r4, r0
 80120a2:	4628      	mov	r0, r5
 80120a4:	f006 f912 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80120a8:	4606      	mov	r6, r0
 80120aa:	4628      	mov	r0, r5
 80120ac:	f006 f942 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80120b0:	6823      	ldr	r3, [r4, #0]
 80120b2:	4605      	mov	r5, r0
 80120b4:	4631      	mov	r1, r6
 80120b6:	4620      	mov	r0, r4
 80120b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120ba:	4798      	blx	r3
 80120bc:	6823      	ldr	r3, [r4, #0]
 80120be:	4629      	mov	r1, r5
 80120c0:	4620      	mov	r0, r4
 80120c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120c8:	4718      	bx	r3

080120ca <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80120ca:	b510      	push	{r4, lr}
 80120cc:	4604      	mov	r4, r0
 80120ce:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80120d0:	b150      	cbz	r0, 80120e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80120d2:	6803      	ldr	r3, [r0, #0]
 80120d4:	68db      	ldr	r3, [r3, #12]
 80120d6:	4798      	blx	r3
 80120d8:	b130      	cbz	r0, 80120e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80120da:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80120dc:	6803      	ldr	r3, [r0, #0]
 80120de:	4621      	mov	r1, r4
 80120e0:	689b      	ldr	r3, [r3, #8]
 80120e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120e6:	4718      	bx	r3
 80120e8:	bd10      	pop	{r4, pc}

080120ea <_ZNK8touchgfx6Button12getSolidRectEv>:
 80120ea:	b510      	push	{r4, lr}
 80120ec:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80120f0:	2bff      	cmp	r3, #255	; 0xff
 80120f2:	4604      	mov	r4, r0
 80120f4:	d006      	beq.n	8012104 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80120f6:	2300      	movs	r3, #0
 80120f8:	8003      	strh	r3, [r0, #0]
 80120fa:	8043      	strh	r3, [r0, #2]
 80120fc:	8083      	strh	r3, [r0, #4]
 80120fe:	80c3      	strh	r3, [r0, #6]
 8012100:	4620      	mov	r0, r4
 8012102:	bd10      	pop	{r4, pc}
 8012104:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012108:	b11b      	cbz	r3, 8012112 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801210a:	3130      	adds	r1, #48	; 0x30
 801210c:	f006 f946 	bl	801839c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012110:	e7f6      	b.n	8012100 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012112:	312e      	adds	r1, #46	; 0x2e
 8012114:	e7fa      	b.n	801210c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012118 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801211c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012120:	b08a      	sub	sp, #40	; 0x28
 8012122:	4604      	mov	r4, r0
 8012124:	4688      	mov	r8, r1
 8012126:	2b00      	cmp	r3, #0
 8012128:	d066      	beq.n	80121f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801212a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801212c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012130:	a805      	add	r0, sp, #20
 8012132:	f006 f8cb 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012136:	4607      	mov	r7, r0
 8012138:	a805      	add	r0, sp, #20
 801213a:	f006 f8fb 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801213e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012142:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012146:	4432      	add	r2, r6
 8012148:	b292      	uxth	r2, r2
 801214a:	2300      	movs	r3, #0
 801214c:	fa0f fc82 	sxth.w	ip, r2
 8012150:	459c      	cmp	ip, r3
 8012152:	9306      	str	r3, [sp, #24]
 8012154:	dd52      	ble.n	80121fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012156:	42b7      	cmp	r7, r6
 8012158:	dd50      	ble.n	80121fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801215a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801215e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012162:	442b      	add	r3, r5
 8012164:	b29b      	uxth	r3, r3
 8012166:	b219      	sxth	r1, r3
 8012168:	2900      	cmp	r1, #0
 801216a:	dd47      	ble.n	80121fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801216c:	42a8      	cmp	r0, r5
 801216e:	dd45      	ble.n	80121fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012170:	4567      	cmp	r7, ip
 8012172:	bfb8      	it	lt
 8012174:	b2ba      	uxthlt	r2, r7
 8012176:	4288      	cmp	r0, r1
 8012178:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801217c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012180:	bfb8      	it	lt
 8012182:	b283      	uxthlt	r3, r0
 8012184:	1b92      	subs	r2, r2, r6
 8012186:	1b5b      	subs	r3, r3, r5
 8012188:	f8ad 201c 	strh.w	r2, [sp, #28]
 801218c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012190:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012194:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012198:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801219c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80121a0:	429a      	cmp	r2, r3
 80121a2:	d026      	beq.n	80121f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80121a4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	dd22      	ble.n	80121f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80121ac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80121b0:	2b00      	cmp	r3, #0
 80121b2:	dd1e      	ble.n	80121f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80121b4:	2300      	movs	r3, #0
 80121b6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80121ba:	6823      	ldr	r3, [r4, #0]
 80121bc:	a908      	add	r1, sp, #32
 80121be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121c0:	4620      	mov	r0, r4
 80121c2:	4798      	blx	r3
 80121c4:	4b0f      	ldr	r3, [pc, #60]	; (8012204 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80121c6:	681b      	ldr	r3, [r3, #0]
 80121c8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80121cc:	b10a      	cbz	r2, 80121d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80121ce:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80121d0:	b900      	cbnz	r0, 80121d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80121d2:	6898      	ldr	r0, [r3, #8]
 80121d4:	6801      	ldr	r1, [r0, #0]
 80121d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80121da:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80121de:	2501      	movs	r5, #1
 80121e0:	9502      	str	r5, [sp, #8]
 80121e2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80121e6:	9401      	str	r4, [sp, #4]
 80121e8:	ac06      	add	r4, sp, #24
 80121ea:	9400      	str	r4, [sp, #0]
 80121ec:	688c      	ldr	r4, [r1, #8]
 80121ee:	a905      	add	r1, sp, #20
 80121f0:	47a0      	blx	r4
 80121f2:	b00a      	add	sp, #40	; 0x28
 80121f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121f8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80121fa:	e797      	b.n	801212c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80121fc:	2300      	movs	r3, #0
 80121fe:	9307      	str	r3, [sp, #28]
 8012200:	e7ca      	b.n	8012198 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012202:	bf00      	nop
 8012204:	200137cc 	.word	0x200137cc

08012208 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012208:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801220c:	b12a      	cbz	r2, 801221a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801220e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012212:	b112      	cbz	r2, 801221a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012214:	6803      	ldr	r3, [r0, #0]
 8012216:	695b      	ldr	r3, [r3, #20]
 8012218:	4718      	bx	r3
 801221a:	4770      	bx	lr

0801221c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801221c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012220:	4b2f      	ldr	r3, [pc, #188]	; (80122e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012222:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012224:	881b      	ldrh	r3, [r3, #0]
 8012226:	4293      	cmp	r3, r2
 8012228:	b08d      	sub	sp, #52	; 0x34
 801222a:	4604      	mov	r4, r0
 801222c:	460f      	mov	r7, r1
 801222e:	d954      	bls.n	80122da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012230:	4b2c      	ldr	r3, [pc, #176]	; (80122e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012232:	6819      	ldr	r1, [r3, #0]
 8012234:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012238:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801223c:	4a2a      	ldr	r2, [pc, #168]	; (80122e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801223e:	6812      	ldr	r2, [r2, #0]
 8012240:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012244:	2900      	cmp	r1, #0
 8012246:	d048      	beq.n	80122da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012248:	785a      	ldrb	r2, [r3, #1]
 801224a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801224e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012252:	4b26      	ldr	r3, [pc, #152]	; (80122ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012254:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012258:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801225c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012260:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012262:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012266:	9107      	str	r1, [sp, #28]
 8012268:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801226c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012270:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012274:	681a      	ldr	r2, [r3, #0]
 8012276:	f88d 8020 	strb.w	r8, [sp, #32]
 801227a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801227e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012282:	9609      	str	r6, [sp, #36]	; 0x24
 8012284:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012288:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801228c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012290:	b10b      	cbz	r3, 8012296 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012292:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012294:	b905      	cbnz	r5, 8012298 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012296:	6895      	ldr	r5, [r2, #8]
 8012298:	ae05      	add	r6, sp, #20
 801229a:	4621      	mov	r1, r4
 801229c:	4630      	mov	r0, r6
 801229e:	f003 ff7b 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122a2:	4b13      	ldr	r3, [pc, #76]	; (80122f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80122a4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80122a6:	6818      	ldr	r0, [r3, #0]
 80122a8:	f7f5 fdfc 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 80122ac:	6823      	ldr	r3, [r4, #0]
 80122ae:	4680      	mov	r8, r0
 80122b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80122b2:	4620      	mov	r0, r4
 80122b4:	4798      	blx	r3
 80122b6:	6823      	ldr	r3, [r4, #0]
 80122b8:	4681      	mov	r9, r0
 80122ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80122be:	4620      	mov	r0, r4
 80122c0:	4798      	blx	r3
 80122c2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80122c6:	ab07      	add	r3, sp, #28
 80122c8:	9300      	str	r3, [sp, #0]
 80122ca:	f8cd 8004 	str.w	r8, [sp, #4]
 80122ce:	463b      	mov	r3, r7
 80122d0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80122d4:	4628      	mov	r0, r5
 80122d6:	f7f5 fd97 	bl	8007e08 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80122da:	b00d      	add	sp, #52	; 0x34
 80122dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122e0:	20013828 	.word	0x20013828
 80122e4:	20013824 	.word	0x20013824
 80122e8:	2001382c 	.word	0x2001382c
 80122ec:	200137cc 	.word	0x200137cc
 80122f0:	20013830 	.word	0x20013830

080122f4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80122f4:	4770      	bx	lr

080122f6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80122f6:	4770      	bx	lr

080122f8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80122f8:	b510      	push	{r4, lr}
 80122fa:	213c      	movs	r1, #60	; 0x3c
 80122fc:	4604      	mov	r4, r0
 80122fe:	f015 fb26 	bl	802794e <_ZdlPvj>
 8012302:	4620      	mov	r0, r4
 8012304:	bd10      	pop	{r4, pc}

08012306 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012306:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801230a:	461c      	mov	r4, r3
 801230c:	4606      	mov	r6, r0
 801230e:	9f06      	ldr	r7, [sp, #24]
 8012310:	f7ff febf 	bl	8012092 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012314:	8823      	ldrh	r3, [r4, #0]
 8012316:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012318:	883b      	ldrh	r3, [r7, #0]
 801231a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801231c:	4638      	mov	r0, r7
 801231e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012322:	f005 ffd3 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012326:	f04f 0802 	mov.w	r8, #2
 801232a:	fb95 f5f8 	sdiv	r5, r5, r8
 801232e:	b2ad      	uxth	r5, r5
 8012330:	fb90 f0f8 	sdiv	r0, r0, r8
 8012334:	1a2d      	subs	r5, r5, r0
 8012336:	8735      	strh	r5, [r6, #56]	; 0x38
 8012338:	4638      	mov	r0, r7
 801233a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801233e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012342:	f005 fff7 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012346:	b2a4      	uxth	r4, r4
 8012348:	fb90 f0f8 	sdiv	r0, r0, r8
 801234c:	1a24      	subs	r4, r4, r0
 801234e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012350:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012354 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012358:	4604      	mov	r4, r0
 801235a:	b08c      	sub	sp, #48	; 0x30
 801235c:	460d      	mov	r5, r1
 801235e:	f7ff fedb 	bl	8012118 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012362:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012366:	2b00      	cmp	r3, #0
 8012368:	d05d      	beq.n	8012426 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801236a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801236c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012370:	a805      	add	r0, sp, #20
 8012372:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012376:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801237a:	f005 ffa7 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801237e:	4606      	mov	r6, r0
 8012380:	a805      	add	r0, sp, #20
 8012382:	f005 ffd7 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012386:	6869      	ldr	r1, [r5, #4]
 8012388:	f8ad 001e 	strh.w	r0, [sp, #30]
 801238c:	6828      	ldr	r0, [r5, #0]
 801238e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012392:	ab08      	add	r3, sp, #32
 8012394:	ad08      	add	r5, sp, #32
 8012396:	c303      	stmia	r3!, {r0, r1}
 8012398:	a906      	add	r1, sp, #24
 801239a:	4628      	mov	r0, r5
 801239c:	f8ad 701a 	strh.w	r7, [sp, #26]
 80123a0:	f8ad 601c 	strh.w	r6, [sp, #28]
 80123a4:	f7fd fc62 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 80123a8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80123ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80123b0:	429a      	cmp	r2, r3
 80123b2:	d035      	beq.n	8012420 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80123b4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80123b8:	2b00      	cmp	r3, #0
 80123ba:	dd31      	ble.n	8012420 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80123bc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80123c0:	2b00      	cmp	r3, #0
 80123c2:	dd2d      	ble.n	8012420 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80123c4:	2300      	movs	r3, #0
 80123c6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80123ca:	6823      	ldr	r3, [r4, #0]
 80123cc:	a90a      	add	r1, sp, #40	; 0x28
 80123ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123d0:	4620      	mov	r0, r4
 80123d2:	4798      	blx	r3
 80123d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80123d8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80123da:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80123de:	1a9b      	subs	r3, r3, r2
 80123e0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80123e4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80123e6:	1ac9      	subs	r1, r1, r3
 80123e8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80123ec:	490f      	ldr	r1, [pc, #60]	; (801242c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80123ee:	6809      	ldr	r1, [r1, #0]
 80123f0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80123f4:	b108      	cbz	r0, 80123fa <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80123f6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80123f8:	b900      	cbnz	r0, 80123fc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80123fa:	6888      	ldr	r0, [r1, #8]
 80123fc:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012400:	440b      	add	r3, r1
 8012402:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012406:	2601      	movs	r6, #1
 8012408:	440a      	add	r2, r1
 801240a:	6801      	ldr	r1, [r0, #0]
 801240c:	9602      	str	r6, [sp, #8]
 801240e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012412:	e9cd 5400 	strd	r5, r4, [sp]
 8012416:	b21b      	sxth	r3, r3
 8012418:	688c      	ldr	r4, [r1, #8]
 801241a:	b212      	sxth	r2, r2
 801241c:	a905      	add	r1, sp, #20
 801241e:	47a0      	blx	r4
 8012420:	b00c      	add	sp, #48	; 0x30
 8012422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012426:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012428:	e7a0      	b.n	801236c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801242a:	bf00      	nop
 801242c:	200137cc 	.word	0x200137cc

08012430 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012430:	b510      	push	{r4, lr}
 8012432:	2101      	movs	r1, #1
 8012434:	2200      	movs	r2, #0
 8012436:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801243a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801243e:	4c0e      	ldr	r4, [pc, #56]	; (8012478 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012440:	8082      	strh	r2, [r0, #4]
 8012442:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012446:	80c2      	strh	r2, [r0, #6]
 8012448:	8102      	strh	r2, [r0, #8]
 801244a:	8142      	strh	r2, [r0, #10]
 801244c:	8182      	strh	r2, [r0, #12]
 801244e:	81c2      	strh	r2, [r0, #14]
 8012450:	8202      	strh	r2, [r0, #16]
 8012452:	8242      	strh	r2, [r0, #18]
 8012454:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012458:	61c2      	str	r2, [r0, #28]
 801245a:	8402      	strh	r2, [r0, #32]
 801245c:	8442      	strh	r2, [r0, #34]	; 0x22
 801245e:	6282      	str	r2, [r0, #40]	; 0x28
 8012460:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012464:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012466:	8601      	strh	r1, [r0, #48]	; 0x30
 8012468:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801246c:	6004      	str	r4, [r0, #0]
 801246e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012470:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012472:	8702      	strh	r2, [r0, #56]	; 0x38
 8012474:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012476:	bd10      	pop	{r4, pc}
 8012478:	0802cbd4 	.word	0x0802cbd4

0801247c <_ZN8touchgfx5ImageD1Ev>:
 801247c:	4770      	bx	lr

0801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801247e:	b570      	push	{r4, r5, r6, lr}
 8012480:	880b      	ldrh	r3, [r1, #0]
 8012482:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012484:	4604      	mov	r4, r0
 8012486:	4608      	mov	r0, r1
 8012488:	460d      	mov	r5, r1
 801248a:	f005 ff1f 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801248e:	4606      	mov	r6, r0
 8012490:	4628      	mov	r0, r5
 8012492:	f005 ff4f 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012496:	6823      	ldr	r3, [r4, #0]
 8012498:	4605      	mov	r5, r0
 801249a:	4631      	mov	r1, r6
 801249c:	4620      	mov	r0, r4
 801249e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124a0:	4798      	blx	r3
 80124a2:	6823      	ldr	r3, [r4, #0]
 80124a4:	4629      	mov	r1, r5
 80124a6:	4620      	mov	r0, r4
 80124a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124ae:	4718      	bx	r3

080124b0 <_ZN8touchgfx5ImageD0Ev>:
 80124b0:	b510      	push	{r4, lr}
 80124b2:	212c      	movs	r1, #44	; 0x2c
 80124b4:	4604      	mov	r4, r0
 80124b6:	f015 fa4a 	bl	802794e <_ZdlPvj>
 80124ba:	4620      	mov	r0, r4
 80124bc:	bd10      	pop	{r4, pc}

080124be <_ZNK8touchgfx5Image12getSolidRectEv>:
 80124be:	b510      	push	{r4, lr}
 80124c0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80124c4:	2bff      	cmp	r3, #255	; 0xff
 80124c6:	4604      	mov	r4, r0
 80124c8:	d006      	beq.n	80124d8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80124ca:	2300      	movs	r3, #0
 80124cc:	8003      	strh	r3, [r0, #0]
 80124ce:	8043      	strh	r3, [r0, #2]
 80124d0:	8083      	strh	r3, [r0, #4]
 80124d2:	80c3      	strh	r3, [r0, #6]
 80124d4:	4620      	mov	r0, r4
 80124d6:	bd10      	pop	{r4, pc}
 80124d8:	3126      	adds	r1, #38	; 0x26
 80124da:	f005 ff5f 	bl	801839c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80124de:	e7f9      	b.n	80124d4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080124e0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80124e0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80124e4:	b12a      	cbz	r2, 80124f2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80124e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80124ea:	b112      	cbz	r2, 80124f2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80124ec:	6803      	ldr	r3, [r0, #0]
 80124ee:	695b      	ldr	r3, [r3, #20]
 80124f0:	4718      	bx	r3
 80124f2:	4770      	bx	lr

080124f4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80124f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124f8:	4604      	mov	r4, r0
 80124fa:	b088      	sub	sp, #32
 80124fc:	f854 3b26 	ldr.w	r3, [r4], #38
 8012500:	2500      	movs	r5, #0
 8012502:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012504:	460f      	mov	r7, r1
 8012506:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801250a:	a904      	add	r1, sp, #16
 801250c:	4606      	mov	r6, r0
 801250e:	4798      	blx	r3
 8012510:	4620      	mov	r0, r4
 8012512:	f005 fedb 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012516:	4680      	mov	r8, r0
 8012518:	4620      	mov	r0, r4
 801251a:	f005 ff0b 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801251e:	9506      	str	r5, [sp, #24]
 8012520:	ad06      	add	r5, sp, #24
 8012522:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012526:	4639      	mov	r1, r7
 8012528:	4628      	mov	r0, r5
 801252a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801252e:	f7fd fb9d 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8012532:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012536:	2b00      	cmp	r3, #0
 8012538:	dd19      	ble.n	801256e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801253a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801253e:	2b00      	cmp	r3, #0
 8012540:	dd15      	ble.n	801256e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012542:	4b0c      	ldr	r3, [pc, #48]	; (8012574 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012544:	681b      	ldr	r3, [r3, #0]
 8012546:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801254a:	b10a      	cbz	r2, 8012550 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801254c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801254e:	b900      	cbnz	r0, 8012552 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012550:	6898      	ldr	r0, [r3, #8]
 8012552:	6801      	ldr	r1, [r0, #0]
 8012554:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012558:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801255c:	2701      	movs	r7, #1
 801255e:	9702      	str	r7, [sp, #8]
 8012560:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012564:	e9cd 5600 	strd	r5, r6, [sp]
 8012568:	688d      	ldr	r5, [r1, #8]
 801256a:	4621      	mov	r1, r4
 801256c:	47a8      	blx	r5
 801256e:	b008      	add	sp, #32
 8012570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012574:	200137cc 	.word	0x200137cc

08012578 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012578:	4770      	bx	lr

0801257a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801257a:	b510      	push	{r4, lr}
 801257c:	2148      	movs	r1, #72	; 0x48
 801257e:	4604      	mov	r4, r0
 8012580:	f015 f9e5 	bl	802794e <_ZdlPvj>
 8012584:	4620      	mov	r0, r4
 8012586:	bd10      	pop	{r4, pc}

08012588 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012588:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801258c:	b08d      	sub	sp, #52	; 0x34
 801258e:	4604      	mov	r4, r0
 8012590:	460f      	mov	r7, r1
 8012592:	f7ff fdc1 	bl	8012118 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012596:	4a55      	ldr	r2, [pc, #340]	; (80126ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012598:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801259a:	8812      	ldrh	r2, [r2, #0]
 801259c:	429a      	cmp	r2, r3
 801259e:	f240 8082 	bls.w	80126a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80125a2:	4d53      	ldr	r5, [pc, #332]	; (80126f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80125a4:	682a      	ldr	r2, [r5, #0]
 80125a6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80125aa:	4b52      	ldr	r3, [pc, #328]	; (80126f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80125ac:	681b      	ldr	r3, [r3, #0]
 80125ae:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80125b2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80125b6:	2200      	movs	r2, #0
 80125b8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80125bc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80125c0:	2a03      	cmp	r2, #3
 80125c2:	d811      	bhi.n	80125e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80125c4:	e8df f002 	tbb	[pc, r2]
 80125c8:	89727902 	.word	0x89727902
 80125cc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80125d0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80125d4:	1ad2      	subs	r2, r2, r3
 80125d6:	2002      	movs	r0, #2
 80125d8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80125dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80125e0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80125e4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80125e8:	f10d 080c 	add.w	r8, sp, #12
 80125ec:	e898 0003 	ldmia.w	r8, {r0, r1}
 80125f0:	f10d 0914 	add.w	r9, sp, #20
 80125f4:	e889 0003 	stmia.w	r9, {r0, r1}
 80125f8:	4639      	mov	r1, r7
 80125fa:	4648      	mov	r0, r9
 80125fc:	f7fd fb36 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8012600:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012604:	2b00      	cmp	r3, #0
 8012606:	dd4e      	ble.n	80126a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012608:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801260c:	2b00      	cmp	r3, #0
 801260e:	dd4a      	ble.n	80126a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012610:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012614:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012618:	1a9b      	subs	r3, r3, r2
 801261a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801261e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012622:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012626:	1a9b      	subs	r3, r3, r2
 8012628:	f8ad 3016 	strh.w	r3, [sp, #22]
 801262c:	6823      	ldr	r3, [r4, #0]
 801262e:	4641      	mov	r1, r8
 8012630:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012632:	4620      	mov	r0, r4
 8012634:	4798      	blx	r3
 8012636:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801263a:	2b00      	cmp	r3, #0
 801263c:	d053      	beq.n	80126e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801263e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012640:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012642:	682b      	ldr	r3, [r5, #0]
 8012644:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012648:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801264c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012650:	785b      	ldrb	r3, [r3, #1]
 8012652:	9209      	str	r2, [sp, #36]	; 0x24
 8012654:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012658:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801265c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012660:	2300      	movs	r3, #0
 8012662:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012666:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801266a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801266e:	4b22      	ldr	r3, [pc, #136]	; (80126f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012670:	9607      	str	r6, [sp, #28]
 8012672:	681b      	ldr	r3, [r3, #0]
 8012674:	f88d 5020 	strb.w	r5, [sp, #32]
 8012678:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801267c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012680:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012684:	b10a      	cbz	r2, 801268a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012686:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012688:	b904      	cbnz	r4, 801268c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801268a:	689c      	ldr	r4, [r3, #8]
 801268c:	4b1b      	ldr	r3, [pc, #108]	; (80126fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801268e:	6818      	ldr	r0, [r3, #0]
 8012690:	f7f5 fc08 	bl	8007ea4 <_ZNK8touchgfx5Texts7getTextEt>
 8012694:	ab07      	add	r3, sp, #28
 8012696:	9001      	str	r0, [sp, #4]
 8012698:	9300      	str	r3, [sp, #0]
 801269a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801269e:	464b      	mov	r3, r9
 80126a0:	4620      	mov	r0, r4
 80126a2:	f7f5 fbb1 	bl	8007e08 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80126a6:	b00d      	add	sp, #52	; 0x34
 80126a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80126ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80126b0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80126b4:	1ad2      	subs	r2, r2, r3
 80126b6:	3201      	adds	r2, #1
 80126b8:	e78d      	b.n	80125d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80126ba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126be:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126c2:	1ad2      	subs	r2, r2, r3
 80126c4:	3201      	adds	r2, #1
 80126c6:	2002      	movs	r0, #2
 80126c8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80126cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80126d0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80126d4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80126d8:	e786      	b.n	80125e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80126da:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126de:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126e2:	1ad2      	subs	r2, r2, r3
 80126e4:	e7ef      	b.n	80126c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80126e6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80126e8:	e7aa      	b.n	8012640 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80126ea:	bf00      	nop
 80126ec:	20013828 	.word	0x20013828
 80126f0:	20013824 	.word	0x20013824
 80126f4:	2001382c 	.word	0x2001382c
 80126f8:	200137cc 	.word	0x200137cc
 80126fc:	20013830 	.word	0x20013830

08012700 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012700:	b510      	push	{r4, lr}
 8012702:	2101      	movs	r1, #1
 8012704:	4c13      	ldr	r4, [pc, #76]	; (8012754 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012706:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801270a:	2200      	movs	r2, #0
 801270c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012710:	6004      	str	r4, [r0, #0]
 8012712:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012716:	4c10      	ldr	r4, [pc, #64]	; (8012758 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012718:	8082      	strh	r2, [r0, #4]
 801271a:	80c2      	strh	r2, [r0, #6]
 801271c:	8102      	strh	r2, [r0, #8]
 801271e:	8142      	strh	r2, [r0, #10]
 8012720:	8182      	strh	r2, [r0, #12]
 8012722:	81c2      	strh	r2, [r0, #14]
 8012724:	8202      	strh	r2, [r0, #16]
 8012726:	8242      	strh	r2, [r0, #18]
 8012728:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801272c:	61c2      	str	r2, [r0, #28]
 801272e:	8402      	strh	r2, [r0, #32]
 8012730:	8442      	strh	r2, [r0, #34]	; 0x22
 8012732:	6282      	str	r2, [r0, #40]	; 0x28
 8012734:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012738:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801273a:	8601      	strh	r1, [r0, #48]	; 0x30
 801273c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012740:	6344      	str	r4, [r0, #52]	; 0x34
 8012742:	8701      	strh	r1, [r0, #56]	; 0x38
 8012744:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012748:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801274c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012750:	bd10      	pop	{r4, pc}
 8012752:	bf00      	nop
 8012754:	0802ccb8 	.word	0x0802ccb8
 8012758:	0802a13c 	.word	0x0802a13c

0801275c <_ZN8touchgfx7OutlineD1Ev>:
 801275c:	4770      	bx	lr

0801275e <_ZN8touchgfx7OutlineD0Ev>:
 801275e:	b510      	push	{r4, lr}
 8012760:	2130      	movs	r1, #48	; 0x30
 8012762:	4604      	mov	r4, r0
 8012764:	f015 f8f3 	bl	802794e <_ZdlPvj>
 8012768:	4620      	mov	r0, r4
 801276a:	bd10      	pop	{r4, pc}

0801276c <_ZN8touchgfx7Outline5resetEv>:
 801276c:	b510      	push	{r4, lr}
 801276e:	4604      	mov	r4, r0
 8012770:	f000 fe96 	bl	80134a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012774:	60e0      	str	r0, [r4, #12]
 8012776:	f000 fe99 	bl	80134ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801277a:	68e3      	ldr	r3, [r4, #12]
 801277c:	6123      	str	r3, [r4, #16]
 801277e:	08c0      	lsrs	r0, r0, #3
 8012780:	2200      	movs	r2, #0
 8012782:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012786:	3801      	subs	r0, #1
 8012788:	6060      	str	r0, [r4, #4]
 801278a:	60a2      	str	r2, [r4, #8]
 801278c:	8019      	strh	r1, [r3, #0]
 801278e:	8059      	strh	r1, [r3, #2]
 8012790:	809a      	strh	r2, [r3, #4]
 8012792:	80da      	strh	r2, [r3, #6]
 8012794:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012796:	f023 0301 	bic.w	r3, r3, #1
 801279a:	f043 0302 	orr.w	r3, r3, #2
 801279e:	6263      	str	r3, [r4, #36]	; 0x24
 80127a0:	bd10      	pop	{r4, pc}
	...

080127a4 <_ZN8touchgfx7OutlineC1Ev>:
 80127a4:	b510      	push	{r4, lr}
 80127a6:	4b0a      	ldr	r3, [pc, #40]	; (80127d0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80127a8:	6003      	str	r3, [r0, #0]
 80127aa:	2300      	movs	r3, #0
 80127ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80127b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80127b4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80127b8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80127bc:	6243      	str	r3, [r0, #36]	; 0x24
 80127be:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80127c2:	4604      	mov	r4, r0
 80127c4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80127c8:	f7ff ffd0 	bl	801276c <_ZN8touchgfx7Outline5resetEv>
 80127cc:	4620      	mov	r0, r4
 80127ce:	bd10      	pop	{r4, pc}
 80127d0:	0802cd2c 	.word	0x0802cd2c

080127d4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80127d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127d8:	b093      	sub	sp, #76	; 0x4c
 80127da:	1156      	asrs	r6, r2, #5
 80127dc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80127de:	9305      	str	r3, [sp, #20]
 80127e0:	f004 051f 	and.w	r5, r4, #31
 80127e4:	1153      	asrs	r3, r2, #5
 80127e6:	9504      	str	r5, [sp, #16]
 80127e8:	1165      	asrs	r5, r4, #5
 80127ea:	9303      	str	r3, [sp, #12]
 80127ec:	42ae      	cmp	r6, r5
 80127ee:	ea4f 1364 	mov.w	r3, r4, asr #5
 80127f2:	9306      	str	r3, [sp, #24]
 80127f4:	f002 031f 	and.w	r3, r2, #31
 80127f8:	f040 80f8 	bne.w	80129ec <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80127fc:	9c04      	ldr	r4, [sp, #16]
 80127fe:	9a05      	ldr	r2, [sp, #20]
 8012800:	42a3      	cmp	r3, r4
 8012802:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012806:	6902      	ldr	r2, [r0, #16]
 8012808:	d125      	bne.n	8012856 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801280a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801280e:	459e      	cmp	lr, r3
 8012810:	d103      	bne.n	801281a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012812:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012816:	429e      	cmp	r6, r3
 8012818:	d035      	beq.n	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801281a:	88d1      	ldrh	r1, [r2, #6]
 801281c:	8893      	ldrh	r3, [r2, #4]
 801281e:	430b      	orrs	r3, r1
 8012820:	d010      	beq.n	8012844 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012822:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012826:	2b00      	cmp	r3, #0
 8012828:	db0c      	blt.n	8012844 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801282a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801282c:	428b      	cmp	r3, r1
 801282e:	da09      	bge.n	8012844 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012830:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012834:	428b      	cmp	r3, r1
 8012836:	bf38      	it	cc
 8012838:	3208      	addcc	r2, #8
 801283a:	f103 0301 	add.w	r3, r3, #1
 801283e:	bf38      	it	cc
 8012840:	6102      	strcc	r2, [r0, #16]
 8012842:	6083      	str	r3, [r0, #8]
 8012844:	6903      	ldr	r3, [r0, #16]
 8012846:	9a03      	ldr	r2, [sp, #12]
 8012848:	f8a3 e000 	strh.w	lr, [r3]
 801284c:	805a      	strh	r2, [r3, #2]
 801284e:	2200      	movs	r2, #0
 8012850:	809a      	strh	r2, [r3, #4]
 8012852:	80da      	strh	r2, [r3, #6]
 8012854:	e017      	b.n	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012856:	9c05      	ldr	r4, [sp, #20]
 8012858:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801285c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012860:	f004 041f 	and.w	r4, r4, #31
 8012864:	114e      	asrs	r6, r1, #5
 8012866:	9402      	str	r4, [sp, #8]
 8012868:	9c04      	ldr	r4, [sp, #16]
 801286a:	4576      	cmp	r6, lr
 801286c:	f001 0c1f 	and.w	ip, r1, #31
 8012870:	eba4 0403 	sub.w	r4, r4, r3
 8012874:	d10a      	bne.n	801288c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012876:	9b02      	ldr	r3, [sp, #8]
 8012878:	449c      	add	ip, r3
 801287a:	44a0      	add	r8, r4
 801287c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012880:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012884:	80d4      	strh	r4, [r2, #6]
 8012886:	b013      	add	sp, #76	; 0x4c
 8012888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801288c:	9d05      	ldr	r5, [sp, #20]
 801288e:	1a69      	subs	r1, r5, r1
 8012890:	bf5b      	ittet	pl
 8012892:	f1cc 0520 	rsbpl	r5, ip, #32
 8012896:	436c      	mulpl	r4, r5
 8012898:	2500      	movmi	r5, #0
 801289a:	2520      	movpl	r5, #32
 801289c:	bf44      	itt	mi
 801289e:	fb04 f40c 	mulmi.w	r4, r4, ip
 80128a2:	4249      	negmi	r1, r1
 80128a4:	9501      	str	r5, [sp, #4]
 80128a6:	9f01      	ldr	r7, [sp, #4]
 80128a8:	fb94 f5f1 	sdiv	r5, r4, r1
 80128ac:	fb01 4415 	mls	r4, r1, r5, r4
 80128b0:	bf54      	ite	pl
 80128b2:	f04f 0901 	movpl.w	r9, #1
 80128b6:	f04f 39ff 	movmi.w	r9, #4294967295
 80128ba:	2c00      	cmp	r4, #0
 80128bc:	bfb8      	it	lt
 80128be:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80128c2:	44bc      	add	ip, r7
 80128c4:	44a8      	add	r8, r5
 80128c6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80128ca:	f8a2 8004 	strh.w	r8, [r2, #4]
 80128ce:	f8a2 c006 	strh.w	ip, [r2, #6]
 80128d2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80128d6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80128da:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80128de:	bfb8      	it	lt
 80128e0:	1864      	addlt	r4, r4, r1
 80128e2:	ea58 0202 	orrs.w	r2, r8, r2
 80128e6:	444e      	add	r6, r9
 80128e8:	d011      	beq.n	801290e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80128ea:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80128ee:	f1b8 0f00 	cmp.w	r8, #0
 80128f2:	db0c      	blt.n	801290e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80128f4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80128f6:	4590      	cmp	r8, r2
 80128f8:	da09      	bge.n	801290e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80128fa:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80128fe:	4590      	cmp	r8, r2
 8012900:	bf3c      	itt	cc
 8012902:	f10c 0208 	addcc.w	r2, ip, #8
 8012906:	6102      	strcc	r2, [r0, #16]
 8012908:	f108 0201 	add.w	r2, r8, #1
 801290c:	6082      	str	r2, [r0, #8]
 801290e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012912:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012916:	f8ac 6000 	strh.w	r6, [ip]
 801291a:	2700      	movs	r7, #0
 801291c:	45b6      	cmp	lr, r6
 801291e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012922:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012926:	f8ac 7006 	strh.w	r7, [ip, #6]
 801292a:	442b      	add	r3, r5
 801292c:	d04d      	beq.n	80129ca <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801292e:	9f04      	ldr	r7, [sp, #16]
 8012930:	1aff      	subs	r7, r7, r3
 8012932:	443d      	add	r5, r7
 8012934:	016d      	lsls	r5, r5, #5
 8012936:	fb95 f8f1 	sdiv	r8, r5, r1
 801293a:	fb01 5518 	mls	r5, r1, r8, r5
 801293e:	2d00      	cmp	r5, #0
 8012940:	bfb8      	it	lt
 8012942:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012946:	f108 0701 	add.w	r7, r8, #1
 801294a:	bfb8      	it	lt
 801294c:	186d      	addlt	r5, r5, r1
 801294e:	1a64      	subs	r4, r4, r1
 8012950:	9703      	str	r7, [sp, #12]
 8012952:	f04f 0a00 	mov.w	sl, #0
 8012956:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801295a:	1964      	adds	r4, r4, r5
 801295c:	bf58      	it	pl
 801295e:	9f03      	ldrpl	r7, [sp, #12]
 8012960:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012964:	bf48      	it	mi
 8012966:	4647      	movmi	r7, r8
 8012968:	44bb      	add	fp, r7
 801296a:	f8ac b004 	strh.w	fp, [ip, #4]
 801296e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012972:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012976:	f8ac b006 	strh.w	fp, [ip, #6]
 801297a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801297e:	443b      	add	r3, r7
 8012980:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012984:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012988:	bf58      	it	pl
 801298a:	1a64      	subpl	r4, r4, r1
 801298c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012990:	444e      	add	r6, r9
 8012992:	d011      	beq.n	80129b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012994:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012998:	f1bb 0f00 	cmp.w	fp, #0
 801299c:	db0c      	blt.n	80129b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801299e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80129a0:	45bb      	cmp	fp, r7
 80129a2:	da09      	bge.n	80129b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129a4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80129a8:	45bb      	cmp	fp, r7
 80129aa:	bf3c      	itt	cc
 80129ac:	f10c 0708 	addcc.w	r7, ip, #8
 80129b0:	6107      	strcc	r7, [r0, #16]
 80129b2:	f10b 0701 	add.w	r7, fp, #1
 80129b6:	6087      	str	r7, [r0, #8]
 80129b8:	6907      	ldr	r7, [r0, #16]
 80129ba:	45b6      	cmp	lr, r6
 80129bc:	803e      	strh	r6, [r7, #0]
 80129be:	807a      	strh	r2, [r7, #2]
 80129c0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80129c4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80129c8:	d1c5      	bne.n	8012956 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80129ca:	9a04      	ldr	r2, [sp, #16]
 80129cc:	1ad3      	subs	r3, r2, r3
 80129ce:	6902      	ldr	r2, [r0, #16]
 80129d0:	8891      	ldrh	r1, [r2, #4]
 80129d2:	88d6      	ldrh	r6, [r2, #6]
 80129d4:	4419      	add	r1, r3
 80129d6:	8091      	strh	r1, [r2, #4]
 80129d8:	9902      	ldr	r1, [sp, #8]
 80129da:	f101 0c20 	add.w	ip, r1, #32
 80129de:	9901      	ldr	r1, [sp, #4]
 80129e0:	ebac 0c01 	sub.w	ip, ip, r1
 80129e4:	fb03 630c 	mla	r3, r3, ip, r6
 80129e8:	80d3      	strh	r3, [r2, #6]
 80129ea:	e74c      	b.n	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80129ec:	9d05      	ldr	r5, [sp, #20]
 80129ee:	1aa2      	subs	r2, r4, r2
 80129f0:	eba5 0501 	sub.w	r5, r5, r1
 80129f4:	9508      	str	r5, [sp, #32]
 80129f6:	9202      	str	r2, [sp, #8]
 80129f8:	f140 8128 	bpl.w	8012c4c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80129fc:	9a03      	ldr	r2, [sp, #12]
 80129fe:	2a00      	cmp	r2, #0
 8012a00:	f6ff af41 	blt.w	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a04:	9a02      	ldr	r2, [sp, #8]
 8012a06:	4252      	negs	r2, r2
 8012a08:	9202      	str	r2, [sp, #8]
 8012a0a:	9a06      	ldr	r2, [sp, #24]
 8012a0c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012a10:	f04f 34ff 	mov.w	r4, #4294967295
 8012a14:	9206      	str	r2, [sp, #24]
 8012a16:	462a      	mov	r2, r5
 8012a18:	940b      	str	r4, [sp, #44]	; 0x2c
 8012a1a:	435a      	muls	r2, r3
 8012a1c:	2400      	movs	r4, #0
 8012a1e:	9d02      	ldr	r5, [sp, #8]
 8012a20:	9401      	str	r4, [sp, #4]
 8012a22:	9c02      	ldr	r4, [sp, #8]
 8012a24:	fb92 f4f4 	sdiv	r4, r2, r4
 8012a28:	fb05 2214 	mls	r2, r5, r4, r2
 8012a2c:	2a00      	cmp	r2, #0
 8012a2e:	9207      	str	r2, [sp, #28]
 8012a30:	bfbc      	itt	lt
 8012a32:	1952      	addlt	r2, r2, r5
 8012a34:	9207      	strlt	r2, [sp, #28]
 8012a36:	9a01      	ldr	r2, [sp, #4]
 8012a38:	6905      	ldr	r5, [r0, #16]
 8012a3a:	bfb8      	it	lt
 8012a3c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012a40:	eb04 0901 	add.w	r9, r4, r1
 8012a44:	429a      	cmp	r2, r3
 8012a46:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012a4a:	f040 8112 	bne.w	8012c72 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012a4e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012a52:	429e      	cmp	r6, r3
 8012a54:	d104      	bne.n	8012a60 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012a56:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012a5a:	9a03      	ldr	r2, [sp, #12]
 8012a5c:	429a      	cmp	r2, r3
 8012a5e:	d01b      	beq.n	8012a98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a60:	88ea      	ldrh	r2, [r5, #6]
 8012a62:	88ab      	ldrh	r3, [r5, #4]
 8012a64:	4313      	orrs	r3, r2
 8012a66:	d010      	beq.n	8012a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a68:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012a6c:	2a00      	cmp	r2, #0
 8012a6e:	db0c      	blt.n	8012a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a70:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012a72:	429a      	cmp	r2, r3
 8012a74:	da09      	bge.n	8012a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a76:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012a7a:	429a      	cmp	r2, r3
 8012a7c:	bf38      	it	cc
 8012a7e:	3508      	addcc	r5, #8
 8012a80:	f102 0201 	add.w	r2, r2, #1
 8012a84:	bf38      	it	cc
 8012a86:	6105      	strcc	r5, [r0, #16]
 8012a88:	6082      	str	r2, [r0, #8]
 8012a8a:	6903      	ldr	r3, [r0, #16]
 8012a8c:	9a03      	ldr	r2, [sp, #12]
 8012a8e:	805a      	strh	r2, [r3, #2]
 8012a90:	2200      	movs	r2, #0
 8012a92:	801e      	strh	r6, [r3, #0]
 8012a94:	809a      	strh	r2, [r3, #4]
 8012a96:	80da      	strh	r2, [r3, #6]
 8012a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012a9a:	9a03      	ldr	r2, [sp, #12]
 8012a9c:	6901      	ldr	r1, [r0, #16]
 8012a9e:	441a      	add	r2, r3
 8012aa0:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012aa4:	42b3      	cmp	r3, r6
 8012aa6:	d103      	bne.n	8012ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012aa8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012aac:	429a      	cmp	r2, r3
 8012aae:	d01a      	beq.n	8012ae6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012ab0:	88cc      	ldrh	r4, [r1, #6]
 8012ab2:	888b      	ldrh	r3, [r1, #4]
 8012ab4:	4323      	orrs	r3, r4
 8012ab6:	d010      	beq.n	8012ada <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ab8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012abc:	2c00      	cmp	r4, #0
 8012abe:	db0c      	blt.n	8012ada <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ac0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ac2:	429c      	cmp	r4, r3
 8012ac4:	da09      	bge.n	8012ada <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ac6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012aca:	429c      	cmp	r4, r3
 8012acc:	bf38      	it	cc
 8012ace:	3108      	addcc	r1, #8
 8012ad0:	f104 0401 	add.w	r4, r4, #1
 8012ad4:	bf38      	it	cc
 8012ad6:	6101      	strcc	r1, [r0, #16]
 8012ad8:	6084      	str	r4, [r0, #8]
 8012ada:	6903      	ldr	r3, [r0, #16]
 8012adc:	2100      	movs	r1, #0
 8012ade:	801e      	strh	r6, [r3, #0]
 8012ae0:	805a      	strh	r2, [r3, #2]
 8012ae2:	8099      	strh	r1, [r3, #4]
 8012ae4:	80d9      	strh	r1, [r3, #6]
 8012ae6:	9b06      	ldr	r3, [sp, #24]
 8012ae8:	4293      	cmp	r3, r2
 8012aea:	f000 8082 	beq.w	8012bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012aee:	9b08      	ldr	r3, [sp, #32]
 8012af0:	9c02      	ldr	r4, [sp, #8]
 8012af2:	9902      	ldr	r1, [sp, #8]
 8012af4:	015b      	lsls	r3, r3, #5
 8012af6:	fb93 f1f1 	sdiv	r1, r3, r1
 8012afa:	fb04 3311 	mls	r3, r4, r1, r3
 8012afe:	2b00      	cmp	r3, #0
 8012b00:	9103      	str	r1, [sp, #12]
 8012b02:	9308      	str	r3, [sp, #32]
 8012b04:	da04      	bge.n	8012b10 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012b06:	1e4b      	subs	r3, r1, #1
 8012b08:	9303      	str	r3, [sp, #12]
 8012b0a:	9b08      	ldr	r3, [sp, #32]
 8012b0c:	4423      	add	r3, r4
 8012b0e:	9308      	str	r3, [sp, #32]
 8012b10:	9b07      	ldr	r3, [sp, #28]
 8012b12:	9902      	ldr	r1, [sp, #8]
 8012b14:	1a5b      	subs	r3, r3, r1
 8012b16:	9307      	str	r3, [sp, #28]
 8012b18:	9b01      	ldr	r3, [sp, #4]
 8012b1a:	f1c3 0320 	rsb	r3, r3, #32
 8012b1e:	930e      	str	r3, [sp, #56]	; 0x38
 8012b20:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012b22:	9b01      	ldr	r3, [sp, #4]
 8012b24:	1a5b      	subs	r3, r3, r1
 8012b26:	464f      	mov	r7, r9
 8012b28:	930a      	str	r3, [sp, #40]	; 0x28
 8012b2a:	2600      	movs	r6, #0
 8012b2c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012b30:	185b      	adds	r3, r3, r1
 8012b32:	bf58      	it	pl
 8012b34:	9902      	ldrpl	r1, [sp, #8]
 8012b36:	9307      	str	r3, [sp, #28]
 8012b38:	bf5d      	ittte	pl
 8012b3a:	1a5b      	subpl	r3, r3, r1
 8012b3c:	9307      	strpl	r3, [sp, #28]
 8012b3e:	9b03      	ldrpl	r3, [sp, #12]
 8012b40:	9903      	ldrmi	r1, [sp, #12]
 8012b42:	bf58      	it	pl
 8012b44:	1c59      	addpl	r1, r3, #1
 8012b46:	4489      	add	r9, r1
 8012b48:	2a00      	cmp	r2, #0
 8012b4a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012b4e:	db2e      	blt.n	8012bae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b50:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b52:	4293      	cmp	r3, r2
 8012b54:	dd2b      	ble.n	8012bae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b56:	9c01      	ldr	r4, [sp, #4]
 8012b58:	6905      	ldr	r5, [r0, #16]
 8012b5a:	46a0      	mov	r8, r4
 8012b5c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012b5e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012b62:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012b66:	45a0      	cmp	r8, r4
 8012b68:	f040 814f 	bne.w	8012e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012b6c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012b70:	4551      	cmp	r1, sl
 8012b72:	d103      	bne.n	8012b7c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012b74:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b78:	4291      	cmp	r1, r2
 8012b7a:	d018      	beq.n	8012bae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b7c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012b80:	d00f      	beq.n	8012ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b82:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b86:	2900      	cmp	r1, #0
 8012b88:	db0b      	blt.n	8012ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b8a:	428b      	cmp	r3, r1
 8012b8c:	dd09      	ble.n	8012ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b8e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012b92:	4299      	cmp	r1, r3
 8012b94:	bf38      	it	cc
 8012b96:	3508      	addcc	r5, #8
 8012b98:	f101 0101 	add.w	r1, r1, #1
 8012b9c:	bf38      	it	cc
 8012b9e:	6105      	strcc	r5, [r0, #16]
 8012ba0:	6081      	str	r1, [r0, #8]
 8012ba2:	6903      	ldr	r3, [r0, #16]
 8012ba4:	f8a3 a000 	strh.w	sl, [r3]
 8012ba8:	805a      	strh	r2, [r3, #2]
 8012baa:	809e      	strh	r6, [r3, #4]
 8012bac:	80de      	strh	r6, [r3, #6]
 8012bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012bb0:	6901      	ldr	r1, [r0, #16]
 8012bb2:	441a      	add	r2, r3
 8012bb4:	88cc      	ldrh	r4, [r1, #6]
 8012bb6:	888b      	ldrh	r3, [r1, #4]
 8012bb8:	4323      	orrs	r3, r4
 8012bba:	d010      	beq.n	8012bde <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bbc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012bc0:	2c00      	cmp	r4, #0
 8012bc2:	db0c      	blt.n	8012bde <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bc4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012bc6:	429c      	cmp	r4, r3
 8012bc8:	da09      	bge.n	8012bde <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bca:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012bce:	429c      	cmp	r4, r3
 8012bd0:	bf38      	it	cc
 8012bd2:	3108      	addcc	r1, #8
 8012bd4:	f104 0401 	add.w	r4, r4, #1
 8012bd8:	bf38      	it	cc
 8012bda:	6101      	strcc	r1, [r0, #16]
 8012bdc:	6084      	str	r4, [r0, #8]
 8012bde:	6903      	ldr	r3, [r0, #16]
 8012be0:	f8a3 a000 	strh.w	sl, [r3]
 8012be4:	805a      	strh	r2, [r3, #2]
 8012be6:	809e      	strh	r6, [r3, #4]
 8012be8:	80de      	strh	r6, [r3, #6]
 8012bea:	9b06      	ldr	r3, [sp, #24]
 8012bec:	4293      	cmp	r3, r2
 8012bee:	464f      	mov	r7, r9
 8012bf0:	d19c      	bne.n	8012b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012bf2:	9b01      	ldr	r3, [sp, #4]
 8012bf4:	6907      	ldr	r7, [r0, #16]
 8012bf6:	f1c3 0620 	rsb	r6, r3, #32
 8012bfa:	9b05      	ldr	r3, [sp, #20]
 8012bfc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012c00:	9b04      	ldr	r3, [sp, #16]
 8012c02:	429e      	cmp	r6, r3
 8012c04:	f040 81cc 	bne.w	8012fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012c08:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012c0c:	459e      	cmp	lr, r3
 8012c0e:	d104      	bne.n	8012c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012c10:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c14:	429a      	cmp	r2, r3
 8012c16:	f43f ae36 	beq.w	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c1a:	88f9      	ldrh	r1, [r7, #6]
 8012c1c:	88bb      	ldrh	r3, [r7, #4]
 8012c1e:	430b      	orrs	r3, r1
 8012c20:	d010      	beq.n	8012c44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c22:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c26:	2b00      	cmp	r3, #0
 8012c28:	db0c      	blt.n	8012c44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c2a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012c2c:	428b      	cmp	r3, r1
 8012c2e:	da09      	bge.n	8012c44 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c30:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012c34:	428b      	cmp	r3, r1
 8012c36:	bf38      	it	cc
 8012c38:	3708      	addcc	r7, #8
 8012c3a:	f103 0301 	add.w	r3, r3, #1
 8012c3e:	bf38      	it	cc
 8012c40:	6107      	strcc	r7, [r0, #16]
 8012c42:	6083      	str	r3, [r0, #8]
 8012c44:	6903      	ldr	r3, [r0, #16]
 8012c46:	f8a3 e000 	strh.w	lr, [r3]
 8012c4a:	e5ff      	b.n	801284c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012c4c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012c4e:	9c03      	ldr	r4, [sp, #12]
 8012c50:	42a2      	cmp	r2, r4
 8012c52:	f6ff ae18 	blt.w	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c56:	9c06      	ldr	r4, [sp, #24]
 8012c58:	42a2      	cmp	r2, r4
 8012c5a:	bfb8      	it	lt
 8012c5c:	3201      	addlt	r2, #1
 8012c5e:	9c08      	ldr	r4, [sp, #32]
 8012c60:	bfb8      	it	lt
 8012c62:	9206      	strlt	r2, [sp, #24]
 8012c64:	f1c3 0220 	rsb	r2, r3, #32
 8012c68:	4362      	muls	r2, r4
 8012c6a:	2401      	movs	r4, #1
 8012c6c:	940b      	str	r4, [sp, #44]	; 0x2c
 8012c6e:	2420      	movs	r4, #32
 8012c70:	e6d5      	b.n	8012a1e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012c72:	f009 021f 	and.w	r2, r9, #31
 8012c76:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012c7a:	920c      	str	r2, [sp, #48]	; 0x30
 8012c7c:	9a01      	ldr	r2, [sp, #4]
 8012c7e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012c82:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012c86:	45b0      	cmp	r8, r6
 8012c88:	f001 011f 	and.w	r1, r1, #31
 8012c8c:	eba2 0203 	sub.w	r2, r2, r3
 8012c90:	d108      	bne.n	8012ca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012c92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c94:	4419      	add	r1, r3
 8012c96:	4496      	add	lr, r2
 8012c98:	fb02 a101 	mla	r1, r2, r1, sl
 8012c9c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012ca0:	80e9      	strh	r1, [r5, #6]
 8012ca2:	e6f9      	b.n	8012a98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012ca4:	2c00      	cmp	r4, #0
 8012ca6:	f2c0 80a9 	blt.w	8012dfc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012caa:	2701      	movs	r7, #1
 8012cac:	f1c1 0c20 	rsb	ip, r1, #32
 8012cb0:	970a      	str	r7, [sp, #40]	; 0x28
 8012cb2:	fb02 f20c 	mul.w	r2, r2, ip
 8012cb6:	2720      	movs	r7, #32
 8012cb8:	9709      	str	r7, [sp, #36]	; 0x24
 8012cba:	fb92 fcf4 	sdiv	ip, r2, r4
 8012cbe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012cc0:	fb04 221c 	mls	r2, r4, ip, r2
 8012cc4:	2a00      	cmp	r2, #0
 8012cc6:	bfb8      	it	lt
 8012cc8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012ccc:	4439      	add	r1, r7
 8012cce:	fb0c a101 	mla	r1, ip, r1, sl
 8012cd2:	80e9      	strh	r1, [r5, #6]
 8012cd4:	44e6      	add	lr, ip
 8012cd6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012cd8:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012cdc:	eb08 0501 	add.w	r5, r8, r1
 8012ce0:	6901      	ldr	r1, [r0, #16]
 8012ce2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012ce6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012cea:	bfb8      	it	lt
 8012cec:	1912      	addlt	r2, r2, r4
 8012cee:	ea58 070e 	orrs.w	r7, r8, lr
 8012cf2:	d010      	beq.n	8012d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012cf4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012cf8:	f1be 0f00 	cmp.w	lr, #0
 8012cfc:	db0b      	blt.n	8012d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012cfe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d00:	45be      	cmp	lr, r7
 8012d02:	da08      	bge.n	8012d16 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d04:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012d08:	45be      	cmp	lr, r7
 8012d0a:	bf3c      	itt	cc
 8012d0c:	3108      	addcc	r1, #8
 8012d0e:	6101      	strcc	r1, [r0, #16]
 8012d10:	f10e 0101 	add.w	r1, lr, #1
 8012d14:	6081      	str	r1, [r0, #8]
 8012d16:	6901      	ldr	r1, [r0, #16]
 8012d18:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012d1c:	800d      	strh	r5, [r1, #0]
 8012d1e:	f04f 0e00 	mov.w	lr, #0
 8012d22:	42ae      	cmp	r6, r5
 8012d24:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012d28:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012d2c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012d30:	4463      	add	r3, ip
 8012d32:	d054      	beq.n	8012dde <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012d34:	9901      	ldr	r1, [sp, #4]
 8012d36:	1ac9      	subs	r1, r1, r3
 8012d38:	4461      	add	r1, ip
 8012d3a:	0149      	lsls	r1, r1, #5
 8012d3c:	fb91 fef4 	sdiv	lr, r1, r4
 8012d40:	fb04 111e 	mls	r1, r4, lr, r1
 8012d44:	2900      	cmp	r1, #0
 8012d46:	bfb8      	it	lt
 8012d48:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012d4c:	f10e 0701 	add.w	r7, lr, #1
 8012d50:	bfb8      	it	lt
 8012d52:	1909      	addlt	r1, r1, r4
 8012d54:	1b12      	subs	r2, r2, r4
 8012d56:	970d      	str	r7, [sp, #52]	; 0x34
 8012d58:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012d5c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012d5e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012d62:	1852      	adds	r2, r2, r1
 8012d64:	bf54      	ite	pl
 8012d66:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012d6a:	46f4      	movmi	ip, lr
 8012d6c:	44e3      	add	fp, ip
 8012d6e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012d72:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012d76:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012d7a:	f8aa b006 	strh.w	fp, [sl, #6]
 8012d7e:	4463      	add	r3, ip
 8012d80:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d84:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012d88:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012d8c:	bf58      	it	pl
 8012d8e:	1b12      	subpl	r2, r2, r4
 8012d90:	443d      	add	r5, r7
 8012d92:	ea5b 070a 	orrs.w	r7, fp, sl
 8012d96:	d014      	beq.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012d98:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012d9c:	f1ba 0f00 	cmp.w	sl, #0
 8012da0:	db0f      	blt.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012da2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012da4:	45ba      	cmp	sl, r7
 8012da6:	da0c      	bge.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012da8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012dac:	45ba      	cmp	sl, r7
 8012dae:	bf38      	it	cc
 8012db0:	f10c 0c08 	addcc.w	ip, ip, #8
 8012db4:	f10a 0a01 	add.w	sl, sl, #1
 8012db8:	bf38      	it	cc
 8012dba:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012dbe:	f8c0 a008 	str.w	sl, [r0, #8]
 8012dc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dc6:	f04f 0700 	mov.w	r7, #0
 8012dca:	42ae      	cmp	r6, r5
 8012dcc:	f8ac 5000 	strh.w	r5, [ip]
 8012dd0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012dd4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012dd8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012ddc:	d1bc      	bne.n	8012d58 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012dde:	6904      	ldr	r4, [r0, #16]
 8012de0:	9a01      	ldr	r2, [sp, #4]
 8012de2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012de4:	1ad3      	subs	r3, r2, r3
 8012de6:	88a2      	ldrh	r2, [r4, #4]
 8012de8:	441a      	add	r2, r3
 8012dea:	80a2      	strh	r2, [r4, #4]
 8012dec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012dee:	3120      	adds	r1, #32
 8012df0:	1a89      	subs	r1, r1, r2
 8012df2:	88e2      	ldrh	r2, [r4, #6]
 8012df4:	fb03 2301 	mla	r3, r3, r1, r2
 8012df8:	80e3      	strh	r3, [r4, #6]
 8012dfa:	e64d      	b.n	8012a98 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012dfc:	f04f 37ff 	mov.w	r7, #4294967295
 8012e00:	970a      	str	r7, [sp, #40]	; 0x28
 8012e02:	434a      	muls	r2, r1
 8012e04:	4264      	negs	r4, r4
 8012e06:	2700      	movs	r7, #0
 8012e08:	e756      	b.n	8012cb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012e0a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012e0e:	f009 031f 	and.w	r3, r9, #31
 8012e12:	45d0      	cmp	r8, sl
 8012e14:	f007 071f 	and.w	r7, r7, #31
 8012e18:	930f      	str	r3, [sp, #60]	; 0x3c
 8012e1a:	fa1f fc8c 	uxth.w	ip, ip
 8012e1e:	fa1f fe8e 	uxth.w	lr, lr
 8012e22:	d10a      	bne.n	8012e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e26:	449c      	add	ip, r3
 8012e28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012e2a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e2e:	441f      	add	r7, r3
 8012e30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e32:	fb03 e707 	mla	r7, r3, r7, lr
 8012e36:	80ef      	strh	r7, [r5, #6]
 8012e38:	e6b9      	b.n	8012bae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e3a:	2900      	cmp	r1, #0
 8012e3c:	f2c0 80a8 	blt.w	8012f90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012e40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012e42:	f1c7 0320 	rsb	r3, r7, #32
 8012e46:	4363      	muls	r3, r4
 8012e48:	2401      	movs	r4, #1
 8012e4a:	940d      	str	r4, [sp, #52]	; 0x34
 8012e4c:	2420      	movs	r4, #32
 8012e4e:	940c      	str	r4, [sp, #48]	; 0x30
 8012e50:	fb93 f4f1 	sdiv	r4, r3, r1
 8012e54:	fb01 3b14 	mls	fp, r1, r4, r3
 8012e58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e5a:	f1bb 0f00 	cmp.w	fp, #0
 8012e5e:	bfb8      	it	lt
 8012e60:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012e64:	441f      	add	r7, r3
 8012e66:	fb04 e707 	mla	r7, r4, r7, lr
 8012e6a:	44a4      	add	ip, r4
 8012e6c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e70:	80ef      	strh	r7, [r5, #6]
 8012e72:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e78:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012e7c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e80:	bfb8      	it	lt
 8012e82:	448b      	addlt	fp, r1
 8012e84:	eb08 0503 	add.w	r5, r8, r3
 8012e88:	ea5e 0307 	orrs.w	r3, lr, r7
 8012e8c:	d011      	beq.n	8012eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012e8e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012e92:	f1be 0f00 	cmp.w	lr, #0
 8012e96:	db0c      	blt.n	8012eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012e98:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e9a:	45be      	cmp	lr, r7
 8012e9c:	da09      	bge.n	8012eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012e9e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012ea2:	45be      	cmp	lr, r7
 8012ea4:	bf3c      	itt	cc
 8012ea6:	f10c 0708 	addcc.w	r7, ip, #8
 8012eaa:	6107      	strcc	r7, [r0, #16]
 8012eac:	f10e 0701 	add.w	r7, lr, #1
 8012eb0:	6087      	str	r7, [r0, #8]
 8012eb2:	6907      	ldr	r7, [r0, #16]
 8012eb4:	b213      	sxth	r3, r2
 8012eb6:	9310      	str	r3, [sp, #64]	; 0x40
 8012eb8:	807b      	strh	r3, [r7, #2]
 8012eba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ebc:	803d      	strh	r5, [r7, #0]
 8012ebe:	4555      	cmp	r5, sl
 8012ec0:	80be      	strh	r6, [r7, #4]
 8012ec2:	80fe      	strh	r6, [r7, #6]
 8012ec4:	eb04 0c03 	add.w	ip, r4, r3
 8012ec8:	d051      	beq.n	8012f6e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012eca:	9b01      	ldr	r3, [sp, #4]
 8012ecc:	eba3 070c 	sub.w	r7, r3, ip
 8012ed0:	443c      	add	r4, r7
 8012ed2:	0164      	lsls	r4, r4, #5
 8012ed4:	fb94 f8f1 	sdiv	r8, r4, r1
 8012ed8:	fb01 4418 	mls	r4, r1, r8, r4
 8012edc:	2c00      	cmp	r4, #0
 8012ede:	bfb8      	it	lt
 8012ee0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012ee4:	ebab 0301 	sub.w	r3, fp, r1
 8012ee8:	f108 0701 	add.w	r7, r8, #1
 8012eec:	bfb8      	it	lt
 8012eee:	1864      	addlt	r4, r4, r1
 8012ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8012ef2:	9711      	str	r7, [sp, #68]	; 0x44
 8012ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ef6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012efa:	191b      	adds	r3, r3, r4
 8012efc:	bf58      	it	pl
 8012efe:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012f00:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012f04:	9309      	str	r3, [sp, #36]	; 0x24
 8012f06:	bf48      	it	mi
 8012f08:	4647      	movmi	r7, r8
 8012f0a:	44bb      	add	fp, r7
 8012f0c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012f10:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f14:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012f18:	f8ae b006 	strh.w	fp, [lr, #6]
 8012f1c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f20:	44bc      	add	ip, r7
 8012f22:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012f24:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f28:	443d      	add	r5, r7
 8012f2a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012f2e:	bf5c      	itt	pl
 8012f30:	1a5b      	subpl	r3, r3, r1
 8012f32:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012f34:	ea5b 0307 	orrs.w	r3, fp, r7
 8012f38:	d011      	beq.n	8012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f3a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012f3e:	f1bb 0f00 	cmp.w	fp, #0
 8012f42:	db0c      	blt.n	8012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f44:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f46:	45bb      	cmp	fp, r7
 8012f48:	da09      	bge.n	8012f5e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f4a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012f4e:	45bb      	cmp	fp, r7
 8012f50:	bf3c      	itt	cc
 8012f52:	f10e 0708 	addcc.w	r7, lr, #8
 8012f56:	6107      	strcc	r7, [r0, #16]
 8012f58:	f10b 0701 	add.w	r7, fp, #1
 8012f5c:	6087      	str	r7, [r0, #8]
 8012f5e:	6907      	ldr	r7, [r0, #16]
 8012f60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f62:	803d      	strh	r5, [r7, #0]
 8012f64:	4555      	cmp	r5, sl
 8012f66:	807b      	strh	r3, [r7, #2]
 8012f68:	80be      	strh	r6, [r7, #4]
 8012f6a:	80fe      	strh	r6, [r7, #6]
 8012f6c:	d1c2      	bne.n	8012ef4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012f6e:	9b01      	ldr	r3, [sp, #4]
 8012f70:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012f72:	eba3 0c0c 	sub.w	ip, r3, ip
 8012f76:	6903      	ldr	r3, [r0, #16]
 8012f78:	8899      	ldrh	r1, [r3, #4]
 8012f7a:	4461      	add	r1, ip
 8012f7c:	8099      	strh	r1, [r3, #4]
 8012f7e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012f80:	3720      	adds	r7, #32
 8012f82:	1a7f      	subs	r7, r7, r1
 8012f84:	88d9      	ldrh	r1, [r3, #6]
 8012f86:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012f8a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012f8e:	e60e      	b.n	8012bae <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012f90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012f92:	f04f 34ff 	mov.w	r4, #4294967295
 8012f96:	940d      	str	r4, [sp, #52]	; 0x34
 8012f98:	437b      	muls	r3, r7
 8012f9a:	4249      	negs	r1, r1
 8012f9c:	2400      	movs	r4, #0
 8012f9e:	e756      	b.n	8012e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012fa0:	9905      	ldr	r1, [sp, #20]
 8012fa2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012fa6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012faa:	f001 011f 	and.w	r1, r1, #31
 8012fae:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012fb2:	9102      	str	r1, [sp, #8]
 8012fb4:	9904      	ldr	r1, [sp, #16]
 8012fb6:	45f3      	cmp	fp, lr
 8012fb8:	f009 0c1f 	and.w	ip, r9, #31
 8012fbc:	eba1 0406 	sub.w	r4, r1, r6
 8012fc0:	d108      	bne.n	8012fd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012fc2:	9b02      	ldr	r3, [sp, #8]
 8012fc4:	449c      	add	ip, r3
 8012fc6:	44a0      	add	r8, r4
 8012fc8:	fb04 a40c 	mla	r4, r4, ip, sl
 8012fcc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012fd0:	80fc      	strh	r4, [r7, #6]
 8012fd2:	e458      	b.n	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012fd4:	9905      	ldr	r1, [sp, #20]
 8012fd6:	ebb1 0109 	subs.w	r1, r1, r9
 8012fda:	bf5b      	ittet	pl
 8012fdc:	f1cc 0520 	rsbpl	r5, ip, #32
 8012fe0:	436c      	mulpl	r4, r5
 8012fe2:	2500      	movmi	r5, #0
 8012fe4:	2520      	movpl	r5, #32
 8012fe6:	bf44      	itt	mi
 8012fe8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012fec:	4249      	negmi	r1, r1
 8012fee:	9501      	str	r5, [sp, #4]
 8012ff0:	9b01      	ldr	r3, [sp, #4]
 8012ff2:	fb94 f5f1 	sdiv	r5, r4, r1
 8012ff6:	fb01 4415 	mls	r4, r1, r5, r4
 8012ffa:	bf54      	ite	pl
 8012ffc:	f04f 0901 	movpl.w	r9, #1
 8013000:	f04f 39ff 	movmi.w	r9, #4294967295
 8013004:	2c00      	cmp	r4, #0
 8013006:	bfb8      	it	lt
 8013008:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801300c:	449c      	add	ip, r3
 801300e:	44a8      	add	r8, r5
 8013010:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013014:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013018:	f8a7 c006 	strh.w	ip, [r7, #6]
 801301c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013020:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013024:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013028:	bfb8      	it	lt
 801302a:	1864      	addlt	r4, r4, r1
 801302c:	ea58 0707 	orrs.w	r7, r8, r7
 8013030:	eb0b 0309 	add.w	r3, fp, r9
 8013034:	d011      	beq.n	801305a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013036:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801303a:	f1b8 0f00 	cmp.w	r8, #0
 801303e:	db0c      	blt.n	801305a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013040:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013042:	45b8      	cmp	r8, r7
 8013044:	da09      	bge.n	801305a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013046:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801304a:	45b8      	cmp	r8, r7
 801304c:	bf3c      	itt	cc
 801304e:	f10c 0708 	addcc.w	r7, ip, #8
 8013052:	6107      	strcc	r7, [r0, #16]
 8013054:	f108 0701 	add.w	r7, r8, #1
 8013058:	6087      	str	r7, [r0, #8]
 801305a:	6907      	ldr	r7, [r0, #16]
 801305c:	f04f 0c00 	mov.w	ip, #0
 8013060:	b212      	sxth	r2, r2
 8013062:	459e      	cmp	lr, r3
 8013064:	803b      	strh	r3, [r7, #0]
 8013066:	807a      	strh	r2, [r7, #2]
 8013068:	f8a7 c004 	strh.w	ip, [r7, #4]
 801306c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013070:	442e      	add	r6, r5
 8013072:	d04d      	beq.n	8013110 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013074:	9f04      	ldr	r7, [sp, #16]
 8013076:	1bbf      	subs	r7, r7, r6
 8013078:	443d      	add	r5, r7
 801307a:	016d      	lsls	r5, r5, #5
 801307c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013080:	fb01 5518 	mls	r5, r1, r8, r5
 8013084:	4565      	cmp	r5, ip
 8013086:	bfb8      	it	lt
 8013088:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801308c:	f108 0701 	add.w	r7, r8, #1
 8013090:	bfb8      	it	lt
 8013092:	186d      	addlt	r5, r5, r1
 8013094:	1a64      	subs	r4, r4, r1
 8013096:	9703      	str	r7, [sp, #12]
 8013098:	f04f 0a00 	mov.w	sl, #0
 801309c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130a0:	1964      	adds	r4, r4, r5
 80130a2:	bf58      	it	pl
 80130a4:	9f03      	ldrpl	r7, [sp, #12]
 80130a6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80130aa:	bf48      	it	mi
 80130ac:	4647      	movmi	r7, r8
 80130ae:	44bb      	add	fp, r7
 80130b0:	f8ac b004 	strh.w	fp, [ip, #4]
 80130b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130b8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80130bc:	f8ac b006 	strh.w	fp, [ip, #6]
 80130c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130c4:	443e      	add	r6, r7
 80130c6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130ca:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80130ce:	bf58      	it	pl
 80130d0:	1a64      	subpl	r4, r4, r1
 80130d2:	ea5b 0707 	orrs.w	r7, fp, r7
 80130d6:	444b      	add	r3, r9
 80130d8:	d011      	beq.n	80130fe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130da:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80130de:	f1bb 0f00 	cmp.w	fp, #0
 80130e2:	db0c      	blt.n	80130fe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130e4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80130e6:	45bb      	cmp	fp, r7
 80130e8:	da09      	bge.n	80130fe <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130ea:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80130ee:	45bb      	cmp	fp, r7
 80130f0:	bf3c      	itt	cc
 80130f2:	f10c 0708 	addcc.w	r7, ip, #8
 80130f6:	6107      	strcc	r7, [r0, #16]
 80130f8:	f10b 0701 	add.w	r7, fp, #1
 80130fc:	6087      	str	r7, [r0, #8]
 80130fe:	6907      	ldr	r7, [r0, #16]
 8013100:	459e      	cmp	lr, r3
 8013102:	803b      	strh	r3, [r7, #0]
 8013104:	807a      	strh	r2, [r7, #2]
 8013106:	f8a7 a004 	strh.w	sl, [r7, #4]
 801310a:	f8a7 a006 	strh.w	sl, [r7, #6]
 801310e:	d1c5      	bne.n	801309c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013110:	9b04      	ldr	r3, [sp, #16]
 8013112:	1b9e      	subs	r6, r3, r6
 8013114:	6903      	ldr	r3, [r0, #16]
 8013116:	889a      	ldrh	r2, [r3, #4]
 8013118:	4432      	add	r2, r6
 801311a:	809a      	strh	r2, [r3, #4]
 801311c:	9a02      	ldr	r2, [sp, #8]
 801311e:	f102 0c20 	add.w	ip, r2, #32
 8013122:	9a01      	ldr	r2, [sp, #4]
 8013124:	ebac 0c02 	sub.w	ip, ip, r2
 8013128:	88da      	ldrh	r2, [r3, #6]
 801312a:	fb06 260c 	mla	r6, r6, ip, r2
 801312e:	80de      	strh	r6, [r3, #6]
 8013130:	f7ff bba9 	b.w	8012886 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013134 <_ZN8touchgfx7Outline6lineToEii>:
 8013134:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013136:	079b      	lsls	r3, r3, #30
 8013138:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801313a:	460e      	mov	r6, r1
 801313c:	4615      	mov	r5, r2
 801313e:	d511      	bpl.n	8013164 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013140:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013144:	ea86 0701 	eor.w	r7, r6, r1
 8013148:	ea85 0302 	eor.w	r3, r5, r2
 801314c:	433b      	orrs	r3, r7
 801314e:	d009      	beq.n	8013164 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013150:	4633      	mov	r3, r6
 8013152:	9500      	str	r5, [sp, #0]
 8013154:	f7ff fb3e 	bl	80127d4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013158:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801315a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801315e:	f043 0301 	orr.w	r3, r3, #1
 8013162:	6243      	str	r3, [r0, #36]	; 0x24
 8013164:	b003      	add	sp, #12
 8013166:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013168 <_ZN8touchgfx7Outline6moveToEii>:
 8013168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801316a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801316c:	4615      	mov	r5, r2
 801316e:	079a      	lsls	r2, r3, #30
 8013170:	4604      	mov	r4, r0
 8013172:	460e      	mov	r6, r1
 8013174:	d401      	bmi.n	801317a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013176:	f7ff faf9 	bl	801276c <_ZN8touchgfx7Outline5resetEv>
 801317a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801317c:	07db      	lsls	r3, r3, #31
 801317e:	d504      	bpl.n	801318a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013180:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013184:	4620      	mov	r0, r4
 8013186:	f7ff ffd5 	bl	8013134 <_ZN8touchgfx7Outline6lineToEii>
 801318a:	6923      	ldr	r3, [r4, #16]
 801318c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013190:	1170      	asrs	r0, r6, #5
 8013192:	4290      	cmp	r0, r2
 8013194:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013198:	d103      	bne.n	80131a2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801319a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801319e:	4291      	cmp	r1, r2
 80131a0:	d01a      	beq.n	80131d8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80131a2:	88df      	ldrh	r7, [r3, #6]
 80131a4:	889a      	ldrh	r2, [r3, #4]
 80131a6:	433a      	orrs	r2, r7
 80131a8:	d010      	beq.n	80131cc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131aa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131ae:	2a00      	cmp	r2, #0
 80131b0:	db0c      	blt.n	80131cc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131b2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80131b4:	42ba      	cmp	r2, r7
 80131b6:	da09      	bge.n	80131cc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131b8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80131bc:	42ba      	cmp	r2, r7
 80131be:	bf38      	it	cc
 80131c0:	3308      	addcc	r3, #8
 80131c2:	f102 0201 	add.w	r2, r2, #1
 80131c6:	bf38      	it	cc
 80131c8:	6123      	strcc	r3, [r4, #16]
 80131ca:	60a2      	str	r2, [r4, #8]
 80131cc:	6923      	ldr	r3, [r4, #16]
 80131ce:	2200      	movs	r2, #0
 80131d0:	8018      	strh	r0, [r3, #0]
 80131d2:	8059      	strh	r1, [r3, #2]
 80131d4:	809a      	strh	r2, [r3, #4]
 80131d6:	80da      	strh	r2, [r3, #6]
 80131d8:	6166      	str	r6, [r4, #20]
 80131da:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80131de:	6225      	str	r5, [r4, #32]
 80131e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080131e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80131e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80131e6:	b0d0      	sub	sp, #320	; 0x140
 80131e8:	466c      	mov	r4, sp
 80131ea:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80131ee:	4627      	mov	r7, r4
 80131f0:	1a0d      	subs	r5, r1, r0
 80131f2:	2d48      	cmp	r5, #72	; 0x48
 80131f4:	f100 0308 	add.w	r3, r0, #8
 80131f8:	f340 80d5 	ble.w	80133a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80131fc:	112d      	asrs	r5, r5, #4
 80131fe:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013202:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013206:	6816      	ldr	r6, [r2, #0]
 8013208:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801320c:	6006      	str	r6, [r0, #0]
 801320e:	6856      	ldr	r6, [r2, #4]
 8013210:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013214:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013218:	6046      	str	r6, [r0, #4]
 801321a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801321e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013222:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013226:	f8a2 c006 	strh.w	ip, [r2, #6]
 801322a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801322e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013232:	4565      	cmp	r5, ip
 8013234:	f1a1 0208 	sub.w	r2, r1, #8
 8013238:	db06      	blt.n	8013248 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801323a:	d119      	bne.n	8013270 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801323c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013240:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013244:	42ae      	cmp	r6, r5
 8013246:	dd13      	ble.n	8013270 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013248:	460e      	mov	r6, r1
 801324a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801324e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013252:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013256:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801325a:	601d      	str	r5, [r3, #0]
 801325c:	6875      	ldr	r5, [r6, #4]
 801325e:	605d      	str	r5, [r3, #4]
 8013260:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013264:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013268:	f821 8c04 	strh.w	r8, [r1, #-4]
 801326c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013270:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013274:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013278:	42ae      	cmp	r6, r5
 801327a:	db06      	blt.n	801328a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801327c:	d116      	bne.n	80132ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801327e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013282:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013286:	45ac      	cmp	ip, r5
 8013288:	da10      	bge.n	80132ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801328a:	681d      	ldr	r5, [r3, #0]
 801328c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013290:	6005      	str	r5, [r0, #0]
 8013292:	685d      	ldr	r5, [r3, #4]
 8013294:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013298:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801329c:	f8a0 8008 	strh.w	r8, [r0, #8]
 80132a0:	6045      	str	r5, [r0, #4]
 80132a2:	8146      	strh	r6, [r0, #10]
 80132a4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80132a8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80132ac:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80132b0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80132b4:	4565      	cmp	r5, ip
 80132b6:	db06      	blt.n	80132c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80132b8:	d119      	bne.n	80132ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132ba:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80132be:	f9b0 5000 	ldrsh.w	r5, [r0]
 80132c2:	42ae      	cmp	r6, r5
 80132c4:	da13      	bge.n	80132ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132c6:	460e      	mov	r6, r1
 80132c8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80132cc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80132d0:	6005      	str	r5, [r0, #0]
 80132d2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80132d6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80132da:	6875      	ldr	r5, [r6, #4]
 80132dc:	6045      	str	r5, [r0, #4]
 80132de:	f821 9c08 	strh.w	r9, [r1, #-8]
 80132e2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80132e6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80132ea:	f821 ec02 	strh.w	lr, [r1, #-2]
 80132ee:	3308      	adds	r3, #8
 80132f0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80132f4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80132f8:	45e6      	cmp	lr, ip
 80132fa:	dbf8      	blt.n	80132ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132fc:	d105      	bne.n	801330a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80132fe:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013302:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013306:	42ae      	cmp	r6, r5
 8013308:	dbf1      	blt.n	80132ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801330a:	4615      	mov	r5, r2
 801330c:	3a08      	subs	r2, #8
 801330e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013312:	45b4      	cmp	ip, r6
 8013314:	dbf9      	blt.n	801330a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013316:	d105      	bne.n	8013324 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013318:	f9b0 8000 	ldrsh.w	r8, [r0]
 801331c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013320:	45b0      	cmp	r8, r6
 8013322:	dbf2      	blt.n	801330a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013324:	4293      	cmp	r3, r2
 8013326:	f1a5 0608 	sub.w	r6, r5, #8
 801332a:	d816      	bhi.n	801335a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801332c:	f8d6 c000 	ldr.w	ip, [r6]
 8013330:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013334:	f8c3 c000 	str.w	ip, [r3]
 8013338:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801333c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013340:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013344:	f8c3 c004 	str.w	ip, [r3, #4]
 8013348:	f825 ac08 	strh.w	sl, [r5, #-8]
 801334c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013350:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013354:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013358:	e7c9      	b.n	80132ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801335a:	f8d6 e000 	ldr.w	lr, [r6]
 801335e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013362:	f8c0 e000 	str.w	lr, [r0]
 8013366:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801336a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801336e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013372:	f8c0 e004 	str.w	lr, [r0, #4]
 8013376:	f825 ac08 	strh.w	sl, [r5, #-8]
 801337a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801337e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013382:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013386:	1acd      	subs	r5, r1, r3
 8013388:	1a16      	subs	r6, r2, r0
 801338a:	10ed      	asrs	r5, r5, #3
 801338c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013390:	bfb5      	itete	lt
 8013392:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013396:	e9c4 3100 	strdge	r3, r1, [r4]
 801339a:	460a      	movlt	r2, r1
 801339c:	4603      	movge	r3, r0
 801339e:	3408      	adds	r4, #8
 80133a0:	4618      	mov	r0, r3
 80133a2:	4611      	mov	r1, r2
 80133a4:	e724      	b.n	80131f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80133a6:	4299      	cmp	r1, r3
 80133a8:	d928      	bls.n	80133fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80133aa:	f1a3 0210 	sub.w	r2, r3, #16
 80133ae:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80133b2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80133b6:	45ac      	cmp	ip, r5
 80133b8:	db06      	blt.n	80133c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80133ba:	d11d      	bne.n	80133f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133bc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80133c0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80133c4:	42ae      	cmp	r6, r5
 80133c6:	da17      	bge.n	80133f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133c8:	4615      	mov	r5, r2
 80133ca:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80133ce:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80133d2:	6116      	str	r6, [r2, #16]
 80133d4:	686e      	ldr	r6, [r5, #4]
 80133d6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80133da:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80133de:	f8a2 9008 	strh.w	r9, [r2, #8]
 80133e2:	42a8      	cmp	r0, r5
 80133e4:	6156      	str	r6, [r2, #20]
 80133e6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80133ea:	f8a2 800c 	strh.w	r8, [r2, #12]
 80133ee:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80133f2:	f1a2 0208 	sub.w	r2, r2, #8
 80133f6:	d1da      	bne.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80133f8:	3308      	adds	r3, #8
 80133fa:	e7d4      	b.n	80133a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80133fc:	42bc      	cmp	r4, r7
 80133fe:	d903      	bls.n	8013408 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013400:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013404:	3c08      	subs	r4, #8
 8013406:	e6f3      	b.n	80131f0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013408:	b050      	add	sp, #320	; 0x140
 801340a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801340e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801340e:	b510      	push	{r4, lr}
 8013410:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013412:	07da      	lsls	r2, r3, #31
 8013414:	4604      	mov	r4, r0
 8013416:	d507      	bpl.n	8013428 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013418:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801341c:	f7ff fe8a 	bl	8013134 <_ZN8touchgfx7Outline6lineToEii>
 8013420:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013422:	f023 0301 	bic.w	r3, r3, #1
 8013426:	6243      	str	r3, [r0, #36]	; 0x24
 8013428:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801342a:	079b      	lsls	r3, r3, #30
 801342c:	d521      	bpl.n	8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801342e:	6923      	ldr	r3, [r4, #16]
 8013430:	88d9      	ldrh	r1, [r3, #6]
 8013432:	889a      	ldrh	r2, [r3, #4]
 8013434:	430a      	orrs	r2, r1
 8013436:	d010      	beq.n	801345a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013438:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801343c:	2a00      	cmp	r2, #0
 801343e:	db0c      	blt.n	801345a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013440:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013442:	428a      	cmp	r2, r1
 8013444:	da09      	bge.n	801345a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013446:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801344a:	4291      	cmp	r1, r2
 801344c:	bf88      	it	hi
 801344e:	3308      	addhi	r3, #8
 8013450:	f102 0201 	add.w	r2, r2, #1
 8013454:	bf88      	it	hi
 8013456:	6123      	strhi	r3, [r4, #16]
 8013458:	60a2      	str	r2, [r4, #8]
 801345a:	68a1      	ldr	r1, [r4, #8]
 801345c:	b129      	cbz	r1, 801346a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801345e:	6863      	ldr	r3, [r4, #4]
 8013460:	4299      	cmp	r1, r3
 8013462:	d802      	bhi.n	801346a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013464:	68e0      	ldr	r0, [r4, #12]
 8013466:	f7ff febc 	bl	80131e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801346a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801346c:	f023 0302 	bic.w	r3, r3, #2
 8013470:	6263      	str	r3, [r4, #36]	; 0x24
 8013472:	68e0      	ldr	r0, [r4, #12]
 8013474:	bd10      	pop	{r4, pc}
	...

08013478 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013478:	4b02      	ldr	r3, [pc, #8]	; (8013484 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801347a:	6018      	str	r0, [r3, #0]
 801347c:	4b02      	ldr	r3, [pc, #8]	; (8013488 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801347e:	6019      	str	r1, [r3, #0]
 8013480:	4770      	bx	lr
 8013482:	bf00      	nop
 8013484:	200137d4 	.word	0x200137d4
 8013488:	200137d8 	.word	0x200137d8

0801348c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801348c:	4a02      	ldr	r2, [pc, #8]	; (8013498 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801348e:	2300      	movs	r3, #0
 8013490:	6013      	str	r3, [r2, #0]
 8013492:	4a02      	ldr	r2, [pc, #8]	; (801349c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013494:	6013      	str	r3, [r2, #0]
 8013496:	4770      	bx	lr
 8013498:	200137d4 	.word	0x200137d4
 801349c:	200137d8 	.word	0x200137d8

080134a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80134a0:	4b01      	ldr	r3, [pc, #4]	; (80134a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80134a2:	6818      	ldr	r0, [r3, #0]
 80134a4:	4770      	bx	lr
 80134a6:	bf00      	nop
 80134a8:	200137d4 	.word	0x200137d4

080134ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80134ac:	4b01      	ldr	r3, [pc, #4]	; (80134b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80134ae:	6818      	ldr	r0, [r3, #0]
 80134b0:	4770      	bx	lr
 80134b2:	bf00      	nop
 80134b4:	200137d8 	.word	0x200137d8

080134b8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80134b8:	b510      	push	{r4, lr}
 80134ba:	6803      	ldr	r3, [r0, #0]
 80134bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134be:	460c      	mov	r4, r1
 80134c0:	4798      	blx	r3
 80134c2:	1b03      	subs	r3, r0, r4
 80134c4:	4258      	negs	r0, r3
 80134c6:	4158      	adcs	r0, r3
 80134c8:	bd10      	pop	{r4, pc}
	...

080134cc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80134cc:	4b01      	ldr	r3, [pc, #4]	; (80134d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80134ce:	6019      	str	r1, [r3, #0]
 80134d0:	4770      	bx	lr
 80134d2:	bf00      	nop
 80134d4:	200137dc 	.word	0x200137dc

080134d8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80134d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134dc:	4696      	mov	lr, r2
 80134de:	4605      	mov	r5, r0
 80134e0:	4614      	mov	r4, r2
 80134e2:	460e      	mov	r6, r1
 80134e4:	461f      	mov	r7, r3
 80134e6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80134ea:	b097      	sub	sp, #92	; 0x5c
 80134ec:	f10d 0c1c 	add.w	ip, sp, #28
 80134f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80134f4:	f8de 3000 	ldr.w	r3, [lr]
 80134f8:	f8cc 3000 	str.w	r3, [ip]
 80134fc:	f104 0e14 	add.w	lr, r4, #20
 8013500:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013504:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013508:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801350c:	f8de 3000 	ldr.w	r3, [lr]
 8013510:	f8cc 3000 	str.w	r3, [ip]
 8013514:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013518:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801351c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013520:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013524:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013528:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801352c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013530:	f8de 3000 	ldr.w	r3, [lr]
 8013534:	f8cc 3000 	str.w	r3, [ip]
 8013538:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801353a:	682b      	ldr	r3, [r5, #0]
 801353c:	9201      	str	r2, [sp, #4]
 801353e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013542:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013544:	9200      	str	r2, [sp, #0]
 8013546:	f8cd 8008 	str.w	r8, [sp, #8]
 801354a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801354e:	aa07      	add	r2, sp, #28
 8013550:	463b      	mov	r3, r7
 8013552:	4631      	mov	r1, r6
 8013554:	4628      	mov	r0, r5
 8013556:	47d8      	blx	fp
 8013558:	46a6      	mov	lr, r4
 801355a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801355e:	f10d 0c1c 	add.w	ip, sp, #28
 8013562:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013566:	f8de 3000 	ldr.w	r3, [lr]
 801356a:	f8cc 3000 	str.w	r3, [ip]
 801356e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013572:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013576:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801357a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801357e:	343c      	adds	r4, #60	; 0x3c
 8013580:	f8de 3000 	ldr.w	r3, [lr]
 8013584:	f8cc 3000 	str.w	r3, [ip]
 8013588:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801358a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801358e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013592:	6823      	ldr	r3, [r4, #0]
 8013594:	f8cc 3000 	str.w	r3, [ip]
 8013598:	682b      	ldr	r3, [r5, #0]
 801359a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801359e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80135a0:	9201      	str	r2, [sp, #4]
 80135a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80135a4:	9200      	str	r2, [sp, #0]
 80135a6:	f8cd 8008 	str.w	r8, [sp, #8]
 80135aa:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80135ac:	aa07      	add	r2, sp, #28
 80135ae:	463b      	mov	r3, r7
 80135b0:	4631      	mov	r1, r6
 80135b2:	4628      	mov	r0, r5
 80135b4:	47a0      	blx	r4
 80135b6:	b017      	add	sp, #92	; 0x5c
 80135b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80135bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135c0:	b08d      	sub	sp, #52	; 0x34
 80135c2:	4688      	mov	r8, r1
 80135c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80135c6:	f8d3 c000 	ldr.w	ip, [r3]
 80135ca:	680f      	ldr	r7, [r1, #0]
 80135cc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80135d0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80135d4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80135d8:	edd3 6a07 	vldr	s13, [r3, #28]
 80135dc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80135de:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80135e2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80135e6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80135ea:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80135ee:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80135f2:	eba7 070c 	sub.w	r7, r7, ip
 80135f6:	42bc      	cmp	r4, r7
 80135f8:	bfa8      	it	ge
 80135fa:	463c      	movge	r4, r7
 80135fc:	ee07 4a90 	vmov	s15, r4
 8013600:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013604:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013608:	ee25 4a04 	vmul.f32	s8, s10, s8
 801360c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013610:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013614:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013618:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801361c:	eb09 0e0c 	add.w	lr, r9, ip
 8013620:	4571      	cmp	r1, lr
 8013622:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013626:	ee32 1a05 	vadd.f32	s2, s4, s10
 801362a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801362e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013632:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013636:	f340 808d 	ble.w	8013754 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801363a:	eba1 060e 	sub.w	r6, r1, lr
 801363e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013642:	ee07 5a10 	vmov	s14, r5
 8013646:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801364a:	2d00      	cmp	r5, #0
 801364c:	fb04 6615 	mls	r6, r4, r5, r6
 8013650:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013654:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013658:	eea7 1a05 	vfma.f32	s2, s14, s10
 801365c:	dd13      	ble.n	8013686 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801365e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013662:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013666:	eef5 6a40 	vcmp.f32	s13, #0.0
 801366a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801366e:	bf18      	it	ne
 8013670:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013674:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013678:	bf08      	it	eq
 801367a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801367e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013682:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013686:	fb05 f204 	mul.w	r2, r5, r4
 801368a:	1abf      	subs	r7, r7, r2
 801368c:	4494      	add	ip, r2
 801368e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013692:	4411      	add	r1, r2
 8013694:	eb09 020c 	add.w	r2, r9, ip
 8013698:	443a      	add	r2, r7
 801369a:	b209      	sxth	r1, r1
 801369c:	428a      	cmp	r2, r1
 801369e:	bfc4      	itt	gt
 80136a0:	eba1 0209 	subgt.w	r2, r1, r9
 80136a4:	eba2 070c 	subgt.w	r7, r2, ip
 80136a8:	2f00      	cmp	r7, #0
 80136aa:	dd50      	ble.n	801374e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80136ac:	fb97 f1f4 	sdiv	r1, r7, r4
 80136b0:	fb04 7211 	mls	r2, r4, r1, r7
 80136b4:	b90a      	cbnz	r2, 80136ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80136b6:	3901      	subs	r1, #1
 80136b8:	4622      	mov	r2, r4
 80136ba:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80136be:	6840      	ldr	r0, [r0, #4]
 80136c0:	900b      	str	r0, [sp, #44]	; 0x2c
 80136c2:	f8d0 a000 	ldr.w	sl, [r0]
 80136c6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80136c8:	9008      	str	r0, [sp, #32]
 80136ca:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80136ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 80136d0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80136d4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80136d8:	695b      	ldr	r3, [r3, #20]
 80136da:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80136dc:	445b      	add	r3, fp
 80136de:	eef0 6a42 	vmov.f32	s13, s4
 80136e2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80136e6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80136ea:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80136ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136f2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80136f6:	9307      	str	r3, [sp, #28]
 80136f8:	ee17 7a90 	vmov	r7, s15
 80136fc:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013700:	eeb0 7a61 	vmov.f32	s14, s3
 8013704:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013708:	ee16 3a90 	vmov	r3, s13
 801370c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013710:	ee17 ca90 	vmov	ip, s15
 8013714:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013718:	fb9c fcf4 	sdiv	ip, ip, r4
 801371c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013720:	9302      	str	r3, [sp, #8]
 8013722:	ee17 3a10 	vmov	r3, s14
 8013726:	44b6      	add	lr, r6
 8013728:	fb04 e505 	mla	r5, r4, r5, lr
 801372c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013730:	fb07 3706 	mla	r7, r7, r6, r3
 8013734:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013738:	e9cd 4700 	strd	r4, r7, [sp]
 801373c:	2900      	cmp	r1, #0
 801373e:	bfcc      	ite	gt
 8013740:	46a1      	movgt	r9, r4
 8013742:	4691      	movle	r9, r2
 8013744:	eba9 0306 	sub.w	r3, r9, r6
 8013748:	f8da 4008 	ldr.w	r4, [sl, #8]
 801374c:	47a0      	blx	r4
 801374e:	b00d      	add	sp, #52	; 0x34
 8013750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013754:	2500      	movs	r5, #0
 8013756:	462e      	mov	r6, r5
 8013758:	e799      	b.n	801368e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801375c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801375c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013760:	b0db      	sub	sp, #364	; 0x16c
 8013762:	461d      	mov	r5, r3
 8013764:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013768:	930a      	str	r3, [sp, #40]	; 0x28
 801376a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801376e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013770:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013774:	9310      	str	r3, [sp, #64]	; 0x40
 8013776:	6803      	ldr	r3, [r0, #0]
 8013778:	910f      	str	r1, [sp, #60]	; 0x3c
 801377a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801377c:	9009      	str	r0, [sp, #36]	; 0x24
 801377e:	4614      	mov	r4, r2
 8013780:	4629      	mov	r1, r5
 8013782:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013786:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801378a:	47b8      	blx	r7
 801378c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801378e:	6058      	str	r0, [r3, #4]
 8013790:	2800      	cmp	r0, #0
 8013792:	f000 83a1 	beq.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013796:	682b      	ldr	r3, [r5, #0]
 8013798:	9314      	str	r3, [sp, #80]	; 0x50
 801379a:	686b      	ldr	r3, [r5, #4]
 801379c:	9315      	str	r3, [sp, #84]	; 0x54
 801379e:	4bc4      	ldr	r3, [pc, #784]	; (8013ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80137a0:	ed94 7a02 	vldr	s14, [r4, #8]
 80137a4:	7819      	ldrb	r1, [r3, #0]
 80137a6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80137aa:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80137ae:	2900      	cmp	r1, #0
 80137b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137b4:	bf16      	itet	ne
 80137b6:	4619      	movne	r1, r3
 80137b8:	4611      	moveq	r1, r2
 80137ba:	4613      	movne	r3, r2
 80137bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137c0:	9116      	str	r1, [sp, #88]	; 0x58
 80137c2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80137c6:	f240 8387 	bls.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137ca:	ed94 7a07 	vldr	s14, [r4, #28]
 80137ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137d6:	f240 837f 	bls.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137da:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80137de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137e6:	f240 8377 	bls.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137ea:	6822      	ldr	r2, [r4, #0]
 80137ec:	4bb1      	ldr	r3, [pc, #708]	; (8013ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80137ee:	429a      	cmp	r2, r3
 80137f0:	f2c0 8372 	blt.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137f4:	49b0      	ldr	r1, [pc, #704]	; (8013ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80137f6:	6963      	ldr	r3, [r4, #20]
 80137f8:	428a      	cmp	r2, r1
 80137fa:	f300 836d 	bgt.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137fe:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013802:	48ae      	ldr	r0, [pc, #696]	; (8013abc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013804:	33ff      	adds	r3, #255	; 0xff
 8013806:	4283      	cmp	r3, r0
 8013808:	f200 8366 	bhi.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801380c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801380e:	4dac      	ldr	r5, [pc, #688]	; (8013ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013810:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013814:	33ff      	adds	r3, #255	; 0xff
 8013816:	42ab      	cmp	r3, r5
 8013818:	f200 835e 	bhi.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801381c:	6862      	ldr	r2, [r4, #4]
 801381e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013822:	33ff      	adds	r3, #255	; 0xff
 8013824:	4283      	cmp	r3, r0
 8013826:	f200 8357 	bhi.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801382a:	69a1      	ldr	r1, [r4, #24]
 801382c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013830:	33ff      	adds	r3, #255	; 0xff
 8013832:	4283      	cmp	r3, r0
 8013834:	f200 8350 	bhi.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013838:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801383a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801383e:	30ff      	adds	r0, #255	; 0xff
 8013840:	42a8      	cmp	r0, r5
 8013842:	f200 8349 	bhi.w	8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013846:	428a      	cmp	r2, r1
 8013848:	f280 8110 	bge.w	8013a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801384c:	429a      	cmp	r2, r3
 801384e:	f300 8119 	bgt.w	8013a84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013852:	4299      	cmp	r1, r3
 8013854:	f280 811d 	bge.w	8013a92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013858:	2502      	movs	r5, #2
 801385a:	2701      	movs	r7, #1
 801385c:	46a9      	mov	r9, r5
 801385e:	46b8      	mov	r8, r7
 8013860:	f04f 0a00 	mov.w	sl, #0
 8013864:	4621      	mov	r1, r4
 8013866:	a849      	add	r0, sp, #292	; 0x124
 8013868:	f003 feec 	bl	8017644 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801386c:	4622      	mov	r2, r4
 801386e:	4653      	mov	r3, sl
 8013870:	a949      	add	r1, sp, #292	; 0x124
 8013872:	f8cd 9000 	str.w	r9, [sp]
 8013876:	a819      	add	r0, sp, #100	; 0x64
 8013878:	f004 f814 	bl	80178a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801387c:	4622      	mov	r2, r4
 801387e:	4653      	mov	r3, sl
 8013880:	a949      	add	r1, sp, #292	; 0x124
 8013882:	f8cd 8000 	str.w	r8, [sp]
 8013886:	a829      	add	r0, sp, #164	; 0xa4
 8013888:	f004 f80c 	bl	80178a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801388c:	4643      	mov	r3, r8
 801388e:	4622      	mov	r2, r4
 8013890:	a949      	add	r1, sp, #292	; 0x124
 8013892:	f8cd 9000 	str.w	r9, [sp]
 8013896:	a839      	add	r0, sp, #228	; 0xe4
 8013898:	f004 f804 	bl	80178a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801389c:	42af      	cmp	r7, r5
 801389e:	bfb5      	itete	lt
 80138a0:	2300      	movlt	r3, #0
 80138a2:	2301      	movge	r3, #1
 80138a4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80138a6:	930e      	strge	r3, [sp, #56]	; 0x38
 80138a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80138aa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80138ae:	af12      	add	r7, sp, #72	; 0x48
 80138b0:	bfb9      	ittee	lt
 80138b2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80138b4:	ac19      	addlt	r4, sp, #100	; 0x64
 80138b6:	ad19      	addge	r5, sp, #100	; 0x64
 80138b8:	ac29      	addge	r4, sp, #164	; 0xa4
 80138ba:	e887 0003 	stmia.w	r7, {r0, r1}
 80138be:	b928      	cbnz	r0, 80138cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80138c0:	4b80      	ldr	r3, [pc, #512]	; (8013ac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80138c2:	6818      	ldr	r0, [r3, #0]
 80138c4:	6803      	ldr	r3, [r0, #0]
 80138c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80138c8:	4798      	blx	r3
 80138ca:	6038      	str	r0, [r7, #0]
 80138cc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80138ce:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80138d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80138d6:	930c      	str	r3, [sp, #48]	; 0x30
 80138d8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80138da:	6963      	ldr	r3, [r4, #20]
 80138dc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80138de:	440b      	add	r3, r1
 80138e0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80138e4:	4408      	add	r0, r1
 80138e6:	b200      	sxth	r0, r0
 80138e8:	4283      	cmp	r3, r0
 80138ea:	900d      	str	r0, [sp, #52]	; 0x34
 80138ec:	f280 80dd 	bge.w	8013aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80138f0:	428b      	cmp	r3, r1
 80138f2:	da08      	bge.n	8013906 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80138f4:	2a00      	cmp	r2, #0
 80138f6:	dd06      	ble.n	8013906 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80138f8:	1acb      	subs	r3, r1, r3
 80138fa:	429a      	cmp	r2, r3
 80138fc:	f2c0 80e4 	blt.w	8013ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013900:	2b00      	cmp	r3, #0
 8013902:	f300 80e2 	bgt.w	8013aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013906:	6967      	ldr	r7, [r4, #20]
 8013908:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801390a:	443b      	add	r3, r7
 801390c:	461f      	mov	r7, r3
 801390e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013910:	1bdf      	subs	r7, r3, r7
 8013912:	4297      	cmp	r7, r2
 8013914:	bfa8      	it	ge
 8013916:	4617      	movge	r7, r2
 8013918:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801391c:	2f00      	cmp	r7, #0
 801391e:	f340 8166 	ble.w	8013bee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013922:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013924:	6829      	ldr	r1, [r5, #0]
 8013926:	f9b3 2000 	ldrsh.w	r2, [r3]
 801392a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801392e:	6820      	ldr	r0, [r4, #0]
 8013930:	4411      	add	r1, r2
 8013932:	4299      	cmp	r1, r3
 8013934:	dd1a      	ble.n	801396c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013936:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801393a:	440b      	add	r3, r1
 801393c:	4402      	add	r2, r0
 801393e:	b21b      	sxth	r3, r3
 8013940:	429a      	cmp	r2, r3
 8013942:	dc13      	bgt.n	801396c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013944:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013946:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013948:	681b      	ldr	r3, [r3, #0]
 801394a:	9206      	str	r2, [sp, #24]
 801394c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801394e:	9205      	str	r2, [sp, #20]
 8013950:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013952:	9500      	str	r5, [sp, #0]
 8013954:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013958:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801395a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801395c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013960:	a912      	add	r1, sp, #72	; 0x48
 8013962:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013966:	aa49      	add	r2, sp, #292	; 0x124
 8013968:	4623      	mov	r3, r4
 801396a:	47c8      	blx	r9
 801396c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013970:	441a      	add	r2, r3
 8013972:	6963      	ldr	r3, [r4, #20]
 8013974:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013978:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801397c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013980:	68a1      	ldr	r1, [r4, #8]
 8013982:	ed94 6a08 	vldr	s12, [r4, #32]
 8013986:	6022      	str	r2, [r4, #0]
 8013988:	3301      	adds	r3, #1
 801398a:	6163      	str	r3, [r4, #20]
 801398c:	69a3      	ldr	r3, [r4, #24]
 801398e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013992:	3b01      	subs	r3, #1
 8013994:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013998:	61a3      	str	r3, [r4, #24]
 801399a:	6923      	ldr	r3, [r4, #16]
 801399c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80139a4:	edd4 6a07 	vldr	s13, [r4, #28]
 80139a8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139ac:	440b      	add	r3, r1
 80139ae:	68e1      	ldr	r1, [r4, #12]
 80139b0:	6123      	str	r3, [r4, #16]
 80139b2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80139b6:	428b      	cmp	r3, r1
 80139b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80139bc:	db15      	blt.n	80139ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80139be:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80139c2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80139c6:	3201      	adds	r2, #1
 80139c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80139cc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80139d0:	6022      	str	r2, [r4, #0]
 80139d2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80139d6:	1a5b      	subs	r3, r3, r1
 80139d8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139dc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80139e0:	6123      	str	r3, [r4, #16]
 80139e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80139e6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 80139ee:	441a      	add	r2, r3
 80139f0:	696b      	ldr	r3, [r5, #20]
 80139f2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80139f6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80139fa:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80139fe:	68a9      	ldr	r1, [r5, #8]
 8013a00:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a04:	602a      	str	r2, [r5, #0]
 8013a06:	3301      	adds	r3, #1
 8013a08:	616b      	str	r3, [r5, #20]
 8013a0a:	69ab      	ldr	r3, [r5, #24]
 8013a0c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a10:	3b01      	subs	r3, #1
 8013a12:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013a16:	61ab      	str	r3, [r5, #24]
 8013a18:	692b      	ldr	r3, [r5, #16]
 8013a1a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a22:	edd5 6a07 	vldr	s13, [r5, #28]
 8013a26:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a2a:	440b      	add	r3, r1
 8013a2c:	68e9      	ldr	r1, [r5, #12]
 8013a2e:	612b      	str	r3, [r5, #16]
 8013a30:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a34:	428b      	cmp	r3, r1
 8013a36:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a3a:	db15      	blt.n	8013a68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013a3c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013a40:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a44:	3201      	adds	r2, #1
 8013a46:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a4a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013a4e:	602a      	str	r2, [r5, #0]
 8013a50:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a54:	1a5b      	subs	r3, r3, r1
 8013a56:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a5a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013a5e:	612b      	str	r3, [r5, #16]
 8013a60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a64:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a68:	3f01      	subs	r7, #1
 8013a6a:	e757      	b.n	801391c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013a6c:	4299      	cmp	r1, r3
 8013a6e:	dc13      	bgt.n	8013a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013a70:	429a      	cmp	r2, r3
 8013a72:	da14      	bge.n	8013a9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013a74:	2502      	movs	r5, #2
 8013a76:	2703      	movs	r7, #3
 8013a78:	46a9      	mov	r9, r5
 8013a7a:	f04f 0800 	mov.w	r8, #0
 8013a7e:	f04f 0a01 	mov.w	sl, #1
 8013a82:	e6ef      	b.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013a84:	2501      	movs	r5, #1
 8013a86:	2700      	movs	r7, #0
 8013a88:	46a9      	mov	r9, r5
 8013a8a:	46b8      	mov	r8, r7
 8013a8c:	f04f 0a02 	mov.w	sl, #2
 8013a90:	e6e8      	b.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013a92:	2501      	movs	r5, #1
 8013a94:	2702      	movs	r7, #2
 8013a96:	e6e1      	b.n	801385c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013a98:	2500      	movs	r5, #0
 8013a9a:	2701      	movs	r7, #1
 8013a9c:	e7f4      	b.n	8013a88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013a9e:	2702      	movs	r7, #2
 8013aa0:	2503      	movs	r5, #3
 8013aa2:	f04f 0900 	mov.w	r9, #0
 8013aa6:	46b8      	mov	r8, r7
 8013aa8:	e7e9      	b.n	8013a7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013aaa:	4613      	mov	r3, r2
 8013aac:	e728      	b.n	8013900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013aae:	bf00      	nop
 8013ab0:	200137c4 	.word	0x200137c4
 8013ab4:	fffd8f01 	.word	0xfffd8f01
 8013ab8:	00027100 	.word	0x00027100
 8013abc:	0004e1ff 	.word	0x0004e1ff
 8013ac0:	0004e1fe 	.word	0x0004e1fe
 8013ac4:	200137cc 	.word	0x200137cc
 8013ac8:	4613      	mov	r3, r2
 8013aca:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013acc:	9111      	str	r1, [sp, #68]	; 0x44
 8013ace:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013ad2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013ad6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013ad8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013adc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013ae0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013ae4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013ae8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013aec:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013af0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013af4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013af8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013afc:	469e      	mov	lr, r3
 8013afe:	469c      	mov	ip, r3
 8013b00:	f04f 0900 	mov.w	r9, #0
 8013b04:	f1bc 0f00 	cmp.w	ip, #0
 8013b08:	d147      	bne.n	8013b9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013b0a:	eb03 0c07 	add.w	ip, r3, r7
 8013b0e:	1ad7      	subs	r7, r2, r3
 8013b10:	f1b9 0f00 	cmp.w	r9, #0
 8013b14:	d009      	beq.n	8013b2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013b16:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013b1a:	9029      	str	r0, [sp, #164]	; 0xa4
 8013b1c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013b20:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013b24:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013b28:	912d      	str	r1, [sp, #180]	; 0xb4
 8013b2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013b2c:	9111      	str	r1, [sp, #68]	; 0x44
 8013b2e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013b32:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013b36:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013b3a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013b3e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013b42:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013b46:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013b4a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013b4e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013b52:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013b56:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013b5a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013b5e:	f04f 0800 	mov.w	r8, #0
 8013b62:	f1be 0f00 	cmp.w	lr, #0
 8013b66:	d031      	beq.n	8013bcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013b68:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013b6a:	4431      	add	r1, r6
 8013b6c:	4549      	cmp	r1, r9
 8013b6e:	4450      	add	r0, sl
 8013b70:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013b74:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013b78:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013b7c:	db08      	blt.n	8013b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013b7e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013b82:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b86:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013b8a:	3001      	adds	r0, #1
 8013b8c:	eba1 0109 	sub.w	r1, r1, r9
 8013b90:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013b94:	f04f 0801 	mov.w	r8, #1
 8013b98:	e7e3      	b.n	8013b62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013b9a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013b9c:	4431      	add	r1, r6
 8013b9e:	4541      	cmp	r1, r8
 8013ba0:	4450      	add	r0, sl
 8013ba2:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013ba6:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013baa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013bae:	db08      	blt.n	8013bc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013bb0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013bb4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013bb8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013bbc:	3001      	adds	r0, #1
 8013bbe:	eba1 0108 	sub.w	r1, r1, r8
 8013bc2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013bc6:	f04f 0901 	mov.w	r9, #1
 8013bca:	e79b      	b.n	8013b04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013bcc:	449c      	add	ip, r3
 8013bce:	1aff      	subs	r7, r7, r3
 8013bd0:	f1b8 0f00 	cmp.w	r8, #0
 8013bd4:	d009      	beq.n	8013bea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013bd6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013bda:	9019      	str	r0, [sp, #100]	; 0x64
 8013bdc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013be0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013be4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013be8:	911d      	str	r1, [sp, #116]	; 0x74
 8013bea:	1ad2      	subs	r2, r2, r3
 8013bec:	e68b      	b.n	8013906 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013bf0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013bf2:	2b00      	cmp	r3, #0
 8013bf4:	f000 80d1 	beq.w	8013d9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013bf8:	ad19      	add	r5, sp, #100	; 0x64
 8013bfa:	ac39      	add	r4, sp, #228	; 0xe4
 8013bfc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013bfe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013c02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013c06:	930c      	str	r3, [sp, #48]	; 0x30
 8013c08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c0a:	6963      	ldr	r3, [r4, #20]
 8013c0c:	440b      	add	r3, r1
 8013c0e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013c12:	4408      	add	r0, r1
 8013c14:	b200      	sxth	r0, r0
 8013c16:	4283      	cmp	r3, r0
 8013c18:	900d      	str	r0, [sp, #52]	; 0x34
 8013c1a:	f280 80c1 	bge.w	8013da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013c1e:	428b      	cmp	r3, r1
 8013c20:	da08      	bge.n	8013c34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c22:	2a00      	cmp	r2, #0
 8013c24:	dd06      	ble.n	8013c34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c26:	1acb      	subs	r3, r1, r3
 8013c28:	429a      	cmp	r2, r3
 8013c2a:	f2c0 80bb 	blt.w	8013da4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013c2e:	2b00      	cmp	r3, #0
 8013c30:	f300 80b9 	bgt.w	8013da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013c34:	6967      	ldr	r7, [r4, #20]
 8013c36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c38:	443b      	add	r3, r7
 8013c3a:	461f      	mov	r7, r3
 8013c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c3e:	1bdf      	subs	r7, r3, r7
 8013c40:	4297      	cmp	r7, r2
 8013c42:	bfa8      	it	ge
 8013c44:	4617      	movge	r7, r2
 8013c46:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013c4a:	2f00      	cmp	r7, #0
 8013c4c:	f340 813c 	ble.w	8013ec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013c50:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c52:	6829      	ldr	r1, [r5, #0]
 8013c54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c58:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013c5c:	6820      	ldr	r0, [r4, #0]
 8013c5e:	4411      	add	r1, r2
 8013c60:	4299      	cmp	r1, r3
 8013c62:	dd1a      	ble.n	8013c9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c64:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013c68:	440b      	add	r3, r1
 8013c6a:	4402      	add	r2, r0
 8013c6c:	b21b      	sxth	r3, r3
 8013c6e:	429a      	cmp	r2, r3
 8013c70:	dc13      	bgt.n	8013c9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013c76:	681b      	ldr	r3, [r3, #0]
 8013c78:	9206      	str	r2, [sp, #24]
 8013c7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013c7c:	9205      	str	r2, [sp, #20]
 8013c7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c80:	9500      	str	r5, [sp, #0]
 8013c82:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013c86:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013c88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013c8a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013c8e:	a912      	add	r1, sp, #72	; 0x48
 8013c90:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013c94:	aa49      	add	r2, sp, #292	; 0x124
 8013c96:	4623      	mov	r3, r4
 8013c98:	47c8      	blx	r9
 8013c9a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013c9e:	441a      	add	r2, r3
 8013ca0:	6963      	ldr	r3, [r4, #20]
 8013ca2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013ca6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013caa:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013cae:	68a1      	ldr	r1, [r4, #8]
 8013cb0:	ed94 6a08 	vldr	s12, [r4, #32]
 8013cb4:	6022      	str	r2, [r4, #0]
 8013cb6:	3301      	adds	r3, #1
 8013cb8:	6163      	str	r3, [r4, #20]
 8013cba:	69a3      	ldr	r3, [r4, #24]
 8013cbc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013cc0:	3b01      	subs	r3, #1
 8013cc2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013cc6:	61a3      	str	r3, [r4, #24]
 8013cc8:	6923      	ldr	r3, [r4, #16]
 8013cca:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013cce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013cd2:	edd4 6a07 	vldr	s13, [r4, #28]
 8013cd6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013cda:	440b      	add	r3, r1
 8013cdc:	68e1      	ldr	r1, [r4, #12]
 8013cde:	6123      	str	r3, [r4, #16]
 8013ce0:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013ce4:	428b      	cmp	r3, r1
 8013ce6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013cea:	db15      	blt.n	8013d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013cec:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013cf0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013cf4:	3201      	adds	r2, #1
 8013cf6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013cfa:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013cfe:	6022      	str	r2, [r4, #0]
 8013d00:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d04:	1a5b      	subs	r3, r3, r1
 8013d06:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d0a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013d0e:	6123      	str	r3, [r4, #16]
 8013d10:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d14:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d18:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013d1c:	441a      	add	r2, r3
 8013d1e:	696b      	ldr	r3, [r5, #20]
 8013d20:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013d24:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013d28:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013d2c:	68a9      	ldr	r1, [r5, #8]
 8013d2e:	ed95 6a08 	vldr	s12, [r5, #32]
 8013d32:	602a      	str	r2, [r5, #0]
 8013d34:	3301      	adds	r3, #1
 8013d36:	616b      	str	r3, [r5, #20]
 8013d38:	69ab      	ldr	r3, [r5, #24]
 8013d3a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d3e:	3b01      	subs	r3, #1
 8013d40:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013d44:	61ab      	str	r3, [r5, #24]
 8013d46:	692b      	ldr	r3, [r5, #16]
 8013d48:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d50:	edd5 6a07 	vldr	s13, [r5, #28]
 8013d54:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d58:	440b      	add	r3, r1
 8013d5a:	68e9      	ldr	r1, [r5, #12]
 8013d5c:	612b      	str	r3, [r5, #16]
 8013d5e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d62:	428b      	cmp	r3, r1
 8013d64:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d68:	db15      	blt.n	8013d96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013d6a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013d6e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d72:	3201      	adds	r2, #1
 8013d74:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d78:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013d7c:	602a      	str	r2, [r5, #0]
 8013d7e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d82:	1a5b      	subs	r3, r3, r1
 8013d84:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d88:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013d8c:	612b      	str	r3, [r5, #16]
 8013d8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d92:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d96:	3f01      	subs	r7, #1
 8013d98:	e757      	b.n	8013c4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013d9a:	ad39      	add	r5, sp, #228	; 0xe4
 8013d9c:	ac19      	add	r4, sp, #100	; 0x64
 8013d9e:	e72d      	b.n	8013bfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013da0:	4613      	mov	r3, r2
 8013da2:	e744      	b.n	8013c2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013da4:	4613      	mov	r3, r2
 8013da6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013daa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013dac:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013db0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013db4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013db8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013dbc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013dc0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013dc4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013dc8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013dca:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013dce:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013dd2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013dd6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013dda:	960e      	str	r6, [sp, #56]	; 0x38
 8013ddc:	469e      	mov	lr, r3
 8013dde:	461f      	mov	r7, r3
 8013de0:	f04f 0900 	mov.w	r9, #0
 8013de4:	2f00      	cmp	r7, #0
 8013de6:	d146      	bne.n	8013e76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013de8:	449c      	add	ip, r3
 8013dea:	1ad7      	subs	r7, r2, r3
 8013dec:	f1b9 0f00 	cmp.w	r9, #0
 8013df0:	d009      	beq.n	8013e06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013df2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013df6:	9039      	str	r0, [sp, #228]	; 0xe4
 8013df8:	913d      	str	r1, [sp, #244]	; 0xf4
 8013dfa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013dfe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013e02:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013e06:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e08:	910e      	str	r1, [sp, #56]	; 0x38
 8013e0a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e0e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013e12:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013e16:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013e1a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013e1e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013e22:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013e26:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013e2a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013e2e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013e32:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013e36:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013e3a:	f04f 0800 	mov.w	r8, #0
 8013e3e:	f1be 0f00 	cmp.w	lr, #0
 8013e42:	d030      	beq.n	8013ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013e44:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e46:	4431      	add	r1, r6
 8013e48:	4549      	cmp	r1, r9
 8013e4a:	4450      	add	r0, sl
 8013e4c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013e50:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013e54:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013e58:	db08      	blt.n	8013e6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013e5a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013e5e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013e62:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013e66:	3001      	adds	r0, #1
 8013e68:	eba1 0109 	sub.w	r1, r1, r9
 8013e6c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e70:	f04f 0801 	mov.w	r8, #1
 8013e74:	e7e3      	b.n	8013e3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013e76:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e78:	4431      	add	r1, r6
 8013e7a:	4541      	cmp	r1, r8
 8013e7c:	4450      	add	r0, sl
 8013e7e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013e82:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013e86:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013e8a:	db08      	blt.n	8013e9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013e8c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013e90:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013e94:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013e98:	3001      	adds	r0, #1
 8013e9a:	eba1 0108 	sub.w	r1, r1, r8
 8013e9e:	3f01      	subs	r7, #1
 8013ea0:	f04f 0901 	mov.w	r9, #1
 8013ea4:	e79e      	b.n	8013de4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013ea6:	449c      	add	ip, r3
 8013ea8:	1aff      	subs	r7, r7, r3
 8013eaa:	f1b8 0f00 	cmp.w	r8, #0
 8013eae:	d009      	beq.n	8013ec4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013eb0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013eb4:	9019      	str	r0, [sp, #100]	; 0x64
 8013eb6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013eba:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ebe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013ec2:	911d      	str	r1, [sp, #116]	; 0x74
 8013ec4:	1ad2      	subs	r2, r2, r3
 8013ec6:	e6b5      	b.n	8013c34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ec8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013eca:	681b      	ldr	r3, [r3, #0]
 8013ecc:	b923      	cbnz	r3, 8013ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ece:	4b04      	ldr	r3, [pc, #16]	; (8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013ed0:	6818      	ldr	r0, [r3, #0]
 8013ed2:	6803      	ldr	r3, [r0, #0]
 8013ed4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ed6:	4798      	blx	r3
 8013ed8:	b05b      	add	sp, #364	; 0x16c
 8013eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ede:	bf00      	nop
 8013ee0:	200137cc 	.word	0x200137cc

08013ee4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013ee4:	b570      	push	{r4, r5, r6, lr}
 8013ee6:	4604      	mov	r4, r0
 8013ee8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013eec:	9805      	ldr	r0, [sp, #20]
 8013eee:	6061      	str	r1, [r4, #4]
 8013ef0:	2500      	movs	r5, #0
 8013ef2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013ef6:	8263      	strh	r3, [r4, #18]
 8013ef8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013efc:	8025      	strh	r5, [r4, #0]
 8013efe:	7221      	strb	r1, [r4, #8]
 8013f00:	7266      	strb	r6, [r4, #9]
 8013f02:	60e0      	str	r0, [r4, #12]
 8013f04:	8222      	strh	r2, [r4, #16]
 8013f06:	82a3      	strh	r3, [r4, #20]
 8013f08:	82e5      	strh	r5, [r4, #22]
 8013f0a:	8325      	strh	r5, [r4, #24]
 8013f0c:	8365      	strh	r5, [r4, #26]
 8013f0e:	83a5      	strh	r5, [r4, #28]
 8013f10:	83e5      	strh	r5, [r4, #30]
 8013f12:	8425      	strh	r5, [r4, #32]
 8013f14:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013f18:	b32e      	cbz	r6, 8013f66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f1a:	6803      	ldr	r3, [r0, #0]
 8013f1c:	695b      	ldr	r3, [r3, #20]
 8013f1e:	4798      	blx	r3
 8013f20:	4606      	mov	r6, r0
 8013f22:	b300      	cbz	r0, 8013f66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f24:	68e0      	ldr	r0, [r4, #12]
 8013f26:	6803      	ldr	r3, [r0, #0]
 8013f28:	4631      	mov	r1, r6
 8013f2a:	68db      	ldr	r3, [r3, #12]
 8013f2c:	4798      	blx	r3
 8013f2e:	4605      	mov	r5, r0
 8013f30:	b1c8      	cbz	r0, 8013f66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f32:	7b43      	ldrb	r3, [r0, #13]
 8013f34:	7a82      	ldrb	r2, [r0, #10]
 8013f36:	005b      	lsls	r3, r3, #1
 8013f38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013f3c:	4313      	orrs	r3, r2
 8013f3e:	8423      	strh	r3, [r4, #32]
 8013f40:	7a63      	ldrb	r3, [r4, #9]
 8013f42:	2b06      	cmp	r3, #6
 8013f44:	d10f      	bne.n	8013f66 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f46:	68e0      	ldr	r0, [r4, #12]
 8013f48:	6803      	ldr	r3, [r0, #0]
 8013f4a:	462a      	mov	r2, r5
 8013f4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f4e:	4631      	mov	r1, r6
 8013f50:	4798      	blx	r3
 8013f52:	7b6b      	ldrb	r3, [r5, #13]
 8013f54:	005b      	lsls	r3, r3, #1
 8013f56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f5a:	7aab      	ldrb	r3, [r5, #10]
 8013f5c:	4313      	orrs	r3, r2
 8013f5e:	4418      	add	r0, r3
 8013f60:	8c23      	ldrh	r3, [r4, #32]
 8013f62:	4418      	add	r0, r3
 8013f64:	8420      	strh	r0, [r4, #32]
 8013f66:	4620      	mov	r0, r4
 8013f68:	bd70      	pop	{r4, r5, r6, pc}

08013f6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013f6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f6e:	2400      	movs	r4, #0
 8013f70:	b085      	sub	sp, #20
 8013f72:	4681      	mov	r9, r0
 8013f74:	4688      	mov	r8, r1
 8013f76:	4692      	mov	sl, r2
 8013f78:	469b      	mov	fp, r3
 8013f7a:	4627      	mov	r7, r4
 8013f7c:	4625      	mov	r5, r4
 8013f7e:	4626      	mov	r6, r4
 8013f80:	4554      	cmp	r4, sl
 8013f82:	da2a      	bge.n	8013fda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013f84:	2300      	movs	r3, #0
 8013f86:	9303      	str	r3, [sp, #12]
 8013f88:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013f8c:	429d      	cmp	r5, r3
 8013f8e:	d004      	beq.n	8013f9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013f90:	f242 030b 	movw	r3, #8203	; 0x200b
 8013f94:	429d      	cmp	r5, r3
 8013f96:	bf18      	it	ne
 8013f98:	462f      	movne	r7, r5
 8013f9a:	ab03      	add	r3, sp, #12
 8013f9c:	4642      	mov	r2, r8
 8013f9e:	4659      	mov	r1, fp
 8013fa0:	4648      	mov	r0, r9
 8013fa2:	f003 f965 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013fa6:	4605      	mov	r5, r0
 8013fa8:	b1b8      	cbz	r0, 8013fda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013faa:	280a      	cmp	r0, #10
 8013fac:	d015      	beq.n	8013fda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013fae:	9a03      	ldr	r2, [sp, #12]
 8013fb0:	b18a      	cbz	r2, 8013fd6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013fb2:	7b50      	ldrb	r0, [r2, #13]
 8013fb4:	7a93      	ldrb	r3, [r2, #10]
 8013fb6:	8895      	ldrh	r5, [r2, #4]
 8013fb8:	0040      	lsls	r0, r0, #1
 8013fba:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013fbe:	4303      	orrs	r3, r0
 8013fc0:	9301      	str	r3, [sp, #4]
 8013fc2:	f8d8 3000 	ldr.w	r3, [r8]
 8013fc6:	4639      	mov	r1, r7
 8013fc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013fca:	4640      	mov	r0, r8
 8013fcc:	4798      	blx	r3
 8013fce:	9b01      	ldr	r3, [sp, #4]
 8013fd0:	4418      	add	r0, r3
 8013fd2:	4406      	add	r6, r0
 8013fd4:	b2b6      	uxth	r6, r6
 8013fd6:	3401      	adds	r4, #1
 8013fd8:	e7d2      	b.n	8013f80 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013fda:	4630      	mov	r0, r6
 8013fdc:	b005      	add	sp, #20
 8013fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fe2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013fe2:	2a02      	cmp	r2, #2
 8013fe4:	b530      	push	{r4, r5, lr}
 8013fe6:	d011      	beq.n	801400c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013fe8:	2a03      	cmp	r2, #3
 8013fea:	d01c      	beq.n	8014026 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013fec:	2a01      	cmp	r2, #1
 8013fee:	d10c      	bne.n	801400a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013ff0:	888b      	ldrh	r3, [r1, #4]
 8013ff2:	8801      	ldrh	r1, [r0, #0]
 8013ff4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013ff8:	8844      	ldrh	r4, [r0, #2]
 8013ffa:	8004      	strh	r4, [r0, #0]
 8013ffc:	1a5b      	subs	r3, r3, r1
 8013ffe:	1a9b      	subs	r3, r3, r2
 8014000:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014004:	8043      	strh	r3, [r0, #2]
 8014006:	8081      	strh	r1, [r0, #4]
 8014008:	80c2      	strh	r2, [r0, #6]
 801400a:	bd30      	pop	{r4, r5, pc}
 801400c:	88cb      	ldrh	r3, [r1, #6]
 801400e:	8842      	ldrh	r2, [r0, #2]
 8014010:	1a9b      	subs	r3, r3, r2
 8014012:	88c2      	ldrh	r2, [r0, #6]
 8014014:	1a9b      	subs	r3, r3, r2
 8014016:	888a      	ldrh	r2, [r1, #4]
 8014018:	8801      	ldrh	r1, [r0, #0]
 801401a:	8043      	strh	r3, [r0, #2]
 801401c:	1a52      	subs	r2, r2, r1
 801401e:	8881      	ldrh	r1, [r0, #4]
 8014020:	1a52      	subs	r2, r2, r1
 8014022:	8002      	strh	r2, [r0, #0]
 8014024:	e7f1      	b.n	801400a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014026:	88cb      	ldrh	r3, [r1, #6]
 8014028:	8841      	ldrh	r1, [r0, #2]
 801402a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801402e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014032:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014036:	8045      	strh	r5, [r0, #2]
 8014038:	1a5b      	subs	r3, r3, r1
 801403a:	1a9b      	subs	r3, r3, r2
 801403c:	8003      	strh	r3, [r0, #0]
 801403e:	8082      	strh	r2, [r0, #4]
 8014040:	80c4      	strh	r4, [r0, #6]
 8014042:	e7e2      	b.n	801400a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014044 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014048:	b09f      	sub	sp, #124	; 0x7c
 801404a:	9116      	str	r1, [sp, #88]	; 0x58
 801404c:	9317      	str	r3, [sp, #92]	; 0x5c
 801404e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014050:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014052:	8809      	ldrh	r1, [r1, #0]
 8014054:	889b      	ldrh	r3, [r3, #4]
 8014056:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801405a:	9212      	str	r2, [sp, #72]	; 0x48
 801405c:	440b      	add	r3, r1
 801405e:	b21b      	sxth	r3, r3
 8014060:	9310      	str	r3, [sp, #64]	; 0x40
 8014062:	f8d8 3000 	ldr.w	r3, [r8]
 8014066:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801406a:	7b19      	ldrb	r1, [r3, #12]
 801406c:	7adb      	ldrb	r3, [r3, #11]
 801406e:	9011      	str	r0, [sp, #68]	; 0x44
 8014070:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014074:	9114      	str	r1, [sp, #80]	; 0x50
 8014076:	9315      	str	r3, [sp, #84]	; 0x54
 8014078:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801407c:	2a00      	cmp	r2, #0
 801407e:	d06a      	beq.n	8014156 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014080:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014084:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014086:	2b06      	cmp	r3, #6
 8014088:	bf14      	ite	ne
 801408a:	2301      	movne	r3, #1
 801408c:	2302      	moveq	r3, #2
 801408e:	4413      	add	r3, r2
 8014090:	f04f 0900 	mov.w	r9, #0
 8014094:	930f      	str	r3, [sp, #60]	; 0x3c
 8014096:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801409a:	464c      	mov	r4, r9
 801409c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80140a0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80140a4:	4293      	cmp	r3, r2
 80140a6:	f280 808f 	bge.w	80141c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80140aa:	2300      	movs	r3, #0
 80140ac:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80140b0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80140b4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80140b8:	429c      	cmp	r4, r3
 80140ba:	d006      	beq.n	80140ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80140bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140be:	f242 020b 	movw	r2, #8203	; 0x200b
 80140c2:	4294      	cmp	r4, r2
 80140c4:	bf18      	it	ne
 80140c6:	4623      	movne	r3, r4
 80140c8:	930d      	str	r3, [sp, #52]	; 0x34
 80140ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140cc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80140ce:	f8d8 2000 	ldr.w	r2, [r8]
 80140d2:	428b      	cmp	r3, r1
 80140d4:	db41      	blt.n	801415a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80140d6:	6813      	ldr	r3, [r2, #0]
 80140d8:	4610      	mov	r0, r2
 80140da:	695b      	ldr	r3, [r3, #20]
 80140dc:	4798      	blx	r3
 80140de:	4604      	mov	r4, r0
 80140e0:	f8d8 0000 	ldr.w	r0, [r8]
 80140e4:	6803      	ldr	r3, [r0, #0]
 80140e6:	aa1d      	add	r2, sp, #116	; 0x74
 80140e8:	689d      	ldr	r5, [r3, #8]
 80140ea:	4621      	mov	r1, r4
 80140ec:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80140f0:	47a8      	blx	r5
 80140f2:	901c      	str	r0, [sp, #112]	; 0x70
 80140f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80140f8:	429c      	cmp	r4, r3
 80140fa:	f000 80eb 	beq.w	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80140fe:	f242 030b 	movw	r3, #8203	; 0x200b
 8014102:	429c      	cmp	r4, r3
 8014104:	f000 80e6 	beq.w	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014108:	2c00      	cmp	r4, #0
 801410a:	f000 80f8 	beq.w	80142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801410e:	2c0a      	cmp	r4, #10
 8014110:	d060      	beq.n	80141d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014112:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014114:	b36a      	cbz	r2, 8014172 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014116:	8894      	ldrh	r4, [r2, #4]
 8014118:	f1bb 0f00 	cmp.w	fp, #0
 801411c:	d03b      	beq.n	8014196 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801411e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014122:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014126:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801412a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801412e:	f1bb 0f01 	cmp.w	fp, #1
 8014132:	ea49 0903 	orr.w	r9, r9, r3
 8014136:	d134      	bne.n	80141a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801413a:	eba6 0609 	sub.w	r6, r6, r9
 801413e:	2b00      	cmp	r3, #0
 8014140:	d14f      	bne.n	80141e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014142:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014144:	eb09 0306 	add.w	r3, r9, r6
 8014148:	4413      	add	r3, r2
 801414a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801414c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014150:	4293      	cmp	r3, r2
 8014152:	da51      	bge.n	80141f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014154:	e038      	b.n	80141c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014156:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014158:	e79a      	b.n	8014090 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801415a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801415e:	9301      	str	r3, [sp, #4]
 8014160:	ab1d      	add	r3, sp, #116	; 0x74
 8014162:	9300      	str	r3, [sp, #0]
 8014164:	4659      	mov	r1, fp
 8014166:	ab1c      	add	r3, sp, #112	; 0x70
 8014168:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801416a:	f003 f8ca 	bl	8017302 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801416e:	4604      	mov	r4, r0
 8014170:	e7c0      	b.n	80140f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014172:	f8d8 0000 	ldr.w	r0, [r8]
 8014176:	6803      	ldr	r3, [r0, #0]
 8014178:	691b      	ldr	r3, [r3, #16]
 801417a:	4798      	blx	r3
 801417c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014180:	4298      	cmp	r0, r3
 8014182:	f000 80a7 	beq.w	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014186:	f242 030b 	movw	r3, #8203	; 0x200b
 801418a:	4298      	cmp	r0, r3
 801418c:	f000 80a2 	beq.w	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014190:	f1bb 0f00 	cmp.w	fp, #0
 8014194:	d100      	bne.n	8014198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014196:	444e      	add	r6, r9
 8014198:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801419a:	2a00      	cmp	r2, #0
 801419c:	d1bf      	bne.n	801411e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801419e:	4691      	mov	r9, r2
 80141a0:	e098      	b.n	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141a4:	2b00      	cmp	r3, #0
 80141a6:	f000 80ac 	beq.w	8014302 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80141aa:	f1bb 0f00 	cmp.w	fp, #0
 80141ae:	d118      	bne.n	80141e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80141b0:	f8d8 0000 	ldr.w	r0, [r8]
 80141b4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80141b6:	6803      	ldr	r3, [r0, #0]
 80141b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141ba:	4798      	blx	r3
 80141bc:	4406      	add	r6, r0
 80141be:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80141c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80141c2:	1af3      	subs	r3, r6, r3
 80141c4:	4293      	cmp	r3, r2
 80141c6:	dd17      	ble.n	80141f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80141c8:	2c00      	cmp	r4, #0
 80141ca:	f000 8098 	beq.w	80142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80141ce:	2c0a      	cmp	r4, #10
 80141d0:	f040 8086 	bne.w	80142e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80141d4:	240a      	movs	r4, #10
 80141d6:	fab4 f084 	clz	r0, r4
 80141da:	0940      	lsrs	r0, r0, #5
 80141dc:	b01f      	add	sp, #124	; 0x7c
 80141de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141e2:	f8d8 0000 	ldr.w	r0, [r8]
 80141e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80141e8:	6803      	ldr	r3, [r0, #0]
 80141ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141ec:	4798      	blx	r3
 80141ee:	f1bb 0f01 	cmp.w	fp, #1
 80141f2:	eba6 0600 	sub.w	r6, r6, r0
 80141f6:	d0a4      	beq.n	8014142 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80141f8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80141fa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80141fc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014200:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014204:	7b43      	ldrb	r3, [r0, #13]
 8014206:	015b      	lsls	r3, r3, #5
 8014208:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801420c:	7983      	ldrb	r3, [r0, #6]
 801420e:	4431      	add	r1, r6
 8014210:	4313      	orrs	r3, r2
 8014212:	440b      	add	r3, r1
 8014214:	42bb      	cmp	r3, r7
 8014216:	db5d      	blt.n	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014218:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801421a:	4299      	cmp	r1, r3
 801421c:	da5a      	bge.n	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801421e:	f8d8 0000 	ldr.w	r0, [r8]
 8014222:	6803      	ldr	r3, [r0, #0]
 8014224:	42b7      	cmp	r7, r6
 8014226:	bfc8      	it	gt
 8014228:	1bbf      	subgt	r7, r7, r6
 801422a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801422c:	bfcc      	ite	gt
 801422e:	b2bf      	uxthgt	r7, r7
 8014230:	2700      	movle	r7, #0
 8014232:	4798      	blx	r3
 8014234:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014236:	7b5a      	ldrb	r2, [r3, #13]
 8014238:	00d1      	lsls	r1, r2, #3
 801423a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801423e:	7a19      	ldrb	r1, [r3, #8]
 8014240:	4329      	orrs	r1, r5
 8014242:	0655      	lsls	r5, r2, #25
 8014244:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014246:	bf44      	itt	mi
 8014248:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801424c:	b209      	sxthmi	r1, r1
 801424e:	1945      	adds	r5, r0, r5
 8014250:	1a6d      	subs	r5, r5, r1
 8014252:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014254:	b2ad      	uxth	r5, r5
 8014256:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801425a:	fa0f fa85 	sxth.w	sl, r5
 801425e:	4551      	cmp	r1, sl
 8014260:	dd3c      	ble.n	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014262:	0112      	lsls	r2, r2, #4
 8014264:	79d8      	ldrb	r0, [r3, #7]
 8014266:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801426a:	4302      	orrs	r2, r0
 801426c:	4492      	add	sl, r2
 801426e:	4551      	cmp	r1, sl
 8014270:	dc30      	bgt.n	80142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014272:	1b4d      	subs	r5, r1, r5
 8014274:	b22d      	sxth	r5, r5
 8014276:	468a      	mov	sl, r1
 8014278:	9319      	str	r3, [sp, #100]	; 0x64
 801427a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801427c:	f8d8 0000 	ldr.w	r0, [r8]
 8014280:	681a      	ldr	r2, [r3, #0]
 8014282:	6801      	ldr	r1, [r0, #0]
 8014284:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014286:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014288:	9313      	str	r3, [sp, #76]	; 0x4c
 801428a:	9218      	str	r2, [sp, #96]	; 0x60
 801428c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801428e:	4788      	blx	r1
 8014290:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014294:	910b      	str	r1, [sp, #44]	; 0x2c
 8014296:	f898 100e 	ldrb.w	r1, [r8, #14]
 801429a:	910a      	str	r1, [sp, #40]	; 0x28
 801429c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80142a0:	9109      	str	r1, [sp, #36]	; 0x24
 80142a2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80142a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80142a8:	9305      	str	r3, [sp, #20]
 80142aa:	b2ad      	uxth	r5, r5
 80142ac:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80142b0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80142b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142b6:	9304      	str	r3, [sp, #16]
 80142b8:	4437      	add	r7, r6
 80142ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80142bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80142be:	9206      	str	r2, [sp, #24]
 80142c0:	b23f      	sxth	r7, r7
 80142c2:	f8cd a004 	str.w	sl, [sp, #4]
 80142c6:	9700      	str	r7, [sp, #0]
 80142c8:	681a      	ldr	r2, [r3, #0]
 80142ca:	9916      	ldr	r1, [sp, #88]	; 0x58
 80142cc:	685b      	ldr	r3, [r3, #4]
 80142ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80142d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80142d2:	47a8      	blx	r5
 80142d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142d6:	3301      	adds	r3, #1
 80142d8:	930e      	str	r3, [sp, #56]	; 0x38
 80142da:	e6e1      	b.n	80140a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80142dc:	2500      	movs	r5, #0
 80142de:	e7cb      	b.n	8014278 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80142e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80142e2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80142e4:	3501      	adds	r5, #1
 80142e6:	429d      	cmp	r5, r3
 80142e8:	f6bf af75 	bge.w	80141d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80142ec:	4659      	mov	r1, fp
 80142ee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80142f0:	f7f3 fd46 	bl	8007d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80142f4:	4604      	mov	r4, r0
 80142f6:	b110      	cbz	r0, 80142fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80142f8:	280a      	cmp	r0, #10
 80142fa:	d1f2      	bne.n	80142e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80142fc:	e76a      	b.n	80141d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80142fe:	2400      	movs	r4, #0
 8014300:	e769      	b.n	80141d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014302:	f1bb 0f00 	cmp.w	fp, #0
 8014306:	f43f af5a 	beq.w	80141be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801430a:	e775      	b.n	80141f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801430c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801430c:	b530      	push	{r4, r5, lr}
 801430e:	8ac4      	ldrh	r4, [r0, #22]
 8014310:	8b45      	ldrh	r5, [r0, #26]
 8014312:	8343      	strh	r3, [r0, #26]
 8014314:	442c      	add	r4, r5
 8014316:	1ae4      	subs	r4, r4, r3
 8014318:	82c4      	strh	r4, [r0, #22]
 801431a:	8b83      	ldrh	r3, [r0, #28]
 801431c:	8b04      	ldrh	r4, [r0, #24]
 801431e:	4422      	add	r2, r4
 8014320:	440c      	add	r4, r1
 8014322:	1a59      	subs	r1, r3, r1
 8014324:	83c2      	strh	r2, [r0, #30]
 8014326:	8304      	strh	r4, [r0, #24]
 8014328:	8381      	strh	r1, [r0, #28]
 801432a:	bd30      	pop	{r4, r5, pc}

0801432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801432c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014330:	4604      	mov	r4, r0
 8014332:	8a47      	ldrh	r7, [r0, #18]
 8014334:	68c0      	ldr	r0, [r0, #12]
 8014336:	6803      	ldr	r3, [r0, #0]
 8014338:	b085      	sub	sp, #20
 801433a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801433c:	4798      	blx	r3
 801433e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014342:	7a63      	ldrb	r3, [r4, #9]
 8014344:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014348:	42b7      	cmp	r7, r6
 801434a:	f103 33ff 	add.w	r3, r3, #4294967295
 801434e:	bfac      	ite	ge
 8014350:	f04f 0900 	movge.w	r9, #0
 8014354:	f04f 0901 	movlt.w	r9, #1
 8014358:	2b05      	cmp	r3, #5
 801435a:	d804      	bhi.n	8014366 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801435c:	e8df f003 	tbb	[pc, r3]
 8014360:	470e0854 	.word	0x470e0854
 8014364:	4c4c      	.short	0x4c4c
 8014366:	2500      	movs	r5, #0
 8014368:	46a9      	mov	r9, r5
 801436a:	462e      	mov	r6, r5
 801436c:	462f      	mov	r7, r5
 801436e:	e00d      	b.n	801438c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014370:	42b7      	cmp	r7, r6
 8014372:	bfb4      	ite	lt
 8014374:	2600      	movlt	r6, #0
 8014376:	2601      	movge	r6, #1
 8014378:	2500      	movs	r5, #0
 801437a:	e7f7      	b.n	801436c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801437c:	42b7      	cmp	r7, r6
 801437e:	464d      	mov	r5, r9
 8014380:	f04f 0900 	mov.w	r9, #0
 8014384:	bfb4      	ite	lt
 8014386:	2600      	movlt	r6, #0
 8014388:	2601      	movge	r6, #1
 801438a:	464f      	mov	r7, r9
 801438c:	f04f 0800 	mov.w	r8, #0
 8014390:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014394:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014398:	f8cd 8004 	str.w	r8, [sp, #4]
 801439c:	2300      	movs	r3, #0
 801439e:	9303      	str	r3, [sp, #12]
 80143a0:	8823      	ldrh	r3, [r4, #0]
 80143a2:	2b20      	cmp	r3, #32
 80143a4:	d034      	beq.n	8014410 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80143a6:	f242 010b 	movw	r1, #8203	; 0x200b
 80143aa:	1a5a      	subs	r2, r3, r1
 80143ac:	f1d2 0a00 	rsbs	sl, r2, #0
 80143b0:	eb4a 0a02 	adc.w	sl, sl, r2
 80143b4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80143b8:	4293      	cmp	r3, r2
 80143ba:	d009      	beq.n	80143d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80143bc:	428b      	cmp	r3, r1
 80143be:	9a01      	ldr	r2, [sp, #4]
 80143c0:	bf18      	it	ne
 80143c2:	461a      	movne	r2, r3
 80143c4:	9201      	str	r2, [sp, #4]
 80143c6:	bf0c      	ite	eq
 80143c8:	f04f 0a01 	moveq.w	sl, #1
 80143cc:	f04f 0a00 	movne.w	sl, #0
 80143d0:	ab03      	add	r3, sp, #12
 80143d2:	68e2      	ldr	r2, [r4, #12]
 80143d4:	7a21      	ldrb	r1, [r4, #8]
 80143d6:	6860      	ldr	r0, [r4, #4]
 80143d8:	f002 ff4a 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80143dc:	8020      	strh	r0, [r4, #0]
 80143de:	b9d8      	cbnz	r0, 8014418 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80143e0:	8ba2      	ldrh	r2, [r4, #28]
 80143e2:	2300      	movs	r3, #0
 80143e4:	4611      	mov	r1, r2
 80143e6:	4620      	mov	r0, r4
 80143e8:	f7ff ff90 	bl	801430c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80143ec:	e06e      	b.n	80144cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80143ee:	2500      	movs	r5, #0
 80143f0:	46a9      	mov	r9, r5
 80143f2:	462e      	mov	r6, r5
 80143f4:	2701      	movs	r7, #1
 80143f6:	e7c9      	b.n	801438c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80143f8:	42b7      	cmp	r7, r6
 80143fa:	f04f 0500 	mov.w	r5, #0
 80143fe:	bfb4      	ite	lt
 8014400:	2700      	movlt	r7, #0
 8014402:	2701      	movge	r7, #1
 8014404:	462e      	mov	r6, r5
 8014406:	e7c1      	b.n	801438c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014408:	2500      	movs	r5, #0
 801440a:	46a9      	mov	r9, r5
 801440c:	2601      	movs	r6, #1
 801440e:	e7ad      	b.n	801436c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014410:	9301      	str	r3, [sp, #4]
 8014412:	f04f 0a01 	mov.w	sl, #1
 8014416:	e7db      	b.n	80143d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014418:	8b63      	ldrh	r3, [r4, #26]
 801441a:	280a      	cmp	r0, #10
 801441c:	f103 0301 	add.w	r3, r3, #1
 8014420:	8363      	strh	r3, [r4, #26]
 8014422:	d0dd      	beq.n	80143e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014424:	9a03      	ldr	r2, [sp, #12]
 8014426:	bb62      	cbnz	r2, 8014482 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014428:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801442c:	4298      	cmp	r0, r3
 801442e:	d003      	beq.n	8014438 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014430:	f242 030b 	movw	r3, #8203	; 0x200b
 8014434:	4298      	cmp	r0, r3
 8014436:	d1b1      	bne.n	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014438:	8823      	ldrh	r3, [r4, #0]
 801443a:	8ba1      	ldrh	r1, [r4, #28]
 801443c:	2b20      	cmp	r3, #32
 801443e:	d003      	beq.n	8014448 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014440:	f242 000b 	movw	r0, #8203	; 0x200b
 8014444:	4283      	cmp	r3, r0
 8014446:	d131      	bne.n	80144ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014448:	f1ba 0f00 	cmp.w	sl, #0
 801444c:	bf0a      	itet	eq
 801444e:	4688      	moveq	r8, r1
 8014450:	4650      	movne	r0, sl
 8014452:	2001      	moveq	r0, #1
 8014454:	440a      	add	r2, r1
 8014456:	8b23      	ldrh	r3, [r4, #24]
 8014458:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801445c:	b292      	uxth	r2, r2
 801445e:	83a2      	strh	r2, [r4, #28]
 8014460:	4413      	add	r3, r2
 8014462:	f1b9 0f00 	cmp.w	r9, #0
 8014466:	d102      	bne.n	801446e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014468:	2d00      	cmp	r5, #0
 801446a:	d042      	beq.n	80144f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801446c:	b300      	cbz	r0, 80144b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801446e:	8c21      	ldrh	r1, [r4, #32]
 8014470:	4419      	add	r1, r3
 8014472:	458c      	cmp	ip, r1
 8014474:	da37      	bge.n	80144e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014476:	8ae1      	ldrh	r1, [r4, #22]
 8014478:	2900      	cmp	r1, #0
 801447a:	d034      	beq.n	80144e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801447c:	4563      	cmp	r3, ip
 801447e:	dd8d      	ble.n	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014480:	e01d      	b.n	80144be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014482:	8893      	ldrh	r3, [r2, #4]
 8014484:	8023      	strh	r3, [r4, #0]
 8014486:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801448a:	9901      	ldr	r1, [sp, #4]
 801448c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014490:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014494:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014498:	ea4b 0b00 	orr.w	fp, fp, r0
 801449c:	68e0      	ldr	r0, [r4, #12]
 801449e:	6803      	ldr	r3, [r0, #0]
 80144a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144a2:	4798      	blx	r3
 80144a4:	eb0b 0200 	add.w	r2, fp, r0
 80144a8:	b292      	uxth	r2, r2
 80144aa:	e7c5      	b.n	8014438 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80144ac:	2000      	movs	r0, #0
 80144ae:	e7d1      	b.n	8014454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80144b0:	4563      	cmp	r3, ip
 80144b2:	f77f af73 	ble.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144b6:	8ae3      	ldrh	r3, [r4, #22]
 80144b8:	2b00      	cmp	r3, #0
 80144ba:	f43f af6f 	beq.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144be:	2301      	movs	r3, #1
 80144c0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80144c4:	8c22      	ldrh	r2, [r4, #32]
 80144c6:	8be3      	ldrh	r3, [r4, #30]
 80144c8:	4413      	add	r3, r2
 80144ca:	83e3      	strh	r3, [r4, #30]
 80144cc:	68e0      	ldr	r0, [r4, #12]
 80144ce:	6803      	ldr	r3, [r0, #0]
 80144d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80144d2:	4798      	blx	r3
 80144d4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80144d8:	4418      	add	r0, r3
 80144da:	8a63      	ldrh	r3, [r4, #18]
 80144dc:	1a18      	subs	r0, r3, r0
 80144de:	8260      	strh	r0, [r4, #18]
 80144e0:	b005      	add	sp, #20
 80144e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144e6:	2300      	movs	r3, #0
 80144e8:	4611      	mov	r1, r2
 80144ea:	4620      	mov	r0, r4
 80144ec:	f7ff ff0e 	bl	801430c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80144f0:	e754      	b.n	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144f2:	4563      	cmp	r3, ip
 80144f4:	dd14      	ble.n	8014520 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80144f6:	b117      	cbz	r7, 80144fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80144f8:	2301      	movs	r3, #1
 80144fa:	460a      	mov	r2, r1
 80144fc:	e772      	b.n	80143e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80144fe:	2e00      	cmp	r6, #0
 8014500:	f43f af4c 	beq.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014504:	2800      	cmp	r0, #0
 8014506:	f47f af49 	bne.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801450a:	f1ba 0f00 	cmp.w	sl, #0
 801450e:	d002      	beq.n	8014516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014510:	2301      	movs	r3, #1
 8014512:	4642      	mov	r2, r8
 8014514:	e767      	b.n	80143e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014516:	8ae3      	ldrh	r3, [r4, #22]
 8014518:	2b00      	cmp	r3, #0
 801451a:	f43f af3f 	beq.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801451e:	e7d5      	b.n	80144cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014520:	2800      	cmp	r0, #0
 8014522:	f47f af3b 	bne.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014526:	f1ba 0f00 	cmp.w	sl, #0
 801452a:	f43f af37 	beq.w	801439c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801452e:	2301      	movs	r3, #1
 8014530:	4642      	mov	r2, r8
 8014532:	e7da      	b.n	80144ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014534 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014534:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014536:	4605      	mov	r5, r0
 8014538:	b08f      	sub	sp, #60	; 0x3c
 801453a:	4617      	mov	r7, r2
 801453c:	461c      	mov	r4, r3
 801453e:	460e      	mov	r6, r1
 8014540:	b1d1      	cbz	r1, 8014578 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014542:	681b      	ldr	r3, [r3, #0]
 8014544:	4620      	mov	r0, r4
 8014546:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014548:	4798      	blx	r3
 801454a:	4240      	negs	r0, r0
 801454c:	b200      	sxth	r0, r0
 801454e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014552:	9603      	str	r6, [sp, #12]
 8014554:	9700      	str	r7, [sp, #0]
 8014556:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801455a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801455e:	4629      	mov	r1, r5
 8014560:	a805      	add	r0, sp, #20
 8014562:	f7ff fcbf 	bl	8013ee4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014566:	2401      	movs	r4, #1
 8014568:	a805      	add	r0, sp, #20
 801456a:	f7ff fedf 	bl	801432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801456e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014572:	b163      	cbz	r3, 801458e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014574:	3401      	adds	r4, #1
 8014576:	e7f7      	b.n	8014568 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014578:	f002 ff48 	bl	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801457c:	2401      	movs	r4, #1
 801457e:	280a      	cmp	r0, #10
 8014580:	4628      	mov	r0, r5
 8014582:	bf08      	it	eq
 8014584:	3401      	addeq	r4, #1
 8014586:	f002 ff41 	bl	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801458a:	2800      	cmp	r0, #0
 801458c:	d1f7      	bne.n	801457e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801458e:	b2a0      	uxth	r0, r4
 8014590:	b00f      	add	sp, #60	; 0x3c
 8014592:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014598:	b0e3      	sub	sp, #396	; 0x18c
 801459a:	461c      	mov	r4, r3
 801459c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801459e:	4683      	mov	fp, r0
 80145a0:	4688      	mov	r8, r1
 80145a2:	2b00      	cmp	r3, #0
 80145a4:	f000 8112 	beq.w	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145a8:	6823      	ldr	r3, [r4, #0]
 80145aa:	2b00      	cmp	r3, #0
 80145ac:	f000 810e 	beq.w	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145b0:	7ba3      	ldrb	r3, [r4, #14]
 80145b2:	2b00      	cmp	r3, #0
 80145b4:	f000 810a 	beq.w	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145b8:	6810      	ldr	r0, [r2, #0]
 80145ba:	6851      	ldr	r1, [r2, #4]
 80145bc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80145c0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80145c4:	ad0a      	add	r5, sp, #40	; 0x28
 80145c6:	462b      	mov	r3, r5
 80145c8:	c303      	stmia	r3!, {r0, r1}
 80145ca:	2100      	movs	r1, #0
 80145cc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80145d0:	910c      	str	r1, [sp, #48]	; 0x30
 80145d2:	79a2      	ldrb	r2, [r4, #6]
 80145d4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80145d8:	a90c      	add	r1, sp, #48	; 0x30
 80145da:	4628      	mov	r0, r5
 80145dc:	f7ff fd01 	bl	8013fe2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80145e0:	a90c      	add	r1, sp, #48	; 0x30
 80145e2:	4608      	mov	r0, r1
 80145e4:	79a2      	ldrb	r2, [r4, #6]
 80145e6:	f7ff fcfc 	bl	8013fe2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80145ea:	a817      	add	r0, sp, #92	; 0x5c
 80145ec:	f002 fae2 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 80145f0:	6820      	ldr	r0, [r4, #0]
 80145f2:	6803      	ldr	r3, [r0, #0]
 80145f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80145f6:	4798      	blx	r3
 80145f8:	4606      	mov	r6, r0
 80145fa:	6820      	ldr	r0, [r4, #0]
 80145fc:	6803      	ldr	r3, [r0, #0]
 80145fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014600:	4798      	blx	r3
 8014602:	4633      	mov	r3, r6
 8014604:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014606:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014608:	9000      	str	r0, [sp, #0]
 801460a:	a817      	add	r0, sp, #92	; 0x5c
 801460c:	f002 fb2d 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014610:	6820      	ldr	r0, [r4, #0]
 8014612:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014616:	6803      	ldr	r3, [r0, #0]
 8014618:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801461a:	4798      	blx	r3
 801461c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014620:	6823      	ldr	r3, [r4, #0]
 8014622:	4607      	mov	r7, r0
 8014624:	4406      	add	r6, r0
 8014626:	a830      	add	r0, sp, #192	; 0xc0
 8014628:	f893 9009 	ldrb.w	r9, [r3, #9]
 801462c:	f002 fac2 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8014630:	7c23      	ldrb	r3, [r4, #16]
 8014632:	b17b      	cbz	r3, 8014654 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014634:	6820      	ldr	r0, [r4, #0]
 8014636:	6803      	ldr	r3, [r0, #0]
 8014638:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801463a:	4798      	blx	r3
 801463c:	9009      	str	r0, [sp, #36]	; 0x24
 801463e:	6820      	ldr	r0, [r4, #0]
 8014640:	6802      	ldr	r2, [r0, #0]
 8014642:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014644:	4790      	blx	r2
 8014646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014648:	9000      	str	r0, [sp, #0]
 801464a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801464c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801464e:	a830      	add	r0, sp, #192	; 0xc0
 8014650:	f002 fb0b 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014654:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014658:	7be2      	ldrb	r2, [r4, #15]
 801465a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801465e:	1a8a      	subs	r2, r1, r2
 8014660:	7c21      	ldrb	r1, [r4, #16]
 8014662:	9103      	str	r1, [sp, #12]
 8014664:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014668:	9102      	str	r1, [sp, #8]
 801466a:	6821      	ldr	r1, [r4, #0]
 801466c:	9101      	str	r1, [sp, #4]
 801466e:	7961      	ldrb	r1, [r4, #5]
 8014670:	9100      	str	r1, [sp, #0]
 8014672:	b292      	uxth	r2, r2
 8014674:	a930      	add	r1, sp, #192	; 0xc0
 8014676:	a80e      	add	r0, sp, #56	; 0x38
 8014678:	f7ff fc34 	bl	8013ee4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801467c:	2e00      	cmp	r6, #0
 801467e:	dc5b      	bgt.n	8014738 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014680:	af17      	add	r7, sp, #92	; 0x5c
 8014682:	f04f 0900 	mov.w	r9, #0
 8014686:	7c23      	ldrb	r3, [r4, #16]
 8014688:	2b00      	cmp	r3, #0
 801468a:	f000 80b1 	beq.w	80147f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801468e:	a80e      	add	r0, sp, #56	; 0x38
 8014690:	f7ff fe4c 	bl	801432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014694:	f1ba 0f00 	cmp.w	sl, #0
 8014698:	f000 80a5 	beq.w	80147e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801469c:	7c23      	ldrb	r3, [r4, #16]
 801469e:	9309      	str	r3, [sp, #36]	; 0x24
 80146a0:	2264      	movs	r2, #100	; 0x64
 80146a2:	4639      	mov	r1, r7
 80146a4:	a849      	add	r0, sp, #292	; 0x124
 80146a6:	f014 fa6e 	bl	8028b86 <memcpy>
 80146aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146ac:	2b00      	cmp	r3, #0
 80146ae:	f000 80a7 	beq.w	8014800 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80146b2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80146b6:	7922      	ldrb	r2, [r4, #4]
 80146b8:	2a01      	cmp	r2, #1
 80146ba:	f040 808a 	bne.w	80147d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80146be:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80146c2:	1ac0      	subs	r0, r0, r3
 80146c4:	2302      	movs	r3, #2
 80146c6:	fb90 f0f3 	sdiv	r0, r0, r3
 80146ca:	b200      	sxth	r0, r0
 80146cc:	7c23      	ldrb	r3, [r4, #16]
 80146ce:	2b00      	cmp	r3, #0
 80146d0:	f000 808b 	beq.w	80147ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80146d4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80146d8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80146dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80146e0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80146e4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80146e8:	4410      	add	r0, r2
 80146ea:	b200      	sxth	r0, r0
 80146ec:	9000      	str	r0, [sp, #0]
 80146ee:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80146f2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80146f6:	4642      	mov	r2, r8
 80146f8:	2100      	movs	r1, #0
 80146fa:	4658      	mov	r0, fp
 80146fc:	f7ff fca2 	bl	8014044 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014700:	2800      	cmp	r0, #0
 8014702:	d163      	bne.n	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014704:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014708:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801470c:	b2b2      	uxth	r2, r6
 801470e:	4413      	add	r3, r2
 8014710:	1a8a      	subs	r2, r1, r2
 8014712:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014716:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801471a:	b21b      	sxth	r3, r3
 801471c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014720:	2a00      	cmp	r2, #0
 8014722:	d153      	bne.n	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014724:	6822      	ldr	r2, [r4, #0]
 8014726:	8869      	ldrh	r1, [r5, #2]
 8014728:	7a12      	ldrb	r2, [r2, #8]
 801472a:	1a9b      	subs	r3, r3, r2
 801472c:	88ea      	ldrh	r2, [r5, #6]
 801472e:	440a      	add	r2, r1
 8014730:	b212      	sxth	r2, r2
 8014732:	4293      	cmp	r3, r2
 8014734:	dda7      	ble.n	8014686 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014736:	e049      	b.n	80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014738:	7c23      	ldrb	r3, [r4, #16]
 801473a:	444f      	add	r7, r9
 801473c:	b1c3      	cbz	r3, 8014770 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801473e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014742:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014746:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801474a:	443b      	add	r3, r7
 801474c:	4293      	cmp	r3, r2
 801474e:	da97      	bge.n	8014680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014750:	a80e      	add	r0, sp, #56	; 0x38
 8014752:	f7ff fdeb 	bl	801432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014756:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801475a:	3b01      	subs	r3, #1
 801475c:	b29b      	uxth	r3, r3
 801475e:	454b      	cmp	r3, r9
 8014760:	9309      	str	r3, [sp, #36]	; 0x24
 8014762:	d021      	beq.n	80147a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014764:	7961      	ldrb	r1, [r4, #5]
 8014766:	a817      	add	r0, sp, #92	; 0x5c
 8014768:	f7f3 fb0a 	bl	8007d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801476c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801476e:	e7f4      	b.n	801475a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014770:	fa1f f986 	uxth.w	r9, r6
 8014774:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014778:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801477c:	443b      	add	r3, r7
 801477e:	4293      	cmp	r3, r2
 8014780:	f6bf af7e 	bge.w	8014680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014784:	a817      	add	r0, sp, #92	; 0x5c
 8014786:	f002 fe41 	bl	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801478a:	b1f8      	cbz	r0, 80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801478c:	280a      	cmp	r0, #10
 801478e:	d1f1      	bne.n	8014774 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014790:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014794:	444b      	add	r3, r9
 8014796:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801479a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801479e:	eba3 0309 	sub.w	r3, r3, r9
 80147a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147a6:	e7e5      	b.n	8014774 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80147a8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80147ac:	b2b3      	uxth	r3, r6
 80147ae:	441a      	add	r2, r3
 80147b0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80147b4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80147b8:	1ad3      	subs	r3, r2, r3
 80147ba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80147c2:	b11b      	cbz	r3, 80147cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147c4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80147c8:	2b00      	cmp	r3, #0
 80147ca:	d0ba      	beq.n	8014742 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80147cc:	b063      	add	sp, #396	; 0x18c
 80147ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147d2:	2a02      	cmp	r2, #2
 80147d4:	d105      	bne.n	80147e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80147d6:	7be2      	ldrb	r2, [r4, #15]
 80147d8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80147dc:	1a80      	subs	r0, r0, r2
 80147de:	1ac0      	subs	r0, r0, r3
 80147e0:	e773      	b.n	80146ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80147e2:	2000      	movs	r0, #0
 80147e4:	e772      	b.n	80146cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80147e6:	7be0      	ldrb	r0, [r4, #15]
 80147e8:	e770      	b.n	80146cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80147ea:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80147ee:	e773      	b.n	80146d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80147f0:	f1ba 0f00 	cmp.w	sl, #0
 80147f4:	d0f7      	beq.n	80147e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80147f6:	2264      	movs	r2, #100	; 0x64
 80147f8:	4639      	mov	r1, r7
 80147fa:	a849      	add	r0, sp, #292	; 0x124
 80147fc:	f014 f9c3 	bl	8028b86 <memcpy>
 8014800:	2300      	movs	r3, #0
 8014802:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014806:	6821      	ldr	r1, [r4, #0]
 8014808:	a849      	add	r0, sp, #292	; 0x124
 801480a:	f7ff fbae 	bl	8013f6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801480e:	b203      	sxth	r3, r0
 8014810:	e751      	b.n	80146b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014812 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014812:	2b03      	cmp	r3, #3
 8014814:	d818      	bhi.n	8014848 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014816:	e8df f003 	tbb	[pc, r3]
 801481a:	0602      	.short	0x0602
 801481c:	130d      	.short	0x130d
 801481e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014822:	1850      	adds	r0, r2, r1
 8014824:	4770      	bx	lr
 8014826:	8803      	ldrh	r3, [r0, #0]
 8014828:	8880      	ldrh	r0, [r0, #4]
 801482a:	4418      	add	r0, r3
 801482c:	b200      	sxth	r0, r0
 801482e:	1a80      	subs	r0, r0, r2
 8014830:	3801      	subs	r0, #1
 8014832:	4770      	bx	lr
 8014834:	8803      	ldrh	r3, [r0, #0]
 8014836:	8880      	ldrh	r0, [r0, #4]
 8014838:	4418      	add	r0, r3
 801483a:	b200      	sxth	r0, r0
 801483c:	1a40      	subs	r0, r0, r1
 801483e:	e7f7      	b.n	8014830 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014840:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014844:	4410      	add	r0, r2
 8014846:	4770      	bx	lr
 8014848:	2000      	movs	r0, #0
 801484a:	4770      	bx	lr

0801484c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801484c:	2b03      	cmp	r3, #3
 801484e:	d817      	bhi.n	8014880 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014850:	e8df f003 	tbb	[pc, r3]
 8014854:	10090602 	.word	0x10090602
 8014858:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801485c:	1850      	adds	r0, r2, r1
 801485e:	4770      	bx	lr
 8014860:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014864:	e7fa      	b.n	801485c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014866:	8843      	ldrh	r3, [r0, #2]
 8014868:	88c0      	ldrh	r0, [r0, #6]
 801486a:	4418      	add	r0, r3
 801486c:	b200      	sxth	r0, r0
 801486e:	1a80      	subs	r0, r0, r2
 8014870:	3801      	subs	r0, #1
 8014872:	4770      	bx	lr
 8014874:	8843      	ldrh	r3, [r0, #2]
 8014876:	88c0      	ldrh	r0, [r0, #6]
 8014878:	4418      	add	r0, r3
 801487a:	b200      	sxth	r0, r0
 801487c:	1a40      	subs	r0, r0, r1
 801487e:	e7f7      	b.n	8014870 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014880:	2000      	movs	r0, #0
 8014882:	4770      	bx	lr

08014884 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014884:	4b01      	ldr	r3, [pc, #4]	; (801488c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014886:	2200      	movs	r2, #0
 8014888:	601a      	str	r2, [r3, #0]
 801488a:	4770      	bx	lr
 801488c:	200137dc 	.word	0x200137dc

08014890 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014890:	4603      	mov	r3, r0
 8014892:	b1c8      	cbz	r0, 80148c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014894:	0c02      	lsrs	r2, r0, #16
 8014896:	0412      	lsls	r2, r2, #16
 8014898:	b9a2      	cbnz	r2, 80148c4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801489a:	0403      	lsls	r3, r0, #16
 801489c:	2010      	movs	r0, #16
 801489e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80148a2:	bf04      	itt	eq
 80148a4:	021b      	lsleq	r3, r3, #8
 80148a6:	3008      	addeq	r0, #8
 80148a8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80148ac:	bf04      	itt	eq
 80148ae:	011b      	lsleq	r3, r3, #4
 80148b0:	3004      	addeq	r0, #4
 80148b2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80148b6:	bf04      	itt	eq
 80148b8:	009b      	lsleq	r3, r3, #2
 80148ba:	3002      	addeq	r0, #2
 80148bc:	2b00      	cmp	r3, #0
 80148be:	db04      	blt.n	80148ca <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80148c0:	3001      	adds	r0, #1
 80148c2:	4770      	bx	lr
 80148c4:	2000      	movs	r0, #0
 80148c6:	e7ea      	b.n	801489e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80148c8:	2020      	movs	r0, #32
 80148ca:	4770      	bx	lr

080148cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80148cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148d0:	b087      	sub	sp, #28
 80148d2:	460d      	mov	r5, r1
 80148d4:	4616      	mov	r6, r2
 80148d6:	4698      	mov	r8, r3
 80148d8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80148dc:	4601      	mov	r1, r0
 80148de:	b120      	cbz	r0, 80148ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148e0:	b11a      	cbz	r2, 80148ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148e2:	2d1f      	cmp	r5, #31
 80148e4:	d801      	bhi.n	80148ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148e6:	2b1f      	cmp	r3, #31
 80148e8:	d904      	bls.n	80148f4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80148ea:	2000      	movs	r0, #0
 80148ec:	6038      	str	r0, [r7, #0]
 80148ee:	b007      	add	sp, #28
 80148f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148f4:	b97d      	cbnz	r5, 8014916 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80148f6:	b143      	cbz	r3, 801490a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80148f8:	4602      	mov	r2, r0
 80148fa:	e9cd 4700 	strd	r4, r7, [sp]
 80148fe:	462b      	mov	r3, r5
 8014900:	4641      	mov	r1, r8
 8014902:	4630      	mov	r0, r6
 8014904:	f7ff ffe2 	bl	80148cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014908:	e7f1      	b.n	80148ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801490a:	f04f 33ff 	mov.w	r3, #4294967295
 801490e:	603b      	str	r3, [r7, #0]
 8014910:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014914:	e7eb      	b.n	80148ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014916:	fa32 fa05 	lsrs.w	sl, r2, r5
 801491a:	d106      	bne.n	801492a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801491c:	4346      	muls	r6, r0
 801491e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014922:	fb04 6610 	mls	r6, r4, r0, r6
 8014926:	603e      	str	r6, [r7, #0]
 8014928:	e7e1      	b.n	80148ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801492a:	2201      	movs	r2, #1
 801492c:	40aa      	lsls	r2, r5
 801492e:	3a01      	subs	r2, #1
 8014930:	4016      	ands	r6, r2
 8014932:	fa00 fb05 	lsl.w	fp, r0, r5
 8014936:	4630      	mov	r0, r6
 8014938:	fbbb f9f4 	udiv	r9, fp, r4
 801493c:	fb0a f309 	mul.w	r3, sl, r9
 8014940:	9303      	str	r3, [sp, #12]
 8014942:	f7ff ffa5 	bl	8014890 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014946:	462b      	mov	r3, r5
 8014948:	460a      	mov	r2, r1
 801494a:	e9cd 4700 	strd	r4, r7, [sp]
 801494e:	4601      	mov	r1, r0
 8014950:	4630      	mov	r0, r6
 8014952:	f7ff ffbb 	bl	80148cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014956:	fb04 b919 	mls	r9, r4, r9, fp
 801495a:	4606      	mov	r6, r0
 801495c:	4648      	mov	r0, r9
 801495e:	eb05 0108 	add.w	r1, r5, r8
 8014962:	f7ff ff95 	bl	8014890 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014966:	ab05      	add	r3, sp, #20
 8014968:	e9cd 4300 	strd	r4, r3, [sp]
 801496c:	464a      	mov	r2, r9
 801496e:	4603      	mov	r3, r0
 8014970:	4650      	mov	r0, sl
 8014972:	f7ff ffab 	bl	80148cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014976:	6839      	ldr	r1, [r7, #0]
 8014978:	9a05      	ldr	r2, [sp, #20]
 801497a:	9b03      	ldr	r3, [sp, #12]
 801497c:	4411      	add	r1, r2
 801497e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014982:	18d3      	adds	r3, r2, r3
 8014984:	441e      	add	r6, r3
 8014986:	fb04 1412 	mls	r4, r4, r2, r1
 801498a:	4430      	add	r0, r6
 801498c:	603c      	str	r4, [r7, #0]
 801498e:	e7ae      	b.n	80148ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014990:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014994:	b085      	sub	sp, #20
 8014996:	f1b0 0900 	subs.w	r9, r0, #0
 801499a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801499c:	461d      	mov	r5, r3
 801499e:	bfbf      	itttt	lt
 80149a0:	6823      	ldrlt	r3, [r4, #0]
 80149a2:	425b      	neglt	r3, r3
 80149a4:	f1c9 0900 	rsblt	r9, r9, #0
 80149a8:	6023      	strlt	r3, [r4, #0]
 80149aa:	bfb4      	ite	lt
 80149ac:	f04f 36ff 	movlt.w	r6, #4294967295
 80149b0:	2601      	movge	r6, #1
 80149b2:	2a00      	cmp	r2, #0
 80149b4:	4617      	mov	r7, r2
 80149b6:	da04      	bge.n	80149c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80149b8:	6823      	ldr	r3, [r4, #0]
 80149ba:	425b      	negs	r3, r3
 80149bc:	4257      	negs	r7, r2
 80149be:	4276      	negs	r6, r6
 80149c0:	6023      	str	r3, [r4, #0]
 80149c2:	2d00      	cmp	r5, #0
 80149c4:	4638      	mov	r0, r7
 80149c6:	bfba      	itte	lt
 80149c8:	426d      	neglt	r5, r5
 80149ca:	f04f 38ff 	movlt.w	r8, #4294967295
 80149ce:	f04f 0801 	movge.w	r8, #1
 80149d2:	f7ff ff5d 	bl	8014890 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80149d6:	ab03      	add	r3, sp, #12
 80149d8:	e9cd 5300 	strd	r5, r3, [sp]
 80149dc:	463a      	mov	r2, r7
 80149de:	4603      	mov	r3, r0
 80149e0:	4648      	mov	r0, r9
 80149e2:	f7ff ff73 	bl	80148cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80149e6:	6823      	ldr	r3, [r4, #0]
 80149e8:	9a03      	ldr	r2, [sp, #12]
 80149ea:	4546      	cmp	r6, r8
 80149ec:	441a      	add	r2, r3
 80149ee:	fb92 f3f5 	sdiv	r3, r2, r5
 80149f2:	4418      	add	r0, r3
 80149f4:	bf18      	it	ne
 80149f6:	4240      	negne	r0, r0
 80149f8:	fb05 2313 	mls	r3, r5, r3, r2
 80149fc:	1c72      	adds	r2, r6, #1
 80149fe:	6023      	str	r3, [r4, #0]
 8014a00:	d105      	bne.n	8014a0e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014a02:	2b00      	cmp	r3, #0
 8014a04:	f1c3 0200 	rsb	r2, r3, #0
 8014a08:	db0b      	blt.n	8014a22 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014a0a:	6022      	str	r2, [r4, #0]
 8014a0c:	e006      	b.n	8014a1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a0e:	2e01      	cmp	r6, #1
 8014a10:	d104      	bne.n	8014a1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a12:	2b00      	cmp	r3, #0
 8014a14:	da02      	bge.n	8014a1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a16:	442b      	add	r3, r5
 8014a18:	3801      	subs	r0, #1
 8014a1a:	6023      	str	r3, [r4, #0]
 8014a1c:	b005      	add	sp, #20
 8014a1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014a22:	3801      	subs	r0, #1
 8014a24:	1b52      	subs	r2, r2, r5
 8014a26:	e7f0      	b.n	8014a0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014a28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014a28:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014a2c:	4c1c      	ldr	r4, [pc, #112]	; (8014aa0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014a2e:	6807      	ldr	r7, [r0, #0]
 8014a30:	69a3      	ldr	r3, [r4, #24]
 8014a32:	4605      	mov	r5, r0
 8014a34:	b92b      	cbnz	r3, 8014a42 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014a36:	6840      	ldr	r0, [r0, #4]
 8014a38:	e9c5 7000 	strd	r7, r0, [r5]
 8014a3c:	b004      	add	sp, #16
 8014a3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a42:	68a2      	ldr	r2, [r4, #8]
 8014a44:	6820      	ldr	r0, [r4, #0]
 8014a46:	ae04      	add	r6, sp, #16
 8014a48:	f04f 0802 	mov.w	r8, #2
 8014a4c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014a50:	440a      	add	r2, r1
 8014a52:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014a56:	69e1      	ldr	r1, [r4, #28]
 8014a58:	9600      	str	r6, [sp, #0]
 8014a5a:	463a      	mov	r2, r7
 8014a5c:	f7ff ff98 	bl	8014990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a60:	69a3      	ldr	r3, [r4, #24]
 8014a62:	686a      	ldr	r2, [r5, #4]
 8014a64:	6a21      	ldr	r1, [r4, #32]
 8014a66:	9600      	str	r6, [sp, #0]
 8014a68:	4607      	mov	r7, r0
 8014a6a:	6860      	ldr	r0, [r4, #4]
 8014a6c:	f7ff ff90 	bl	8014990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a70:	6962      	ldr	r2, [r4, #20]
 8014a72:	69a3      	ldr	r3, [r4, #24]
 8014a74:	fb93 f8f8 	sdiv	r8, r3, r8
 8014a78:	4442      	add	r2, r8
 8014a7a:	9203      	str	r2, [sp, #12]
 8014a7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014a7e:	682a      	ldr	r2, [r5, #0]
 8014a80:	9600      	str	r6, [sp, #0]
 8014a82:	4407      	add	r7, r0
 8014a84:	68e0      	ldr	r0, [r4, #12]
 8014a86:	f7ff ff83 	bl	8014990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a8a:	9600      	str	r6, [sp, #0]
 8014a8c:	4680      	mov	r8, r0
 8014a8e:	69a3      	ldr	r3, [r4, #24]
 8014a90:	686a      	ldr	r2, [r5, #4]
 8014a92:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014a94:	6920      	ldr	r0, [r4, #16]
 8014a96:	f7ff ff7b 	bl	8014990 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a9a:	4440      	add	r0, r8
 8014a9c:	e7cc      	b.n	8014a38 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014a9e:	bf00      	nop
 8014aa0:	200137e0 	.word	0x200137e0

08014aa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014aa4:	4b07      	ldr	r3, [pc, #28]	; (8014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014aa6:	781b      	ldrb	r3, [r3, #0]
 8014aa8:	2b01      	cmp	r3, #1
 8014aaa:	d109      	bne.n	8014ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014aac:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014ab0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ab4:	8003      	strh	r3, [r0, #0]
 8014ab6:	4b04      	ldr	r3, [pc, #16]	; (8014ac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014ab8:	881b      	ldrh	r3, [r3, #0]
 8014aba:	3b01      	subs	r3, #1
 8014abc:	1a9b      	subs	r3, r3, r2
 8014abe:	800b      	strh	r3, [r1, #0]
 8014ac0:	4770      	bx	lr
 8014ac2:	bf00      	nop
 8014ac4:	200137c4 	.word	0x200137c4
 8014ac8:	200137c0 	.word	0x200137c0

08014acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014acc:	b510      	push	{r4, lr}
 8014ace:	4b07      	ldr	r3, [pc, #28]	; (8014aec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014ad0:	781b      	ldrb	r3, [r3, #0]
 8014ad2:	2b01      	cmp	r3, #1
 8014ad4:	d108      	bne.n	8014ae8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014ad6:	4b06      	ldr	r3, [pc, #24]	; (8014af0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014ad8:	880c      	ldrh	r4, [r1, #0]
 8014ada:	881b      	ldrh	r3, [r3, #0]
 8014adc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ae0:	3b01      	subs	r3, #1
 8014ae2:	1b1b      	subs	r3, r3, r4
 8014ae4:	8003      	strh	r3, [r0, #0]
 8014ae6:	800a      	strh	r2, [r1, #0]
 8014ae8:	bd10      	pop	{r4, pc}
 8014aea:	bf00      	nop
 8014aec:	200137c4 	.word	0x200137c4
 8014af0:	200137c0 	.word	0x200137c0

08014af4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014af4:	b510      	push	{r4, lr}
 8014af6:	4b0a      	ldr	r3, [pc, #40]	; (8014b20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014af8:	781b      	ldrb	r3, [r3, #0]
 8014afa:	2b01      	cmp	r3, #1
 8014afc:	d10e      	bne.n	8014b1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014afe:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014b02:	8843      	ldrh	r3, [r0, #2]
 8014b04:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b08:	8044      	strh	r4, [r0, #2]
 8014b0a:	18ca      	adds	r2, r1, r3
 8014b0c:	4b05      	ldr	r3, [pc, #20]	; (8014b24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014b0e:	881b      	ldrh	r3, [r3, #0]
 8014b10:	1a9b      	subs	r3, r3, r2
 8014b12:	8003      	strh	r3, [r0, #0]
 8014b14:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014b18:	80c3      	strh	r3, [r0, #6]
 8014b1a:	8081      	strh	r1, [r0, #4]
 8014b1c:	bd10      	pop	{r4, pc}
 8014b1e:	bf00      	nop
 8014b20:	200137c4 	.word	0x200137c4
 8014b24:	200137c0 	.word	0x200137c0

08014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014b28:	4b08      	ldr	r3, [pc, #32]	; (8014b4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014b2a:	781b      	ldrb	r3, [r3, #0]
 8014b2c:	2b01      	cmp	r3, #1
 8014b2e:	d10c      	bne.n	8014b4a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014b30:	8803      	ldrh	r3, [r0, #0]
 8014b32:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014b36:	8842      	ldrh	r2, [r0, #2]
 8014b38:	8002      	strh	r2, [r0, #0]
 8014b3a:	185a      	adds	r2, r3, r1
 8014b3c:	4b04      	ldr	r3, [pc, #16]	; (8014b50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014b3e:	881b      	ldrh	r3, [r3, #0]
 8014b40:	1a9b      	subs	r3, r3, r2
 8014b42:	8043      	strh	r3, [r0, #2]
 8014b44:	88c3      	ldrh	r3, [r0, #6]
 8014b46:	8083      	strh	r3, [r0, #4]
 8014b48:	80c1      	strh	r1, [r0, #6]
 8014b4a:	4770      	bx	lr
 8014b4c:	200137c4 	.word	0x200137c4
 8014b50:	200137c0 	.word	0x200137c0

08014b54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014b54:	b510      	push	{r4, lr}
 8014b56:	4b07      	ldr	r3, [pc, #28]	; (8014b74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014b58:	781b      	ldrb	r3, [r3, #0]
 8014b5a:	2b01      	cmp	r3, #1
 8014b5c:	d108      	bne.n	8014b70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014b5e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014b62:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b66:	8003      	strh	r3, [r0, #0]
 8014b68:	8893      	ldrh	r3, [r2, #4]
 8014b6a:	3b01      	subs	r3, #1
 8014b6c:	1b1b      	subs	r3, r3, r4
 8014b6e:	800b      	strh	r3, [r1, #0]
 8014b70:	bd10      	pop	{r4, pc}
 8014b72:	bf00      	nop
 8014b74:	200137c4 	.word	0x200137c4

08014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014b78:	4b0b      	ldr	r3, [pc, #44]	; (8014ba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014b7a:	781b      	ldrb	r3, [r3, #0]
 8014b7c:	2b01      	cmp	r3, #1
 8014b7e:	d111      	bne.n	8014ba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014b80:	680b      	ldr	r3, [r1, #0]
 8014b82:	ed90 7a00 	vldr	s14, [r0]
 8014b86:	6003      	str	r3, [r0, #0]
 8014b88:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014b8c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014b90:	ee07 3a90 	vmov	s15, r3
 8014b94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014b98:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014b9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014ba0:	edc1 7a00 	vstr	s15, [r1]
 8014ba4:	4770      	bx	lr
 8014ba6:	bf00      	nop
 8014ba8:	200137c4 	.word	0x200137c4
 8014bac:	38d1b717 	.word	0x38d1b717

08014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014bb0:	b510      	push	{r4, lr}
 8014bb2:	4b0a      	ldr	r3, [pc, #40]	; (8014bdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014bb4:	781b      	ldrb	r3, [r3, #0]
 8014bb6:	2b01      	cmp	r3, #1
 8014bb8:	460a      	mov	r2, r1
 8014bba:	d10d      	bne.n	8014bd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014bbc:	8881      	ldrh	r1, [r0, #4]
 8014bbe:	8803      	ldrh	r3, [r0, #0]
 8014bc0:	440b      	add	r3, r1
 8014bc2:	4601      	mov	r1, r0
 8014bc4:	3b01      	subs	r3, #1
 8014bc6:	f821 3b02 	strh.w	r3, [r1], #2
 8014bca:	f7ff ffc3 	bl	8014b54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014bce:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014bd2:	88c2      	ldrh	r2, [r0, #6]
 8014bd4:	8082      	strh	r2, [r0, #4]
 8014bd6:	80c3      	strh	r3, [r0, #6]
 8014bd8:	bd10      	pop	{r4, pc}
 8014bda:	bf00      	nop
 8014bdc:	200137c4 	.word	0x200137c4

08014be0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014be0:	4b06      	ldr	r3, [pc, #24]	; (8014bfc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014be2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014be6:	4b06      	ldr	r3, [pc, #24]	; (8014c00 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014be8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014bec:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014bf0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014bf4:	2100      	movs	r1, #0
 8014bf6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014bfa:	4770      	bx	lr
 8014bfc:	200137c0 	.word	0x200137c0
 8014c00:	200137c2 	.word	0x200137c2

08014c04 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014c04:	4b03      	ldr	r3, [pc, #12]	; (8014c14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014c06:	6818      	ldr	r0, [r3, #0]
 8014c08:	b110      	cbz	r0, 8014c10 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014c0a:	6803      	ldr	r3, [r0, #0]
 8014c0c:	699b      	ldr	r3, [r3, #24]
 8014c0e:	4718      	bx	r3
 8014c10:	4770      	bx	lr
 8014c12:	bf00      	nop
 8014c14:	20013810 	.word	0x20013810

08014c18 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014c18:	4770      	bx	lr
	...

08014c1c <_ZN8touchgfx11Application4drawEv>:
 8014c1c:	b507      	push	{r0, r1, r2, lr}
 8014c1e:	4b09      	ldr	r3, [pc, #36]	; (8014c44 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014c20:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c24:	4b08      	ldr	r3, [pc, #32]	; (8014c48 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014c26:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c2a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c32:	6803      	ldr	r3, [r0, #0]
 8014c34:	2100      	movs	r1, #0
 8014c36:	9100      	str	r1, [sp, #0]
 8014c38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014c3a:	4669      	mov	r1, sp
 8014c3c:	4798      	blx	r3
 8014c3e:	b003      	add	sp, #12
 8014c40:	f85d fb04 	ldr.w	pc, [sp], #4
 8014c44:	200137c0 	.word	0x200137c0
 8014c48:	200137c2 	.word	0x200137c2

08014c4c <_ZN8touchgfx11Application10invalidateEv>:
 8014c4c:	4b09      	ldr	r3, [pc, #36]	; (8014c74 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014c4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c52:	4b09      	ldr	r3, [pc, #36]	; (8014c78 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014c54:	b082      	sub	sp, #8
 8014c56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c5a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c5e:	2100      	movs	r1, #0
 8014c60:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c64:	9100      	str	r1, [sp, #0]
 8014c66:	6803      	ldr	r3, [r0, #0]
 8014c68:	aa02      	add	r2, sp, #8
 8014c6a:	e912 0006 	ldmdb	r2, {r1, r2}
 8014c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014c70:	b002      	add	sp, #8
 8014c72:	4718      	bx	r3
 8014c74:	200137c0 	.word	0x200137c0
 8014c78:	200137c2 	.word	0x200137c2

08014c7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014c7c:	4b03      	ldr	r3, [pc, #12]	; (8014c8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014c7e:	6818      	ldr	r0, [r3, #0]
 8014c80:	b110      	cbz	r0, 8014c88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014c82:	6803      	ldr	r3, [r0, #0]
 8014c84:	69db      	ldr	r3, [r3, #28]
 8014c86:	4718      	bx	r3
 8014c88:	4770      	bx	lr
 8014c8a:	bf00      	nop
 8014c8c:	20013810 	.word	0x20013810

08014c90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014c90:	4b03      	ldr	r3, [pc, #12]	; (8014ca0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014c92:	6818      	ldr	r0, [r3, #0]
 8014c94:	b110      	cbz	r0, 8014c9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014c96:	6803      	ldr	r3, [r0, #0]
 8014c98:	6a1b      	ldr	r3, [r3, #32]
 8014c9a:	4718      	bx	r3
 8014c9c:	4770      	bx	lr
 8014c9e:	bf00      	nop
 8014ca0:	20013810 	.word	0x20013810

08014ca4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014ca4:	2300      	movs	r3, #0
 8014ca6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014caa:	4770      	bx	lr

08014cac <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014cac:	4b03      	ldr	r3, [pc, #12]	; (8014cbc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014cae:	6818      	ldr	r0, [r3, #0]
 8014cb0:	b110      	cbz	r0, 8014cb8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014cb2:	6803      	ldr	r3, [r0, #0]
 8014cb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014cb6:	4718      	bx	r3
 8014cb8:	4770      	bx	lr
 8014cba:	bf00      	nop
 8014cbc:	20013810 	.word	0x20013810

08014cc0 <_ZN8touchgfx11ApplicationD1Ev>:
 8014cc0:	4770      	bx	lr

08014cc2 <_ZN8touchgfx11ApplicationD0Ev>:
 8014cc2:	b510      	push	{r4, lr}
 8014cc4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014cc8:	4604      	mov	r4, r0
 8014cca:	f012 fe40 	bl	802794e <_ZdlPvj>
 8014cce:	4620      	mov	r0, r4
 8014cd0:	bd10      	pop	{r4, pc}

08014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014cd2:	b510      	push	{r4, lr}
 8014cd4:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014cd8:	888a      	ldrh	r2, [r1, #4]
 8014cda:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014cde:	4422      	add	r2, r4
 8014ce0:	b212      	sxth	r2, r2
 8014ce2:	4293      	cmp	r3, r2
 8014ce4:	da15      	bge.n	8014d12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014ce6:	8882      	ldrh	r2, [r0, #4]
 8014ce8:	4413      	add	r3, r2
 8014cea:	b21b      	sxth	r3, r3
 8014cec:	429c      	cmp	r4, r3
 8014cee:	da10      	bge.n	8014d12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014cf0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014cf4:	88c9      	ldrh	r1, [r1, #6]
 8014cf6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014cfa:	4419      	add	r1, r3
 8014cfc:	b209      	sxth	r1, r1
 8014cfe:	428a      	cmp	r2, r1
 8014d00:	da07      	bge.n	8014d12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d02:	88c0      	ldrh	r0, [r0, #6]
 8014d04:	4410      	add	r0, r2
 8014d06:	b200      	sxth	r0, r0
 8014d08:	4283      	cmp	r3, r0
 8014d0a:	bfac      	ite	ge
 8014d0c:	2000      	movge	r0, #0
 8014d0e:	2001      	movlt	r0, #1
 8014d10:	bd10      	pop	{r4, pc}
 8014d12:	2000      	movs	r0, #0
 8014d14:	e7fc      	b.n	8014d10 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014d16 <_ZN8touchgfx4Rect10restrictToEss>:
 8014d16:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014d1a:	2b00      	cmp	r3, #0
 8014d1c:	b510      	push	{r4, lr}
 8014d1e:	da04      	bge.n	8014d2a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014d20:	8884      	ldrh	r4, [r0, #4]
 8014d22:	4423      	add	r3, r4
 8014d24:	8083      	strh	r3, [r0, #4]
 8014d26:	2300      	movs	r3, #0
 8014d28:	8003      	strh	r3, [r0, #0]
 8014d2a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014d2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014d32:	1b09      	subs	r1, r1, r4
 8014d34:	428b      	cmp	r3, r1
 8014d36:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014d3a:	bfc8      	it	gt
 8014d3c:	8081      	strhgt	r1, [r0, #4]
 8014d3e:	2b00      	cmp	r3, #0
 8014d40:	da04      	bge.n	8014d4c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014d42:	88c1      	ldrh	r1, [r0, #6]
 8014d44:	440b      	add	r3, r1
 8014d46:	80c3      	strh	r3, [r0, #6]
 8014d48:	2300      	movs	r3, #0
 8014d4a:	8043      	strh	r3, [r0, #2]
 8014d4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014d50:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014d54:	1a52      	subs	r2, r2, r1
 8014d56:	4293      	cmp	r3, r2
 8014d58:	bfc8      	it	gt
 8014d5a:	80c2      	strhgt	r2, [r0, #6]
 8014d5c:	bd10      	pop	{r4, pc}
	...

08014d60 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014d60:	b510      	push	{r4, lr}
 8014d62:	4b10      	ldr	r3, [pc, #64]	; (8014da4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014d64:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014d68:	4b0f      	ldr	r3, [pc, #60]	; (8014da8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014d6a:	460c      	mov	r4, r1
 8014d6c:	4620      	mov	r0, r4
 8014d6e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014d72:	f7ff ffd0 	bl	8014d16 <_ZN8touchgfx4Rect10restrictToEss>
 8014d76:	4b0d      	ldr	r3, [pc, #52]	; (8014dac <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014d78:	6818      	ldr	r0, [r3, #0]
 8014d7a:	b190      	cbz	r0, 8014da2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014d7c:	6803      	ldr	r3, [r0, #0]
 8014d7e:	4621      	mov	r1, r4
 8014d80:	689b      	ldr	r3, [r3, #8]
 8014d82:	4798      	blx	r3
 8014d84:	4b0a      	ldr	r3, [pc, #40]	; (8014db0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014d86:	6818      	ldr	r0, [r3, #0]
 8014d88:	b118      	cbz	r0, 8014d92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014d8a:	6803      	ldr	r3, [r0, #0]
 8014d8c:	4621      	mov	r1, r4
 8014d8e:	689b      	ldr	r3, [r3, #8]
 8014d90:	4798      	blx	r3
 8014d92:	4b08      	ldr	r3, [pc, #32]	; (8014db4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014d94:	6818      	ldr	r0, [r3, #0]
 8014d96:	6803      	ldr	r3, [r0, #0]
 8014d98:	4621      	mov	r1, r4
 8014d9a:	69db      	ldr	r3, [r3, #28]
 8014d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014da0:	4718      	bx	r3
 8014da2:	bd10      	pop	{r4, pc}
 8014da4:	200137c2 	.word	0x200137c2
 8014da8:	200137c0 	.word	0x200137c0
 8014dac:	20013810 	.word	0x20013810
 8014db0:	2001380c 	.word	0x2001380c
 8014db4:	200137cc 	.word	0x200137cc

08014db8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014dba:	4606      	mov	r6, r0
 8014dbc:	4608      	mov	r0, r1
 8014dbe:	460f      	mov	r7, r1
 8014dc0:	f7fa ff97 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014dc4:	b9e8      	cbnz	r0, 8014e02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dc6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014dca:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014dce:	42a5      	cmp	r5, r4
 8014dd0:	db17      	blt.n	8014e02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dd2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014dd6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014dda:	429a      	cmp	r2, r3
 8014ddc:	db11      	blt.n	8014e02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dde:	88b9      	ldrh	r1, [r7, #4]
 8014de0:	440d      	add	r5, r1
 8014de2:	88b1      	ldrh	r1, [r6, #4]
 8014de4:	440c      	add	r4, r1
 8014de6:	b22d      	sxth	r5, r5
 8014de8:	b224      	sxth	r4, r4
 8014dea:	42a5      	cmp	r5, r4
 8014dec:	dc09      	bgt.n	8014e02 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dee:	88f8      	ldrh	r0, [r7, #6]
 8014df0:	4410      	add	r0, r2
 8014df2:	88f2      	ldrh	r2, [r6, #6]
 8014df4:	4413      	add	r3, r2
 8014df6:	b200      	sxth	r0, r0
 8014df8:	b21b      	sxth	r3, r3
 8014dfa:	4298      	cmp	r0, r3
 8014dfc:	bfcc      	ite	gt
 8014dfe:	2000      	movgt	r0, #0
 8014e00:	2001      	movle	r0, #1
 8014e02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014e04 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014e04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e06:	4604      	mov	r4, r0
 8014e08:	4608      	mov	r0, r1
 8014e0a:	460d      	mov	r5, r1
 8014e0c:	f7fa ff71 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e10:	b978      	cbnz	r0, 8014e32 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014e12:	4620      	mov	r0, r4
 8014e14:	f7fa ff6d 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e18:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014e1c:	b150      	cbz	r0, 8014e34 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014e1e:	8026      	strh	r6, [r4, #0]
 8014e20:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014e24:	8063      	strh	r3, [r4, #2]
 8014e26:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014e2a:	80a3      	strh	r3, [r4, #4]
 8014e2c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014e30:	80e3      	strh	r3, [r4, #6]
 8014e32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e34:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014e38:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014e3c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014e40:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014e44:	88ed      	ldrh	r5, [r5, #6]
 8014e46:	42b1      	cmp	r1, r6
 8014e48:	460f      	mov	r7, r1
 8014e4a:	bfa8      	it	ge
 8014e4c:	4637      	movge	r7, r6
 8014e4e:	4293      	cmp	r3, r2
 8014e50:	4618      	mov	r0, r3
 8014e52:	4466      	add	r6, ip
 8014e54:	bfa8      	it	ge
 8014e56:	4610      	movge	r0, r2
 8014e58:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014e5c:	8027      	strh	r7, [r4, #0]
 8014e5e:	442a      	add	r2, r5
 8014e60:	88e5      	ldrh	r5, [r4, #6]
 8014e62:	8060      	strh	r0, [r4, #2]
 8014e64:	4461      	add	r1, ip
 8014e66:	442b      	add	r3, r5
 8014e68:	b236      	sxth	r6, r6
 8014e6a:	b209      	sxth	r1, r1
 8014e6c:	b212      	sxth	r2, r2
 8014e6e:	b21b      	sxth	r3, r3
 8014e70:	428e      	cmp	r6, r1
 8014e72:	bfac      	ite	ge
 8014e74:	ebc7 0106 	rsbge	r1, r7, r6
 8014e78:	ebc7 0101 	rsblt	r1, r7, r1
 8014e7c:	429a      	cmp	r2, r3
 8014e7e:	bfac      	ite	ge
 8014e80:	ebc0 0202 	rsbge	r2, r0, r2
 8014e84:	ebc0 0203 	rsblt	r2, r0, r3
 8014e88:	80a1      	strh	r1, [r4, #4]
 8014e8a:	80e2      	strh	r2, [r4, #6]
 8014e8c:	e7d1      	b.n	8014e32 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014e90 <_ZN8touchgfx11Application11getInstanceEv>:
 8014e90:	4b01      	ldr	r3, [pc, #4]	; (8014e98 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014e92:	6818      	ldr	r0, [r3, #0]
 8014e94:	4770      	bx	lr
 8014e96:	bf00      	nop
 8014e98:	20013820 	.word	0x20013820

08014e9c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e9e:	4b10      	ldr	r3, [pc, #64]	; (8014ee0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014ea0:	781b      	ldrb	r3, [r3, #0]
 8014ea2:	4605      	mov	r5, r0
 8014ea4:	b1d3      	cbz	r3, 8014edc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014ea6:	4b0f      	ldr	r3, [pc, #60]	; (8014ee4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014ea8:	4f0f      	ldr	r7, [pc, #60]	; (8014ee8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014eaa:	881c      	ldrh	r4, [r3, #0]
 8014eac:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014eb0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014eb4:	42a3      	cmp	r3, r4
 8014eb6:	d90e      	bls.n	8014ed6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014eb8:	683b      	ldr	r3, [r7, #0]
 8014eba:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014ebe:	b10a      	cbz	r2, 8014ec4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014ec0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014ec2:	b900      	cbnz	r0, 8014ec6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014ec4:	6898      	ldr	r0, [r3, #8]
 8014ec6:	6803      	ldr	r3, [r0, #0]
 8014ec8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014ecc:	69db      	ldr	r3, [r3, #28]
 8014ece:	3401      	adds	r4, #1
 8014ed0:	4798      	blx	r3
 8014ed2:	b2a4      	uxth	r4, r4
 8014ed4:	e7ec      	b.n	8014eb0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014ed6:	2300      	movs	r3, #0
 8014ed8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014edc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ede:	bf00      	nop
 8014ee0:	200137ca 	.word	0x200137ca
 8014ee4:	20000088 	.word	0x20000088
 8014ee8:	200137cc 	.word	0x200137cc

08014eec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014eec:	b510      	push	{r4, lr}
 8014eee:	2300      	movs	r3, #0
 8014ef0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014ef4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014ef8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014efc:	4604      	mov	r4, r0
 8014efe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f02:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014f06:	429a      	cmp	r2, r3
 8014f08:	d90e      	bls.n	8014f28 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014f0a:	18e2      	adds	r2, r4, r3
 8014f0c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014f10:	b122      	cbz	r2, 8014f1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014f12:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014f16:	6803      	ldr	r3, [r0, #0]
 8014f18:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f1a:	4798      	blx	r3
 8014f1c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f20:	3301      	adds	r3, #1
 8014f22:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014f26:	e7ea      	b.n	8014efe <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014f28:	bd10      	pop	{r4, pc}

08014f2a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014f2a:	b530      	push	{r4, r5, lr}
 8014f2c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014f30:	2200      	movs	r2, #0
 8014f32:	b293      	uxth	r3, r2
 8014f34:	429d      	cmp	r5, r3
 8014f36:	d90e      	bls.n	8014f56 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f38:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014f3c:	428b      	cmp	r3, r1
 8014f3e:	d10b      	bne.n	8014f58 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f40:	1884      	adds	r4, r0, r2
 8014f42:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014f46:	b13b      	cbz	r3, 8014f58 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f48:	3b01      	subs	r3, #1
 8014f4a:	b2db      	uxtb	r3, r3
 8014f4c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014f50:	b90b      	cbnz	r3, 8014f56 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f52:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014f56:	bd30      	pop	{r4, r5, pc}
 8014f58:	3201      	adds	r2, #1
 8014f5a:	e7ea      	b.n	8014f32 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014f5c:	2300      	movs	r3, #0
 8014f5e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014f62:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014f66:	30a4      	adds	r0, #164	; 0xa4
 8014f68:	f802 3b01 	strb.w	r3, [r2], #1
 8014f6c:	4282      	cmp	r2, r0
 8014f6e:	d1fb      	bne.n	8014f68 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014f70:	4770      	bx	lr
	...

08014f74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014f74:	b570      	push	{r4, r5, r6, lr}
 8014f76:	4c0b      	ldr	r4, [pc, #44]	; (8014fa4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014f78:	4605      	mov	r5, r0
 8014f7a:	6820      	ldr	r0, [r4, #0]
 8014f7c:	460e      	mov	r6, r1
 8014f7e:	b110      	cbz	r0, 8014f86 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014f80:	6803      	ldr	r3, [r0, #0]
 8014f82:	695b      	ldr	r3, [r3, #20]
 8014f84:	4798      	blx	r3
 8014f86:	1d28      	adds	r0, r5, #4
 8014f88:	f7ff ffe8 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014f8c:	6026      	str	r6, [r4, #0]
 8014f8e:	6833      	ldr	r3, [r6, #0]
 8014f90:	4630      	mov	r0, r6
 8014f92:	68db      	ldr	r3, [r3, #12]
 8014f94:	4798      	blx	r3
 8014f96:	682b      	ldr	r3, [r5, #0]
 8014f98:	4628      	mov	r0, r5
 8014f9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014f9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014fa0:	4718      	bx	r3
 8014fa2:	bf00      	nop
 8014fa4:	20013810 	.word	0x20013810

08014fa8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014fa8:	2300      	movs	r3, #0
 8014faa:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014fae:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014fb2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fb4:	461a      	mov	r2, r3
 8014fb6:	461c      	mov	r4, r3
 8014fb8:	461d      	mov	r5, r3
 8014fba:	459c      	cmp	ip, r3
 8014fbc:	dd1a      	ble.n	8014ff4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014fbe:	18c6      	adds	r6, r0, r3
 8014fc0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014fc4:	b16e      	cbz	r6, 8014fe2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014fc6:	429a      	cmp	r2, r3
 8014fc8:	d008      	beq.n	8014fdc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014fca:	fa1f fe82 	uxth.w	lr, r2
 8014fce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014fd2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014fd6:	1887      	adds	r7, r0, r2
 8014fd8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014fdc:	3201      	adds	r2, #1
 8014fde:	3301      	adds	r3, #1
 8014fe0:	e7eb      	b.n	8014fba <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014fe2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014fe6:	4299      	cmp	r1, r3
 8014fe8:	bfa8      	it	ge
 8014fea:	3501      	addge	r5, #1
 8014fec:	429e      	cmp	r6, r3
 8014fee:	bfc8      	it	gt
 8014ff0:	3401      	addgt	r4, #1
 8014ff2:	e7f4      	b.n	8014fde <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014ff4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014ff8:	1b49      	subs	r1, r1, r5
 8014ffa:	1b1b      	subs	r3, r3, r4
 8014ffc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015000:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015004:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015008:	4293      	cmp	r3, r2
 801500a:	dd03      	ble.n	8015014 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801500c:	3b01      	subs	r3, #1
 801500e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015012:	e7f7      	b.n	8015004 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015014:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015018 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015018:	b570      	push	{r4, r5, r6, lr}
 801501a:	4d16      	ldr	r5, [pc, #88]	; (8015074 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801501c:	4604      	mov	r4, r0
 801501e:	6828      	ldr	r0, [r5, #0]
 8015020:	b140      	cbz	r0, 8015034 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015022:	7a03      	ldrb	r3, [r0, #8]
 8015024:	b933      	cbnz	r3, 8015034 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015026:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801502a:	6803      	ldr	r3, [r0, #0]
 801502c:	689b      	ldr	r3, [r3, #8]
 801502e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015032:	4718      	bx	r3
 8015034:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015038:	4e0f      	ldr	r6, [pc, #60]	; (8015078 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801503a:	b973      	cbnz	r3, 801505a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801503c:	b168      	cbz	r0, 801505a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801503e:	7a03      	ldrb	r3, [r0, #8]
 8015040:	b15b      	cbz	r3, 801505a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015042:	6830      	ldr	r0, [r6, #0]
 8015044:	b110      	cbz	r0, 801504c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015046:	6803      	ldr	r3, [r0, #0]
 8015048:	691b      	ldr	r3, [r3, #16]
 801504a:	4798      	blx	r3
 801504c:	6828      	ldr	r0, [r5, #0]
 801504e:	6803      	ldr	r3, [r0, #0]
 8015050:	68db      	ldr	r3, [r3, #12]
 8015052:	4798      	blx	r3
 8015054:	2301      	movs	r3, #1
 8015056:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801505a:	3404      	adds	r4, #4
 801505c:	4620      	mov	r0, r4
 801505e:	f7ff ff45 	bl	8014eec <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015062:	4620      	mov	r0, r4
 8015064:	f7ff ffa0 	bl	8014fa8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015068:	6830      	ldr	r0, [r6, #0]
 801506a:	b110      	cbz	r0, 8015072 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801506c:	6803      	ldr	r3, [r0, #0]
 801506e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015070:	e7dd      	b.n	801502e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015072:	bd70      	pop	{r4, r5, r6, pc}
 8015074:	20013814 	.word	0x20013814
 8015078:	20013810 	.word	0x20013810

0801507c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801507c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801507e:	2300      	movs	r3, #0
 8015080:	4604      	mov	r4, r0
 8015082:	460d      	mov	r5, r1
 8015084:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015088:	4618      	mov	r0, r3
 801508a:	b29a      	uxth	r2, r3
 801508c:	4291      	cmp	r1, r2
 801508e:	d911      	bls.n	80150b4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015090:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015094:	18e6      	adds	r6, r4, r3
 8015096:	42af      	cmp	r7, r5
 8015098:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801509c:	d105      	bne.n	80150aa <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801509e:	2aff      	cmp	r2, #255	; 0xff
 80150a0:	d002      	beq.n	80150a8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150a2:	3201      	adds	r2, #1
 80150a4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80150a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80150aa:	2a00      	cmp	r2, #0
 80150ac:	bf08      	it	eq
 80150ae:	2001      	moveq	r0, #1
 80150b0:	3301      	adds	r3, #1
 80150b2:	e7ea      	b.n	801508a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80150b4:	b120      	cbz	r0, 80150c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150b6:	2920      	cmp	r1, #32
 80150b8:	d102      	bne.n	80150c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150ba:	4620      	mov	r0, r4
 80150bc:	f7ff ff74 	bl	8014fa8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80150c0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80150c4:	2b1f      	cmp	r3, #31
 80150c6:	d8ef      	bhi.n	80150a8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150c8:	18e2      	adds	r2, r4, r3
 80150ca:	2101      	movs	r1, #1
 80150cc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80150d0:	185a      	adds	r2, r3, r1
 80150d2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80150d6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80150da:	e7e5      	b.n	80150a8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080150dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80150dc:	4603      	mov	r3, r0
 80150de:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80150e2:	2200      	movs	r2, #0
 80150e4:	801a      	strh	r2, [r3, #0]
 80150e6:	805a      	strh	r2, [r3, #2]
 80150e8:	809a      	strh	r2, [r3, #4]
 80150ea:	80da      	strh	r2, [r3, #6]
 80150ec:	3308      	adds	r3, #8
 80150ee:	428b      	cmp	r3, r1
 80150f0:	d1f8      	bne.n	80150e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80150f2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80150f6:	4770      	bx	lr

080150f8 <_ZN8touchgfx11ApplicationC1Ev>:
 80150f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80150fa:	4606      	mov	r6, r0
 80150fc:	4b1c      	ldr	r3, [pc, #112]	; (8015170 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80150fe:	f846 3b04 	str.w	r3, [r6], #4
 8015102:	4604      	mov	r4, r0
 8015104:	2500      	movs	r5, #0
 8015106:	22a8      	movs	r2, #168	; 0xa8
 8015108:	2100      	movs	r1, #0
 801510a:	4630      	mov	r0, r6
 801510c:	f013 fc15 	bl	802893a <memset>
 8015110:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015114:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015118:	f7ff ffe0 	bl	80150dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801511c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015120:	f7ff ffdc 	bl	80150dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015124:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015128:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801512c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015130:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015134:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015138:	490e      	ldr	r1, [pc, #56]	; (8015174 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801513a:	480f      	ldr	r0, [pc, #60]	; (8015178 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801513c:	4f0f      	ldr	r7, [pc, #60]	; (801517c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801513e:	f010 fbf5 	bl	802592c <CRC_Lock>
 8015142:	4b0f      	ldr	r3, [pc, #60]	; (8015180 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015144:	b158      	cbz	r0, 801515e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015146:	801d      	strh	r5, [r3, #0]
 8015148:	4a0e      	ldr	r2, [pc, #56]	; (8015184 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801514a:	2300      	movs	r3, #0
 801514c:	6013      	str	r3, [r2, #0]
 801514e:	4a0e      	ldr	r2, [pc, #56]	; (8015188 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015150:	603b      	str	r3, [r7, #0]
 8015152:	4630      	mov	r0, r6
 8015154:	6013      	str	r3, [r2, #0]
 8015156:	f7ff ff01 	bl	8014f5c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801515a:	4620      	mov	r0, r4
 801515c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801515e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015162:	2002      	movs	r0, #2
 8015164:	801a      	strh	r2, [r3, #0]
 8015166:	6038      	str	r0, [r7, #0]
 8015168:	f001 fb4a 	bl	8016800 <_ZN8touchgfx6Screen4drawEv>
 801516c:	e7ec      	b.n	8015148 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801516e:	bf00      	nop
 8015170:	0802cd3c 	.word	0x0802cd3c
 8015174:	b5e8b5cd 	.word	0xb5e8b5cd
 8015178:	f407a5c2 	.word	0xf407a5c2
 801517c:	20013810 	.word	0x20013810
 8015180:	20000088 	.word	0x20000088
 8015184:	20013820 	.word	0x20013820
 8015188:	20013814 	.word	0x20013814

0801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801518c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015190:	3b01      	subs	r3, #1
 8015192:	b29b      	uxth	r3, r3
 8015194:	428b      	cmp	r3, r1
 8015196:	b510      	push	{r4, lr}
 8015198:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801519c:	d908      	bls.n	80151b0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801519e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80151a2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80151a6:	681a      	ldr	r2, [r3, #0]
 80151a8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80151ac:	685a      	ldr	r2, [r3, #4]
 80151ae:	6062      	str	r2, [r4, #4]
 80151b0:	bd10      	pop	{r4, pc}
	...

080151b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80151b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151b8:	4b8f      	ldr	r3, [pc, #572]	; (80153f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80151ba:	b08f      	sub	sp, #60	; 0x3c
 80151bc:	ac0a      	add	r4, sp, #40	; 0x28
 80151be:	e884 0006 	stmia.w	r4, {r1, r2}
 80151c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151c6:	4b8d      	ldr	r3, [pc, #564]	; (80153fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80151c8:	4683      	mov	fp, r0
 80151ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 80151ce:	4620      	mov	r0, r4
 80151d0:	f7ff fda1 	bl	8014d16 <_ZN8touchgfx4Rect10restrictToEss>
 80151d4:	4620      	mov	r0, r4
 80151d6:	f7fa fd8c 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151da:	2800      	cmp	r0, #0
 80151dc:	d16a      	bne.n	80152b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80151de:	9403      	str	r4, [sp, #12]
 80151e0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80151e4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80151e8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80151ec:	35a4      	adds	r5, #164	; 0xa4
 80151ee:	9301      	str	r3, [sp, #4]
 80151f0:	b15c      	cbz	r4, 801520a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80151f2:	4629      	mov	r1, r5
 80151f4:	9803      	ldr	r0, [sp, #12]
 80151f6:	f7ff fddf 	bl	8014db8 <_ZNK8touchgfx4Rect8includesERKS0_>
 80151fa:	3c01      	subs	r4, #1
 80151fc:	b118      	cbz	r0, 8015206 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80151fe:	b2a1      	uxth	r1, r4
 8015200:	9801      	ldr	r0, [sp, #4]
 8015202:	f7ff ffc3 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015206:	3d08      	subs	r5, #8
 8015208:	e7f2      	b.n	80151f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801520a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801520e:	f8cd a010 	str.w	sl, [sp, #16]
 8015212:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015216:	9302      	str	r3, [sp, #8]
 8015218:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801521c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015220:	9306      	str	r3, [sp, #24]
 8015222:	445c      	add	r4, fp
 8015224:	2500      	movs	r5, #0
 8015226:	4626      	mov	r6, r4
 8015228:	f8cd a014 	str.w	sl, [sp, #20]
 801522c:	462f      	mov	r7, r5
 801522e:	9b05      	ldr	r3, [sp, #20]
 8015230:	2b00      	cmp	r3, #0
 8015232:	d073      	beq.n	801531c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015234:	9903      	ldr	r1, [sp, #12]
 8015236:	4630      	mov	r0, r6
 8015238:	f7ff fd4b 	bl	8014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801523c:	b350      	cbz	r0, 8015294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801523e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015242:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015246:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801524a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801524e:	45e6      	cmp	lr, ip
 8015250:	db33      	blt.n	80152ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015252:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015256:	88b3      	ldrh	r3, [r6, #4]
 8015258:	4472      	add	r2, lr
 801525a:	4463      	add	r3, ip
 801525c:	b212      	sxth	r2, r2
 801525e:	b21b      	sxth	r3, r3
 8015260:	429a      	cmp	r2, r3
 8015262:	dc2a      	bgt.n	80152ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015264:	88f3      	ldrh	r3, [r6, #6]
 8015266:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801526a:	fa1f f289 	uxth.w	r2, r9
 801526e:	4413      	add	r3, r2
 8015270:	b29b      	uxth	r3, r3
 8015272:	45c8      	cmp	r8, r9
 8015274:	fa1f fc88 	uxth.w	ip, r8
 8015278:	fa0f fe83 	sxth.w	lr, r3
 801527c:	db0f      	blt.n	801529e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801527e:	eba3 030c 	sub.w	r3, r3, ip
 8015282:	1ac9      	subs	r1, r1, r3
 8015284:	b209      	sxth	r1, r1
 8015286:	2900      	cmp	r1, #0
 8015288:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801528c:	dd12      	ble.n	80152b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801528e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015292:	4605      	mov	r5, r0
 8015294:	9b05      	ldr	r3, [sp, #20]
 8015296:	3b01      	subs	r3, #1
 8015298:	9305      	str	r3, [sp, #20]
 801529a:	3e08      	subs	r6, #8
 801529c:	e7c7      	b.n	801522e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801529e:	4461      	add	r1, ip
 80152a0:	b209      	sxth	r1, r1
 80152a2:	4571      	cmp	r1, lr
 80152a4:	dc38      	bgt.n	8015318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152a6:	eba2 020c 	sub.w	r2, r2, ip
 80152aa:	b212      	sxth	r2, r2
 80152ac:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80152b0:	2a00      	cmp	r2, #0
 80152b2:	dcee      	bgt.n	8015292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80152b4:	b00f      	add	sp, #60	; 0x3c
 80152b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152ba:	45c8      	cmp	r8, r9
 80152bc:	db2c      	blt.n	8015318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152be:	88f3      	ldrh	r3, [r6, #6]
 80152c0:	4499      	add	r9, r3
 80152c2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80152c6:	4498      	add	r8, r3
 80152c8:	fa0f f989 	sxth.w	r9, r9
 80152cc:	fa0f f888 	sxth.w	r8, r8
 80152d0:	45c1      	cmp	r9, r8
 80152d2:	db21      	blt.n	8015318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152d4:	88b3      	ldrh	r3, [r6, #4]
 80152d6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80152da:	fa1f f28c 	uxth.w	r2, ip
 80152de:	4413      	add	r3, r2
 80152e0:	b29b      	uxth	r3, r3
 80152e2:	45e6      	cmp	lr, ip
 80152e4:	fa1f f88e 	uxth.w	r8, lr
 80152e8:	fa0f f983 	sxth.w	r9, r3
 80152ec:	db0a      	blt.n	8015304 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80152ee:	eba3 0308 	sub.w	r3, r3, r8
 80152f2:	1ac9      	subs	r1, r1, r3
 80152f4:	b209      	sxth	r1, r1
 80152f6:	2900      	cmp	r1, #0
 80152f8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80152fc:	ddda      	ble.n	80152b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80152fe:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015302:	e7c6      	b.n	8015292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015304:	4441      	add	r1, r8
 8015306:	b209      	sxth	r1, r1
 8015308:	4549      	cmp	r1, r9
 801530a:	dc05      	bgt.n	8015318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801530c:	eba2 0208 	sub.w	r2, r2, r8
 8015310:	b212      	sxth	r2, r2
 8015312:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015316:	e7cb      	b.n	80152b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015318:	4607      	mov	r7, r0
 801531a:	e7bb      	b.n	8015294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801531c:	2d00      	cmp	r5, #0
 801531e:	d181      	bne.n	8015224 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015320:	2f00      	cmp	r7, #0
 8015322:	f000 81dd 	beq.w	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015326:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801532a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801532e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015332:	b2b3      	uxth	r3, r6
 8015334:	9305      	str	r3, [sp, #20]
 8015336:	9a05      	ldr	r2, [sp, #20]
 8015338:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801533c:	4413      	add	r3, r2
 801533e:	b2ba      	uxth	r2, r7
 8015340:	4492      	add	sl, r2
 8015342:	b29b      	uxth	r3, r3
 8015344:	fa1f fa8a 	uxth.w	sl, sl
 8015348:	fa0f f883 	sxth.w	r8, r3
 801534c:	fa0f f98a 	sxth.w	r9, sl
 8015350:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015354:	9b04      	ldr	r3, [sp, #16]
 8015356:	2b00      	cmp	r3, #0
 8015358:	d052      	beq.n	8015400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801535a:	9903      	ldr	r1, [sp, #12]
 801535c:	4620      	mov	r0, r4
 801535e:	f7ff fcb8 	bl	8014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015362:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015366:	b1c0      	cbz	r0, 801539a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015368:	f9b4 e000 	ldrsh.w	lr, [r4]
 801536c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015370:	4576      	cmp	r6, lr
 8015372:	dc22      	bgt.n	80153ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015374:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015378:	44f4      	add	ip, lr
 801537a:	fa0f fc8c 	sxth.w	ip, ip
 801537e:	45e0      	cmp	r8, ip
 8015380:	db1b      	blt.n	80153ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015382:	428f      	cmp	r7, r1
 8015384:	fa1f fc81 	uxth.w	ip, r1
 8015388:	88e1      	ldrh	r1, [r4, #6]
 801538a:	dc0d      	bgt.n	80153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801538c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015390:	eba1 010c 	sub.w	r1, r1, ip
 8015394:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015398:	80e1      	strh	r1, [r4, #6]
 801539a:	4628      	mov	r0, r5
 801539c:	9904      	ldr	r1, [sp, #16]
 801539e:	3901      	subs	r1, #1
 80153a0:	9104      	str	r1, [sp, #16]
 80153a2:	3c08      	subs	r4, #8
 80153a4:	4605      	mov	r5, r0
 80153a6:	e7d3      	b.n	8015350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80153a8:	4461      	add	r1, ip
 80153aa:	b209      	sxth	r1, r1
 80153ac:	4549      	cmp	r1, r9
 80153ae:	dcf5      	bgt.n	801539c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153b0:	eba2 0c0c 	sub.w	ip, r2, ip
 80153b4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80153b8:	e7ef      	b.n	801539a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153ba:	428f      	cmp	r7, r1
 80153bc:	dcee      	bgt.n	801539c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153be:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80153c2:	4461      	add	r1, ip
 80153c4:	b209      	sxth	r1, r1
 80153c6:	4589      	cmp	r9, r1
 80153c8:	dbe8      	blt.n	801539c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153ca:	4576      	cmp	r6, lr
 80153cc:	fa1f fc8e 	uxth.w	ip, lr
 80153d0:	88a1      	ldrh	r1, [r4, #4]
 80153d2:	dc07      	bgt.n	80153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80153d4:	eba3 0c0c 	sub.w	ip, r3, ip
 80153d8:	eba1 010c 	sub.w	r1, r1, ip
 80153dc:	f8a4 8000 	strh.w	r8, [r4]
 80153e0:	80a1      	strh	r1, [r4, #4]
 80153e2:	e7da      	b.n	801539a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153e4:	4461      	add	r1, ip
 80153e6:	b209      	sxth	r1, r1
 80153e8:	4588      	cmp	r8, r1
 80153ea:	dbd7      	blt.n	801539c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153ec:	9905      	ldr	r1, [sp, #20]
 80153ee:	eba1 0c0c 	sub.w	ip, r1, ip
 80153f2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80153f6:	e7d0      	b.n	801539a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153f8:	200137c2 	.word	0x200137c2
 80153fc:	200137c0 	.word	0x200137c0
 8015400:	2d00      	cmp	r5, #0
 8015402:	f000 816d 	beq.w	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015406:	9b06      	ldr	r3, [sp, #24]
 8015408:	445b      	add	r3, fp
 801540a:	461c      	mov	r4, r3
 801540c:	9b02      	ldr	r3, [sp, #8]
 801540e:	3301      	adds	r3, #1
 8015410:	f000 8166 	beq.w	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015414:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015418:	4629      	mov	r1, r5
 801541a:	9803      	ldr	r0, [sp, #12]
 801541c:	f7ff fccc 	bl	8014db8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015420:	b120      	cbz	r0, 801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015422:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015426:	9801      	ldr	r0, [sp, #4]
 8015428:	f7ff feb0 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801542c:	9903      	ldr	r1, [sp, #12]
 801542e:	4628      	mov	r0, r5
 8015430:	f7ff fc4f 	bl	8014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015434:	2800      	cmp	r0, #0
 8015436:	f000 809c 	beq.w	8015572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801543a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801543e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015442:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015446:	9309      	str	r3, [sp, #36]	; 0x24
 8015448:	fa1f f189 	uxth.w	r1, r9
 801544c:	eb01 0c03 	add.w	ip, r1, r3
 8015450:	fa1f fa8c 	uxth.w	sl, ip
 8015454:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015458:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801545c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015460:	b283      	uxth	r3, r0
 8015462:	eb03 050c 	add.w	r5, r3, ip
 8015466:	b2ad      	uxth	r5, r5
 8015468:	9505      	str	r5, [sp, #20]
 801546a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801546e:	9504      	str	r5, [sp, #16]
 8015470:	4548      	cmp	r0, r9
 8015472:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015476:	f340 8099 	ble.w	80155ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801547a:	1a5b      	subs	r3, r3, r1
 801547c:	b29b      	uxth	r3, r3
 801547e:	4596      	cmp	lr, r2
 8015480:	fa0f f08a 	sxth.w	r0, sl
 8015484:	b21e      	sxth	r6, r3
 8015486:	dd2e      	ble.n	80154e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015488:	9f02      	ldr	r7, [sp, #8]
 801548a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801548e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015492:	9f04      	ldr	r7, [sp, #16]
 8015494:	1a3f      	subs	r7, r7, r0
 8015496:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801549a:	fa1f fe8e 	uxth.w	lr, lr
 801549e:	b292      	uxth	r2, r2
 80154a0:	ebae 0102 	sub.w	r1, lr, r2
 80154a4:	44a6      	add	lr, r4
 80154a6:	4402      	add	r2, r0
 80154a8:	b289      	uxth	r1, r1
 80154aa:	fa0f fe8e 	sxth.w	lr, lr
 80154ae:	b212      	sxth	r2, r2
 80154b0:	b20d      	sxth	r5, r1
 80154b2:	ebae 0202 	sub.w	r2, lr, r2
 80154b6:	436f      	muls	r7, r5
 80154b8:	4372      	muls	r2, r6
 80154ba:	4297      	cmp	r7, r2
 80154bc:	db09      	blt.n	80154d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80154be:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80154c2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80154c6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80154ca:	449c      	add	ip, r3
 80154cc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80154d0:	e686      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154d2:	4421      	add	r1, r4
 80154d4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80154d8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80154dc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80154e0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80154e4:	e67c      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154e6:	9f04      	ldr	r7, [sp, #16]
 80154e8:	42b8      	cmp	r0, r7
 80154ea:	da27      	bge.n	801553c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80154ec:	9902      	ldr	r1, [sp, #8]
 80154ee:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80154f2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80154f6:	eb05 010e 	add.w	r1, r5, lr
 80154fa:	fa1f f881 	uxth.w	r8, r1
 80154fe:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015502:	4411      	add	r1, r2
 8015504:	eba1 0108 	sub.w	r1, r1, r8
 8015508:	b289      	uxth	r1, r1
 801550a:	fa0f f988 	sxth.w	r9, r8
 801550e:	eba2 020e 	sub.w	r2, r2, lr
 8015512:	fa0f f881 	sxth.w	r8, r1
 8015516:	1a3f      	subs	r7, r7, r0
 8015518:	4372      	muls	r2, r6
 801551a:	fb08 f707 	mul.w	r7, r8, r7
 801551e:	42ba      	cmp	r2, r7
 8015520:	dc06      	bgt.n	8015530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015522:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015526:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801552a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801552e:	e7ca      	b.n	80154c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015530:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015534:	4429      	add	r1, r5
 8015536:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801553a:	e651      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801553c:	9805      	ldr	r0, [sp, #20]
 801553e:	ebaa 0000 	sub.w	r0, sl, r0
 8015542:	b280      	uxth	r0, r0
 8015544:	2d06      	cmp	r5, #6
 8015546:	fa0f fe80 	sxth.w	lr, r0
 801554a:	d817      	bhi.n	801557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801554c:	9b04      	ldr	r3, [sp, #16]
 801554e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015552:	1c6b      	adds	r3, r5, #1
 8015554:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015558:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801555c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015560:	9b01      	ldr	r3, [sp, #4]
 8015562:	9801      	ldr	r0, [sp, #4]
 8015564:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015568:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801556c:	805a      	strh	r2, [r3, #2]
 801556e:	809e      	strh	r6, [r3, #4]
 8015570:	80d9      	strh	r1, [r3, #6]
 8015572:	9b02      	ldr	r3, [sp, #8]
 8015574:	3b01      	subs	r3, #1
 8015576:	9302      	str	r3, [sp, #8]
 8015578:	3c08      	subs	r4, #8
 801557a:	e747      	b.n	801540c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801557c:	9a02      	ldr	r2, [sp, #8]
 801557e:	45b6      	cmp	lr, r6
 8015580:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015584:	db0d      	blt.n	80155a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015586:	449c      	add	ip, r3
 8015588:	fa1f fc8c 	uxth.w	ip, ip
 801558c:	445a      	add	r2, fp
 801558e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015592:	448c      	add	ip, r1
 8015594:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015598:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801559c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80155a0:	e61e      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155a2:	445a      	add	r2, fp
 80155a4:	4484      	add	ip, r0
 80155a6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80155aa:	e78f      	b.n	80154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80155ac:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80155b0:	fa1f f18e 	uxth.w	r1, lr
 80155b4:	eb01 0806 	add.w	r8, r1, r6
 80155b8:	b293      	uxth	r3, r2
 80155ba:	fa1f f888 	uxth.w	r8, r8
 80155be:	9306      	str	r3, [sp, #24]
 80155c0:	fa0f f388 	sxth.w	r3, r8
 80155c4:	9307      	str	r3, [sp, #28]
 80155c6:	9f06      	ldr	r7, [sp, #24]
 80155c8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80155cc:	443b      	add	r3, r7
 80155ce:	b29b      	uxth	r3, r3
 80155d0:	4596      	cmp	lr, r2
 80155d2:	9308      	str	r3, [sp, #32]
 80155d4:	da24      	bge.n	8015620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80155d6:	9905      	ldr	r1, [sp, #20]
 80155d8:	eba3 0308 	sub.w	r3, r3, r8
 80155dc:	ebaa 0401 	sub.w	r4, sl, r1
 80155e0:	b2a4      	uxth	r4, r4
 80155e2:	b29b      	uxth	r3, r3
 80155e4:	b225      	sxth	r5, r4
 80155e6:	b219      	sxth	r1, r3
 80155e8:	eba2 020e 	sub.w	r2, r2, lr
 80155ec:	eba9 0000 	sub.w	r0, r9, r0
 80155f0:	436a      	muls	r2, r5
 80155f2:	4348      	muls	r0, r1
 80155f4:	4282      	cmp	r2, r0
 80155f6:	9a02      	ldr	r2, [sp, #8]
 80155f8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80155fc:	445a      	add	r2, fp
 80155fe:	dc06      	bgt.n	801560e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015600:	9b07      	ldr	r3, [sp, #28]
 8015602:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015606:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801560a:	44a4      	add	ip, r4
 801560c:	e75e      	b.n	80154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801560e:	9904      	ldr	r1, [sp, #16]
 8015610:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015614:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015618:	4433      	add	r3, r6
 801561a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801561e:	e5df      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015620:	9f06      	ldr	r7, [sp, #24]
 8015622:	9b04      	ldr	r3, [sp, #16]
 8015624:	1bc9      	subs	r1, r1, r7
 8015626:	fa0f f78a 	sxth.w	r7, sl
 801562a:	b289      	uxth	r1, r1
 801562c:	429f      	cmp	r7, r3
 801562e:	fa0f fe81 	sxth.w	lr, r1
 8015632:	dd23      	ble.n	801567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015634:	9a05      	ldr	r2, [sp, #20]
 8015636:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801563a:	9d07      	ldr	r5, [sp, #28]
 801563c:	ebaa 0202 	sub.w	r2, sl, r2
 8015640:	b292      	uxth	r2, r2
 8015642:	eba5 0a03 	sub.w	sl, r5, r3
 8015646:	b214      	sxth	r4, r2
 8015648:	eba9 0000 	sub.w	r0, r9, r0
 801564c:	9b02      	ldr	r3, [sp, #8]
 801564e:	fb0e f000 	mul.w	r0, lr, r0
 8015652:	fb04 fa0a 	mul.w	sl, r4, sl
 8015656:	00db      	lsls	r3, r3, #3
 8015658:	4550      	cmp	r0, sl
 801565a:	445b      	add	r3, fp
 801565c:	db03      	blt.n	8015666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801565e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015662:	4494      	add	ip, r2
 8015664:	e732      	b.n	80154cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015666:	9a04      	ldr	r2, [sp, #16]
 8015668:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801566c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015670:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015674:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015678:	4431      	add	r1, r6
 801567a:	e75c      	b.n	8015536 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801567c:	9b08      	ldr	r3, [sp, #32]
 801567e:	eba3 0308 	sub.w	r3, r3, r8
 8015682:	b29b      	uxth	r3, r3
 8015684:	2d06      	cmp	r5, #6
 8015686:	b218      	sxth	r0, r3
 8015688:	d813      	bhi.n	80156b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801568a:	9b07      	ldr	r3, [sp, #28]
 801568c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015690:	1c6b      	adds	r3, r5, #1
 8015692:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015696:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801569a:	9b01      	ldr	r3, [sp, #4]
 801569c:	9901      	ldr	r1, [sp, #4]
 801569e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80156a2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80156a6:	805a      	strh	r2, [r3, #2]
 80156a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80156aa:	809a      	strh	r2, [r3, #4]
 80156ac:	f8a3 e006 	strh.w	lr, [r3, #6]
 80156b0:	e75f      	b.n	8015572 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80156b2:	9c02      	ldr	r4, [sp, #8]
 80156b4:	4570      	cmp	r0, lr
 80156b6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80156ba:	db0d      	blt.n	80156d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80156bc:	4431      	add	r1, r6
 80156be:	9b06      	ldr	r3, [sp, #24]
 80156c0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80156c4:	b289      	uxth	r1, r1
 80156c6:	445c      	add	r4, fp
 80156c8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80156cc:	4419      	add	r1, r3
 80156ce:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80156d2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80156d6:	e583      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156d8:	445c      	add	r4, fp
 80156da:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80156de:	e79b      	b.n	8015618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80156e0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80156e4:	1e65      	subs	r5, r4, #1
 80156e6:	b2ad      	uxth	r5, r5
 80156e8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80156ec:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80156f0:	42b5      	cmp	r5, r6
 80156f2:	d044      	beq.n	801577e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80156f4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80156f8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80156fc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015700:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015704:	4282      	cmp	r2, r0
 8015706:	d11f      	bne.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015708:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801570c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015710:	459c      	cmp	ip, r3
 8015712:	d119      	bne.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015714:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015718:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801571c:	19d8      	adds	r0, r3, r7
 801571e:	b200      	sxth	r0, r0
 8015720:	4288      	cmp	r0, r1
 8015722:	d109      	bne.n	8015738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015724:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015728:	4413      	add	r3, r2
 801572a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801572e:	4629      	mov	r1, r5
 8015730:	9801      	ldr	r0, [sp, #4]
 8015732:	f7ff fd2b 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015736:	e003      	b.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015738:	4411      	add	r1, r2
 801573a:	b209      	sxth	r1, r1
 801573c:	42b9      	cmp	r1, r7
 801573e:	d0f3      	beq.n	8015728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015740:	3d01      	subs	r5, #1
 8015742:	b2ad      	uxth	r5, r5
 8015744:	3c08      	subs	r4, #8
 8015746:	e7d3      	b.n	80156f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015748:	42b9      	cmp	r1, r7
 801574a:	d1f9      	bne.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801574c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015750:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015754:	4299      	cmp	r1, r3
 8015756:	d1f3      	bne.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015758:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801575c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015760:	181f      	adds	r7, r3, r0
 8015762:	b23f      	sxth	r7, r7
 8015764:	42ba      	cmp	r2, r7
 8015766:	d105      	bne.n	8015774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015768:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801576c:	440b      	add	r3, r1
 801576e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015772:	e7dc      	b.n	801572e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015774:	440a      	add	r2, r1
 8015776:	b212      	sxth	r2, r2
 8015778:	4290      	cmp	r0, r2
 801577a:	d1e1      	bne.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801577c:	e7f6      	b.n	801576c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801577e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015782:	2e07      	cmp	r6, #7
 8015784:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015788:	d812      	bhi.n	80157b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801578a:	1c75      	adds	r5, r6, #1
 801578c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015790:	9d01      	ldr	r5, [sp, #4]
 8015792:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015796:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801579a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801579e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80157a2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80157a6:	442c      	add	r4, r5
 80157a8:	8061      	strh	r1, [r4, #2]
 80157aa:	80a2      	strh	r2, [r4, #4]
 80157ac:	80e3      	strh	r3, [r4, #6]
 80157ae:	e581      	b.n	80152b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157b0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80157b4:	3e01      	subs	r6, #1
 80157b6:	445c      	add	r4, fp
 80157b8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80157bc:	f04f 37ff 	mov.w	r7, #4294967295
 80157c0:	2500      	movs	r5, #0
 80157c2:	9305      	str	r3, [sp, #20]
 80157c4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80157c8:	9302      	str	r3, [sp, #8]
 80157ca:	1e72      	subs	r2, r6, #1
 80157cc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80157d0:	9304      	str	r3, [sp, #16]
 80157d2:	4691      	mov	r9, r2
 80157d4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80157d8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80157dc:	bf14      	ite	ne
 80157de:	9905      	ldrne	r1, [sp, #20]
 80157e0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80157e4:	6818      	ldr	r0, [r3, #0]
 80157e6:	9207      	str	r2, [sp, #28]
 80157e8:	bf18      	it	ne
 80157ea:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80157ee:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80157f2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80157f6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80157fa:	9306      	str	r3, [sp, #24]
 80157fc:	fb18 f801 	smulbb	r8, r8, r1
 8015800:	6859      	ldr	r1, [r3, #4]
 8015802:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015806:	4671      	mov	r1, lr
 8015808:	a80c      	add	r0, sp, #48	; 0x30
 801580a:	f7ff fafb 	bl	8014e04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801580e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015812:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015816:	9b04      	ldr	r3, [sp, #16]
 8015818:	9a02      	ldr	r2, [sp, #8]
 801581a:	fb10 f001 	smulbb	r0, r0, r1
 801581e:	fb02 8803 	mla	r8, r2, r3, r8
 8015822:	eba0 0108 	sub.w	r1, r0, r8
 8015826:	f04f 0c08 	mov.w	ip, #8
 801582a:	fb90 f0fc 	sdiv	r0, r0, ip
 801582e:	4288      	cmp	r0, r1
 8015830:	dc20      	bgt.n	8015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015832:	4551      	cmp	r1, sl
 8015834:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015838:	da03      	bge.n	8015842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801583a:	b1d9      	cbz	r1, 8015874 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801583c:	468a      	mov	sl, r1
 801583e:	464f      	mov	r7, r9
 8015840:	4635      	mov	r5, r6
 8015842:	f109 39ff 	add.w	r9, r9, #4294967295
 8015846:	f119 0f02 	cmn.w	r9, #2
 801584a:	d1c5      	bne.n	80157d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801584c:	4616      	mov	r6, r2
 801584e:	3201      	adds	r2, #1
 8015850:	f1a4 0408 	sub.w	r4, r4, #8
 8015854:	d1b6      	bne.n	80157c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015856:	9b01      	ldr	r3, [sp, #4]
 8015858:	b2ac      	uxth	r4, r5
 801585a:	00ed      	lsls	r5, r5, #3
 801585c:	1958      	adds	r0, r3, r5
 801585e:	1c7b      	adds	r3, r7, #1
 8015860:	d10b      	bne.n	801587a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015862:	4601      	mov	r1, r0
 8015864:	9803      	ldr	r0, [sp, #12]
 8015866:	f7ff facd 	bl	8014e04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801586a:	4621      	mov	r1, r4
 801586c:	9801      	ldr	r0, [sp, #4]
 801586e:	f7ff fc8d 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015872:	e4b5      	b.n	80151e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015874:	464f      	mov	r7, r9
 8015876:	4635      	mov	r5, r6
 8015878:	e7ed      	b.n	8015856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801587a:	9b01      	ldr	r3, [sp, #4]
 801587c:	00ff      	lsls	r7, r7, #3
 801587e:	19d9      	adds	r1, r3, r7
 8015880:	f7ff fac0 	bl	8014e04 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015884:	9b03      	ldr	r3, [sp, #12]
 8015886:	cb03      	ldmia	r3!, {r0, r1}
 8015888:	445f      	add	r7, fp
 801588a:	445d      	add	r5, fp
 801588c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015890:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015894:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015898:	9b03      	ldr	r3, [sp, #12]
 801589a:	6869      	ldr	r1, [r5, #4]
 801589c:	c303      	stmia	r3!, {r0, r1}
 801589e:	e7e4      	b.n	801586a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080158a0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80158a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158a4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80158a8:	b09b      	sub	sp, #108	; 0x6c
 80158aa:	4604      	mov	r4, r0
 80158ac:	4630      	mov	r0, r6
 80158ae:	f7fa fa20 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158b2:	4605      	mov	r5, r0
 80158b4:	b948      	cbnz	r0, 80158ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80158b6:	6823      	ldr	r3, [r4, #0]
 80158b8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80158bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80158be:	4620      	mov	r0, r4
 80158c0:	4798      	blx	r3
 80158c2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80158c6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80158ca:	4bc6      	ldr	r3, [pc, #792]	; (8015be4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80158cc:	681b      	ldr	r3, [r3, #0]
 80158ce:	2b00      	cmp	r3, #0
 80158d0:	d03f      	beq.n	8015952 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158d2:	4dc5      	ldr	r5, [pc, #788]	; (8015be8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80158d4:	4628      	mov	r0, r5
 80158d6:	f7fa fa0c 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158da:	4606      	mov	r6, r0
 80158dc:	2800      	cmp	r0, #0
 80158de:	d138      	bne.n	8015952 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158e0:	4628      	mov	r0, r5
 80158e2:	f7ff f907 	bl	8014af4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80158e6:	6823      	ldr	r3, [r4, #0]
 80158e8:	6829      	ldr	r1, [r5, #0]
 80158ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80158ec:	686a      	ldr	r2, [r5, #4]
 80158ee:	4620      	mov	r0, r4
 80158f0:	4798      	blx	r3
 80158f2:	802e      	strh	r6, [r5, #0]
 80158f4:	806e      	strh	r6, [r5, #2]
 80158f6:	80ae      	strh	r6, [r5, #4]
 80158f8:	80ee      	strh	r6, [r5, #6]
 80158fa:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80158fe:	4dbb      	ldr	r5, [pc, #748]	; (8015bec <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015900:	4640      	mov	r0, r8
 8015902:	f7ff fbeb 	bl	80150dc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015906:	882e      	ldrh	r6, [r5, #0]
 8015908:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801590c:	4633      	mov	r3, r6
 801590e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015912:	42bb      	cmp	r3, r7
 8015914:	d224      	bcs.n	8015960 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015916:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801591a:	2907      	cmp	r1, #7
 801591c:	d816      	bhi.n	801594c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801591e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015922:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015926:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801592a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801592e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015932:	1c4a      	adds	r2, r1, #1
 8015934:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015938:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801593c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015940:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015944:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015948:	f8a2 c006 	strh.w	ip, [r2, #6]
 801594c:	3301      	adds	r3, #1
 801594e:	b29b      	uxth	r3, r3
 8015950:	e7df      	b.n	8015912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015952:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015956:	2b00      	cmp	r3, #0
 8015958:	d1cf      	bne.n	80158fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801595a:	b01b      	add	sp, #108	; 0x6c
 801595c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015960:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015964:	42b3      	cmp	r3, r6
 8015966:	d90c      	bls.n	8015982 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015968:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801596c:	6822      	ldr	r2, [r4, #0]
 801596e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015972:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015974:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015978:	4620      	mov	r0, r4
 801597a:	3601      	adds	r6, #1
 801597c:	47b8      	blx	r7
 801597e:	b2b6      	uxth	r6, r6
 8015980:	e7ee      	b.n	8015960 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015982:	4a9b      	ldr	r2, [pc, #620]	; (8015bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015984:	6813      	ldr	r3, [r2, #0]
 8015986:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801598a:	2b01      	cmp	r3, #1
 801598c:	4691      	mov	r9, r2
 801598e:	f040 80e2 	bne.w	8015b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015992:	8829      	ldrh	r1, [r5, #0]
 8015994:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015998:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801599c:	33ae      	adds	r3, #174	; 0xae
 801599e:	2600      	movs	r6, #0
 80159a0:	428f      	cmp	r7, r1
 80159a2:	f103 0308 	add.w	r3, r3, #8
 80159a6:	dd0a      	ble.n	80159be <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80159a8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80159ac:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80159b0:	4402      	add	r2, r0
 80159b2:	b212      	sxth	r2, r2
 80159b4:	4296      	cmp	r6, r2
 80159b6:	bfb8      	it	lt
 80159b8:	4616      	movlt	r6, r2
 80159ba:	3101      	adds	r1, #1
 80159bc:	e7f0      	b.n	80159a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80159be:	4b8d      	ldr	r3, [pc, #564]	; (8015bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80159c0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80159c4:	881b      	ldrh	r3, [r3, #0]
 80159c6:	2b0f      	cmp	r3, #15
 80159c8:	bf88      	it	hi
 80159ca:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80159ce:	f04f 0300 	mov.w	r3, #0
 80159d2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80159d6:	bf98      	it	ls
 80159d8:	f04f 0b01 	movls.w	fp, #1
 80159dc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80159e0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80159e4:	4b82      	ldr	r3, [pc, #520]	; (8015bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80159e6:	4438      	add	r0, r7
 80159e8:	b207      	sxth	r7, r0
 80159ea:	6818      	ldr	r0, [r3, #0]
 80159ec:	42b7      	cmp	r7, r6
 80159ee:	6803      	ldr	r3, [r0, #0]
 80159f0:	f280 8083 	bge.w	8015afa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80159f4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80159f8:	4798      	blx	r3
 80159fa:	eb07 030b 	add.w	r3, r7, fp
 80159fe:	4298      	cmp	r0, r3
 8015a00:	da07      	bge.n	8015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a02:	42b0      	cmp	r0, r6
 8015a04:	da05      	bge.n	8015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a06:	4287      	cmp	r7, r0
 8015a08:	dd6c      	ble.n	8015ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a0a:	2f00      	cmp	r7, #0
 8015a0c:	dd6a      	ble.n	8015ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a0e:	4630      	mov	r0, r6
 8015a10:	e004      	b.n	8015a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015a12:	4287      	cmp	r7, r0
 8015a14:	dcfb      	bgt.n	8015a0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015a16:	42b0      	cmp	r0, r6
 8015a18:	bfa8      	it	ge
 8015a1a:	4630      	movge	r0, r6
 8015a1c:	4b76      	ldr	r3, [pc, #472]	; (8015bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015a1e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015a22:	1bc0      	subs	r0, r0, r7
 8015a24:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a28:	882f      	ldrh	r7, [r5, #0]
 8015a2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015a2e:	2200      	movs	r2, #0
 8015a30:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015a34:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015a38:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015a3c:	42bb      	cmp	r3, r7
 8015a3e:	d9cd      	bls.n	80159dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015a40:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015a44:	ab07      	add	r3, sp, #28
 8015a46:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015a4a:	6851      	ldr	r1, [r2, #4]
 8015a4c:	c303      	stmia	r3!, {r0, r1}
 8015a4e:	a905      	add	r1, sp, #20
 8015a50:	a807      	add	r0, sp, #28
 8015a52:	f7ff f93e 	bl	8014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015a56:	2800      	cmp	r0, #0
 8015a58:	d04c      	beq.n	8015af4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015a5a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015a5e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015a62:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015a66:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015a6a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015a6e:	9302      	str	r3, [sp, #8]
 8015a70:	4686      	mov	lr, r0
 8015a72:	4290      	cmp	r0, r2
 8015a74:	4450      	add	r0, sl
 8015a76:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015a7a:	bfb8      	it	lt
 8015a7c:	4696      	movlt	lr, r2
 8015a7e:	4452      	add	r2, sl
 8015a80:	4299      	cmp	r1, r3
 8015a82:	b280      	uxth	r0, r0
 8015a84:	b292      	uxth	r2, r2
 8015a86:	468c      	mov	ip, r1
 8015a88:	fa0f fa82 	sxth.w	sl, r2
 8015a8c:	bfb8      	it	lt
 8015a8e:	469c      	movlt	ip, r3
 8015a90:	b203      	sxth	r3, r0
 8015a92:	4553      	cmp	r3, sl
 8015a94:	bfb8      	it	lt
 8015a96:	4602      	movlt	r2, r0
 8015a98:	eba2 020e 	sub.w	r2, r2, lr
 8015a9c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015aa0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015aa4:	9b02      	ldr	r3, [sp, #8]
 8015aa6:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015aaa:	4411      	add	r1, r2
 8015aac:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015ab0:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015ab4:	4413      	add	r3, r2
 8015ab6:	b289      	uxth	r1, r1
 8015ab8:	b29b      	uxth	r3, r3
 8015aba:	b208      	sxth	r0, r1
 8015abc:	b21a      	sxth	r2, r3
 8015abe:	4290      	cmp	r0, r2
 8015ac0:	bfb8      	it	lt
 8015ac2:	460b      	movlt	r3, r1
 8015ac4:	eba3 030c 	sub.w	r3, r3, ip
 8015ac8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015acc:	a807      	add	r0, sp, #28
 8015ace:	f7fa f910 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ad2:	b920      	cbnz	r0, 8015ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015ad4:	6823      	ldr	r3, [r4, #0]
 8015ad6:	a907      	add	r1, sp, #28
 8015ad8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015ada:	4620      	mov	r0, r4
 8015adc:	4798      	blx	r3
 8015ade:	3701      	adds	r7, #1
 8015ae0:	b2bf      	uxth	r7, r7
 8015ae2:	e7a9      	b.n	8015a38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015ae4:	f8d9 0000 	ldr.w	r0, [r9]
 8015ae8:	6803      	ldr	r3, [r0, #0]
 8015aea:	2101      	movs	r1, #1
 8015aec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015af0:	4798      	blx	r3
 8015af2:	e773      	b.n	80159dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015af4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015af8:	e7e8      	b.n	8015acc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015afa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015afc:	4798      	blx	r3
 8015afe:	4b3f      	ldr	r3, [pc, #252]	; (8015bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015b00:	781b      	ldrb	r3, [r3, #0]
 8015b02:	2b00      	cmp	r3, #0
 8015b04:	f43f af29 	beq.w	801595a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b08:	2300      	movs	r3, #0
 8015b0a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015b0e:	882b      	ldrh	r3, [r5, #0]
 8015b10:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015b14:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015b18:	42ab      	cmp	r3, r5
 8015b1a:	f4bf af1e 	bcs.w	801595a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b1e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015b22:	2907      	cmp	r1, #7
 8015b24:	d814      	bhi.n	8015b50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015b26:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015b2a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015b2e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015b32:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015b36:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015b3a:	1c4a      	adds	r2, r1, #1
 8015b3c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015b40:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015b44:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015b48:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015b4c:	8097      	strh	r7, [r2, #4]
 8015b4e:	80d6      	strh	r6, [r2, #6]
 8015b50:	3301      	adds	r3, #1
 8015b52:	b29b      	uxth	r3, r3
 8015b54:	e7e0      	b.n	8015b18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015b56:	2b02      	cmp	r3, #2
 8015b58:	f040 8133 	bne.w	8015dc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015b5c:	4b28      	ldr	r3, [pc, #160]	; (8015c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015b5e:	781b      	ldrb	r3, [r3, #0]
 8015b60:	2b01      	cmp	r3, #1
 8015b62:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015b66:	f000 8098 	beq.w	8015c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015b6a:	882a      	ldrh	r2, [r5, #0]
 8015b6c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015b70:	3201      	adds	r2, #1
 8015b72:	b292      	uxth	r2, r2
 8015b74:	2900      	cmp	r1, #0
 8015b76:	d0c2      	beq.n	8015afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015b78:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015b7c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015b80:	441e      	add	r6, r3
 8015b82:	b236      	sxth	r6, r6
 8015b84:	4694      	mov	ip, r2
 8015b86:	f04f 0900 	mov.w	r9, #0
 8015b8a:	fa1f f38c 	uxth.w	r3, ip
 8015b8e:	4299      	cmp	r1, r3
 8015b90:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015b94:	f240 80bf 	bls.w	8015d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015b98:	4427      	add	r7, r4
 8015b9a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015b9e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015ba2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015ba6:	4283      	cmp	r3, r0
 8015ba8:	f340 80a1 	ble.w	8015cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015bac:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015bb0:	4406      	add	r6, r0
 8015bb2:	b236      	sxth	r6, r6
 8015bb4:	429e      	cmp	r6, r3
 8015bb6:	bfa8      	it	ge
 8015bb8:	461e      	movge	r6, r3
 8015bba:	46e1      	mov	r9, ip
 8015bbc:	f10c 0c01 	add.w	ip, ip, #1
 8015bc0:	e7e3      	b.n	8015b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015bc2:	d10a      	bne.n	8015bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015bc4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015bc8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015bcc:	4562      	cmp	r2, ip
 8015bce:	bfb8      	it	lt
 8015bd0:	4662      	movlt	r2, ip
 8015bd2:	4288      	cmp	r0, r1
 8015bd4:	bfb8      	it	lt
 8015bd6:	461f      	movlt	r7, r3
 8015bd8:	e087      	b.n	8015cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015bda:	428a      	cmp	r2, r1
 8015bdc:	bfb8      	it	lt
 8015bde:	460a      	movlt	r2, r1
 8015be0:	e083      	b.n	8015cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015be2:	bf00      	nop
 8015be4:	2001380c 	.word	0x2001380c
 8015be8:	20013818 	.word	0x20013818
 8015bec:	20000088 	.word	0x20000088
 8015bf0:	200137cc 	.word	0x200137cc
 8015bf4:	200137c2 	.word	0x200137c2
 8015bf8:	200137c0 	.word	0x200137c0
 8015bfc:	200137ca 	.word	0x200137ca
 8015c00:	200137c4 	.word	0x200137c4
 8015c04:	19a1      	adds	r1, r4, r6
 8015c06:	ab07      	add	r3, sp, #28
 8015c08:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015c0c:	6849      	ldr	r1, [r1, #4]
 8015c0e:	c303      	stmia	r3!, {r0, r1}
 8015c10:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015c14:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c18:	2b13      	cmp	r3, #19
 8015c1a:	bfd8      	it	le
 8015c1c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015c20:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015c24:	440b      	add	r3, r1
 8015c26:	1a9b      	subs	r3, r3, r2
 8015c28:	a807      	add	r0, sp, #28
 8015c2a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015c2e:	f7fe ff7b 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c32:	a807      	add	r0, sp, #28
 8015c34:	f7fa f85d 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c38:	bb78      	cbnz	r0, 8015c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c3a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015c3e:	f8d9 0000 	ldr.w	r0, [r9]
 8015c42:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015c46:	f8d0 e000 	ldr.w	lr, [r0]
 8015c4a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015c4e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c52:	f1bc 0f14 	cmp.w	ip, #20
 8015c56:	bfa8      	it	ge
 8015c58:	f04f 0c14 	movge.w	ip, #20
 8015c5c:	fa1f fc8c 	uxth.w	ip, ip
 8015c60:	f8cd c000 	str.w	ip, [sp]
 8015c64:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015c68:	47d8      	blx	fp
 8015c6a:	4683      	mov	fp, r0
 8015c6c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015c70:	a807      	add	r0, sp, #28
 8015c72:	f7fe ff3f 	bl	8014af4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015c76:	6823      	ldr	r3, [r4, #0]
 8015c78:	4426      	add	r6, r4
 8015c7a:	4620      	mov	r0, r4
 8015c7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015c7e:	a907      	add	r1, sp, #28
 8015c80:	4798      	blx	r3
 8015c82:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015c86:	eba0 000b 	sub.w	r0, r0, fp
 8015c8a:	b200      	sxth	r0, r0
 8015c8c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015c90:	b918      	cbnz	r0, 8015c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c92:	b2b9      	uxth	r1, r7
 8015c94:	4650      	mov	r0, sl
 8015c96:	f7ff fa79 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015c9a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015c9e:	f1bb 0f00 	cmp.w	fp, #0
 8015ca2:	f43f af2c 	beq.w	8015afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015ca6:	882b      	ldrh	r3, [r5, #0]
 8015ca8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015cac:	3301      	adds	r3, #1
 8015cae:	b29b      	uxth	r3, r3
 8015cb0:	2700      	movs	r7, #0
 8015cb2:	b299      	uxth	r1, r3
 8015cb4:	458b      	cmp	fp, r1
 8015cb6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015cba:	d9a3      	bls.n	8015c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015cbc:	4426      	add	r6, r4
 8015cbe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015cc2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015cc6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015cca:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015cce:	4408      	add	r0, r1
 8015cd0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015cd4:	4461      	add	r1, ip
 8015cd6:	b200      	sxth	r0, r0
 8015cd8:	b209      	sxth	r1, r1
 8015cda:	4288      	cmp	r0, r1
 8015cdc:	f6bf af71 	bge.w	8015bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015ce0:	4584      	cmp	ip, r0
 8015ce2:	4662      	mov	r2, ip
 8015ce4:	461f      	mov	r7, r3
 8015ce6:	bfb8      	it	lt
 8015ce8:	4602      	movlt	r2, r0
 8015cea:	3301      	adds	r3, #1
 8015cec:	e7e1      	b.n	8015cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015cee:	d10e      	bne.n	8015d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015cf0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015cf4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015cf8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015cfc:	4473      	add	r3, lr
 8015cfe:	b21b      	sxth	r3, r3
 8015d00:	429e      	cmp	r6, r3
 8015d02:	bfa8      	it	ge
 8015d04:	461e      	movge	r6, r3
 8015d06:	4287      	cmp	r7, r0
 8015d08:	bfb8      	it	lt
 8015d0a:	46e1      	movlt	r9, ip
 8015d0c:	e756      	b.n	8015bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d0e:	4286      	cmp	r6, r0
 8015d10:	bfa8      	it	ge
 8015d12:	4606      	movge	r6, r0
 8015d14:	e752      	b.n	8015bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d16:	eb0a 0007 	add.w	r0, sl, r7
 8015d1a:	4427      	add	r7, r4
 8015d1c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015d20:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015d24:	f1bb 0f13 	cmp.w	fp, #19
 8015d28:	bfde      	ittt	le
 8015d2a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015d2e:	445e      	addle	r6, fp
 8015d30:	b236      	sxthle	r6, r6
 8015d32:	f7f9 ffde 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d36:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015d3a:	2800      	cmp	r0, #0
 8015d3c:	f47f af1a 	bne.w	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015d40:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015d44:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d48:	482a      	ldr	r0, [pc, #168]	; (8015df4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015d4a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015d4e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015d52:	6800      	ldr	r0, [r0, #0]
 8015d54:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015d58:	1ab6      	subs	r6, r6, r2
 8015d5a:	2e14      	cmp	r6, #20
 8015d5c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015d60:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015d64:	bfa8      	it	ge
 8015d66:	2614      	movge	r6, #20
 8015d68:	f8d0 c000 	ldr.w	ip, [r0]
 8015d6c:	b2b6      	uxth	r6, r6
 8015d6e:	fa1f fb8b 	uxth.w	fp, fp
 8015d72:	455e      	cmp	r6, fp
 8015d74:	bf94      	ite	ls
 8015d76:	9600      	strls	r6, [sp, #0]
 8015d78:	f8cd b000 	strhi.w	fp, [sp]
 8015d7c:	b292      	uxth	r2, r2
 8015d7e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015d82:	b29b      	uxth	r3, r3
 8015d84:	b289      	uxth	r1, r1
 8015d86:	47b0      	blx	r6
 8015d88:	6823      	ldr	r3, [r4, #0]
 8015d8a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d90:	a907      	add	r1, sp, #28
 8015d92:	4620      	mov	r0, r4
 8015d94:	4798      	blx	r3
 8015d96:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015d9a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015d9e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015da2:	1a5b      	subs	r3, r3, r1
 8015da4:	440a      	add	r2, r1
 8015da6:	b21b      	sxth	r3, r3
 8015da8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015dac:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015db0:	2b00      	cmp	r3, #0
 8015db2:	f47f aeda 	bne.w	8015b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015db6:	fa1f f189 	uxth.w	r1, r9
 8015dba:	4650      	mov	r0, sl
 8015dbc:	f7ff f9e6 	bl	801518c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015dc0:	e6d3      	b.n	8015b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015dc2:	882e      	ldrh	r6, [r5, #0]
 8015dc4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015dc8:	42b3      	cmp	r3, r6
 8015dca:	f67f ae98 	bls.w	8015afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015dce:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015dd2:	ab07      	add	r3, sp, #28
 8015dd4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015dd8:	6851      	ldr	r1, [r2, #4]
 8015dda:	c303      	stmia	r3!, {r0, r1}
 8015ddc:	a807      	add	r0, sp, #28
 8015dde:	f7f9 ff88 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015de2:	b920      	cbnz	r0, 8015dee <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015de4:	6823      	ldr	r3, [r4, #0]
 8015de6:	a907      	add	r1, sp, #28
 8015de8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015dea:	4620      	mov	r0, r4
 8015dec:	4798      	blx	r3
 8015dee:	3601      	adds	r6, #1
 8015df0:	b2b6      	uxth	r6, r6
 8015df2:	e7e7      	b.n	8015dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015df4:	200137cc 	.word	0x200137cc

08015df8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015df8:	4b03      	ldr	r3, [pc, #12]	; (8015e08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015dfa:	2200      	movs	r2, #0
 8015dfc:	801a      	strh	r2, [r3, #0]
 8015dfe:	805a      	strh	r2, [r3, #2]
 8015e00:	809a      	strh	r2, [r3, #4]
 8015e02:	80da      	strh	r2, [r3, #6]
 8015e04:	4770      	bx	lr
 8015e06:	bf00      	nop
 8015e08:	20013818 	.word	0x20013818

08015e0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e10:	4606      	mov	r6, r0
 8015e12:	b09d      	sub	sp, #116	; 0x74
 8015e14:	a803      	add	r0, sp, #12
 8015e16:	4614      	mov	r4, r2
 8015e18:	468a      	mov	sl, r1
 8015e1a:	461d      	mov	r5, r3
 8015e1c:	f000 feca 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8015e20:	6833      	ldr	r3, [r6, #0]
 8015e22:	4630      	mov	r0, r6
 8015e24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015e26:	4798      	blx	r3
 8015e28:	6833      	ldr	r3, [r6, #0]
 8015e2a:	4607      	mov	r7, r0
 8015e2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e2e:	4630      	mov	r0, r6
 8015e30:	4798      	blx	r3
 8015e32:	462a      	mov	r2, r5
 8015e34:	9000      	str	r0, [sp, #0]
 8015e36:	4621      	mov	r1, r4
 8015e38:	463b      	mov	r3, r7
 8015e3a:	a803      	add	r0, sp, #12
 8015e3c:	f000 ff15 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e40:	2500      	movs	r5, #0
 8015e42:	462c      	mov	r4, r5
 8015e44:	46a9      	mov	r9, r5
 8015e46:	46a8      	mov	r8, r5
 8015e48:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015e4c:	2300      	movs	r3, #0
 8015e4e:	9302      	str	r3, [sp, #8]
 8015e50:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015e54:	429c      	cmp	r4, r3
 8015e56:	d002      	beq.n	8015e5e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015e58:	455c      	cmp	r4, fp
 8015e5a:	bf18      	it	ne
 8015e5c:	4625      	movne	r5, r4
 8015e5e:	ab02      	add	r3, sp, #8
 8015e60:	4632      	mov	r2, r6
 8015e62:	4651      	mov	r1, sl
 8015e64:	a803      	add	r0, sp, #12
 8015e66:	f001 fa03 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015e6a:	4604      	mov	r4, r0
 8015e6c:	b108      	cbz	r0, 8015e72 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015e6e:	280a      	cmp	r0, #10
 8015e70:	d10a      	bne.n	8015e88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015e72:	45c1      	cmp	r9, r8
 8015e74:	bf38      	it	cc
 8015e76:	46c1      	movcc	r9, r8
 8015e78:	f04f 0800 	mov.w	r8, #0
 8015e7c:	2c00      	cmp	r4, #0
 8015e7e:	d1e5      	bne.n	8015e4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015e80:	4648      	mov	r0, r9
 8015e82:	b01d      	add	sp, #116	; 0x74
 8015e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e88:	9a02      	ldr	r2, [sp, #8]
 8015e8a:	2a00      	cmp	r2, #0
 8015e8c:	d0de      	beq.n	8015e4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015e8e:	7b57      	ldrb	r7, [r2, #13]
 8015e90:	6833      	ldr	r3, [r6, #0]
 8015e92:	8894      	ldrh	r4, [r2, #4]
 8015e94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e96:	007f      	lsls	r7, r7, #1
 8015e98:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015e9c:	7a97      	ldrb	r7, [r2, #10]
 8015e9e:	4629      	mov	r1, r5
 8015ea0:	4307      	orrs	r7, r0
 8015ea2:	4630      	mov	r0, r6
 8015ea4:	4798      	blx	r3
 8015ea6:	4438      	add	r0, r7
 8015ea8:	4480      	add	r8, r0
 8015eaa:	fa1f f888 	uxth.w	r8, r8
 8015eae:	e7e5      	b.n	8015e7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015eb0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015eb0:	b508      	push	{r3, lr}
 8015eb2:	6803      	ldr	r3, [r0, #0]
 8015eb4:	68db      	ldr	r3, [r3, #12]
 8015eb6:	4798      	blx	r3
 8015eb8:	b128      	cbz	r0, 8015ec6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015eba:	7b43      	ldrb	r3, [r0, #13]
 8015ebc:	7a80      	ldrb	r0, [r0, #10]
 8015ebe:	005b      	lsls	r3, r3, #1
 8015ec0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015ec4:	4318      	orrs	r0, r3
 8015ec6:	bd08      	pop	{r3, pc}

08015ec8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015ec8:	b40e      	push	{r1, r2, r3}
 8015eca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ecc:	b09e      	sub	sp, #120	; 0x78
 8015ece:	ab23      	add	r3, sp, #140	; 0x8c
 8015ed0:	4605      	mov	r5, r0
 8015ed2:	f853 4b04 	ldr.w	r4, [r3], #4
 8015ed6:	9303      	str	r3, [sp, #12]
 8015ed8:	a805      	add	r0, sp, #20
 8015eda:	f000 fe6b 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8015ede:	682b      	ldr	r3, [r5, #0]
 8015ee0:	4628      	mov	r0, r5
 8015ee2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015ee4:	4798      	blx	r3
 8015ee6:	682b      	ldr	r3, [r5, #0]
 8015ee8:	4606      	mov	r6, r0
 8015eea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015eec:	4628      	mov	r0, r5
 8015eee:	4798      	blx	r3
 8015ef0:	4633      	mov	r3, r6
 8015ef2:	ae1e      	add	r6, sp, #120	; 0x78
 8015ef4:	4621      	mov	r1, r4
 8015ef6:	9000      	str	r0, [sp, #0]
 8015ef8:	9a03      	ldr	r2, [sp, #12]
 8015efa:	2400      	movs	r4, #0
 8015efc:	a805      	add	r0, sp, #20
 8015efe:	f000 feb4 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f02:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015f06:	462a      	mov	r2, r5
 8015f08:	4633      	mov	r3, r6
 8015f0a:	4621      	mov	r1, r4
 8015f0c:	a805      	add	r0, sp, #20
 8015f0e:	f001 f9af 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f12:	b1f0      	cbz	r0, 8015f52 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015f14:	280a      	cmp	r0, #10
 8015f16:	d018      	beq.n	8015f4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f18:	9f04      	ldr	r7, [sp, #16]
 8015f1a:	b1b7      	cbz	r7, 8015f4a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f1c:	7b78      	ldrb	r0, [r7, #13]
 8015f1e:	7a3b      	ldrb	r3, [r7, #8]
 8015f20:	88ea      	ldrh	r2, [r5, #6]
 8015f22:	00c1      	lsls	r1, r0, #3
 8015f24:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015f28:	4319      	orrs	r1, r3
 8015f2a:	0643      	lsls	r3, r0, #25
 8015f2c:	bf44      	itt	mi
 8015f2e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015f32:	b219      	sxthmi	r1, r3
 8015f34:	0100      	lsls	r0, r0, #4
 8015f36:	79fb      	ldrb	r3, [r7, #7]
 8015f38:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015f3c:	4303      	orrs	r3, r0
 8015f3e:	4413      	add	r3, r2
 8015f40:	1a5b      	subs	r3, r3, r1
 8015f42:	b21b      	sxth	r3, r3
 8015f44:	429c      	cmp	r4, r3
 8015f46:	bfb8      	it	lt
 8015f48:	461c      	movlt	r4, r3
 8015f4a:	4633      	mov	r3, r6
 8015f4c:	462a      	mov	r2, r5
 8015f4e:	2100      	movs	r1, #0
 8015f50:	e7dc      	b.n	8015f0c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015f52:	b2a0      	uxth	r0, r4
 8015f54:	b01e      	add	sp, #120	; 0x78
 8015f56:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015f5a:	b003      	add	sp, #12
 8015f5c:	4770      	bx	lr

08015f5e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015f5e:	7a43      	ldrb	r3, [r0, #9]
 8015f60:	8880      	ldrh	r0, [r0, #4]
 8015f62:	4418      	add	r0, r3
 8015f64:	b280      	uxth	r0, r0
 8015f66:	4770      	bx	lr

08015f68 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015f68:	6803      	ldr	r3, [r0, #0]
 8015f6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015f6c:	4718      	bx	r3

08015f6e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015f6e:	b40e      	push	{r1, r2, r3}
 8015f70:	b570      	push	{r4, r5, r6, lr}
 8015f72:	b09d      	sub	sp, #116	; 0x74
 8015f74:	ab21      	add	r3, sp, #132	; 0x84
 8015f76:	4604      	mov	r4, r0
 8015f78:	f853 5b04 	ldr.w	r5, [r3], #4
 8015f7c:	9302      	str	r3, [sp, #8]
 8015f7e:	a803      	add	r0, sp, #12
 8015f80:	f000 fe18 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8015f84:	6823      	ldr	r3, [r4, #0]
 8015f86:	4620      	mov	r0, r4
 8015f88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f8a:	4798      	blx	r3
 8015f8c:	6823      	ldr	r3, [r4, #0]
 8015f8e:	4606      	mov	r6, r0
 8015f90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f92:	4620      	mov	r0, r4
 8015f94:	4798      	blx	r3
 8015f96:	4633      	mov	r3, r6
 8015f98:	9000      	str	r0, [sp, #0]
 8015f9a:	9a02      	ldr	r2, [sp, #8]
 8015f9c:	4629      	mov	r1, r5
 8015f9e:	a803      	add	r0, sp, #12
 8015fa0:	f000 fe63 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015fa4:	a803      	add	r0, sp, #12
 8015fa6:	f001 fa31 	bl	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015faa:	2401      	movs	r4, #1
 8015fac:	b2a3      	uxth	r3, r4
 8015fae:	b140      	cbz	r0, 8015fc2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015fb0:	280a      	cmp	r0, #10
 8015fb2:	bf08      	it	eq
 8015fb4:	3301      	addeq	r3, #1
 8015fb6:	a803      	add	r0, sp, #12
 8015fb8:	bf08      	it	eq
 8015fba:	b21c      	sxtheq	r4, r3
 8015fbc:	f001 fa26 	bl	801740c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015fc0:	e7f4      	b.n	8015fac <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015fc2:	4618      	mov	r0, r3
 8015fc4:	b01d      	add	sp, #116	; 0x74
 8015fc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fca:	b003      	add	sp, #12
 8015fcc:	4770      	bx	lr

08015fce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015fce:	b40e      	push	{r1, r2, r3}
 8015fd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015fd2:	b09e      	sub	sp, #120	; 0x78
 8015fd4:	ab23      	add	r3, sp, #140	; 0x8c
 8015fd6:	4604      	mov	r4, r0
 8015fd8:	f853 5b04 	ldr.w	r5, [r3], #4
 8015fdc:	9303      	str	r3, [sp, #12]
 8015fde:	a805      	add	r0, sp, #20
 8015fe0:	f000 fde8 	bl	8016bb4 <_ZN8touchgfx12TextProviderC1Ev>
 8015fe4:	6823      	ldr	r3, [r4, #0]
 8015fe6:	4620      	mov	r0, r4
 8015fe8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015fea:	4798      	blx	r3
 8015fec:	6823      	ldr	r3, [r4, #0]
 8015fee:	4606      	mov	r6, r0
 8015ff0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ff2:	4620      	mov	r0, r4
 8015ff4:	4798      	blx	r3
 8015ff6:	4633      	mov	r3, r6
 8015ff8:	4629      	mov	r1, r5
 8015ffa:	9000      	str	r0, [sp, #0]
 8015ffc:	9a03      	ldr	r2, [sp, #12]
 8015ffe:	a805      	add	r0, sp, #20
 8016000:	ad1e      	add	r5, sp, #120	; 0x78
 8016002:	f000 fe32 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016006:	2100      	movs	r1, #0
 8016008:	f845 1d68 	str.w	r1, [r5, #-104]!
 801600c:	4622      	mov	r2, r4
 801600e:	462b      	mov	r3, r5
 8016010:	a805      	add	r0, sp, #20
 8016012:	f001 f92d 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016016:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801601a:	b1d8      	cbz	r0, 8016054 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801601c:	280a      	cmp	r0, #10
 801601e:	d012      	beq.n	8016046 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016020:	9804      	ldr	r0, [sp, #16]
 8016022:	b180      	cbz	r0, 8016046 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016024:	7b47      	ldrb	r7, [r0, #13]
 8016026:	88e2      	ldrh	r2, [r4, #6]
 8016028:	00fb      	lsls	r3, r7, #3
 801602a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801602e:	7a03      	ldrb	r3, [r0, #8]
 8016030:	430b      	orrs	r3, r1
 8016032:	0679      	lsls	r1, r7, #25
 8016034:	bf44      	itt	mi
 8016036:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801603a:	b21b      	sxthmi	r3, r3
 801603c:	1ad3      	subs	r3, r2, r3
 801603e:	b21b      	sxth	r3, r3
 8016040:	429e      	cmp	r6, r3
 8016042:	bfa8      	it	ge
 8016044:	461e      	movge	r6, r3
 8016046:	462b      	mov	r3, r5
 8016048:	4622      	mov	r2, r4
 801604a:	2100      	movs	r1, #0
 801604c:	a805      	add	r0, sp, #20
 801604e:	f001 f90f 	bl	8017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016052:	e7e2      	b.n	801601a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016054:	4630      	mov	r0, r6
 8016056:	b01e      	add	sp, #120	; 0x78
 8016058:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801605c:	b003      	add	sp, #12
 801605e:	4770      	bx	lr

08016060 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016060:	b513      	push	{r0, r1, r4, lr}
 8016062:	6803      	ldr	r3, [r0, #0]
 8016064:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016068:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801606c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016070:	2400      	movs	r4, #0
 8016072:	9400      	str	r4, [sp, #0]
 8016074:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016078:	691b      	ldr	r3, [r3, #16]
 801607a:	4669      	mov	r1, sp
 801607c:	4798      	blx	r3
 801607e:	b002      	add	sp, #8
 8016080:	bd10      	pop	{r4, pc}

08016082 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016082:	b538      	push	{r3, r4, r5, lr}
 8016084:	680b      	ldr	r3, [r1, #0]
 8016086:	460c      	mov	r4, r1
 8016088:	68db      	ldr	r3, [r3, #12]
 801608a:	4605      	mov	r5, r0
 801608c:	4798      	blx	r3
 801608e:	6823      	ldr	r3, [r4, #0]
 8016090:	4620      	mov	r0, r4
 8016092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016094:	4629      	mov	r1, r5
 8016096:	4798      	blx	r3
 8016098:	4628      	mov	r0, r5
 801609a:	bd38      	pop	{r3, r4, r5, pc}

0801609c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801609c:	b410      	push	{r4}
 801609e:	880a      	ldrh	r2, [r1, #0]
 80160a0:	8884      	ldrh	r4, [r0, #4]
 80160a2:	4422      	add	r2, r4
 80160a4:	800a      	strh	r2, [r1, #0]
 80160a6:	88c4      	ldrh	r4, [r0, #6]
 80160a8:	884a      	ldrh	r2, [r1, #2]
 80160aa:	4422      	add	r2, r4
 80160ac:	804a      	strh	r2, [r1, #2]
 80160ae:	6940      	ldr	r0, [r0, #20]
 80160b0:	b120      	cbz	r0, 80160bc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80160b2:	6803      	ldr	r3, [r0, #0]
 80160b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80160ba:	4718      	bx	r3
 80160bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160c0:	4770      	bx	lr

080160c2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80160c2:	b570      	push	{r4, r5, r6, lr}
 80160c4:	8882      	ldrh	r2, [r0, #4]
 80160c6:	880b      	ldrh	r3, [r1, #0]
 80160c8:	4413      	add	r3, r2
 80160ca:	800b      	strh	r3, [r1, #0]
 80160cc:	88c2      	ldrh	r2, [r0, #6]
 80160ce:	884b      	ldrh	r3, [r1, #2]
 80160d0:	460c      	mov	r4, r1
 80160d2:	4413      	add	r3, r2
 80160d4:	804b      	strh	r3, [r1, #2]
 80160d6:	4605      	mov	r5, r0
 80160d8:	1d01      	adds	r1, r0, #4
 80160da:	4620      	mov	r0, r4
 80160dc:	f7f9 fdc6 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 80160e0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80160e4:	2b00      	cmp	r3, #0
 80160e6:	dd0b      	ble.n	8016100 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160e8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80160ec:	2b00      	cmp	r3, #0
 80160ee:	dd07      	ble.n	8016100 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160f0:	6968      	ldr	r0, [r5, #20]
 80160f2:	b128      	cbz	r0, 8016100 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160f4:	6803      	ldr	r3, [r0, #0]
 80160f6:	4621      	mov	r1, r4
 80160f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80160fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80160fe:	4718      	bx	r3
 8016100:	bd70      	pop	{r4, r5, r6, pc}
	...

08016104 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016104:	b570      	push	{r4, r5, r6, lr}
 8016106:	8882      	ldrh	r2, [r0, #4]
 8016108:	880b      	ldrh	r3, [r1, #0]
 801610a:	4413      	add	r3, r2
 801610c:	800b      	strh	r3, [r1, #0]
 801610e:	88c2      	ldrh	r2, [r0, #6]
 8016110:	884b      	ldrh	r3, [r1, #2]
 8016112:	460c      	mov	r4, r1
 8016114:	4413      	add	r3, r2
 8016116:	804b      	strh	r3, [r1, #2]
 8016118:	4605      	mov	r5, r0
 801611a:	1d01      	adds	r1, r0, #4
 801611c:	4620      	mov	r0, r4
 801611e:	f7f9 fda5 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8016122:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016126:	2b00      	cmp	r3, #0
 8016128:	dd19      	ble.n	801615e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801612a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801612e:	2b00      	cmp	r3, #0
 8016130:	dd15      	ble.n	801615e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016132:	6968      	ldr	r0, [r5, #20]
 8016134:	b128      	cbz	r0, 8016142 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016136:	6803      	ldr	r3, [r0, #0]
 8016138:	4621      	mov	r1, r4
 801613a:	691b      	ldr	r3, [r3, #16]
 801613c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016140:	4718      	bx	r3
 8016142:	4b07      	ldr	r3, [pc, #28]	; (8016160 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016144:	681b      	ldr	r3, [r3, #0]
 8016146:	3304      	adds	r3, #4
 8016148:	429d      	cmp	r5, r3
 801614a:	d108      	bne.n	801615e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801614c:	f7fe fea0 	bl	8014e90 <_ZN8touchgfx11Application11getInstanceEv>
 8016150:	6803      	ldr	r3, [r0, #0]
 8016152:	6821      	ldr	r1, [r4, #0]
 8016154:	6862      	ldr	r2, [r4, #4]
 8016156:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016158:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801615c:	4718      	bx	r3
 801615e:	bd70      	pop	{r4, r5, r6, pc}
 8016160:	20013810 	.word	0x20013810

08016164 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016164:	b570      	push	{r4, r5, r6, lr}
 8016166:	4604      	mov	r4, r0
 8016168:	4616      	mov	r6, r2
 801616a:	460d      	mov	r5, r1
 801616c:	b901      	cbnz	r1, 8016170 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801616e:	b192      	cbz	r2, 8016196 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016170:	6823      	ldr	r3, [r4, #0]
 8016172:	4620      	mov	r0, r4
 8016174:	699b      	ldr	r3, [r3, #24]
 8016176:	4798      	blx	r3
 8016178:	88e2      	ldrh	r2, [r4, #6]
 801617a:	88a1      	ldrh	r1, [r4, #4]
 801617c:	4432      	add	r2, r6
 801617e:	4429      	add	r1, r5
 8016180:	4620      	mov	r0, r4
 8016182:	b212      	sxth	r2, r2
 8016184:	b209      	sxth	r1, r1
 8016186:	f7ec f992 	bl	80024ae <_ZN8touchgfx8Drawable5setXYEss>
 801618a:	6823      	ldr	r3, [r4, #0]
 801618c:	4620      	mov	r0, r4
 801618e:	699b      	ldr	r3, [r3, #24]
 8016190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016194:	4718      	bx	r3
 8016196:	bd70      	pop	{r4, r5, r6, pc}

08016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016198:	b510      	push	{r4, lr}
 801619a:	4604      	mov	r4, r0
 801619c:	4608      	mov	r0, r1
 801619e:	2300      	movs	r3, #0
 80161a0:	8023      	strh	r3, [r4, #0]
 80161a2:	8063      	strh	r3, [r4, #2]
 80161a4:	6803      	ldr	r3, [r0, #0]
 80161a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80161aa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80161ae:	80a1      	strh	r1, [r4, #4]
 80161b0:	80e2      	strh	r2, [r4, #6]
 80161b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80161b4:	4621      	mov	r1, r4
 80161b6:	4798      	blx	r3
 80161b8:	4620      	mov	r0, r4
 80161ba:	bd10      	pop	{r4, pc}

080161bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80161bc:	b530      	push	{r4, r5, lr}
 80161be:	8083      	strh	r3, [r0, #4]
 80161c0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80161c4:	80c3      	strh	r3, [r0, #6]
 80161c6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80161ca:	7203      	strb	r3, [r0, #8]
 80161cc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80161d0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80161d4:	7243      	strb	r3, [r0, #9]
 80161d6:	7a83      	ldrb	r3, [r0, #10]
 80161d8:	6141      	str	r1, [r0, #20]
 80161da:	f365 0306 	bfi	r3, r5, #0, #7
 80161de:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80161e2:	8302      	strh	r2, [r0, #24]
 80161e4:	f365 13c7 	bfi	r3, r5, #7, #1
 80161e8:	7283      	strb	r3, [r0, #10]
 80161ea:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80161ee:	72c3      	strb	r3, [r0, #11]
 80161f0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80161f4:	7303      	strb	r3, [r0, #12]
 80161f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80161fa:	81c3      	strh	r3, [r0, #14]
 80161fc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016200:	8203      	strh	r3, [r0, #16]
 8016202:	4b01      	ldr	r3, [pc, #4]	; (8016208 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016204:	6003      	str	r3, [r0, #0]
 8016206:	bd30      	pop	{r4, r5, pc}
 8016208:	0802cdf8 	.word	0x0802cdf8

0801620c <_ZNK8touchgfx9ConstFont4findEt>:
 801620c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801620e:	6944      	ldr	r4, [r0, #20]
 8016210:	b3bc      	cbz	r4, 8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016212:	88a3      	ldrh	r3, [r4, #4]
 8016214:	8b02      	ldrh	r2, [r0, #24]
 8016216:	1acb      	subs	r3, r1, r3
 8016218:	f102 32ff 	add.w	r2, r2, #4294967295
 801621c:	d431      	bmi.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801621e:	4293      	cmp	r3, r2
 8016220:	dd0c      	ble.n	801623c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016222:	230e      	movs	r3, #14
 8016224:	fb03 4302 	mla	r3, r3, r2, r4
 8016228:	889b      	ldrh	r3, [r3, #4]
 801622a:	1a5b      	subs	r3, r3, r1
 801622c:	1ad3      	subs	r3, r2, r3
 801622e:	429a      	cmp	r2, r3
 8016230:	db27      	blt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016232:	2b00      	cmp	r3, #0
 8016234:	bfbc      	itt	lt
 8016236:	2302      	movlt	r3, #2
 8016238:	fb92 f3f3 	sdivlt	r3, r2, r3
 801623c:	2500      	movs	r5, #0
 801623e:	260e      	movs	r6, #14
 8016240:	4295      	cmp	r5, r2
 8016242:	dc1e      	bgt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016244:	fb06 4003 	mla	r0, r6, r3, r4
 8016248:	8887      	ldrh	r7, [r0, #4]
 801624a:	42b9      	cmp	r1, r7
 801624c:	d01a      	beq.n	8016284 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801624e:	d20d      	bcs.n	801626c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016250:	1e5a      	subs	r2, r3, #1
 8016252:	4295      	cmp	r5, r2
 8016254:	dc15      	bgt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016256:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801625a:	1a5b      	subs	r3, r3, r1
 801625c:	1ad3      	subs	r3, r2, r3
 801625e:	429a      	cmp	r2, r3
 8016260:	db0f      	blt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016262:	429d      	cmp	r5, r3
 8016264:	ddec      	ble.n	8016240 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016266:	1953      	adds	r3, r2, r5
 8016268:	105b      	asrs	r3, r3, #1
 801626a:	e7e9      	b.n	8016240 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801626c:	1c5d      	adds	r5, r3, #1
 801626e:	42aa      	cmp	r2, r5
 8016270:	db07      	blt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016272:	8a43      	ldrh	r3, [r0, #18]
 8016274:	1acb      	subs	r3, r1, r3
 8016276:	442b      	add	r3, r5
 8016278:	429d      	cmp	r5, r3
 801627a:	dc02      	bgt.n	8016282 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801627c:	429a      	cmp	r2, r3
 801627e:	dadf      	bge.n	8016240 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016280:	e7f1      	b.n	8016266 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016282:	2000      	movs	r0, #0
 8016284:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016286 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016286:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016288:	4604      	mov	r4, r0
 801628a:	4617      	mov	r7, r2
 801628c:	461e      	mov	r6, r3
 801628e:	b911      	cbnz	r1, 8016296 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016290:	2500      	movs	r5, #0
 8016292:	4628      	mov	r0, r5
 8016294:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016296:	290a      	cmp	r1, #10
 8016298:	d0fa      	beq.n	8016290 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801629a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801629e:	4291      	cmp	r1, r2
 80162a0:	d0f6      	beq.n	8016290 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162a2:	f242 020b 	movw	r2, #8203	; 0x200b
 80162a6:	4291      	cmp	r1, r2
 80162a8:	d0f2      	beq.n	8016290 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162aa:	f7ff ffaf 	bl	801620c <_ZNK8touchgfx9ConstFont4findEt>
 80162ae:	4605      	mov	r5, r0
 80162b0:	b950      	cbnz	r0, 80162c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80162b2:	6823      	ldr	r3, [r4, #0]
 80162b4:	4620      	mov	r0, r4
 80162b6:	691b      	ldr	r3, [r3, #16]
 80162b8:	4798      	blx	r3
 80162ba:	4601      	mov	r1, r0
 80162bc:	4620      	mov	r0, r4
 80162be:	f7ff ffa5 	bl	801620c <_ZNK8touchgfx9ConstFont4findEt>
 80162c2:	4605      	mov	r5, r0
 80162c4:	2800      	cmp	r0, #0
 80162c6:	d0e3      	beq.n	8016290 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162c8:	6823      	ldr	r3, [r4, #0]
 80162ca:	4629      	mov	r1, r5
 80162cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80162ce:	4620      	mov	r0, r4
 80162d0:	4798      	blx	r3
 80162d2:	6038      	str	r0, [r7, #0]
 80162d4:	6823      	ldr	r3, [r4, #0]
 80162d6:	4620      	mov	r0, r4
 80162d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80162da:	4798      	blx	r3
 80162dc:	7030      	strb	r0, [r6, #0]
 80162de:	e7d8      	b.n	8016292 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080162e0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80162e0:	b538      	push	{r3, r4, r5, lr}
 80162e2:	4605      	mov	r5, r0
 80162e4:	f002 f962 	bl	80185ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 80162e8:	4604      	mov	r4, r0
 80162ea:	4628      	mov	r0, r5
 80162ec:	f002 f8a2 	bl	8018434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80162f0:	2800      	cmp	r0, #0
 80162f2:	bf14      	ite	ne
 80162f4:	2002      	movne	r0, #2
 80162f6:	2000      	moveq	r0, #0
 80162f8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80162fc:	b280      	uxth	r0, r0
 80162fe:	bd38      	pop	{r3, r4, r5, pc}

08016300 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016300:	b538      	push	{r3, r4, r5, lr}
 8016302:	4605      	mov	r5, r0
 8016304:	f002 f952 	bl	80185ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016308:	4604      	mov	r4, r0
 801630a:	4628      	mov	r0, r5
 801630c:	f002 f892 	bl	8018434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016310:	2800      	cmp	r0, #0
 8016312:	bf14      	ite	ne
 8016314:	2002      	movne	r0, #2
 8016316:	2000      	moveq	r0, #0
 8016318:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801631c:	f040 0001 	orr.w	r0, r0, #1
 8016320:	b280      	uxth	r0, r0
 8016322:	bd38      	pop	{r3, r4, r5, pc}

08016324 <_ZN8touchgfx4clzuEm>:
 8016324:	4603      	mov	r3, r0
 8016326:	b1c8      	cbz	r0, 801635c <_ZN8touchgfx4clzuEm+0x38>
 8016328:	0c02      	lsrs	r2, r0, #16
 801632a:	0412      	lsls	r2, r2, #16
 801632c:	b9a2      	cbnz	r2, 8016358 <_ZN8touchgfx4clzuEm+0x34>
 801632e:	0403      	lsls	r3, r0, #16
 8016330:	2010      	movs	r0, #16
 8016332:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016336:	bf04      	itt	eq
 8016338:	021b      	lsleq	r3, r3, #8
 801633a:	3008      	addeq	r0, #8
 801633c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016340:	bf04      	itt	eq
 8016342:	011b      	lsleq	r3, r3, #4
 8016344:	3004      	addeq	r0, #4
 8016346:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801634a:	bf04      	itt	eq
 801634c:	009b      	lsleq	r3, r3, #2
 801634e:	3002      	addeq	r0, #2
 8016350:	2b00      	cmp	r3, #0
 8016352:	db04      	blt.n	801635e <_ZN8touchgfx4clzuEm+0x3a>
 8016354:	3001      	adds	r0, #1
 8016356:	4770      	bx	lr
 8016358:	2000      	movs	r0, #0
 801635a:	e7ea      	b.n	8016332 <_ZN8touchgfx4clzuEm+0xe>
 801635c:	2020      	movs	r0, #32
 801635e:	4770      	bx	lr

08016360 <_ZN8touchgfx7muldivuEmmmRm>:
 8016360:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016364:	460f      	mov	r7, r1
 8016366:	4615      	mov	r5, r2
 8016368:	461e      	mov	r6, r3
 801636a:	4601      	mov	r1, r0
 801636c:	b100      	cbz	r0, 8016370 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801636e:	b927      	cbnz	r7, 801637a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016370:	2000      	movs	r0, #0
 8016372:	6030      	str	r0, [r6, #0]
 8016374:	b002      	add	sp, #8
 8016376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801637a:	f7ff ffd3 	bl	8016324 <_ZN8touchgfx4clzuEm>
 801637e:	b980      	cbnz	r0, 80163a2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016380:	4638      	mov	r0, r7
 8016382:	f7ff ffcf 	bl	8016324 <_ZN8touchgfx4clzuEm>
 8016386:	2800      	cmp	r0, #0
 8016388:	dd05      	ble.n	8016396 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801638a:	4633      	mov	r3, r6
 801638c:	462a      	mov	r2, r5
 801638e:	4638      	mov	r0, r7
 8016390:	f7ff ffe6 	bl	8016360 <_ZN8touchgfx7muldivuEmmmRm>
 8016394:	e7ee      	b.n	8016374 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016396:	f04f 33ff 	mov.w	r3, #4294967295
 801639a:	6033      	str	r3, [r6, #0]
 801639c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80163a0:	e7e8      	b.n	8016374 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163a2:	fa37 f800 	lsrs.w	r8, r7, r0
 80163a6:	fb07 f301 	mul.w	r3, r7, r1
 80163aa:	d105      	bne.n	80163b8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80163ac:	fbb3 f0f5 	udiv	r0, r3, r5
 80163b0:	fb05 3510 	mls	r5, r5, r0, r3
 80163b4:	6035      	str	r5, [r6, #0]
 80163b6:	e7dd      	b.n	8016374 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163b8:	2301      	movs	r3, #1
 80163ba:	fa01 fa00 	lsl.w	sl, r1, r0
 80163be:	fa03 f000 	lsl.w	r0, r3, r0
 80163c2:	3801      	subs	r0, #1
 80163c4:	462a      	mov	r2, r5
 80163c6:	4633      	mov	r3, r6
 80163c8:	4038      	ands	r0, r7
 80163ca:	f7ff ffc9 	bl	8016360 <_ZN8touchgfx7muldivuEmmmRm>
 80163ce:	fbba f9f5 	udiv	r9, sl, r5
 80163d2:	462a      	mov	r2, r5
 80163d4:	4607      	mov	r7, r0
 80163d6:	ab01      	add	r3, sp, #4
 80163d8:	fb05 a119 	mls	r1, r5, r9, sl
 80163dc:	4640      	mov	r0, r8
 80163de:	f7ff ffbf 	bl	8016360 <_ZN8touchgfx7muldivuEmmmRm>
 80163e2:	9b01      	ldr	r3, [sp, #4]
 80163e4:	6832      	ldr	r2, [r6, #0]
 80163e6:	fb08 f409 	mul.w	r4, r8, r9
 80163ea:	441a      	add	r2, r3
 80163ec:	fbb2 f3f5 	udiv	r3, r2, r5
 80163f0:	441c      	add	r4, r3
 80163f2:	443c      	add	r4, r7
 80163f4:	4420      	add	r0, r4
 80163f6:	fb05 2513 	mls	r5, r5, r3, r2
 80163fa:	e7db      	b.n	80163b4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080163fc <_ZN8touchgfx6muldivElllRl>:
 80163fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80163fe:	2800      	cmp	r0, #0
 8016400:	bfba      	itte	lt
 8016402:	4240      	neglt	r0, r0
 8016404:	f04f 34ff 	movlt.w	r4, #4294967295
 8016408:	2401      	movge	r4, #1
 801640a:	2900      	cmp	r1, #0
 801640c:	bfbc      	itt	lt
 801640e:	4249      	neglt	r1, r1
 8016410:	4264      	neglt	r4, r4
 8016412:	2a00      	cmp	r2, #0
 8016414:	bfb6      	itet	lt
 8016416:	4265      	neglt	r5, r4
 8016418:	4625      	movge	r5, r4
 801641a:	4252      	neglt	r2, r2
 801641c:	4288      	cmp	r0, r1
 801641e:	461e      	mov	r6, r3
 8016420:	bfc2      	ittt	gt
 8016422:	4603      	movgt	r3, r0
 8016424:	4608      	movgt	r0, r1
 8016426:	4619      	movgt	r1, r3
 8016428:	ab01      	add	r3, sp, #4
 801642a:	f7ff ff99 	bl	8016360 <_ZN8touchgfx7muldivuEmmmRm>
 801642e:	9b01      	ldr	r3, [sp, #4]
 8016430:	4368      	muls	r0, r5
 8016432:	435c      	muls	r4, r3
 8016434:	6034      	str	r4, [r6, #0]
 8016436:	b002      	add	sp, #8
 8016438:	bd70      	pop	{r4, r5, r6, pc}

0801643a <_ZN8touchgfx6muldivElll>:
 801643a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801643c:	4606      	mov	r6, r0
 801643e:	ab01      	add	r3, sp, #4
 8016440:	460d      	mov	r5, r1
 8016442:	4614      	mov	r4, r2
 8016444:	f7ff ffda 	bl	80163fc <_ZN8touchgfx6muldivElllRl>
 8016448:	2e00      	cmp	r6, #0
 801644a:	db20      	blt.n	801648e <_ZN8touchgfx6muldivElll+0x54>
 801644c:	bf14      	ite	ne
 801644e:	2301      	movne	r3, #1
 8016450:	2300      	moveq	r3, #0
 8016452:	2d00      	cmp	r5, #0
 8016454:	db1e      	blt.n	8016494 <_ZN8touchgfx6muldivElll+0x5a>
 8016456:	bf14      	ite	ne
 8016458:	2201      	movne	r2, #1
 801645a:	2200      	moveq	r2, #0
 801645c:	2c00      	cmp	r4, #0
 801645e:	fb03 f202 	mul.w	r2, r3, r2
 8016462:	db1a      	blt.n	801649a <_ZN8touchgfx6muldivElll+0x60>
 8016464:	bf14      	ite	ne
 8016466:	2301      	movne	r3, #1
 8016468:	2300      	moveq	r3, #0
 801646a:	4353      	muls	r3, r2
 801646c:	2b01      	cmp	r3, #1
 801646e:	d117      	bne.n	80164a0 <_ZN8touchgfx6muldivElll+0x66>
 8016470:	9b01      	ldr	r3, [sp, #4]
 8016472:	2c00      	cmp	r4, #0
 8016474:	bfb8      	it	lt
 8016476:	4264      	neglt	r4, r4
 8016478:	2b00      	cmp	r3, #0
 801647a:	f104 0401 	add.w	r4, r4, #1
 801647e:	bfb8      	it	lt
 8016480:	425b      	neglt	r3, r3
 8016482:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016486:	db00      	blt.n	801648a <_ZN8touchgfx6muldivElll+0x50>
 8016488:	3001      	adds	r0, #1
 801648a:	b002      	add	sp, #8
 801648c:	bd70      	pop	{r4, r5, r6, pc}
 801648e:	f04f 33ff 	mov.w	r3, #4294967295
 8016492:	e7de      	b.n	8016452 <_ZN8touchgfx6muldivElll+0x18>
 8016494:	f04f 32ff 	mov.w	r2, #4294967295
 8016498:	e7e0      	b.n	801645c <_ZN8touchgfx6muldivElll+0x22>
 801649a:	f04f 33ff 	mov.w	r3, #4294967295
 801649e:	e7e4      	b.n	801646a <_ZN8touchgfx6muldivElll+0x30>
 80164a0:	3301      	adds	r3, #1
 80164a2:	d1f2      	bne.n	801648a <_ZN8touchgfx6muldivElll+0x50>
 80164a4:	9b01      	ldr	r3, [sp, #4]
 80164a6:	2c00      	cmp	r4, #0
 80164a8:	bfb8      	it	lt
 80164aa:	4264      	neglt	r4, r4
 80164ac:	2b00      	cmp	r3, #0
 80164ae:	bfb8      	it	lt
 80164b0:	425b      	neglt	r3, r3
 80164b2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80164b6:	bfc8      	it	gt
 80164b8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80164bc:	e7e5      	b.n	801648a <_ZN8touchgfx6muldivElll+0x50>

080164be <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80164be:	2000      	movs	r0, #0
 80164c0:	4770      	bx	lr

080164c2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80164c2:	2001      	movs	r0, #1
 80164c4:	4770      	bx	lr

080164c6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80164c6:	2002      	movs	r0, #2
 80164c8:	4770      	bx	lr

080164ca <_ZN8touchgfx6ScreenD1Ev>:
 80164ca:	4770      	bx	lr

080164cc <_ZN8touchgfx12GestureEventD1Ev>:
 80164cc:	4770      	bx	lr

080164ce <_ZN8touchgfx9DragEventD1Ev>:
 80164ce:	4770      	bx	lr

080164d0 <_ZN8touchgfx10ClickEventD1Ev>:
 80164d0:	4770      	bx	lr

080164d2 <_ZN8touchgfx10ClickEventD0Ev>:
 80164d2:	b510      	push	{r4, lr}
 80164d4:	210c      	movs	r1, #12
 80164d6:	4604      	mov	r4, r0
 80164d8:	f011 fa39 	bl	802794e <_ZdlPvj>
 80164dc:	4620      	mov	r0, r4
 80164de:	bd10      	pop	{r4, pc}

080164e0 <_ZN8touchgfx9DragEventD0Ev>:
 80164e0:	b510      	push	{r4, lr}
 80164e2:	2110      	movs	r1, #16
 80164e4:	4604      	mov	r4, r0
 80164e6:	f011 fa32 	bl	802794e <_ZdlPvj>
 80164ea:	4620      	mov	r0, r4
 80164ec:	bd10      	pop	{r4, pc}

080164ee <_ZN8touchgfx12GestureEventD0Ev>:
 80164ee:	b510      	push	{r4, lr}
 80164f0:	210c      	movs	r1, #12
 80164f2:	4604      	mov	r4, r0
 80164f4:	f011 fa2b 	bl	802794e <_ZdlPvj>
 80164f8:	4620      	mov	r0, r4
 80164fa:	bd10      	pop	{r4, pc}

080164fc <_ZN8touchgfx6ScreenD0Ev>:
 80164fc:	b510      	push	{r4, lr}
 80164fe:	213c      	movs	r1, #60	; 0x3c
 8016500:	4604      	mov	r4, r0
 8016502:	f011 fa24 	bl	802794e <_ZdlPvj>
 8016506:	4620      	mov	r0, r4
 8016508:	bd10      	pop	{r4, pc}
	...

0801650c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801650c:	b530      	push	{r4, r5, lr}
 801650e:	460d      	mov	r5, r1
 8016510:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016512:	b087      	sub	sp, #28
 8016514:	4604      	mov	r4, r0
 8016516:	b301      	cbz	r1, 801655a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016518:	a801      	add	r0, sp, #4
 801651a:	f7ff fe3d 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801651e:	892a      	ldrh	r2, [r5, #8]
 8016520:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016524:	7928      	ldrb	r0, [r5, #4]
 8016526:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801652a:	f88d 0010 	strb.w	r0, [sp, #16]
 801652e:	1ad2      	subs	r2, r2, r3
 8016530:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016532:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016534:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016538:	441a      	add	r2, r3
 801653a:	896b      	ldrh	r3, [r5, #10]
 801653c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016540:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016544:	1b5b      	subs	r3, r3, r5
 8016546:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016548:	442b      	add	r3, r5
 801654a:	4d05      	ldr	r5, [pc, #20]	; (8016560 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801654c:	9503      	str	r5, [sp, #12]
 801654e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016552:	6803      	ldr	r3, [r0, #0]
 8016554:	a903      	add	r1, sp, #12
 8016556:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016558:	4798      	blx	r3
 801655a:	b007      	add	sp, #28
 801655c:	bd30      	pop	{r4, r5, pc}
 801655e:	bf00      	nop
 8016560:	0802ce80 	.word	0x0802ce80

08016564 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016568:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801656a:	b08a      	sub	sp, #40	; 0x28
 801656c:	4604      	mov	r4, r0
 801656e:	460d      	mov	r5, r1
 8016570:	b113      	cbz	r3, 8016578 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016572:	790b      	ldrb	r3, [r1, #4]
 8016574:	2b00      	cmp	r3, #0
 8016576:	d044      	beq.n	8016602 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016578:	f104 0804 	add.w	r8, r4, #4
 801657c:	4641      	mov	r1, r8
 801657e:	a803      	add	r0, sp, #12
 8016580:	f7ff fe0a 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016584:	792b      	ldrb	r3, [r5, #4]
 8016586:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801658a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801658e:	b983      	cbnz	r3, 80165b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016590:	892a      	ldrh	r2, [r5, #8]
 8016592:	88e9      	ldrh	r1, [r5, #6]
 8016594:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016598:	1b92      	subs	r2, r2, r6
 801659a:	1bc9      	subs	r1, r1, r7
 801659c:	9301      	str	r3, [sp, #4]
 801659e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80165a2:	9300      	str	r3, [sp, #0]
 80165a4:	b212      	sxth	r2, r2
 80165a6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80165aa:	b209      	sxth	r1, r1
 80165ac:	4640      	mov	r0, r8
 80165ae:	f7f9 fa79 	bl	800faa4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80165b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80165b4:	b329      	cbz	r1, 8016602 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80165b6:	a805      	add	r0, sp, #20
 80165b8:	f7ff fdee 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165bc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80165c0:	792b      	ldrb	r3, [r5, #4]
 80165c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165c4:	f88d 3020 	strb.w	r3, [sp, #32]
 80165c8:	1abf      	subs	r7, r7, r2
 80165ca:	88ea      	ldrh	r2, [r5, #6]
 80165cc:	4417      	add	r7, r2
 80165ce:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80165d0:	4417      	add	r7, r2
 80165d2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80165d6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80165da:	1ab6      	subs	r6, r6, r2
 80165dc:	892a      	ldrh	r2, [r5, #8]
 80165de:	4416      	add	r6, r2
 80165e0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80165e2:	4416      	add	r6, r2
 80165e4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80165e8:	4a07      	ldr	r2, [pc, #28]	; (8016608 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80165ea:	9207      	str	r2, [sp, #28]
 80165ec:	2600      	movs	r6, #0
 80165ee:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80165f2:	6803      	ldr	r3, [r0, #0]
 80165f4:	a907      	add	r1, sp, #28
 80165f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80165f8:	4798      	blx	r3
 80165fa:	792b      	ldrb	r3, [r5, #4]
 80165fc:	b10b      	cbz	r3, 8016602 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80165fe:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016602:	b00a      	add	sp, #40	; 0x28
 8016604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016608:	0802ce58 	.word	0x0802ce58

0801660c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801660c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016610:	460c      	mov	r4, r1
 8016612:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016614:	b088      	sub	sp, #32
 8016616:	4605      	mov	r5, r0
 8016618:	2900      	cmp	r1, #0
 801661a:	d06d      	beq.n	80166f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801661c:	4668      	mov	r0, sp
 801661e:	f7ff fdbb 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016622:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016624:	88e3      	ldrh	r3, [r4, #6]
 8016626:	f9bd 8000 	ldrsh.w	r8, [sp]
 801662a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801662e:	440b      	add	r3, r1
 8016630:	b21b      	sxth	r3, r3
 8016632:	4543      	cmp	r3, r8
 8016634:	db31      	blt.n	801669a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016636:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801663a:	44c4      	add	ip, r8
 801663c:	fa0f fc8c 	sxth.w	ip, ip
 8016640:	4563      	cmp	r3, ip
 8016642:	da2a      	bge.n	801669a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016644:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016646:	8926      	ldrh	r6, [r4, #8]
 8016648:	4416      	add	r6, r2
 801664a:	b236      	sxth	r6, r6
 801664c:	42be      	cmp	r6, r7
 801664e:	db24      	blt.n	801669a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016650:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016654:	4438      	add	r0, r7
 8016656:	b200      	sxth	r0, r0
 8016658:	4286      	cmp	r6, r0
 801665a:	da1e      	bge.n	801669a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801665c:	8963      	ldrh	r3, [r4, #10]
 801665e:	4419      	add	r1, r3
 8016660:	b209      	sxth	r1, r1
 8016662:	4541      	cmp	r1, r8
 8016664:	db08      	blt.n	8016678 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016666:	4561      	cmp	r1, ip
 8016668:	da06      	bge.n	8016678 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801666a:	89a3      	ldrh	r3, [r4, #12]
 801666c:	441a      	add	r2, r3
 801666e:	b212      	sxth	r2, r2
 8016670:	42ba      	cmp	r2, r7
 8016672:	db01      	blt.n	8016678 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016674:	4282      	cmp	r2, r0
 8016676:	db10      	blt.n	801669a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016678:	4b21      	ldr	r3, [pc, #132]	; (8016700 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801667a:	9304      	str	r3, [sp, #16]
 801667c:	2302      	movs	r3, #2
 801667e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016682:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016684:	2300      	movs	r3, #0
 8016686:	f8ad 3016 	strh.w	r3, [sp, #22]
 801668a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801668e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016692:	6803      	ldr	r3, [r0, #0]
 8016694:	a904      	add	r1, sp, #16
 8016696:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016698:	4798      	blx	r3
 801669a:	1d29      	adds	r1, r5, #4
 801669c:	a802      	add	r0, sp, #8
 801669e:	f7ff fd7b 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166a2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80166a6:	88e0      	ldrh	r0, [r4, #6]
 80166a8:	7921      	ldrb	r1, [r4, #4]
 80166aa:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80166ae:	8922      	ldrh	r2, [r4, #8]
 80166b0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80166b2:	f88d 1014 	strb.w	r1, [sp, #20]
 80166b6:	eba3 0808 	sub.w	r8, r3, r8
 80166ba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80166be:	1bdf      	subs	r7, r3, r7
 80166c0:	b2bb      	uxth	r3, r7
 80166c2:	fa1f f888 	uxth.w	r8, r8
 80166c6:	8967      	ldrh	r7, [r4, #10]
 80166c8:	89a4      	ldrh	r4, [r4, #12]
 80166ca:	4440      	add	r0, r8
 80166cc:	4460      	add	r0, ip
 80166ce:	441a      	add	r2, r3
 80166d0:	44b8      	add	r8, r7
 80166d2:	4423      	add	r3, r4
 80166d4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80166d8:	4433      	add	r3, r6
 80166da:	4432      	add	r2, r6
 80166dc:	44e0      	add	r8, ip
 80166de:	4c09      	ldr	r4, [pc, #36]	; (8016704 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80166e0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80166e2:	9404      	str	r4, [sp, #16]
 80166e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80166e8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80166ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80166f0:	6803      	ldr	r3, [r0, #0]
 80166f2:	a904      	add	r1, sp, #16
 80166f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80166f6:	4798      	blx	r3
 80166f8:	b008      	add	sp, #32
 80166fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80166fe:	bf00      	nop
 8016700:	0802ce58 	.word	0x0802ce58
 8016704:	0802ce6c 	.word	0x0802ce6c

08016708 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016708:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801670a:	4604      	mov	r4, r0
 801670c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016710:	3201      	adds	r2, #1
 8016712:	d112      	bne.n	801673a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016714:	6803      	ldr	r3, [r0, #0]
 8016716:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801671a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801671e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016722:	2500      	movs	r5, #0
 8016724:	9500      	str	r5, [sp, #0]
 8016726:	466d      	mov	r5, sp
 8016728:	4629      	mov	r1, r5
 801672a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801672e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016730:	4798      	blx	r3
 8016732:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016736:	e884 0003 	stmia.w	r4, {r0, r1}
 801673a:	4620      	mov	r0, r4
 801673c:	b003      	add	sp, #12
 801673e:	bd30      	pop	{r4, r5, pc}

08016740 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016740:	b513      	push	{r0, r1, r4, lr}
 8016742:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016746:	3301      	adds	r3, #1
 8016748:	4604      	mov	r4, r0
 801674a:	d109      	bne.n	8016760 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801674c:	4601      	mov	r1, r0
 801674e:	4668      	mov	r0, sp
 8016750:	f7ff fd22 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016754:	f8bd 3000 	ldrh.w	r3, [sp]
 8016758:	8423      	strh	r3, [r4, #32]
 801675a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801675e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016760:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016764:	b002      	add	sp, #8
 8016766:	bd10      	pop	{r4, pc}

08016768 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016768:	b513      	push	{r0, r1, r4, lr}
 801676a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801676e:	3301      	adds	r3, #1
 8016770:	4604      	mov	r4, r0
 8016772:	d109      	bne.n	8016788 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016774:	4601      	mov	r1, r0
 8016776:	4668      	mov	r0, sp
 8016778:	f7ff fd0e 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801677c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016780:	8423      	strh	r3, [r4, #32]
 8016782:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016786:	8463      	strh	r3, [r4, #34]	; 0x22
 8016788:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801678c:	b002      	add	sp, #8
 801678e:	bd10      	pop	{r4, pc}

08016790 <_ZN8touchgfx6ScreenC1Ev>:
 8016790:	b570      	push	{r4, r5, r6, lr}
 8016792:	4605      	mov	r5, r0
 8016794:	4b16      	ldr	r3, [pc, #88]	; (80167f0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016796:	f845 3b04 	str.w	r3, [r5], #4
 801679a:	2300      	movs	r3, #0
 801679c:	8103      	strh	r3, [r0, #8]
 801679e:	8143      	strh	r3, [r0, #10]
 80167a0:	8183      	strh	r3, [r0, #12]
 80167a2:	81c3      	strh	r3, [r0, #14]
 80167a4:	8203      	strh	r3, [r0, #16]
 80167a6:	8243      	strh	r3, [r0, #18]
 80167a8:	8283      	strh	r3, [r0, #20]
 80167aa:	82c3      	strh	r3, [r0, #22]
 80167ac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80167b0:	6203      	str	r3, [r0, #32]
 80167b2:	8483      	strh	r3, [r0, #36]	; 0x24
 80167b4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80167b6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80167ba:	4a0e      	ldr	r2, [pc, #56]	; (80167f4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80167bc:	6343      	str	r3, [r0, #52]	; 0x34
 80167be:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80167c2:	4b0d      	ldr	r3, [pc, #52]	; (80167f8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80167c4:	6042      	str	r2, [r0, #4]
 80167c6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80167ca:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80167cc:	4a0b      	ldr	r2, [pc, #44]	; (80167fc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80167ce:	4604      	mov	r4, r0
 80167d0:	2101      	movs	r1, #1
 80167d2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80167d6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80167da:	f9b2 1000 	ldrsh.w	r1, [r2]
 80167de:	4628      	mov	r0, r5
 80167e0:	4798      	blx	r3
 80167e2:	6863      	ldr	r3, [r4, #4]
 80167e4:	4628      	mov	r0, r5
 80167e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80167e8:	4631      	mov	r1, r6
 80167ea:	4798      	blx	r3
 80167ec:	4620      	mov	r0, r4
 80167ee:	bd70      	pop	{r4, r5, r6, pc}
 80167f0:	0802ce94 	.word	0x0802ce94
 80167f4:	0802c6f8 	.word	0x0802c6f8
 80167f8:	200137c2 	.word	0x200137c2
 80167fc:	200137c0 	.word	0x200137c0

08016800 <_ZN8touchgfx6Screen4drawEv>:
 8016800:	b507      	push	{r0, r1, r2, lr}
 8016802:	4b09      	ldr	r3, [pc, #36]	; (8016828 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016804:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016808:	4b08      	ldr	r3, [pc, #32]	; (801682c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801680a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801680e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016812:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016816:	6803      	ldr	r3, [r0, #0]
 8016818:	2100      	movs	r1, #0
 801681a:	9100      	str	r1, [sp, #0]
 801681c:	689b      	ldr	r3, [r3, #8]
 801681e:	4669      	mov	r1, sp
 8016820:	4798      	blx	r3
 8016822:	b003      	add	sp, #12
 8016824:	f85d fb04 	ldr.w	pc, [sp], #4
 8016828:	200137c0 	.word	0x200137c0
 801682c:	200137c2 	.word	0x200137c2

08016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016834:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016838:	2b00      	cmp	r3, #0
 801683a:	b089      	sub	sp, #36	; 0x24
 801683c:	4680      	mov	r8, r0
 801683e:	460c      	mov	r4, r1
 8016840:	4615      	mov	r5, r2
 8016842:	dd0e      	ble.n	8016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016844:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016848:	2b00      	cmp	r3, #0
 801684a:	dd0a      	ble.n	8016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801684c:	4628      	mov	r0, r5
 801684e:	f7ff ff5b 	bl	8016708 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016852:	4621      	mov	r1, r4
 8016854:	f7fe fa3d 	bl	8014cd2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016858:	69eb      	ldr	r3, [r5, #28]
 801685a:	b928      	cbnz	r0, 8016868 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801685c:	461d      	mov	r5, r3
 801685e:	2b00      	cmp	r3, #0
 8016860:	d1f4      	bne.n	801684c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016862:	b009      	add	sp, #36	; 0x24
 8016864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016868:	ae04      	add	r6, sp, #16
 801686a:	2b00      	cmp	r3, #0
 801686c:	f000 80b5 	beq.w	80169da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016870:	682b      	ldr	r3, [r5, #0]
 8016872:	4629      	mov	r1, r5
 8016874:	68db      	ldr	r3, [r3, #12]
 8016876:	a802      	add	r0, sp, #8
 8016878:	4798      	blx	r3
 801687a:	4628      	mov	r0, r5
 801687c:	f7ff ff60 	bl	8016740 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016880:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016884:	4407      	add	r7, r0
 8016886:	4628      	mov	r0, r5
 8016888:	f7ff ff6e 	bl	8016768 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801688c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016890:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016894:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016898:	4418      	add	r0, r3
 801689a:	4621      	mov	r1, r4
 801689c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80168a0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80168a4:	b23f      	sxth	r7, r7
 80168a6:	4630      	mov	r0, r6
 80168a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80168ac:	f8ad 7010 	strh.w	r7, [sp, #16]
 80168b0:	f7f9 f9dc 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 80168b4:	4628      	mov	r0, r5
 80168b6:	f7ff ff27 	bl	8016708 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80168ba:	4602      	mov	r2, r0
 80168bc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80168c0:	ab06      	add	r3, sp, #24
 80168c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80168c6:	4611      	mov	r1, r2
 80168c8:	4618      	mov	r0, r3
 80168ca:	f7f9 f9cf 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 80168ce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80168d2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80168d6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80168da:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80168de:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80168e2:	4299      	cmp	r1, r3
 80168e4:	d10b      	bne.n	80168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80168ea:	4552      	cmp	r2, sl
 80168ec:	d107      	bne.n	80168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168ee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80168f2:	455a      	cmp	r2, fp
 80168f4:	d103      	bne.n	80168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168f6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80168fa:	454a      	cmp	r2, r9
 80168fc:	d06d      	beq.n	80169da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80168fe:	f1bb 0f00 	cmp.w	fp, #0
 8016902:	dd65      	ble.n	80169d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016904:	f1b9 0f00 	cmp.w	r9, #0
 8016908:	dd62      	ble.n	80169d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801690a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801690e:	fa1f f08a 	uxth.w	r0, sl
 8016912:	4552      	cmp	r2, sl
 8016914:	9000      	str	r0, [sp, #0]
 8016916:	da12      	bge.n	801693e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016918:	9301      	str	r3, [sp, #4]
 801691a:	9b00      	ldr	r3, [sp, #0]
 801691c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016920:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016924:	1a9a      	subs	r2, r3, r2
 8016926:	f8ad 1010 	strh.w	r1, [sp, #16]
 801692a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801692e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016932:	69ea      	ldr	r2, [r5, #28]
 8016934:	4631      	mov	r1, r6
 8016936:	4640      	mov	r0, r8
 8016938:	f7ff ff7a 	bl	8016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801693c:	9b01      	ldr	r3, [sp, #4]
 801693e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016942:	429a      	cmp	r2, r3
 8016944:	b29f      	uxth	r7, r3
 8016946:	da0d      	bge.n	8016964 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016948:	f8ad 2010 	strh.w	r2, [sp, #16]
 801694c:	1aba      	subs	r2, r7, r2
 801694e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016952:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016956:	f8ad 9016 	strh.w	r9, [sp, #22]
 801695a:	69ea      	ldr	r2, [r5, #28]
 801695c:	4631      	mov	r1, r6
 801695e:	4640      	mov	r0, r8
 8016960:	f7ff ff66 	bl	8016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016964:	8822      	ldrh	r2, [r4, #0]
 8016966:	88a3      	ldrh	r3, [r4, #4]
 8016968:	445f      	add	r7, fp
 801696a:	4413      	add	r3, r2
 801696c:	b29b      	uxth	r3, r3
 801696e:	b2bf      	uxth	r7, r7
 8016970:	b23a      	sxth	r2, r7
 8016972:	b219      	sxth	r1, r3
 8016974:	4291      	cmp	r1, r2
 8016976:	dd0d      	ble.n	8016994 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016978:	1bdb      	subs	r3, r3, r7
 801697a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801697e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016982:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016986:	f8ad 9016 	strh.w	r9, [sp, #22]
 801698a:	69ea      	ldr	r2, [r5, #28]
 801698c:	4631      	mov	r1, r6
 801698e:	4640      	mov	r0, r8
 8016990:	f7ff ff4e 	bl	8016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016994:	88e2      	ldrh	r2, [r4, #6]
 8016996:	8863      	ldrh	r3, [r4, #2]
 8016998:	4413      	add	r3, r2
 801699a:	9a00      	ldr	r2, [sp, #0]
 801699c:	444a      	add	r2, r9
 801699e:	b29b      	uxth	r3, r3
 80169a0:	fa1f f982 	uxth.w	r9, r2
 80169a4:	fa0f f289 	sxth.w	r2, r9
 80169a8:	b219      	sxth	r1, r3
 80169aa:	428a      	cmp	r2, r1
 80169ac:	da15      	bge.n	80169da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80169ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80169b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80169b6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80169ba:	eba3 0309 	sub.w	r3, r3, r9
 80169be:	f8ad 0010 	strh.w	r0, [sp, #16]
 80169c2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80169ca:	69ea      	ldr	r2, [r5, #28]
 80169cc:	4631      	mov	r1, r6
 80169ce:	e001      	b.n	80169d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80169d0:	69ea      	ldr	r2, [r5, #28]
 80169d2:	4621      	mov	r1, r4
 80169d4:	4640      	mov	r0, r8
 80169d6:	f7ff ff2b 	bl	8016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169da:	4628      	mov	r0, r5
 80169dc:	f7ff fe94 	bl	8016708 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80169e0:	6861      	ldr	r1, [r4, #4]
 80169e2:	4602      	mov	r2, r0
 80169e4:	6820      	ldr	r0, [r4, #0]
 80169e6:	4633      	mov	r3, r6
 80169e8:	c303      	stmia	r3!, {r0, r1}
 80169ea:	4611      	mov	r1, r2
 80169ec:	4630      	mov	r0, r6
 80169ee:	f7f9 f93d 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 80169f2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80169f6:	2b00      	cmp	r3, #0
 80169f8:	f77f af33 	ble.w	8016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80169fc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016a00:	2b00      	cmp	r3, #0
 8016a02:	f77f af2e 	ble.w	8016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a06:	4628      	mov	r0, r5
 8016a08:	f7ff fe9a 	bl	8016740 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016a0c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016a10:	1a18      	subs	r0, r3, r0
 8016a12:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a16:	4628      	mov	r0, r5
 8016a18:	f7ff fea6 	bl	8016768 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016a1c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016a20:	1a18      	subs	r0, r3, r0
 8016a22:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016a26:	682b      	ldr	r3, [r5, #0]
 8016a28:	4631      	mov	r1, r6
 8016a2a:	689b      	ldr	r3, [r3, #8]
 8016a2c:	4628      	mov	r0, r5
 8016a2e:	4798      	blx	r3
 8016a30:	e717      	b.n	8016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016a32 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016a32:	b570      	push	{r4, r5, r6, lr}
 8016a34:	460c      	mov	r4, r1
 8016a36:	b086      	sub	sp, #24
 8016a38:	1d06      	adds	r6, r0, #4
 8016a3a:	2300      	movs	r3, #0
 8016a3c:	4631      	mov	r1, r6
 8016a3e:	4605      	mov	r5, r0
 8016a40:	a802      	add	r0, sp, #8
 8016a42:	9301      	str	r3, [sp, #4]
 8016a44:	f7ff fba8 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a48:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a4c:	8822      	ldrh	r2, [r4, #0]
 8016a4e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016a52:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016a56:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016a5a:	1ad2      	subs	r2, r2, r3
 8016a5c:	8863      	ldrh	r3, [r4, #2]
 8016a5e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a62:	1a5b      	subs	r3, r3, r1
 8016a64:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016a68:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016a6c:	aa01      	add	r2, sp, #4
 8016a6e:	a904      	add	r1, sp, #16
 8016a70:	4630      	mov	r0, r6
 8016a72:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016a76:	f7f9 f9d1 	bl	800fe1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016a7a:	9a01      	ldr	r2, [sp, #4]
 8016a7c:	b11a      	cbz	r2, 8016a86 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016a7e:	4621      	mov	r1, r4
 8016a80:	4628      	mov	r0, r5
 8016a82:	f7ff fed5 	bl	8016830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a86:	b006      	add	sp, #24
 8016a88:	bd70      	pop	{r4, r5, r6, pc}

08016a8a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016a8a:	b530      	push	{r4, r5, lr}
 8016a8c:	4602      	mov	r2, r0
 8016a8e:	4604      	mov	r4, r0
 8016a90:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016a94:	b085      	sub	sp, #20
 8016a96:	460d      	mov	r5, r1
 8016a98:	6851      	ldr	r1, [r2, #4]
 8016a9a:	466b      	mov	r3, sp
 8016a9c:	c303      	stmia	r3!, {r0, r1}
 8016a9e:	4629      	mov	r1, r5
 8016aa0:	4668      	mov	r0, sp
 8016aa2:	f7f9 f8e3 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 8016aa6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016aaa:	b12b      	cbz	r3, 8016ab8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016aac:	4669      	mov	r1, sp
 8016aae:	4620      	mov	r0, r4
 8016ab0:	f7ff ffbf 	bl	8016a32 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016ab4:	b005      	add	sp, #20
 8016ab6:	bd30      	pop	{r4, r5, pc}
 8016ab8:	3404      	adds	r4, #4
 8016aba:	4621      	mov	r1, r4
 8016abc:	a802      	add	r0, sp, #8
 8016abe:	f7ff fb6b 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ac2:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ac6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016aca:	1a9b      	subs	r3, r3, r2
 8016acc:	f8ad 3000 	strh.w	r3, [sp]
 8016ad0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016ad4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016ad8:	4669      	mov	r1, sp
 8016ada:	1a9b      	subs	r3, r3, r2
 8016adc:	4620      	mov	r0, r4
 8016ade:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016ae2:	f7f9 f962 	bl	800fdaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016ae6:	e7e5      	b.n	8016ab4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016ae8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016ae8:	680a      	ldr	r2, [r1, #0]
 8016aea:	460b      	mov	r3, r1
 8016aec:	6992      	ldr	r2, [r2, #24]
 8016aee:	1d01      	adds	r1, r0, #4
 8016af0:	4618      	mov	r0, r3
 8016af2:	4710      	bx	r2

08016af4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016af4:	4298      	cmp	r0, r3
 8016af6:	d200      	bcs.n	8016afa <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016af8:	b913      	cbnz	r3, 8016b00 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016afa:	440a      	add	r2, r1
 8016afc:	b210      	sxth	r0, r2
 8016afe:	4770      	bx	lr
 8016b00:	ee07 0a90 	vmov	s15, r0
 8016b04:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016b08:	ee07 3a90 	vmov	s15, r3
 8016b0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b10:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016b14:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016b18:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016b1c:	ee07 2a90 	vmov	s15, r2
 8016b20:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016b24:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016b28:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016b2c:	ee07 1a90 	vmov	s15, r1
 8016b30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b34:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016b38:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016b3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b44:	bfcc      	ite	gt
 8016b46:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016b4a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016b4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016b52:	ee17 3a90 	vmov	r3, s15
 8016b56:	b218      	sxth	r0, r3
 8016b58:	4770      	bx	lr

08016b5a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016b5a:	4298      	cmp	r0, r3
 8016b5c:	d200      	bcs.n	8016b60 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016b5e:	b913      	cbnz	r3, 8016b66 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016b60:	440a      	add	r2, r1
 8016b62:	b210      	sxth	r0, r2
 8016b64:	4770      	bx	lr
 8016b66:	ee07 2a90 	vmov	s15, r2
 8016b6a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016b6e:	ee07 0a90 	vmov	s15, r0
 8016b72:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016b76:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016b7a:	ee07 3a10 	vmov	s14, r3
 8016b7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016b82:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016b86:	ee07 1a90 	vmov	s15, r1
 8016b8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b8e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016b92:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016b96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b9e:	bfcc      	ite	gt
 8016ba0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016ba4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016ba8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016bac:	ee17 3a90 	vmov	r3, s15
 8016bb0:	b218      	sxth	r0, r3
 8016bb2:	4770      	bx	lr

08016bb4 <_ZN8touchgfx12TextProviderC1Ev>:
 8016bb4:	b538      	push	{r3, r4, r5, lr}
 8016bb6:	2500      	movs	r5, #0
 8016bb8:	2302      	movs	r3, #2
 8016bba:	4604      	mov	r4, r0
 8016bbc:	e9c0 5500 	strd	r5, r5, [r0]
 8016bc0:	7403      	strb	r3, [r0, #16]
 8016bc2:	6145      	str	r5, [r0, #20]
 8016bc4:	7605      	strb	r5, [r0, #24]
 8016bc6:	83c5      	strh	r5, [r0, #30]
 8016bc8:	8405      	strh	r5, [r0, #32]
 8016bca:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016bcc:	8705      	strh	r5, [r0, #56]	; 0x38
 8016bce:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016bd0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016bd4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016bd8:	220e      	movs	r2, #14
 8016bda:	4629      	mov	r1, r5
 8016bdc:	304c      	adds	r0, #76	; 0x4c
 8016bde:	f011 feac 	bl	802893a <memset>
 8016be2:	2301      	movs	r3, #1
 8016be4:	4620      	mov	r0, r4
 8016be6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016bea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016bee:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016bf2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016bf6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016bfa:	f7f1 f903 	bl	8007e04 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016bfe:	4620      	mov	r0, r4
 8016c00:	bd38      	pop	{r3, r4, r5, pc}

08016c02 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016c02:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016c04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c08:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016c0a:	fab0 f080 	clz	r0, r0
 8016c0e:	0940      	lsrs	r0, r0, #5
 8016c10:	4770      	bx	lr

08016c12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016c12:	b530      	push	{r4, r5, lr}
 8016c14:	2500      	movs	r5, #0
 8016c16:	2401      	movs	r4, #1
 8016c18:	6843      	ldr	r3, [r0, #4]
 8016c1a:	b913      	cbnz	r3, 8016c22 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016c1c:	6803      	ldr	r3, [r0, #0]
 8016c1e:	b313      	cbz	r3, 8016c66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c20:	6043      	str	r3, [r0, #4]
 8016c22:	7e03      	ldrb	r3, [r0, #24]
 8016c24:	b143      	cbz	r3, 8016c38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016c26:	6943      	ldr	r3, [r0, #20]
 8016c28:	b12b      	cbz	r3, 8016c36 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c2a:	881a      	ldrh	r2, [r3, #0]
 8016c2c:	b11a      	cbz	r2, 8016c36 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c2e:	1c9a      	adds	r2, r3, #2
 8016c30:	6142      	str	r2, [r0, #20]
 8016c32:	8818      	ldrh	r0, [r3, #0]
 8016c34:	bd30      	pop	{r4, r5, pc}
 8016c36:	7605      	strb	r5, [r0, #24]
 8016c38:	6843      	ldr	r3, [r0, #4]
 8016c3a:	8819      	ldrh	r1, [r3, #0]
 8016c3c:	b199      	cbz	r1, 8016c66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c3e:	1c9a      	adds	r2, r3, #2
 8016c40:	2902      	cmp	r1, #2
 8016c42:	6042      	str	r2, [r0, #4]
 8016c44:	d1f5      	bne.n	8016c32 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016c46:	7c03      	ldrb	r3, [r0, #16]
 8016c48:	2b01      	cmp	r3, #1
 8016c4a:	d8e5      	bhi.n	8016c18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c4c:	1c5a      	adds	r2, r3, #1
 8016c4e:	3302      	adds	r3, #2
 8016c50:	7402      	strb	r2, [r0, #16]
 8016c52:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016c56:	6143      	str	r3, [r0, #20]
 8016c58:	2b00      	cmp	r3, #0
 8016c5a:	d0dd      	beq.n	8016c18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c5c:	881b      	ldrh	r3, [r3, #0]
 8016c5e:	2b00      	cmp	r3, #0
 8016c60:	d0da      	beq.n	8016c18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c62:	7604      	strb	r4, [r0, #24]
 8016c64:	e7d8      	b.n	8016c18 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c66:	2000      	movs	r0, #0
 8016c68:	e7e4      	b.n	8016c34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016c6a:	b430      	push	{r4, r5}
 8016c6c:	6001      	str	r1, [r0, #0]
 8016c6e:	2100      	movs	r1, #0
 8016c70:	6041      	str	r1, [r0, #4]
 8016c72:	6815      	ldr	r5, [r2, #0]
 8016c74:	6085      	str	r5, [r0, #8]
 8016c76:	6852      	ldr	r2, [r2, #4]
 8016c78:	6443      	str	r3, [r0, #68]	; 0x44
 8016c7a:	9b02      	ldr	r3, [sp, #8]
 8016c7c:	60c2      	str	r2, [r0, #12]
 8016c7e:	7401      	strb	r1, [r0, #16]
 8016c80:	6141      	str	r1, [r0, #20]
 8016c82:	7601      	strb	r1, [r0, #24]
 8016c84:	8701      	strh	r1, [r0, #56]	; 0x38
 8016c86:	8401      	strh	r1, [r0, #32]
 8016c88:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016c8c:	6483      	str	r3, [r0, #72]	; 0x48
 8016c8e:	bc30      	pop	{r4, r5}
 8016c90:	f7f1 b8b8 	b.w	8007e04 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016c94 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016c94:	b408      	push	{r3}
 8016c96:	b510      	push	{r4, lr}
 8016c98:	b085      	sub	sp, #20
 8016c9a:	ac07      	add	r4, sp, #28
 8016c9c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016ca0:	9300      	str	r3, [sp, #0]
 8016ca2:	4613      	mov	r3, r2
 8016ca4:	4622      	mov	r2, r4
 8016ca6:	9403      	str	r4, [sp, #12]
 8016ca8:	f7ff ffdf 	bl	8016c6a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cac:	b005      	add	sp, #20
 8016cae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016cb2:	b001      	add	sp, #4
 8016cb4:	4770      	bx	lr

08016cb6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016cb6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cb8:	4605      	mov	r5, r0
 8016cba:	4608      	mov	r0, r1
 8016cbc:	b1e9      	cbz	r1, 8016cfa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016cbe:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016cc2:	460b      	mov	r3, r1
 8016cc4:	f101 0708 	add.w	r7, r1, #8
 8016cc8:	4622      	mov	r2, r4
 8016cca:	6818      	ldr	r0, [r3, #0]
 8016ccc:	6859      	ldr	r1, [r3, #4]
 8016cce:	4626      	mov	r6, r4
 8016cd0:	c603      	stmia	r6!, {r0, r1}
 8016cd2:	3308      	adds	r3, #8
 8016cd4:	42bb      	cmp	r3, r7
 8016cd6:	4634      	mov	r4, r6
 8016cd8:	d1f7      	bne.n	8016cca <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016cda:	6818      	ldr	r0, [r3, #0]
 8016cdc:	6030      	str	r0, [r6, #0]
 8016cde:	889b      	ldrh	r3, [r3, #4]
 8016ce0:	80b3      	strh	r3, [r6, #4]
 8016ce2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016ce6:	015b      	lsls	r3, r3, #5
 8016ce8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016cec:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016cf0:	430b      	orrs	r3, r1
 8016cf2:	425b      	negs	r3, r3
 8016cf4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016cf8:	4610      	mov	r0, r2
 8016cfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016cfc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016cfc:	b538      	push	{r3, r4, r5, lr}
 8016cfe:	460c      	mov	r4, r1
 8016d00:	6811      	ldr	r1, [r2, #0]
 8016d02:	4610      	mov	r0, r2
 8016d04:	68cd      	ldr	r5, [r1, #12]
 8016d06:	4619      	mov	r1, r3
 8016d08:	47a8      	blx	r5
 8016d0a:	2800      	cmp	r0, #0
 8016d0c:	bf08      	it	eq
 8016d0e:	4620      	moveq	r0, r4
 8016d10:	bd38      	pop	{r3, r4, r5, pc}
	...

08016d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d16:	4604      	mov	r4, r0
 8016d18:	4615      	mov	r5, r2
 8016d1a:	4608      	mov	r0, r1
 8016d1c:	b93a      	cbnz	r2, 8016d2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016d1e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016d22:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016d26:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016d2a:	4628      	mov	r0, r5
 8016d2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d2e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016d32:	8893      	ldrh	r3, [r2, #4]
 8016d34:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016d38:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016d3c:	79ee      	ldrb	r6, [r5, #7]
 8016d3e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016d42:	4316      	orrs	r6, r2
 8016d44:	19da      	adds	r2, r3, r7
 8016d46:	b291      	uxth	r1, r2
 8016d48:	291d      	cmp	r1, #29
 8016d4a:	b2b7      	uxth	r7, r6
 8016d4c:	d87a      	bhi.n	8016e44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d4e:	2201      	movs	r2, #1
 8016d50:	408a      	lsls	r2, r1
 8016d52:	4975      	ldr	r1, [pc, #468]	; (8016f28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016d54:	420a      	tst	r2, r1
 8016d56:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016d5a:	d12d      	bne.n	8016db8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016d5c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016d60:	d070      	beq.n	8016e44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d62:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016d66:	462b      	mov	r3, r5
 8016d68:	f105 0e08 	add.w	lr, r5, #8
 8016d6c:	4615      	mov	r5, r2
 8016d6e:	6818      	ldr	r0, [r3, #0]
 8016d70:	6859      	ldr	r1, [r3, #4]
 8016d72:	4694      	mov	ip, r2
 8016d74:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016d78:	3308      	adds	r3, #8
 8016d7a:	4573      	cmp	r3, lr
 8016d7c:	4662      	mov	r2, ip
 8016d7e:	d1f6      	bne.n	8016d6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016d80:	6818      	ldr	r0, [r3, #0]
 8016d82:	f8cc 0000 	str.w	r0, [ip]
 8016d86:	889b      	ldrh	r3, [r3, #4]
 8016d88:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016d8c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016d90:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016d94:	b2b3      	uxth	r3, r6
 8016d96:	1aca      	subs	r2, r1, r3
 8016d98:	b292      	uxth	r2, r2
 8016d9a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016d9e:	10d2      	asrs	r2, r2, #3
 8016da0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016da4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016da8:	4302      	orrs	r2, r0
 8016daa:	1bcf      	subs	r7, r1, r7
 8016dac:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016db0:	1afb      	subs	r3, r7, r3
 8016db2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016db6:	e7b8      	b.n	8016d2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016db8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016dba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016dbe:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016dc0:	f640 6333 	movw	r3, #3635	; 0xe33
 8016dc4:	4299      	cmp	r1, r3
 8016dc6:	d110      	bne.n	8016dea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016dc8:	6803      	ldr	r3, [r0, #0]
 8016dca:	68db      	ldr	r3, [r3, #12]
 8016dcc:	4798      	blx	r3
 8016dce:	7b41      	ldrb	r1, [r0, #13]
 8016dd0:	00cb      	lsls	r3, r1, #3
 8016dd2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dd6:	7a03      	ldrb	r3, [r0, #8]
 8016dd8:	0648      	lsls	r0, r1, #25
 8016dda:	ea43 0302 	orr.w	r3, r3, r2
 8016dde:	bf44      	itt	mi
 8016de0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016de4:	b21b      	sxthmi	r3, r3
 8016de6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016dea:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016dee:	443b      	add	r3, r7
 8016df0:	4433      	add	r3, r6
 8016df2:	b29b      	uxth	r3, r3
 8016df4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016df8:	462a      	mov	r2, r5
 8016dfa:	f105 0c08 	add.w	ip, r5, #8
 8016dfe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e02:	4635      	mov	r5, r6
 8016e04:	6810      	ldr	r0, [r2, #0]
 8016e06:	6851      	ldr	r1, [r2, #4]
 8016e08:	4637      	mov	r7, r6
 8016e0a:	c703      	stmia	r7!, {r0, r1}
 8016e0c:	3208      	adds	r2, #8
 8016e0e:	4562      	cmp	r2, ip
 8016e10:	463e      	mov	r6, r7
 8016e12:	d1f7      	bne.n	8016e04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016e14:	6810      	ldr	r0, [r2, #0]
 8016e16:	6038      	str	r0, [r7, #0]
 8016e18:	8892      	ldrh	r2, [r2, #4]
 8016e1a:	80ba      	strh	r2, [r7, #4]
 8016e1c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016e20:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016e24:	10db      	asrs	r3, r3, #3
 8016e26:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016e2a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016e2e:	4313      	orrs	r3, r2
 8016e30:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016e34:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016e38:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016e3c:	1a9b      	subs	r3, r3, r2
 8016e3e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016e42:	e772      	b.n	8016d2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e44:	f023 0204 	bic.w	r2, r3, #4
 8016e48:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016e4c:	428a      	cmp	r2, r1
 8016e4e:	d003      	beq.n	8016e58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016e50:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016e54:	4293      	cmp	r3, r2
 8016e56:	d120      	bne.n	8016e9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016e58:	3b01      	subs	r3, #1
 8016e5a:	4602      	mov	r2, r0
 8016e5c:	b29b      	uxth	r3, r3
 8016e5e:	4629      	mov	r1, r5
 8016e60:	4620      	mov	r0, r4
 8016e62:	f7ff ff4b 	bl	8016cfc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016e66:	7b41      	ldrb	r1, [r0, #13]
 8016e68:	00cb      	lsls	r3, r1, #3
 8016e6a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e6e:	7a03      	ldrb	r3, [r0, #8]
 8016e70:	0649      	lsls	r1, r1, #25
 8016e72:	ea43 0302 	orr.w	r3, r3, r2
 8016e76:	bf44      	itt	mi
 8016e78:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e7c:	b21b      	sxthmi	r3, r3
 8016e7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e82:	7b6b      	ldrb	r3, [r5, #13]
 8016e84:	7aaa      	ldrb	r2, [r5, #10]
 8016e86:	005b      	lsls	r3, r3, #1
 8016e88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e8c:	4313      	orrs	r3, r2
 8016e8e:	115a      	asrs	r2, r3, #5
 8016e90:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016e94:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016e98:	e036      	b.n	8016f08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016e9a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016e9e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016ea2:	7a2a      	ldrb	r2, [r5, #8]
 8016ea4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016ea8:	ea42 0201 	orr.w	r2, r2, r1
 8016eac:	bf1c      	itt	ne
 8016eae:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016eb2:	b212      	sxthne	r2, r2
 8016eb4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016eb8:	f640 6109 	movw	r1, #3593	; 0xe09
 8016ebc:	f023 0210 	bic.w	r2, r3, #16
 8016ec0:	428a      	cmp	r2, r1
 8016ec2:	d003      	beq.n	8016ecc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016ec4:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ec8:	4293      	cmp	r3, r2
 8016eca:	d12a      	bne.n	8016f22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016ecc:	7b6e      	ldrb	r6, [r5, #13]
 8016ece:	0076      	lsls	r6, r6, #1
 8016ed0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016ed4:	7aae      	ldrb	r6, [r5, #10]
 8016ed6:	4316      	orrs	r6, r2
 8016ed8:	f640 6213 	movw	r2, #3603	; 0xe13
 8016edc:	4293      	cmp	r3, r2
 8016ede:	bf18      	it	ne
 8016ee0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016ee4:	4602      	mov	r2, r0
 8016ee6:	bf14      	ite	ne
 8016ee8:	b29b      	uxthne	r3, r3
 8016eea:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016eee:	4629      	mov	r1, r5
 8016ef0:	4620      	mov	r0, r4
 8016ef2:	f7ff ff03 	bl	8016cfc <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016ef6:	7b43      	ldrb	r3, [r0, #13]
 8016ef8:	7a82      	ldrb	r2, [r0, #10]
 8016efa:	005b      	lsls	r3, r3, #1
 8016efc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f00:	4313      	orrs	r3, r2
 8016f02:	1af6      	subs	r6, r6, r3
 8016f04:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016f08:	7b69      	ldrb	r1, [r5, #13]
 8016f0a:	00cb      	lsls	r3, r1, #3
 8016f0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f10:	7a2b      	ldrb	r3, [r5, #8]
 8016f12:	4313      	orrs	r3, r2
 8016f14:	064a      	lsls	r2, r1, #25
 8016f16:	bf44      	itt	mi
 8016f18:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f1c:	b21b      	sxthmi	r3, r3
 8016f1e:	1bdb      	subs	r3, r3, r7
 8016f20:	e747      	b.n	8016db2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016f22:	2300      	movs	r3, #0
 8016f24:	e7b6      	b.n	8016e94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016f26:	bf00      	nop
 8016f28:	3fc00079 	.word	0x3fc00079

08016f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016f2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016f30:	4604      	mov	r4, r0
 8016f32:	b942      	cbnz	r2, 8016f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016f34:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016f38:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016f3c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016f40:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f44:	e047      	b.n	8016fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016f46:	7b51      	ldrb	r1, [r2, #13]
 8016f48:	8893      	ldrh	r3, [r2, #4]
 8016f4a:	010d      	lsls	r5, r1, #4
 8016f4c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016f50:	79d5      	ldrb	r5, [r2, #7]
 8016f52:	4305      	orrs	r5, r0
 8016f54:	2d04      	cmp	r5, #4
 8016f56:	bfcc      	ite	gt
 8016f58:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016f5c:	f04f 0e01 	movle.w	lr, #1
 8016f60:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016f64:	f200 80ab 	bhi.w	80170be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016f68:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016f6c:	4283      	cmp	r3, r0
 8016f6e:	d216      	bcs.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f70:	f240 605b 	movw	r0, #1627	; 0x65b
 8016f74:	4283      	cmp	r3, r0
 8016f76:	d859      	bhi.n	801702c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016f78:	f240 6057 	movw	r0, #1623	; 0x657
 8016f7c:	4283      	cmp	r3, r0
 8016f7e:	d20e      	bcs.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f80:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016f84:	d24a      	bcs.n	801701c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016f86:	f240 604e 	movw	r0, #1614	; 0x64e
 8016f8a:	4283      	cmp	r3, r0
 8016f8c:	d207      	bcs.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f8e:	f240 601a 	movw	r0, #1562	; 0x61a
 8016f92:	4283      	cmp	r3, r0
 8016f94:	d02a      	beq.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016f96:	d821      	bhi.n	8016fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016f98:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016f9c:	d35b      	bcc.n	8017056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016f9e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016fa2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016fa6:	f040 80d0 	bne.w	801714a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016faa:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016fae:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016fb2:	f040 80ca 	bne.w	801714a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016fb6:	00cb      	lsls	r3, r1, #3
 8016fb8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016fbc:	7a13      	ldrb	r3, [r2, #8]
 8016fbe:	0649      	lsls	r1, r1, #25
 8016fc0:	ea43 0300 	orr.w	r3, r3, r0
 8016fc4:	bf44      	itt	mi
 8016fc6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fca:	b21b      	sxthmi	r3, r3
 8016fcc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016fd0:	1b5d      	subs	r5, r3, r5
 8016fd2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fd6:	4610      	mov	r0, r2
 8016fd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016fdc:	f240 604b 	movw	r0, #1611	; 0x64b
 8016fe0:	4283      	cmp	r3, r0
 8016fe2:	d338      	bcc.n	8017056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016fe4:	f240 604c 	movw	r0, #1612	; 0x64c
 8016fe8:	4283      	cmp	r3, r0
 8016fea:	d9d8      	bls.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016fec:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016ff0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016ff4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016ff8:	f040 80f2 	bne.w	80171e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016ffc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017000:	f040 80ee 	bne.w	80171e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017004:	00cb      	lsls	r3, r1, #3
 8017006:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801700a:	7a13      	ldrb	r3, [r2, #8]
 801700c:	064e      	lsls	r6, r1, #25
 801700e:	ea43 0300 	orr.w	r3, r3, r0
 8017012:	bf44      	itt	mi
 8017014:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017018:	b21b      	sxthmi	r3, r3
 801701a:	e7d9      	b.n	8016fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801701c:	f240 6054 	movw	r0, #1620	; 0x654
 8017020:	4283      	cmp	r3, r0
 8017022:	d8e3      	bhi.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017024:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017028:	d9e0      	bls.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801702a:	e7b8      	b.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801702c:	f240 6074 	movw	r0, #1652	; 0x674
 8017030:	4283      	cmp	r3, r0
 8017032:	d0b4      	beq.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017034:	d82d      	bhi.n	8017092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017036:	f240 605e 	movw	r0, #1630	; 0x65e
 801703a:	4283      	cmp	r3, r0
 801703c:	d804      	bhi.n	8017048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801703e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017042:	4283      	cmp	r3, r0
 8017044:	d3d2      	bcc.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017046:	e7aa      	b.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017048:	f240 605f 	movw	r0, #1631	; 0x65f
 801704c:	4283      	cmp	r3, r0
 801704e:	d0cd      	beq.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017050:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017054:	d0a3      	beq.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017056:	00cb      	lsls	r3, r1, #3
 8017058:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801705c:	7a13      	ldrb	r3, [r2, #8]
 801705e:	0649      	lsls	r1, r1, #25
 8017060:	ea43 0300 	orr.w	r3, r3, r0
 8017064:	bf44      	itt	mi
 8017066:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801706a:	b21b      	sxthmi	r3, r3
 801706c:	1b5d      	subs	r5, r3, r5
 801706e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017072:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017076:	7b53      	ldrb	r3, [r2, #13]
 8017078:	015b      	lsls	r3, r3, #5
 801707a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801707e:	7993      	ldrb	r3, [r2, #6]
 8017080:	430b      	orrs	r3, r1
 8017082:	005b      	lsls	r3, r3, #1
 8017084:	2105      	movs	r1, #5
 8017086:	fb93 f3f1 	sdiv	r3, r3, r1
 801708a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801708e:	440b      	add	r3, r1
 8017090:	e756      	b.n	8016f40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017092:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017096:	4283      	cmp	r3, r0
 8017098:	d809      	bhi.n	80170ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801709a:	f240 60df 	movw	r0, #1759	; 0x6df
 801709e:	4283      	cmp	r3, r0
 80170a0:	f4bf af7d 	bcs.w	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170a4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80170a8:	2b05      	cmp	r3, #5
 80170aa:	d8d4      	bhi.n	8017056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170ac:	e777      	b.n	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170ae:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80170b2:	4283      	cmp	r3, r0
 80170b4:	d09a      	beq.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170b6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80170ba:	4283      	cmp	r3, r0
 80170bc:	e7ca      	b.n	8017054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80170be:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80170c2:	d22b      	bcs.n	801711c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80170c4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80170c8:	4283      	cmp	r3, r0
 80170ca:	d28f      	bcs.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170cc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80170d0:	4283      	cmp	r3, r0
 80170d2:	d816      	bhi.n	8017102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80170d4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80170d8:	4283      	cmp	r3, r0
 80170da:	f4bf af60 	bcs.w	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170de:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80170e2:	4283      	cmp	r3, r0
 80170e4:	d80a      	bhi.n	80170fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80170e6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80170ea:	4283      	cmp	r3, r0
 80170ec:	f4bf af57 	bcs.w	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170f0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80170f4:	4283      	cmp	r3, r0
 80170f6:	f43f af79 	beq.w	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170fa:	e7ac      	b.n	8017056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170fc:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017100:	e7f8      	b.n	80170f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017102:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017106:	4283      	cmp	r3, r0
 8017108:	d802      	bhi.n	8017110 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801710a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801710e:	e798      	b.n	8017042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017110:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017114:	4283      	cmp	r3, r0
 8017116:	f47f af42 	bne.w	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801711a:	e767      	b.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801711c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017120:	4283      	cmp	r3, r0
 8017122:	f43f af63 	beq.w	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017126:	d802      	bhi.n	801712e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017128:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801712c:	e7f2      	b.n	8017114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801712e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017132:	4283      	cmp	r3, r0
 8017134:	d805      	bhi.n	8017142 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017136:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801713a:	4283      	cmp	r3, r0
 801713c:	f4ff af2f 	bcc.w	8016f9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017140:	e754      	b.n	8016fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017142:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017146:	4283      	cmp	r3, r0
 8017148:	e7af      	b.n	80170aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801714a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801714e:	4617      	mov	r7, r2
 8017150:	f102 0808 	add.w	r8, r2, #8
 8017154:	4666      	mov	r6, ip
 8017156:	6838      	ldr	r0, [r7, #0]
 8017158:	6879      	ldr	r1, [r7, #4]
 801715a:	46e6      	mov	lr, ip
 801715c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017160:	3708      	adds	r7, #8
 8017162:	4547      	cmp	r7, r8
 8017164:	46f4      	mov	ip, lr
 8017166:	d1f6      	bne.n	8017156 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017168:	6838      	ldr	r0, [r7, #0]
 801716a:	f8ce 0000 	str.w	r0, [lr]
 801716e:	88b9      	ldrh	r1, [r7, #4]
 8017170:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017174:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017178:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801717c:	d009      	beq.n	8017192 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801717e:	7b51      	ldrb	r1, [r2, #13]
 8017180:	7992      	ldrb	r2, [r2, #6]
 8017182:	0149      	lsls	r1, r1, #5
 8017184:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017188:	4311      	orrs	r1, r2
 801718a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801718e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017192:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017196:	b2ad      	uxth	r5, r5
 8017198:	d00d      	beq.n	80171b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801719a:	442b      	add	r3, r5
 801719c:	b29b      	uxth	r3, r3
 801719e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80171a2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80171a6:	10db      	asrs	r3, r3, #3
 80171a8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80171ac:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80171b0:	4313      	orrs	r3, r2
 80171b2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80171b6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80171ba:	00cb      	lsls	r3, r1, #3
 80171bc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171c0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80171c4:	064f      	lsls	r7, r1, #25
 80171c6:	ea43 0302 	orr.w	r3, r3, r2
 80171ca:	bf44      	itt	mi
 80171cc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171d0:	b21b      	sxthmi	r3, r3
 80171d2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80171d6:	1b5b      	subs	r3, r3, r5
 80171d8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80171dc:	4632      	mov	r2, r6
 80171de:	e6fa      	b.n	8016fd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80171e0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80171e4:	4617      	mov	r7, r2
 80171e6:	f102 0908 	add.w	r9, r2, #8
 80171ea:	4666      	mov	r6, ip
 80171ec:	6838      	ldr	r0, [r7, #0]
 80171ee:	6879      	ldr	r1, [r7, #4]
 80171f0:	46e0      	mov	r8, ip
 80171f2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80171f6:	3708      	adds	r7, #8
 80171f8:	454f      	cmp	r7, r9
 80171fa:	46c4      	mov	ip, r8
 80171fc:	d1f6      	bne.n	80171ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80171fe:	6838      	ldr	r0, [r7, #0]
 8017200:	f8c8 0000 	str.w	r0, [r8]
 8017204:	88b9      	ldrh	r1, [r7, #4]
 8017206:	f8a8 1004 	strh.w	r1, [r8, #4]
 801720a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801720e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017212:	d009      	beq.n	8017228 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017214:	7b51      	ldrb	r1, [r2, #13]
 8017216:	7992      	ldrb	r2, [r2, #6]
 8017218:	0149      	lsls	r1, r1, #5
 801721a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801721e:	4311      	orrs	r1, r2
 8017220:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017224:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017228:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801722c:	d00e      	beq.n	801724c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801722e:	eba3 030e 	sub.w	r3, r3, lr
 8017232:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017236:	b29b      	uxth	r3, r3
 8017238:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801723c:	10db      	asrs	r3, r3, #3
 801723e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017242:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017246:	4313      	orrs	r3, r2
 8017248:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801724c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017250:	00cb      	lsls	r3, r1, #3
 8017252:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017256:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801725a:	0648      	lsls	r0, r1, #25
 801725c:	ea43 0302 	orr.w	r3, r3, r2
 8017260:	bf44      	itt	mi
 8017262:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017266:	b21b      	sxthmi	r3, r3
 8017268:	1b5d      	subs	r5, r3, r5
 801726a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801726e:	e7b5      	b.n	80171dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017274:	461e      	mov	r6, r3
 8017276:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017278:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801727c:	4604      	mov	r4, r0
 801727e:	4617      	mov	r7, r2
 8017280:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017284:	f7f0 fd7c 	bl	8007d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017288:	4605      	mov	r5, r0
 801728a:	b918      	cbnz	r0, 8017294 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801728c:	6030      	str	r0, [r6, #0]
 801728e:	4628      	mov	r0, r5
 8017290:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017294:	683b      	ldr	r3, [r7, #0]
 8017296:	4601      	mov	r1, r0
 8017298:	68db      	ldr	r3, [r3, #12]
 801729a:	4638      	mov	r0, r7
 801729c:	4798      	blx	r3
 801729e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80172a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80172a6:	4602      	mov	r2, r0
 80172a8:	6030      	str	r0, [r6, #0]
 80172aa:	d213      	bcs.n	80172d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80172ac:	4643      	mov	r3, r8
 80172ae:	4639      	mov	r1, r7
 80172b0:	4620      	mov	r0, r4
 80172b2:	f7ff fe3b 	bl	8016f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80172b6:	6030      	str	r0, [r6, #0]
 80172b8:	6833      	ldr	r3, [r6, #0]
 80172ba:	b143      	cbz	r3, 80172ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80172bc:	7b5a      	ldrb	r2, [r3, #13]
 80172be:	7a9b      	ldrb	r3, [r3, #10]
 80172c0:	0052      	lsls	r2, r2, #1
 80172c2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80172c6:	4313      	orrs	r3, r2
 80172c8:	bf0c      	ite	eq
 80172ca:	2301      	moveq	r3, #1
 80172cc:	2300      	movne	r3, #0
 80172ce:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80172d2:	e7dc      	b.n	801728e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80172d4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80172d8:	b29b      	uxth	r3, r3
 80172da:	2b7f      	cmp	r3, #127	; 0x7f
 80172dc:	d804      	bhi.n	80172e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80172de:	4639      	mov	r1, r7
 80172e0:	4620      	mov	r0, r4
 80172e2:	f7ff fd17 	bl	8016d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80172e6:	e7e6      	b.n	80172b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80172e8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80172ec:	2b00      	cmp	r3, #0
 80172ee:	d0e3      	beq.n	80172b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80172f0:	f640 1302 	movw	r3, #2306	; 0x902
 80172f4:	429d      	cmp	r5, r3
 80172f6:	d1df      	bne.n	80172b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80172f8:	4601      	mov	r1, r0
 80172fa:	4620      	mov	r0, r4
 80172fc:	f7ff fcdb 	bl	8016cb6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017300:	e7d9      	b.n	80172b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017302 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017302:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017306:	461e      	mov	r6, r3
 8017308:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801730a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801730e:	4604      	mov	r4, r0
 8017310:	4617      	mov	r7, r2
 8017312:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017316:	f7f0 fd33 	bl	8007d80 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801731a:	4605      	mov	r5, r0
 801731c:	b918      	cbnz	r0, 8017326 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801731e:	6030      	str	r0, [r6, #0]
 8017320:	4628      	mov	r0, r5
 8017322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017326:	683b      	ldr	r3, [r7, #0]
 8017328:	4601      	mov	r1, r0
 801732a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801732e:	4638      	mov	r0, r7
 8017330:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017334:	47c8      	blx	r9
 8017336:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801733a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801733e:	4602      	mov	r2, r0
 8017340:	6030      	str	r0, [r6, #0]
 8017342:	d213      	bcs.n	801736c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017344:	4643      	mov	r3, r8
 8017346:	4639      	mov	r1, r7
 8017348:	4620      	mov	r0, r4
 801734a:	f7ff fdef 	bl	8016f2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801734e:	6030      	str	r0, [r6, #0]
 8017350:	6833      	ldr	r3, [r6, #0]
 8017352:	b143      	cbz	r3, 8017366 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017354:	7b5a      	ldrb	r2, [r3, #13]
 8017356:	7a9b      	ldrb	r3, [r3, #10]
 8017358:	0052      	lsls	r2, r2, #1
 801735a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801735e:	4313      	orrs	r3, r2
 8017360:	bf0c      	ite	eq
 8017362:	2301      	moveq	r3, #1
 8017364:	2300      	movne	r3, #0
 8017366:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801736a:	e7d9      	b.n	8017320 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801736c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017370:	b29b      	uxth	r3, r3
 8017372:	2b7f      	cmp	r3, #127	; 0x7f
 8017374:	d804      	bhi.n	8017380 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017376:	4639      	mov	r1, r7
 8017378:	4620      	mov	r0, r4
 801737a:	f7ff fccb 	bl	8016d14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801737e:	e7e6      	b.n	801734e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017380:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017384:	2b00      	cmp	r3, #0
 8017386:	d0e3      	beq.n	8017350 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017388:	f640 1302 	movw	r3, #2306	; 0x902
 801738c:	429d      	cmp	r5, r3
 801738e:	d1df      	bne.n	8017350 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017390:	4601      	mov	r1, r0
 8017392:	4620      	mov	r0, r4
 8017394:	f7ff fc8f 	bl	8016cb6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017398:	e7d9      	b.n	801734e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801739a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801739a:	b510      	push	{r4, lr}
 801739c:	4604      	mov	r4, r0
 801739e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80173a2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173a4:	b1f1      	cbz	r1, 80173e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80173a6:	2b0a      	cmp	r3, #10
 80173a8:	d02f      	beq.n	801740a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80173aa:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80173ac:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80173b0:	3901      	subs	r1, #1
 80173b2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80173b4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80173b8:	1c51      	adds	r1, r2, #1
 80173ba:	b289      	uxth	r1, r1
 80173bc:	2901      	cmp	r1, #1
 80173be:	bf84      	itt	hi
 80173c0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80173c4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80173c6:	f103 0201 	add.w	r2, r3, #1
 80173ca:	8722      	strh	r2, [r4, #56]	; 0x38
 80173cc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173ce:	bf98      	it	ls
 80173d0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80173d2:	4413      	add	r3, r2
 80173d4:	b29b      	uxth	r3, r3
 80173d6:	2b09      	cmp	r3, #9
 80173d8:	bf88      	it	hi
 80173da:	3b0a      	subhi	r3, #10
 80173dc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80173e0:	8458      	strh	r0, [r3, #34]	; 0x22
 80173e2:	e7dc      	b.n	801739e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80173e4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173e6:	2b0a      	cmp	r3, #10
 80173e8:	d00f      	beq.n	801740a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80173ea:	4620      	mov	r0, r4
 80173ec:	f7ff fc11 	bl	8016c12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80173f0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173f2:	1c5a      	adds	r2, r3, #1
 80173f4:	8722      	strh	r2, [r4, #56]	; 0x38
 80173f6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173f8:	4413      	add	r3, r2
 80173fa:	b29b      	uxth	r3, r3
 80173fc:	2b09      	cmp	r3, #9
 80173fe:	bf88      	it	hi
 8017400:	3b0a      	subhi	r3, #10
 8017402:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017406:	8458      	strh	r0, [r3, #34]	; 0x22
 8017408:	e7ec      	b.n	80173e4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801740a:	bd10      	pop	{r4, pc}

0801740c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801740c:	b538      	push	{r3, r4, r5, lr}
 801740e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017410:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017414:	4604      	mov	r4, r0
 8017416:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017418:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801741a:	3a01      	subs	r2, #1
 801741c:	8702      	strh	r2, [r0, #56]	; 0x38
 801741e:	1c5a      	adds	r2, r3, #1
 8017420:	b292      	uxth	r2, r2
 8017422:	2a09      	cmp	r2, #9
 8017424:	bf86      	itte	hi
 8017426:	3b09      	subhi	r3, #9
 8017428:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801742a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801742c:	f7ff ffb5 	bl	801739a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017430:	8c23      	ldrh	r3, [r4, #32]
 8017432:	2b01      	cmp	r3, #1
 8017434:	bf9c      	itt	ls
 8017436:	3301      	addls	r3, #1
 8017438:	8423      	strhls	r3, [r4, #32]
 801743a:	8be3      	ldrh	r3, [r4, #30]
 801743c:	b90b      	cbnz	r3, 8017442 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801743e:	2302      	movs	r3, #2
 8017440:	83e3      	strh	r3, [r4, #30]
 8017442:	8be3      	ldrh	r3, [r4, #30]
 8017444:	3b01      	subs	r3, #1
 8017446:	b29b      	uxth	r3, r3
 8017448:	83e3      	strh	r3, [r4, #30]
 801744a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801744e:	4628      	mov	r0, r5
 8017450:	8365      	strh	r5, [r4, #26]
 8017452:	bd38      	pop	{r3, r4, r5, pc}

08017454 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017454:	428a      	cmp	r2, r1
 8017456:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801745a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801745c:	d931      	bls.n	80174c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801745e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017460:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017464:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017468:	19ee      	adds	r6, r5, r7
 801746a:	1a54      	subs	r4, r2, r1
 801746c:	3e01      	subs	r6, #1
 801746e:	fa1f fe84 	uxth.w	lr, r4
 8017472:	b2b4      	uxth	r4, r6
 8017474:	eba4 090e 	sub.w	r9, r4, lr
 8017478:	fa1f f989 	uxth.w	r9, r9
 801747c:	2c09      	cmp	r4, #9
 801747e:	4626      	mov	r6, r4
 8017480:	bf88      	it	hi
 8017482:	f1a4 060a 	subhi.w	r6, r4, #10
 8017486:	f1bc 0f00 	cmp.w	ip, #0
 801748a:	bf08      	it	eq
 801748c:	f04f 0c02 	moveq.w	ip, #2
 8017490:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017494:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017498:	fa1f fc8c 	uxth.w	ip, ip
 801749c:	3c01      	subs	r4, #1
 801749e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80174a2:	b2a4      	uxth	r4, r4
 80174a4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80174a8:	454c      	cmp	r4, r9
 80174aa:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80174ae:	d1e5      	bne.n	801747c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80174b0:	eba5 050e 	sub.w	r5, r5, lr
 80174b4:	eb0e 0408 	add.w	r4, lr, r8
 80174b8:	8705      	strh	r5, [r0, #56]	; 0x38
 80174ba:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80174be:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80174c2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80174c4:	1a64      	subs	r4, r4, r1
 80174c6:	4439      	add	r1, r7
 80174c8:	b289      	uxth	r1, r1
 80174ca:	2909      	cmp	r1, #9
 80174cc:	bf88      	it	hi
 80174ce:	390a      	subhi	r1, #10
 80174d0:	8704      	strh	r4, [r0, #56]	; 0x38
 80174d2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80174d4:	250a      	movs	r5, #10
 80174d6:	b18a      	cbz	r2, 80174fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80174d8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80174da:	3a01      	subs	r2, #1
 80174dc:	b292      	uxth	r2, r2
 80174de:	3101      	adds	r1, #1
 80174e0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80174e4:	8701      	strh	r1, [r0, #56]	; 0x38
 80174e6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80174e8:	b901      	cbnz	r1, 80174ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80174ea:	86c5      	strh	r5, [r0, #54]	; 0x36
 80174ec:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80174ee:	3901      	subs	r1, #1
 80174f0:	b289      	uxth	r1, r1
 80174f2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80174f4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80174f8:	844c      	strh	r4, [r1, #34]	; 0x22
 80174fa:	e7ec      	b.n	80174d6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80174fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017500:	f7ff bf4b 	b.w	801739a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017504 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017504:	b570      	push	{r4, r5, r6, lr}
 8017506:	2500      	movs	r5, #0
 8017508:	4295      	cmp	r5, r2
 801750a:	d011      	beq.n	8017530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801750c:	8bc4      	ldrh	r4, [r0, #30]
 801750e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017512:	4414      	add	r4, r2
 8017514:	3c01      	subs	r4, #1
 8017516:	1b64      	subs	r4, r4, r5
 8017518:	b2a4      	uxth	r4, r4
 801751a:	2c01      	cmp	r4, #1
 801751c:	bf88      	it	hi
 801751e:	3c02      	subhi	r4, #2
 8017520:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017524:	8b64      	ldrh	r4, [r4, #26]
 8017526:	42b4      	cmp	r4, r6
 8017528:	d117      	bne.n	801755a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801752a:	3501      	adds	r5, #1
 801752c:	b2ad      	uxth	r5, r5
 801752e:	e7eb      	b.n	8017508 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017530:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017534:	2400      	movs	r4, #0
 8017536:	4413      	add	r3, r2
 8017538:	b2a2      	uxth	r2, r4
 801753a:	429a      	cmp	r2, r3
 801753c:	da0f      	bge.n	801755e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801753e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017540:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017544:	4432      	add	r2, r6
 8017546:	b292      	uxth	r2, r2
 8017548:	2a09      	cmp	r2, #9
 801754a:	bf88      	it	hi
 801754c:	3a0a      	subhi	r2, #10
 801754e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017552:	3401      	adds	r4, #1
 8017554:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017556:	42aa      	cmp	r2, r5
 8017558:	d0ee      	beq.n	8017538 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801755a:	2000      	movs	r0, #0
 801755c:	bd70      	pop	{r4, r5, r6, pc}
 801755e:	2001      	movs	r0, #1
 8017560:	e7fc      	b.n	801755c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017562 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017562:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017566:	4605      	mov	r5, r0
 8017568:	4616      	mov	r6, r2
 801756a:	1c8c      	adds	r4, r1, #2
 801756c:	8809      	ldrh	r1, [r1, #0]
 801756e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017572:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017576:	42b3      	cmp	r3, r6
 8017578:	d124      	bne.n	80175c4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801757a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801757e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017582:	f001 070f 	and.w	r7, r1, #15
 8017586:	f8cd 8000 	str.w	r8, [sp]
 801758a:	464b      	mov	r3, r9
 801758c:	4652      	mov	r2, sl
 801758e:	4621      	mov	r1, r4
 8017590:	4628      	mov	r0, r5
 8017592:	f7ff ffb7 	bl	8017504 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017596:	4683      	mov	fp, r0
 8017598:	b168      	cbz	r0, 80175b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801759a:	eb0a 0109 	add.w	r1, sl, r9
 801759e:	4441      	add	r1, r8
 80175a0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80175a4:	463a      	mov	r2, r7
 80175a6:	4649      	mov	r1, r9
 80175a8:	4628      	mov	r0, r5
 80175aa:	f7ff ff53 	bl	8017454 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80175ae:	4658      	mov	r0, fp
 80175b0:	b003      	add	sp, #12
 80175b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175b6:	eb07 010a 	add.w	r1, r7, sl
 80175ba:	4449      	add	r1, r9
 80175bc:	4441      	add	r1, r8
 80175be:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80175c2:	e7d2      	b.n	801756a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80175c4:	f04f 0b00 	mov.w	fp, #0
 80175c8:	e7f1      	b.n	80175ae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080175ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80175ca:	b570      	push	{r4, r5, r6, lr}
 80175cc:	8810      	ldrh	r0, [r2, #0]
 80175ce:	4298      	cmp	r0, r3
 80175d0:	d817      	bhi.n	8017602 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175d2:	1e48      	subs	r0, r1, #1
 80175d4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80175d8:	4298      	cmp	r0, r3
 80175da:	d312      	bcc.n	8017602 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175dc:	2400      	movs	r4, #0
 80175de:	428c      	cmp	r4, r1
 80175e0:	d20f      	bcs.n	8017602 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175e2:	1860      	adds	r0, r4, r1
 80175e4:	1040      	asrs	r0, r0, #1
 80175e6:	0085      	lsls	r5, r0, #2
 80175e8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80175ec:	42b3      	cmp	r3, r6
 80175ee:	d902      	bls.n	80175f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80175f0:	3001      	adds	r0, #1
 80175f2:	b284      	uxth	r4, r0
 80175f4:	e7f3      	b.n	80175de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80175f6:	d201      	bcs.n	80175fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80175f8:	b281      	uxth	r1, r0
 80175fa:	e7f0      	b.n	80175de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80175fc:	442a      	add	r2, r5
 80175fe:	8850      	ldrh	r0, [r2, #2]
 8017600:	bd70      	pop	{r4, r5, r6, pc}
 8017602:	2000      	movs	r0, #0
 8017604:	e7fc      	b.n	8017600 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017606 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017606:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801760a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801760c:	886f      	ldrh	r7, [r5, #2]
 801760e:	4604      	mov	r4, r0
 8017610:	087f      	lsrs	r7, r7, #1
 8017612:	260b      	movs	r6, #11
 8017614:	3e01      	subs	r6, #1
 8017616:	d013      	beq.n	8017640 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017618:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801761a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801761e:	462a      	mov	r2, r5
 8017620:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017624:	4639      	mov	r1, r7
 8017626:	4643      	mov	r3, r8
 8017628:	4620      	mov	r0, r4
 801762a:	f7ff ffce 	bl	80175ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801762e:	b138      	cbz	r0, 8017640 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017630:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017634:	4642      	mov	r2, r8
 8017636:	4620      	mov	r0, r4
 8017638:	f7ff ff93 	bl	8017562 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801763c:	2800      	cmp	r0, #0
 801763e:	d1e9      	bne.n	8017614 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017644 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017644:	b570      	push	{r4, r5, r6, lr}
 8017646:	694a      	ldr	r2, [r1, #20]
 8017648:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801764a:	684b      	ldr	r3, [r1, #4]
 801764c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801764e:	1b54      	subs	r4, r2, r5
 8017650:	f000 8106 	beq.w	8017860 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017654:	1b9b      	subs	r3, r3, r6
 8017656:	d003      	beq.n	8017660 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017658:	4363      	muls	r3, r4
 801765a:	2210      	movs	r2, #16
 801765c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017660:	680c      	ldr	r4, [r1, #0]
 8017662:	698a      	ldr	r2, [r1, #24]
 8017664:	1b65      	subs	r5, r4, r5
 8017666:	f000 80fd 	beq.w	8017864 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801766a:	1b92      	subs	r2, r2, r6
 801766c:	d003      	beq.n	8017676 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801766e:	436a      	muls	r2, r5
 8017670:	2410      	movs	r4, #16
 8017672:	fb92 f2f4 	sdiv	r2, r2, r4
 8017676:	1a9b      	subs	r3, r3, r2
 8017678:	ee07 3a90 	vmov	s15, r3
 801767c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80178a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017684:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017688:	ee67 7a84 	vmul.f32	s15, s15, s8
 801768c:	460a      	mov	r2, r1
 801768e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017692:	4603      	mov	r3, r0
 8017694:	f100 040c 	add.w	r4, r0, #12
 8017698:	eeb1 6a43 	vneg.f32	s12, s6
 801769c:	edd2 7a02 	vldr	s15, [r2, #8]
 80176a0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80176a4:	3214      	adds	r2, #20
 80176a6:	ece3 6a01 	vstmia	r3!, {s13}
 80176aa:	ed52 7a02 	vldr	s15, [r2, #-8]
 80176ae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176b2:	429c      	cmp	r4, r3
 80176b4:	edc3 7a02 	vstr	s15, [r3, #8]
 80176b8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80176bc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176c0:	edc3 7a05 	vstr	s15, [r3, #20]
 80176c4:	d1ea      	bne.n	801769c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80176c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80176c8:	698b      	ldr	r3, [r1, #24]
 80176ca:	edd0 4a02 	vldr	s9, [r0, #8]
 80176ce:	edd0 3a00 	vldr	s7, [r0]
 80176d2:	edd0 6a01 	vldr	s13, [r0, #4]
 80176d6:	ed90 5a05 	vldr	s10, [r0, #20]
 80176da:	ed90 2a03 	vldr	s4, [r0, #12]
 80176de:	edd0 5a04 	vldr	s11, [r0, #16]
 80176e2:	ed90 1a07 	vldr	s2, [r0, #28]
 80176e6:	edd0 2a06 	vldr	s5, [r0, #24]
 80176ea:	1a9b      	subs	r3, r3, r2
 80176ec:	ee07 3a90 	vmov	s15, r3
 80176f0:	684b      	ldr	r3, [r1, #4]
 80176f2:	1a9b      	subs	r3, r3, r2
 80176f4:	ee07 3a10 	vmov	s14, r3
 80176f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80176fc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017700:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017704:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017708:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801770c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017710:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017714:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017718:	eee6 7a87 	vfma.f32	s15, s13, s14
 801771c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017720:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017724:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017728:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801772a:	694a      	ldr	r2, [r1, #20]
 801772c:	1b13      	subs	r3, r2, r4
 801772e:	ee07 3a10 	vmov	s14, r3
 8017732:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017736:	680b      	ldr	r3, [r1, #0]
 8017738:	ee27 7a04 	vmul.f32	s14, s14, s8
 801773c:	1b1b      	subs	r3, r3, r4
 801773e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017742:	ee07 3a10 	vmov	s14, r3
 8017746:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801774a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801774e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017752:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017756:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801775a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801775c:	698b      	ldr	r3, [r1, #24]
 801775e:	1a9b      	subs	r3, r3, r2
 8017760:	ee06 3a90 	vmov	s13, r3
 8017764:	684b      	ldr	r3, [r1, #4]
 8017766:	1a9b      	subs	r3, r3, r2
 8017768:	ee07 3a10 	vmov	s14, r3
 801776c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017770:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017774:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017778:	ee27 7a04 	vmul.f32	s14, s14, s8
 801777c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017780:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017784:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017788:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801778c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801778e:	694a      	ldr	r2, [r1, #20]
 8017790:	1b13      	subs	r3, r2, r4
 8017792:	ee07 3a10 	vmov	s14, r3
 8017796:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801779a:	680b      	ldr	r3, [r1, #0]
 801779c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177a0:	1b1b      	subs	r3, r3, r4
 80177a2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80177a6:	ee07 3a10 	vmov	s14, r3
 80177aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177ae:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177b2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80177b6:	edd0 5a08 	vldr	s11, [r0, #32]
 80177ba:	ee25 5a06 	vmul.f32	s10, s10, s12
 80177be:	ee31 1a65 	vsub.f32	s2, s2, s11
 80177c2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80177c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80177c8:	698b      	ldr	r3, [r1, #24]
 80177ca:	1a9b      	subs	r3, r3, r2
 80177cc:	ee07 3a10 	vmov	s14, r3
 80177d0:	684b      	ldr	r3, [r1, #4]
 80177d2:	1a9b      	subs	r3, r3, r2
 80177d4:	ee01 3a90 	vmov	s3, r3
 80177d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177dc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80177e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177e4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80177e8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80177ec:	ee61 1a84 	vmul.f32	s3, s3, s8
 80177f0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80177f4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80177f8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80177fc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80177fe:	694a      	ldr	r2, [r1, #20]
 8017800:	1b13      	subs	r3, r2, r4
 8017802:	ee03 3a10 	vmov	s6, r3
 8017806:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801780a:	680b      	ldr	r3, [r1, #0]
 801780c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017810:	1b1b      	subs	r3, r3, r4
 8017812:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017816:	ee03 3a10 	vmov	s6, r3
 801781a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801781e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017822:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017826:	ee25 6a86 	vmul.f32	s12, s11, s12
 801782a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801782e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017832:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017836:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801783a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801783e:	dd13      	ble.n	8017868 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017840:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017844:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017848:	63c3      	str	r3, [r0, #60]	; 0x3c
 801784a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801784e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017856:	dd15      	ble.n	8017884 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017858:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801785c:	6403      	str	r3, [r0, #64]	; 0x40
 801785e:	bd70      	pop	{r4, r5, r6, pc}
 8017860:	4623      	mov	r3, r4
 8017862:	e6fd      	b.n	8017660 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017864:	462a      	mov	r2, r5
 8017866:	e706      	b.n	8017676 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017868:	d502      	bpl.n	8017870 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801786a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801786e:	e7e9      	b.n	8017844 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017870:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017874:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017878:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801787c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017880:	dade      	bge.n	8017840 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017882:	e7f2      	b.n	801786a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017884:	d502      	bpl.n	801788c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017886:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801788a:	e7e7      	b.n	801785c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801788c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017890:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017894:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801789c:	dadc      	bge.n	8017858 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801789e:	e7f2      	b.n	8017886 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80178a0:	3d800000 	.word	0x3d800000

080178a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80178a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178a8:	2714      	movs	r7, #20
 80178aa:	435f      	muls	r7, r3
 80178ac:	eb02 0c07 	add.w	ip, r2, r7
 80178b0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80178b4:	f115 0e0f 	adds.w	lr, r5, #15
 80178b8:	f100 80a2 	bmi.w	8017a00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80178bc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80178c0:	9c08      	ldr	r4, [sp, #32]
 80178c2:	f8c0 e014 	str.w	lr, [r0, #20]
 80178c6:	2614      	movs	r6, #20
 80178c8:	4366      	muls	r6, r4
 80178ca:	eb02 0806 	add.w	r8, r2, r6
 80178ce:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80178d2:	f115 040f 	adds.w	r4, r5, #15
 80178d6:	f100 809f 	bmi.w	8017a18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80178da:	1124      	asrs	r4, r4, #4
 80178dc:	eba4 040e 	sub.w	r4, r4, lr
 80178e0:	6184      	str	r4, [r0, #24]
 80178e2:	2c00      	cmp	r4, #0
 80178e4:	f000 808a 	beq.w	80179fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80178e8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80178ec:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80178f0:	5995      	ldr	r5, [r2, r6]
 80178f2:	eba4 0809 	sub.w	r8, r4, r9
 80178f6:	59d4      	ldr	r4, [r2, r7]
 80178f8:	eba5 0a04 	sub.w	sl, r5, r4
 80178fc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017900:	fb0e fe05 	mul.w	lr, lr, r5
 8017904:	fb0a ee19 	mls	lr, sl, r9, lr
 8017908:	fb08 e404 	mla	r4, r8, r4, lr
 801790c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017910:	3c01      	subs	r4, #1
 8017912:	19a4      	adds	r4, r4, r6
 8017914:	f100 808c 	bmi.w	8017a30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017918:	fb94 fef6 	sdiv	lr, r4, r6
 801791c:	f8c0 e000 	str.w	lr, [r0]
 8017920:	fb06 441e 	mls	r4, r6, lr, r4
 8017924:	6104      	str	r4, [r0, #16]
 8017926:	2d00      	cmp	r5, #0
 8017928:	f2c0 8095 	blt.w	8017a56 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801792c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017930:	6044      	str	r4, [r0, #4]
 8017932:	fb06 5514 	mls	r5, r6, r4, r5
 8017936:	6085      	str	r5, [r0, #8]
 8017938:	60c6      	str	r6, [r0, #12]
 801793a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801793e:	6945      	ldr	r5, [r0, #20]
 8017940:	59d2      	ldr	r2, [r2, r7]
 8017942:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017a78 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017946:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801794a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801794e:	ee07 4a10 	vmov	s14, r4
 8017952:	6804      	ldr	r4, [r0, #0]
 8017954:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017958:	ee07 2a90 	vmov	s15, r2
 801795c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017960:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017964:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017968:	ee27 7a26 	vmul.f32	s14, s14, s13
 801796c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017970:	edd3 6a00 	vldr	s13, [r3]
 8017974:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017978:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801797c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017980:	edc0 6a07 	vstr	s13, [r0, #28]
 8017984:	edd0 6a01 	vldr	s13, [r0, #4]
 8017988:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801798c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017990:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017994:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017998:	ed80 6a08 	vstr	s12, [r0, #32]
 801799c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801799e:	6242      	str	r2, [r0, #36]	; 0x24
 80179a0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80179a4:	ed93 6a03 	vldr	s12, [r3, #12]
 80179a8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179ac:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179b0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80179b4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80179b8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179bc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80179c0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179c4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80179c8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80179ca:	6302      	str	r2, [r0, #48]	; 0x30
 80179cc:	ed93 6a06 	vldr	s12, [r3, #24]
 80179d0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80179d4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179d8:	eeb0 7a46 	vmov.f32	s14, s12
 80179dc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80179e0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80179e4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80179e8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80179ec:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80179f0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80179f4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80179f8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80179fa:	63c3      	str	r3, [r0, #60]	; 0x3c
 80179fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a00:	f1c5 0501 	rsb	r5, r5, #1
 8017a04:	f015 050f 	ands.w	r5, r5, #15
 8017a08:	bf18      	it	ne
 8017a0a:	2501      	movne	r5, #1
 8017a0c:	2410      	movs	r4, #16
 8017a0e:	fb9e fef4 	sdiv	lr, lr, r4
 8017a12:	ebae 0e05 	sub.w	lr, lr, r5
 8017a16:	e753      	b.n	80178c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017a18:	f1c5 0501 	rsb	r5, r5, #1
 8017a1c:	f015 050f 	ands.w	r5, r5, #15
 8017a20:	bf18      	it	ne
 8017a22:	2501      	movne	r5, #1
 8017a24:	f04f 0910 	mov.w	r9, #16
 8017a28:	fb94 f4f9 	sdiv	r4, r4, r9
 8017a2c:	1b64      	subs	r4, r4, r5
 8017a2e:	e755      	b.n	80178dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017a30:	4264      	negs	r4, r4
 8017a32:	fb94 fef6 	sdiv	lr, r4, r6
 8017a36:	f1ce 0800 	rsb	r8, lr, #0
 8017a3a:	fb06 441e 	mls	r4, r6, lr, r4
 8017a3e:	f8c0 8000 	str.w	r8, [r0]
 8017a42:	6104      	str	r4, [r0, #16]
 8017a44:	2c00      	cmp	r4, #0
 8017a46:	f43f af6e 	beq.w	8017926 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017a4a:	ea6f 0e0e 	mvn.w	lr, lr
 8017a4e:	f8c0 e000 	str.w	lr, [r0]
 8017a52:	1b34      	subs	r4, r6, r4
 8017a54:	e766      	b.n	8017924 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017a56:	426d      	negs	r5, r5
 8017a58:	fb95 f4f6 	sdiv	r4, r5, r6
 8017a5c:	f1c4 0e00 	rsb	lr, r4, #0
 8017a60:	fb06 5514 	mls	r5, r6, r4, r5
 8017a64:	f8c0 e004 	str.w	lr, [r0, #4]
 8017a68:	6085      	str	r5, [r0, #8]
 8017a6a:	2d00      	cmp	r5, #0
 8017a6c:	f43f af64 	beq.w	8017938 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017a70:	43e4      	mvns	r4, r4
 8017a72:	6044      	str	r4, [r0, #4]
 8017a74:	1b75      	subs	r5, r6, r5
 8017a76:	e75e      	b.n	8017936 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017a78:	3d800000 	.word	0x3d800000

08017a7c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017a7c:	4602      	mov	r2, r0
 8017a7e:	b148      	cbz	r0, 8017a94 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017a80:	2300      	movs	r3, #0
 8017a82:	b298      	uxth	r0, r3
 8017a84:	3301      	adds	r3, #1
 8017a86:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017a8a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017a8e:	2900      	cmp	r1, #0
 8017a90:	d1f7      	bne.n	8017a82 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017a92:	4770      	bx	lr
 8017a94:	4770      	bx	lr

08017a96 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017a96:	b530      	push	{r4, r5, lr}
 8017a98:	4604      	mov	r4, r0
 8017a9a:	b159      	cbz	r1, 8017ab4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017a9c:	b148      	cbz	r0, 8017ab2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017a9e:	2300      	movs	r3, #0
 8017aa0:	b298      	uxth	r0, r3
 8017aa2:	4282      	cmp	r2, r0
 8017aa4:	d905      	bls.n	8017ab2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017aa6:	5ccd      	ldrb	r5, [r1, r3]
 8017aa8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017aac:	3301      	adds	r3, #1
 8017aae:	2d00      	cmp	r5, #0
 8017ab0:	d1f6      	bne.n	8017aa0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017ab2:	bd30      	pop	{r4, r5, pc}
 8017ab4:	4608      	mov	r0, r1
 8017ab6:	e7fc      	b.n	8017ab2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017ab8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017aba:	b08b      	sub	sp, #44	; 0x2c
 8017abc:	468c      	mov	ip, r1
 8017abe:	2100      	movs	r1, #0
 8017ac0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017ac4:	4604      	mov	r4, r0
 8017ac6:	261f      	movs	r6, #31
 8017ac8:	af01      	add	r7, sp, #4
 8017aca:	fb94 fef3 	sdiv	lr, r4, r3
 8017ace:	fb03 441e 	mls	r4, r3, lr, r4
 8017ad2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017ad6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017ada:	b2ec      	uxtb	r4, r5
 8017adc:	2d09      	cmp	r5, #9
 8017ade:	bfd4      	ite	le
 8017ae0:	3430      	addle	r4, #48	; 0x30
 8017ae2:	3457      	addgt	r4, #87	; 0x57
 8017ae4:	b2e4      	uxtb	r4, r4
 8017ae6:	55bc      	strb	r4, [r7, r6]
 8017ae8:	4674      	mov	r4, lr
 8017aea:	1e71      	subs	r1, r6, #1
 8017aec:	b974      	cbnz	r4, 8017b0c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017aee:	2800      	cmp	r0, #0
 8017af0:	da05      	bge.n	8017afe <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017af2:	ab0a      	add	r3, sp, #40	; 0x28
 8017af4:	4419      	add	r1, r3
 8017af6:	232d      	movs	r3, #45	; 0x2d
 8017af8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017afc:	1eb1      	subs	r1, r6, #2
 8017afe:	3101      	adds	r1, #1
 8017b00:	4439      	add	r1, r7
 8017b02:	4660      	mov	r0, ip
 8017b04:	f7ff ffc7 	bl	8017a96 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b08:	b00b      	add	sp, #44	; 0x2c
 8017b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b0c:	460e      	mov	r6, r1
 8017b0e:	e7dc      	b.n	8017aca <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017b10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b12:	b08b      	sub	sp, #44	; 0x2c
 8017b14:	468c      	mov	ip, r1
 8017b16:	2100      	movs	r1, #0
 8017b18:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017b1c:	ae01      	add	r6, sp, #4
 8017b1e:	211f      	movs	r1, #31
 8017b20:	fbb0 f7f3 	udiv	r7, r0, r3
 8017b24:	fb03 0517 	mls	r5, r3, r7, r0
 8017b28:	b2ec      	uxtb	r4, r5
 8017b2a:	2d09      	cmp	r5, #9
 8017b2c:	bfd4      	ite	le
 8017b2e:	3430      	addle	r4, #48	; 0x30
 8017b30:	3457      	addgt	r4, #87	; 0x57
 8017b32:	b2e4      	uxtb	r4, r4
 8017b34:	558c      	strb	r4, [r1, r6]
 8017b36:	4638      	mov	r0, r7
 8017b38:	1e4c      	subs	r4, r1, #1
 8017b3a:	b92f      	cbnz	r7, 8017b48 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017b3c:	4431      	add	r1, r6
 8017b3e:	4660      	mov	r0, ip
 8017b40:	f7ff ffa9 	bl	8017a96 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b44:	b00b      	add	sp, #44	; 0x2c
 8017b46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b48:	4621      	mov	r1, r4
 8017b4a:	e7e9      	b.n	8017b20 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017b4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b50:	4691      	mov	r9, r2
 8017b52:	b085      	sub	sp, #20
 8017b54:	6802      	ldr	r2, [r0, #0]
 8017b56:	9201      	str	r2, [sp, #4]
 8017b58:	4688      	mov	r8, r1
 8017b5a:	4683      	mov	fp, r0
 8017b5c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017b60:	9103      	str	r1, [sp, #12]
 8017b62:	4610      	mov	r0, r2
 8017b64:	461c      	mov	r4, r3
 8017b66:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017b6a:	9302      	str	r3, [sp, #8]
 8017b6c:	f7ff ff86 	bl	8017a7c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017b70:	f1b8 0f00 	cmp.w	r8, #0
 8017b74:	bf0c      	ite	eq
 8017b76:	4684      	moveq	ip, r0
 8017b78:	f100 0c01 	addne.w	ip, r0, #1
 8017b7c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017b80:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017b84:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017b86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017b88:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017b8c:	9903      	ldr	r1, [sp, #12]
 8017b8e:	fa1f fc8c 	uxth.w	ip, ip
 8017b92:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017b96:	d041      	beq.n	8017c1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017b98:	d834      	bhi.n	8017c04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017b9a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017b9e:	d059      	beq.n	8017c54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017ba0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017ba4:	d03a      	beq.n	8017c1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017ba6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017baa:	d034      	beq.n	8017c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017bac:	2400      	movs	r4, #0
 8017bae:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017bb2:	3a01      	subs	r2, #1
 8017bb4:	b169      	cbz	r1, 8017bd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017bb6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017bb8:	458c      	cmp	ip, r1
 8017bba:	da09      	bge.n	8017bd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017bbc:	eba1 010c 	sub.w	r1, r1, ip
 8017bc0:	b289      	uxth	r1, r1
 8017bc2:	b933      	cbnz	r3, 8017bd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017bc4:	2e00      	cmp	r6, #0
 8017bc6:	d051      	beq.n	8017c6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bc8:	2800      	cmp	r0, #0
 8017bca:	d04f      	beq.n	8017c6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bcc:	440c      	add	r4, r1
 8017bce:	b2a4      	uxth	r4, r4
 8017bd0:	2100      	movs	r1, #0
 8017bd2:	682b      	ldr	r3, [r5, #0]
 8017bd4:	4293      	cmp	r3, r2
 8017bd6:	da07      	bge.n	8017be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bd8:	f1b8 0f00 	cmp.w	r8, #0
 8017bdc:	d004      	beq.n	8017be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bde:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017be2:	682b      	ldr	r3, [r5, #0]
 8017be4:	3301      	adds	r3, #1
 8017be6:	602b      	str	r3, [r5, #0]
 8017be8:	2730      	movs	r7, #48	; 0x30
 8017bea:	2c00      	cmp	r4, #0
 8017bec:	d04e      	beq.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017bee:	682e      	ldr	r6, [r5, #0]
 8017bf0:	3c01      	subs	r4, #1
 8017bf2:	42b2      	cmp	r2, r6
 8017bf4:	b2a4      	uxth	r4, r4
 8017bf6:	dd49      	ble.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017bf8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017bfc:	682b      	ldr	r3, [r5, #0]
 8017bfe:	3301      	adds	r3, #1
 8017c00:	602b      	str	r3, [r5, #0]
 8017c02:	e7f2      	b.n	8017bea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017c04:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017c08:	d01d      	beq.n	8017c46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017c0a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017c0e:	d002      	beq.n	8017c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c10:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017c14:	e7c9      	b.n	8017baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017c16:	4684      	mov	ip, r0
 8017c18:	f04f 0800 	mov.w	r8, #0
 8017c1c:	2c00      	cmp	r4, #0
 8017c1e:	d0c6      	beq.n	8017bae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c20:	b947      	cbnz	r7, 8017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c22:	2801      	cmp	r0, #1
 8017c24:	d106      	bne.n	8017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c26:	8814      	ldrh	r4, [r2, #0]
 8017c28:	2c30      	cmp	r4, #48	; 0x30
 8017c2a:	bf02      	ittt	eq
 8017c2c:	3202      	addeq	r2, #2
 8017c2e:	f8cb 2000 	streq.w	r2, [fp]
 8017c32:	4638      	moveq	r0, r7
 8017c34:	45bc      	cmp	ip, r7
 8017c36:	da14      	bge.n	8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017c38:	b2bf      	uxth	r7, r7
 8017c3a:	eba7 040c 	sub.w	r4, r7, ip
 8017c3e:	b2a4      	uxth	r4, r4
 8017c40:	46bc      	mov	ip, r7
 8017c42:	2600      	movs	r6, #0
 8017c44:	e7b3      	b.n	8017bae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c46:	4684      	mov	ip, r0
 8017c48:	b16c      	cbz	r4, 8017c66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017c4a:	42b8      	cmp	r0, r7
 8017c4c:	dd00      	ble.n	8017c50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017c4e:	b2b8      	uxth	r0, r7
 8017c50:	2400      	movs	r4, #0
 8017c52:	e003      	b.n	8017c5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017c54:	f04f 0c01 	mov.w	ip, #1
 8017c58:	2400      	movs	r4, #0
 8017c5a:	4660      	mov	r0, ip
 8017c5c:	4626      	mov	r6, r4
 8017c5e:	46a0      	mov	r8, r4
 8017c60:	e7a5      	b.n	8017bae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c62:	2400      	movs	r4, #0
 8017c64:	e7ed      	b.n	8017c42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017c66:	4626      	mov	r6, r4
 8017c68:	46a0      	mov	r8, r4
 8017c6a:	e7a0      	b.n	8017bae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c6c:	2900      	cmp	r1, #0
 8017c6e:	d0b0      	beq.n	8017bd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c70:	2720      	movs	r7, #32
 8017c72:	682e      	ldr	r6, [r5, #0]
 8017c74:	2900      	cmp	r1, #0
 8017c76:	d0ac      	beq.n	8017bd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c78:	3901      	subs	r1, #1
 8017c7a:	4296      	cmp	r6, r2
 8017c7c:	b289      	uxth	r1, r1
 8017c7e:	daa7      	bge.n	8017bd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017c80:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017c84:	682b      	ldr	r3, [r5, #0]
 8017c86:	3301      	adds	r3, #1
 8017c88:	602b      	str	r3, [r5, #0]
 8017c8a:	e7f2      	b.n	8017c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017c8c:	b188      	cbz	r0, 8017cb2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017c8e:	682b      	ldr	r3, [r5, #0]
 8017c90:	3801      	subs	r0, #1
 8017c92:	429a      	cmp	r2, r3
 8017c94:	b280      	uxth	r0, r0
 8017c96:	dd0c      	ble.n	8017cb2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017c98:	f8db 3000 	ldr.w	r3, [fp]
 8017c9c:	1c9c      	adds	r4, r3, #2
 8017c9e:	f8cb 4000 	str.w	r4, [fp]
 8017ca2:	881c      	ldrh	r4, [r3, #0]
 8017ca4:	682b      	ldr	r3, [r5, #0]
 8017ca6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017caa:	682b      	ldr	r3, [r5, #0]
 8017cac:	3301      	adds	r3, #1
 8017cae:	602b      	str	r3, [r5, #0]
 8017cb0:	e7ec      	b.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017cb2:	2620      	movs	r6, #32
 8017cb4:	b151      	cbz	r1, 8017ccc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cb6:	6828      	ldr	r0, [r5, #0]
 8017cb8:	3901      	subs	r1, #1
 8017cba:	4282      	cmp	r2, r0
 8017cbc:	b289      	uxth	r1, r1
 8017cbe:	dd05      	ble.n	8017ccc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cc0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017cc4:	682b      	ldr	r3, [r5, #0]
 8017cc6:	3301      	adds	r3, #1
 8017cc8:	602b      	str	r3, [r5, #0]
 8017cca:	e7f3      	b.n	8017cb4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017ccc:	b005      	add	sp, #20
 8017cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017cd2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017cd6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017cda:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017cde:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017ce2:	2400      	movs	r4, #0
 8017ce4:	8014      	strh	r4, [r2, #0]
 8017ce6:	701c      	strb	r4, [r3, #0]
 8017ce8:	f888 4000 	strb.w	r4, [r8]
 8017cec:	f88c 4000 	strb.w	r4, [ip]
 8017cf0:	f88e 4000 	strb.w	r4, [lr]
 8017cf4:	703c      	strb	r4, [r7, #0]
 8017cf6:	6804      	ldr	r4, [r0, #0]
 8017cf8:	b1a4      	cbz	r4, 8017d24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017cfa:	8824      	ldrh	r4, [r4, #0]
 8017cfc:	f04f 0901 	mov.w	r9, #1
 8017d00:	b314      	cbz	r4, 8017d48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d02:	2c2b      	cmp	r4, #43	; 0x2b
 8017d04:	d001      	beq.n	8017d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017d06:	2c20      	cmp	r4, #32
 8017d08:	d110      	bne.n	8017d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017d0a:	8014      	strh	r4, [r2, #0]
 8017d0c:	6804      	ldr	r4, [r0, #0]
 8017d0e:	b10c      	cbz	r4, 8017d14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017d10:	3402      	adds	r4, #2
 8017d12:	6004      	str	r4, [r0, #0]
 8017d14:	680c      	ldr	r4, [r1, #0]
 8017d16:	b10c      	cbz	r4, 8017d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017d18:	3401      	adds	r4, #1
 8017d1a:	600c      	str	r4, [r1, #0]
 8017d1c:	6804      	ldr	r4, [r0, #0]
 8017d1e:	b17c      	cbz	r4, 8017d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017d20:	8824      	ldrh	r4, [r4, #0]
 8017d22:	e7ed      	b.n	8017d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d24:	680c      	ldr	r4, [r1, #0]
 8017d26:	b17c      	cbz	r4, 8017d48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d28:	7824      	ldrb	r4, [r4, #0]
 8017d2a:	e7e7      	b.n	8017cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017d2c:	2c2d      	cmp	r4, #45	; 0x2d
 8017d2e:	d102      	bne.n	8017d36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017d30:	f883 9000 	strb.w	r9, [r3]
 8017d34:	e7ea      	b.n	8017d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d36:	2c23      	cmp	r4, #35	; 0x23
 8017d38:	d107      	bne.n	8017d4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017d3a:	f888 9000 	strb.w	r9, [r8]
 8017d3e:	e7e5      	b.n	8017d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d40:	680c      	ldr	r4, [r1, #0]
 8017d42:	b10c      	cbz	r4, 8017d48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d44:	7824      	ldrb	r4, [r4, #0]
 8017d46:	e7db      	b.n	8017d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d48:	2400      	movs	r4, #0
 8017d4a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017d4e:	2b09      	cmp	r3, #9
 8017d50:	d901      	bls.n	8017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017d52:	2c2a      	cmp	r4, #42	; 0x2a
 8017d54:	d122      	bne.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017d56:	2301      	movs	r3, #1
 8017d58:	2c30      	cmp	r4, #48	; 0x30
 8017d5a:	f88e 3000 	strb.w	r3, [lr]
 8017d5e:	d10d      	bne.n	8017d7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017d60:	f88c 3000 	strb.w	r3, [ip]
 8017d64:	6803      	ldr	r3, [r0, #0]
 8017d66:	b10b      	cbz	r3, 8017d6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017d68:	3302      	adds	r3, #2
 8017d6a:	6003      	str	r3, [r0, #0]
 8017d6c:	680b      	ldr	r3, [r1, #0]
 8017d6e:	b10b      	cbz	r3, 8017d74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017d70:	3301      	adds	r3, #1
 8017d72:	600b      	str	r3, [r1, #0]
 8017d74:	6803      	ldr	r3, [r0, #0]
 8017d76:	2b00      	cmp	r3, #0
 8017d78:	d02f      	beq.n	8017dda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017d7a:	881c      	ldrh	r4, [r3, #0]
 8017d7c:	2c2a      	cmp	r4, #42	; 0x2a
 8017d7e:	d135      	bne.n	8017dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017d80:	f04f 33ff 	mov.w	r3, #4294967295
 8017d84:	6033      	str	r3, [r6, #0]
 8017d86:	6803      	ldr	r3, [r0, #0]
 8017d88:	b10b      	cbz	r3, 8017d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017d8a:	3302      	adds	r3, #2
 8017d8c:	6003      	str	r3, [r0, #0]
 8017d8e:	680b      	ldr	r3, [r1, #0]
 8017d90:	b10b      	cbz	r3, 8017d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017d92:	3301      	adds	r3, #1
 8017d94:	600b      	str	r3, [r1, #0]
 8017d96:	6803      	ldr	r3, [r0, #0]
 8017d98:	b31b      	cbz	r3, 8017de2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017d9a:	881c      	ldrh	r4, [r3, #0]
 8017d9c:	2c2e      	cmp	r4, #46	; 0x2e
 8017d9e:	d11a      	bne.n	8017dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017da0:	2301      	movs	r3, #1
 8017da2:	703b      	strb	r3, [r7, #0]
 8017da4:	6803      	ldr	r3, [r0, #0]
 8017da6:	b10b      	cbz	r3, 8017dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017da8:	3302      	adds	r3, #2
 8017daa:	6003      	str	r3, [r0, #0]
 8017dac:	680b      	ldr	r3, [r1, #0]
 8017dae:	b10b      	cbz	r3, 8017db4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017db0:	3301      	adds	r3, #1
 8017db2:	600b      	str	r3, [r1, #0]
 8017db4:	6803      	ldr	r3, [r0, #0]
 8017db6:	2b00      	cmp	r3, #0
 8017db8:	d036      	beq.n	8017e28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017dba:	881b      	ldrh	r3, [r3, #0]
 8017dbc:	2b2a      	cmp	r3, #42	; 0x2a
 8017dbe:	d137      	bne.n	8017e30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017dc0:	f04f 33ff 	mov.w	r3, #4294967295
 8017dc4:	602b      	str	r3, [r5, #0]
 8017dc6:	6803      	ldr	r3, [r0, #0]
 8017dc8:	b10b      	cbz	r3, 8017dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017dca:	3302      	adds	r3, #2
 8017dcc:	6003      	str	r3, [r0, #0]
 8017dce:	680b      	ldr	r3, [r1, #0]
 8017dd0:	b10b      	cbz	r3, 8017dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017dd2:	3301      	adds	r3, #1
 8017dd4:	600b      	str	r3, [r1, #0]
 8017dd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017dda:	680c      	ldr	r4, [r1, #0]
 8017ddc:	b134      	cbz	r4, 8017dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017dde:	7824      	ldrb	r4, [r4, #0]
 8017de0:	e7cc      	b.n	8017d7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017de2:	680b      	ldr	r3, [r1, #0]
 8017de4:	2b00      	cmp	r3, #0
 8017de6:	d0f6      	beq.n	8017dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017de8:	781c      	ldrb	r4, [r3, #0]
 8017dea:	e7d7      	b.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017dec:	2300      	movs	r3, #0
 8017dee:	6033      	str	r3, [r6, #0]
 8017df0:	220a      	movs	r2, #10
 8017df2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017df6:	fa1f f38c 	uxth.w	r3, ip
 8017dfa:	2b09      	cmp	r3, #9
 8017dfc:	d8ce      	bhi.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017dfe:	6833      	ldr	r3, [r6, #0]
 8017e00:	fb02 c303 	mla	r3, r2, r3, ip
 8017e04:	6033      	str	r3, [r6, #0]
 8017e06:	6803      	ldr	r3, [r0, #0]
 8017e08:	b10b      	cbz	r3, 8017e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017e0a:	3302      	adds	r3, #2
 8017e0c:	6003      	str	r3, [r0, #0]
 8017e0e:	680b      	ldr	r3, [r1, #0]
 8017e10:	b10b      	cbz	r3, 8017e16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017e12:	3301      	adds	r3, #1
 8017e14:	600b      	str	r3, [r1, #0]
 8017e16:	6803      	ldr	r3, [r0, #0]
 8017e18:	b10b      	cbz	r3, 8017e1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017e1a:	881c      	ldrh	r4, [r3, #0]
 8017e1c:	e7e9      	b.n	8017df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e1e:	680c      	ldr	r4, [r1, #0]
 8017e20:	2c00      	cmp	r4, #0
 8017e22:	d0e6      	beq.n	8017df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e24:	7824      	ldrb	r4, [r4, #0]
 8017e26:	e7e4      	b.n	8017df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e28:	680b      	ldr	r3, [r1, #0]
 8017e2a:	b10b      	cbz	r3, 8017e30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e2c:	781b      	ldrb	r3, [r3, #0]
 8017e2e:	e7c5      	b.n	8017dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017e30:	2200      	movs	r2, #0
 8017e32:	602a      	str	r2, [r5, #0]
 8017e34:	240a      	movs	r4, #10
 8017e36:	3b30      	subs	r3, #48	; 0x30
 8017e38:	b29e      	uxth	r6, r3
 8017e3a:	2e09      	cmp	r6, #9
 8017e3c:	682a      	ldr	r2, [r5, #0]
 8017e3e:	d813      	bhi.n	8017e68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017e40:	fb04 3302 	mla	r3, r4, r2, r3
 8017e44:	602b      	str	r3, [r5, #0]
 8017e46:	6803      	ldr	r3, [r0, #0]
 8017e48:	b10b      	cbz	r3, 8017e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017e4a:	3302      	adds	r3, #2
 8017e4c:	6003      	str	r3, [r0, #0]
 8017e4e:	680b      	ldr	r3, [r1, #0]
 8017e50:	b10b      	cbz	r3, 8017e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017e52:	3301      	adds	r3, #1
 8017e54:	600b      	str	r3, [r1, #0]
 8017e56:	6803      	ldr	r3, [r0, #0]
 8017e58:	b10b      	cbz	r3, 8017e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017e5a:	881b      	ldrh	r3, [r3, #0]
 8017e5c:	e7eb      	b.n	8017e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e5e:	680b      	ldr	r3, [r1, #0]
 8017e60:	2b00      	cmp	r3, #0
 8017e62:	d0e8      	beq.n	8017e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e64:	781b      	ldrb	r3, [r3, #0]
 8017e66:	e7e6      	b.n	8017e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e68:	2a06      	cmp	r2, #6
 8017e6a:	bfa8      	it	ge
 8017e6c:	2206      	movge	r2, #6
 8017e6e:	602a      	str	r2, [r5, #0]
 8017e70:	e7b1      	b.n	8017dd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e76:	b0a3      	sub	sp, #140	; 0x8c
 8017e78:	2600      	movs	r6, #0
 8017e7a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017e7e:	4607      	mov	r7, r0
 8017e80:	4688      	mov	r8, r1
 8017e82:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017e86:	4631      	mov	r1, r6
 8017e88:	2242      	movs	r2, #66	; 0x42
 8017e8a:	4648      	mov	r0, r9
 8017e8c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017e8e:	960d      	str	r6, [sp, #52]	; 0x34
 8017e90:	f010 fd53 	bl	802893a <memset>
 8017e94:	b15f      	cbz	r7, 8017eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017e96:	f108 3aff 	add.w	sl, r8, #4294967295
 8017e9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017e9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e9e:	b152      	cbz	r2, 8017eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ea0:	8812      	ldrh	r2, [r2, #0]
 8017ea2:	b10a      	cbz	r2, 8017ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ea4:	459a      	cmp	sl, r3
 8017ea6:	dc2e      	bgt.n	8017f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ea8:	2200      	movs	r2, #0
 8017eaa:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017eae:	4638      	mov	r0, r7
 8017eb0:	b023      	add	sp, #140	; 0x8c
 8017eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017eb6:	9a08      	ldr	r2, [sp, #32]
 8017eb8:	2a00      	cmp	r2, #0
 8017eba:	d0f5      	beq.n	8017ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ebc:	7812      	ldrb	r2, [r2, #0]
 8017ebe:	e7f0      	b.n	8017ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017ec0:	2d00      	cmp	r5, #0
 8017ec2:	d0ea      	beq.n	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ec4:	782a      	ldrb	r2, [r5, #0]
 8017ec6:	b142      	cbz	r2, 8017eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017ec8:	2a25      	cmp	r2, #37	; 0x25
 8017eca:	d001      	beq.n	8017ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017ecc:	459a      	cmp	sl, r3
 8017ece:	dc08      	bgt.n	8017ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017ed0:	f1bb 0f00 	cmp.w	fp, #0
 8017ed4:	d121      	bne.n	8017f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017ed6:	2d00      	cmp	r5, #0
 8017ed8:	d0df      	beq.n	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017eda:	782a      	ldrb	r2, [r5, #0]
 8017edc:	f04f 0b00 	mov.w	fp, #0
 8017ee0:	e01d      	b.n	8017f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017ee2:	f1bb 0f00 	cmp.w	fp, #0
 8017ee6:	d078      	beq.n	8017fda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017ee8:	f8bb 2000 	ldrh.w	r2, [fp]
 8017eec:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017ef0:	f1bb 0f00 	cmp.w	fp, #0
 8017ef4:	d002      	beq.n	8017efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017ef6:	f10b 0202 	add.w	r2, fp, #2
 8017efa:	9209      	str	r2, [sp, #36]	; 0x24
 8017efc:	b10d      	cbz	r5, 8017f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017efe:	3501      	adds	r5, #1
 8017f00:	9508      	str	r5, [sp, #32]
 8017f02:	3301      	adds	r3, #1
 8017f04:	930d      	str	r3, [sp, #52]	; 0x34
 8017f06:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017f0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f0c:	f1bb 0f00 	cmp.w	fp, #0
 8017f10:	d0d6      	beq.n	8017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017f12:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f16:	2a00      	cmp	r2, #0
 8017f18:	d1d6      	bne.n	8017ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017f1a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f1e:	2a00      	cmp	r2, #0
 8017f20:	d0bb      	beq.n	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f22:	459a      	cmp	sl, r3
 8017f24:	ddb9      	ble.n	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f26:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017f2a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017f2e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017f32:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017f36:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017f3a:	960e      	str	r6, [sp, #56]	; 0x38
 8017f3c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017f40:	960f      	str	r6, [sp, #60]	; 0x3c
 8017f42:	f1bb 0f00 	cmp.w	fp, #0
 8017f46:	d002      	beq.n	8017f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017f48:	f10b 0302 	add.w	r3, fp, #2
 8017f4c:	9309      	str	r3, [sp, #36]	; 0x24
 8017f4e:	b10d      	cbz	r5, 8017f54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017f50:	1c6b      	adds	r3, r5, #1
 8017f52:	9308      	str	r3, [sp, #32]
 8017f54:	ab0f      	add	r3, sp, #60	; 0x3c
 8017f56:	9305      	str	r3, [sp, #20]
 8017f58:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017f5c:	9304      	str	r3, [sp, #16]
 8017f5e:	ab0e      	add	r3, sp, #56	; 0x38
 8017f60:	9303      	str	r3, [sp, #12]
 8017f62:	ab0c      	add	r3, sp, #48	; 0x30
 8017f64:	9302      	str	r3, [sp, #8]
 8017f66:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017f6a:	9301      	str	r3, [sp, #4]
 8017f6c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017f70:	9300      	str	r3, [sp, #0]
 8017f72:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017f76:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017f7a:	a908      	add	r1, sp, #32
 8017f7c:	a809      	add	r0, sp, #36	; 0x24
 8017f7e:	f7ff fea8 	bl	8017cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017f82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017f84:	2b00      	cmp	r3, #0
 8017f86:	bfbe      	ittt	lt
 8017f88:	6823      	ldrlt	r3, [r4, #0]
 8017f8a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017f8e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017f92:	bfb8      	it	lt
 8017f94:	3404      	addlt	r4, #4
 8017f96:	2b00      	cmp	r3, #0
 8017f98:	bfb8      	it	lt
 8017f9a:	6823      	ldrlt	r3, [r4, #0]
 8017f9c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017fa0:	bfbe      	ittt	lt
 8017fa2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fa6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017fa8:	3404      	addlt	r4, #4
 8017faa:	b1d9      	cbz	r1, 8017fe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017fac:	880b      	ldrh	r3, [r1, #0]
 8017fae:	2b69      	cmp	r3, #105	; 0x69
 8017fb0:	d01f      	beq.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fb2:	d82f      	bhi.n	8018014 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017fb4:	2b58      	cmp	r3, #88	; 0x58
 8017fb6:	d01c      	beq.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fb8:	d818      	bhi.n	8017fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017fba:	2b25      	cmp	r3, #37	; 0x25
 8017fbc:	d034      	beq.n	8018028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017fbe:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017fc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fc4:	f1bb 0f00 	cmp.w	fp, #0
 8017fc8:	f000 80b8 	beq.w	801813c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017fcc:	f8bb 5000 	ldrh.w	r5, [fp]
 8017fd0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017fd4:	3301      	adds	r3, #1
 8017fd6:	930d      	str	r3, [sp, #52]	; 0x34
 8017fd8:	e029      	b.n	801802e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017fda:	b10d      	cbz	r5, 8017fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017fdc:	782a      	ldrb	r2, [r5, #0]
 8017fde:	e785      	b.n	8017eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017fe0:	462a      	mov	r2, r5
 8017fe2:	e783      	b.n	8017eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017fe4:	2a00      	cmp	r2, #0
 8017fe6:	d0ea      	beq.n	8017fbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017fe8:	7813      	ldrb	r3, [r2, #0]
 8017fea:	e7e0      	b.n	8017fae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017fec:	3b63      	subs	r3, #99	; 0x63
 8017fee:	2b01      	cmp	r3, #1
 8017ff0:	d8e5      	bhi.n	8017fbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017ff2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017ff6:	b329      	cbz	r1, 8018044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017ff8:	880b      	ldrh	r3, [r1, #0]
 8017ffa:	2b69      	cmp	r3, #105	; 0x69
 8017ffc:	d063      	beq.n	80180c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017ffe:	d825      	bhi.n	801804c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018000:	2b63      	cmp	r3, #99	; 0x63
 8018002:	d038      	beq.n	8018076 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018004:	2b64      	cmp	r3, #100	; 0x64
 8018006:	d05e      	beq.n	80180c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018008:	2b58      	cmp	r3, #88	; 0x58
 801800a:	d07b      	beq.n	8018104 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801800c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018010:	4625      	mov	r5, r4
 8018012:	e036      	b.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018014:	2b73      	cmp	r3, #115	; 0x73
 8018016:	d0ec      	beq.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018018:	d802      	bhi.n	8018020 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801801a:	2b6f      	cmp	r3, #111	; 0x6f
 801801c:	d1cf      	bne.n	8017fbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801801e:	e7e8      	b.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018020:	2b75      	cmp	r3, #117	; 0x75
 8018022:	d0e6      	beq.n	8017ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018024:	2b78      	cmp	r3, #120	; 0x78
 8018026:	e7f9      	b.n	801801c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018028:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801802a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801802e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018030:	b10b      	cbz	r3, 8018036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018032:	3302      	adds	r3, #2
 8018034:	9309      	str	r3, [sp, #36]	; 0x24
 8018036:	9b08      	ldr	r3, [sp, #32]
 8018038:	2b00      	cmp	r3, #0
 801803a:	f43f af2e 	beq.w	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801803e:	3301      	adds	r3, #1
 8018040:	9308      	str	r3, [sp, #32]
 8018042:	e72a      	b.n	8017e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018044:	2a00      	cmp	r2, #0
 8018046:	d0e1      	beq.n	801800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018048:	7813      	ldrb	r3, [r2, #0]
 801804a:	e7d6      	b.n	8017ffa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801804c:	2b73      	cmp	r3, #115	; 0x73
 801804e:	d036      	beq.n	80180be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018050:	d807      	bhi.n	8018062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018052:	2b6f      	cmp	r3, #111	; 0x6f
 8018054:	d1da      	bne.n	801800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018056:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018058:	1d25      	adds	r5, r4, #4
 801805a:	eba8 0202 	sub.w	r2, r8, r2
 801805e:	2308      	movs	r3, #8
 8018060:	e04a      	b.n	80180f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018062:	2b75      	cmp	r3, #117	; 0x75
 8018064:	d043      	beq.n	80180ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018066:	2b78      	cmp	r3, #120	; 0x78
 8018068:	d1d0      	bne.n	801800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801806a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801806c:	1d25      	adds	r5, r4, #4
 801806e:	eba8 0202 	sub.w	r2, r8, r2
 8018072:	2310      	movs	r3, #16
 8018074:	e040      	b.n	80180f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018076:	6823      	ldr	r3, [r4, #0]
 8018078:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801807c:	1d25      	adds	r5, r4, #4
 801807e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018082:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018084:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018088:	2b00      	cmp	r3, #0
 801808a:	d052      	beq.n	8018132 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801808c:	881a      	ldrh	r2, [r3, #0]
 801808e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018092:	a80d      	add	r0, sp, #52	; 0x34
 8018094:	9005      	str	r0, [sp, #20]
 8018096:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801809a:	9004      	str	r0, [sp, #16]
 801809c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801809e:	9003      	str	r0, [sp, #12]
 80180a0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180a4:	9002      	str	r0, [sp, #8]
 80180a6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180a8:	9001      	str	r0, [sp, #4]
 80180aa:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80180ae:	9000      	str	r0, [sp, #0]
 80180b0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80180b4:	a810      	add	r0, sp, #64	; 0x40
 80180b6:	f7ff fd49 	bl	8017b4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80180ba:	462c      	mov	r4, r5
 80180bc:	e7b7      	b.n	801802e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80180be:	6823      	ldr	r3, [r4, #0]
 80180c0:	1d25      	adds	r5, r4, #4
 80180c2:	9310      	str	r3, [sp, #64]	; 0x40
 80180c4:	e7dd      	b.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180c8:	6820      	ldr	r0, [r4, #0]
 80180ca:	eba8 0202 	sub.w	r2, r8, r2
 80180ce:	230a      	movs	r3, #10
 80180d0:	b292      	uxth	r2, r2
 80180d2:	4649      	mov	r1, r9
 80180d4:	f7ff fcf0 	bl	8017ab8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80180d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80180dc:	2b2d      	cmp	r3, #45	; 0x2d
 80180de:	f104 0504 	add.w	r5, r4, #4
 80180e2:	d1ce      	bne.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180e4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80180e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180ea:	3302      	adds	r3, #2
 80180ec:	e7e9      	b.n	80180c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80180ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180f0:	1d25      	adds	r5, r4, #4
 80180f2:	eba8 0202 	sub.w	r2, r8, r2
 80180f6:	230a      	movs	r3, #10
 80180f8:	b292      	uxth	r2, r2
 80180fa:	4649      	mov	r1, r9
 80180fc:	6820      	ldr	r0, [r4, #0]
 80180fe:	f7ff fd07 	bl	8017b10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018102:	e7be      	b.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018104:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018106:	6820      	ldr	r0, [r4, #0]
 8018108:	eba8 0202 	sub.w	r2, r8, r2
 801810c:	b292      	uxth	r2, r2
 801810e:	2310      	movs	r3, #16
 8018110:	4649      	mov	r1, r9
 8018112:	f7ff fcfd 	bl	8017b10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018116:	1d25      	adds	r5, r4, #4
 8018118:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801811c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018120:	2b00      	cmp	r3, #0
 8018122:	d0ae      	beq.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018124:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018128:	2919      	cmp	r1, #25
 801812a:	d8f7      	bhi.n	801811c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801812c:	3b20      	subs	r3, #32
 801812e:	8013      	strh	r3, [r2, #0]
 8018130:	e7f4      	b.n	801811c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018132:	9a08      	ldr	r2, [sp, #32]
 8018134:	2a00      	cmp	r2, #0
 8018136:	d0aa      	beq.n	801808e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018138:	7812      	ldrb	r2, [r2, #0]
 801813a:	e7a8      	b.n	801808e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801813c:	2d00      	cmp	r5, #0
 801813e:	f43f af47 	beq.w	8017fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018142:	782d      	ldrb	r5, [r5, #0]
 8018144:	e744      	b.n	8017fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018146:	b507      	push	{r0, r1, r2, lr}
 8018148:	9300      	str	r3, [sp, #0]
 801814a:	4613      	mov	r3, r2
 801814c:	2200      	movs	r2, #0
 801814e:	f7ff fe90 	bl	8017e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018152:	b003      	add	sp, #12
 8018154:	f85d fb04 	ldr.w	pc, [sp], #4

08018158 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018158:	b40c      	push	{r2, r3}
 801815a:	b507      	push	{r0, r1, r2, lr}
 801815c:	ab04      	add	r3, sp, #16
 801815e:	f853 2b04 	ldr.w	r2, [r3], #4
 8018162:	9301      	str	r3, [sp, #4]
 8018164:	f7ff ffef 	bl	8018146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018168:	b003      	add	sp, #12
 801816a:	f85d eb04 	ldr.w	lr, [sp], #4
 801816e:	b002      	add	sp, #8
 8018170:	4770      	bx	lr
	...

08018174 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018174:	4b01      	ldr	r3, [pc, #4]	; (801817c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018176:	6018      	str	r0, [r3, #0]
 8018178:	4770      	bx	lr
 801817a:	bf00      	nop
 801817c:	20013834 	.word	0x20013834

08018180 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018180:	4b06      	ldr	r3, [pc, #24]	; (801819c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018182:	881a      	ldrh	r2, [r3, #0]
 8018184:	4282      	cmp	r2, r0
 8018186:	d807      	bhi.n	8018198 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018188:	4b05      	ldr	r3, [pc, #20]	; (80181a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801818a:	881b      	ldrh	r3, [r3, #0]
 801818c:	4413      	add	r3, r2
 801818e:	4298      	cmp	r0, r3
 8018190:	bfac      	ite	ge
 8018192:	2000      	movge	r0, #0
 8018194:	2001      	movlt	r0, #1
 8018196:	4770      	bx	lr
 8018198:	2000      	movs	r0, #0
 801819a:	4770      	bx	lr
 801819c:	20013854 	.word	0x20013854
 80181a0:	20013858 	.word	0x20013858

080181a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80181a4:	b508      	push	{r3, lr}
 80181a6:	4601      	mov	r1, r0
 80181a8:	f7ff ffea 	bl	8018180 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80181ac:	b118      	cbz	r0, 80181b6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80181ae:	4b02      	ldr	r3, [pc, #8]	; (80181b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80181b0:	681b      	ldr	r3, [r3, #0]
 80181b2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80181b6:	bd08      	pop	{r3, pc}
 80181b8:	20013838 	.word	0x20013838

080181bc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80181bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181be:	4c24      	ldr	r4, [pc, #144]	; (8018250 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80181c0:	6823      	ldr	r3, [r4, #0]
 80181c2:	2b00      	cmp	r3, #0
 80181c4:	d042      	beq.n	801824c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80181c6:	4a23      	ldr	r2, [pc, #140]	; (8018254 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80181c8:	4d23      	ldr	r5, [pc, #140]	; (8018258 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80181ca:	8811      	ldrh	r1, [r2, #0]
 80181cc:	f8b5 c000 	ldrh.w	ip, [r5]
 80181d0:	4822      	ldr	r0, [pc, #136]	; (801825c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80181d2:	4461      	add	r1, ip
 80181d4:	1c4a      	adds	r2, r1, #1
 80181d6:	f022 0201 	bic.w	r2, r2, #1
 80181da:	008f      	lsls	r7, r1, #2
 80181dc:	0412      	lsls	r2, r2, #16
 80181de:	19de      	adds	r6, r3, r7
 80181e0:	0c12      	lsrs	r2, r2, #16
 80181e2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80181e6:	6006      	str	r6, [r0, #0]
 80181e8:	4e1d      	ldr	r6, [pc, #116]	; (8018260 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80181ea:	19da      	adds	r2, r3, r7
 80181ec:	6032      	str	r2, [r6, #0]
 80181ee:	220e      	movs	r2, #14
 80181f0:	fb02 f20c 	mul.w	r2, r2, ip
 80181f4:	3203      	adds	r2, #3
 80181f6:	f022 0203 	bic.w	r2, r2, #3
 80181fa:	443a      	add	r2, r7
 80181fc:	4f19      	ldr	r7, [pc, #100]	; (8018264 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80181fe:	4413      	add	r3, r2
 8018200:	603b      	str	r3, [r7, #0]
 8018202:	4f19      	ldr	r7, [pc, #100]	; (8018268 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018204:	2300      	movs	r3, #0
 8018206:	803b      	strh	r3, [r7, #0]
 8018208:	4f18      	ldr	r7, [pc, #96]	; (801826c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801820a:	683f      	ldr	r7, [r7, #0]
 801820c:	1aba      	subs	r2, r7, r2
 801820e:	4f18      	ldr	r7, [pc, #96]	; (8018270 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018210:	603a      	str	r2, [r7, #0]
 8018212:	4a18      	ldr	r2, [pc, #96]	; (8018274 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018214:	469c      	mov	ip, r3
 8018216:	8013      	strh	r3, [r2, #0]
 8018218:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801821c:	428b      	cmp	r3, r1
 801821e:	d10d      	bne.n	801823c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018220:	882d      	ldrh	r5, [r5, #0]
 8018222:	6830      	ldr	r0, [r6, #0]
 8018224:	2300      	movs	r3, #0
 8018226:	240e      	movs	r4, #14
 8018228:	429d      	cmp	r5, r3
 801822a:	d90f      	bls.n	801824c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801822c:	fb04 0203 	mla	r2, r4, r3, r0
 8018230:	3301      	adds	r3, #1
 8018232:	7b11      	ldrb	r1, [r2, #12]
 8018234:	f36f 1145 	bfc	r1, #5, #1
 8018238:	7311      	strb	r1, [r2, #12]
 801823a:	e7f5      	b.n	8018228 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801823c:	6822      	ldr	r2, [r4, #0]
 801823e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018242:	6802      	ldr	r2, [r0, #0]
 8018244:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018248:	3301      	adds	r3, #1
 801824a:	e7e7      	b.n	801821c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801824c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801824e:	bf00      	nop
 8018250:	20013838 	.word	0x20013838
 8018254:	20013854 	.word	0x20013854
 8018258:	20013858 	.word	0x20013858
 801825c:	2001384c 	.word	0x2001384c
 8018260:	2001383c 	.word	0x2001383c
 8018264:	20013844 	.word	0x20013844
 8018268:	20013856 	.word	0x20013856
 801826c:	20013840 	.word	0x20013840
 8018270:	20013850 	.word	0x20013850
 8018274:	20013848 	.word	0x20013848

08018278 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018278:	4b06      	ldr	r3, [pc, #24]	; (8018294 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801827a:	681b      	ldr	r3, [r3, #0]
 801827c:	b943      	cbnz	r3, 8018290 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801827e:	b139      	cbz	r1, 8018290 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018280:	4b05      	ldr	r3, [pc, #20]	; (8018298 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018282:	801a      	strh	r2, [r3, #0]
 8018284:	4b05      	ldr	r3, [pc, #20]	; (801829c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018286:	6019      	str	r1, [r3, #0]
 8018288:	4b05      	ldr	r3, [pc, #20]	; (80182a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801828a:	6018      	str	r0, [r3, #0]
 801828c:	f7ff bf96 	b.w	80181bc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018290:	4770      	bx	lr
 8018292:	bf00      	nop
 8018294:	20013844 	.word	0x20013844
 8018298:	20013858 	.word	0x20013858
 801829c:	20013840 	.word	0x20013840
 80182a0:	20013838 	.word	0x20013838

080182a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80182a4:	b470      	push	{r4, r5, r6}
 80182a6:	4c07      	ldr	r4, [pc, #28]	; (80182c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80182a8:	6826      	ldr	r6, [r4, #0]
 80182aa:	4605      	mov	r5, r0
 80182ac:	4610      	mov	r0, r2
 80182ae:	9a03      	ldr	r2, [sp, #12]
 80182b0:	b936      	cbnz	r6, 80182c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80182b2:	6025      	str	r5, [r4, #0]
 80182b4:	4c04      	ldr	r4, [pc, #16]	; (80182c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80182b6:	8021      	strh	r1, [r4, #0]
 80182b8:	bc70      	pop	{r4, r5, r6}
 80182ba:	4619      	mov	r1, r3
 80182bc:	f7ff bfdc 	b.w	8018278 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80182c0:	bc70      	pop	{r4, r5, r6}
 80182c2:	4770      	bx	lr
 80182c4:	2001385c 	.word	0x2001385c
 80182c8:	20013854 	.word	0x20013854

080182cc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80182cc:	4a12      	ldr	r2, [pc, #72]	; (8018318 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80182ce:	8803      	ldrh	r3, [r0, #0]
 80182d0:	8812      	ldrh	r2, [r2, #0]
 80182d2:	4293      	cmp	r3, r2
 80182d4:	d207      	bcs.n	80182e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80182d6:	4a11      	ldr	r2, [pc, #68]	; (801831c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80182d8:	6812      	ldr	r2, [r2, #0]
 80182da:	2114      	movs	r1, #20
 80182dc:	fb01 2303 	mla	r3, r1, r3, r2
 80182e0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80182e4:	4770      	bx	lr
 80182e6:	490e      	ldr	r1, [pc, #56]	; (8018320 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80182e8:	8809      	ldrh	r1, [r1, #0]
 80182ea:	4411      	add	r1, r2
 80182ec:	428b      	cmp	r3, r1
 80182ee:	da04      	bge.n	80182fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80182f0:	1a9b      	subs	r3, r3, r2
 80182f2:	4a0c      	ldr	r2, [pc, #48]	; (8018324 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80182f4:	210e      	movs	r1, #14
 80182f6:	6812      	ldr	r2, [r2, #0]
 80182f8:	e7f0      	b.n	80182dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80182fa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80182fe:	4293      	cmp	r3, r2
 8018300:	d108      	bne.n	8018314 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018302:	4b09      	ldr	r3, [pc, #36]	; (8018328 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018304:	781b      	ldrb	r3, [r3, #0]
 8018306:	b91b      	cbnz	r3, 8018310 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018308:	4b08      	ldr	r3, [pc, #32]	; (801832c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801830a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801830e:	4770      	bx	lr
 8018310:	4b07      	ldr	r3, [pc, #28]	; (8018330 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018312:	e7fa      	b.n	801830a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018314:	2000      	movs	r0, #0
 8018316:	4770      	bx	lr
 8018318:	20013854 	.word	0x20013854
 801831c:	2001385c 	.word	0x2001385c
 8018320:	20013858 	.word	0x20013858
 8018324:	2001383c 	.word	0x2001383c
 8018328:	200137c4 	.word	0x200137c4
 801832c:	200137c6 	.word	0x200137c6
 8018330:	200137c8 	.word	0x200137c8

08018334 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018334:	4a12      	ldr	r2, [pc, #72]	; (8018380 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018336:	8803      	ldrh	r3, [r0, #0]
 8018338:	8812      	ldrh	r2, [r2, #0]
 801833a:	4293      	cmp	r3, r2
 801833c:	d207      	bcs.n	801834e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801833e:	4a11      	ldr	r2, [pc, #68]	; (8018384 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018340:	6812      	ldr	r2, [r2, #0]
 8018342:	2114      	movs	r1, #20
 8018344:	fb01 2303 	mla	r3, r1, r3, r2
 8018348:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801834c:	4770      	bx	lr
 801834e:	490e      	ldr	r1, [pc, #56]	; (8018388 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018350:	8809      	ldrh	r1, [r1, #0]
 8018352:	4411      	add	r1, r2
 8018354:	428b      	cmp	r3, r1
 8018356:	da04      	bge.n	8018362 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018358:	1a9b      	subs	r3, r3, r2
 801835a:	4a0c      	ldr	r2, [pc, #48]	; (801838c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801835c:	210e      	movs	r1, #14
 801835e:	6812      	ldr	r2, [r2, #0]
 8018360:	e7f0      	b.n	8018344 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018362:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018366:	4293      	cmp	r3, r2
 8018368:	d108      	bne.n	801837c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801836a:	4b09      	ldr	r3, [pc, #36]	; (8018390 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801836c:	781b      	ldrb	r3, [r3, #0]
 801836e:	b91b      	cbnz	r3, 8018378 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018370:	4b08      	ldr	r3, [pc, #32]	; (8018394 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018372:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018376:	4770      	bx	lr
 8018378:	4b07      	ldr	r3, [pc, #28]	; (8018398 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801837a:	e7fa      	b.n	8018372 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801837c:	2000      	movs	r0, #0
 801837e:	4770      	bx	lr
 8018380:	20013854 	.word	0x20013854
 8018384:	2001385c 	.word	0x2001385c
 8018388:	20013858 	.word	0x20013858
 801838c:	2001383c 	.word	0x2001383c
 8018390:	200137c4 	.word	0x200137c4
 8018394:	200137c8 	.word	0x200137c8
 8018398:	200137c6 	.word	0x200137c6

0801839c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801839c:	b510      	push	{r4, lr}
 801839e:	4a1f      	ldr	r2, [pc, #124]	; (801841c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80183a0:	880b      	ldrh	r3, [r1, #0]
 80183a2:	8812      	ldrh	r2, [r2, #0]
 80183a4:	4293      	cmp	r3, r2
 80183a6:	d213      	bcs.n	80183d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80183a8:	4a1d      	ldr	r2, [pc, #116]	; (8018420 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80183aa:	6812      	ldr	r2, [r2, #0]
 80183ac:	2114      	movs	r1, #20
 80183ae:	fb01 2303 	mla	r3, r1, r3, r2
 80183b2:	8a1a      	ldrh	r2, [r3, #16]
 80183b4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80183b8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80183bc:	8a5b      	ldrh	r3, [r3, #18]
 80183be:	8004      	strh	r4, [r0, #0]
 80183c0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80183c4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80183c8:	8041      	strh	r1, [r0, #2]
 80183ca:	8082      	strh	r2, [r0, #4]
 80183cc:	80c3      	strh	r3, [r0, #6]
 80183ce:	e00e      	b.n	80183ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80183d0:	4914      	ldr	r1, [pc, #80]	; (8018424 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80183d2:	8809      	ldrh	r1, [r1, #0]
 80183d4:	4411      	add	r1, r2
 80183d6:	428b      	cmp	r3, r1
 80183d8:	da0a      	bge.n	80183f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80183da:	1a9b      	subs	r3, r3, r2
 80183dc:	4a12      	ldr	r2, [pc, #72]	; (8018428 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80183de:	6812      	ldr	r2, [r2, #0]
 80183e0:	210e      	movs	r1, #14
 80183e2:	fb01 2303 	mla	r3, r1, r3, r2
 80183e6:	681a      	ldr	r2, [r3, #0]
 80183e8:	6002      	str	r2, [r0, #0]
 80183ea:	685a      	ldr	r2, [r3, #4]
 80183ec:	6042      	str	r2, [r0, #4]
 80183ee:	bd10      	pop	{r4, pc}
 80183f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80183f4:	4293      	cmp	r3, r2
 80183f6:	d10b      	bne.n	8018410 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80183f8:	4b0c      	ldr	r3, [pc, #48]	; (801842c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80183fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80183fe:	4b0c      	ldr	r3, [pc, #48]	; (8018430 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018400:	8081      	strh	r1, [r0, #4]
 8018402:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018406:	80c2      	strh	r2, [r0, #6]
 8018408:	2300      	movs	r3, #0
 801840a:	8003      	strh	r3, [r0, #0]
 801840c:	8043      	strh	r3, [r0, #2]
 801840e:	e7ee      	b.n	80183ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018410:	2300      	movs	r3, #0
 8018412:	8003      	strh	r3, [r0, #0]
 8018414:	8043      	strh	r3, [r0, #2]
 8018416:	8083      	strh	r3, [r0, #4]
 8018418:	e7d8      	b.n	80183cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801841a:	bf00      	nop
 801841c:	20013854 	.word	0x20013854
 8018420:	2001385c 	.word	0x2001385c
 8018424:	20013858 	.word	0x20013858
 8018428:	2001383c 	.word	0x2001383c
 801842c:	200137c0 	.word	0x200137c0
 8018430:	200137c2 	.word	0x200137c2

08018434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018434:	4a17      	ldr	r2, [pc, #92]	; (8018494 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018436:	8803      	ldrh	r3, [r0, #0]
 8018438:	8812      	ldrh	r2, [r2, #0]
 801843a:	4293      	cmp	r3, r2
 801843c:	d213      	bcs.n	8018466 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801843e:	4a16      	ldr	r2, [pc, #88]	; (8018498 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018440:	6812      	ldr	r2, [r2, #0]
 8018442:	2114      	movs	r1, #20
 8018444:	fb01 2303 	mla	r3, r1, r3, r2
 8018448:	8a1a      	ldrh	r2, [r3, #16]
 801844a:	8919      	ldrh	r1, [r3, #8]
 801844c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018450:	428a      	cmp	r2, r1
 8018452:	db1d      	blt.n	8018490 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018454:	8a58      	ldrh	r0, [r3, #18]
 8018456:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801845a:	895b      	ldrh	r3, [r3, #10]
 801845c:	4298      	cmp	r0, r3
 801845e:	bfac      	ite	ge
 8018460:	2000      	movge	r0, #0
 8018462:	2001      	movlt	r0, #1
 8018464:	4770      	bx	lr
 8018466:	490d      	ldr	r1, [pc, #52]	; (801849c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018468:	8809      	ldrh	r1, [r1, #0]
 801846a:	4411      	add	r1, r2
 801846c:	428b      	cmp	r3, r1
 801846e:	da0d      	bge.n	801848c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018470:	1a9b      	subs	r3, r3, r2
 8018472:	4a0b      	ldr	r2, [pc, #44]	; (80184a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018474:	6812      	ldr	r2, [r2, #0]
 8018476:	210e      	movs	r1, #14
 8018478:	fb01 2303 	mla	r3, r1, r3, r2
 801847c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018480:	891a      	ldrh	r2, [r3, #8]
 8018482:	4291      	cmp	r1, r2
 8018484:	db04      	blt.n	8018490 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018486:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801848a:	e7e6      	b.n	801845a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801848c:	2000      	movs	r0, #0
 801848e:	4770      	bx	lr
 8018490:	2001      	movs	r0, #1
 8018492:	4770      	bx	lr
 8018494:	20013854 	.word	0x20013854
 8018498:	2001385c 	.word	0x2001385c
 801849c:	20013858 	.word	0x20013858
 80184a0:	2001383c 	.word	0x2001383c

080184a4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80184a4:	4a12      	ldr	r2, [pc, #72]	; (80184f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80184a6:	8803      	ldrh	r3, [r0, #0]
 80184a8:	8811      	ldrh	r1, [r2, #0]
 80184aa:	428b      	cmp	r3, r1
 80184ac:	d20b      	bcs.n	80184c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80184ae:	4a11      	ldr	r2, [pc, #68]	; (80184f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80184b0:	6812      	ldr	r2, [r2, #0]
 80184b2:	b112      	cbz	r2, 80184ba <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80184b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80184b8:	b9c0      	cbnz	r0, 80184ec <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80184ba:	4a0f      	ldr	r2, [pc, #60]	; (80184f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80184bc:	6811      	ldr	r1, [r2, #0]
 80184be:	2214      	movs	r2, #20
 80184c0:	4353      	muls	r3, r2
 80184c2:	58c8      	ldr	r0, [r1, r3]
 80184c4:	4770      	bx	lr
 80184c6:	4a0d      	ldr	r2, [pc, #52]	; (80184fc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80184c8:	8812      	ldrh	r2, [r2, #0]
 80184ca:	440a      	add	r2, r1
 80184cc:	4293      	cmp	r3, r2
 80184ce:	da04      	bge.n	80184da <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80184d0:	4a08      	ldr	r2, [pc, #32]	; (80184f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80184d2:	6812      	ldr	r2, [r2, #0]
 80184d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80184d8:	4770      	bx	lr
 80184da:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80184de:	4293      	cmp	r3, r2
 80184e0:	d103      	bne.n	80184ea <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80184e2:	4b07      	ldr	r3, [pc, #28]	; (8018500 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80184e4:	681b      	ldr	r3, [r3, #0]
 80184e6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80184e8:	4770      	bx	lr
 80184ea:	2000      	movs	r0, #0
 80184ec:	4770      	bx	lr
 80184ee:	bf00      	nop
 80184f0:	20013854 	.word	0x20013854
 80184f4:	20013838 	.word	0x20013838
 80184f8:	2001385c 	.word	0x2001385c
 80184fc:	20013858 	.word	0x20013858
 8018500:	200137cc 	.word	0x200137cc

08018504 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018504:	4b24      	ldr	r3, [pc, #144]	; (8018598 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018506:	8802      	ldrh	r2, [r0, #0]
 8018508:	8818      	ldrh	r0, [r3, #0]
 801850a:	4282      	cmp	r2, r0
 801850c:	d221      	bcs.n	8018552 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801850e:	4b23      	ldr	r3, [pc, #140]	; (801859c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018510:	6819      	ldr	r1, [r3, #0]
 8018512:	2314      	movs	r3, #20
 8018514:	fb03 1302 	mla	r3, r3, r2, r1
 8018518:	6858      	ldr	r0, [r3, #4]
 801851a:	2800      	cmp	r0, #0
 801851c:	d03a      	beq.n	8018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801851e:	4920      	ldr	r1, [pc, #128]	; (80185a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018520:	6809      	ldr	r1, [r1, #0]
 8018522:	2900      	cmp	r1, #0
 8018524:	d036      	beq.n	8018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018526:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801852a:	2900      	cmp	r1, #0
 801852c:	d032      	beq.n	8018594 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801852e:	891a      	ldrh	r2, [r3, #8]
 8018530:	8958      	ldrh	r0, [r3, #10]
 8018532:	4350      	muls	r0, r2
 8018534:	7c5a      	ldrb	r2, [r3, #17]
 8018536:	7cdb      	ldrb	r3, [r3, #19]
 8018538:	0952      	lsrs	r2, r2, #5
 801853a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801853e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018542:	2b0b      	cmp	r3, #11
 8018544:	bf18      	it	ne
 8018546:	0040      	lslne	r0, r0, #1
 8018548:	3003      	adds	r0, #3
 801854a:	f020 0003 	bic.w	r0, r0, #3
 801854e:	4408      	add	r0, r1
 8018550:	4770      	bx	lr
 8018552:	4b14      	ldr	r3, [pc, #80]	; (80185a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018554:	881b      	ldrh	r3, [r3, #0]
 8018556:	4403      	add	r3, r0
 8018558:	429a      	cmp	r2, r3
 801855a:	da1a      	bge.n	8018592 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801855c:	4b12      	ldr	r3, [pc, #72]	; (80185a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801855e:	681b      	ldr	r3, [r3, #0]
 8018560:	1a10      	subs	r0, r2, r0
 8018562:	210e      	movs	r1, #14
 8018564:	fb01 3000 	mla	r0, r1, r0, r3
 8018568:	7b03      	ldrb	r3, [r0, #12]
 801856a:	f003 031f 	and.w	r3, r3, #31
 801856e:	2b0b      	cmp	r3, #11
 8018570:	d10b      	bne.n	801858a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018572:	8903      	ldrh	r3, [r0, #8]
 8018574:	8940      	ldrh	r0, [r0, #10]
 8018576:	4358      	muls	r0, r3
 8018578:	4b09      	ldr	r3, [pc, #36]	; (80185a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801857a:	6819      	ldr	r1, [r3, #0]
 801857c:	3003      	adds	r0, #3
 801857e:	f020 0303 	bic.w	r3, r0, #3
 8018582:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018586:	4418      	add	r0, r3
 8018588:	4770      	bx	lr
 801858a:	2b0d      	cmp	r3, #13
 801858c:	d101      	bne.n	8018592 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801858e:	300d      	adds	r0, #13
 8018590:	4770      	bx	lr
 8018592:	2000      	movs	r0, #0
 8018594:	4770      	bx	lr
 8018596:	bf00      	nop
 8018598:	20013854 	.word	0x20013854
 801859c:	2001385c 	.word	0x2001385c
 80185a0:	20013838 	.word	0x20013838
 80185a4:	20013858 	.word	0x20013858
 80185a8:	2001383c 	.word	0x2001383c

080185ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80185ac:	b510      	push	{r4, lr}
 80185ae:	4a17      	ldr	r2, [pc, #92]	; (801860c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80185b0:	8803      	ldrh	r3, [r0, #0]
 80185b2:	8812      	ldrh	r2, [r2, #0]
 80185b4:	4293      	cmp	r3, r2
 80185b6:	d20c      	bcs.n	80185d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80185b8:	4a15      	ldr	r2, [pc, #84]	; (8018610 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80185ba:	6812      	ldr	r2, [r2, #0]
 80185bc:	2114      	movs	r1, #20
 80185be:	fb01 2303 	mla	r3, r1, r3, r2
 80185c2:	7c58      	ldrb	r0, [r3, #17]
 80185c4:	0942      	lsrs	r2, r0, #5
 80185c6:	7cd8      	ldrb	r0, [r3, #19]
 80185c8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80185cc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80185d0:	bd10      	pop	{r4, pc}
 80185d2:	4910      	ldr	r1, [pc, #64]	; (8018614 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80185d4:	8809      	ldrh	r1, [r1, #0]
 80185d6:	4411      	add	r1, r2
 80185d8:	428b      	cmp	r3, r1
 80185da:	da09      	bge.n	80185f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80185dc:	1a9b      	subs	r3, r3, r2
 80185de:	4a0e      	ldr	r2, [pc, #56]	; (8018618 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80185e0:	6812      	ldr	r2, [r2, #0]
 80185e2:	210e      	movs	r1, #14
 80185e4:	fb01 2303 	mla	r3, r1, r3, r2
 80185e8:	7b18      	ldrb	r0, [r3, #12]
 80185ea:	f000 001f 	and.w	r0, r0, #31
 80185ee:	e7ef      	b.n	80185d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80185f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80185f4:	4293      	cmp	r3, r2
 80185f6:	d106      	bne.n	8018606 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80185f8:	f7eb f814 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 80185fc:	6803      	ldr	r3, [r0, #0]
 80185fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018602:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018604:	4718      	bx	r3
 8018606:	2000      	movs	r0, #0
 8018608:	e7e2      	b.n	80185d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801860a:	bf00      	nop
 801860c:	20013854 	.word	0x20013854
 8018610:	2001385c 	.word	0x2001385c
 8018614:	20013858 	.word	0x20013858
 8018618:	2001383c 	.word	0x2001383c

0801861c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801861c:	2010      	movs	r0, #16
 801861e:	4770      	bx	lr

08018620 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018620:	2000      	movs	r0, #0
 8018622:	4770      	bx	lr

08018624 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018624:	4b02      	ldr	r3, [pc, #8]	; (8018630 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018626:	8818      	ldrh	r0, [r3, #0]
 8018628:	0040      	lsls	r0, r0, #1
 801862a:	b280      	uxth	r0, r0
 801862c:	4770      	bx	lr
 801862e:	bf00      	nop
 8018630:	200137c6 	.word	0x200137c6

08018634 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018634:	2bff      	cmp	r3, #255	; 0xff
 8018636:	d050      	beq.n	80186da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018638:	2a0b      	cmp	r2, #11
 801863a:	d04a      	beq.n	80186d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801863c:	d80e      	bhi.n	801865c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801863e:	2a03      	cmp	r2, #3
 8018640:	d03f      	beq.n	80186c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018642:	d804      	bhi.n	801864e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018644:	2a01      	cmp	r2, #1
 8018646:	d03e      	beq.n	80186c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018648:	d93f      	bls.n	80186ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801864a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801864c:	4770      	bx	lr
 801864e:	2a09      	cmp	r2, #9
 8018650:	d03f      	beq.n	80186d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018652:	d83c      	bhi.n	80186ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018654:	2a08      	cmp	r2, #8
 8018656:	d03a      	beq.n	80186ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018658:	2000      	movs	r0, #0
 801865a:	4770      	bx	lr
 801865c:	2a2f      	cmp	r2, #47	; 0x2f
 801865e:	d024      	beq.n	80186aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018660:	d80d      	bhi.n	801867e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018662:	2a2d      	cmp	r2, #45	; 0x2d
 8018664:	d014      	beq.n	8018690 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018666:	d826      	bhi.n	80186b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018668:	2a2c      	cmp	r2, #44	; 0x2c
 801866a:	d1f5      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801866c:	684b      	ldr	r3, [r1, #4]
 801866e:	781b      	ldrb	r3, [r3, #0]
 8018670:	2b01      	cmp	r3, #1
 8018672:	d018      	beq.n	80186a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018674:	d323      	bcc.n	80186be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018676:	2b02      	cmp	r3, #2
 8018678:	d1ee      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801867a:	6880      	ldr	r0, [r0, #8]
 801867c:	4770      	bx	lr
 801867e:	2a31      	cmp	r2, #49	; 0x31
 8018680:	d004      	beq.n	801868c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018682:	d328      	bcc.n	80186d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018684:	2a32      	cmp	r2, #50	; 0x32
 8018686:	d026      	beq.n	80186d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018688:	2a33      	cmp	r2, #51	; 0x33
 801868a:	d1e5      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801868c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801868e:	4770      	bx	lr
 8018690:	684b      	ldr	r3, [r1, #4]
 8018692:	781b      	ldrb	r3, [r3, #0]
 8018694:	2b01      	cmp	r3, #1
 8018696:	d004      	beq.n	80186a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018698:	d30b      	bcc.n	80186b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801869a:	2b02      	cmp	r3, #2
 801869c:	d1dc      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801869e:	6900      	ldr	r0, [r0, #16]
 80186a0:	4770      	bx	lr
 80186a2:	6a00      	ldr	r0, [r0, #32]
 80186a4:	4770      	bx	lr
 80186a6:	6980      	ldr	r0, [r0, #24]
 80186a8:	4770      	bx	lr
 80186aa:	684b      	ldr	r3, [r1, #4]
 80186ac:	781b      	ldrb	r3, [r3, #0]
 80186ae:	2b00      	cmp	r3, #0
 80186b0:	d1d2      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80186b2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80186b4:	4770      	bx	lr
 80186b6:	684b      	ldr	r3, [r1, #4]
 80186b8:	781b      	ldrb	r3, [r3, #0]
 80186ba:	2b00      	cmp	r3, #0
 80186bc:	d1cc      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80186be:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80186c0:	4770      	bx	lr
 80186c2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80186c4:	4770      	bx	lr
 80186c6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80186c8:	4770      	bx	lr
 80186ca:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80186cc:	4770      	bx	lr
 80186ce:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80186d0:	4770      	bx	lr
 80186d2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80186d4:	4770      	bx	lr
 80186d6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80186d8:	4770      	bx	lr
 80186da:	2a0b      	cmp	r2, #11
 80186dc:	d049      	beq.n	8018772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80186de:	d80e      	bhi.n	80186fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80186e0:	2a03      	cmp	r2, #3
 80186e2:	d040      	beq.n	8018766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80186e4:	d804      	bhi.n	80186f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80186e6:	2a01      	cmp	r2, #1
 80186e8:	d03f      	beq.n	801876a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80186ea:	d940      	bls.n	801876e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80186ec:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80186ee:	4770      	bx	lr
 80186f0:	2a09      	cmp	r2, #9
 80186f2:	d03e      	beq.n	8018772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80186f4:	d801      	bhi.n	80186fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80186f6:	2a08      	cmp	r2, #8
 80186f8:	d1ae      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80186fa:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80186fc:	4770      	bx	lr
 80186fe:	2a2f      	cmp	r2, #47	; 0x2f
 8018700:	d024      	beq.n	801874c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018702:	d80d      	bhi.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018704:	2a2d      	cmp	r2, #45	; 0x2d
 8018706:	d014      	beq.n	8018732 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018708:	d826      	bhi.n	8018758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801870a:	2a2c      	cmp	r2, #44	; 0x2c
 801870c:	d1a4      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801870e:	684b      	ldr	r3, [r1, #4]
 8018710:	781b      	ldrb	r3, [r3, #0]
 8018712:	2b01      	cmp	r3, #1
 8018714:	d018      	beq.n	8018748 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018716:	d324      	bcc.n	8018762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018718:	2b02      	cmp	r3, #2
 801871a:	d19d      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801871c:	68c0      	ldr	r0, [r0, #12]
 801871e:	4770      	bx	lr
 8018720:	2a31      	cmp	r2, #49	; 0x31
 8018722:	d004      	beq.n	801872e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018724:	d327      	bcc.n	8018776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018726:	2a32      	cmp	r2, #50	; 0x32
 8018728:	d025      	beq.n	8018776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801872a:	2a33      	cmp	r2, #51	; 0x33
 801872c:	d194      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801872e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018730:	4770      	bx	lr
 8018732:	684b      	ldr	r3, [r1, #4]
 8018734:	781b      	ldrb	r3, [r3, #0]
 8018736:	2b01      	cmp	r3, #1
 8018738:	d004      	beq.n	8018744 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801873a:	d30b      	bcc.n	8018754 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801873c:	2b02      	cmp	r3, #2
 801873e:	d18b      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018740:	6940      	ldr	r0, [r0, #20]
 8018742:	4770      	bx	lr
 8018744:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018746:	4770      	bx	lr
 8018748:	69c0      	ldr	r0, [r0, #28]
 801874a:	4770      	bx	lr
 801874c:	684b      	ldr	r3, [r1, #4]
 801874e:	781b      	ldrb	r3, [r3, #0]
 8018750:	2b00      	cmp	r3, #0
 8018752:	d181      	bne.n	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018754:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018756:	4770      	bx	lr
 8018758:	684b      	ldr	r3, [r1, #4]
 801875a:	781b      	ldrb	r3, [r3, #0]
 801875c:	2b00      	cmp	r3, #0
 801875e:	f47f af7b 	bne.w	8018658 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018762:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018764:	4770      	bx	lr
 8018766:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018768:	4770      	bx	lr
 801876a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801876c:	4770      	bx	lr
 801876e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018770:	4770      	bx	lr
 8018772:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018774:	4770      	bx	lr
 8018776:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018778:	4770      	bx	lr

0801877a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801877a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801877e:	b087      	sub	sp, #28
 8018780:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018782:	9205      	str	r2, [sp, #20]
 8018784:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018788:	9202      	str	r2, [sp, #8]
 801878a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801878e:	9101      	str	r1, [sp, #4]
 8018790:	6841      	ldr	r1, [r0, #4]
 8018792:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018796:	fb01 2404 	mla	r4, r1, r4, r2
 801879a:	6802      	ldr	r2, [r0, #0]
 801879c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80187a0:	f8de 2000 	ldr.w	r2, [lr]
 80187a4:	9203      	str	r2, [sp, #12]
 80187a6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80187aa:	3204      	adds	r2, #4
 80187ac:	9204      	str	r2, [sp, #16]
 80187ae:	9a02      	ldr	r2, [sp, #8]
 80187b0:	43d6      	mvns	r6, r2
 80187b2:	b2f6      	uxtb	r6, r6
 80187b4:	9a01      	ldr	r2, [sp, #4]
 80187b6:	2a00      	cmp	r2, #0
 80187b8:	dc03      	bgt.n	80187c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80187ba:	9a05      	ldr	r2, [sp, #20]
 80187bc:	2a00      	cmp	r2, #0
 80187be:	f340 8129 	ble.w	8018a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80187c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80187c4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80187c8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80187cc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80187d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80187d2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80187d6:	2b00      	cmp	r3, #0
 80187d8:	dd0e      	ble.n	80187f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80187da:	1408      	asrs	r0, r1, #16
 80187dc:	d405      	bmi.n	80187ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80187de:	4560      	cmp	r0, ip
 80187e0:	da03      	bge.n	80187ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80187e2:	1410      	asrs	r0, r2, #16
 80187e4:	d401      	bmi.n	80187ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80187e6:	42b8      	cmp	r0, r7
 80187e8:	db07      	blt.n	80187fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80187ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80187ec:	4401      	add	r1, r0
 80187ee:	9814      	ldr	r0, [sp, #80]	; 0x50
 80187f0:	3b01      	subs	r3, #1
 80187f2:	4402      	add	r2, r0
 80187f4:	3402      	adds	r4, #2
 80187f6:	e7ee      	b.n	80187d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80187f8:	d071      	beq.n	80188de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80187fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80187fc:	1e58      	subs	r0, r3, #1
 80187fe:	fb05 1500 	mla	r5, r5, r0, r1
 8018802:	142d      	asrs	r5, r5, #16
 8018804:	d45f      	bmi.n	80188c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018806:	4565      	cmp	r5, ip
 8018808:	da5d      	bge.n	80188c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801880a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801880c:	fb05 2000 	mla	r0, r5, r0, r2
 8018810:	1400      	asrs	r0, r0, #16
 8018812:	d458      	bmi.n	80188c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018814:	42b8      	cmp	r0, r7
 8018816:	da56      	bge.n	80188c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018818:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801881c:	4699      	mov	r9, r3
 801881e:	46a2      	mov	sl, r4
 8018820:	f1b9 0f00 	cmp.w	r9, #0
 8018824:	dd57      	ble.n	80188d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018826:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801882a:	9803      	ldr	r0, [sp, #12]
 801882c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018830:	140d      	asrs	r5, r1, #16
 8018832:	fb07 000c 	mla	r0, r7, ip, r0
 8018836:	f109 39ff 	add.w	r9, r9, #4294967295
 801883a:	5d40      	ldrb	r0, [r0, r5]
 801883c:	9d04      	ldr	r5, [sp, #16]
 801883e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018842:	f8ba 5000 	ldrh.w	r5, [sl]
 8018846:	122f      	asrs	r7, r5, #8
 8018848:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801884c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018850:	fb17 f706 	smulbb	r7, r7, r6
 8018854:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018858:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801885c:	00ed      	lsls	r5, r5, #3
 801885e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018862:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018866:	10c7      	asrs	r7, r0, #3
 8018868:	b2ed      	uxtb	r5, r5
 801886a:	00c0      	lsls	r0, r0, #3
 801886c:	fb18 f806 	smulbb	r8, r8, r6
 8018870:	fb15 f506 	smulbb	r5, r5, r6
 8018874:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018878:	b2c0      	uxtb	r0, r0
 801887a:	fa1f fc8c 	uxth.w	ip, ip
 801887e:	fb07 870b 	mla	r7, r7, fp, r8
 8018882:	fb00 500b 	mla	r0, r0, fp, r5
 8018886:	b280      	uxth	r0, r0
 8018888:	b2bf      	uxth	r7, r7
 801888a:	f10c 0501 	add.w	r5, ip, #1
 801888e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018892:	f107 0801 	add.w	r8, r7, #1
 8018896:	1c45      	adds	r5, r0, #1
 8018898:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801889c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80188a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80188a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80188a6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80188aa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80188ae:	ea45 0c0c 	orr.w	ip, r5, ip
 80188b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80188b6:	4401      	add	r1, r0
 80188b8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80188ba:	ea4c 0c08 	orr.w	ip, ip, r8
 80188be:	f82a cb02 	strh.w	ip, [sl], #2
 80188c2:	4402      	add	r2, r0
 80188c4:	e7ac      	b.n	8018820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80188c6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80188ca:	f04f 0800 	mov.w	r8, #0
 80188ce:	eb03 0008 	add.w	r0, r3, r8
 80188d2:	2800      	cmp	r0, #0
 80188d4:	dc41      	bgt.n	801895a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80188d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80188de:	9b01      	ldr	r3, [sp, #4]
 80188e0:	2b00      	cmp	r3, #0
 80188e2:	f340 8097 	ble.w	8018a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80188e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80188ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80188f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80188fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018900:	eef0 6a62 	vmov.f32	s13, s5
 8018904:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018908:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801890c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018910:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018914:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018918:	eef0 6a43 	vmov.f32	s13, s6
 801891c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018920:	ee12 2a90 	vmov	r2, s5
 8018924:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018928:	fb92 f3f3 	sdiv	r3, r2, r3
 801892c:	ee13 2a10 	vmov	r2, s6
 8018930:	9313      	str	r3, [sp, #76]	; 0x4c
 8018932:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018934:	fb92 f3f3 	sdiv	r3, r2, r3
 8018938:	9314      	str	r3, [sp, #80]	; 0x50
 801893a:	9b01      	ldr	r3, [sp, #4]
 801893c:	9a05      	ldr	r2, [sp, #20]
 801893e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018942:	3b01      	subs	r3, #1
 8018944:	9301      	str	r3, [sp, #4]
 8018946:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801894a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801894c:	eeb0 3a67 	vmov.f32	s6, s15
 8018950:	bf08      	it	eq
 8018952:	4613      	moveq	r3, r2
 8018954:	eef0 2a47 	vmov.f32	s5, s14
 8018958:	e72c      	b.n	80187b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801895a:	140f      	asrs	r7, r1, #16
 801895c:	d453      	bmi.n	8018a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801895e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018962:	42bd      	cmp	r5, r7
 8018964:	dd4f      	ble.n	8018a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018966:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801896a:	d44c      	bmi.n	8018a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801896c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018970:	4560      	cmp	r0, ip
 8018972:	dd48      	ble.n	8018a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018974:	9803      	ldr	r0, [sp, #12]
 8018976:	b22d      	sxth	r5, r5
 8018978:	fb0c 0505 	mla	r5, ip, r5, r0
 801897c:	5de8      	ldrb	r0, [r5, r7]
 801897e:	9d04      	ldr	r5, [sp, #16]
 8018980:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018984:	f06f 0501 	mvn.w	r5, #1
 8018988:	fb05 fb08 	mul.w	fp, r5, r8
 801898c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018990:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018994:	122f      	asrs	r7, r5, #8
 8018996:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801899a:	fb17 f706 	smulbb	r7, r7, r6
 801899e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80189a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80189a6:	00ed      	lsls	r5, r5, #3
 80189a8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80189ac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80189b0:	10c7      	asrs	r7, r0, #3
 80189b2:	b2ed      	uxtb	r5, r5
 80189b4:	00c0      	lsls	r0, r0, #3
 80189b6:	fb19 f906 	smulbb	r9, r9, r6
 80189ba:	fb15 f506 	smulbb	r5, r5, r6
 80189be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189c2:	b2c0      	uxtb	r0, r0
 80189c4:	fa1f fc8c 	uxth.w	ip, ip
 80189c8:	fb07 970a 	mla	r7, r7, sl, r9
 80189cc:	fb00 500a 	mla	r0, r0, sl, r5
 80189d0:	b2bf      	uxth	r7, r7
 80189d2:	b280      	uxth	r0, r0
 80189d4:	f10c 0501 	add.w	r5, ip, #1
 80189d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80189dc:	f107 0901 	add.w	r9, r7, #1
 80189e0:	1c45      	adds	r5, r0, #1
 80189e2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80189e6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80189ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80189ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80189f2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80189f6:	ea45 0c0c 	orr.w	ip, r5, ip
 80189fa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80189fe:	ea4c 0c09 	orr.w	ip, ip, r9
 8018a02:	f824 c00b 	strh.w	ip, [r4, fp]
 8018a06:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a08:	4401      	add	r1, r0
 8018a0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a0c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018a10:	4402      	add	r2, r0
 8018a12:	e75c      	b.n	80188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018a14:	b007      	add	sp, #28
 8018a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018a1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a1e:	b085      	sub	sp, #20
 8018a20:	4693      	mov	fp, r2
 8018a22:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018a24:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018a26:	6870      	ldr	r0, [r6, #4]
 8018a28:	9100      	str	r1, [sp, #0]
 8018a2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018a2e:	fb00 2404 	mla	r4, r0, r4, r2
 8018a32:	6832      	ldr	r2, [r6, #0]
 8018a34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018a38:	682a      	ldr	r2, [r5, #0]
 8018a3a:	9201      	str	r2, [sp, #4]
 8018a3c:	686a      	ldr	r2, [r5, #4]
 8018a3e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018a42:	3204      	adds	r2, #4
 8018a44:	9202      	str	r2, [sp, #8]
 8018a46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018a4a:	9a00      	ldr	r2, [sp, #0]
 8018a4c:	2a00      	cmp	r2, #0
 8018a4e:	dc03      	bgt.n	8018a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018a50:	f1bb 0f00 	cmp.w	fp, #0
 8018a54:	f340 80a0 	ble.w	8018b98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018a58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018a5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018a5e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018a62:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018a66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018a68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018a6c:	2b00      	cmp	r3, #0
 8018a6e:	dd0c      	ble.n	8018a8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018a70:	1406      	asrs	r6, r0, #16
 8018a72:	d405      	bmi.n	8018a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018a74:	454e      	cmp	r6, r9
 8018a76:	da03      	bge.n	8018a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018a78:	1416      	asrs	r6, r2, #16
 8018a7a:	d401      	bmi.n	8018a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018a7c:	4546      	cmp	r6, r8
 8018a7e:	db05      	blt.n	8018a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018a80:	4470      	add	r0, lr
 8018a82:	4462      	add	r2, ip
 8018a84:	3b01      	subs	r3, #1
 8018a86:	3402      	adds	r4, #2
 8018a88:	e7f0      	b.n	8018a6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018a8a:	d00f      	beq.n	8018aac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018a8c:	1e5e      	subs	r6, r3, #1
 8018a8e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018a92:	143f      	asrs	r7, r7, #16
 8018a94:	d541      	bpl.n	8018b1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018a96:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018a9a:	4698      	mov	r8, r3
 8018a9c:	9603      	str	r6, [sp, #12]
 8018a9e:	f1b8 0f00 	cmp.w	r8, #0
 8018aa2:	dc59      	bgt.n	8018b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018aa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018aa8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018aac:	9b00      	ldr	r3, [sp, #0]
 8018aae:	2b00      	cmp	r3, #0
 8018ab0:	dd72      	ble.n	8018b98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018ab2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ab6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018aba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018abe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ac0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ac4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ac8:	eeb0 6a62 	vmov.f32	s12, s5
 8018acc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ad0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ad4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ad8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018adc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ae0:	eeb0 6a43 	vmov.f32	s12, s6
 8018ae4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ae8:	ee12 2a90 	vmov	r2, s5
 8018aec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018af0:	fb92 fef3 	sdiv	lr, r2, r3
 8018af4:	ee13 2a10 	vmov	r2, s6
 8018af8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018afc:	9b00      	ldr	r3, [sp, #0]
 8018afe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b02:	3b01      	subs	r3, #1
 8018b04:	9300      	str	r3, [sp, #0]
 8018b06:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018b0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b0c:	eeb0 3a67 	vmov.f32	s6, s15
 8018b10:	bf08      	it	eq
 8018b12:	465b      	moveq	r3, fp
 8018b14:	eef0 2a47 	vmov.f32	s5, s14
 8018b18:	e797      	b.n	8018a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018b1a:	454f      	cmp	r7, r9
 8018b1c:	dabb      	bge.n	8018a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018b1e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018b22:	1436      	asrs	r6, r6, #16
 8018b24:	d4b7      	bmi.n	8018a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018b26:	4546      	cmp	r6, r8
 8018b28:	dab5      	bge.n	8018a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018b2a:	461e      	mov	r6, r3
 8018b2c:	46a0      	mov	r8, r4
 8018b2e:	2e00      	cmp	r6, #0
 8018b30:	ddb8      	ble.n	8018aa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018b32:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018b36:	9901      	ldr	r1, [sp, #4]
 8018b38:	1417      	asrs	r7, r2, #16
 8018b3a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018b3e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018b42:	9902      	ldr	r1, [sp, #8]
 8018b44:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018b48:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018b4c:	f828 7b02 	strh.w	r7, [r8], #2
 8018b50:	4470      	add	r0, lr
 8018b52:	4462      	add	r2, ip
 8018b54:	3e01      	subs	r6, #1
 8018b56:	e7ea      	b.n	8018b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018b58:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018b5c:	d417      	bmi.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018b5e:	68ae      	ldr	r6, [r5, #8]
 8018b60:	454e      	cmp	r6, r9
 8018b62:	dd14      	ble.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018b64:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018b68:	d411      	bmi.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018b6a:	68ef      	ldr	r7, [r5, #12]
 8018b6c:	4557      	cmp	r7, sl
 8018b6e:	dd0e      	ble.n	8018b8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018b70:	9f01      	ldr	r7, [sp, #4]
 8018b72:	b236      	sxth	r6, r6
 8018b74:	fb0a 7606 	mla	r6, sl, r6, r7
 8018b78:	9f02      	ldr	r7, [sp, #8]
 8018b7a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018b7e:	f06f 0101 	mvn.w	r1, #1
 8018b82:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018b86:	fb01 f608 	mul.w	r6, r1, r8
 8018b8a:	9903      	ldr	r1, [sp, #12]
 8018b8c:	538f      	strh	r7, [r1, r6]
 8018b8e:	4470      	add	r0, lr
 8018b90:	4462      	add	r2, ip
 8018b92:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b96:	e782      	b.n	8018a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018b98:	b005      	add	sp, #20
 8018b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ba2:	b087      	sub	sp, #28
 8018ba4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018ba6:	9205      	str	r2, [sp, #20]
 8018ba8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018bac:	9203      	str	r2, [sp, #12]
 8018bae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018bb2:	9102      	str	r1, [sp, #8]
 8018bb4:	6861      	ldr	r1, [r4, #4]
 8018bb6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018bba:	fb01 2000 	mla	r0, r1, r0, r2
 8018bbe:	6822      	ldr	r2, [r4, #0]
 8018bc0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018bc4:	9200      	str	r2, [sp, #0]
 8018bc6:	f8dc 2000 	ldr.w	r2, [ip]
 8018bca:	9204      	str	r2, [sp, #16]
 8018bcc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018bd0:	3204      	adds	r2, #4
 8018bd2:	9201      	str	r2, [sp, #4]
 8018bd4:	9a03      	ldr	r2, [sp, #12]
 8018bd6:	43d5      	mvns	r5, r2
 8018bd8:	b2ed      	uxtb	r5, r5
 8018bda:	9a02      	ldr	r2, [sp, #8]
 8018bdc:	2a00      	cmp	r2, #0
 8018bde:	dc03      	bgt.n	8018be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018be0:	9a05      	ldr	r2, [sp, #20]
 8018be2:	2a00      	cmp	r2, #0
 8018be4:	f340 812c 	ble.w	8018e40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018be8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018bea:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018bee:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018bf2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018bf6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018bf8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018bfc:	2b00      	cmp	r3, #0
 8018bfe:	dd10      	ble.n	8018c22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c00:	140c      	asrs	r4, r1, #16
 8018c02:	d405      	bmi.n	8018c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c04:	4574      	cmp	r4, lr
 8018c06:	da03      	bge.n	8018c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c08:	1414      	asrs	r4, r2, #16
 8018c0a:	d401      	bmi.n	8018c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c0c:	42bc      	cmp	r4, r7
 8018c0e:	db09      	blt.n	8018c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018c10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018c12:	9800      	ldr	r0, [sp, #0]
 8018c14:	4421      	add	r1, r4
 8018c16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018c18:	3002      	adds	r0, #2
 8018c1a:	4422      	add	r2, r4
 8018c1c:	3b01      	subs	r3, #1
 8018c1e:	9000      	str	r0, [sp, #0]
 8018c20:	e7ec      	b.n	8018bfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018c22:	d071      	beq.n	8018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018c24:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018c26:	1e5c      	subs	r4, r3, #1
 8018c28:	fb06 1604 	mla	r6, r6, r4, r1
 8018c2c:	1436      	asrs	r6, r6, #16
 8018c2e:	d45d      	bmi.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018c30:	4576      	cmp	r6, lr
 8018c32:	da5b      	bge.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018c34:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018c36:	fb06 2404 	mla	r4, r6, r4, r2
 8018c3a:	1424      	asrs	r4, r4, #16
 8018c3c:	d456      	bmi.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018c3e:	42bc      	cmp	r4, r7
 8018c40:	da54      	bge.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018c42:	f8dd 9000 	ldr.w	r9, [sp]
 8018c46:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018c4a:	4698      	mov	r8, r3
 8018c4c:	f1b8 0f00 	cmp.w	r8, #0
 8018c50:	dd54      	ble.n	8018cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018c52:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018c56:	9804      	ldr	r0, [sp, #16]
 8018c58:	1414      	asrs	r4, r2, #16
 8018c5a:	fb07 0404 	mla	r4, r7, r4, r0
 8018c5e:	140e      	asrs	r6, r1, #16
 8018c60:	9801      	ldr	r0, [sp, #4]
 8018c62:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018c66:	f8b9 4000 	ldrh.w	r4, [r9]
 8018c6a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018c6e:	eb00 0b0e 	add.w	fp, r0, lr
 8018c72:	1227      	asrs	r7, r4, #8
 8018c74:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018c78:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018c7c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018c80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018c82:	fb16 f60a 	smulbb	r6, r6, sl
 8018c86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c8a:	fb07 6705 	mla	r7, r7, r5, r6
 8018c8e:	10e6      	asrs	r6, r4, #3
 8018c90:	00e4      	lsls	r4, r4, #3
 8018c92:	b2e4      	uxtb	r4, r4
 8018c94:	fb1b fb0a 	smulbb	fp, fp, sl
 8018c98:	fb14 f405 	smulbb	r4, r4, r5
 8018c9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018ca0:	b2bf      	uxth	r7, r7
 8018ca2:	fb06 b605 	mla	r6, r6, r5, fp
 8018ca6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018caa:	b2b6      	uxth	r6, r6
 8018cac:	fa1f fe8e 	uxth.w	lr, lr
 8018cb0:	1c7c      	adds	r4, r7, #1
 8018cb2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018cb6:	f106 0b01 	add.w	fp, r6, #1
 8018cba:	f10e 0401 	add.w	r4, lr, #1
 8018cbe:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018cc2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018cc6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018cca:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018cce:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018cd2:	4327      	orrs	r7, r4
 8018cd4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018cd8:	4401      	add	r1, r0
 8018cda:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018cdc:	ea47 070b 	orr.w	r7, r7, fp
 8018ce0:	f829 7b02 	strh.w	r7, [r9], #2
 8018ce4:	4402      	add	r2, r0
 8018ce6:	f108 38ff 	add.w	r8, r8, #4294967295
 8018cea:	e7af      	b.n	8018c4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018cec:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018cf0:	f04f 0e00 	mov.w	lr, #0
 8018cf4:	eb03 040e 	add.w	r4, r3, lr
 8018cf8:	2c00      	cmp	r4, #0
 8018cfa:	dc43      	bgt.n	8018d84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018cfc:	9a00      	ldr	r2, [sp, #0]
 8018cfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d02:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018d06:	9300      	str	r3, [sp, #0]
 8018d08:	9b02      	ldr	r3, [sp, #8]
 8018d0a:	2b00      	cmp	r3, #0
 8018d0c:	f340 8098 	ble.w	8018e40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018d10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018d14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018d1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018d22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d2a:	eef0 6a62 	vmov.f32	s13, s5
 8018d2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d3a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018d3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d42:	eef0 6a43 	vmov.f32	s13, s6
 8018d46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d4a:	ee12 2a90 	vmov	r2, s5
 8018d4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d52:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d56:	ee13 2a10 	vmov	r2, s6
 8018d5a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d62:	9314      	str	r3, [sp, #80]	; 0x50
 8018d64:	9b02      	ldr	r3, [sp, #8]
 8018d66:	9a05      	ldr	r2, [sp, #20]
 8018d68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d6c:	3b01      	subs	r3, #1
 8018d6e:	9302      	str	r3, [sp, #8]
 8018d70:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018d74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d76:	eeb0 3a67 	vmov.f32	s6, s15
 8018d7a:	bf08      	it	eq
 8018d7c:	4613      	moveq	r3, r2
 8018d7e:	eef0 2a47 	vmov.f32	s5, s14
 8018d82:	e72a      	b.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018d84:	140f      	asrs	r7, r1, #16
 8018d86:	d454      	bmi.n	8018e32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018d88:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018d8c:	42be      	cmp	r6, r7
 8018d8e:	dd50      	ble.n	8018e32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018d90:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018d94:	d44d      	bmi.n	8018e32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018d96:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018d9a:	4544      	cmp	r4, r8
 8018d9c:	dd49      	ble.n	8018e32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018d9e:	9c04      	ldr	r4, [sp, #16]
 8018da0:	b236      	sxth	r6, r6
 8018da2:	fb08 4606 	mla	r6, r8, r6, r4
 8018da6:	f06f 0001 	mvn.w	r0, #1
 8018daa:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018dae:	9c01      	ldr	r4, [sp, #4]
 8018db0:	fb00 fa0e 	mul.w	sl, r0, lr
 8018db4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018db8:	9800      	ldr	r0, [sp, #0]
 8018dba:	eb04 0b08 	add.w	fp, r4, r8
 8018dbe:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018dc2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018dc6:	9801      	ldr	r0, [sp, #4]
 8018dc8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018dcc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018dd0:	9800      	ldr	r0, [sp, #0]
 8018dd2:	1227      	asrs	r7, r4, #8
 8018dd4:	fb16 f609 	smulbb	r6, r6, r9
 8018dd8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018ddc:	fb07 6705 	mla	r7, r7, r5, r6
 8018de0:	10e6      	asrs	r6, r4, #3
 8018de2:	00e4      	lsls	r4, r4, #3
 8018de4:	b2e4      	uxtb	r4, r4
 8018de6:	fb1b fb09 	smulbb	fp, fp, r9
 8018dea:	fb14 f405 	smulbb	r4, r4, r5
 8018dee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018df2:	b2bf      	uxth	r7, r7
 8018df4:	fb06 b605 	mla	r6, r6, r5, fp
 8018df8:	fb08 4809 	mla	r8, r8, r9, r4
 8018dfc:	b2b6      	uxth	r6, r6
 8018dfe:	fa1f f888 	uxth.w	r8, r8
 8018e02:	1c7c      	adds	r4, r7, #1
 8018e04:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018e08:	f106 0b01 	add.w	fp, r6, #1
 8018e0c:	f108 0401 	add.w	r4, r8, #1
 8018e10:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018e14:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018e18:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e1c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018e20:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018e24:	4327      	orrs	r7, r4
 8018e26:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018e2a:	ea47 070b 	orr.w	r7, r7, fp
 8018e2e:	f820 700a 	strh.w	r7, [r0, sl]
 8018e32:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018e34:	4401      	add	r1, r0
 8018e36:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018e38:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018e3c:	4402      	add	r2, r0
 8018e3e:	e759      	b.n	8018cf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018e40:	b007      	add	sp, #28
 8018e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e4c:	b085      	sub	sp, #20
 8018e4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018e52:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018e54:	9203      	str	r2, [sp, #12]
 8018e56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018e5a:	6870      	ldr	r0, [r6, #4]
 8018e5c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018e5e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018e62:	686f      	ldr	r7, [r5, #4]
 8018e64:	9101      	str	r1, [sp, #4]
 8018e66:	fb00 2404 	mla	r4, r0, r4, r2
 8018e6a:	6832      	ldr	r2, [r6, #0]
 8018e6c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e70:	682a      	ldr	r2, [r5, #0]
 8018e72:	9202      	str	r2, [sp, #8]
 8018e74:	3704      	adds	r7, #4
 8018e76:	9a01      	ldr	r2, [sp, #4]
 8018e78:	2a00      	cmp	r2, #0
 8018e7a:	dc03      	bgt.n	8018e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018e7c:	9a03      	ldr	r2, [sp, #12]
 8018e7e:	2a00      	cmp	r2, #0
 8018e80:	f340 80cc 	ble.w	801901c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018e84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018e86:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018e8a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018e8e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018e92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e94:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e98:	2b00      	cmp	r3, #0
 8018e9a:	dd0d      	ble.n	8018eb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e9c:	1406      	asrs	r6, r0, #16
 8018e9e:	d405      	bmi.n	8018eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ea0:	454e      	cmp	r6, r9
 8018ea2:	da03      	bge.n	8018eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ea4:	1416      	asrs	r6, r2, #16
 8018ea6:	d401      	bmi.n	8018eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ea8:	4546      	cmp	r6, r8
 8018eaa:	db06      	blt.n	8018eba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018eac:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018eae:	4460      	add	r0, ip
 8018eb0:	4432      	add	r2, r6
 8018eb2:	3b01      	subs	r3, #1
 8018eb4:	3402      	adds	r4, #2
 8018eb6:	e7ef      	b.n	8018e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018eb8:	d00f      	beq.n	8018eda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018eba:	1e5e      	subs	r6, r3, #1
 8018ebc:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018ec0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018ec4:	d543      	bpl.n	8018f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018ec6:	4698      	mov	r8, r3
 8018ec8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018ecc:	f1b8 0f00 	cmp.w	r8, #0
 8018ed0:	dc71      	bgt.n	8018fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018ed2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ed6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018eda:	9b01      	ldr	r3, [sp, #4]
 8018edc:	2b00      	cmp	r3, #0
 8018ede:	f340 809d 	ble.w	801901c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018ee2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ee6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018eee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ef0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ef4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ef8:	eeb0 6a62 	vmov.f32	s12, s5
 8018efc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f08:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018f0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f10:	eeb0 6a43 	vmov.f32	s12, s6
 8018f14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f18:	ee12 2a90 	vmov	r2, s5
 8018f1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f20:	fb92 fcf3 	sdiv	ip, r2, r3
 8018f24:	ee13 2a10 	vmov	r2, s6
 8018f28:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f2c:	9312      	str	r3, [sp, #72]	; 0x48
 8018f2e:	9b01      	ldr	r3, [sp, #4]
 8018f30:	9a03      	ldr	r2, [sp, #12]
 8018f32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f36:	3b01      	subs	r3, #1
 8018f38:	9301      	str	r3, [sp, #4]
 8018f3a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018f3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f40:	eeb0 3a67 	vmov.f32	s6, s15
 8018f44:	bf08      	it	eq
 8018f46:	4613      	moveq	r3, r2
 8018f48:	eef0 2a47 	vmov.f32	s5, s14
 8018f4c:	e793      	b.n	8018e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018f4e:	45ce      	cmp	lr, r9
 8018f50:	dab9      	bge.n	8018ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018f52:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018f54:	fb01 2606 	mla	r6, r1, r6, r2
 8018f58:	1436      	asrs	r6, r6, #16
 8018f5a:	d4b4      	bmi.n	8018ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018f5c:	4546      	cmp	r6, r8
 8018f5e:	dab2      	bge.n	8018ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018f60:	4698      	mov	r8, r3
 8018f62:	46a2      	mov	sl, r4
 8018f64:	f1b8 0f00 	cmp.w	r8, #0
 8018f68:	ddb3      	ble.n	8018ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018f6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018f6e:	9902      	ldr	r1, [sp, #8]
 8018f70:	1416      	asrs	r6, r2, #16
 8018f72:	fb09 1606 	mla	r6, r9, r6, r1
 8018f76:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018f7a:	492a      	ldr	r1, [pc, #168]	; (8019024 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018f7c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018f80:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018f84:	eb07 0b0e 	add.w	fp, r7, lr
 8018f88:	4460      	add	r0, ip
 8018f8a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018f8e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018f92:	00f6      	lsls	r6, r6, #3
 8018f94:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018f98:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018f9c:	ea49 0606 	orr.w	r6, r9, r6
 8018fa0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018fa4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018fa6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018faa:	f82a 6b02 	strh.w	r6, [sl], #2
 8018fae:	440a      	add	r2, r1
 8018fb0:	f108 38ff 	add.w	r8, r8, #4294967295
 8018fb4:	e7d6      	b.n	8018f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018fb6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018fba:	d429      	bmi.n	8019010 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018fbc:	68ae      	ldr	r6, [r5, #8]
 8018fbe:	454e      	cmp	r6, r9
 8018fc0:	dd26      	ble.n	8019010 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018fc2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018fc6:	d423      	bmi.n	8019010 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018fc8:	68e9      	ldr	r1, [r5, #12]
 8018fca:	4559      	cmp	r1, fp
 8018fcc:	dd20      	ble.n	8019010 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018fce:	9902      	ldr	r1, [sp, #8]
 8018fd0:	fa0f fe86 	sxth.w	lr, r6
 8018fd4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018fd8:	f06f 0101 	mvn.w	r1, #1
 8018fdc:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018fe0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018fe4:	eb07 060e 	add.w	r6, r7, lr
 8018fe8:	fb01 f908 	mul.w	r9, r1, r8
 8018fec:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018ff0:	7876      	ldrb	r6, [r6, #1]
 8018ff2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8018ff6:	00f6      	lsls	r6, r6, #3
 8018ff8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018ffc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019000:	ea4b 0606 	orr.w	r6, fp, r6
 8019004:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019008:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801900c:	f82a 6009 	strh.w	r6, [sl, r9]
 8019010:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019012:	4460      	add	r0, ip
 8019014:	440a      	add	r2, r1
 8019016:	f108 38ff 	add.w	r8, r8, #4294967295
 801901a:	e757      	b.n	8018ecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801901c:	b005      	add	sp, #20
 801901e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019022:	bf00      	nop
 8019024:	fffff800 	.word	0xfffff800

08019028 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801902c:	b087      	sub	sp, #28
 801902e:	468b      	mov	fp, r1
 8019030:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019032:	9204      	str	r2, [sp, #16]
 8019034:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019038:	9205      	str	r2, [sp, #20]
 801903a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801903e:	6841      	ldr	r1, [r0, #4]
 8019040:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019044:	fb01 2404 	mla	r4, r1, r4, r2
 8019048:	6802      	ldr	r2, [r0, #0]
 801904a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801904e:	f8dc 2000 	ldr.w	r2, [ip]
 8019052:	9201      	str	r2, [sp, #4]
 8019054:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019058:	3204      	adds	r2, #4
 801905a:	9202      	str	r2, [sp, #8]
 801905c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019060:	f1bb 0f00 	cmp.w	fp, #0
 8019064:	dc03      	bgt.n	801906e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019066:	9a04      	ldr	r2, [sp, #16]
 8019068:	2a00      	cmp	r2, #0
 801906a:	f340 8138 	ble.w	80192de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801906e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019070:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019074:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019078:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801907c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801907e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019082:	2b00      	cmp	r3, #0
 8019084:	dd0e      	ble.n	80190a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019086:	1402      	asrs	r2, r0, #16
 8019088:	d405      	bmi.n	8019096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801908a:	42ba      	cmp	r2, r7
 801908c:	da03      	bge.n	8019096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801908e:	140a      	asrs	r2, r1, #16
 8019090:	d401      	bmi.n	8019096 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019092:	42b2      	cmp	r2, r6
 8019094:	db07      	blt.n	80190a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019096:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019098:	4410      	add	r0, r2
 801909a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801909c:	3b01      	subs	r3, #1
 801909e:	4411      	add	r1, r2
 80190a0:	3402      	adds	r4, #2
 80190a2:	e7ee      	b.n	8019082 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80190a4:	d019      	beq.n	80190da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80190a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80190a8:	1e5a      	subs	r2, r3, #1
 80190aa:	fb05 0502 	mla	r5, r5, r2, r0
 80190ae:	142d      	asrs	r5, r5, #16
 80190b0:	d409      	bmi.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80190b2:	42bd      	cmp	r5, r7
 80190b4:	da07      	bge.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80190b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80190b8:	fb05 1202 	mla	r2, r5, r2, r1
 80190bc:	1412      	asrs	r2, r2, #16
 80190be:	d402      	bmi.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80190c0:	42b2      	cmp	r2, r6
 80190c2:	f2c0 80ac 	blt.w	801921e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80190c6:	f04f 0e00 	mov.w	lr, #0
 80190ca:	eb03 020e 	add.w	r2, r3, lr
 80190ce:	2a00      	cmp	r2, #0
 80190d0:	dc3e      	bgt.n	8019150 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80190d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80190da:	f1bb 0f00 	cmp.w	fp, #0
 80190de:	f340 80fe 	ble.w	80192de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80190e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80190e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80190ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80190ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80190f0:	f1bb 0b01 	subs.w	fp, fp, #1
 80190f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80190f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80190fc:	eeb0 6a62 	vmov.f32	s12, s5
 8019100:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019104:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019108:	ee77 2a62 	vsub.f32	s5, s14, s5
 801910c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019110:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019114:	eeb0 6a43 	vmov.f32	s12, s6
 8019118:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801911c:	ee12 2a90 	vmov	r2, s5
 8019120:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019124:	fb92 f3f3 	sdiv	r3, r2, r3
 8019128:	ee13 2a10 	vmov	r2, s6
 801912c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019130:	9313      	str	r3, [sp, #76]	; 0x4c
 8019132:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019134:	fb92 f3f3 	sdiv	r3, r2, r3
 8019138:	9a04      	ldr	r2, [sp, #16]
 801913a:	9314      	str	r3, [sp, #80]	; 0x50
 801913c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019140:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019142:	eeb0 3a67 	vmov.f32	s6, s15
 8019146:	bf08      	it	eq
 8019148:	4613      	moveq	r3, r2
 801914a:	eef0 2a47 	vmov.f32	s5, s14
 801914e:	e787      	b.n	8019060 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019150:	1406      	asrs	r6, r0, #16
 8019152:	d45d      	bmi.n	8019210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019154:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019158:	42b5      	cmp	r5, r6
 801915a:	dd59      	ble.n	8019210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801915c:	140f      	asrs	r7, r1, #16
 801915e:	d457      	bmi.n	8019210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019160:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019164:	42ba      	cmp	r2, r7
 8019166:	dd53      	ble.n	8019210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019168:	9a01      	ldr	r2, [sp, #4]
 801916a:	b22d      	sxth	r5, r5
 801916c:	fb07 2505 	mla	r5, r7, r5, r2
 8019170:	5daa      	ldrb	r2, [r5, r6]
 8019172:	9d02      	ldr	r5, [sp, #8]
 8019174:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019178:	0e2e      	lsrs	r6, r5, #24
 801917a:	d049      	beq.n	8019210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801917c:	f06f 0201 	mvn.w	r2, #1
 8019180:	fb02 f20e 	mul.w	r2, r2, lr
 8019184:	9203      	str	r2, [sp, #12]
 8019186:	f834 8002 	ldrh.w	r8, [r4, r2]
 801918a:	9a05      	ldr	r2, [sp, #20]
 801918c:	4356      	muls	r6, r2
 801918e:	1c72      	adds	r2, r6, #1
 8019190:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019194:	1212      	asrs	r2, r2, #8
 8019196:	fa1f f982 	uxth.w	r9, r2
 801919a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801919e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80191a2:	43d2      	mvns	r2, r2
 80191a4:	b2d2      	uxtb	r2, r2
 80191a6:	fb16 f609 	smulbb	r6, r6, r9
 80191aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80191ae:	fb07 6702 	mla	r7, r7, r2, r6
 80191b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80191b6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80191ba:	b2ed      	uxtb	r5, r5
 80191bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80191c0:	fa5f f888 	uxtb.w	r8, r8
 80191c4:	fb15 f509 	smulbb	r5, r5, r9
 80191c8:	fb08 5502 	mla	r5, r8, r2, r5
 80191cc:	b2bf      	uxth	r7, r7
 80191ce:	fb1a fa09 	smulbb	sl, sl, r9
 80191d2:	b2ad      	uxth	r5, r5
 80191d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191d8:	fb06 a602 	mla	r6, r6, r2, sl
 80191dc:	1c7a      	adds	r2, r7, #1
 80191de:	f105 0a01 	add.w	sl, r5, #1
 80191e2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80191e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80191ea:	b2b6      	uxth	r6, r6
 80191ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80191f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80191f4:	ea4a 0707 	orr.w	r7, sl, r7
 80191f8:	f106 0a01 	add.w	sl, r6, #1
 80191fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019200:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019204:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019208:	9a03      	ldr	r2, [sp, #12]
 801920a:	ea47 070a 	orr.w	r7, r7, sl
 801920e:	52a7      	strh	r7, [r4, r2]
 8019210:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019212:	4410      	add	r0, r2
 8019214:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019216:	f10e 3eff 	add.w	lr, lr, #4294967295
 801921a:	4411      	add	r1, r2
 801921c:	e755      	b.n	80190ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801921e:	f04f 0800 	mov.w	r8, #0
 8019222:	eba3 0208 	sub.w	r2, r3, r8
 8019226:	2a00      	cmp	r2, #0
 8019228:	f77f af53 	ble.w	80190d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801922c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019230:	9f01      	ldr	r7, [sp, #4]
 8019232:	140a      	asrs	r2, r1, #16
 8019234:	1405      	asrs	r5, r0, #16
 8019236:	fb06 7202 	mla	r2, r6, r2, r7
 801923a:	5d52      	ldrb	r2, [r2, r5]
 801923c:	9d02      	ldr	r5, [sp, #8]
 801923e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019242:	0e2e      	lsrs	r6, r5, #24
 8019244:	d044      	beq.n	80192d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019246:	9a05      	ldr	r2, [sp, #20]
 8019248:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801924c:	4356      	muls	r6, r2
 801924e:	1c72      	adds	r2, r6, #1
 8019250:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019254:	1212      	asrs	r2, r2, #8
 8019256:	fa1f f982 	uxth.w	r9, r2
 801925a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801925e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019262:	43d2      	mvns	r2, r2
 8019264:	b2d2      	uxtb	r2, r2
 8019266:	fb16 f609 	smulbb	r6, r6, r9
 801926a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801926e:	fb07 6702 	mla	r7, r7, r2, r6
 8019272:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019276:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801927a:	b2ed      	uxtb	r5, r5
 801927c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019280:	fa5f fe8e 	uxtb.w	lr, lr
 8019284:	fb15 f509 	smulbb	r5, r5, r9
 8019288:	fb0e 5502 	mla	r5, lr, r2, r5
 801928c:	b2bf      	uxth	r7, r7
 801928e:	fb1a fa09 	smulbb	sl, sl, r9
 8019292:	b2ad      	uxth	r5, r5
 8019294:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019298:	fb06 a602 	mla	r6, r6, r2, sl
 801929c:	1c7a      	adds	r2, r7, #1
 801929e:	f105 0a01 	add.w	sl, r5, #1
 80192a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80192a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80192aa:	b2b6      	uxth	r6, r6
 80192ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80192b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80192b4:	ea4a 0707 	orr.w	r7, sl, r7
 80192b8:	f106 0a01 	add.w	sl, r6, #1
 80192bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80192c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80192c8:	ea47 070a 	orr.w	r7, r7, sl
 80192cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80192d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80192d2:	4410      	add	r0, r2
 80192d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80192d6:	f108 0801 	add.w	r8, r8, #1
 80192da:	4411      	add	r1, r2
 80192dc:	e7a1      	b.n	8019222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80192de:	b007      	add	sp, #28
 80192e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192e8:	b085      	sub	sp, #20
 80192ea:	468b      	mov	fp, r1
 80192ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80192ee:	9203      	str	r2, [sp, #12]
 80192f0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80192f4:	6841      	ldr	r1, [r0, #4]
 80192f6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80192fa:	fb01 2404 	mla	r4, r1, r4, r2
 80192fe:	6802      	ldr	r2, [r0, #0]
 8019300:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019304:	f8de 2000 	ldr.w	r2, [lr]
 8019308:	9200      	str	r2, [sp, #0]
 801930a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801930e:	3204      	adds	r2, #4
 8019310:	9201      	str	r2, [sp, #4]
 8019312:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019316:	f1bb 0f00 	cmp.w	fp, #0
 801931a:	dc03      	bgt.n	8019324 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801931c:	9a03      	ldr	r2, [sp, #12]
 801931e:	2a00      	cmp	r2, #0
 8019320:	f340 8153 	ble.w	80195ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019324:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019326:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801932a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801932e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019332:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019334:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019338:	2b00      	cmp	r3, #0
 801933a:	dd0e      	ble.n	801935a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801933c:	1408      	asrs	r0, r1, #16
 801933e:	d405      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019340:	42b8      	cmp	r0, r7
 8019342:	da03      	bge.n	801934c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019344:	1410      	asrs	r0, r2, #16
 8019346:	d401      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019348:	42b0      	cmp	r0, r6
 801934a:	db07      	blt.n	801935c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801934c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801934e:	4401      	add	r1, r0
 8019350:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019352:	3b01      	subs	r3, #1
 8019354:	4402      	add	r2, r0
 8019356:	3402      	adds	r4, #2
 8019358:	e7ee      	b.n	8019338 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801935a:	d017      	beq.n	801938c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801935c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801935e:	1e58      	subs	r0, r3, #1
 8019360:	fb05 1500 	mla	r5, r5, r0, r1
 8019364:	142d      	asrs	r5, r5, #16
 8019366:	d409      	bmi.n	801937c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019368:	42bd      	cmp	r5, r7
 801936a:	da07      	bge.n	801937c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801936c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801936e:	fb05 2000 	mla	r0, r5, r0, r2
 8019372:	1400      	asrs	r0, r0, #16
 8019374:	d402      	bmi.n	801937c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019376:	42b0      	cmp	r0, r6
 8019378:	f2c0 80bc 	blt.w	80194f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801937c:	2600      	movs	r6, #0
 801937e:	1998      	adds	r0, r3, r6
 8019380:	2800      	cmp	r0, #0
 8019382:	dc3e      	bgt.n	8019402 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019384:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019388:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801938c:	f1bb 0f00 	cmp.w	fp, #0
 8019390:	f340 811b 	ble.w	80195ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019394:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019398:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801939c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80193a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80193a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80193aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80193ae:	eeb0 6a62 	vmov.f32	s12, s5
 80193b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80193b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193be:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80193c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193c6:	eeb0 6a43 	vmov.f32	s12, s6
 80193ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193ce:	ee12 2a90 	vmov	r2, s5
 80193d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80193da:	ee13 2a10 	vmov	r2, s6
 80193de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193e2:	9311      	str	r3, [sp, #68]	; 0x44
 80193e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80193ea:	9a03      	ldr	r2, [sp, #12]
 80193ec:	9312      	str	r3, [sp, #72]	; 0x48
 80193ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80193f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80193f4:	eeb0 3a67 	vmov.f32	s6, s15
 80193f8:	bf08      	it	eq
 80193fa:	4613      	moveq	r3, r2
 80193fc:	eef0 2a47 	vmov.f32	s5, s14
 8019400:	e789      	b.n	8019316 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019402:	140f      	asrs	r7, r1, #16
 8019404:	d426      	bmi.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019406:	f8de 5008 	ldr.w	r5, [lr, #8]
 801940a:	42bd      	cmp	r5, r7
 801940c:	dd22      	ble.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801940e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019412:	d41f      	bmi.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019414:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019418:	4560      	cmp	r0, ip
 801941a:	dd1b      	ble.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801941c:	9800      	ldr	r0, [sp, #0]
 801941e:	b22d      	sxth	r5, r5
 8019420:	fb0c 0505 	mla	r5, ip, r5, r0
 8019424:	5de8      	ldrb	r0, [r5, r7]
 8019426:	9d01      	ldr	r5, [sp, #4]
 8019428:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801942c:	0e07      	lsrs	r7, r0, #24
 801942e:	2fff      	cmp	r7, #255	; 0xff
 8019430:	d116      	bne.n	8019460 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019432:	f06f 0501 	mvn.w	r5, #1
 8019436:	fb05 f706 	mul.w	r7, r5, r6
 801943a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801943e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019442:	0945      	lsrs	r5, r0, #5
 8019444:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019448:	ea4c 0505 	orr.w	r5, ip, r5
 801944c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019450:	4305      	orrs	r5, r0
 8019452:	53e5      	strh	r5, [r4, r7]
 8019454:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019456:	4401      	add	r1, r0
 8019458:	9812      	ldr	r0, [sp, #72]	; 0x48
 801945a:	3e01      	subs	r6, #1
 801945c:	4402      	add	r2, r0
 801945e:	e78e      	b.n	801937e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019460:	b2fd      	uxtb	r5, r7
 8019462:	2f00      	cmp	r7, #0
 8019464:	d0f6      	beq.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019466:	f06f 0701 	mvn.w	r7, #1
 801946a:	4377      	muls	r7, r6
 801946c:	fa1f f985 	uxth.w	r9, r5
 8019470:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019474:	9702      	str	r7, [sp, #8]
 8019476:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801947a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801947e:	43ed      	mvns	r5, r5
 8019480:	b2ed      	uxtb	r5, r5
 8019482:	fb17 f709 	smulbb	r7, r7, r9
 8019486:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801948a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801948e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019492:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019496:	b2c0      	uxtb	r0, r0
 8019498:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801949c:	fa5f f888 	uxtb.w	r8, r8
 80194a0:	fb10 f009 	smulbb	r0, r0, r9
 80194a4:	fb08 0005 	mla	r0, r8, r5, r0
 80194a8:	b280      	uxth	r0, r0
 80194aa:	fa1f fc8c 	uxth.w	ip, ip
 80194ae:	fb1a fa09 	smulbb	sl, sl, r9
 80194b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80194b6:	fb07 a705 	mla	r7, r7, r5, sl
 80194ba:	f100 0a01 	add.w	sl, r0, #1
 80194be:	f10c 0501 	add.w	r5, ip, #1
 80194c2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80194c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80194ca:	b2bf      	uxth	r7, r7
 80194cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80194d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80194d4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80194d8:	f107 0a01 	add.w	sl, r7, #1
 80194dc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80194e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80194e8:	9802      	ldr	r0, [sp, #8]
 80194ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80194ee:	f824 c000 	strh.w	ip, [r4, r0]
 80194f2:	e7af      	b.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194f4:	f04f 0800 	mov.w	r8, #0
 80194f8:	eba3 0008 	sub.w	r0, r3, r8
 80194fc:	2800      	cmp	r0, #0
 80194fe:	f77f af41 	ble.w	8019384 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019502:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019506:	9f00      	ldr	r7, [sp, #0]
 8019508:	1410      	asrs	r0, r2, #16
 801950a:	140d      	asrs	r5, r1, #16
 801950c:	fb06 7000 	mla	r0, r6, r0, r7
 8019510:	5d40      	ldrb	r0, [r0, r5]
 8019512:	9d01      	ldr	r5, [sp, #4]
 8019514:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019518:	0e2e      	lsrs	r6, r5, #24
 801951a:	2eff      	cmp	r6, #255	; 0xff
 801951c:	d112      	bne.n	8019544 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801951e:	482c      	ldr	r0, [pc, #176]	; (80195d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019520:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019524:	0968      	lsrs	r0, r5, #5
 8019526:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801952a:	4330      	orrs	r0, r6
 801952c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019530:	4328      	orrs	r0, r5
 8019532:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019536:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019538:	4401      	add	r1, r0
 801953a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801953c:	f108 0801 	add.w	r8, r8, #1
 8019540:	4402      	add	r2, r0
 8019542:	e7d9      	b.n	80194f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019544:	b2f0      	uxtb	r0, r6
 8019546:	2e00      	cmp	r6, #0
 8019548:	d0f5      	beq.n	8019536 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801954a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801954e:	fa1f f980 	uxth.w	r9, r0
 8019552:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019556:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801955a:	43c0      	mvns	r0, r0
 801955c:	b2c0      	uxtb	r0, r0
 801955e:	fb16 f609 	smulbb	r6, r6, r9
 8019562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019566:	fb07 6700 	mla	r7, r7, r0, r6
 801956a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801956e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019572:	b2ed      	uxtb	r5, r5
 8019574:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019578:	fa5f fc8c 	uxtb.w	ip, ip
 801957c:	fb15 f509 	smulbb	r5, r5, r9
 8019580:	fb0c 5500 	mla	r5, ip, r0, r5
 8019584:	b2bf      	uxth	r7, r7
 8019586:	fb1a fa09 	smulbb	sl, sl, r9
 801958a:	b2ad      	uxth	r5, r5
 801958c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019590:	fb06 a600 	mla	r6, r6, r0, sl
 8019594:	1c78      	adds	r0, r7, #1
 8019596:	f105 0a01 	add.w	sl, r5, #1
 801959a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801959e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80195a2:	b2b6      	uxth	r6, r6
 80195a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195ac:	ea4a 0707 	orr.w	r7, sl, r7
 80195b0:	f106 0a01 	add.w	sl, r6, #1
 80195b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195c0:	ea47 070a 	orr.w	r7, r7, sl
 80195c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80195c8:	e7b5      	b.n	8019536 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80195ca:	b005      	add	sp, #20
 80195cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195d0:	fffff800 	.word	0xfffff800

080195d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80195d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195d8:	b087      	sub	sp, #28
 80195da:	468b      	mov	fp, r1
 80195dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80195de:	9204      	str	r2, [sp, #16]
 80195e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80195e4:	9205      	str	r2, [sp, #20]
 80195e6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80195ea:	6861      	ldr	r1, [r4, #4]
 80195ec:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80195f0:	fb01 2000 	mla	r0, r1, r0, r2
 80195f4:	6822      	ldr	r2, [r4, #0]
 80195f6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80195fa:	f8de 2000 	ldr.w	r2, [lr]
 80195fe:	9201      	str	r2, [sp, #4]
 8019600:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019604:	9202      	str	r2, [sp, #8]
 8019606:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801960a:	f1bb 0f00 	cmp.w	fp, #0
 801960e:	dc03      	bgt.n	8019618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019610:	9a04      	ldr	r2, [sp, #16]
 8019612:	2a00      	cmp	r2, #0
 8019614:	f340 8142 	ble.w	801989c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019618:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801961a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801961e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019622:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019626:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019628:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801962c:	2b00      	cmp	r3, #0
 801962e:	dd0e      	ble.n	801964e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019630:	140c      	asrs	r4, r1, #16
 8019632:	d405      	bmi.n	8019640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019634:	42bc      	cmp	r4, r7
 8019636:	da03      	bge.n	8019640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019638:	1414      	asrs	r4, r2, #16
 801963a:	d401      	bmi.n	8019640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801963c:	42b4      	cmp	r4, r6
 801963e:	db07      	blt.n	8019650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019640:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019642:	4421      	add	r1, r4
 8019644:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019646:	3b01      	subs	r3, #1
 8019648:	4422      	add	r2, r4
 801964a:	3002      	adds	r0, #2
 801964c:	e7ee      	b.n	801962c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801964e:	d019      	beq.n	8019684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019650:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019652:	1e5c      	subs	r4, r3, #1
 8019654:	fb05 1504 	mla	r5, r5, r4, r1
 8019658:	142d      	asrs	r5, r5, #16
 801965a:	d409      	bmi.n	8019670 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801965c:	42bd      	cmp	r5, r7
 801965e:	da07      	bge.n	8019670 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019660:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019662:	fb05 2404 	mla	r4, r5, r4, r2
 8019666:	1424      	asrs	r4, r4, #16
 8019668:	d402      	bmi.n	8019670 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801966a:	42b4      	cmp	r4, r6
 801966c:	f2c0 80b1 	blt.w	80197d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019670:	f04f 0800 	mov.w	r8, #0
 8019674:	eb03 0408 	add.w	r4, r3, r8
 8019678:	2c00      	cmp	r4, #0
 801967a:	dc3e      	bgt.n	80196fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801967c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019680:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019684:	f1bb 0f00 	cmp.w	fp, #0
 8019688:	f340 8108 	ble.w	801989c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801968c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019690:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019694:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019698:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801969a:	f1bb 0b01 	subs.w	fp, fp, #1
 801969e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80196a6:	eeb0 6a62 	vmov.f32	s12, s5
 80196aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80196ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80196b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80196b6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80196ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80196be:	eeb0 6a43 	vmov.f32	s12, s6
 80196c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80196c6:	ee12 2a90 	vmov	r2, s5
 80196ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80196ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80196d2:	ee13 2a10 	vmov	r2, s6
 80196d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80196da:	9313      	str	r3, [sp, #76]	; 0x4c
 80196dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80196de:	fb92 f3f3 	sdiv	r3, r2, r3
 80196e2:	9a04      	ldr	r2, [sp, #16]
 80196e4:	9314      	str	r3, [sp, #80]	; 0x50
 80196e6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80196ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80196ec:	eeb0 3a67 	vmov.f32	s6, s15
 80196f0:	bf08      	it	eq
 80196f2:	4613      	moveq	r3, r2
 80196f4:	eef0 2a47 	vmov.f32	s5, s14
 80196f8:	e787      	b.n	801960a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80196fa:	140e      	asrs	r6, r1, #16
 80196fc:	d462      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80196fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019702:	42b5      	cmp	r5, r6
 8019704:	dd5e      	ble.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019706:	1417      	asrs	r7, r2, #16
 8019708:	d45c      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801970a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801970e:	42bc      	cmp	r4, r7
 8019710:	dd58      	ble.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019712:	b22d      	sxth	r5, r5
 8019714:	fb07 6505 	mla	r5, r7, r5, r6
 8019718:	9c02      	ldr	r4, [sp, #8]
 801971a:	5d66      	ldrb	r6, [r4, r5]
 801971c:	2e00      	cmp	r6, #0
 801971e:	d051      	beq.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019720:	9c01      	ldr	r4, [sp, #4]
 8019722:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019726:	f06f 0401 	mvn.w	r4, #1
 801972a:	fb04 f408 	mul.w	r4, r4, r8
 801972e:	9403      	str	r4, [sp, #12]
 8019730:	5b05      	ldrh	r5, [r0, r4]
 8019732:	9c05      	ldr	r4, [sp, #20]
 8019734:	4366      	muls	r6, r4
 8019736:	1c74      	adds	r4, r6, #1
 8019738:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801973c:	1224      	asrs	r4, r4, #8
 801973e:	b2a7      	uxth	r7, r4
 8019740:	122e      	asrs	r6, r5, #8
 8019742:	43e4      	mvns	r4, r4
 8019744:	b2e4      	uxtb	r4, r4
 8019746:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801974a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801974e:	fb16 f604 	smulbb	r6, r6, r4
 8019752:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019756:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801975a:	00ed      	lsls	r5, r5, #3
 801975c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019760:	b2ed      	uxtb	r5, r5
 8019762:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019766:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801976a:	fb15 f504 	smulbb	r5, r5, r4
 801976e:	fa5f f989 	uxtb.w	r9, r9
 8019772:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019776:	fb09 5507 	mla	r5, r9, r7, r5
 801977a:	fb1a fa04 	smulbb	sl, sl, r4
 801977e:	fa1f fc8c 	uxth.w	ip, ip
 8019782:	b2ad      	uxth	r5, r5
 8019784:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019788:	fb06 a607 	mla	r6, r6, r7, sl
 801978c:	f10c 0401 	add.w	r4, ip, #1
 8019790:	f105 0a01 	add.w	sl, r5, #1
 8019794:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019798:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801979c:	b2b6      	uxth	r6, r6
 801979e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80197a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80197a6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80197aa:	f106 0a01 	add.w	sl, r6, #1
 80197ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80197b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80197b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80197ba:	9c03      	ldr	r4, [sp, #12]
 80197bc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80197c0:	f820 c004 	strh.w	ip, [r0, r4]
 80197c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80197c6:	4421      	add	r1, r4
 80197c8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80197ce:	4422      	add	r2, r4
 80197d0:	e750      	b.n	8019674 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197d2:	f04f 0900 	mov.w	r9, #0
 80197d6:	eba3 0409 	sub.w	r4, r3, r9
 80197da:	2c00      	cmp	r4, #0
 80197dc:	f77f af4e 	ble.w	801967c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80197e0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80197e4:	140d      	asrs	r5, r1, #16
 80197e6:	1414      	asrs	r4, r2, #16
 80197e8:	fb06 5404 	mla	r4, r6, r4, r5
 80197ec:	9d02      	ldr	r5, [sp, #8]
 80197ee:	5d2e      	ldrb	r6, [r5, r4]
 80197f0:	2e00      	cmp	r6, #0
 80197f2:	d04c      	beq.n	801988e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80197f4:	9d01      	ldr	r5, [sp, #4]
 80197f6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80197fa:	9c05      	ldr	r4, [sp, #20]
 80197fc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019800:	4366      	muls	r6, r4
 8019802:	1c74      	adds	r4, r6, #1
 8019804:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019808:	1224      	asrs	r4, r4, #8
 801980a:	b2a7      	uxth	r7, r4
 801980c:	122e      	asrs	r6, r5, #8
 801980e:	43e4      	mvns	r4, r4
 8019810:	b2e4      	uxtb	r4, r4
 8019812:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019816:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801981a:	fb16 f604 	smulbb	r6, r6, r4
 801981e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019822:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019826:	00ed      	lsls	r5, r5, #3
 8019828:	fb0c 6c07 	mla	ip, ip, r7, r6
 801982c:	b2ed      	uxtb	r5, r5
 801982e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019832:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019836:	fb15 f504 	smulbb	r5, r5, r4
 801983a:	fa5f f888 	uxtb.w	r8, r8
 801983e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019842:	fb08 5507 	mla	r5, r8, r7, r5
 8019846:	fb1a fa04 	smulbb	sl, sl, r4
 801984a:	fa1f fc8c 	uxth.w	ip, ip
 801984e:	b2ad      	uxth	r5, r5
 8019850:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019854:	fb06 a607 	mla	r6, r6, r7, sl
 8019858:	f10c 0401 	add.w	r4, ip, #1
 801985c:	f105 0a01 	add.w	sl, r5, #1
 8019860:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019864:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019868:	b2b6      	uxth	r6, r6
 801986a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801986e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019872:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019876:	f106 0a01 	add.w	sl, r6, #1
 801987a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801987e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019882:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019886:	ea4c 0c0a 	orr.w	ip, ip, sl
 801988a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801988e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019890:	4421      	add	r1, r4
 8019892:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019894:	f109 0901 	add.w	r9, r9, #1
 8019898:	4422      	add	r2, r4
 801989a:	e79c      	b.n	80197d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801989c:	b007      	add	sp, #28
 801989e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080198a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198a6:	b085      	sub	sp, #20
 80198a8:	468b      	mov	fp, r1
 80198aa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80198ac:	9203      	str	r2, [sp, #12]
 80198ae:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80198b2:	6861      	ldr	r1, [r4, #4]
 80198b4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80198b8:	fb01 2000 	mla	r0, r1, r0, r2
 80198bc:	6822      	ldr	r2, [r4, #0]
 80198be:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80198c2:	f8d8 2000 	ldr.w	r2, [r8]
 80198c6:	9200      	str	r2, [sp, #0]
 80198c8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80198cc:	9201      	str	r2, [sp, #4]
 80198ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80198d2:	f1bb 0f00 	cmp.w	fp, #0
 80198d6:	dc03      	bgt.n	80198e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80198d8:	9a03      	ldr	r2, [sp, #12]
 80198da:	2a00      	cmp	r2, #0
 80198dc:	f340 8146 	ble.w	8019b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80198e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80198e2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80198e6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80198ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80198ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80198f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80198f4:	2b00      	cmp	r3, #0
 80198f6:	dd0e      	ble.n	8019916 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80198f8:	140c      	asrs	r4, r1, #16
 80198fa:	d405      	bmi.n	8019908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80198fc:	42bc      	cmp	r4, r7
 80198fe:	da03      	bge.n	8019908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019900:	1414      	asrs	r4, r2, #16
 8019902:	d401      	bmi.n	8019908 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019904:	42b4      	cmp	r4, r6
 8019906:	db07      	blt.n	8019918 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019908:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801990a:	4421      	add	r1, r4
 801990c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801990e:	3b01      	subs	r3, #1
 8019910:	4422      	add	r2, r4
 8019912:	3002      	adds	r0, #2
 8019914:	e7ee      	b.n	80198f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019916:	d017      	beq.n	8019948 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019918:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801991a:	1e5c      	subs	r4, r3, #1
 801991c:	fb05 1504 	mla	r5, r5, r4, r1
 8019920:	142d      	asrs	r5, r5, #16
 8019922:	d409      	bmi.n	8019938 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019924:	42bd      	cmp	r5, r7
 8019926:	da07      	bge.n	8019938 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019928:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801992a:	fb05 2404 	mla	r4, r5, r4, r2
 801992e:	1424      	asrs	r4, r4, #16
 8019930:	d402      	bmi.n	8019938 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019932:	42b4      	cmp	r4, r6
 8019934:	f2c0 80b3 	blt.w	8019a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019938:	2600      	movs	r6, #0
 801993a:	199c      	adds	r4, r3, r6
 801993c:	2c00      	cmp	r4, #0
 801993e:	dc3e      	bgt.n	80199be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019940:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019944:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019948:	f1bb 0f00 	cmp.w	fp, #0
 801994c:	f340 810e 	ble.w	8019b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019950:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019954:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019958:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801995c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801995e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019962:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019966:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801996a:	eeb0 6a62 	vmov.f32	s12, s5
 801996e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019972:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019976:	ee77 2a62 	vsub.f32	s5, s14, s5
 801997a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801997e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019982:	eeb0 6a43 	vmov.f32	s12, s6
 8019986:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801998a:	ee12 2a90 	vmov	r2, s5
 801998e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019992:	fb92 f3f3 	sdiv	r3, r2, r3
 8019996:	ee13 2a10 	vmov	r2, s6
 801999a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801999e:	9311      	str	r3, [sp, #68]	; 0x44
 80199a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80199a6:	9a03      	ldr	r2, [sp, #12]
 80199a8:	9312      	str	r3, [sp, #72]	; 0x48
 80199aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80199ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199b0:	eeb0 3a67 	vmov.f32	s6, s15
 80199b4:	bf08      	it	eq
 80199b6:	4613      	moveq	r3, r2
 80199b8:	eef0 2a47 	vmov.f32	s5, s14
 80199bc:	e789      	b.n	80198d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80199be:	140f      	asrs	r7, r1, #16
 80199c0:	d418      	bmi.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80199c2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80199c6:	42bd      	cmp	r5, r7
 80199c8:	dd14      	ble.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80199ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80199ce:	d411      	bmi.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80199d0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80199d4:	4564      	cmp	r4, ip
 80199d6:	dd0d      	ble.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80199d8:	b22d      	sxth	r5, r5
 80199da:	fb0c 7505 	mla	r5, ip, r5, r7
 80199de:	9c01      	ldr	r4, [sp, #4]
 80199e0:	5d64      	ldrb	r4, [r4, r5]
 80199e2:	2cff      	cmp	r4, #255	; 0xff
 80199e4:	d10c      	bne.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80199e6:	9c00      	ldr	r4, [sp, #0]
 80199e8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80199ec:	f06f 0401 	mvn.w	r4, #1
 80199f0:	4374      	muls	r4, r6
 80199f2:	5305      	strh	r5, [r0, r4]
 80199f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80199f6:	4421      	add	r1, r4
 80199f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80199fa:	3e01      	subs	r6, #1
 80199fc:	4422      	add	r2, r4
 80199fe:	e79c      	b.n	801993a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019a00:	2c00      	cmp	r4, #0
 8019a02:	d0f7      	beq.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a04:	9f00      	ldr	r7, [sp, #0]
 8019a06:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019a0a:	f06f 0501 	mvn.w	r5, #1
 8019a0e:	4375      	muls	r5, r6
 8019a10:	9502      	str	r5, [sp, #8]
 8019a12:	5b45      	ldrh	r5, [r0, r5]
 8019a14:	fa1f fc84 	uxth.w	ip, r4
 8019a18:	122f      	asrs	r7, r5, #8
 8019a1a:	43e4      	mvns	r4, r4
 8019a1c:	b2e4      	uxtb	r4, r4
 8019a1e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019a22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a26:	fb17 f704 	smulbb	r7, r7, r4
 8019a2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019a2e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019a32:	00ed      	lsls	r5, r5, #3
 8019a34:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019a38:	b2ed      	uxtb	r5, r5
 8019a3a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019a3e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019a42:	fb15 f504 	smulbb	r5, r5, r4
 8019a46:	fa5f f989 	uxtb.w	r9, r9
 8019a4a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019a4e:	fb09 550c 	mla	r5, r9, ip, r5
 8019a52:	fb1a fa04 	smulbb	sl, sl, r4
 8019a56:	fa1f fe8e 	uxth.w	lr, lr
 8019a5a:	b2ad      	uxth	r5, r5
 8019a5c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a60:	fb07 a70c 	mla	r7, r7, ip, sl
 8019a64:	f10e 0401 	add.w	r4, lr, #1
 8019a68:	f105 0a01 	add.w	sl, r5, #1
 8019a6c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019a70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a74:	b2bf      	uxth	r7, r7
 8019a76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a7a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019a7e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019a82:	f107 0a01 	add.w	sl, r7, #1
 8019a86:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019a8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a8e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a92:	9c02      	ldr	r4, [sp, #8]
 8019a94:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019a98:	f820 e004 	strh.w	lr, [r0, r4]
 8019a9c:	e7aa      	b.n	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a9e:	f04f 0900 	mov.w	r9, #0
 8019aa2:	eba3 0409 	sub.w	r4, r3, r9
 8019aa6:	2c00      	cmp	r4, #0
 8019aa8:	f77f af4a 	ble.w	8019940 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019aac:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019ab0:	1414      	asrs	r4, r2, #16
 8019ab2:	140d      	asrs	r5, r1, #16
 8019ab4:	fb06 5504 	mla	r5, r6, r4, r5
 8019ab8:	9c01      	ldr	r4, [sp, #4]
 8019aba:	5d64      	ldrb	r4, [r4, r5]
 8019abc:	2cff      	cmp	r4, #255	; 0xff
 8019abe:	d10b      	bne.n	8019ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019ac0:	9c00      	ldr	r4, [sp, #0]
 8019ac2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019ac6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019aca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019acc:	4421      	add	r1, r4
 8019ace:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ad0:	f109 0901 	add.w	r9, r9, #1
 8019ad4:	4422      	add	r2, r4
 8019ad6:	e7e4      	b.n	8019aa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019ad8:	2c00      	cmp	r4, #0
 8019ada:	d0f6      	beq.n	8019aca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019adc:	9e00      	ldr	r6, [sp, #0]
 8019ade:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019ae2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ae6:	b2a7      	uxth	r7, r4
 8019ae8:	122e      	asrs	r6, r5, #8
 8019aea:	43e4      	mvns	r4, r4
 8019aec:	b2e4      	uxtb	r4, r4
 8019aee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019af2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019af6:	fb16 f604 	smulbb	r6, r6, r4
 8019afa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019afe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b02:	00ed      	lsls	r5, r5, #3
 8019b04:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b08:	b2ed      	uxtb	r5, r5
 8019b0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019b0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019b12:	fb15 f504 	smulbb	r5, r5, r4
 8019b16:	fa5f fe8e 	uxtb.w	lr, lr
 8019b1a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b1e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019b22:	fb1a fa04 	smulbb	sl, sl, r4
 8019b26:	fa1f fc8c 	uxth.w	ip, ip
 8019b2a:	b2ad      	uxth	r5, r5
 8019b2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b30:	fb06 a607 	mla	r6, r6, r7, sl
 8019b34:	f10c 0401 	add.w	r4, ip, #1
 8019b38:	f105 0a01 	add.w	sl, r5, #1
 8019b3c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b40:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b44:	b2b6      	uxth	r6, r6
 8019b46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b4e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b52:	f106 0a01 	add.w	sl, r6, #1
 8019b56:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019b5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b62:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019b66:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019b6a:	e7ae      	b.n	8019aca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019b6c:	b005      	add	sp, #20
 8019b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b76:	b085      	sub	sp, #20
 8019b78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019b7a:	9203      	str	r2, [sp, #12]
 8019b7c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019b80:	9201      	str	r2, [sp, #4]
 8019b82:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019b86:	9100      	str	r1, [sp, #0]
 8019b88:	6841      	ldr	r1, [r0, #4]
 8019b8a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019b8e:	fb01 2404 	mla	r4, r1, r4, r2
 8019b92:	6802      	ldr	r2, [r0, #0]
 8019b94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b98:	f8de 2000 	ldr.w	r2, [lr]
 8019b9c:	9202      	str	r2, [sp, #8]
 8019b9e:	9a01      	ldr	r2, [sp, #4]
 8019ba0:	43d6      	mvns	r6, r2
 8019ba2:	b2f6      	uxtb	r6, r6
 8019ba4:	9a00      	ldr	r2, [sp, #0]
 8019ba6:	2a00      	cmp	r2, #0
 8019ba8:	dc03      	bgt.n	8019bb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019baa:	9a03      	ldr	r2, [sp, #12]
 8019bac:	2a00      	cmp	r2, #0
 8019bae:	f340 8124 	ble.w	8019dfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019bb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019bb4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019bb8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019bbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019bc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019bc6:	2b00      	cmp	r3, #0
 8019bc8:	dd0e      	ble.n	8019be8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019bca:	1408      	asrs	r0, r1, #16
 8019bcc:	d405      	bmi.n	8019bda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bce:	4560      	cmp	r0, ip
 8019bd0:	da03      	bge.n	8019bda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bd2:	1410      	asrs	r0, r2, #16
 8019bd4:	d401      	bmi.n	8019bda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019bd6:	42b8      	cmp	r0, r7
 8019bd8:	db07      	blt.n	8019bea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019bda:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019bdc:	4401      	add	r1, r0
 8019bde:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019be0:	3b01      	subs	r3, #1
 8019be2:	4402      	add	r2, r0
 8019be4:	3402      	adds	r4, #2
 8019be6:	e7ee      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019be8:	d06e      	beq.n	8019cc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019bea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019bec:	1e58      	subs	r0, r3, #1
 8019bee:	fb05 1500 	mla	r5, r5, r0, r1
 8019bf2:	142d      	asrs	r5, r5, #16
 8019bf4:	d45c      	bmi.n	8019cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019bf6:	4565      	cmp	r5, ip
 8019bf8:	da5a      	bge.n	8019cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019bfa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019bfc:	fb05 2000 	mla	r0, r5, r0, r2
 8019c00:	1400      	asrs	r0, r0, #16
 8019c02:	d455      	bmi.n	8019cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c04:	42b8      	cmp	r0, r7
 8019c06:	da53      	bge.n	8019cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019c08:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019c0c:	4699      	mov	r9, r3
 8019c0e:	46a2      	mov	sl, r4
 8019c10:	f1b9 0f00 	cmp.w	r9, #0
 8019c14:	dd54      	ble.n	8019cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019c16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019c1a:	140d      	asrs	r5, r1, #16
 8019c1c:	1410      	asrs	r0, r2, #16
 8019c1e:	fb07 5000 	mla	r0, r7, r0, r5
 8019c22:	9d02      	ldr	r5, [sp, #8]
 8019c24:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019c28:	f8ba 5000 	ldrh.w	r5, [sl]
 8019c2c:	122f      	asrs	r7, r5, #8
 8019c2e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019c32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c36:	fb17 f706 	smulbb	r7, r7, r6
 8019c3a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019c3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c42:	00ed      	lsls	r5, r5, #3
 8019c44:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019c48:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019c4c:	10c7      	asrs	r7, r0, #3
 8019c4e:	b2ed      	uxtb	r5, r5
 8019c50:	00c0      	lsls	r0, r0, #3
 8019c52:	fb18 f806 	smulbb	r8, r8, r6
 8019c56:	fb15 f506 	smulbb	r5, r5, r6
 8019c5a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c5e:	b2c0      	uxtb	r0, r0
 8019c60:	fa1f fc8c 	uxth.w	ip, ip
 8019c64:	fb07 870b 	mla	r7, r7, fp, r8
 8019c68:	fb00 500b 	mla	r0, r0, fp, r5
 8019c6c:	b280      	uxth	r0, r0
 8019c6e:	b2bf      	uxth	r7, r7
 8019c70:	f10c 0501 	add.w	r5, ip, #1
 8019c74:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019c78:	f107 0801 	add.w	r8, r7, #1
 8019c7c:	1c45      	adds	r5, r0, #1
 8019c7e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019c82:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019c86:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019c88:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c8c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019c90:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019c94:	ea45 0c0c 	orr.w	ip, r5, ip
 8019c98:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019c9c:	4401      	add	r1, r0
 8019c9e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019ca0:	ea4c 0c08 	orr.w	ip, ip, r8
 8019ca4:	f82a cb02 	strh.w	ip, [sl], #2
 8019ca8:	4402      	add	r2, r0
 8019caa:	f109 39ff 	add.w	r9, r9, #4294967295
 8019cae:	e7af      	b.n	8019c10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019cb0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019cb4:	f04f 0800 	mov.w	r8, #0
 8019cb8:	eb03 0008 	add.w	r0, r3, r8
 8019cbc:	2800      	cmp	r0, #0
 8019cbe:	dc41      	bgt.n	8019d44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019cc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019cc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019cc8:	9b00      	ldr	r3, [sp, #0]
 8019cca:	2b00      	cmp	r3, #0
 8019ccc:	f340 8095 	ble.w	8019dfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019cd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cd4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019cd8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019cdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019cde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ce2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ce6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cea:	eef0 6a62 	vmov.f32	s13, s5
 8019cee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019cf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019cf6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cfa:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019cfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d02:	eef0 6a43 	vmov.f32	s13, s6
 8019d06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d0a:	ee12 2a90 	vmov	r2, s5
 8019d0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d12:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d16:	ee13 2a10 	vmov	r2, s6
 8019d1a:	9311      	str	r3, [sp, #68]	; 0x44
 8019d1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d22:	9312      	str	r3, [sp, #72]	; 0x48
 8019d24:	9b00      	ldr	r3, [sp, #0]
 8019d26:	9a03      	ldr	r2, [sp, #12]
 8019d28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d2c:	3b01      	subs	r3, #1
 8019d2e:	9300      	str	r3, [sp, #0]
 8019d30:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019d34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d36:	eeb0 3a67 	vmov.f32	s6, s15
 8019d3a:	bf08      	it	eq
 8019d3c:	4613      	moveq	r3, r2
 8019d3e:	eef0 2a47 	vmov.f32	s5, s14
 8019d42:	e72f      	b.n	8019ba4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019d44:	140f      	asrs	r7, r1, #16
 8019d46:	d451      	bmi.n	8019dec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019d48:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019d4c:	42bd      	cmp	r5, r7
 8019d4e:	dd4d      	ble.n	8019dec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019d50:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019d54:	d44a      	bmi.n	8019dec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019d56:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019d5a:	4560      	cmp	r0, ip
 8019d5c:	dd46      	ble.n	8019dec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019d5e:	b22d      	sxth	r5, r5
 8019d60:	fb0c 7505 	mla	r5, ip, r5, r7
 8019d64:	9802      	ldr	r0, [sp, #8]
 8019d66:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019d6a:	f06f 0501 	mvn.w	r5, #1
 8019d6e:	fb05 fb08 	mul.w	fp, r5, r8
 8019d72:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d76:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019d7a:	122f      	asrs	r7, r5, #8
 8019d7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d80:	fb17 f706 	smulbb	r7, r7, r6
 8019d84:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019d88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d8c:	00ed      	lsls	r5, r5, #3
 8019d8e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019d92:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019d96:	10c7      	asrs	r7, r0, #3
 8019d98:	b2ed      	uxtb	r5, r5
 8019d9a:	00c0      	lsls	r0, r0, #3
 8019d9c:	fb19 f906 	smulbb	r9, r9, r6
 8019da0:	fb15 f506 	smulbb	r5, r5, r6
 8019da4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019da8:	b2c0      	uxtb	r0, r0
 8019daa:	fa1f fc8c 	uxth.w	ip, ip
 8019dae:	fb07 970a 	mla	r7, r7, sl, r9
 8019db2:	fb00 500a 	mla	r0, r0, sl, r5
 8019db6:	b2bf      	uxth	r7, r7
 8019db8:	b280      	uxth	r0, r0
 8019dba:	f10c 0501 	add.w	r5, ip, #1
 8019dbe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019dc2:	f107 0901 	add.w	r9, r7, #1
 8019dc6:	1c45      	adds	r5, r0, #1
 8019dc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019dcc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019dd0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019dd4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019dd8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ddc:	ea45 0c0c 	orr.w	ip, r5, ip
 8019de0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019de4:	ea4c 0c09 	orr.w	ip, ip, r9
 8019de8:	f824 c00b 	strh.w	ip, [r4, fp]
 8019dec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019dee:	4401      	add	r1, r0
 8019df0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019df2:	f108 38ff 	add.w	r8, r8, #4294967295
 8019df6:	4402      	add	r2, r0
 8019df8:	e75e      	b.n	8019cb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019dfa:	b005      	add	sp, #20
 8019dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e04:	b085      	sub	sp, #20
 8019e06:	4693      	mov	fp, r2
 8019e08:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019e0a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019e0c:	6870      	ldr	r0, [r6, #4]
 8019e0e:	9101      	str	r1, [sp, #4]
 8019e10:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e14:	fb00 2404 	mla	r4, r0, r4, r2
 8019e18:	6832      	ldr	r2, [r6, #0]
 8019e1a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019e1e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e22:	682a      	ldr	r2, [r5, #0]
 8019e24:	9202      	str	r2, [sp, #8]
 8019e26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019e2a:	9a01      	ldr	r2, [sp, #4]
 8019e2c:	2a00      	cmp	r2, #0
 8019e2e:	dc03      	bgt.n	8019e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019e30:	f1bb 0f00 	cmp.w	fp, #0
 8019e34:	f340 809a 	ble.w	8019f6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019e38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e3a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019e3e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019e42:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019e46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019e48:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019e4c:	2b00      	cmp	r3, #0
 8019e4e:	dd0c      	ble.n	8019e6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019e50:	1406      	asrs	r6, r0, #16
 8019e52:	d405      	bmi.n	8019e60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019e54:	454e      	cmp	r6, r9
 8019e56:	da03      	bge.n	8019e60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019e58:	1416      	asrs	r6, r2, #16
 8019e5a:	d401      	bmi.n	8019e60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019e5c:	4546      	cmp	r6, r8
 8019e5e:	db05      	blt.n	8019e6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019e60:	4470      	add	r0, lr
 8019e62:	4462      	add	r2, ip
 8019e64:	3b01      	subs	r3, #1
 8019e66:	3402      	adds	r4, #2
 8019e68:	e7f0      	b.n	8019e4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019e6a:	d00f      	beq.n	8019e8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019e6c:	1e5e      	subs	r6, r3, #1
 8019e6e:	fb0e 0706 	mla	r7, lr, r6, r0
 8019e72:	143f      	asrs	r7, r7, #16
 8019e74:	d541      	bpl.n	8019efa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019e76:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019e7a:	4698      	mov	r8, r3
 8019e7c:	9603      	str	r6, [sp, #12]
 8019e7e:	f1b8 0f00 	cmp.w	r8, #0
 8019e82:	dc56      	bgt.n	8019f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019e84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e8c:	9b01      	ldr	r3, [sp, #4]
 8019e8e:	2b00      	cmp	r3, #0
 8019e90:	dd6c      	ble.n	8019f6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019e92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019e9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ea0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ea4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ea8:	eeb0 6a62 	vmov.f32	s12, s5
 8019eac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019eb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019eb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019eb8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019ebc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ec0:	eeb0 6a43 	vmov.f32	s12, s6
 8019ec4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ec8:	ee12 2a90 	vmov	r2, s5
 8019ecc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ed0:	fb92 fef3 	sdiv	lr, r2, r3
 8019ed4:	ee13 2a10 	vmov	r2, s6
 8019ed8:	fb92 fcf3 	sdiv	ip, r2, r3
 8019edc:	9b01      	ldr	r3, [sp, #4]
 8019ede:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ee2:	3b01      	subs	r3, #1
 8019ee4:	9301      	str	r3, [sp, #4]
 8019ee6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019eea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019eec:	eeb0 3a67 	vmov.f32	s6, s15
 8019ef0:	bf08      	it	eq
 8019ef2:	465b      	moveq	r3, fp
 8019ef4:	eef0 2a47 	vmov.f32	s5, s14
 8019ef8:	e797      	b.n	8019e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019efa:	454f      	cmp	r7, r9
 8019efc:	dabb      	bge.n	8019e76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019efe:	fb0c 2606 	mla	r6, ip, r6, r2
 8019f02:	1436      	asrs	r6, r6, #16
 8019f04:	d4b7      	bmi.n	8019e76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f06:	4546      	cmp	r6, r8
 8019f08:	dab5      	bge.n	8019e76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f0a:	461e      	mov	r6, r3
 8019f0c:	46a0      	mov	r8, r4
 8019f0e:	2e00      	cmp	r6, #0
 8019f10:	ddb8      	ble.n	8019e84 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019f12:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019f16:	9902      	ldr	r1, [sp, #8]
 8019f18:	1417      	asrs	r7, r2, #16
 8019f1a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019f1e:	fb0a 9707 	mla	r7, sl, r7, r9
 8019f22:	4470      	add	r0, lr
 8019f24:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019f28:	f828 7b02 	strh.w	r7, [r8], #2
 8019f2c:	4462      	add	r2, ip
 8019f2e:	3e01      	subs	r6, #1
 8019f30:	e7ed      	b.n	8019f0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019f32:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019f36:	d414      	bmi.n	8019f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019f38:	68ae      	ldr	r6, [r5, #8]
 8019f3a:	454e      	cmp	r6, r9
 8019f3c:	dd11      	ble.n	8019f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019f3e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019f42:	d40e      	bmi.n	8019f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019f44:	68ef      	ldr	r7, [r5, #12]
 8019f46:	4557      	cmp	r7, sl
 8019f48:	dd0b      	ble.n	8019f62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019f4a:	b236      	sxth	r6, r6
 8019f4c:	fb0a 9606 	mla	r6, sl, r6, r9
 8019f50:	9f02      	ldr	r7, [sp, #8]
 8019f52:	f06f 0101 	mvn.w	r1, #1
 8019f56:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019f5a:	fb01 f608 	mul.w	r6, r1, r8
 8019f5e:	9903      	ldr	r1, [sp, #12]
 8019f60:	538f      	strh	r7, [r1, r6]
 8019f62:	4470      	add	r0, lr
 8019f64:	4462      	add	r2, ip
 8019f66:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f6a:	e788      	b.n	8019e7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019f6c:	b005      	add	sp, #20
 8019f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f76:	b087      	sub	sp, #28
 8019f78:	468b      	mov	fp, r1
 8019f7a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019f7c:	9203      	str	r2, [sp, #12]
 8019f7e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019f82:	9204      	str	r2, [sp, #16]
 8019f84:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8019f88:	6841      	ldr	r1, [r0, #4]
 8019f8a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019f8e:	fb01 2505 	mla	r5, r1, r5, r2
 8019f92:	6802      	ldr	r2, [r0, #0]
 8019f94:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019f98:	f8d9 2000 	ldr.w	r2, [r9]
 8019f9c:	9201      	str	r2, [sp, #4]
 8019f9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019fa2:	f1bb 0f00 	cmp.w	fp, #0
 8019fa6:	dc03      	bgt.n	8019fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019fa8:	9a03      	ldr	r2, [sp, #12]
 8019faa:	2a00      	cmp	r2, #0
 8019fac:	f340 8159 	ble.w	801a262 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019fb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019fb2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019fb6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019fba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019fbe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019fc0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fc4:	2b00      	cmp	r3, #0
 8019fc6:	dd0e      	ble.n	8019fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019fc8:	1402      	asrs	r2, r0, #16
 8019fca:	d405      	bmi.n	8019fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fcc:	42ba      	cmp	r2, r7
 8019fce:	da03      	bge.n	8019fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fd0:	140a      	asrs	r2, r1, #16
 8019fd2:	d401      	bmi.n	8019fd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019fd4:	42b2      	cmp	r2, r6
 8019fd6:	db07      	blt.n	8019fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fd8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019fda:	4410      	add	r0, r2
 8019fdc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019fde:	3b01      	subs	r3, #1
 8019fe0:	4411      	add	r1, r2
 8019fe2:	3502      	adds	r5, #2
 8019fe4:	e7ee      	b.n	8019fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019fe6:	d017      	beq.n	801a018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019fe8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019fea:	1e5a      	subs	r2, r3, #1
 8019fec:	fb04 0402 	mla	r4, r4, r2, r0
 8019ff0:	1424      	asrs	r4, r4, #16
 8019ff2:	d409      	bmi.n	801a008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ff4:	42bc      	cmp	r4, r7
 8019ff6:	da07      	bge.n	801a008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ff8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ffa:	fb04 1202 	mla	r2, r4, r2, r1
 8019ffe:	1412      	asrs	r2, r2, #16
 801a000:	d402      	bmi.n	801a008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a002:	42b2      	cmp	r2, r6
 801a004:	f2c0 80bf 	blt.w	801a186 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a008:	2700      	movs	r7, #0
 801a00a:	19da      	adds	r2, r3, r7
 801a00c:	2a00      	cmp	r2, #0
 801a00e:	dc3e      	bgt.n	801a08e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a010:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a014:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a018:	f1bb 0f00 	cmp.w	fp, #0
 801a01c:	f340 8121 	ble.w	801a262 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a020:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a024:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a028:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a02c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a02e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a032:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a036:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a03a:	eeb0 6a62 	vmov.f32	s12, s5
 801a03e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a042:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a046:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a04a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a04e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a052:	eeb0 6a43 	vmov.f32	s12, s6
 801a056:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a05a:	ee12 2a90 	vmov	r2, s5
 801a05e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a062:	fb92 f3f3 	sdiv	r3, r2, r3
 801a066:	ee13 2a10 	vmov	r2, s6
 801a06a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a06e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a070:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a072:	fb92 f3f3 	sdiv	r3, r2, r3
 801a076:	9a03      	ldr	r2, [sp, #12]
 801a078:	9314      	str	r3, [sp, #80]	; 0x50
 801a07a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a07e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a080:	eeb0 3a67 	vmov.f32	s6, s15
 801a084:	bf08      	it	eq
 801a086:	4613      	moveq	r3, r2
 801a088:	eef0 2a47 	vmov.f32	s5, s14
 801a08c:	e789      	b.n	8019fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a08e:	1406      	asrs	r6, r0, #16
 801a090:	d42d      	bmi.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a092:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a096:	42b4      	cmp	r4, r6
 801a098:	dd29      	ble.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a09a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a09e:	d426      	bmi.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a0a0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a0a4:	4562      	cmp	r2, ip
 801a0a6:	dd22      	ble.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a0a8:	b224      	sxth	r4, r4
 801a0aa:	9a01      	ldr	r2, [sp, #4]
 801a0ac:	fb0c 6404 	mla	r4, ip, r4, r6
 801a0b0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a0b4:	0e22      	lsrs	r2, r4, #24
 801a0b6:	d01a      	beq.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a0b8:	9e04      	ldr	r6, [sp, #16]
 801a0ba:	4372      	muls	r2, r6
 801a0bc:	1c56      	adds	r6, r2, #1
 801a0be:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a0c2:	1212      	asrs	r2, r2, #8
 801a0c4:	0a26      	lsrs	r6, r4, #8
 801a0c6:	2aff      	cmp	r2, #255	; 0xff
 801a0c8:	9605      	str	r6, [sp, #20]
 801a0ca:	d116      	bne.n	801a0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a0cc:	f06f 0201 	mvn.w	r2, #1
 801a0d0:	fb02 fc07 	mul.w	ip, r2, r7
 801a0d4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a0d8:	0962      	lsrs	r2, r4, #5
 801a0da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0de:	f026 0607 	bic.w	r6, r6, #7
 801a0e2:	4316      	orrs	r6, r2
 801a0e4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a0e8:	4326      	orrs	r6, r4
 801a0ea:	f825 600c 	strh.w	r6, [r5, ip]
 801a0ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a0f0:	4410      	add	r0, r2
 801a0f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a0f4:	3f01      	subs	r7, #1
 801a0f6:	4411      	add	r1, r2
 801a0f8:	e787      	b.n	801a00a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a0fa:	f06f 0601 	mvn.w	r6, #1
 801a0fe:	437e      	muls	r6, r7
 801a100:	fa1f fa82 	uxth.w	sl, r2
 801a104:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a108:	9602      	str	r6, [sp, #8]
 801a10a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a10e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a112:	43d2      	mvns	r2, r2
 801a114:	b2d2      	uxtb	r2, r2
 801a116:	fb1c fc0a 	smulbb	ip, ip, sl
 801a11a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a11e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a122:	b2e4      	uxtb	r4, r4
 801a124:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a128:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a12c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a130:	fa5f f888 	uxtb.w	r8, r8
 801a134:	fb14 f40a 	smulbb	r4, r4, sl
 801a138:	fb08 4402 	mla	r4, r8, r2, r4
 801a13c:	fa1f fe8e 	uxth.w	lr, lr
 801a140:	fb16 f60a 	smulbb	r6, r6, sl
 801a144:	b2a4      	uxth	r4, r4
 801a146:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a14a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a14e:	f10e 0201 	add.w	r2, lr, #1
 801a152:	1c66      	adds	r6, r4, #1
 801a154:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a158:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a15c:	fa1f fc8c 	uxth.w	ip, ip
 801a160:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a164:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a168:	ea46 0e0e 	orr.w	lr, r6, lr
 801a16c:	f10c 0601 	add.w	r6, ip, #1
 801a170:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a174:	0976      	lsrs	r6, r6, #5
 801a176:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a17a:	9a02      	ldr	r2, [sp, #8]
 801a17c:	ea4e 0e06 	orr.w	lr, lr, r6
 801a180:	f825 e002 	strh.w	lr, [r5, r2]
 801a184:	e7b3      	b.n	801a0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a186:	f04f 0800 	mov.w	r8, #0
 801a18a:	eba3 0208 	sub.w	r2, r3, r8
 801a18e:	2a00      	cmp	r2, #0
 801a190:	f77f af3e 	ble.w	801a010 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a194:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a198:	1404      	asrs	r4, r0, #16
 801a19a:	140a      	asrs	r2, r1, #16
 801a19c:	fb06 4202 	mla	r2, r6, r2, r4
 801a1a0:	9c01      	ldr	r4, [sp, #4]
 801a1a2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a1a6:	0e22      	lsrs	r2, r4, #24
 801a1a8:	d016      	beq.n	801a1d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a1aa:	9e04      	ldr	r6, [sp, #16]
 801a1ac:	4372      	muls	r2, r6
 801a1ae:	1c56      	adds	r6, r2, #1
 801a1b0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a1b4:	1212      	asrs	r2, r2, #8
 801a1b6:	2aff      	cmp	r2, #255	; 0xff
 801a1b8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a1bc:	d113      	bne.n	801a1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a1be:	0962      	lsrs	r2, r4, #5
 801a1c0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a1c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a1c8:	f026 0607 	bic.w	r6, r6, #7
 801a1cc:	4316      	orrs	r6, r2
 801a1ce:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a1d2:	4326      	orrs	r6, r4
 801a1d4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a1d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1da:	4410      	add	r0, r2
 801a1dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1de:	f108 0801 	add.w	r8, r8, #1
 801a1e2:	4411      	add	r1, r2
 801a1e4:	e7d1      	b.n	801a18a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a1e6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a1ea:	fa1f fa82 	uxth.w	sl, r2
 801a1ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a1f2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a1f6:	43d2      	mvns	r2, r2
 801a1f8:	b2d2      	uxtb	r2, r2
 801a1fa:	fb17 f70a 	smulbb	r7, r7, sl
 801a1fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a202:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a206:	b2e4      	uxtb	r4, r4
 801a208:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a20c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a210:	fa5f fe8e 	uxtb.w	lr, lr
 801a214:	fb14 f40a 	smulbb	r4, r4, sl
 801a218:	fb0e 4402 	mla	r4, lr, r2, r4
 801a21c:	b2f6      	uxtb	r6, r6
 801a21e:	fa1f fc8c 	uxth.w	ip, ip
 801a222:	fb16 f60a 	smulbb	r6, r6, sl
 801a226:	b2a4      	uxth	r4, r4
 801a228:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a22c:	fb07 6702 	mla	r7, r7, r2, r6
 801a230:	f10c 0201 	add.w	r2, ip, #1
 801a234:	1c66      	adds	r6, r4, #1
 801a236:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a23a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a23e:	b2bf      	uxth	r7, r7
 801a240:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a244:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a248:	ea46 0c0c 	orr.w	ip, r6, ip
 801a24c:	1c7e      	adds	r6, r7, #1
 801a24e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a252:	0976      	lsrs	r6, r6, #5
 801a254:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a258:	ea4c 0c06 	orr.w	ip, ip, r6
 801a25c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a260:	e7ba      	b.n	801a1d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a262:	b007      	add	sp, #28
 801a264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a26c:	b085      	sub	sp, #20
 801a26e:	468b      	mov	fp, r1
 801a270:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a272:	9203      	str	r2, [sp, #12]
 801a274:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a278:	6841      	ldr	r1, [r0, #4]
 801a27a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a27e:	fb01 2404 	mla	r4, r1, r4, r2
 801a282:	6802      	ldr	r2, [r0, #0]
 801a284:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a288:	f8d8 2000 	ldr.w	r2, [r8]
 801a28c:	9201      	str	r2, [sp, #4]
 801a28e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a292:	f1bb 0f00 	cmp.w	fp, #0
 801a296:	dc03      	bgt.n	801a2a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a298:	9a03      	ldr	r2, [sp, #12]
 801a29a:	2a00      	cmp	r2, #0
 801a29c:	f340 814f 	ble.w	801a53e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a2a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a2a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a2a6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a2aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a2ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a2b4:	2b00      	cmp	r3, #0
 801a2b6:	dd0e      	ble.n	801a2d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a2b8:	1408      	asrs	r0, r1, #16
 801a2ba:	d405      	bmi.n	801a2c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a2bc:	42b8      	cmp	r0, r7
 801a2be:	da03      	bge.n	801a2c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a2c0:	1410      	asrs	r0, r2, #16
 801a2c2:	d401      	bmi.n	801a2c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a2c4:	42b0      	cmp	r0, r6
 801a2c6:	db07      	blt.n	801a2d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a2c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a2ca:	4401      	add	r1, r0
 801a2cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a2ce:	3b01      	subs	r3, #1
 801a2d0:	4402      	add	r2, r0
 801a2d2:	3402      	adds	r4, #2
 801a2d4:	e7ee      	b.n	801a2b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a2d6:	d017      	beq.n	801a308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a2d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a2da:	1e58      	subs	r0, r3, #1
 801a2dc:	fb05 1500 	mla	r5, r5, r0, r1
 801a2e0:	142d      	asrs	r5, r5, #16
 801a2e2:	d409      	bmi.n	801a2f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a2e4:	42bd      	cmp	r5, r7
 801a2e6:	da07      	bge.n	801a2f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a2e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a2ea:	fb05 2000 	mla	r0, r5, r0, r2
 801a2ee:	1400      	asrs	r0, r0, #16
 801a2f0:	d402      	bmi.n	801a2f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a2f2:	42b0      	cmp	r0, r6
 801a2f4:	f2c0 80ba 	blt.w	801a46c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a2f8:	2600      	movs	r6, #0
 801a2fa:	1998      	adds	r0, r3, r6
 801a2fc:	2800      	cmp	r0, #0
 801a2fe:	dc3e      	bgt.n	801a37e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a300:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a304:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a308:	f1bb 0f00 	cmp.w	fp, #0
 801a30c:	f340 8117 	ble.w	801a53e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a310:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a314:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a318:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a31c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a31e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a322:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a326:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a32a:	eeb0 6a62 	vmov.f32	s12, s5
 801a32e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a332:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a336:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a33a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a33e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a342:	eeb0 6a43 	vmov.f32	s12, s6
 801a346:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a34a:	ee12 2a90 	vmov	r2, s5
 801a34e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a352:	fb92 f3f3 	sdiv	r3, r2, r3
 801a356:	ee13 2a10 	vmov	r2, s6
 801a35a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a35e:	9311      	str	r3, [sp, #68]	; 0x44
 801a360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a362:	fb92 f3f3 	sdiv	r3, r2, r3
 801a366:	9a03      	ldr	r2, [sp, #12]
 801a368:	9312      	str	r3, [sp, #72]	; 0x48
 801a36a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a36e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a370:	eeb0 3a67 	vmov.f32	s6, s15
 801a374:	bf08      	it	eq
 801a376:	4613      	moveq	r3, r2
 801a378:	eef0 2a47 	vmov.f32	s5, s14
 801a37c:	e789      	b.n	801a292 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a37e:	140f      	asrs	r7, r1, #16
 801a380:	d424      	bmi.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a382:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a386:	42bd      	cmp	r5, r7
 801a388:	dd20      	ble.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a38a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a38e:	d41d      	bmi.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a390:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a394:	4560      	cmp	r0, ip
 801a396:	dd19      	ble.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a398:	b22d      	sxth	r5, r5
 801a39a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a39e:	9801      	ldr	r0, [sp, #4]
 801a3a0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a3a4:	0e07      	lsrs	r7, r0, #24
 801a3a6:	2fff      	cmp	r7, #255	; 0xff
 801a3a8:	d116      	bne.n	801a3d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a3aa:	f06f 0501 	mvn.w	r5, #1
 801a3ae:	fb05 f706 	mul.w	r7, r5, r6
 801a3b2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a3b6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a3ba:	0945      	lsrs	r5, r0, #5
 801a3bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a3c0:	ea4c 0505 	orr.w	r5, ip, r5
 801a3c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a3c8:	4305      	orrs	r5, r0
 801a3ca:	53e5      	strh	r5, [r4, r7]
 801a3cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a3ce:	4401      	add	r1, r0
 801a3d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a3d2:	3e01      	subs	r6, #1
 801a3d4:	4402      	add	r2, r0
 801a3d6:	e790      	b.n	801a2fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a3d8:	b2fd      	uxtb	r5, r7
 801a3da:	2f00      	cmp	r7, #0
 801a3dc:	d0f6      	beq.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a3de:	f06f 0701 	mvn.w	r7, #1
 801a3e2:	4377      	muls	r7, r6
 801a3e4:	fa1f f985 	uxth.w	r9, r5
 801a3e8:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a3ec:	9702      	str	r7, [sp, #8]
 801a3ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a3f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a3f6:	43ed      	mvns	r5, r5
 801a3f8:	b2ed      	uxtb	r5, r5
 801a3fa:	fb17 f709 	smulbb	r7, r7, r9
 801a3fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a402:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a406:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a40a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a40e:	b2c0      	uxtb	r0, r0
 801a410:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a414:	fa5f fe8e 	uxtb.w	lr, lr
 801a418:	fb10 f009 	smulbb	r0, r0, r9
 801a41c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a420:	b280      	uxth	r0, r0
 801a422:	fa1f fc8c 	uxth.w	ip, ip
 801a426:	fb1a fa09 	smulbb	sl, sl, r9
 801a42a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a42e:	fb07 a705 	mla	r7, r7, r5, sl
 801a432:	f100 0a01 	add.w	sl, r0, #1
 801a436:	f10c 0501 	add.w	r5, ip, #1
 801a43a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a43e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a442:	b2bf      	uxth	r7, r7
 801a444:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a448:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a44c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a450:	f107 0a01 	add.w	sl, r7, #1
 801a454:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a458:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a45c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a460:	9802      	ldr	r0, [sp, #8]
 801a462:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a466:	f824 c000 	strh.w	ip, [r4, r0]
 801a46a:	e7af      	b.n	801a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a46c:	f04f 0e00 	mov.w	lr, #0
 801a470:	eba3 000e 	sub.w	r0, r3, lr
 801a474:	2800      	cmp	r0, #0
 801a476:	f77f af43 	ble.w	801a300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a47a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a47e:	140d      	asrs	r5, r1, #16
 801a480:	1410      	asrs	r0, r2, #16
 801a482:	fb06 5000 	mla	r0, r6, r0, r5
 801a486:	9d01      	ldr	r5, [sp, #4]
 801a488:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a48c:	0e2e      	lsrs	r6, r5, #24
 801a48e:	2eff      	cmp	r6, #255	; 0xff
 801a490:	d112      	bne.n	801a4b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a492:	482c      	ldr	r0, [pc, #176]	; (801a544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a494:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a498:	0968      	lsrs	r0, r5, #5
 801a49a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a49e:	4330      	orrs	r0, r6
 801a4a0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a4a4:	4328      	orrs	r0, r5
 801a4a6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a4aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a4ac:	4401      	add	r1, r0
 801a4ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a4b0:	f10e 0e01 	add.w	lr, lr, #1
 801a4b4:	4402      	add	r2, r0
 801a4b6:	e7db      	b.n	801a470 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a4b8:	b2f0      	uxtb	r0, r6
 801a4ba:	2e00      	cmp	r6, #0
 801a4bc:	d0f5      	beq.n	801a4aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a4be:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a4c2:	fa1f f980 	uxth.w	r9, r0
 801a4c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a4ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a4ce:	43c0      	mvns	r0, r0
 801a4d0:	b2c0      	uxtb	r0, r0
 801a4d2:	fb16 f609 	smulbb	r6, r6, r9
 801a4d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a4da:	fb07 6700 	mla	r7, r7, r0, r6
 801a4de:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a4e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a4e6:	b2ed      	uxtb	r5, r5
 801a4e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a4ec:	fa5f fc8c 	uxtb.w	ip, ip
 801a4f0:	fb15 f509 	smulbb	r5, r5, r9
 801a4f4:	fb0c 5500 	mla	r5, ip, r0, r5
 801a4f8:	b2bf      	uxth	r7, r7
 801a4fa:	fb1a fa09 	smulbb	sl, sl, r9
 801a4fe:	b2ad      	uxth	r5, r5
 801a500:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a504:	fb06 a600 	mla	r6, r6, r0, sl
 801a508:	1c78      	adds	r0, r7, #1
 801a50a:	f105 0a01 	add.w	sl, r5, #1
 801a50e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a512:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a516:	b2b6      	uxth	r6, r6
 801a518:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a51c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a520:	ea4a 0707 	orr.w	r7, sl, r7
 801a524:	f106 0a01 	add.w	sl, r6, #1
 801a528:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a52c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a530:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a534:	ea47 070a 	orr.w	r7, r7, sl
 801a538:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a53c:	e7b5      	b.n	801a4aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a53e:	b005      	add	sp, #20
 801a540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a544:	fffff800 	.word	0xfffff800

0801a548 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a54c:	b087      	sub	sp, #28
 801a54e:	468b      	mov	fp, r1
 801a550:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a552:	9203      	str	r2, [sp, #12]
 801a554:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a558:	9204      	str	r2, [sp, #16]
 801a55a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a55e:	6841      	ldr	r1, [r0, #4]
 801a560:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a564:	fb01 2404 	mla	r4, r1, r4, r2
 801a568:	6802      	ldr	r2, [r0, #0]
 801a56a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a56e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a572:	3201      	adds	r2, #1
 801a574:	f022 0201 	bic.w	r2, r2, #1
 801a578:	9200      	str	r2, [sp, #0]
 801a57a:	f8d9 2000 	ldr.w	r2, [r9]
 801a57e:	9201      	str	r2, [sp, #4]
 801a580:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a584:	f1bb 0f00 	cmp.w	fp, #0
 801a588:	dc03      	bgt.n	801a592 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a58a:	9a03      	ldr	r2, [sp, #12]
 801a58c:	2a00      	cmp	r2, #0
 801a58e:	f340 8169 	ble.w	801a864 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a592:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a594:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a598:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a59c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a5a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a5a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a5a6:	2b00      	cmp	r3, #0
 801a5a8:	dd0e      	ble.n	801a5c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a5aa:	1402      	asrs	r2, r0, #16
 801a5ac:	d405      	bmi.n	801a5ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a5ae:	42ba      	cmp	r2, r7
 801a5b0:	da03      	bge.n	801a5ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a5b2:	140a      	asrs	r2, r1, #16
 801a5b4:	d401      	bmi.n	801a5ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a5b6:	42b2      	cmp	r2, r6
 801a5b8:	db07      	blt.n	801a5ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a5ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5bc:	4410      	add	r0, r2
 801a5be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5c0:	3b01      	subs	r3, #1
 801a5c2:	4411      	add	r1, r2
 801a5c4:	3402      	adds	r4, #2
 801a5c6:	e7ee      	b.n	801a5a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a5c8:	d017      	beq.n	801a5fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a5ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a5cc:	1e5a      	subs	r2, r3, #1
 801a5ce:	fb05 0502 	mla	r5, r5, r2, r0
 801a5d2:	142d      	asrs	r5, r5, #16
 801a5d4:	d409      	bmi.n	801a5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a5d6:	42bd      	cmp	r5, r7
 801a5d8:	da07      	bge.n	801a5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a5da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a5dc:	fb05 1202 	mla	r2, r5, r2, r1
 801a5e0:	1412      	asrs	r2, r2, #16
 801a5e2:	d402      	bmi.n	801a5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a5e4:	42b2      	cmp	r2, r6
 801a5e6:	f2c0 80c7 	blt.w	801a778 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a5ea:	2700      	movs	r7, #0
 801a5ec:	19da      	adds	r2, r3, r7
 801a5ee:	2a00      	cmp	r2, #0
 801a5f0:	dc3e      	bgt.n	801a670 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a5f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a5fa:	f1bb 0f00 	cmp.w	fp, #0
 801a5fe:	f340 8131 	ble.w	801a864 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a602:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a606:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a60a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a60e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a610:	f1bb 0b01 	subs.w	fp, fp, #1
 801a614:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a618:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a61c:	eeb0 6a62 	vmov.f32	s12, s5
 801a620:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a624:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a628:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a62c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a630:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a634:	eeb0 6a43 	vmov.f32	s12, s6
 801a638:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a63c:	ee12 2a90 	vmov	r2, s5
 801a640:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a644:	fb92 f3f3 	sdiv	r3, r2, r3
 801a648:	ee13 2a10 	vmov	r2, s6
 801a64c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a650:	9313      	str	r3, [sp, #76]	; 0x4c
 801a652:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a654:	fb92 f3f3 	sdiv	r3, r2, r3
 801a658:	9a03      	ldr	r2, [sp, #12]
 801a65a:	9314      	str	r3, [sp, #80]	; 0x50
 801a65c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a660:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a662:	eeb0 3a67 	vmov.f32	s6, s15
 801a666:	bf08      	it	eq
 801a668:	4613      	moveq	r3, r2
 801a66a:	eef0 2a47 	vmov.f32	s5, s14
 801a66e:	e789      	b.n	801a584 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a670:	1405      	asrs	r5, r0, #16
 801a672:	d435      	bmi.n	801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a674:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a678:	42aa      	cmp	r2, r5
 801a67a:	dd31      	ble.n	801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a67c:	140e      	asrs	r6, r1, #16
 801a67e:	d42f      	bmi.n	801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a680:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a684:	42b2      	cmp	r2, r6
 801a686:	dd2b      	ble.n	801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a688:	9a00      	ldr	r2, [sp, #0]
 801a68a:	fb06 5502 	mla	r5, r6, r2, r5
 801a68e:	086a      	lsrs	r2, r5, #1
 801a690:	9e01      	ldr	r6, [sp, #4]
 801a692:	5cb2      	ldrb	r2, [r6, r2]
 801a694:	07ee      	lsls	r6, r5, #31
 801a696:	bf54      	ite	pl
 801a698:	f002 020f 	andpl.w	r2, r2, #15
 801a69c:	1112      	asrmi	r2, r2, #4
 801a69e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a6a2:	b2d2      	uxtb	r2, r2
 801a6a4:	b1e2      	cbz	r2, 801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a6a6:	9d04      	ldr	r5, [sp, #16]
 801a6a8:	436a      	muls	r2, r5
 801a6aa:	1c55      	adds	r5, r2, #1
 801a6ac:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a6b0:	4d6e      	ldr	r5, [pc, #440]	; (801a86c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a6b2:	682d      	ldr	r5, [r5, #0]
 801a6b4:	1212      	asrs	r2, r2, #8
 801a6b6:	0a2e      	lsrs	r6, r5, #8
 801a6b8:	2aff      	cmp	r2, #255	; 0xff
 801a6ba:	9605      	str	r6, [sp, #20]
 801a6bc:	d116      	bne.n	801a6ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a6be:	f06f 0201 	mvn.w	r2, #1
 801a6c2:	fb02 fc07 	mul.w	ip, r2, r7
 801a6c6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a6ca:	096a      	lsrs	r2, r5, #5
 801a6cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a6d0:	f026 0607 	bic.w	r6, r6, #7
 801a6d4:	4316      	orrs	r6, r2
 801a6d6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a6da:	432e      	orrs	r6, r5
 801a6dc:	f824 600c 	strh.w	r6, [r4, ip]
 801a6e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6e2:	4410      	add	r0, r2
 801a6e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6e6:	3f01      	subs	r7, #1
 801a6e8:	4411      	add	r1, r2
 801a6ea:	e77f      	b.n	801a5ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a6ec:	f06f 0601 	mvn.w	r6, #1
 801a6f0:	437e      	muls	r6, r7
 801a6f2:	fa1f fa82 	uxth.w	sl, r2
 801a6f6:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a6fa:	9602      	str	r6, [sp, #8]
 801a6fc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a700:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a704:	43d2      	mvns	r2, r2
 801a706:	b2d2      	uxtb	r2, r2
 801a708:	fb1c fc0a 	smulbb	ip, ip, sl
 801a70c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a710:	fb0e ce02 	mla	lr, lr, r2, ip
 801a714:	b2ed      	uxtb	r5, r5
 801a716:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a71a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a71e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a722:	fa5f f888 	uxtb.w	r8, r8
 801a726:	fb15 f50a 	smulbb	r5, r5, sl
 801a72a:	fb08 5502 	mla	r5, r8, r2, r5
 801a72e:	fa1f fe8e 	uxth.w	lr, lr
 801a732:	fb16 f60a 	smulbb	r6, r6, sl
 801a736:	b2ad      	uxth	r5, r5
 801a738:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a73c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a740:	f10e 0201 	add.w	r2, lr, #1
 801a744:	1c6e      	adds	r6, r5, #1
 801a746:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a74a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a74e:	fa1f fc8c 	uxth.w	ip, ip
 801a752:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a756:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a75a:	ea46 0e0e 	orr.w	lr, r6, lr
 801a75e:	f10c 0601 	add.w	r6, ip, #1
 801a762:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a766:	0976      	lsrs	r6, r6, #5
 801a768:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a76c:	9a02      	ldr	r2, [sp, #8]
 801a76e:	ea4e 0e06 	orr.w	lr, lr, r6
 801a772:	f824 e002 	strh.w	lr, [r4, r2]
 801a776:	e7b3      	b.n	801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a778:	f04f 0800 	mov.w	r8, #0
 801a77c:	eba3 0208 	sub.w	r2, r3, r8
 801a780:	2a00      	cmp	r2, #0
 801a782:	f77f af36 	ble.w	801a5f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a786:	9e00      	ldr	r6, [sp, #0]
 801a788:	1402      	asrs	r2, r0, #16
 801a78a:	140d      	asrs	r5, r1, #16
 801a78c:	fb06 2505 	mla	r5, r6, r5, r2
 801a790:	086a      	lsrs	r2, r5, #1
 801a792:	9e01      	ldr	r6, [sp, #4]
 801a794:	5cb2      	ldrb	r2, [r6, r2]
 801a796:	07ed      	lsls	r5, r5, #31
 801a798:	bf54      	ite	pl
 801a79a:	f002 020f 	andpl.w	r2, r2, #15
 801a79e:	1112      	asrmi	r2, r2, #4
 801a7a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a7a4:	b2d2      	uxtb	r2, r2
 801a7a6:	b1c2      	cbz	r2, 801a7da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a7a8:	9d04      	ldr	r5, [sp, #16]
 801a7aa:	436a      	muls	r2, r5
 801a7ac:	1c55      	adds	r5, r2, #1
 801a7ae:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a7b2:	4d2e      	ldr	r5, [pc, #184]	; (801a86c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a7b4:	1212      	asrs	r2, r2, #8
 801a7b6:	682e      	ldr	r6, [r5, #0]
 801a7b8:	2aff      	cmp	r2, #255	; 0xff
 801a7ba:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a7be:	d113      	bne.n	801a7e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a7c0:	0972      	lsrs	r2, r6, #5
 801a7c2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a7c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a7ca:	f025 0507 	bic.w	r5, r5, #7
 801a7ce:	4315      	orrs	r5, r2
 801a7d0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a7d4:	4335      	orrs	r5, r6
 801a7d6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a7da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a7dc:	4410      	add	r0, r2
 801a7de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7e0:	f108 0801 	add.w	r8, r8, #1
 801a7e4:	4411      	add	r1, r2
 801a7e6:	e7c9      	b.n	801a77c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7e8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a7ec:	fa1f fa82 	uxth.w	sl, r2
 801a7f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a7f4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a7f8:	43d2      	mvns	r2, r2
 801a7fa:	b2d2      	uxtb	r2, r2
 801a7fc:	fb17 f70a 	smulbb	r7, r7, sl
 801a800:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a804:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a808:	b2f6      	uxtb	r6, r6
 801a80a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a80e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a812:	fa5f fe8e 	uxtb.w	lr, lr
 801a816:	fb16 f60a 	smulbb	r6, r6, sl
 801a81a:	fb0e 6602 	mla	r6, lr, r2, r6
 801a81e:	b2ed      	uxtb	r5, r5
 801a820:	fa1f fc8c 	uxth.w	ip, ip
 801a824:	fb15 f50a 	smulbb	r5, r5, sl
 801a828:	b2b6      	uxth	r6, r6
 801a82a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a82e:	fb07 5702 	mla	r7, r7, r2, r5
 801a832:	f10c 0201 	add.w	r2, ip, #1
 801a836:	1c75      	adds	r5, r6, #1
 801a838:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a83c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a840:	b2bf      	uxth	r7, r7
 801a842:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a846:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a84a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a84e:	1c7d      	adds	r5, r7, #1
 801a850:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a854:	096d      	lsrs	r5, r5, #5
 801a856:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a85a:	ea4c 0c05 	orr.w	ip, ip, r5
 801a85e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a862:	e7ba      	b.n	801a7da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a864:	b007      	add	sp, #28
 801a866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a86a:	bf00      	nop
 801a86c:	200137dc 	.word	0x200137dc

0801a870 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a874:	b087      	sub	sp, #28
 801a876:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ab84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a87a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a87c:	9205      	str	r2, [sp, #20]
 801a87e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a882:	9101      	str	r1, [sp, #4]
 801a884:	6841      	ldr	r1, [r0, #4]
 801a886:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a88a:	fb01 2404 	mla	r4, r1, r4, r2
 801a88e:	6802      	ldr	r2, [r0, #0]
 801a890:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a894:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a898:	3201      	adds	r2, #1
 801a89a:	f022 0201 	bic.w	r2, r2, #1
 801a89e:	9202      	str	r2, [sp, #8]
 801a8a0:	f8db 2000 	ldr.w	r2, [fp]
 801a8a4:	9203      	str	r2, [sp, #12]
 801a8a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a8aa:	9a01      	ldr	r2, [sp, #4]
 801a8ac:	2a00      	cmp	r2, #0
 801a8ae:	dc03      	bgt.n	801a8b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a8b0:	9a05      	ldr	r2, [sp, #20]
 801a8b2:	2a00      	cmp	r2, #0
 801a8b4:	f340 8162 	ble.w	801ab7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a8b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a8ba:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a8be:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a8c2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a8c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a8c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a8cc:	2b00      	cmp	r3, #0
 801a8ce:	dd0e      	ble.n	801a8ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a8d0:	1402      	asrs	r2, r0, #16
 801a8d2:	d405      	bmi.n	801a8e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8d4:	42ba      	cmp	r2, r7
 801a8d6:	da03      	bge.n	801a8e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8d8:	140a      	asrs	r2, r1, #16
 801a8da:	d401      	bmi.n	801a8e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a8dc:	42b2      	cmp	r2, r6
 801a8de:	db07      	blt.n	801a8f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a8e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a8e2:	4410      	add	r0, r2
 801a8e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a8e6:	3b01      	subs	r3, #1
 801a8e8:	4411      	add	r1, r2
 801a8ea:	3402      	adds	r4, #2
 801a8ec:	e7ee      	b.n	801a8cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a8ee:	d017      	beq.n	801a920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a8f0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a8f2:	1e5a      	subs	r2, r3, #1
 801a8f4:	fb05 0502 	mla	r5, r5, r2, r0
 801a8f8:	142d      	asrs	r5, r5, #16
 801a8fa:	d409      	bmi.n	801a910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a8fc:	42bd      	cmp	r5, r7
 801a8fe:	da07      	bge.n	801a910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a900:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a902:	fb05 1202 	mla	r2, r5, r2, r1
 801a906:	1412      	asrs	r2, r2, #16
 801a908:	d402      	bmi.n	801a910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a90a:	42b2      	cmp	r2, r6
 801a90c:	f2c0 80c3 	blt.w	801aa96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a910:	2500      	movs	r5, #0
 801a912:	195a      	adds	r2, r3, r5
 801a914:	2a00      	cmp	r2, #0
 801a916:	dc3f      	bgt.n	801a998 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a918:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a91c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a920:	9b01      	ldr	r3, [sp, #4]
 801a922:	2b00      	cmp	r3, #0
 801a924:	f340 812a 	ble.w	801ab7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a928:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a92c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a930:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a934:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a936:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a93a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a93e:	eeb0 6a62 	vmov.f32	s12, s5
 801a942:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a946:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a94a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a94e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a952:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a956:	eeb0 6a43 	vmov.f32	s12, s6
 801a95a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a95e:	ee12 2a90 	vmov	r2, s5
 801a962:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a966:	fb92 f3f3 	sdiv	r3, r2, r3
 801a96a:	ee13 2a10 	vmov	r2, s6
 801a96e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a970:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a972:	fb92 f3f3 	sdiv	r3, r2, r3
 801a976:	9314      	str	r3, [sp, #80]	; 0x50
 801a978:	9b01      	ldr	r3, [sp, #4]
 801a97a:	9a05      	ldr	r2, [sp, #20]
 801a97c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a980:	3b01      	subs	r3, #1
 801a982:	9301      	str	r3, [sp, #4]
 801a984:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a988:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a98a:	eeb0 3a67 	vmov.f32	s6, s15
 801a98e:	bf08      	it	eq
 801a990:	4613      	moveq	r3, r2
 801a992:	eef0 2a47 	vmov.f32	s5, s14
 801a996:	e788      	b.n	801a8aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a998:	1406      	asrs	r6, r0, #16
 801a99a:	d42c      	bmi.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a99c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a9a0:	42b2      	cmp	r2, r6
 801a9a2:	dd28      	ble.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a9a4:	140f      	asrs	r7, r1, #16
 801a9a6:	d426      	bmi.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a9a8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a9ac:	42ba      	cmp	r2, r7
 801a9ae:	dd22      	ble.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a9b0:	9a02      	ldr	r2, [sp, #8]
 801a9b2:	fb07 6602 	mla	r6, r7, r2, r6
 801a9b6:	0872      	lsrs	r2, r6, #1
 801a9b8:	9f03      	ldr	r7, [sp, #12]
 801a9ba:	5cba      	ldrb	r2, [r7, r2]
 801a9bc:	07f6      	lsls	r6, r6, #31
 801a9be:	bf54      	ite	pl
 801a9c0:	f002 020f 	andpl.w	r2, r2, #15
 801a9c4:	1112      	asrmi	r2, r2, #4
 801a9c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a9ca:	b2d2      	uxtb	r2, r2
 801a9cc:	2aff      	cmp	r2, #255	; 0xff
 801a9ce:	d118      	bne.n	801aa02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a9d0:	f8d8 2000 	ldr.w	r2, [r8]
 801a9d4:	f06f 0601 	mvn.w	r6, #1
 801a9d8:	fb06 f705 	mul.w	r7, r6, r5
 801a9dc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801a9e0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a9e4:	0956      	lsrs	r6, r2, #5
 801a9e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a9ea:	ea4c 0606 	orr.w	r6, ip, r6
 801a9ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a9f2:	4316      	orrs	r6, r2
 801a9f4:	53e6      	strh	r6, [r4, r7]
 801a9f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9f8:	4410      	add	r0, r2
 801a9fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9fc:	3d01      	subs	r5, #1
 801a9fe:	4411      	add	r1, r2
 801aa00:	e787      	b.n	801a912 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aa02:	2a00      	cmp	r2, #0
 801aa04:	d0f7      	beq.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa06:	f06f 0601 	mvn.w	r6, #1
 801aa0a:	436e      	muls	r6, r5
 801aa0c:	f8d8 c000 	ldr.w	ip, [r8]
 801aa10:	f834 e006 	ldrh.w	lr, [r4, r6]
 801aa14:	9604      	str	r6, [sp, #16]
 801aa16:	fa1f f982 	uxth.w	r9, r2
 801aa1a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801aa1e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801aa22:	43d2      	mvns	r2, r2
 801aa24:	b2d2      	uxtb	r2, r2
 801aa26:	fb16 f609 	smulbb	r6, r6, r9
 801aa2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aa2e:	fb07 6702 	mla	r7, r7, r2, r6
 801aa32:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801aa36:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801aa3a:	fa5f fc8c 	uxtb.w	ip, ip
 801aa3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801aa42:	fa5f fe8e 	uxtb.w	lr, lr
 801aa46:	fb1c fc09 	smulbb	ip, ip, r9
 801aa4a:	fb0e cc02 	mla	ip, lr, r2, ip
 801aa4e:	b2bf      	uxth	r7, r7
 801aa50:	fb1a fa09 	smulbb	sl, sl, r9
 801aa54:	fa1f fc8c 	uxth.w	ip, ip
 801aa58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa5c:	fb06 a602 	mla	r6, r6, r2, sl
 801aa60:	1c7a      	adds	r2, r7, #1
 801aa62:	f10c 0a01 	add.w	sl, ip, #1
 801aa66:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801aa6a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801aa6e:	b2b6      	uxth	r6, r6
 801aa70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aa74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aa78:	ea4a 0707 	orr.w	r7, sl, r7
 801aa7c:	f106 0a01 	add.w	sl, r6, #1
 801aa80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801aa84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa8c:	9a04      	ldr	r2, [sp, #16]
 801aa8e:	ea47 070a 	orr.w	r7, r7, sl
 801aa92:	52a7      	strh	r7, [r4, r2]
 801aa94:	e7af      	b.n	801a9f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa96:	f04f 0e00 	mov.w	lr, #0
 801aa9a:	eba3 020e 	sub.w	r2, r3, lr
 801aa9e:	2a00      	cmp	r2, #0
 801aaa0:	f77f af3a 	ble.w	801a918 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aaa4:	9e02      	ldr	r6, [sp, #8]
 801aaa6:	1402      	asrs	r2, r0, #16
 801aaa8:	140d      	asrs	r5, r1, #16
 801aaaa:	fb06 2505 	mla	r5, r6, r5, r2
 801aaae:	086a      	lsrs	r2, r5, #1
 801aab0:	9e03      	ldr	r6, [sp, #12]
 801aab2:	5cb2      	ldrb	r2, [r6, r2]
 801aab4:	07ed      	lsls	r5, r5, #31
 801aab6:	bf54      	ite	pl
 801aab8:	f002 020f 	andpl.w	r2, r2, #15
 801aabc:	1112      	asrmi	r2, r2, #4
 801aabe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aac2:	b2d2      	uxtb	r2, r2
 801aac4:	2aff      	cmp	r2, #255	; 0xff
 801aac6:	d115      	bne.n	801aaf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801aac8:	f8d8 5000 	ldr.w	r5, [r8]
 801aacc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801aad0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801aad4:	096a      	lsrs	r2, r5, #5
 801aad6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aada:	4332      	orrs	r2, r6
 801aadc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aae0:	432a      	orrs	r2, r5
 801aae2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801aae6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aae8:	4410      	add	r0, r2
 801aaea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aaec:	f10e 0e01 	add.w	lr, lr, #1
 801aaf0:	4411      	add	r1, r2
 801aaf2:	e7d2      	b.n	801aa9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aaf4:	2a00      	cmp	r2, #0
 801aaf6:	d0f6      	beq.n	801aae6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801aaf8:	f8d8 7000 	ldr.w	r7, [r8]
 801aafc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ab00:	fa1f f982 	uxth.w	r9, r2
 801ab04:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ab08:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ab0c:	43d2      	mvns	r2, r2
 801ab0e:	b2d2      	uxtb	r2, r2
 801ab10:	fb15 f509 	smulbb	r5, r5, r9
 801ab14:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab18:	fb06 5602 	mla	r6, r6, r2, r5
 801ab1c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ab20:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ab24:	b2ff      	uxtb	r7, r7
 801ab26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab2a:	fa5f fc8c 	uxtb.w	ip, ip
 801ab2e:	fb17 f709 	smulbb	r7, r7, r9
 801ab32:	fb0c 7702 	mla	r7, ip, r2, r7
 801ab36:	b2b6      	uxth	r6, r6
 801ab38:	fb1a fa09 	smulbb	sl, sl, r9
 801ab3c:	b2bf      	uxth	r7, r7
 801ab3e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ab42:	fb05 a502 	mla	r5, r5, r2, sl
 801ab46:	1c72      	adds	r2, r6, #1
 801ab48:	f107 0a01 	add.w	sl, r7, #1
 801ab4c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ab50:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ab54:	b2ad      	uxth	r5, r5
 801ab56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab5a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ab5e:	ea4a 0606 	orr.w	r6, sl, r6
 801ab62:	f105 0a01 	add.w	sl, r5, #1
 801ab66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab72:	ea46 060a 	orr.w	r6, r6, sl
 801ab76:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ab7a:	e7b4      	b.n	801aae6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ab7c:	b007      	add	sp, #28
 801ab7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab82:	bf00      	nop
 801ab84:	200137dc 	.word	0x200137dc

0801ab88 <_ZN8touchgfx8LCD16bppD1Ev>:
 801ab88:	4770      	bx	lr

0801ab8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ab8a:	4770      	bx	lr

0801ab8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ab8c:	4770      	bx	lr

0801ab8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ab8e:	4770      	bx	lr

0801ab90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ab90:	4770      	bx	lr

0801ab92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ab92:	4770      	bx	lr

0801ab94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ab94:	4770      	bx	lr

0801ab96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ab96:	4770      	bx	lr

0801ab98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ab98:	4770      	bx	lr

0801ab9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ab9a:	4770      	bx	lr

0801ab9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ab9c:	4770      	bx	lr

0801ab9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ab9e:	4770      	bx	lr

0801aba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801aba0:	4770      	bx	lr

0801aba2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801aba2:	4770      	bx	lr

0801aba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801aba4:	4770      	bx	lr

0801aba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801aba6:	4770      	bx	lr

0801aba8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801aba8:	4770      	bx	lr

0801abaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801abaa:	4770      	bx	lr

0801abac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801abac:	4770      	bx	lr

0801abae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801abae:	4770      	bx	lr

0801abb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801abb0:	4770      	bx	lr

0801abb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801abb2:	4770      	bx	lr

0801abb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801abb4:	4770      	bx	lr

0801abb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801abb6:	4770      	bx	lr

0801abb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801abb8:	4770      	bx	lr

0801abba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801abba:	4770      	bx	lr

0801abbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801abbc:	4770      	bx	lr

0801abbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801abbe:	4770      	bx	lr

0801abc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801abc0:	4770      	bx	lr

0801abc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801abc2:	4770      	bx	lr

0801abc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801abc4:	4770      	bx	lr

0801abc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801abc6:	4770      	bx	lr

0801abc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801abc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801abcc:	b088      	sub	sp, #32
 801abce:	ac08      	add	r4, sp, #32
 801abd0:	4606      	mov	r6, r0
 801abd2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801abd6:	4620      	mov	r0, r4
 801abd8:	4688      	mov	r8, r1
 801abda:	4691      	mov	r9, r2
 801abdc:	f7fd fc62 	bl	80184a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801abe0:	6833      	ldr	r3, [r6, #0]
 801abe2:	4605      	mov	r5, r0
 801abe4:	4620      	mov	r0, r4
 801abe6:	699f      	ldr	r7, [r3, #24]
 801abe8:	f7fd fb70 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801abec:	4682      	mov	sl, r0
 801abee:	4620      	mov	r0, r4
 801abf0:	f7fd fba0 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801abf4:	9500      	str	r5, [sp, #0]
 801abf6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801abfa:	464b      	mov	r3, r9
 801abfc:	a806      	add	r0, sp, #24
 801abfe:	4642      	mov	r2, r8
 801ac00:	4631      	mov	r1, r6
 801ac02:	47b8      	blx	r7
 801ac04:	4628      	mov	r0, r5
 801ac06:	b008      	add	sp, #32
 801ac08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ac0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ac0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ac10:	2300      	movs	r3, #0
 801ac12:	9300      	str	r3, [sp, #0]
 801ac14:	4b3d      	ldr	r3, [pc, #244]	; (801ad0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ac16:	781b      	ldrb	r3, [r3, #0]
 801ac18:	2b00      	cmp	r3, #0
 801ac1a:	d137      	bne.n	801ac8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ac1c:	4a3c      	ldr	r2, [pc, #240]	; (801ad10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ac1e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ac22:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ac26:	2b00      	cmp	r3, #0
 801ac28:	d132      	bne.n	801ac90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ac2a:	4b3a      	ldr	r3, [pc, #232]	; (801ad14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ac2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ac30:	6808      	ldr	r0, [r1, #0]
 801ac32:	6849      	ldr	r1, [r1, #4]
 801ac34:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ac38:	ac02      	add	r4, sp, #8
 801ac3a:	ab02      	add	r3, sp, #8
 801ac3c:	c303      	stmia	r3!, {r0, r1}
 801ac3e:	4669      	mov	r1, sp
 801ac40:	4620      	mov	r0, r4
 801ac42:	f7f9 ffb5 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac46:	4668      	mov	r0, sp
 801ac48:	f7f9 ff6e 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac4c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ac50:	f8bd 2000 	ldrh.w	r2, [sp]
 801ac54:	4d30      	ldr	r5, [pc, #192]	; (801ad18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ac56:	4413      	add	r3, r2
 801ac58:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ac5c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ac60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ac64:	6828      	ldr	r0, [r5, #0]
 801ac66:	4413      	add	r3, r2
 801ac68:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ac6c:	6803      	ldr	r3, [r0, #0]
 801ac6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ac70:	4798      	blx	r3
 801ac72:	f010 0f01 	tst.w	r0, #1
 801ac76:	462f      	mov	r7, r5
 801ac78:	d00c      	beq.n	801ac94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ac7a:	6828      	ldr	r0, [r5, #0]
 801ac7c:	6803      	ldr	r3, [r0, #0]
 801ac7e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ac82:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ac84:	4798      	blx	r3
 801ac86:	b004      	add	sp, #16
 801ac88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ac8c:	4a21      	ldr	r2, [pc, #132]	; (801ad14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ac8e:	e7c6      	b.n	801ac1e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ac90:	4b1f      	ldr	r3, [pc, #124]	; (801ad10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ac92:	e7cb      	b.n	801ac2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ac94:	6838      	ldr	r0, [r7, #0]
 801ac96:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ac9a:	6803      	ldr	r3, [r0, #0]
 801ac9c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801aca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aca2:	4798      	blx	r3
 801aca4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801aca8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801acac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801acb0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801acb4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801acb8:	6838      	ldr	r0, [r7, #0]
 801acba:	6803      	ldr	r3, [r0, #0]
 801acbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801acbe:	4798      	blx	r3
 801acc0:	4a13      	ldr	r2, [pc, #76]	; (801ad10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801acc2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801acc6:	8813      	ldrh	r3, [r2, #0]
 801acc8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801accc:	fb03 1404 	mla	r4, r3, r4, r1
 801acd0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801acd4:	435d      	muls	r5, r3
 801acd6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801acda:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801acde:	4691      	mov	r9, r2
 801ace0:	6838      	ldr	r0, [r7, #0]
 801ace2:	42ac      	cmp	r4, r5
 801ace4:	6803      	ldr	r3, [r0, #0]
 801ace6:	d20e      	bcs.n	801ad06 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ace8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801acec:	4632      	mov	r2, r6
 801acee:	4643      	mov	r3, r8
 801acf0:	4621      	mov	r1, r4
 801acf2:	47d0      	blx	sl
 801acf4:	f8b9 3000 	ldrh.w	r3, [r9]
 801acf8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801acfc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ad00:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ad04:	e7ec      	b.n	801ace0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ad06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ad08:	4798      	blx	r3
 801ad0a:	e7bc      	b.n	801ac86 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ad0c:	200137c4 	.word	0x200137c4
 801ad10:	200137c6 	.word	0x200137c6
 801ad14:	200137c8 	.word	0x200137c8
 801ad18:	200137cc 	.word	0x200137cc

0801ad1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ad1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad20:	b08b      	sub	sp, #44	; 0x2c
 801ad22:	460f      	mov	r7, r1
 801ad24:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ad28:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ad2c:	4616      	mov	r6, r2
 801ad2e:	f1bb 0f00 	cmp.w	fp, #0
 801ad32:	d04a      	beq.n	801adca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ad34:	6810      	ldr	r0, [r2, #0]
 801ad36:	6851      	ldr	r1, [r2, #4]
 801ad38:	ad06      	add	r5, sp, #24
 801ad3a:	c503      	stmia	r5!, {r0, r1}
 801ad3c:	6818      	ldr	r0, [r3, #0]
 801ad3e:	6859      	ldr	r1, [r3, #4]
 801ad40:	ad08      	add	r5, sp, #32
 801ad42:	c503      	stmia	r5!, {r0, r1}
 801ad44:	a806      	add	r0, sp, #24
 801ad46:	f7f9 feef 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad4a:	4631      	mov	r1, r6
 801ad4c:	a808      	add	r0, sp, #32
 801ad4e:	f7f9 ff2f 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad52:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ad56:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ad5a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ad5e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ad62:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ad66:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ad6a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ad6e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ad72:	4f5f      	ldr	r7, [pc, #380]	; (801aef0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ad74:	440a      	add	r2, r1
 801ad76:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ad7a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ad7e:	6838      	ldr	r0, [r7, #0]
 801ad80:	4413      	add	r3, r2
 801ad82:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ad86:	6803      	ldr	r3, [r0, #0]
 801ad88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ad8a:	4798      	blx	r3
 801ad8c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ad90:	46b9      	mov	r9, r7
 801ad92:	d11d      	bne.n	801add0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ad94:	b9fc      	cbnz	r4, 801add6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ad96:	f010 0f01 	tst.w	r0, #1
 801ad9a:	d01c      	beq.n	801add6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ad9c:	f8d9 0000 	ldr.w	r0, [r9]
 801ada0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ada4:	6801      	ldr	r1, [r0, #0]
 801ada6:	f8cd b00c 	str.w	fp, [sp, #12]
 801adaa:	2700      	movs	r7, #0
 801adac:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801adb0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801adb4:	9402      	str	r4, [sp, #8]
 801adb6:	b2ad      	uxth	r5, r5
 801adb8:	fa1f f488 	uxth.w	r4, r8
 801adbc:	9501      	str	r5, [sp, #4]
 801adbe:	9400      	str	r4, [sp, #0]
 801adc0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801adc2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801adc6:	4631      	mov	r1, r6
 801adc8:	47a0      	blx	r4
 801adca:	b00b      	add	sp, #44	; 0x2c
 801adcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801add0:	f010 0f04 	tst.w	r0, #4
 801add4:	e7e1      	b.n	801ad9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801add6:	f8d9 0000 	ldr.w	r0, [r9]
 801adda:	6803      	ldr	r3, [r0, #0]
 801addc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801adde:	4798      	blx	r3
 801ade0:	4b44      	ldr	r3, [pc, #272]	; (801aef4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ade2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ade6:	881a      	ldrh	r2, [r3, #0]
 801ade8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801adec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801adf0:	fb02 1404 	mla	r4, r2, r4, r1
 801adf4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801adf8:	469a      	mov	sl, r3
 801adfa:	fb05 f502 	mul.w	r5, r5, r2
 801adfe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ae02:	d059      	beq.n	801aeb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ae04:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ae08:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ae0c:	fa1f f28b 	uxth.w	r2, fp
 801ae10:	fa1f f989 	uxth.w	r9, r9
 801ae14:	469e      	mov	lr, r3
 801ae16:	42ac      	cmp	r4, r5
 801ae18:	d264      	bcs.n	801aee4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ae1a:	eb04 0a07 	add.w	sl, r4, r7
 801ae1e:	4554      	cmp	r4, sl
 801ae20:	d23d      	bcs.n	801ae9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ae22:	8821      	ldrh	r1, [r4, #0]
 801ae24:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ae28:	1208      	asrs	r0, r1, #8
 801ae2a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ae2e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ae32:	fb10 f009 	smulbb	r0, r0, r9
 801ae36:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ae3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae3e:	00c9      	lsls	r1, r1, #3
 801ae40:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ae44:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ae48:	10d8      	asrs	r0, r3, #3
 801ae4a:	b2c9      	uxtb	r1, r1
 801ae4c:	00db      	lsls	r3, r3, #3
 801ae4e:	fa1f fc8c 	uxth.w	ip, ip
 801ae52:	fb1b fb09 	smulbb	fp, fp, r9
 801ae56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ae5a:	b2db      	uxtb	r3, r3
 801ae5c:	fb11 f109 	smulbb	r1, r1, r9
 801ae60:	fb00 b002 	mla	r0, r0, r2, fp
 801ae64:	fb03 1302 	mla	r3, r3, r2, r1
 801ae68:	f10c 0b01 	add.w	fp, ip, #1
 801ae6c:	b29b      	uxth	r3, r3
 801ae6e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ae72:	b280      	uxth	r0, r0
 801ae74:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ae78:	f103 0c01 	add.w	ip, r3, #1
 801ae7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ae80:	1c43      	adds	r3, r0, #1
 801ae82:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ae86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ae8a:	0940      	lsrs	r0, r0, #5
 801ae8c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ae90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ae94:	ea4c 0c00 	orr.w	ip, ip, r0
 801ae98:	f824 cb02 	strh.w	ip, [r4], #2
 801ae9c:	e7bf      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ae9e:	f8be 3000 	ldrh.w	r3, [lr]
 801aea2:	eba3 0308 	sub.w	r3, r3, r8
 801aea6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aeaa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aeae:	eba3 0308 	sub.w	r3, r3, r8
 801aeb2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aeb6:	e7ae      	b.n	801ae16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801aeb8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aebc:	f8d9 0000 	ldr.w	r0, [r9]
 801aec0:	42ac      	cmp	r4, r5
 801aec2:	6803      	ldr	r3, [r0, #0]
 801aec4:	d20e      	bcs.n	801aee4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aec6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801aeca:	4632      	mov	r2, r6
 801aecc:	463b      	mov	r3, r7
 801aece:	4621      	mov	r1, r4
 801aed0:	47c0      	blx	r8
 801aed2:	f8ba 3000 	ldrh.w	r3, [sl]
 801aed6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aeda:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aede:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aee2:	e7eb      	b.n	801aebc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801aee4:	4b02      	ldr	r3, [pc, #8]	; (801aef0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aee6:	6818      	ldr	r0, [r3, #0]
 801aee8:	6803      	ldr	r3, [r0, #0]
 801aeea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aeec:	4798      	blx	r3
 801aeee:	e76c      	b.n	801adca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801aef0:	200137cc 	.word	0x200137cc
 801aef4:	200137c6 	.word	0x200137c6

0801aef8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801aef8:	b510      	push	{r4, lr}
 801aefa:	2184      	movs	r1, #132	; 0x84
 801aefc:	4604      	mov	r4, r0
 801aefe:	f00c fd26 	bl	802794e <_ZdlPvj>
 801af02:	4620      	mov	r0, r4
 801af04:	bd10      	pop	{r4, pc}

0801af06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801af06:	b510      	push	{r4, lr}
 801af08:	2104      	movs	r1, #4
 801af0a:	4604      	mov	r4, r0
 801af0c:	f00c fd1f 	bl	802794e <_ZdlPvj>
 801af10:	4620      	mov	r0, r4
 801af12:	bd10      	pop	{r4, pc}

0801af14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801af14:	b510      	push	{r4, lr}
 801af16:	2104      	movs	r1, #4
 801af18:	4604      	mov	r4, r0
 801af1a:	f00c fd18 	bl	802794e <_ZdlPvj>
 801af1e:	4620      	mov	r0, r4
 801af20:	bd10      	pop	{r4, pc}

0801af22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801af22:	b510      	push	{r4, lr}
 801af24:	f640 0144 	movw	r1, #2116	; 0x844
 801af28:	4604      	mov	r4, r0
 801af2a:	f00c fd10 	bl	802794e <_ZdlPvj>
 801af2e:	4620      	mov	r0, r4
 801af30:	bd10      	pop	{r4, pc}

0801af32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801af32:	b510      	push	{r4, lr}
 801af34:	2104      	movs	r1, #4
 801af36:	4604      	mov	r4, r0
 801af38:	f00c fd09 	bl	802794e <_ZdlPvj>
 801af3c:	4620      	mov	r0, r4
 801af3e:	bd10      	pop	{r4, pc}

0801af40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801af40:	b510      	push	{r4, lr}
 801af42:	2104      	movs	r1, #4
 801af44:	4604      	mov	r4, r0
 801af46:	f00c fd02 	bl	802794e <_ZdlPvj>
 801af4a:	4620      	mov	r0, r4
 801af4c:	bd10      	pop	{r4, pc}

0801af4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801af4e:	b510      	push	{r4, lr}
 801af50:	2104      	movs	r1, #4
 801af52:	4604      	mov	r4, r0
 801af54:	f00c fcfb 	bl	802794e <_ZdlPvj>
 801af58:	4620      	mov	r0, r4
 801af5a:	bd10      	pop	{r4, pc}

0801af5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801af5c:	b510      	push	{r4, lr}
 801af5e:	2104      	movs	r1, #4
 801af60:	4604      	mov	r4, r0
 801af62:	f00c fcf4 	bl	802794e <_ZdlPvj>
 801af66:	4620      	mov	r0, r4
 801af68:	bd10      	pop	{r4, pc}

0801af6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801af6a:	b510      	push	{r4, lr}
 801af6c:	2104      	movs	r1, #4
 801af6e:	4604      	mov	r4, r0
 801af70:	f00c fced 	bl	802794e <_ZdlPvj>
 801af74:	4620      	mov	r0, r4
 801af76:	bd10      	pop	{r4, pc}

0801af78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801af78:	b510      	push	{r4, lr}
 801af7a:	2104      	movs	r1, #4
 801af7c:	4604      	mov	r4, r0
 801af7e:	f00c fce6 	bl	802794e <_ZdlPvj>
 801af82:	4620      	mov	r0, r4
 801af84:	bd10      	pop	{r4, pc}

0801af86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801af86:	b510      	push	{r4, lr}
 801af88:	2104      	movs	r1, #4
 801af8a:	4604      	mov	r4, r0
 801af8c:	f00c fcdf 	bl	802794e <_ZdlPvj>
 801af90:	4620      	mov	r0, r4
 801af92:	bd10      	pop	{r4, pc}

0801af94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801af94:	b510      	push	{r4, lr}
 801af96:	2104      	movs	r1, #4
 801af98:	4604      	mov	r4, r0
 801af9a:	f00c fcd8 	bl	802794e <_ZdlPvj>
 801af9e:	4620      	mov	r0, r4
 801afa0:	bd10      	pop	{r4, pc}

0801afa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801afa2:	b510      	push	{r4, lr}
 801afa4:	2104      	movs	r1, #4
 801afa6:	4604      	mov	r4, r0
 801afa8:	f00c fcd1 	bl	802794e <_ZdlPvj>
 801afac:	4620      	mov	r0, r4
 801afae:	bd10      	pop	{r4, pc}

0801afb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801afb0:	b510      	push	{r4, lr}
 801afb2:	2104      	movs	r1, #4
 801afb4:	4604      	mov	r4, r0
 801afb6:	f00c fcca 	bl	802794e <_ZdlPvj>
 801afba:	4620      	mov	r0, r4
 801afbc:	bd10      	pop	{r4, pc}

0801afbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801afbe:	b510      	push	{r4, lr}
 801afc0:	2104      	movs	r1, #4
 801afc2:	4604      	mov	r4, r0
 801afc4:	f00c fcc3 	bl	802794e <_ZdlPvj>
 801afc8:	4620      	mov	r0, r4
 801afca:	bd10      	pop	{r4, pc}

0801afcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801afcc:	b510      	push	{r4, lr}
 801afce:	2104      	movs	r1, #4
 801afd0:	4604      	mov	r4, r0
 801afd2:	f00c fcbc 	bl	802794e <_ZdlPvj>
 801afd6:	4620      	mov	r0, r4
 801afd8:	bd10      	pop	{r4, pc}

0801afda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801afda:	b510      	push	{r4, lr}
 801afdc:	2104      	movs	r1, #4
 801afde:	4604      	mov	r4, r0
 801afe0:	f00c fcb5 	bl	802794e <_ZdlPvj>
 801afe4:	4620      	mov	r0, r4
 801afe6:	bd10      	pop	{r4, pc}

0801afe8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801afe8:	b510      	push	{r4, lr}
 801afea:	2104      	movs	r1, #4
 801afec:	4604      	mov	r4, r0
 801afee:	f00c fcae 	bl	802794e <_ZdlPvj>
 801aff2:	4620      	mov	r0, r4
 801aff4:	bd10      	pop	{r4, pc}

0801aff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801aff6:	b510      	push	{r4, lr}
 801aff8:	2104      	movs	r1, #4
 801affa:	4604      	mov	r4, r0
 801affc:	f00c fca7 	bl	802794e <_ZdlPvj>
 801b000:	4620      	mov	r0, r4
 801b002:	bd10      	pop	{r4, pc}

0801b004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b004:	b510      	push	{r4, lr}
 801b006:	2104      	movs	r1, #4
 801b008:	4604      	mov	r4, r0
 801b00a:	f00c fca0 	bl	802794e <_ZdlPvj>
 801b00e:	4620      	mov	r0, r4
 801b010:	bd10      	pop	{r4, pc}

0801b012 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b012:	b510      	push	{r4, lr}
 801b014:	2104      	movs	r1, #4
 801b016:	4604      	mov	r4, r0
 801b018:	f00c fc99 	bl	802794e <_ZdlPvj>
 801b01c:	4620      	mov	r0, r4
 801b01e:	bd10      	pop	{r4, pc}

0801b020 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b020:	b510      	push	{r4, lr}
 801b022:	2104      	movs	r1, #4
 801b024:	4604      	mov	r4, r0
 801b026:	f00c fc92 	bl	802794e <_ZdlPvj>
 801b02a:	4620      	mov	r0, r4
 801b02c:	bd10      	pop	{r4, pc}

0801b02e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b02e:	b510      	push	{r4, lr}
 801b030:	2104      	movs	r1, #4
 801b032:	4604      	mov	r4, r0
 801b034:	f00c fc8b 	bl	802794e <_ZdlPvj>
 801b038:	4620      	mov	r0, r4
 801b03a:	bd10      	pop	{r4, pc}

0801b03c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b03c:	b510      	push	{r4, lr}
 801b03e:	2104      	movs	r1, #4
 801b040:	4604      	mov	r4, r0
 801b042:	f00c fc84 	bl	802794e <_ZdlPvj>
 801b046:	4620      	mov	r0, r4
 801b048:	bd10      	pop	{r4, pc}

0801b04a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b04a:	b510      	push	{r4, lr}
 801b04c:	2104      	movs	r1, #4
 801b04e:	4604      	mov	r4, r0
 801b050:	f00c fc7d 	bl	802794e <_ZdlPvj>
 801b054:	4620      	mov	r0, r4
 801b056:	bd10      	pop	{r4, pc}

0801b058 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b058:	b510      	push	{r4, lr}
 801b05a:	2104      	movs	r1, #4
 801b05c:	4604      	mov	r4, r0
 801b05e:	f00c fc76 	bl	802794e <_ZdlPvj>
 801b062:	4620      	mov	r0, r4
 801b064:	bd10      	pop	{r4, pc}

0801b066 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b066:	b510      	push	{r4, lr}
 801b068:	2104      	movs	r1, #4
 801b06a:	4604      	mov	r4, r0
 801b06c:	f00c fc6f 	bl	802794e <_ZdlPvj>
 801b070:	4620      	mov	r0, r4
 801b072:	bd10      	pop	{r4, pc}

0801b074 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b074:	b510      	push	{r4, lr}
 801b076:	2104      	movs	r1, #4
 801b078:	4604      	mov	r4, r0
 801b07a:	f00c fc68 	bl	802794e <_ZdlPvj>
 801b07e:	4620      	mov	r0, r4
 801b080:	bd10      	pop	{r4, pc}

0801b082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b082:	b510      	push	{r4, lr}
 801b084:	2104      	movs	r1, #4
 801b086:	4604      	mov	r4, r0
 801b088:	f00c fc61 	bl	802794e <_ZdlPvj>
 801b08c:	4620      	mov	r0, r4
 801b08e:	bd10      	pop	{r4, pc}

0801b090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b090:	b510      	push	{r4, lr}
 801b092:	2104      	movs	r1, #4
 801b094:	4604      	mov	r4, r0
 801b096:	f00c fc5a 	bl	802794e <_ZdlPvj>
 801b09a:	4620      	mov	r0, r4
 801b09c:	bd10      	pop	{r4, pc}

0801b09e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b09e:	b510      	push	{r4, lr}
 801b0a0:	2104      	movs	r1, #4
 801b0a2:	4604      	mov	r4, r0
 801b0a4:	f00c fc53 	bl	802794e <_ZdlPvj>
 801b0a8:	4620      	mov	r0, r4
 801b0aa:	bd10      	pop	{r4, pc}

0801b0ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b0ac:	b510      	push	{r4, lr}
 801b0ae:	2104      	movs	r1, #4
 801b0b0:	4604      	mov	r4, r0
 801b0b2:	f00c fc4c 	bl	802794e <_ZdlPvj>
 801b0b6:	4620      	mov	r0, r4
 801b0b8:	bd10      	pop	{r4, pc}
	...

0801b0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0c0:	b08f      	sub	sp, #60	; 0x3c
 801b0c2:	461c      	mov	r4, r3
 801b0c4:	9205      	str	r2, [sp, #20]
 801b0c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b0ca:	9100      	str	r1, [sp, #0]
 801b0cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b0ce:	9201      	str	r2, [sp, #4]
 801b0d0:	2a00      	cmp	r2, #0
 801b0d2:	f000 8115 	beq.w	801b300 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b0d6:	6820      	ldr	r0, [r4, #0]
 801b0d8:	6861      	ldr	r1, [r4, #4]
 801b0da:	aa0a      	add	r2, sp, #40	; 0x28
 801b0dc:	c203      	stmia	r2!, {r0, r1}
 801b0de:	6818      	ldr	r0, [r3, #0]
 801b0e0:	6859      	ldr	r1, [r3, #4]
 801b0e2:	aa0c      	add	r2, sp, #48	; 0x30
 801b0e4:	c203      	stmia	r2!, {r0, r1}
 801b0e6:	a80a      	add	r0, sp, #40	; 0x28
 801b0e8:	f7f9 fd1e 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b0ec:	4621      	mov	r1, r4
 801b0ee:	a80c      	add	r0, sp, #48	; 0x30
 801b0f0:	f7f9 fd5e 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b0f4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b0f8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b0fc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b100:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b104:	bfde      	ittt	le
 801b106:	b2b3      	uxthle	r3, r6
 801b108:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b10c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b110:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b114:	bfc8      	it	gt
 801b116:	2301      	movgt	r3, #1
 801b118:	fb92 f1f3 	sdiv	r1, r2, r3
 801b11c:	fa1f fc81 	uxth.w	ip, r1
 801b120:	fb0c 2413 	mls	r4, ip, r3, r2
 801b124:	fb14 f406 	smulbb	r4, r4, r6
 801b128:	441d      	add	r5, r3
 801b12a:	4404      	add	r4, r0
 801b12c:	4661      	mov	r1, ip
 801b12e:	3d01      	subs	r5, #1
 801b130:	b2a4      	uxth	r4, r4
 801b132:	fb95 f5f3 	sdiv	r5, r5, r3
 801b136:	b131      	cbz	r1, 801b146 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b138:	9b05      	ldr	r3, [sp, #20]
 801b13a:	9900      	ldr	r1, [sp, #0]
 801b13c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b140:	ba1b      	rev	r3, r3
 801b142:	4419      	add	r1, r3
 801b144:	9100      	str	r1, [sp, #0]
 801b146:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b14a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b14e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b152:	4418      	add	r0, r3
 801b154:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b158:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b15c:	441a      	add	r2, r3
 801b15e:	4b6a      	ldr	r3, [pc, #424]	; (801b308 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b160:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b164:	6818      	ldr	r0, [r3, #0]
 801b166:	6803      	ldr	r3, [r0, #0]
 801b168:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b16a:	4798      	blx	r3
 801b16c:	4967      	ldr	r1, [pc, #412]	; (801b30c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b16e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b172:	880b      	ldrh	r3, [r1, #0]
 801b174:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b178:	9109      	str	r1, [sp, #36]	; 0x24
 801b17a:	fb03 c202 	mla	r2, r3, r2, ip
 801b17e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b182:	4373      	muls	r3, r6
 801b184:	b2ad      	uxth	r5, r5
 801b186:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b18a:	00ad      	lsls	r5, r5, #2
 801b18c:	9306      	str	r3, [sp, #24]
 801b18e:	1d2b      	adds	r3, r5, #4
 801b190:	9307      	str	r3, [sp, #28]
 801b192:	9b01      	ldr	r3, [sp, #4]
 801b194:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b198:	9103      	str	r1, [sp, #12]
 801b19a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b19e:	2c00      	cmp	r4, #0
 801b1a0:	bf0c      	ite	eq
 801b1a2:	46c6      	moveq	lr, r8
 801b1a4:	f04f 0e00 	movne.w	lr, #0
 801b1a8:	2300      	movs	r3, #0
 801b1aa:	b292      	uxth	r2, r2
 801b1ac:	fa1f fe8e 	uxth.w	lr, lr
 801b1b0:	9302      	str	r3, [sp, #8]
 801b1b2:	9204      	str	r2, [sp, #16]
 801b1b4:	9a06      	ldr	r2, [sp, #24]
 801b1b6:	4282      	cmp	r2, r0
 801b1b8:	f240 809d 	bls.w	801b2f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b1bc:	b963      	cbnz	r3, 801b1d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b1be:	9b00      	ldr	r3, [sp, #0]
 801b1c0:	781a      	ldrb	r2, [r3, #0]
 801b1c2:	0993      	lsrs	r3, r2, #6
 801b1c4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b1c8:	9202      	str	r2, [sp, #8]
 801b1ca:	1e5a      	subs	r2, r3, #1
 801b1cc:	2a02      	cmp	r2, #2
 801b1ce:	d815      	bhi.n	801b1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b1d0:	9a00      	ldr	r2, [sp, #0]
 801b1d2:	3201      	adds	r2, #1
 801b1d4:	9200      	str	r2, [sp, #0]
 801b1d6:	b29b      	uxth	r3, r3
 801b1d8:	b1b4      	cbz	r4, 801b208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b1da:	429c      	cmp	r4, r3
 801b1dc:	bf95      	itete	ls
 801b1de:	1b1c      	subls	r4, r3, r4
 801b1e0:	1ae4      	subhi	r4, r4, r3
 801b1e2:	fa1f fa84 	uxthls.w	sl, r4
 801b1e6:	b2a4      	uxthhi	r4, r4
 801b1e8:	bf87      	ittee	hi
 801b1ea:	4671      	movhi	r1, lr
 801b1ec:	f04f 0a00 	movhi.w	sl, #0
 801b1f0:	fa1f f188 	uxthls.w	r1, r8
 801b1f4:	2400      	movls	r4, #0
 801b1f6:	4653      	mov	r3, sl
 801b1f8:	468e      	mov	lr, r1
 801b1fa:	e7db      	b.n	801b1b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b1fc:	9a00      	ldr	r2, [sp, #0]
 801b1fe:	9b00      	ldr	r3, [sp, #0]
 801b200:	3202      	adds	r2, #2
 801b202:	785b      	ldrb	r3, [r3, #1]
 801b204:	9200      	str	r2, [sp, #0]
 801b206:	e7e7      	b.n	801b1d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b208:	2202      	movs	r2, #2
 801b20a:	4615      	mov	r5, r2
 801b20c:	9907      	ldr	r1, [sp, #28]
 801b20e:	9a02      	ldr	r2, [sp, #8]
 801b210:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b214:	9905      	ldr	r1, [sp, #20]
 801b216:	4573      	cmp	r3, lr
 801b218:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b21c:	9a01      	ldr	r2, [sp, #4]
 801b21e:	bf2b      	itete	cs
 801b220:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b224:	ebae 0103 	subcc.w	r1, lr, r3
 801b228:	46f1      	movcs	r9, lr
 801b22a:	4699      	movcc	r9, r3
 801b22c:	bf27      	ittee	cs
 801b22e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b232:	4621      	movcs	r1, r4
 801b234:	b289      	uxthcc	r1, r1
 801b236:	46a2      	movcc	sl, r4
 801b238:	2aff      	cmp	r2, #255	; 0xff
 801b23a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b23e:	d105      	bne.n	801b24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b240:	4481      	add	r9, r0
 801b242:	4581      	cmp	r9, r0
 801b244:	d045      	beq.n	801b2d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b246:	f820 cb02 	strh.w	ip, [r0], #2
 801b24a:	e7fa      	b.n	801b242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b24c:	9d03      	ldr	r5, [sp, #12]
 801b24e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b252:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b256:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b25a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b25e:	436a      	muls	r2, r5
 801b260:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b264:	fa5f fc8c 	uxtb.w	ip, ip
 801b268:	9208      	str	r2, [sp, #32]
 801b26a:	fb0b fb05 	mul.w	fp, fp, r5
 801b26e:	fb0c fc05 	mul.w	ip, ip, r5
 801b272:	4481      	add	r9, r0
 801b274:	4581      	cmp	r9, r0
 801b276:	d02c      	beq.n	801b2d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b278:	8802      	ldrh	r2, [r0, #0]
 801b27a:	9d04      	ldr	r5, [sp, #16]
 801b27c:	9f04      	ldr	r7, [sp, #16]
 801b27e:	1216      	asrs	r6, r2, #8
 801b280:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b284:	fb16 f605 	smulbb	r6, r6, r5
 801b288:	9d08      	ldr	r5, [sp, #32]
 801b28a:	442e      	add	r6, r5
 801b28c:	10d5      	asrs	r5, r2, #3
 801b28e:	00d2      	lsls	r2, r2, #3
 801b290:	b2d2      	uxtb	r2, r2
 801b292:	fb12 f207 	smulbb	r2, r2, r7
 801b296:	b2b6      	uxth	r6, r6
 801b298:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b29c:	4462      	add	r2, ip
 801b29e:	fb15 f507 	smulbb	r5, r5, r7
 801b2a2:	b292      	uxth	r2, r2
 801b2a4:	1c77      	adds	r7, r6, #1
 801b2a6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b2aa:	1c57      	adds	r7, r2, #1
 801b2ac:	445d      	add	r5, fp
 801b2ae:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b2b2:	b2ad      	uxth	r5, r5
 801b2b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b2b8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b2bc:	4316      	orrs	r6, r2
 801b2be:	1c6a      	adds	r2, r5, #1
 801b2c0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b2c4:	096d      	lsrs	r5, r5, #5
 801b2c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b2ca:	432e      	orrs	r6, r5
 801b2cc:	f820 6b02 	strh.w	r6, [r0], #2
 801b2d0:	e7d0      	b.n	801b274 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b2d2:	4573      	cmp	r3, lr
 801b2d4:	d38f      	bcc.n	801b1f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b2d6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b2da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2dc:	fa1f f188 	uxth.w	r1, r8
 801b2e0:	1a64      	subs	r4, r4, r1
 801b2e2:	881b      	ldrh	r3, [r3, #0]
 801b2e4:	b2a4      	uxth	r4, r4
 801b2e6:	2c00      	cmp	r4, #0
 801b2e8:	eba3 0308 	sub.w	r3, r3, r8
 801b2ec:	bf18      	it	ne
 801b2ee:	2100      	movne	r1, #0
 801b2f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b2f4:	e77f      	b.n	801b1f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b2f6:	4b04      	ldr	r3, [pc, #16]	; (801b308 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b2f8:	6818      	ldr	r0, [r3, #0]
 801b2fa:	6803      	ldr	r3, [r0, #0]
 801b2fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2fe:	4798      	blx	r3
 801b300:	b00f      	add	sp, #60	; 0x3c
 801b302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b306:	bf00      	nop
 801b308:	200137cc 	.word	0x200137cc
 801b30c:	200137c6 	.word	0x200137c6

0801b310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b314:	b09f      	sub	sp, #124	; 0x7c
 801b316:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b31a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b31e:	9209      	str	r2, [sp, #36]	; 0x24
 801b320:	461d      	mov	r5, r3
 801b322:	4604      	mov	r4, r0
 801b324:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b326:	2a00      	cmp	r2, #0
 801b328:	f000 81eb 	beq.w	801b702 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b32c:	6828      	ldr	r0, [r5, #0]
 801b32e:	6869      	ldr	r1, [r5, #4]
 801b330:	aa1a      	add	r2, sp, #104	; 0x68
 801b332:	c203      	stmia	r2!, {r0, r1}
 801b334:	6818      	ldr	r0, [r3, #0]
 801b336:	6859      	ldr	r1, [r3, #4]
 801b338:	aa1c      	add	r2, sp, #112	; 0x70
 801b33a:	c203      	stmia	r2!, {r0, r1}
 801b33c:	a81a      	add	r0, sp, #104	; 0x68
 801b33e:	f7f9 fbf3 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b342:	4629      	mov	r1, r5
 801b344:	a81c      	add	r0, sp, #112	; 0x70
 801b346:	f7f9 fc33 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b34a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b34e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b352:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b356:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b35a:	bfd7      	itett	le
 801b35c:	b29a      	uxthle	r2, r3
 801b35e:	2201      	movgt	r2, #1
 801b360:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b364:	fb91 f2f2 	sdivle	r2, r1, r2
 801b368:	9202      	str	r2, [sp, #8]
 801b36a:	9802      	ldr	r0, [sp, #8]
 801b36c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b370:	fb92 f0f0 	sdiv	r0, r2, r0
 801b374:	b280      	uxth	r0, r0
 801b376:	9010      	str	r0, [sp, #64]	; 0x40
 801b378:	9902      	ldr	r1, [sp, #8]
 801b37a:	9802      	ldr	r0, [sp, #8]
 801b37c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b37e:	4488      	add	r8, r1
 801b380:	fb05 2510 	mls	r5, r5, r0, r2
 801b384:	fb15 f503 	smulbb	r5, r5, r3
 801b388:	f108 38ff 	add.w	r8, r8, #4294967295
 801b38c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b390:	fb98 f8f1 	sdiv	r8, r8, r1
 801b394:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b398:	440d      	add	r5, r1
 801b39a:	4419      	add	r1, r3
 801b39c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b3a0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b3a4:	441a      	add	r2, r3
 801b3a6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b3aa:	9304      	str	r3, [sp, #16]
 801b3ac:	4b95      	ldr	r3, [pc, #596]	; (801b604 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b3ae:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b3b2:	6818      	ldr	r0, [r3, #0]
 801b3b4:	6803      	ldr	r3, [r0, #0]
 801b3b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b3b8:	4798      	blx	r3
 801b3ba:	4b93      	ldr	r3, [pc, #588]	; (801b608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b3bc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b3c0:	881a      	ldrh	r2, [r3, #0]
 801b3c2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b3c6:	9318      	str	r3, [sp, #96]	; 0x60
 801b3c8:	fb02 7101 	mla	r1, r2, r1, r7
 801b3cc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b3d0:	4356      	muls	r6, r2
 801b3d2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b3d6:	f108 0801 	add.w	r8, r8, #1
 801b3da:	920a      	str	r2, [sp, #40]	; 0x28
 801b3dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3de:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b3e2:	930f      	str	r3, [sp, #60]	; 0x3c
 801b3e4:	fa1f f888 	uxth.w	r8, r8
 801b3e8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b3ec:	f108 0204 	add.w	r2, r8, #4
 801b3f0:	9211      	str	r2, [sp, #68]	; 0x44
 801b3f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b3f4:	4b85      	ldr	r3, [pc, #532]	; (801b60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b3f6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b3fa:	b2ad      	uxth	r5, r5
 801b3fc:	9215      	str	r2, [sp, #84]	; 0x54
 801b3fe:	2d00      	cmp	r5, #0
 801b400:	9a04      	ldr	r2, [sp, #16]
 801b402:	f04f 0100 	mov.w	r1, #0
 801b406:	bf18      	it	ne
 801b408:	2200      	movne	r2, #0
 801b40a:	1b1b      	subs	r3, r3, r4
 801b40c:	b292      	uxth	r2, r2
 801b40e:	910d      	str	r1, [sp, #52]	; 0x34
 801b410:	9319      	str	r3, [sp, #100]	; 0x64
 801b412:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b414:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b416:	fa11 f383 	uxtah	r3, r1, r3
 801b41a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b41c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b420:	3304      	adds	r3, #4
 801b422:	9306      	str	r3, [sp, #24]
 801b424:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b426:	4283      	cmp	r3, r0
 801b428:	f240 8166 	bls.w	801b6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b42c:	9902      	ldr	r1, [sp, #8]
 801b42e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b432:	fbb5 f3f3 	udiv	r3, r5, r3
 801b436:	1acb      	subs	r3, r1, r3
 801b438:	b29b      	uxth	r3, r3
 801b43a:	9316      	str	r3, [sp, #88]	; 0x58
 801b43c:	9b06      	ldr	r3, [sp, #24]
 801b43e:	9e06      	ldr	r6, [sp, #24]
 801b440:	7859      	ldrb	r1, [r3, #1]
 801b442:	789b      	ldrb	r3, [r3, #2]
 801b444:	7836      	ldrb	r6, [r6, #0]
 801b446:	9612      	str	r6, [sp, #72]	; 0x48
 801b448:	021b      	lsls	r3, r3, #8
 801b44a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b44e:	9906      	ldr	r1, [sp, #24]
 801b450:	78c9      	ldrb	r1, [r1, #3]
 801b452:	430b      	orrs	r3, r1
 801b454:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b456:	3601      	adds	r6, #1
 801b458:	4419      	add	r1, r3
 801b45a:	9605      	str	r6, [sp, #20]
 801b45c:	1c4e      	adds	r6, r1, #1
 801b45e:	9603      	str	r6, [sp, #12]
 801b460:	7849      	ldrb	r1, [r1, #1]
 801b462:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b464:	0209      	lsls	r1, r1, #8
 801b466:	5cf3      	ldrb	r3, [r6, r3]
 801b468:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b46c:	4319      	orrs	r1, r3
 801b46e:	b28b      	uxth	r3, r1
 801b470:	930c      	str	r3, [sp, #48]	; 0x30
 801b472:	2300      	movs	r3, #0
 801b474:	f04f 0a01 	mov.w	sl, #1
 801b478:	9307      	str	r3, [sp, #28]
 801b47a:	469c      	mov	ip, r3
 801b47c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b480:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b484:	46d3      	mov	fp, sl
 801b486:	4657      	mov	r7, sl
 801b488:	930e      	str	r3, [sp, #56]	; 0x38
 801b48a:	2d00      	cmp	r5, #0
 801b48c:	d07e      	beq.n	801b58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b48e:	42af      	cmp	r7, r5
 801b490:	d26e      	bcs.n	801b570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b492:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b494:	9201      	str	r2, [sp, #4]
 801b496:	1bed      	subs	r5, r5, r7
 801b498:	4283      	cmp	r3, r0
 801b49a:	b2ad      	uxth	r5, r5
 801b49c:	d802      	bhi.n	801b4a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b49e:	e073      	b.n	801b588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b4a0:	2b00      	cmp	r3, #0
 801b4a2:	d15f      	bne.n	801b564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b4a4:	9b03      	ldr	r3, [sp, #12]
 801b4a6:	785b      	ldrb	r3, [r3, #1]
 801b4a8:	f1cb 0207 	rsb	r2, fp, #7
 801b4ac:	4093      	lsls	r3, r2
 801b4ae:	005b      	lsls	r3, r3, #1
 801b4b0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b4b4:	9b03      	ldr	r3, [sp, #12]
 801b4b6:	781b      	ldrb	r3, [r3, #0]
 801b4b8:	fa43 f30b 	asr.w	r3, r3, fp
 801b4bc:	b2db      	uxtb	r3, r3
 801b4be:	4313      	orrs	r3, r2
 801b4c0:	f10b 0201 	add.w	r2, fp, #1
 801b4c4:	fa5f fb82 	uxtb.w	fp, r2
 801b4c8:	9a03      	ldr	r2, [sp, #12]
 801b4ca:	f1bb 0f08 	cmp.w	fp, #8
 801b4ce:	bf15      	itete	ne
 801b4d0:	3201      	addne	r2, #1
 801b4d2:	3202      	addeq	r2, #2
 801b4d4:	9203      	strne	r2, [sp, #12]
 801b4d6:	9203      	streq	r2, [sp, #12]
 801b4d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b4da:	b29f      	uxth	r7, r3
 801b4dc:	bf08      	it	eq
 801b4de:	f04f 0b00 	moveq.w	fp, #0
 801b4e2:	42ba      	cmp	r2, r7
 801b4e4:	d309      	bcc.n	801b4fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b4e6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b4ea:	2301      	movs	r3, #1
 801b4ec:	9a05      	ldr	r2, [sp, #20]
 801b4ee:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b4f2:	d30e      	bcc.n	801b512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b4f4:	469a      	mov	sl, r3
 801b4f6:	2600      	movs	r6, #0
 801b4f8:	e035      	b.n	801b566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b4fa:	9b05      	ldr	r3, [sp, #20]
 801b4fc:	429f      	cmp	r7, r3
 801b4fe:	d318      	bcc.n	801b532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b500:	eb04 030a 	add.w	r3, r4, sl
 801b504:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b508:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b50c:	f10a 0301 	add.w	r3, sl, #1
 801b510:	b29b      	uxth	r3, r3
 801b512:	9a05      	ldr	r2, [sp, #20]
 801b514:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b518:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b51a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b51e:	7116      	strb	r6, [r2, #4]
 801b520:	f10a 0601 	add.w	r6, sl, #1
 801b524:	80d1      	strh	r1, [r2, #6]
 801b526:	7156      	strb	r6, [r2, #5]
 801b528:	9a05      	ldr	r2, [sp, #20]
 801b52a:	3201      	adds	r2, #1
 801b52c:	b292      	uxth	r2, r2
 801b52e:	9205      	str	r2, [sp, #20]
 801b530:	e7e0      	b.n	801b4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b532:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b536:	463a      	mov	r2, r7
 801b538:	795b      	ldrb	r3, [r3, #5]
 801b53a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b53e:	4426      	add	r6, r4
 801b540:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b542:	eb01 0c06 	add.w	ip, r1, r6
 801b546:	f1bc 0f00 	cmp.w	ip, #0
 801b54a:	dd07      	ble.n	801b55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b54c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b550:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b554:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b558:	88d2      	ldrh	r2, [r2, #6]
 801b55a:	e7f1      	b.n	801b540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b55c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b560:	b29b      	uxth	r3, r3
 801b562:	e7c3      	b.n	801b4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b564:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b566:	970c      	str	r7, [sp, #48]	; 0x30
 801b568:	9a01      	ldr	r2, [sp, #4]
 801b56a:	46b4      	mov	ip, r6
 801b56c:	461f      	mov	r7, r3
 801b56e:	e78c      	b.n	801b48a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b570:	1b7b      	subs	r3, r7, r5
 801b572:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b576:	9201      	str	r2, [sp, #4]
 801b578:	eb0c 0605 	add.w	r6, ip, r5
 801b57c:	b29b      	uxth	r3, r3
 801b57e:	b2b6      	uxth	r6, r6
 801b580:	2500      	movs	r5, #0
 801b582:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b584:	4282      	cmp	r2, r0
 801b586:	d88b      	bhi.n	801b4a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b588:	9a01      	ldr	r2, [sp, #4]
 801b58a:	e74b      	b.n	801b424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b58c:	4297      	cmp	r7, r2
 801b58e:	d332      	bcc.n	801b5f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b590:	1abb      	subs	r3, r7, r2
 801b592:	b29b      	uxth	r3, r3
 801b594:	9208      	str	r2, [sp, #32]
 801b596:	9501      	str	r5, [sp, #4]
 801b598:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b59a:	29ff      	cmp	r1, #255	; 0xff
 801b59c:	9908      	ldr	r1, [sp, #32]
 801b59e:	eb0c 0601 	add.w	r6, ip, r1
 801b5a2:	d135      	bne.n	801b610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b5a4:	f1a0 0e02 	sub.w	lr, r0, #2
 801b5a8:	b2b6      	uxth	r6, r6
 801b5aa:	45b4      	cmp	ip, r6
 801b5ac:	f040 808c 	bne.w	801b6c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b5b0:	9908      	ldr	r1, [sp, #32]
 801b5b2:	4297      	cmp	r7, r2
 801b5b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b5b8:	d3e2      	bcc.n	801b580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b5ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b5bc:	9904      	ldr	r1, [sp, #16]
 801b5be:	8812      	ldrh	r2, [r2, #0]
 801b5c0:	1a52      	subs	r2, r2, r1
 801b5c2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b5c6:	9a07      	ldr	r2, [sp, #28]
 801b5c8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b5ca:	3201      	adds	r2, #1
 801b5cc:	428a      	cmp	r2, r1
 801b5ce:	9207      	str	r2, [sp, #28]
 801b5d0:	f040 8087 	bne.w	801b6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b5d4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b5d8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b5dc:	9b04      	ldr	r3, [sp, #16]
 801b5de:	1bed      	subs	r5, r5, r7
 801b5e0:	b2ad      	uxth	r5, r5
 801b5e2:	2d00      	cmp	r5, #0
 801b5e4:	bf08      	it	eq
 801b5e6:	461a      	moveq	r2, r3
 801b5e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b5ea:	bf18      	it	ne
 801b5ec:	2200      	movne	r2, #0
 801b5ee:	3301      	adds	r3, #1
 801b5f0:	930d      	str	r3, [sp, #52]	; 0x34
 801b5f2:	b292      	uxth	r2, r2
 801b5f4:	e70d      	b.n	801b412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b5f6:	1bd1      	subs	r1, r2, r7
 801b5f8:	b28b      	uxth	r3, r1
 801b5fa:	9301      	str	r3, [sp, #4]
 801b5fc:	9708      	str	r7, [sp, #32]
 801b5fe:	462b      	mov	r3, r5
 801b600:	e7ca      	b.n	801b598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b602:	bf00      	nop
 801b604:	200137cc 	.word	0x200137cc
 801b608:	200137c6 	.word	0x200137c6
 801b60c:	fffff7fb 	.word	0xfffff7fb
 801b610:	b2b6      	uxth	r6, r6
 801b612:	900b      	str	r0, [sp, #44]	; 0x2c
 801b614:	45b4      	cmp	ip, r6
 801b616:	d0cb      	beq.n	801b5b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b618:	f10c 0101 	add.w	r1, ip, #1
 801b61c:	44a4      	add	ip, r4
 801b61e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b620:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b624:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b626:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b62a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b62c:	f8b1 c000 	ldrh.w	ip, [r1]
 801b630:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b632:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b636:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b63a:	fb1e fe01 	smulbb	lr, lr, r1
 801b63e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b642:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b644:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b648:	fb08 e801 	mla	r8, r8, r1, lr
 801b64c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b650:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b652:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b656:	fb19 f901 	smulbb	r9, r9, r1
 801b65a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b65e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b660:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b664:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b668:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b66c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b66e:	fa5f fc8c 	uxtb.w	ip, ip
 801b672:	fb1c fc01 	smulbb	ip, ip, r1
 801b676:	00ed      	lsls	r5, r5, #3
 801b678:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b67a:	b2ed      	uxtb	r5, r5
 801b67c:	fb05 c501 	mla	r5, r5, r1, ip
 801b680:	fa1f f888 	uxth.w	r8, r8
 801b684:	fa1f fe8e 	uxth.w	lr, lr
 801b688:	b2ad      	uxth	r5, r5
 801b68a:	f108 0c01 	add.w	ip, r8, #1
 801b68e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b692:	f10e 0901 	add.w	r9, lr, #1
 801b696:	f105 0c01 	add.w	ip, r5, #1
 801b69a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b69e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b6a2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b6a6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b6aa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b6ae:	ea4c 0808 	orr.w	r8, ip, r8
 801b6b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b6b4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b6b8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b6bc:	ea48 0809 	orr.w	r8, r8, r9
 801b6c0:	f821 8b02 	strh.w	r8, [r1], #2
 801b6c4:	910b      	str	r1, [sp, #44]	; 0x2c
 801b6c6:	e7a5      	b.n	801b614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b6c8:	f10c 0801 	add.w	r8, ip, #1
 801b6cc:	44a4      	add	ip, r4
 801b6ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b6d0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b6d4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b6d8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b6dc:	fa1f fc88 	uxth.w	ip, r8
 801b6e0:	e763      	b.n	801b5aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b6e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b6e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b6ea:	1aad      	subs	r5, r5, r2
 801b6ec:	b2ad      	uxth	r5, r5
 801b6ee:	2d00      	cmp	r5, #0
 801b6f0:	bf18      	it	ne
 801b6f2:	2200      	movne	r2, #0
 801b6f4:	9201      	str	r2, [sp, #4]
 801b6f6:	e744      	b.n	801b582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b6f8:	4b03      	ldr	r3, [pc, #12]	; (801b708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b6fa:	6818      	ldr	r0, [r3, #0]
 801b6fc:	6803      	ldr	r3, [r0, #0]
 801b6fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b700:	4798      	blx	r3
 801b702:	b01f      	add	sp, #124	; 0x7c
 801b704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b708:	200137cc 	.word	0x200137cc

0801b70c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b710:	b08f      	sub	sp, #60	; 0x3c
 801b712:	461c      	mov	r4, r3
 801b714:	9203      	str	r2, [sp, #12]
 801b716:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b71a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b71c:	9202      	str	r2, [sp, #8]
 801b71e:	460f      	mov	r7, r1
 801b720:	2a00      	cmp	r2, #0
 801b722:	f000 8128 	beq.w	801b976 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b726:	6820      	ldr	r0, [r4, #0]
 801b728:	6861      	ldr	r1, [r4, #4]
 801b72a:	aa0a      	add	r2, sp, #40	; 0x28
 801b72c:	c203      	stmia	r2!, {r0, r1}
 801b72e:	6818      	ldr	r0, [r3, #0]
 801b730:	6859      	ldr	r1, [r3, #4]
 801b732:	aa0c      	add	r2, sp, #48	; 0x30
 801b734:	c203      	stmia	r2!, {r0, r1}
 801b736:	a80a      	add	r0, sp, #40	; 0x28
 801b738:	f7f9 f9f6 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b73c:	4621      	mov	r1, r4
 801b73e:	a80c      	add	r0, sp, #48	; 0x30
 801b740:	f7f9 fa36 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b744:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b748:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b74c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b750:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b754:	bfde      	ittt	le
 801b756:	b2b3      	uxthle	r3, r6
 801b758:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b75c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b760:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b764:	bfc8      	it	gt
 801b766:	2301      	movgt	r3, #1
 801b768:	fb92 f1f3 	sdiv	r1, r2, r3
 801b76c:	fa1f fc81 	uxth.w	ip, r1
 801b770:	fb0c 2413 	mls	r4, ip, r3, r2
 801b774:	fb14 f406 	smulbb	r4, r4, r6
 801b778:	441d      	add	r5, r3
 801b77a:	4404      	add	r4, r0
 801b77c:	4661      	mov	r1, ip
 801b77e:	3d01      	subs	r5, #1
 801b780:	b2a4      	uxth	r4, r4
 801b782:	fb95 f5f3 	sdiv	r5, r5, r3
 801b786:	b121      	cbz	r1, 801b792 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b788:	9b03      	ldr	r3, [sp, #12]
 801b78a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b78e:	ba1b      	rev	r3, r3
 801b790:	441f      	add	r7, r3
 801b792:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b796:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b79a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b79e:	4418      	add	r0, r3
 801b7a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b7a4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b7a8:	441a      	add	r2, r3
 801b7aa:	4b74      	ldr	r3, [pc, #464]	; (801b97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b7ac:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b7b0:	6818      	ldr	r0, [r3, #0]
 801b7b2:	6803      	ldr	r3, [r0, #0]
 801b7b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7b6:	4798      	blx	r3
 801b7b8:	4a71      	ldr	r2, [pc, #452]	; (801b980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b7ba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b7be:	8813      	ldrh	r3, [r2, #0]
 801b7c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b7c4:	9209      	str	r2, [sp, #36]	; 0x24
 801b7c6:	fb03 c101 	mla	r1, r3, r1, ip
 801b7ca:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b7ce:	4373      	muls	r3, r6
 801b7d0:	b2ad      	uxth	r5, r5
 801b7d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b7d6:	00ad      	lsls	r5, r5, #2
 801b7d8:	2c00      	cmp	r4, #0
 801b7da:	9304      	str	r3, [sp, #16]
 801b7dc:	f105 0304 	add.w	r3, r5, #4
 801b7e0:	9305      	str	r3, [sp, #20]
 801b7e2:	bf0c      	ite	eq
 801b7e4:	46c8      	moveq	r8, r9
 801b7e6:	f04f 0800 	movne.w	r8, #0
 801b7ea:	2300      	movs	r3, #0
 801b7ec:	fa1f f888 	uxth.w	r8, r8
 801b7f0:	9301      	str	r3, [sp, #4]
 801b7f2:	9a04      	ldr	r2, [sp, #16]
 801b7f4:	4282      	cmp	r2, r0
 801b7f6:	f240 80b9 	bls.w	801b96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b7fa:	b95b      	cbnz	r3, 801b814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b7fc:	783a      	ldrb	r2, [r7, #0]
 801b7fe:	0993      	lsrs	r3, r2, #6
 801b800:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b804:	9201      	str	r2, [sp, #4]
 801b806:	1e5a      	subs	r2, r3, #1
 801b808:	2a02      	cmp	r2, #2
 801b80a:	bf8d      	iteet	hi
 801b80c:	787b      	ldrbhi	r3, [r7, #1]
 801b80e:	3701      	addls	r7, #1
 801b810:	b29b      	uxthls	r3, r3
 801b812:	3702      	addhi	r7, #2
 801b814:	b184      	cbz	r4, 801b838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b816:	429c      	cmp	r4, r3
 801b818:	bf95      	itete	ls
 801b81a:	1b1c      	subls	r4, r3, r4
 801b81c:	1ae4      	subhi	r4, r4, r3
 801b81e:	fa1f fa84 	uxthls.w	sl, r4
 801b822:	b2a4      	uxthhi	r4, r4
 801b824:	bf87      	ittee	hi
 801b826:	46c4      	movhi	ip, r8
 801b828:	f04f 0a00 	movhi.w	sl, #0
 801b82c:	fa1f fc89 	uxthls.w	ip, r9
 801b830:	2400      	movls	r4, #0
 801b832:	4653      	mov	r3, sl
 801b834:	46e0      	mov	r8, ip
 801b836:	e7dc      	b.n	801b7f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b838:	2204      	movs	r2, #4
 801b83a:	4615      	mov	r5, r2
 801b83c:	9905      	ldr	r1, [sp, #20]
 801b83e:	9a01      	ldr	r2, [sp, #4]
 801b840:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b844:	9903      	ldr	r1, [sp, #12]
 801b846:	588a      	ldr	r2, [r1, r2]
 801b848:	4543      	cmp	r3, r8
 801b84a:	bf27      	ittee	cs
 801b84c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b850:	46c6      	movcs	lr, r8
 801b852:	eba8 0c03 	subcc.w	ip, r8, r3
 801b856:	469e      	movcc	lr, r3
 801b858:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b85c:	bf27      	ittee	cs
 801b85e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b862:	46a4      	movcs	ip, r4
 801b864:	fa1f fc8c 	uxthcc.w	ip, ip
 801b868:	46a2      	movcc	sl, r4
 801b86a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b86e:	2900      	cmp	r1, #0
 801b870:	d066      	beq.n	801b940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b872:	29ff      	cmp	r1, #255	; 0xff
 801b874:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b878:	d114      	bne.n	801b8a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b87a:	9d02      	ldr	r5, [sp, #8]
 801b87c:	2dff      	cmp	r5, #255	; 0xff
 801b87e:	d111      	bne.n	801b8a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b880:	0951      	lsrs	r1, r2, #5
 801b882:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b886:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b88a:	f026 0607 	bic.w	r6, r6, #7
 801b88e:	430e      	orrs	r6, r1
 801b890:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b894:	4316      	orrs	r6, r2
 801b896:	b2b6      	uxth	r6, r6
 801b898:	4486      	add	lr, r0
 801b89a:	4586      	cmp	lr, r0
 801b89c:	d051      	beq.n	801b942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b89e:	f820 6b02 	strh.w	r6, [r0], #2
 801b8a2:	e7fa      	b.n	801b89a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b8a4:	9d02      	ldr	r5, [sp, #8]
 801b8a6:	4369      	muls	r1, r5
 801b8a8:	1c4d      	adds	r5, r1, #1
 801b8aa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b8ae:	122d      	asrs	r5, r5, #8
 801b8b0:	ea6f 0b05 	mvn.w	fp, r5
 801b8b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b8b8:	b2ad      	uxth	r5, r5
 801b8ba:	b2f6      	uxtb	r6, r6
 801b8bc:	b2d2      	uxtb	r2, r2
 801b8be:	fb11 f105 	smulbb	r1, r1, r5
 801b8c2:	fb16 f605 	smulbb	r6, r6, r5
 801b8c6:	fb12 f205 	smulbb	r2, r2, r5
 801b8ca:	b289      	uxth	r1, r1
 801b8cc:	b2b6      	uxth	r6, r6
 801b8ce:	b292      	uxth	r2, r2
 801b8d0:	9106      	str	r1, [sp, #24]
 801b8d2:	9607      	str	r6, [sp, #28]
 801b8d4:	9208      	str	r2, [sp, #32]
 801b8d6:	4486      	add	lr, r0
 801b8d8:	fa5f fb8b 	uxtb.w	fp, fp
 801b8dc:	4586      	cmp	lr, r0
 801b8de:	d030      	beq.n	801b942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b8e0:	8802      	ldrh	r2, [r0, #0]
 801b8e2:	9906      	ldr	r1, [sp, #24]
 801b8e4:	1216      	asrs	r6, r2, #8
 801b8e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b8ea:	10d5      	asrs	r5, r2, #3
 801b8ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b8f0:	fb06 160b 	mla	r6, r6, fp, r1
 801b8f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b8f8:	9907      	ldr	r1, [sp, #28]
 801b8fa:	00d2      	lsls	r2, r2, #3
 801b8fc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b900:	fb05 150b 	mla	r5, r5, fp, r1
 801b904:	b2d2      	uxtb	r2, r2
 801b906:	9908      	ldr	r1, [sp, #32]
 801b908:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b90c:	b2b6      	uxth	r6, r6
 801b90e:	fb02 120b 	mla	r2, r2, fp, r1
 801b912:	b292      	uxth	r2, r2
 801b914:	1c71      	adds	r1, r6, #1
 801b916:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b91a:	1c51      	adds	r1, r2, #1
 801b91c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b920:	b2ad      	uxth	r5, r5
 801b922:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b926:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b92a:	4316      	orrs	r6, r2
 801b92c:	1c6a      	adds	r2, r5, #1
 801b92e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b932:	096d      	lsrs	r5, r5, #5
 801b934:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b938:	432e      	orrs	r6, r5
 801b93a:	f820 6b02 	strh.w	r6, [r0], #2
 801b93e:	e7cd      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b940:	4470      	add	r0, lr
 801b942:	4543      	cmp	r3, r8
 801b944:	f4ff af75 	bcc.w	801b832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b948:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b94c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b94e:	fa1f fc89 	uxth.w	ip, r9
 801b952:	eba4 040c 	sub.w	r4, r4, ip
 801b956:	881b      	ldrh	r3, [r3, #0]
 801b958:	b2a4      	uxth	r4, r4
 801b95a:	2c00      	cmp	r4, #0
 801b95c:	eba3 0309 	sub.w	r3, r3, r9
 801b960:	bf18      	it	ne
 801b962:	f04f 0c00 	movne.w	ip, #0
 801b966:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b96a:	e762      	b.n	801b832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b96c:	4b03      	ldr	r3, [pc, #12]	; (801b97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b96e:	6818      	ldr	r0, [r3, #0]
 801b970:	6803      	ldr	r3, [r0, #0]
 801b972:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b974:	4798      	blx	r3
 801b976:	b00f      	add	sp, #60	; 0x3c
 801b978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b97c:	200137cc 	.word	0x200137cc
 801b980:	200137c6 	.word	0x200137c6

0801b984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b988:	b093      	sub	sp, #76	; 0x4c
 801b98a:	461c      	mov	r4, r3
 801b98c:	9205      	str	r2, [sp, #20]
 801b98e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801b992:	9101      	str	r1, [sp, #4]
 801b994:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b996:	9202      	str	r2, [sp, #8]
 801b998:	2a00      	cmp	r2, #0
 801b99a:	f000 812c 	beq.w	801bbf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b99e:	6820      	ldr	r0, [r4, #0]
 801b9a0:	6861      	ldr	r1, [r4, #4]
 801b9a2:	aa0e      	add	r2, sp, #56	; 0x38
 801b9a4:	c203      	stmia	r2!, {r0, r1}
 801b9a6:	6818      	ldr	r0, [r3, #0]
 801b9a8:	6859      	ldr	r1, [r3, #4]
 801b9aa:	aa10      	add	r2, sp, #64	; 0x40
 801b9ac:	c203      	stmia	r2!, {r0, r1}
 801b9ae:	a80e      	add	r0, sp, #56	; 0x38
 801b9b0:	f7f9 f8ba 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9b4:	4621      	mov	r1, r4
 801b9b6:	a810      	add	r0, sp, #64	; 0x40
 801b9b8:	f7f9 f8fa 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9bc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801b9c0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801b9c4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801b9c8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b9cc:	bfde      	ittt	le
 801b9ce:	b2b3      	uxthle	r3, r6
 801b9d0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b9d4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b9d8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b9dc:	bfc8      	it	gt
 801b9de:	2301      	movgt	r3, #1
 801b9e0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b9e4:	fa1f fc81 	uxth.w	ip, r1
 801b9e8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b9ec:	fb14 f406 	smulbb	r4, r4, r6
 801b9f0:	441d      	add	r5, r3
 801b9f2:	4404      	add	r4, r0
 801b9f4:	4661      	mov	r1, ip
 801b9f6:	3d01      	subs	r5, #1
 801b9f8:	b2a4      	uxth	r4, r4
 801b9fa:	fb95 f5f3 	sdiv	r5, r5, r3
 801b9fe:	b131      	cbz	r1, 801ba0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ba00:	9b05      	ldr	r3, [sp, #20]
 801ba02:	9901      	ldr	r1, [sp, #4]
 801ba04:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ba08:	ba1b      	rev	r3, r3
 801ba0a:	4419      	add	r1, r3
 801ba0c:	9101      	str	r1, [sp, #4]
 801ba0e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ba12:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ba16:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801ba1a:	4418      	add	r0, r3
 801ba1c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ba20:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801ba24:	441a      	add	r2, r3
 801ba26:	4b75      	ldr	r3, [pc, #468]	; (801bbfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ba28:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801ba2c:	6818      	ldr	r0, [r3, #0]
 801ba2e:	6803      	ldr	r3, [r0, #0]
 801ba30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ba32:	4798      	blx	r3
 801ba34:	4972      	ldr	r1, [pc, #456]	; (801bc00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801ba36:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801ba3a:	880b      	ldrh	r3, [r1, #0]
 801ba3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ba40:	910d      	str	r1, [sp, #52]	; 0x34
 801ba42:	fb03 c202 	mla	r2, r3, r2, ip
 801ba46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ba4a:	4373      	muls	r3, r6
 801ba4c:	b2ad      	uxth	r5, r5
 801ba4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ba52:	00ad      	lsls	r5, r5, #2
 801ba54:	9308      	str	r3, [sp, #32]
 801ba56:	1d2b      	adds	r3, r5, #4
 801ba58:	9309      	str	r3, [sp, #36]	; 0x24
 801ba5a:	9b02      	ldr	r3, [sp, #8]
 801ba5c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ba60:	9106      	str	r1, [sp, #24]
 801ba62:	43da      	mvns	r2, r3
 801ba64:	2c00      	cmp	r4, #0
 801ba66:	bf0c      	ite	eq
 801ba68:	46dc      	moveq	ip, fp
 801ba6a:	f04f 0c00 	movne.w	ip, #0
 801ba6e:	2300      	movs	r3, #0
 801ba70:	b2d2      	uxtb	r2, r2
 801ba72:	fa1f fc8c 	uxth.w	ip, ip
 801ba76:	9303      	str	r3, [sp, #12]
 801ba78:	9207      	str	r2, [sp, #28]
 801ba7a:	9a08      	ldr	r2, [sp, #32]
 801ba7c:	4282      	cmp	r2, r0
 801ba7e:	f240 80b5 	bls.w	801bbec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801ba82:	b963      	cbnz	r3, 801ba9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ba84:	9b01      	ldr	r3, [sp, #4]
 801ba86:	781a      	ldrb	r2, [r3, #0]
 801ba88:	0993      	lsrs	r3, r2, #6
 801ba8a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801ba8e:	9203      	str	r2, [sp, #12]
 801ba90:	1e5a      	subs	r2, r3, #1
 801ba92:	2a02      	cmp	r2, #2
 801ba94:	d815      	bhi.n	801bac2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801ba96:	9a01      	ldr	r2, [sp, #4]
 801ba98:	3201      	adds	r2, #1
 801ba9a:	9201      	str	r2, [sp, #4]
 801ba9c:	b29b      	uxth	r3, r3
 801ba9e:	b1b4      	cbz	r4, 801bace <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801baa0:	429c      	cmp	r4, r3
 801baa2:	bf95      	itete	ls
 801baa4:	1b1c      	subls	r4, r3, r4
 801baa6:	1ae4      	subhi	r4, r4, r3
 801baa8:	fa1f f884 	uxthls.w	r8, r4
 801baac:	b2a4      	uxthhi	r4, r4
 801baae:	bf87      	ittee	hi
 801bab0:	4666      	movhi	r6, ip
 801bab2:	f04f 0800 	movhi.w	r8, #0
 801bab6:	fa1f f68b 	uxthls.w	r6, fp
 801baba:	2400      	movls	r4, #0
 801babc:	4643      	mov	r3, r8
 801babe:	46b4      	mov	ip, r6
 801bac0:	e7db      	b.n	801ba7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bac2:	9a01      	ldr	r2, [sp, #4]
 801bac4:	9b01      	ldr	r3, [sp, #4]
 801bac6:	3202      	adds	r2, #2
 801bac8:	785b      	ldrb	r3, [r3, #1]
 801baca:	9201      	str	r2, [sp, #4]
 801bacc:	e7e7      	b.n	801ba9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bace:	2203      	movs	r2, #3
 801bad0:	4615      	mov	r5, r2
 801bad2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bad4:	9a03      	ldr	r2, [sp, #12]
 801bad6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bada:	9905      	ldr	r1, [sp, #20]
 801badc:	4563      	cmp	r3, ip
 801bade:	eb01 0502 	add.w	r5, r1, r2
 801bae2:	9902      	ldr	r1, [sp, #8]
 801bae4:	bf29      	itett	cs
 801bae6:	eba3 080c 	subcs.w	r8, r3, ip
 801baea:	ebac 0603 	subcc.w	r6, ip, r3
 801baee:	fa1f f888 	uxthcs.w	r8, r8
 801baf2:	46e1      	movcs	r9, ip
 801baf4:	bf2f      	iteee	cs
 801baf6:	4626      	movcs	r6, r4
 801baf8:	b2b6      	uxthcc	r6, r6
 801bafa:	4699      	movcc	r9, r3
 801bafc:	46a0      	movcc	r8, r4
 801bafe:	29ff      	cmp	r1, #255	; 0xff
 801bb00:	d04a      	beq.n	801bb98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bb02:	9f06      	ldr	r7, [sp, #24]
 801bb04:	78a9      	ldrb	r1, [r5, #2]
 801bb06:	9004      	str	r0, [sp, #16]
 801bb08:	4379      	muls	r1, r7
 801bb0a:	910a      	str	r1, [sp, #40]	; 0x28
 801bb0c:	7869      	ldrb	r1, [r5, #1]
 801bb0e:	4379      	muls	r1, r7
 801bb10:	910b      	str	r1, [sp, #44]	; 0x2c
 801bb12:	9905      	ldr	r1, [sp, #20]
 801bb14:	5c8a      	ldrb	r2, [r1, r2]
 801bb16:	437a      	muls	r2, r7
 801bb18:	920c      	str	r2, [sp, #48]	; 0x30
 801bb1a:	46ca      	mov	sl, r9
 801bb1c:	f1ba 0f00 	cmp.w	sl, #0
 801bb20:	d03d      	beq.n	801bb9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bb22:	9a04      	ldr	r2, [sp, #16]
 801bb24:	9f07      	ldr	r7, [sp, #28]
 801bb26:	8812      	ldrh	r2, [r2, #0]
 801bb28:	1215      	asrs	r5, r2, #8
 801bb2a:	46be      	mov	lr, r7
 801bb2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bb30:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bb32:	10d1      	asrs	r1, r2, #3
 801bb34:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bb38:	fb05 750e 	mla	r5, r5, lr, r7
 801bb3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bb40:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bb42:	00d2      	lsls	r2, r2, #3
 801bb44:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bb48:	fb01 710e 	mla	r1, r1, lr, r7
 801bb4c:	b2d2      	uxtb	r2, r2
 801bb4e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bb50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bb54:	b2ad      	uxth	r5, r5
 801bb56:	fb02 720e 	mla	r2, r2, lr, r7
 801bb5a:	b292      	uxth	r2, r2
 801bb5c:	f105 0e01 	add.w	lr, r5, #1
 801bb60:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bb64:	f102 0e01 	add.w	lr, r2, #1
 801bb68:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bb6c:	b289      	uxth	r1, r1
 801bb6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bb72:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bb76:	4315      	orrs	r5, r2
 801bb78:	1c4a      	adds	r2, r1, #1
 801bb7a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bb7e:	0949      	lsrs	r1, r1, #5
 801bb80:	9a04      	ldr	r2, [sp, #16]
 801bb82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bb86:	430d      	orrs	r5, r1
 801bb88:	f822 5b02 	strh.w	r5, [r2], #2
 801bb8c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bb90:	9204      	str	r2, [sp, #16]
 801bb92:	fa1f fa8a 	uxth.w	sl, sl
 801bb96:	e7c1      	b.n	801bb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bb98:	4649      	mov	r1, r9
 801bb9a:	4686      	mov	lr, r0
 801bb9c:	b999      	cbnz	r1, 801bbc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bb9e:	4563      	cmp	r3, ip
 801bba0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bba4:	d38a      	bcc.n	801babc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bba6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bbaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbac:	fa1f f68b 	uxth.w	r6, fp
 801bbb0:	1ba4      	subs	r4, r4, r6
 801bbb2:	881b      	ldrh	r3, [r3, #0]
 801bbb4:	b2a4      	uxth	r4, r4
 801bbb6:	2c00      	cmp	r4, #0
 801bbb8:	eba3 030b 	sub.w	r3, r3, fp
 801bbbc:	bf18      	it	ne
 801bbbe:	2600      	movne	r6, #0
 801bbc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbc4:	e77a      	b.n	801babc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bbc6:	78aa      	ldrb	r2, [r5, #2]
 801bbc8:	4f0e      	ldr	r7, [pc, #56]	; (801bc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bbca:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bbce:	786a      	ldrb	r2, [r5, #1]
 801bbd0:	00d2      	lsls	r2, r2, #3
 801bbd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbd6:	ea4a 0202 	orr.w	r2, sl, r2
 801bbda:	f895 a000 	ldrb.w	sl, [r5]
 801bbde:	3901      	subs	r1, #1
 801bbe0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bbe4:	f82e 2b02 	strh.w	r2, [lr], #2
 801bbe8:	b289      	uxth	r1, r1
 801bbea:	e7d7      	b.n	801bb9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bbec:	4b03      	ldr	r3, [pc, #12]	; (801bbfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bbee:	6818      	ldr	r0, [r3, #0]
 801bbf0:	6803      	ldr	r3, [r0, #0]
 801bbf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bbf4:	4798      	blx	r3
 801bbf6:	b013      	add	sp, #76	; 0x4c
 801bbf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbfc:	200137cc 	.word	0x200137cc
 801bc00:	200137c6 	.word	0x200137c6
 801bc04:	fffff800 	.word	0xfffff800

0801bc08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bc08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc0c:	b09d      	sub	sp, #116	; 0x74
 801bc0e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bc12:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bc16:	920e      	str	r2, [sp, #56]	; 0x38
 801bc18:	461c      	mov	r4, r3
 801bc1a:	4683      	mov	fp, r0
 801bc1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bc1e:	2a00      	cmp	r2, #0
 801bc20:	f000 81e0 	beq.w	801bfe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bc24:	6820      	ldr	r0, [r4, #0]
 801bc26:	6861      	ldr	r1, [r4, #4]
 801bc28:	aa18      	add	r2, sp, #96	; 0x60
 801bc2a:	c203      	stmia	r2!, {r0, r1}
 801bc2c:	6818      	ldr	r0, [r3, #0]
 801bc2e:	6859      	ldr	r1, [r3, #4]
 801bc30:	aa1a      	add	r2, sp, #104	; 0x68
 801bc32:	c203      	stmia	r2!, {r0, r1}
 801bc34:	a818      	add	r0, sp, #96	; 0x60
 801bc36:	f7f8 ff77 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc3a:	4621      	mov	r1, r4
 801bc3c:	a81a      	add	r0, sp, #104	; 0x68
 801bc3e:	f7f8 ffb7 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc42:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801bc46:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801bc4a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bc4e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bc52:	bfd7      	itett	le
 801bc54:	b29a      	uxthle	r2, r3
 801bc56:	2201      	movgt	r2, #1
 801bc58:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bc5c:	fb91 f2f2 	sdivle	r2, r1, r2
 801bc60:	9202      	str	r2, [sp, #8]
 801bc62:	9802      	ldr	r0, [sp, #8]
 801bc64:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801bc68:	fb92 f0f0 	sdiv	r0, r2, r0
 801bc6c:	b280      	uxth	r0, r0
 801bc6e:	900f      	str	r0, [sp, #60]	; 0x3c
 801bc70:	9902      	ldr	r1, [sp, #8]
 801bc72:	9802      	ldr	r0, [sp, #8]
 801bc74:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bc76:	440c      	add	r4, r1
 801bc78:	fb05 2510 	mls	r5, r5, r0, r2
 801bc7c:	fb15 f503 	smulbb	r5, r5, r3
 801bc80:	3c01      	subs	r4, #1
 801bc82:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801bc86:	fb94 f4f1 	sdiv	r4, r4, r1
 801bc8a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801bc8e:	440d      	add	r5, r1
 801bc90:	4419      	add	r1, r3
 801bc92:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801bc96:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801bc9a:	441a      	add	r2, r3
 801bc9c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bca0:	9306      	str	r3, [sp, #24]
 801bca2:	4bb3      	ldr	r3, [pc, #716]	; (801bf70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bca4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801bca8:	6818      	ldr	r0, [r3, #0]
 801bcaa:	6803      	ldr	r3, [r0, #0]
 801bcac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bcae:	4798      	blx	r3
 801bcb0:	4bb0      	ldr	r3, [pc, #704]	; (801bf74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bcb2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801bcb6:	881a      	ldrh	r2, [r3, #0]
 801bcb8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801bcbc:	9316      	str	r3, [sp, #88]	; 0x58
 801bcbe:	fb02 7101 	mla	r1, r2, r1, r7
 801bcc2:	3401      	adds	r4, #1
 801bcc4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bcc8:	b2a4      	uxth	r4, r4
 801bcca:	4356      	muls	r6, r2
 801bccc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bcd0:	00a4      	lsls	r4, r4, #2
 801bcd2:	920a      	str	r2, [sp, #40]	; 0x28
 801bcd4:	1d22      	adds	r2, r4, #4
 801bcd6:	b2ad      	uxth	r5, r5
 801bcd8:	9213      	str	r2, [sp, #76]	; 0x4c
 801bcda:	4ba7      	ldr	r3, [pc, #668]	; (801bf78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bcdc:	9a06      	ldr	r2, [sp, #24]
 801bcde:	2d00      	cmp	r5, #0
 801bce0:	bf0c      	ite	eq
 801bce2:	4611      	moveq	r1, r2
 801bce4:	2100      	movne	r1, #0
 801bce6:	2200      	movs	r2, #0
 801bce8:	eba3 030b 	sub.w	r3, r3, fp
 801bcec:	b289      	uxth	r1, r1
 801bcee:	920d      	str	r2, [sp, #52]	; 0x34
 801bcf0:	9317      	str	r3, [sp, #92]	; 0x5c
 801bcf2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bcf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcf6:	fa12 f383 	uxtah	r3, r2, r3
 801bcfa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bcfc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bd00:	3304      	adds	r3, #4
 801bd02:	9308      	str	r3, [sp, #32]
 801bd04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd06:	4543      	cmp	r3, r8
 801bd08:	f240 8167 	bls.w	801bfda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bd0c:	9a02      	ldr	r2, [sp, #8]
 801bd0e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801bd12:	fbb5 f3f3 	udiv	r3, r5, r3
 801bd16:	1ad3      	subs	r3, r2, r3
 801bd18:	b29b      	uxth	r3, r3
 801bd1a:	9314      	str	r3, [sp, #80]	; 0x50
 801bd1c:	9b08      	ldr	r3, [sp, #32]
 801bd1e:	9808      	ldr	r0, [sp, #32]
 801bd20:	785a      	ldrb	r2, [r3, #1]
 801bd22:	789b      	ldrb	r3, [r3, #2]
 801bd24:	7800      	ldrb	r0, [r0, #0]
 801bd26:	9010      	str	r0, [sp, #64]	; 0x40
 801bd28:	021b      	lsls	r3, r3, #8
 801bd2a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bd2e:	9a08      	ldr	r2, [sp, #32]
 801bd30:	78d2      	ldrb	r2, [r2, #3]
 801bd32:	4313      	orrs	r3, r2
 801bd34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bd36:	3001      	adds	r0, #1
 801bd38:	441a      	add	r2, r3
 801bd3a:	9007      	str	r0, [sp, #28]
 801bd3c:	1c50      	adds	r0, r2, #1
 801bd3e:	9005      	str	r0, [sp, #20]
 801bd40:	7852      	ldrb	r2, [r2, #1]
 801bd42:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bd44:	0212      	lsls	r2, r2, #8
 801bd46:	5cc3      	ldrb	r3, [r0, r3]
 801bd48:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bd4c:	431a      	orrs	r2, r3
 801bd4e:	b293      	uxth	r3, r2
 801bd50:	930b      	str	r3, [sp, #44]	; 0x2c
 801bd52:	2300      	movs	r3, #0
 801bd54:	9309      	str	r3, [sp, #36]	; 0x24
 801bd56:	2301      	movs	r3, #1
 801bd58:	9301      	str	r3, [sp, #4]
 801bd5a:	9304      	str	r3, [sp, #16]
 801bd5c:	2300      	movs	r3, #0
 801bd5e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801bd62:	9303      	str	r3, [sp, #12]
 801bd64:	f04f 0e01 	mov.w	lr, #1
 801bd68:	2d00      	cmp	r5, #0
 801bd6a:	d07c      	beq.n	801be66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bd6c:	45ae      	cmp	lr, r5
 801bd6e:	d26b      	bcs.n	801be48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bd70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd72:	eba5 050e 	sub.w	r5, r5, lr
 801bd76:	4543      	cmp	r3, r8
 801bd78:	b2ad      	uxth	r5, r5
 801bd7a:	460c      	mov	r4, r1
 801bd7c:	d802      	bhi.n	801bd84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801bd7e:	e070      	b.n	801be62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bd80:	2b00      	cmp	r3, #0
 801bd82:	d15c      	bne.n	801be3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bd84:	9b05      	ldr	r3, [sp, #20]
 801bd86:	9a04      	ldr	r2, [sp, #16]
 801bd88:	785b      	ldrb	r3, [r3, #1]
 801bd8a:	9904      	ldr	r1, [sp, #16]
 801bd8c:	f1c2 0207 	rsb	r2, r2, #7
 801bd90:	4093      	lsls	r3, r2
 801bd92:	005b      	lsls	r3, r3, #1
 801bd94:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bd98:	9b05      	ldr	r3, [sp, #20]
 801bd9a:	781b      	ldrb	r3, [r3, #0]
 801bd9c:	410b      	asrs	r3, r1
 801bd9e:	3101      	adds	r1, #1
 801bda0:	b2c9      	uxtb	r1, r1
 801bda2:	2908      	cmp	r1, #8
 801bda4:	9104      	str	r1, [sp, #16]
 801bda6:	9905      	ldr	r1, [sp, #20]
 801bda8:	bf0a      	itet	eq
 801bdaa:	3102      	addeq	r1, #2
 801bdac:	3101      	addne	r1, #1
 801bdae:	9105      	streq	r1, [sp, #20]
 801bdb0:	b2db      	uxtb	r3, r3
 801bdb2:	bf0a      	itet	eq
 801bdb4:	2100      	moveq	r1, #0
 801bdb6:	9105      	strne	r1, [sp, #20]
 801bdb8:	9104      	streq	r1, [sp, #16]
 801bdba:	4313      	orrs	r3, r2
 801bdbc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bdbe:	b29a      	uxth	r2, r3
 801bdc0:	4291      	cmp	r1, r2
 801bdc2:	d30a      	bcc.n	801bdda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bdc4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801bdc8:	2301      	movs	r3, #1
 801bdca:	9907      	ldr	r1, [sp, #28]
 801bdcc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bdd0:	d30f      	bcc.n	801bdf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bdd2:	2100      	movs	r1, #0
 801bdd4:	9301      	str	r3, [sp, #4]
 801bdd6:	9103      	str	r1, [sp, #12]
 801bdd8:	e032      	b.n	801be40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bdda:	9b07      	ldr	r3, [sp, #28]
 801bddc:	429a      	cmp	r2, r3
 801bdde:	d318      	bcc.n	801be12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bde0:	9b01      	ldr	r3, [sp, #4]
 801bde2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801bde6:	445b      	add	r3, fp
 801bde8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bdec:	9b01      	ldr	r3, [sp, #4]
 801bdee:	3301      	adds	r3, #1
 801bdf0:	b29b      	uxth	r3, r3
 801bdf2:	9907      	ldr	r1, [sp, #28]
 801bdf4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801bdf8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bdfc:	7108      	strb	r0, [r1, #4]
 801bdfe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801be00:	80c8      	strh	r0, [r1, #6]
 801be02:	9801      	ldr	r0, [sp, #4]
 801be04:	3001      	adds	r0, #1
 801be06:	7148      	strb	r0, [r1, #5]
 801be08:	9907      	ldr	r1, [sp, #28]
 801be0a:	3101      	adds	r1, #1
 801be0c:	b289      	uxth	r1, r1
 801be0e:	9107      	str	r1, [sp, #28]
 801be10:	e7df      	b.n	801bdd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801be12:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801be16:	4611      	mov	r1, r2
 801be18:	795b      	ldrb	r3, [r3, #5]
 801be1a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801be1e:	4458      	add	r0, fp
 801be20:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801be22:	4406      	add	r6, r0
 801be24:	2e00      	cmp	r6, #0
 801be26:	dd06      	ble.n	801be36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801be28:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801be2c:	790e      	ldrb	r6, [r1, #4]
 801be2e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801be32:	88c9      	ldrh	r1, [r1, #6]
 801be34:	e7f4      	b.n	801be20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801be36:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801be3a:	b29b      	uxth	r3, r3
 801be3c:	e7c5      	b.n	801bdca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801be3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801be40:	920b      	str	r2, [sp, #44]	; 0x2c
 801be42:	4621      	mov	r1, r4
 801be44:	469e      	mov	lr, r3
 801be46:	e78f      	b.n	801bd68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801be48:	9a03      	ldr	r2, [sp, #12]
 801be4a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801be4e:	442a      	add	r2, r5
 801be50:	ebae 0305 	sub.w	r3, lr, r5
 801be54:	b292      	uxth	r2, r2
 801be56:	b29b      	uxth	r3, r3
 801be58:	9203      	str	r2, [sp, #12]
 801be5a:	2500      	movs	r5, #0
 801be5c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801be5e:	4542      	cmp	r2, r8
 801be60:	d88e      	bhi.n	801bd80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801be62:	4621      	mov	r1, r4
 801be64:	e74e      	b.n	801bd04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801be66:	458e      	cmp	lr, r1
 801be68:	bf29      	itett	cs
 801be6a:	ebae 0301 	subcs.w	r3, lr, r1
 801be6e:	eba1 040e 	subcc.w	r4, r1, lr
 801be72:	b29b      	uxthcs	r3, r3
 801be74:	910c      	strcs	r1, [sp, #48]	; 0x30
 801be76:	bf2f      	iteee	cs
 801be78:	462c      	movcs	r4, r5
 801be7a:	b2a4      	uxthcc	r4, r4
 801be7c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801be80:	462b      	movcc	r3, r5
 801be82:	f04f 0900 	mov.w	r9, #0
 801be86:	9a03      	ldr	r2, [sp, #12]
 801be88:	980c      	ldr	r0, [sp, #48]	; 0x30
 801be8a:	444a      	add	r2, r9
 801be8c:	4548      	cmp	r0, r9
 801be8e:	b292      	uxth	r2, r2
 801be90:	d074      	beq.n	801bf7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801be92:	445a      	add	r2, fp
 801be94:	2004      	movs	r0, #4
 801be96:	4605      	mov	r5, r0
 801be98:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801be9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801be9e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bea2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bea4:	5880      	ldr	r0, [r0, r2]
 801bea6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801beaa:	d014      	beq.n	801bed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801beac:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801beb0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801beb4:	d112      	bne.n	801bedc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801beb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801beb8:	2aff      	cmp	r2, #255	; 0xff
 801beba:	d10f      	bne.n	801bedc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bebc:	0942      	lsrs	r2, r0, #5
 801bebe:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bec2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bec6:	f025 0507 	bic.w	r5, r5, #7
 801beca:	4315      	orrs	r5, r2
 801becc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bed0:	4305      	orrs	r5, r0
 801bed2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bed6:	f109 0901 	add.w	r9, r9, #1
 801beda:	e7d4      	b.n	801be86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bedc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bee0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bee4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801bee8:	9215      	str	r2, [sp, #84]	; 0x54
 801beea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801beec:	fb02 fa0a 	mul.w	sl, r2, sl
 801bef0:	f10a 0201 	add.w	r2, sl, #1
 801bef4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bef8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801befc:	1212      	asrs	r2, r2, #8
 801befe:	fa1f fa82 	uxth.w	sl, r2
 801bf02:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bf06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bf0a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf0e:	43d2      	mvns	r2, r2
 801bf10:	b2d2      	uxtb	r2, r2
 801bf12:	fb16 f60a 	smulbb	r6, r6, sl
 801bf16:	fa5f fc8c 	uxtb.w	ip, ip
 801bf1a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bf1e:	b2c0      	uxtb	r0, r0
 801bf20:	fb07 6702 	mla	r7, r7, r2, r6
 801bf24:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bf28:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801bf2a:	fb10 f00a 	smulbb	r0, r0, sl
 801bf2e:	fb0c 0002 	mla	r0, ip, r2, r0
 801bf32:	b2ed      	uxtb	r5, r5
 801bf34:	b2bf      	uxth	r7, r7
 801bf36:	fb15 f50a 	smulbb	r5, r5, sl
 801bf3a:	b280      	uxth	r0, r0
 801bf3c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bf40:	fb06 5602 	mla	r6, r6, r2, r5
 801bf44:	1c7a      	adds	r2, r7, #1
 801bf46:	1c45      	adds	r5, r0, #1
 801bf48:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bf4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bf50:	b2b6      	uxth	r6, r6
 801bf52:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bf56:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bf5a:	432f      	orrs	r7, r5
 801bf5c:	1c75      	adds	r5, r6, #1
 801bf5e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bf62:	096d      	lsrs	r5, r5, #5
 801bf64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf68:	432f      	orrs	r7, r5
 801bf6a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bf6e:	e7b2      	b.n	801bed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bf70:	200137cc 	.word	0x200137cc
 801bf74:	200137c6 	.word	0x200137c6
 801bf78:	fffff7fb 	.word	0xfffff7fb
 801bf7c:	9203      	str	r2, [sp, #12]
 801bf7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bf80:	458e      	cmp	lr, r1
 801bf82:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bf86:	f4ff af68 	bcc.w	801be5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801bf8a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801bf8c:	9906      	ldr	r1, [sp, #24]
 801bf8e:	8812      	ldrh	r2, [r2, #0]
 801bf90:	1a52      	subs	r2, r2, r1
 801bf92:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bf96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bf98:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bf9a:	3201      	adds	r2, #1
 801bf9c:	428a      	cmp	r2, r1
 801bf9e:	9209      	str	r2, [sp, #36]	; 0x24
 801bfa0:	d111      	bne.n	801bfc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801bfa2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801bfa6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801bfaa:	9b06      	ldr	r3, [sp, #24]
 801bfac:	eba5 0509 	sub.w	r5, r5, r9
 801bfb0:	b2ad      	uxth	r5, r5
 801bfb2:	2d00      	cmp	r5, #0
 801bfb4:	bf08      	it	eq
 801bfb6:	4619      	moveq	r1, r3
 801bfb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfba:	bf18      	it	ne
 801bfbc:	2100      	movne	r1, #0
 801bfbe:	3301      	adds	r3, #1
 801bfc0:	930d      	str	r3, [sp, #52]	; 0x34
 801bfc2:	b289      	uxth	r1, r1
 801bfc4:	e695      	b.n	801bcf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801bfc6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bfca:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801bfce:	1b2d      	subs	r5, r5, r4
 801bfd0:	b2ad      	uxth	r5, r5
 801bfd2:	2d00      	cmp	r5, #0
 801bfd4:	bf18      	it	ne
 801bfd6:	2400      	movne	r4, #0
 801bfd8:	e740      	b.n	801be5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801bfda:	4b04      	ldr	r3, [pc, #16]	; (801bfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801bfdc:	6818      	ldr	r0, [r3, #0]
 801bfde:	6803      	ldr	r3, [r0, #0]
 801bfe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bfe2:	4798      	blx	r3
 801bfe4:	b01d      	add	sp, #116	; 0x74
 801bfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfea:	bf00      	nop
 801bfec:	200137cc 	.word	0x200137cc

0801bff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bff4:	b09f      	sub	sp, #124	; 0x7c
 801bff6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bffa:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bffe:	920a      	str	r2, [sp, #40]	; 0x28
 801c000:	461d      	mov	r5, r3
 801c002:	4604      	mov	r4, r0
 801c004:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c006:	2a00      	cmp	r2, #0
 801c008:	f000 81fa 	beq.w	801c400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c00c:	6828      	ldr	r0, [r5, #0]
 801c00e:	6869      	ldr	r1, [r5, #4]
 801c010:	aa1a      	add	r2, sp, #104	; 0x68
 801c012:	c203      	stmia	r2!, {r0, r1}
 801c014:	6818      	ldr	r0, [r3, #0]
 801c016:	6859      	ldr	r1, [r3, #4]
 801c018:	aa1c      	add	r2, sp, #112	; 0x70
 801c01a:	c203      	stmia	r2!, {r0, r1}
 801c01c:	a81a      	add	r0, sp, #104	; 0x68
 801c01e:	f7f8 fd83 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c022:	4629      	mov	r1, r5
 801c024:	a81c      	add	r0, sp, #112	; 0x70
 801c026:	f7f8 fdc3 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c02a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c02e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c032:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c036:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c03a:	bfd7      	itett	le
 801c03c:	b29a      	uxthle	r2, r3
 801c03e:	2201      	movgt	r2, #1
 801c040:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c044:	fb91 f2f2 	sdivle	r2, r1, r2
 801c048:	9201      	str	r2, [sp, #4]
 801c04a:	9801      	ldr	r0, [sp, #4]
 801c04c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c050:	fb92 f0f0 	sdiv	r0, r2, r0
 801c054:	b280      	uxth	r0, r0
 801c056:	9010      	str	r0, [sp, #64]	; 0x40
 801c058:	9901      	ldr	r1, [sp, #4]
 801c05a:	9801      	ldr	r0, [sp, #4]
 801c05c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c05e:	440e      	add	r6, r1
 801c060:	fb05 2510 	mls	r5, r5, r0, r2
 801c064:	fb15 f503 	smulbb	r5, r5, r3
 801c068:	3e01      	subs	r6, #1
 801c06a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c06e:	fb96 f6f1 	sdiv	r6, r6, r1
 801c072:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c076:	440d      	add	r5, r1
 801c078:	4419      	add	r1, r3
 801c07a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c07e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c082:	441a      	add	r2, r3
 801c084:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c088:	9304      	str	r3, [sp, #16]
 801c08a:	4b96      	ldr	r3, [pc, #600]	; (801c2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c08c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c090:	6818      	ldr	r0, [r3, #0]
 801c092:	6803      	ldr	r3, [r0, #0]
 801c094:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c096:	4798      	blx	r3
 801c098:	4b93      	ldr	r3, [pc, #588]	; (801c2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c09a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c09e:	881a      	ldrh	r2, [r3, #0]
 801c0a0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c0a4:	9318      	str	r3, [sp, #96]	; 0x60
 801c0a6:	fb02 c101 	mla	r1, r2, r1, ip
 801c0aa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c0ae:	4357      	muls	r7, r2
 801c0b0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c0b4:	3601      	adds	r6, #1
 801c0b6:	920b      	str	r2, [sp, #44]	; 0x2c
 801c0b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c0ba:	4b8c      	ldr	r3, [pc, #560]	; (801c2ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c0bc:	b2b6      	uxth	r6, r6
 801c0be:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c0c2:	1d32      	adds	r2, r6, #4
 801c0c4:	9206      	str	r2, [sp, #24]
 801c0c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c0c8:	43d2      	mvns	r2, r2
 801c0ca:	b2d2      	uxtb	r2, r2
 801c0cc:	b2ad      	uxth	r5, r5
 801c0ce:	9215      	str	r2, [sp, #84]	; 0x54
 801c0d0:	9a04      	ldr	r2, [sp, #16]
 801c0d2:	2d00      	cmp	r5, #0
 801c0d4:	bf0c      	ite	eq
 801c0d6:	4611      	moveq	r1, r2
 801c0d8:	2100      	movne	r1, #0
 801c0da:	2200      	movs	r2, #0
 801c0dc:	1b1b      	subs	r3, r3, r4
 801c0de:	b289      	uxth	r1, r1
 801c0e0:	920d      	str	r2, [sp, #52]	; 0x34
 801c0e2:	9319      	str	r3, [sp, #100]	; 0x64
 801c0e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c0e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c0e8:	fa12 f383 	uxtah	r3, r2, r3
 801c0ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c0ee:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c0f2:	3304      	adds	r3, #4
 801c0f4:	9307      	str	r3, [sp, #28]
 801c0f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c0f8:	455b      	cmp	r3, fp
 801c0fa:	f240 817c 	bls.w	801c3f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c0fe:	9a01      	ldr	r2, [sp, #4]
 801c100:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c104:	fbb5 f3f3 	udiv	r3, r5, r3
 801c108:	1ad3      	subs	r3, r2, r3
 801c10a:	b29b      	uxth	r3, r3
 801c10c:	9316      	str	r3, [sp, #88]	; 0x58
 801c10e:	9b07      	ldr	r3, [sp, #28]
 801c110:	9807      	ldr	r0, [sp, #28]
 801c112:	785a      	ldrb	r2, [r3, #1]
 801c114:	789b      	ldrb	r3, [r3, #2]
 801c116:	7800      	ldrb	r0, [r0, #0]
 801c118:	9011      	str	r0, [sp, #68]	; 0x44
 801c11a:	021b      	lsls	r3, r3, #8
 801c11c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c120:	9a07      	ldr	r2, [sp, #28]
 801c122:	78d2      	ldrb	r2, [r2, #3]
 801c124:	4313      	orrs	r3, r2
 801c126:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c128:	3001      	adds	r0, #1
 801c12a:	441a      	add	r2, r3
 801c12c:	9005      	str	r0, [sp, #20]
 801c12e:	1c50      	adds	r0, r2, #1
 801c130:	9003      	str	r0, [sp, #12]
 801c132:	7852      	ldrb	r2, [r2, #1]
 801c134:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c136:	0212      	lsls	r2, r2, #8
 801c138:	5cc3      	ldrb	r3, [r0, r3]
 801c13a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c13e:	431a      	orrs	r2, r3
 801c140:	b293      	uxth	r3, r2
 801c142:	930c      	str	r3, [sp, #48]	; 0x30
 801c144:	2300      	movs	r3, #0
 801c146:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c14a:	9308      	str	r3, [sp, #32]
 801c14c:	461a      	mov	r2, r3
 801c14e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c152:	930e      	str	r3, [sp, #56]	; 0x38
 801c154:	f04f 0801 	mov.w	r8, #1
 801c158:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c15c:	f8cd 8008 	str.w	r8, [sp, #8]
 801c160:	46c4      	mov	ip, r8
 801c162:	930f      	str	r3, [sp, #60]	; 0x3c
 801c164:	2d00      	cmp	r5, #0
 801c166:	d07c      	beq.n	801c262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c168:	45ac      	cmp	ip, r5
 801c16a:	d26c      	bcs.n	801c246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c16c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c16e:	eba5 050c 	sub.w	r5, r5, ip
 801c172:	455b      	cmp	r3, fp
 801c174:	b2ad      	uxth	r5, r5
 801c176:	4608      	mov	r0, r1
 801c178:	d802      	bhi.n	801c180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c17a:	e070      	b.n	801c25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c17c:	2b00      	cmp	r3, #0
 801c17e:	d15c      	bne.n	801c23a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c180:	9b03      	ldr	r3, [sp, #12]
 801c182:	9a02      	ldr	r2, [sp, #8]
 801c184:	785b      	ldrb	r3, [r3, #1]
 801c186:	9902      	ldr	r1, [sp, #8]
 801c188:	f1c2 0207 	rsb	r2, r2, #7
 801c18c:	4093      	lsls	r3, r2
 801c18e:	005b      	lsls	r3, r3, #1
 801c190:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c194:	9b03      	ldr	r3, [sp, #12]
 801c196:	781b      	ldrb	r3, [r3, #0]
 801c198:	410b      	asrs	r3, r1
 801c19a:	3101      	adds	r1, #1
 801c19c:	b2c9      	uxtb	r1, r1
 801c19e:	2908      	cmp	r1, #8
 801c1a0:	9102      	str	r1, [sp, #8]
 801c1a2:	9903      	ldr	r1, [sp, #12]
 801c1a4:	bf0a      	itet	eq
 801c1a6:	3102      	addeq	r1, #2
 801c1a8:	3101      	addne	r1, #1
 801c1aa:	9103      	streq	r1, [sp, #12]
 801c1ac:	b2db      	uxtb	r3, r3
 801c1ae:	bf0a      	itet	eq
 801c1b0:	2100      	moveq	r1, #0
 801c1b2:	9103      	strne	r1, [sp, #12]
 801c1b4:	9102      	streq	r1, [sp, #8]
 801c1b6:	4313      	orrs	r3, r2
 801c1b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c1ba:	b29a      	uxth	r2, r3
 801c1bc:	4291      	cmp	r1, r2
 801c1be:	d30a      	bcc.n	801c1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c1c0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c1c4:	2301      	movs	r3, #1
 801c1c6:	9905      	ldr	r1, [sp, #20]
 801c1c8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c1cc:	d30f      	bcc.n	801c1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c1ce:	2100      	movs	r1, #0
 801c1d0:	4698      	mov	r8, r3
 801c1d2:	9100      	str	r1, [sp, #0]
 801c1d4:	e032      	b.n	801c23c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c1d6:	9b05      	ldr	r3, [sp, #20]
 801c1d8:	429a      	cmp	r2, r3
 801c1da:	d318      	bcc.n	801c20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c1dc:	eb04 0308 	add.w	r3, r4, r8
 801c1e0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c1e4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c1e8:	f108 0301 	add.w	r3, r8, #1
 801c1ec:	b29b      	uxth	r3, r3
 801c1ee:	9905      	ldr	r1, [sp, #20]
 801c1f0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c1f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c1f8:	710e      	strb	r6, [r1, #4]
 801c1fa:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c1fc:	80ce      	strh	r6, [r1, #6]
 801c1fe:	f108 0601 	add.w	r6, r8, #1
 801c202:	714e      	strb	r6, [r1, #5]
 801c204:	9905      	ldr	r1, [sp, #20]
 801c206:	3101      	adds	r1, #1
 801c208:	b289      	uxth	r1, r1
 801c20a:	9105      	str	r1, [sp, #20]
 801c20c:	e7df      	b.n	801c1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c20e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c212:	4611      	mov	r1, r2
 801c214:	795b      	ldrb	r3, [r3, #5]
 801c216:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c21a:	4426      	add	r6, r4
 801c21c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c21e:	4437      	add	r7, r6
 801c220:	2f00      	cmp	r7, #0
 801c222:	dd06      	ble.n	801c232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c224:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c228:	790f      	ldrb	r7, [r1, #4]
 801c22a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c22e:	88c9      	ldrh	r1, [r1, #6]
 801c230:	e7f4      	b.n	801c21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c232:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c236:	b29b      	uxth	r3, r3
 801c238:	e7c5      	b.n	801c1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c23a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c23c:	920c      	str	r2, [sp, #48]	; 0x30
 801c23e:	4601      	mov	r1, r0
 801c240:	9a00      	ldr	r2, [sp, #0]
 801c242:	469c      	mov	ip, r3
 801c244:	e78e      	b.n	801c164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c246:	1957      	adds	r7, r2, r5
 801c248:	ebac 0305 	sub.w	r3, ip, r5
 801c24c:	b2ba      	uxth	r2, r7
 801c24e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c252:	9200      	str	r2, [sp, #0]
 801c254:	b29b      	uxth	r3, r3
 801c256:	2500      	movs	r5, #0
 801c258:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c25a:	455a      	cmp	r2, fp
 801c25c:	d88e      	bhi.n	801c17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c25e:	4601      	mov	r1, r0
 801c260:	e749      	b.n	801c0f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c262:	458c      	cmp	ip, r1
 801c264:	bf2c      	ite	cs
 801c266:	4628      	movcs	r0, r5
 801c268:	462b      	movcc	r3, r5
 801c26a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c26c:	bf27      	ittee	cs
 801c26e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c270:	ebac 0301 	subcs.w	r3, ip, r1
 801c274:	eba1 000c 	subcc.w	r0, r1, ip
 801c278:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c27c:	bf2c      	ite	cs
 801c27e:	b29b      	uxthcs	r3, r3
 801c280:	b280      	uxthcc	r0, r0
 801c282:	2dff      	cmp	r5, #255	; 0xff
 801c284:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c286:	eb02 0705 	add.w	r7, r2, r5
 801c28a:	b2bd      	uxth	r5, r7
 801c28c:	9500      	str	r5, [sp, #0]
 801c28e:	d12f      	bne.n	801c2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c290:	465e      	mov	r6, fp
 801c292:	9d00      	ldr	r5, [sp, #0]
 801c294:	42aa      	cmp	r2, r5
 801c296:	f040 8084 	bne.w	801c3a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c29a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c29c:	458c      	cmp	ip, r1
 801c29e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c2a2:	d3d8      	bcc.n	801c256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c2a4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c2a6:	9904      	ldr	r1, [sp, #16]
 801c2a8:	8812      	ldrh	r2, [r2, #0]
 801c2aa:	1a52      	subs	r2, r2, r1
 801c2ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c2b0:	9a08      	ldr	r2, [sp, #32]
 801c2b2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c2b4:	3201      	adds	r2, #1
 801c2b6:	428a      	cmp	r2, r1
 801c2b8:	9208      	str	r2, [sp, #32]
 801c2ba:	f040 8092 	bne.w	801c3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c2be:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c2c2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c2c6:	9b04      	ldr	r3, [sp, #16]
 801c2c8:	eba5 050c 	sub.w	r5, r5, ip
 801c2cc:	b2ad      	uxth	r5, r5
 801c2ce:	2d00      	cmp	r5, #0
 801c2d0:	bf08      	it	eq
 801c2d2:	4619      	moveq	r1, r3
 801c2d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c2d6:	bf18      	it	ne
 801c2d8:	2100      	movne	r1, #0
 801c2da:	3301      	adds	r3, #1
 801c2dc:	930d      	str	r3, [sp, #52]	; 0x34
 801c2de:	b289      	uxth	r1, r1
 801c2e0:	e700      	b.n	801c0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c2e2:	bf00      	nop
 801c2e4:	200137cc 	.word	0x200137cc
 801c2e8:	200137c6 	.word	0x200137c6
 801c2ec:	fffff7fb 	.word	0xfffff7fb
 801c2f0:	46d9      	mov	r9, fp
 801c2f2:	9d00      	ldr	r5, [sp, #0]
 801c2f4:	42aa      	cmp	r2, r5
 801c2f6:	d0d0      	beq.n	801c29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c2f8:	1c55      	adds	r5, r2, #1
 801c2fa:	4422      	add	r2, r4
 801c2fc:	9517      	str	r5, [sp, #92]	; 0x5c
 801c2fe:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c302:	9a06      	ldr	r2, [sp, #24]
 801c304:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c308:	4472      	add	r2, lr
 801c30a:	9212      	str	r2, [sp, #72]	; 0x48
 801c30c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c30e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c312:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c316:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c318:	1216      	asrs	r6, r2, #8
 801c31a:	fb1a fa07 	smulbb	sl, sl, r7
 801c31e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c322:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c324:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c328:	fb06 a607 	mla	r6, r6, r7, sl
 801c32c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c32e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c332:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c334:	10d5      	asrs	r5, r2, #3
 801c336:	fb1a fa07 	smulbb	sl, sl, r7
 801c33a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c33e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c340:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c344:	fb05 a507 	mla	r5, r5, r7, sl
 801c348:	9f06      	ldr	r7, [sp, #24]
 801c34a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c34e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c350:	00d2      	lsls	r2, r2, #3
 801c352:	fb1e fe07 	smulbb	lr, lr, r7
 801c356:	b2d2      	uxtb	r2, r2
 801c358:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c35a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c35e:	b2b6      	uxth	r6, r6
 801c360:	fb02 e207 	mla	r2, r2, r7, lr
 801c364:	b292      	uxth	r2, r2
 801c366:	b2ad      	uxth	r5, r5
 801c368:	f106 0a01 	add.w	sl, r6, #1
 801c36c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c370:	f102 0e01 	add.w	lr, r2, #1
 801c374:	f105 0a01 	add.w	sl, r5, #1
 801c378:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c37c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c380:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c384:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c388:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c38c:	ea4e 0606 	orr.w	r6, lr, r6
 801c390:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c394:	ea46 060a 	orr.w	r6, r6, sl
 801c398:	f829 6b02 	strh.w	r6, [r9], #2
 801c39c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c3a0:	e7a7      	b.n	801c2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c3a2:	f102 0e01 	add.w	lr, r2, #1
 801c3a6:	4422      	add	r2, r4
 801c3a8:	9f06      	ldr	r7, [sp, #24]
 801c3aa:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c3ae:	9a06      	ldr	r2, [sp, #24]
 801c3b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c3b4:	eb02 0a05 	add.w	sl, r2, r5
 801c3b8:	4a13      	ldr	r2, [pc, #76]	; (801c408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c3ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c3be:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c3c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c3c6:	00d2      	lsls	r2, r2, #3
 801c3c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3cc:	ea49 0202 	orr.w	r2, r9, r2
 801c3d0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c3d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c3d8:	f826 2b02 	strh.w	r2, [r6], #2
 801c3dc:	fa1f f28e 	uxth.w	r2, lr
 801c3e0:	e757      	b.n	801c292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c3e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c3e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c3ea:	1a2d      	subs	r5, r5, r0
 801c3ec:	b2ad      	uxth	r5, r5
 801c3ee:	2d00      	cmp	r5, #0
 801c3f0:	bf18      	it	ne
 801c3f2:	2000      	movne	r0, #0
 801c3f4:	e730      	b.n	801c258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c3f6:	4b05      	ldr	r3, [pc, #20]	; (801c40c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c3f8:	6818      	ldr	r0, [r3, #0]
 801c3fa:	6803      	ldr	r3, [r0, #0]
 801c3fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3fe:	4798      	blx	r3
 801c400:	b01f      	add	sp, #124	; 0x7c
 801c402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c406:	bf00      	nop
 801c408:	fffff800 	.word	0xfffff800
 801c40c:	200137cc 	.word	0x200137cc

0801c410 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c414:	b091      	sub	sp, #68	; 0x44
 801c416:	469b      	mov	fp, r3
 801c418:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c41c:	4616      	mov	r6, r2
 801c41e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c422:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c426:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c42a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c42e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c432:	4604      	mov	r4, r0
 801c434:	460d      	mov	r5, r1
 801c436:	4640      	mov	r0, r8
 801c438:	4659      	mov	r1, fp
 801c43a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c43e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c442:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c446:	f7f3 fc11 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 801c44a:	4631      	mov	r1, r6
 801c44c:	4640      	mov	r0, r8
 801c44e:	f7f3 fc0d 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 801c452:	4b74      	ldr	r3, [pc, #464]	; (801c624 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c454:	8818      	ldrh	r0, [r3, #0]
 801c456:	4b74      	ldr	r3, [pc, #464]	; (801c628 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c458:	8819      	ldrh	r1, [r3, #0]
 801c45a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c45e:	2b00      	cmp	r3, #0
 801c460:	b202      	sxth	r2, r0
 801c462:	b20e      	sxth	r6, r1
 801c464:	da07      	bge.n	801c476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c466:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c46a:	4463      	add	r3, ip
 801c46c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c470:	2300      	movs	r3, #0
 801c472:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c476:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c47a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c47e:	1ad2      	subs	r2, r2, r3
 801c480:	4594      	cmp	ip, r2
 801c482:	bfc4      	itt	gt
 801c484:	1ac2      	subgt	r2, r0, r3
 801c486:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c48a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c48e:	2a00      	cmp	r2, #0
 801c490:	da07      	bge.n	801c4a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c492:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c496:	4462      	add	r2, ip
 801c498:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c49c:	2200      	movs	r2, #0
 801c49e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c4a2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c4a6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c4aa:	eba6 060a 	sub.w	r6, r6, sl
 801c4ae:	42b2      	cmp	r2, r6
 801c4b0:	bfc4      	itt	gt
 801c4b2:	eba1 020a 	subgt.w	r2, r1, sl
 801c4b6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c4ba:	4a5c      	ldr	r2, [pc, #368]	; (801c62c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c4bc:	7812      	ldrb	r2, [r2, #0]
 801c4be:	b9a2      	cbnz	r2, 801c4ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c4c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c4c4:	4286      	cmp	r6, r0
 801c4c6:	4640      	mov	r0, r8
 801c4c8:	9303      	str	r3, [sp, #12]
 801c4ca:	bf14      	ite	ne
 801c4cc:	2600      	movne	r6, #0
 801c4ce:	2601      	moveq	r6, #1
 801c4d0:	f7f3 fc0f 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c4d4:	9b03      	ldr	r3, [sp, #12]
 801c4d6:	b160      	cbz	r0, 801c4f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c4d8:	2300      	movs	r3, #0
 801c4da:	8023      	strh	r3, [r4, #0]
 801c4dc:	8063      	strh	r3, [r4, #2]
 801c4de:	80a3      	strh	r3, [r4, #4]
 801c4e0:	4620      	mov	r0, r4
 801c4e2:	80e3      	strh	r3, [r4, #6]
 801c4e4:	b011      	add	sp, #68	; 0x44
 801c4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4ea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c4ee:	428e      	cmp	r6, r1
 801c4f0:	e7e9      	b.n	801c4c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c4f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c4f6:	9205      	str	r2, [sp, #20]
 801c4f8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c4fc:	9206      	str	r2, [sp, #24]
 801c4fe:	f8bb 2000 	ldrh.w	r2, [fp]
 801c502:	900e      	str	r0, [sp, #56]	; 0x38
 801c504:	1a9b      	subs	r3, r3, r2
 801c506:	b21b      	sxth	r3, r3
 801c508:	9303      	str	r3, [sp, #12]
 801c50a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c50e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c512:	ebaa 0a03 	sub.w	sl, sl, r3
 801c516:	fa0f f38a 	sxth.w	r3, sl
 801c51a:	9304      	str	r3, [sp, #16]
 801c51c:	9b03      	ldr	r3, [sp, #12]
 801c51e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c522:	9b04      	ldr	r3, [sp, #16]
 801c524:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c528:	9b05      	ldr	r3, [sp, #20]
 801c52a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c52e:	a90e      	add	r1, sp, #56	; 0x38
 801c530:	9b06      	ldr	r3, [sp, #24]
 801c532:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c536:	a80c      	add	r0, sp, #48	; 0x30
 801c538:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c53c:	f7f8 fb38 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c540:	4640      	mov	r0, r8
 801c542:	f7f8 faf1 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c546:	a80e      	add	r0, sp, #56	; 0x38
 801c548:	f7f8 faee 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c54c:	4b38      	ldr	r3, [pc, #224]	; (801c630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c54e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c552:	881b      	ldrh	r3, [r3, #0]
 801c554:	9307      	str	r3, [sp, #28]
 801c556:	682b      	ldr	r3, [r5, #0]
 801c558:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c55c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c55e:	4628      	mov	r0, r5
 801c560:	4798      	blx	r3
 801c562:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c566:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c56a:	4681      	mov	r9, r0
 801c56c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c570:	f8db 0000 	ldr.w	r0, [fp]
 801c574:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c576:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c57a:	6803      	ldr	r3, [r0, #0]
 801c57c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c57e:	4798      	blx	r3
 801c580:	4607      	mov	r7, r0
 801c582:	f8db 0000 	ldr.w	r0, [fp]
 801c586:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c58a:	6803      	ldr	r3, [r0, #0]
 801c58c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c590:	9109      	str	r1, [sp, #36]	; 0x24
 801c592:	9208      	str	r2, [sp, #32]
 801c594:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c596:	4798      	blx	r3
 801c598:	f010 0f01 	tst.w	r0, #1
 801c59c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c5a0:	d012      	beq.n	801c5c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c5a2:	f8db 0000 	ldr.w	r0, [fp]
 801c5a6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c5aa:	6803      	ldr	r3, [r0, #0]
 801c5ac:	9200      	str	r2, [sp, #0]
 801c5ae:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c5b0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c5b4:	462b      	mov	r3, r5
 801c5b6:	47b0      	blx	r6
 801c5b8:	9b03      	ldr	r3, [sp, #12]
 801c5ba:	8023      	strh	r3, [r4, #0]
 801c5bc:	9b04      	ldr	r3, [sp, #16]
 801c5be:	8063      	strh	r3, [r4, #2]
 801c5c0:	9b05      	ldr	r3, [sp, #20]
 801c5c2:	80a3      	strh	r3, [r4, #4]
 801c5c4:	9b06      	ldr	r3, [sp, #24]
 801c5c6:	e78b      	b.n	801c4e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c5c8:	fb09 f202 	mul.w	r2, r9, r2
 801c5cc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c5d0:	440f      	add	r7, r1
 801c5d2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c5d6:	b166      	cbz	r6, 801c5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c5d8:	9a07      	ldr	r2, [sp, #28]
 801c5da:	4592      	cmp	sl, r2
 801c5dc:	d109      	bne.n	801c5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c5de:	f8db 0000 	ldr.w	r0, [fp]
 801c5e2:	6802      	ldr	r2, [r0, #0]
 801c5e4:	fb09 f303 	mul.w	r3, r9, r3
 801c5e8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c5ea:	4629      	mov	r1, r5
 801c5ec:	463a      	mov	r2, r7
 801c5ee:	47b0      	blx	r6
 801c5f0:	e7e2      	b.n	801c5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c5f2:	fb0a f303 	mul.w	r3, sl, r3
 801c5f6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c5fa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c5fe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c602:	4545      	cmp	r5, r8
 801c604:	d2d8      	bcs.n	801c5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c606:	f8db 0000 	ldr.w	r0, [fp]
 801c60a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c60e:	6802      	ldr	r2, [r0, #0]
 801c610:	4629      	mov	r1, r5
 801c612:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c616:	005b      	lsls	r3, r3, #1
 801c618:	463a      	mov	r2, r7
 801c61a:	47d0      	blx	sl
 801c61c:	444f      	add	r7, r9
 801c61e:	4435      	add	r5, r6
 801c620:	e7ef      	b.n	801c602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c622:	bf00      	nop
 801c624:	200137c0 	.word	0x200137c0
 801c628:	200137c2 	.word	0x200137c2
 801c62c:	200137c4 	.word	0x200137c4
 801c630:	200137c6 	.word	0x200137c6
 801c634:	200137cc 	.word	0x200137cc

0801c638 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c63a:	4606      	mov	r6, r0
 801c63c:	b087      	sub	sp, #28
 801c63e:	460c      	mov	r4, r1
 801c640:	4617      	mov	r7, r2
 801c642:	461d      	mov	r5, r3
 801c644:	b333      	cbz	r3, 801c694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c646:	4608      	mov	r0, r1
 801c648:	f7f3 fb53 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c64c:	bb10      	cbnz	r0, 801c694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c64e:	6820      	ldr	r0, [r4, #0]
 801c650:	6861      	ldr	r1, [r4, #4]
 801c652:	4c1c      	ldr	r4, [pc, #112]	; (801c6c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c654:	ab04      	add	r3, sp, #16
 801c656:	c303      	stmia	r3!, {r0, r1}
 801c658:	a804      	add	r0, sp, #16
 801c65a:	f7f8 fa65 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c65e:	6820      	ldr	r0, [r4, #0]
 801c660:	6803      	ldr	r3, [r0, #0]
 801c662:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c664:	4798      	blx	r3
 801c666:	2dff      	cmp	r5, #255	; 0xff
 801c668:	d016      	beq.n	801c698 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c66a:	f010 0f08 	tst.w	r0, #8
 801c66e:	6820      	ldr	r0, [r4, #0]
 801c670:	d015      	beq.n	801c69e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c672:	2400      	movs	r4, #0
 801c674:	6801      	ldr	r1, [r0, #0]
 801c676:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c67a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c67e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c682:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c686:	9401      	str	r4, [sp, #4]
 801c688:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c68c:	9400      	str	r4, [sp, #0]
 801c68e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c690:	4639      	mov	r1, r7
 801c692:	47a0      	blx	r4
 801c694:	b007      	add	sp, #28
 801c696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c698:	f010 0f02 	tst.w	r0, #2
 801c69c:	e7e7      	b.n	801c66e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c69e:	6803      	ldr	r3, [r0, #0]
 801c6a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6a2:	4798      	blx	r3
 801c6a4:	4b08      	ldr	r3, [pc, #32]	; (801c6c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c6a6:	881a      	ldrh	r2, [r3, #0]
 801c6a8:	6833      	ldr	r3, [r6, #0]
 801c6aa:	e9cd 7500 	strd	r7, r5, [sp]
 801c6ae:	4601      	mov	r1, r0
 801c6b0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c6b2:	4630      	mov	r0, r6
 801c6b4:	ab04      	add	r3, sp, #16
 801c6b6:	47a8      	blx	r5
 801c6b8:	6820      	ldr	r0, [r4, #0]
 801c6ba:	6803      	ldr	r3, [r0, #0]
 801c6bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c6be:	4798      	blx	r3
 801c6c0:	e7e8      	b.n	801c694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c6c2:	bf00      	nop
 801c6c4:	200137cc 	.word	0x200137cc
 801c6c8:	200137c6 	.word	0x200137c6

0801c6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c6cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c6d0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c6d4:	9e08      	ldr	r6, [sp, #32]
 801c6d6:	4688      	mov	r8, r1
 801c6d8:	4614      	mov	r4, r2
 801c6da:	461d      	mov	r5, r3
 801c6dc:	2f00      	cmp	r7, #0
 801c6de:	f000 80a9 	beq.w	801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c6e2:	4618      	mov	r0, r3
 801c6e4:	f7f3 fb05 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c6e8:	2800      	cmp	r0, #0
 801c6ea:	f040 80a3 	bne.w	801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c6ee:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c6f2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c6f6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c6fa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c6fe:	fb04 1303 	mla	r3, r4, r3, r1
 801c702:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c706:	4365      	muls	r5, r4
 801c708:	2fff      	cmp	r7, #255	; 0xff
 801c70a:	eba4 0200 	sub.w	r2, r4, r0
 801c70e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c712:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c716:	d04a      	beq.n	801c7ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c718:	b2bc      	uxth	r4, r7
 801c71a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c71e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c722:	fa5f f788 	uxtb.w	r7, r8
 801c726:	b2f3      	uxtb	r3, r6
 801c728:	0040      	lsls	r0, r0, #1
 801c72a:	fb0e fe04 	mul.w	lr, lr, r4
 801c72e:	4367      	muls	r7, r4
 801c730:	4363      	muls	r3, r4
 801c732:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c736:	fa1f fc8c 	uxth.w	ip, ip
 801c73a:	42a9      	cmp	r1, r5
 801c73c:	d27a      	bcs.n	801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c73e:	eb01 0900 	add.w	r9, r1, r0
 801c742:	4549      	cmp	r1, r9
 801c744:	d231      	bcs.n	801c7aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c746:	880a      	ldrh	r2, [r1, #0]
 801c748:	1214      	asrs	r4, r2, #8
 801c74a:	10d6      	asrs	r6, r2, #3
 801c74c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c750:	00d2      	lsls	r2, r2, #3
 801c752:	b2d2      	uxtb	r2, r2
 801c754:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c758:	fb14 f40c 	smulbb	r4, r4, ip
 801c75c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c760:	4474      	add	r4, lr
 801c762:	fb12 f20c 	smulbb	r2, r2, ip
 801c766:	b2a4      	uxth	r4, r4
 801c768:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c76c:	441a      	add	r2, r3
 801c76e:	b292      	uxth	r2, r2
 801c770:	f104 0a01 	add.w	sl, r4, #1
 801c774:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c778:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c77c:	fb16 f60c 	smulbb	r6, r6, ip
 801c780:	f102 0a01 	add.w	sl, r2, #1
 801c784:	443e      	add	r6, r7
 801c786:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c78a:	b2b6      	uxth	r6, r6
 801c78c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c790:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c794:	4322      	orrs	r2, r4
 801c796:	1c74      	adds	r4, r6, #1
 801c798:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c79c:	0976      	lsrs	r6, r6, #5
 801c79e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c7a2:	4332      	orrs	r2, r6
 801c7a4:	f821 2b02 	strh.w	r2, [r1], #2
 801c7a8:	e7cb      	b.n	801c742 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c7aa:	4441      	add	r1, r8
 801c7ac:	e7c5      	b.n	801c73a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c7ae:	4f22      	ldr	r7, [pc, #136]	; (801c838 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c7b0:	0973      	lsrs	r3, r6, #5
 801c7b2:	ea08 0707 	and.w	r7, r8, r7
 801c7b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c7ba:	433b      	orrs	r3, r7
 801c7bc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c7c0:	4333      	orrs	r3, r6
 801c7c2:	07e7      	lsls	r7, r4, #31
 801c7c4:	b29b      	uxth	r3, r3
 801c7c6:	d50b      	bpl.n	801c7e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c7c8:	0040      	lsls	r0, r0, #1
 801c7ca:	0052      	lsls	r2, r2, #1
 801c7cc:	42a9      	cmp	r1, r5
 801c7ce:	d231      	bcs.n	801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7d0:	180c      	adds	r4, r1, r0
 801c7d2:	42a1      	cmp	r1, r4
 801c7d4:	d202      	bcs.n	801c7dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c7d6:	f821 3b02 	strh.w	r3, [r1], #2
 801c7da:	e7fa      	b.n	801c7d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c7dc:	4411      	add	r1, r2
 801c7de:	e7f5      	b.n	801c7cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c7e0:	078e      	lsls	r6, r1, #30
 801c7e2:	d008      	beq.n	801c7f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c7e4:	0066      	lsls	r6, r4, #1
 801c7e6:	460a      	mov	r2, r1
 801c7e8:	42aa      	cmp	r2, r5
 801c7ea:	d202      	bcs.n	801c7f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c7ec:	8013      	strh	r3, [r2, #0]
 801c7ee:	4432      	add	r2, r6
 801c7f0:	e7fa      	b.n	801c7e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c7f2:	3102      	adds	r1, #2
 801c7f4:	3801      	subs	r0, #1
 801c7f6:	07c2      	lsls	r2, r0, #31
 801c7f8:	d50b      	bpl.n	801c812 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c7fa:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c7fe:	3a01      	subs	r2, #1
 801c800:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c804:	0066      	lsls	r6, r4, #1
 801c806:	42aa      	cmp	r2, r5
 801c808:	d202      	bcs.n	801c810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c80a:	8013      	strh	r3, [r2, #0]
 801c80c:	4432      	add	r2, r6
 801c80e:	e7fa      	b.n	801c806 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c810:	3801      	subs	r0, #1
 801c812:	b178      	cbz	r0, 801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c814:	1040      	asrs	r0, r0, #1
 801c816:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c81a:	0080      	lsls	r0, r0, #2
 801c81c:	0064      	lsls	r4, r4, #1
 801c81e:	42a9      	cmp	r1, r5
 801c820:	d208      	bcs.n	801c834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c822:	180e      	adds	r6, r1, r0
 801c824:	460a      	mov	r2, r1
 801c826:	42b2      	cmp	r2, r6
 801c828:	d202      	bcs.n	801c830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c82a:	f842 3b04 	str.w	r3, [r2], #4
 801c82e:	e7fa      	b.n	801c826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c830:	4421      	add	r1, r4
 801c832:	e7f4      	b.n	801c81e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c834:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c838:	00fff800 	.word	0x00fff800

0801c83c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c83c:	2200      	movs	r2, #0
 801c83e:	4912      	ldr	r1, [pc, #72]	; (801c888 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c840:	6042      	str	r2, [r0, #4]
 801c842:	6001      	str	r1, [r0, #0]
 801c844:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c848:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c84c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c850:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c854:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c858:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c85c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c860:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c864:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c868:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c86c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c870:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c874:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c878:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c87c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c880:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c884:	4770      	bx	lr
 801c886:	bf00      	nop
 801c888:	0802d14c 	.word	0x0802d14c

0801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c88c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c890:	460d      	mov	r5, r1
 801c892:	b08d      	sub	sp, #52	; 0x34
 801c894:	4604      	mov	r4, r0
 801c896:	6808      	ldr	r0, [r1, #0]
 801c898:	6849      	ldr	r1, [r1, #4]
 801c89a:	4699      	mov	r9, r3
 801c89c:	ab08      	add	r3, sp, #32
 801c89e:	c303      	stmia	r3!, {r0, r1}
 801c8a0:	6810      	ldr	r0, [r2, #0]
 801c8a2:	6851      	ldr	r1, [r2, #4]
 801c8a4:	ab0a      	add	r3, sp, #40	; 0x28
 801c8a6:	c303      	stmia	r3!, {r0, r1}
 801c8a8:	a808      	add	r0, sp, #32
 801c8aa:	f7f8 f93d 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8ae:	4629      	mov	r1, r5
 801c8b0:	a80a      	add	r0, sp, #40	; 0x28
 801c8b2:	f7f8 f97d 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8b6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c8ba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c8be:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c8c2:	4d63      	ldr	r5, [pc, #396]	; (801ca50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c8c4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c8c8:	6828      	ldr	r0, [r5, #0]
 801c8ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c8ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c8d2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c8d6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c8da:	440a      	add	r2, r1
 801c8dc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c8e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c8e4:	4413      	add	r3, r2
 801c8e6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c8ea:	6803      	ldr	r3, [r0, #0]
 801c8ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c8ee:	4798      	blx	r3
 801c8f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c8f4:	d119      	bne.n	801c92a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c8f6:	f010 0f20 	tst.w	r0, #32
 801c8fa:	6828      	ldr	r0, [r5, #0]
 801c8fc:	d018      	beq.n	801c930 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c8fe:	2500      	movs	r5, #0
 801c900:	6801      	ldr	r1, [r0, #0]
 801c902:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c906:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c90a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c90e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c912:	9502      	str	r5, [sp, #8]
 801c914:	b2b6      	uxth	r6, r6
 801c916:	fa1f f588 	uxth.w	r5, r8
 801c91a:	9601      	str	r6, [sp, #4]
 801c91c:	9500      	str	r5, [sp, #0]
 801c91e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c920:	4621      	mov	r1, r4
 801c922:	47a8      	blx	r5
 801c924:	b00d      	add	sp, #52	; 0x34
 801c926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c92a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c92e:	e7e4      	b.n	801c8fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c930:	6803      	ldr	r3, [r0, #0]
 801c932:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c934:	4798      	blx	r3
 801c936:	4947      	ldr	r1, [pc, #284]	; (801ca54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c938:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c93c:	880b      	ldrh	r3, [r1, #0]
 801c93e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c942:	fb03 5202 	mla	r2, r3, r2, r5
 801c946:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c94a:	4373      	muls	r3, r6
 801c94c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c950:	9307      	str	r3, [sp, #28]
 801c952:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c956:	9306      	str	r3, [sp, #24]
 801c958:	468a      	mov	sl, r1
 801c95a:	9b07      	ldr	r3, [sp, #28]
 801c95c:	4298      	cmp	r0, r3
 801c95e:	d270      	bcs.n	801ca42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c960:	9b06      	ldr	r3, [sp, #24]
 801c962:	4621      	mov	r1, r4
 801c964:	eb00 0b03 	add.w	fp, r0, r3
 801c968:	4558      	cmp	r0, fp
 801c96a:	d25d      	bcs.n	801ca28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c96c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c970:	0e23      	lsrs	r3, r4, #24
 801c972:	d014      	beq.n	801c99e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c974:	2bff      	cmp	r3, #255	; 0xff
 801c976:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c97a:	d112      	bne.n	801c9a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c97c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c980:	d10f      	bne.n	801c9a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c982:	0963      	lsrs	r3, r4, #5
 801c984:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c988:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c98c:	f02c 0c07 	bic.w	ip, ip, #7
 801c990:	ea43 0c0c 	orr.w	ip, r3, ip
 801c994:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c998:	ea4c 0404 	orr.w	r4, ip, r4
 801c99c:	8004      	strh	r4, [r0, #0]
 801c99e:	3002      	adds	r0, #2
 801c9a0:	e7e2      	b.n	801c968 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c9a2:	fb09 f303 	mul.w	r3, r9, r3
 801c9a6:	8807      	ldrh	r7, [r0, #0]
 801c9a8:	1c5a      	adds	r2, r3, #1
 801c9aa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c9ae:	1212      	asrs	r2, r2, #8
 801c9b0:	123e      	asrs	r6, r7, #8
 801c9b2:	b293      	uxth	r3, r2
 801c9b4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c9b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c9bc:	43d2      	mvns	r2, r2
 801c9be:	b2d2      	uxtb	r2, r2
 801c9c0:	10fd      	asrs	r5, r7, #3
 801c9c2:	fb1e fe03 	smulbb	lr, lr, r3
 801c9c6:	00ff      	lsls	r7, r7, #3
 801c9c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c9cc:	fb06 e602 	mla	r6, r6, r2, lr
 801c9d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c9d4:	b2ff      	uxtb	r7, r7
 801c9d6:	fa5f fc8c 	uxtb.w	ip, ip
 801c9da:	b2e4      	uxtb	r4, r4
 801c9dc:	b2b6      	uxth	r6, r6
 801c9de:	fb1c fc03 	smulbb	ip, ip, r3
 801c9e2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c9e6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c9ea:	fb14 f403 	smulbb	r4, r4, r3
 801c9ee:	fb05 c502 	mla	r5, r5, r2, ip
 801c9f2:	f106 0e01 	add.w	lr, r6, #1
 801c9f6:	fb07 4702 	mla	r7, r7, r2, r4
 801c9fa:	b2ad      	uxth	r5, r5
 801c9fc:	b2bf      	uxth	r7, r7
 801c9fe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ca02:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ca06:	f105 0c01 	add.w	ip, r5, #1
 801ca0a:	1c7e      	adds	r6, r7, #1
 801ca0c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ca10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ca14:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ca18:	096d      	lsrs	r5, r5, #5
 801ca1a:	ea46 060e 	orr.w	r6, r6, lr
 801ca1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca22:	432e      	orrs	r6, r5
 801ca24:	8006      	strh	r6, [r0, #0]
 801ca26:	e7ba      	b.n	801c99e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca28:	f8ba 3000 	ldrh.w	r3, [sl]
 801ca2c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ca30:	eba3 0308 	sub.w	r3, r3, r8
 801ca34:	eba4 0408 	sub.w	r4, r4, r8
 801ca38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ca3c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ca40:	e78b      	b.n	801c95a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ca42:	4b03      	ldr	r3, [pc, #12]	; (801ca50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ca44:	6818      	ldr	r0, [r3, #0]
 801ca46:	6803      	ldr	r3, [r0, #0]
 801ca48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca4a:	4798      	blx	r3
 801ca4c:	e76a      	b.n	801c924 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ca4e:	bf00      	nop
 801ca50:	200137cc 	.word	0x200137cc
 801ca54:	200137c6 	.word	0x200137c6

0801ca58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ca58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ca5c:	460c      	mov	r4, r1
 801ca5e:	b085      	sub	sp, #20
 801ca60:	6810      	ldr	r0, [r2, #0]
 801ca62:	6851      	ldr	r1, [r2, #4]
 801ca64:	466d      	mov	r5, sp
 801ca66:	c503      	stmia	r5!, {r0, r1}
 801ca68:	6818      	ldr	r0, [r3, #0]
 801ca6a:	6859      	ldr	r1, [r3, #4]
 801ca6c:	4616      	mov	r6, r2
 801ca6e:	c503      	stmia	r5!, {r0, r1}
 801ca70:	4668      	mov	r0, sp
 801ca72:	f7f8 f859 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca76:	4631      	mov	r1, r6
 801ca78:	a802      	add	r0, sp, #8
 801ca7a:	f7f8 f899 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca7e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ca82:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ca86:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ca8a:	4d28      	ldr	r5, [pc, #160]	; (801cb2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ca8c:	4e28      	ldr	r6, [pc, #160]	; (801cb30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ca8e:	6828      	ldr	r0, [r5, #0]
 801ca90:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ca94:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ca98:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ca9c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801caa0:	f8bd 1000 	ldrh.w	r1, [sp]
 801caa4:	440a      	add	r2, r1
 801caa6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801caaa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801caae:	4413      	add	r3, r2
 801cab0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cab4:	6803      	ldr	r3, [r0, #0]
 801cab6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cab8:	4798      	blx	r3
 801caba:	8833      	ldrh	r3, [r6, #0]
 801cabc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cac0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cac4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cb34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cac8:	fb03 1202 	mla	r2, r3, r2, r1
 801cacc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cad0:	fb08 f303 	mul.w	r3, r8, r3
 801cad4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cad8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cadc:	4298      	cmp	r0, r3
 801cade:	d21d      	bcs.n	801cb1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cae0:	eb00 080c 	add.w	r8, r0, ip
 801cae4:	4540      	cmp	r0, r8
 801cae6:	d20f      	bcs.n	801cb08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cae8:	f854 1b04 	ldr.w	r1, [r4], #4
 801caec:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801caf0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801caf4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801caf8:	ea42 0209 	orr.w	r2, r2, r9
 801cafc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cb00:	430a      	orrs	r2, r1
 801cb02:	f820 2b02 	strh.w	r2, [r0], #2
 801cb06:	e7ed      	b.n	801cae4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cb08:	8832      	ldrh	r2, [r6, #0]
 801cb0a:	1bd2      	subs	r2, r2, r7
 801cb0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cb10:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cb14:	1bd2      	subs	r2, r2, r7
 801cb16:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cb1a:	e7df      	b.n	801cadc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cb1c:	6828      	ldr	r0, [r5, #0]
 801cb1e:	6803      	ldr	r3, [r0, #0]
 801cb20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb22:	4798      	blx	r3
 801cb24:	b005      	add	sp, #20
 801cb26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cb2a:	bf00      	nop
 801cb2c:	200137cc 	.word	0x200137cc
 801cb30:	200137c6 	.word	0x200137c6
 801cb34:	fffff800 	.word	0xfffff800

0801cb38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cb38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cb3c:	460e      	mov	r6, r1
 801cb3e:	b08e      	sub	sp, #56	; 0x38
 801cb40:	4604      	mov	r4, r0
 801cb42:	6808      	ldr	r0, [r1, #0]
 801cb44:	6849      	ldr	r1, [r1, #4]
 801cb46:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801cd20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cb4a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801cd24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cb4e:	461d      	mov	r5, r3
 801cb50:	ab0a      	add	r3, sp, #40	; 0x28
 801cb52:	c303      	stmia	r3!, {r0, r1}
 801cb54:	6810      	ldr	r0, [r2, #0]
 801cb56:	6851      	ldr	r1, [r2, #4]
 801cb58:	ab0c      	add	r3, sp, #48	; 0x30
 801cb5a:	c303      	stmia	r3!, {r0, r1}
 801cb5c:	a80a      	add	r0, sp, #40	; 0x28
 801cb5e:	f7f7 ffe3 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb62:	4631      	mov	r1, r6
 801cb64:	a80c      	add	r0, sp, #48	; 0x30
 801cb66:	f7f8 f823 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb6a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cb6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cb72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cb76:	f8d8 0000 	ldr.w	r0, [r8]
 801cb7a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cb7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cb82:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cb8a:	440c      	add	r4, r1
 801cb8c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cb90:	440a      	add	r2, r1
 801cb92:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cb96:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cb9a:	4413      	add	r3, r2
 801cb9c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cba0:	6803      	ldr	r3, [r0, #0]
 801cba2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cba4:	4798      	blx	r3
 801cba6:	2dff      	cmp	r5, #255	; 0xff
 801cba8:	d124      	bne.n	801cbf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cbaa:	f010 0f01 	tst.w	r0, #1
 801cbae:	f8d8 0000 	ldr.w	r0, [r8]
 801cbb2:	d022      	beq.n	801cbfa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cbb4:	2100      	movs	r1, #0
 801cbb6:	f8d0 c000 	ldr.w	ip, [r0]
 801cbba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cbbe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cbc2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cbc6:	f04f 0e01 	mov.w	lr, #1
 801cbca:	f8cd e018 	str.w	lr, [sp, #24]
 801cbce:	f8b9 e000 	ldrh.w	lr, [r9]
 801cbd2:	9503      	str	r5, [sp, #12]
 801cbd4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cbd8:	b2b6      	uxth	r6, r6
 801cbda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cbde:	9102      	str	r1, [sp, #8]
 801cbe0:	b2bf      	uxth	r7, r7
 801cbe2:	9601      	str	r6, [sp, #4]
 801cbe4:	9700      	str	r7, [sp, #0]
 801cbe6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cbea:	4621      	mov	r1, r4
 801cbec:	47a8      	blx	r5
 801cbee:	b00e      	add	sp, #56	; 0x38
 801cbf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cbf4:	f010 0f04 	tst.w	r0, #4
 801cbf8:	e7d9      	b.n	801cbae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cbfa:	6803      	ldr	r3, [r0, #0]
 801cbfc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbfe:	4798      	blx	r3
 801cc00:	f8b9 3000 	ldrh.w	r3, [r9]
 801cc04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cc08:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cc0c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cc10:	fb03 1202 	mla	r2, r3, r2, r1
 801cc14:	ebac 0c07 	sub.w	ip, ip, r7
 801cc18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc1c:	435e      	muls	r6, r3
 801cc1e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cc22:	2dff      	cmp	r5, #255	; 0xff
 801cc24:	eba3 0707 	sub.w	r7, r3, r7
 801cc28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cc2c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cc30:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cc34:	d049      	beq.n	801ccca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cc36:	43eb      	mvns	r3, r5
 801cc38:	fa1f f985 	uxth.w	r9, r5
 801cc3c:	b2db      	uxtb	r3, r3
 801cc3e:	42b0      	cmp	r0, r6
 801cc40:	d266      	bcs.n	801cd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cc42:	eb00 0a0e 	add.w	sl, r0, lr
 801cc46:	4550      	cmp	r0, sl
 801cc48:	4621      	mov	r1, r4
 801cc4a:	f104 0403 	add.w	r4, r4, #3
 801cc4e:	d25b      	bcs.n	801cd08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cc50:	8802      	ldrh	r2, [r0, #0]
 801cc52:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cc56:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cc5a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cc5e:	fb11 f109 	smulbb	r1, r1, r9
 801cc62:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cc66:	10d5      	asrs	r5, r2, #3
 801cc68:	fb08 1803 	mla	r8, r8, r3, r1
 801cc6c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cc70:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc74:	fb11 f109 	smulbb	r1, r1, r9
 801cc78:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cc7c:	fb05 1503 	mla	r5, r5, r3, r1
 801cc80:	00d2      	lsls	r2, r2, #3
 801cc82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cc86:	b2d2      	uxtb	r2, r2
 801cc88:	fb11 f109 	smulbb	r1, r1, r9
 801cc8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc90:	fa1f f888 	uxth.w	r8, r8
 801cc94:	fb02 1203 	mla	r2, r2, r3, r1
 801cc98:	b292      	uxth	r2, r2
 801cc9a:	f108 0101 	add.w	r1, r8, #1
 801cc9e:	b2ad      	uxth	r5, r5
 801cca0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cca4:	1c51      	adds	r1, r2, #1
 801cca6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ccaa:	1c69      	adds	r1, r5, #1
 801ccac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ccb0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ccb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ccb8:	096d      	lsrs	r5, r5, #5
 801ccba:	ea42 0208 	orr.w	r2, r2, r8
 801ccbe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ccc2:	432a      	orrs	r2, r5
 801ccc4:	f820 2b02 	strh.w	r2, [r0], #2
 801ccc8:	e7bd      	b.n	801cc46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ccca:	4a14      	ldr	r2, [pc, #80]	; (801cd1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cccc:	42b0      	cmp	r0, r6
 801ccce:	d21f      	bcs.n	801cd10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ccd0:	eb00 050e 	add.w	r5, r0, lr
 801ccd4:	42a8      	cmp	r0, r5
 801ccd6:	4621      	mov	r1, r4
 801ccd8:	f104 0403 	add.w	r4, r4, #3
 801ccdc:	d210      	bcs.n	801cd00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ccde:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cce2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cce6:	00db      	lsls	r3, r3, #3
 801cce8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ccec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ccf0:	430b      	orrs	r3, r1
 801ccf2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ccf6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ccfa:	f820 3b02 	strh.w	r3, [r0], #2
 801ccfe:	e7e9      	b.n	801ccd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cd00:	4438      	add	r0, r7
 801cd02:	eb01 040c 	add.w	r4, r1, ip
 801cd06:	e7e1      	b.n	801cccc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cd08:	4438      	add	r0, r7
 801cd0a:	eb01 040c 	add.w	r4, r1, ip
 801cd0e:	e796      	b.n	801cc3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cd10:	4b03      	ldr	r3, [pc, #12]	; (801cd20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cd12:	6818      	ldr	r0, [r3, #0]
 801cd14:	6803      	ldr	r3, [r0, #0]
 801cd16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cd18:	4798      	blx	r3
 801cd1a:	e768      	b.n	801cbee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cd1c:	fffff800 	.word	0xfffff800
 801cd20:	200137cc 	.word	0x200137cc
 801cd24:	200137c6 	.word	0x200137c6

0801cd28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cd28:	b4f0      	push	{r4, r5, r6, r7}
 801cd2a:	4616      	mov	r6, r2
 801cd2c:	2e01      	cmp	r6, #1
 801cd2e:	461c      	mov	r4, r3
 801cd30:	460d      	mov	r5, r1
 801cd32:	9a04      	ldr	r2, [sp, #16]
 801cd34:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cd38:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cd3c:	d012      	beq.n	801cd64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cd3e:	d303      	bcc.n	801cd48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cd40:	2e02      	cmp	r6, #2
 801cd42:	d00a      	beq.n	801cd5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cd44:	bcf0      	pop	{r4, r5, r6, r7}
 801cd46:	4770      	bx	lr
 801cd48:	6805      	ldr	r5, [r0, #0]
 801cd4a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cd4e:	68ed      	ldr	r5, [r5, #12]
 801cd50:	4613      	mov	r3, r2
 801cd52:	46ac      	mov	ip, r5
 801cd54:	4622      	mov	r2, r4
 801cd56:	bcf0      	pop	{r4, r5, r6, r7}
 801cd58:	4760      	bx	ip
 801cd5a:	4621      	mov	r1, r4
 801cd5c:	4628      	mov	r0, r5
 801cd5e:	bcf0      	pop	{r4, r5, r6, r7}
 801cd60:	f7ff bd94 	b.w	801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cd64:	4621      	mov	r1, r4
 801cd66:	4628      	mov	r0, r5
 801cd68:	bcf0      	pop	{r4, r5, r6, r7}
 801cd6a:	f7ff bee5 	b.w	801cb38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801cd70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cd70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd74:	4681      	mov	r9, r0
 801cd76:	b093      	sub	sp, #76	; 0x4c
 801cd78:	6810      	ldr	r0, [r2, #0]
 801cd7a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801cd7e:	4f6d      	ldr	r7, [pc, #436]	; (801cf34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801cd80:	4688      	mov	r8, r1
 801cd82:	6851      	ldr	r1, [r2, #4]
 801cd84:	ac0e      	add	r4, sp, #56	; 0x38
 801cd86:	c403      	stmia	r4!, {r0, r1}
 801cd88:	6818      	ldr	r0, [r3, #0]
 801cd8a:	6859      	ldr	r1, [r3, #4]
 801cd8c:	ac10      	add	r4, sp, #64	; 0x40
 801cd8e:	4616      	mov	r6, r2
 801cd90:	c403      	stmia	r4!, {r0, r1}
 801cd92:	a80e      	add	r0, sp, #56	; 0x38
 801cd94:	f7f7 fec8 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd98:	4631      	mov	r1, r6
 801cd9a:	a810      	add	r0, sp, #64	; 0x40
 801cd9c:	f7f7 ff08 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cda0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801cda4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cda8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cdac:	4e62      	ldr	r6, [pc, #392]	; (801cf38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cdae:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801cdb2:	6830      	ldr	r0, [r6, #0]
 801cdb4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801cdb8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cdbc:	4489      	add	r9, r1
 801cdbe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801cdc2:	440a      	add	r2, r1
 801cdc4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cdc8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cdcc:	4413      	add	r3, r2
 801cdce:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cdd2:	6803      	ldr	r3, [r0, #0]
 801cdd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cdd6:	4798      	blx	r3
 801cdd8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cddc:	6830      	ldr	r0, [r6, #0]
 801cdde:	d01d      	beq.n	801ce1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cde0:	2200      	movs	r2, #0
 801cde2:	6801      	ldr	r1, [r0, #0]
 801cde4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801cde8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cdec:	220b      	movs	r2, #11
 801cdee:	9207      	str	r2, [sp, #28]
 801cdf0:	883a      	ldrh	r2, [r7, #0]
 801cdf2:	9206      	str	r2, [sp, #24]
 801cdf4:	2201      	movs	r2, #1
 801cdf6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cdfa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cdfe:	9203      	str	r2, [sp, #12]
 801ce00:	b2a4      	uxth	r4, r4
 801ce02:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ce06:	9200      	str	r2, [sp, #0]
 801ce08:	b2ad      	uxth	r5, r5
 801ce0a:	9502      	str	r5, [sp, #8]
 801ce0c:	9401      	str	r4, [sp, #4]
 801ce0e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ce10:	4642      	mov	r2, r8
 801ce12:	4649      	mov	r1, r9
 801ce14:	47a0      	blx	r4
 801ce16:	b013      	add	sp, #76	; 0x4c
 801ce18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce1c:	6803      	ldr	r3, [r0, #0]
 801ce1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ce20:	4798      	blx	r3
 801ce22:	883b      	ldrh	r3, [r7, #0]
 801ce24:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ce28:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ce2c:	fb03 1202 	mla	r2, r3, r2, r1
 801ce30:	435d      	muls	r5, r3
 801ce32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ce36:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ce3a:	920c      	str	r2, [sp, #48]	; 0x30
 801ce3c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ce40:	1b12      	subs	r2, r2, r4
 801ce42:	920d      	str	r2, [sp, #52]	; 0x34
 801ce44:	0062      	lsls	r2, r4, #1
 801ce46:	1b1c      	subs	r4, r3, r4
 801ce48:	0063      	lsls	r3, r4, #1
 801ce4a:	920a      	str	r2, [sp, #40]	; 0x28
 801ce4c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce4e:	f04f 0e04 	mov.w	lr, #4
 801ce52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ce54:	4298      	cmp	r0, r3
 801ce56:	d266      	bcs.n	801cf26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ce58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce5a:	eb00 0b03 	add.w	fp, r0, r3
 801ce5e:	4558      	cmp	r0, fp
 801ce60:	d25c      	bcs.n	801cf1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ce62:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ce66:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ce6a:	f858 2003 	ldr.w	r2, [r8, r3]
 801ce6e:	0e11      	lsrs	r1, r2, #24
 801ce70:	d012      	beq.n	801ce98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ce72:	29ff      	cmp	r1, #255	; 0xff
 801ce74:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ce78:	d110      	bne.n	801ce9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ce7a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ce7e:	d10d      	bne.n	801ce9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ce80:	0953      	lsrs	r3, r2, #5
 801ce82:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ce86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce8a:	f027 0707 	bic.w	r7, r7, #7
 801ce8e:	431f      	orrs	r7, r3
 801ce90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ce94:	433a      	orrs	r2, r7
 801ce96:	8002      	strh	r2, [r0, #0]
 801ce98:	3002      	adds	r0, #2
 801ce9a:	e7e0      	b.n	801ce5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ce9c:	fb0a f101 	mul.w	r1, sl, r1
 801cea0:	8806      	ldrh	r6, [r0, #0]
 801cea2:	1c4b      	adds	r3, r1, #1
 801cea4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cea8:	1235      	asrs	r5, r6, #8
 801ceaa:	10f4      	asrs	r4, r6, #3
 801ceac:	121b      	asrs	r3, r3, #8
 801ceae:	00f6      	lsls	r6, r6, #3
 801ceb0:	b299      	uxth	r1, r3
 801ceb2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ceb6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ceba:	b2f6      	uxtb	r6, r6
 801cebc:	43db      	mvns	r3, r3
 801cebe:	b2d2      	uxtb	r2, r2
 801cec0:	b2db      	uxtb	r3, r3
 801cec2:	fb1c fc01 	smulbb	ip, ip, r1
 801cec6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ceca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cece:	fb12 f201 	smulbb	r2, r2, r1
 801ced2:	fb05 c503 	mla	r5, r5, r3, ip
 801ced6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ceda:	b2ff      	uxtb	r7, r7
 801cedc:	fb06 2203 	mla	r2, r6, r3, r2
 801cee0:	b2ad      	uxth	r5, r5
 801cee2:	fb17 f701 	smulbb	r7, r7, r1
 801cee6:	b292      	uxth	r2, r2
 801cee8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ceec:	fb04 7403 	mla	r4, r4, r3, r7
 801cef0:	f105 0c01 	add.w	ip, r5, #1
 801cef4:	1c57      	adds	r7, r2, #1
 801cef6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cefa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cefe:	b2a4      	uxth	r4, r4
 801cf00:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cf04:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cf08:	433d      	orrs	r5, r7
 801cf0a:	1c67      	adds	r7, r4, #1
 801cf0c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cf10:	0964      	lsrs	r4, r4, #5
 801cf12:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cf16:	4325      	orrs	r5, r4
 801cf18:	8005      	strh	r5, [r0, #0]
 801cf1a:	e7bd      	b.n	801ce98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cf1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cf1e:	4418      	add	r0, r3
 801cf20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf22:	4499      	add	r9, r3
 801cf24:	e795      	b.n	801ce52 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cf26:	4b04      	ldr	r3, [pc, #16]	; (801cf38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cf28:	6818      	ldr	r0, [r3, #0]
 801cf2a:	6803      	ldr	r3, [r0, #0]
 801cf2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf2e:	4798      	blx	r3
 801cf30:	e771      	b.n	801ce16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cf32:	bf00      	nop
 801cf34:	200137c6 	.word	0x200137c6
 801cf38:	200137cc 	.word	0x200137cc

0801cf3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cf3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf40:	b087      	sub	sp, #28
 801cf42:	4680      	mov	r8, r0
 801cf44:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801cf48:	460d      	mov	r5, r1
 801cf4a:	4614      	mov	r4, r2
 801cf4c:	2e00      	cmp	r6, #0
 801cf4e:	f000 80b9 	beq.w	801d0c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cf52:	6810      	ldr	r0, [r2, #0]
 801cf54:	6851      	ldr	r1, [r2, #4]
 801cf56:	af02      	add	r7, sp, #8
 801cf58:	c703      	stmia	r7!, {r0, r1}
 801cf5a:	6818      	ldr	r0, [r3, #0]
 801cf5c:	6859      	ldr	r1, [r3, #4]
 801cf5e:	af04      	add	r7, sp, #16
 801cf60:	c703      	stmia	r7!, {r0, r1}
 801cf62:	a802      	add	r0, sp, #8
 801cf64:	f7f7 fde0 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf68:	4621      	mov	r1, r4
 801cf6a:	a804      	add	r0, sp, #16
 801cf6c:	f7f7 fe20 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf70:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cf74:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cf78:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cf7c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cf80:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cf84:	eb08 0401 	add.w	r4, r8, r1
 801cf88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cf8c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cf90:	440a      	add	r2, r1
 801cf92:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cf96:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cf9a:	4413      	add	r3, r2
 801cf9c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cfa0:	4b4a      	ldr	r3, [pc, #296]	; (801d0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cfa2:	6818      	ldr	r0, [r3, #0]
 801cfa4:	6803      	ldr	r3, [r0, #0]
 801cfa6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfa8:	4798      	blx	r3
 801cfaa:	4b49      	ldr	r3, [pc, #292]	; (801d0d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cfac:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cfb0:	881a      	ldrh	r2, [r3, #0]
 801cfb2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cfb6:	2eff      	cmp	r6, #255	; 0xff
 801cfb8:	fb02 c101 	mla	r1, r2, r1, ip
 801cfbc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cfc0:	fb02 f207 	mul.w	r2, r2, r7
 801cfc4:	f105 0104 	add.w	r1, r5, #4
 801cfc8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cfcc:	461d      	mov	r5, r3
 801cfce:	d05a      	beq.n	801d086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cfd0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801cfd4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cfd8:	b2b6      	uxth	r6, r6
 801cfda:	fa1f fe8e 	uxth.w	lr, lr
 801cfde:	9301      	str	r3, [sp, #4]
 801cfe0:	4282      	cmp	r2, r0
 801cfe2:	d96a      	bls.n	801d0ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cfe4:	eb00 0b0a 	add.w	fp, r0, sl
 801cfe8:	4583      	cmp	fp, r0
 801cfea:	d940      	bls.n	801d06e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801cfec:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cff0:	8805      	ldrh	r5, [r0, #0]
 801cff2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cff6:	122f      	asrs	r7, r5, #8
 801cff8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cffc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d000:	fb17 f70e 	smulbb	r7, r7, lr
 801d004:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d008:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d00c:	00ed      	lsls	r5, r5, #3
 801d00e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d012:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d016:	10df      	asrs	r7, r3, #3
 801d018:	b2ed      	uxtb	r5, r5
 801d01a:	00db      	lsls	r3, r3, #3
 801d01c:	fa1f fc8c 	uxth.w	ip, ip
 801d020:	fb19 f90e 	smulbb	r9, r9, lr
 801d024:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d028:	b2db      	uxtb	r3, r3
 801d02a:	fb15 f50e 	smulbb	r5, r5, lr
 801d02e:	fb07 9706 	mla	r7, r7, r6, r9
 801d032:	fb03 5306 	mla	r3, r3, r6, r5
 801d036:	f10c 0901 	add.w	r9, ip, #1
 801d03a:	b29b      	uxth	r3, r3
 801d03c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d040:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d044:	f103 0c01 	add.w	ip, r3, #1
 801d048:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d04c:	b2bf      	uxth	r7, r7
 801d04e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d052:	ea4c 0c09 	orr.w	ip, ip, r9
 801d056:	f107 0901 	add.w	r9, r7, #1
 801d05a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d05e:	097f      	lsrs	r7, r7, #5
 801d060:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d064:	ea4c 0c07 	orr.w	ip, ip, r7
 801d068:	f820 cb02 	strh.w	ip, [r0], #2
 801d06c:	e7bc      	b.n	801cfe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d06e:	9b01      	ldr	r3, [sp, #4]
 801d070:	881b      	ldrh	r3, [r3, #0]
 801d072:	eba3 0308 	sub.w	r3, r3, r8
 801d076:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d07a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d07e:	eba3 0308 	sub.w	r3, r3, r8
 801d082:	441c      	add	r4, r3
 801d084:	e7ac      	b.n	801cfe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d086:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d08a:	4282      	cmp	r2, r0
 801d08c:	d915      	bls.n	801d0ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d08e:	eb00 060a 	add.w	r6, r0, sl
 801d092:	4286      	cmp	r6, r0
 801d094:	d906      	bls.n	801d0a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d096:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d09a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d09e:	f820 3b02 	strh.w	r3, [r0], #2
 801d0a2:	e7f6      	b.n	801d092 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d0a4:	882b      	ldrh	r3, [r5, #0]
 801d0a6:	eba3 0308 	sub.w	r3, r3, r8
 801d0aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d0b2:	eba3 0308 	sub.w	r3, r3, r8
 801d0b6:	441c      	add	r4, r3
 801d0b8:	e7e7      	b.n	801d08a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d0ba:	4b04      	ldr	r3, [pc, #16]	; (801d0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d0bc:	6818      	ldr	r0, [r3, #0]
 801d0be:	6803      	ldr	r3, [r0, #0]
 801d0c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0c2:	4798      	blx	r3
 801d0c4:	b007      	add	sp, #28
 801d0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0ca:	bf00      	nop
 801d0cc:	200137cc 	.word	0x200137cc
 801d0d0:	200137c6 	.word	0x200137c6

0801d0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d0d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0d8:	b091      	sub	sp, #68	; 0x44
 801d0da:	4680      	mov	r8, r0
 801d0dc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d0e0:	460f      	mov	r7, r1
 801d0e2:	4614      	mov	r4, r2
 801d0e4:	2d00      	cmp	r5, #0
 801d0e6:	d051      	beq.n	801d18c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d0e8:	6810      	ldr	r0, [r2, #0]
 801d0ea:	6851      	ldr	r1, [r2, #4]
 801d0ec:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d2f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d0f0:	ae0c      	add	r6, sp, #48	; 0x30
 801d0f2:	c603      	stmia	r6!, {r0, r1}
 801d0f4:	6818      	ldr	r0, [r3, #0]
 801d0f6:	6859      	ldr	r1, [r3, #4]
 801d0f8:	ae0e      	add	r6, sp, #56	; 0x38
 801d0fa:	c603      	stmia	r6!, {r0, r1}
 801d0fc:	a80c      	add	r0, sp, #48	; 0x30
 801d0fe:	f7f7 fd13 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d102:	4621      	mov	r1, r4
 801d104:	a80e      	add	r0, sp, #56	; 0x38
 801d106:	f7f7 fd53 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d10a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d10e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d112:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d116:	f8d9 0000 	ldr.w	r0, [r9]
 801d11a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d11e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d122:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d126:	eb08 0401 	add.w	r4, r8, r1
 801d12a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d12e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d2f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d132:	440a      	add	r2, r1
 801d134:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d138:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d13c:	4413      	add	r3, r2
 801d13e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d142:	6803      	ldr	r3, [r0, #0]
 801d144:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d146:	4798      	blx	r3
 801d148:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d14c:	f8d9 0000 	ldr.w	r0, [r9]
 801d150:	d01f      	beq.n	801d192 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d152:	2200      	movs	r2, #0
 801d154:	6801      	ldr	r1, [r0, #0]
 801d156:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d15a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d15e:	220b      	movs	r2, #11
 801d160:	9207      	str	r2, [sp, #28]
 801d162:	f8b8 2000 	ldrh.w	r2, [r8]
 801d166:	9206      	str	r2, [sp, #24]
 801d168:	2201      	movs	r2, #1
 801d16a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d16e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d172:	9203      	str	r2, [sp, #12]
 801d174:	fa1f f28a 	uxth.w	r2, sl
 801d178:	9202      	str	r2, [sp, #8]
 801d17a:	b2b6      	uxth	r6, r6
 801d17c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d180:	9200      	str	r2, [sp, #0]
 801d182:	9601      	str	r6, [sp, #4]
 801d184:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d186:	463a      	mov	r2, r7
 801d188:	4621      	mov	r1, r4
 801d18a:	47a8      	blx	r5
 801d18c:	b011      	add	sp, #68	; 0x44
 801d18e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d192:	6803      	ldr	r3, [r0, #0]
 801d194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d196:	4798      	blx	r3
 801d198:	f8b8 2000 	ldrh.w	r2, [r8]
 801d19c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d1a0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d1a4:	2dff      	cmp	r5, #255	; 0xff
 801d1a6:	fb02 1303 	mla	r3, r2, r3, r1
 801d1aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1ae:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d1b2:	fb0a fa02 	mul.w	sl, sl, r2
 801d1b6:	d062      	beq.n	801d27e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d1b8:	ea6f 0c05 	mvn.w	ip, r5
 801d1bc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d1c0:	930a      	str	r3, [sp, #40]	; 0x28
 801d1c2:	b2ad      	uxth	r5, r5
 801d1c4:	fa5f fc8c 	uxtb.w	ip, ip
 801d1c8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d1cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d1ce:	4298      	cmp	r0, r3
 801d1d0:	f080 8085 	bcs.w	801d2de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d1d4:	eb00 0b09 	add.w	fp, r0, r9
 801d1d8:	4558      	cmp	r0, fp
 801d1da:	d246      	bcs.n	801d26a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d1dc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d1e0:	2303      	movs	r3, #3
 801d1e2:	2204      	movs	r2, #4
 801d1e4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d1e8:	eb07 0a0e 	add.w	sl, r7, lr
 801d1ec:	8803      	ldrh	r3, [r0, #0]
 801d1ee:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d1f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d1f6:	1219      	asrs	r1, r3, #8
 801d1f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d1fc:	fb18 f805 	smulbb	r8, r8, r5
 801d200:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d204:	10da      	asrs	r2, r3, #3
 801d206:	fb01 810c 	mla	r1, r1, ip, r8
 801d20a:	00db      	lsls	r3, r3, #3
 801d20c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d210:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d214:	b2db      	uxtb	r3, r3
 801d216:	fb18 f805 	smulbb	r8, r8, r5
 801d21a:	fb1e fe05 	smulbb	lr, lr, r5
 801d21e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d222:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d226:	b289      	uxth	r1, r1
 801d228:	fb02 820c 	mla	r2, r2, ip, r8
 801d22c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d230:	b292      	uxth	r2, r2
 801d232:	b29b      	uxth	r3, r3
 801d234:	f101 0801 	add.w	r8, r1, #1
 801d238:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d23c:	f103 0e01 	add.w	lr, r3, #1
 801d240:	f102 0801 	add.w	r8, r2, #1
 801d244:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d248:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d24c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d250:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d254:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d258:	ea4e 0101 	orr.w	r1, lr, r1
 801d25c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d260:	ea41 0108 	orr.w	r1, r1, r8
 801d264:	f820 1b02 	strh.w	r1, [r0], #2
 801d268:	e7b6      	b.n	801d1d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d26a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d26c:	881b      	ldrh	r3, [r3, #0]
 801d26e:	1b9b      	subs	r3, r3, r6
 801d270:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d274:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d278:	1b9b      	subs	r3, r3, r6
 801d27a:	441c      	add	r4, r3
 801d27c:	e7a6      	b.n	801d1cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d27e:	491b      	ldr	r1, [pc, #108]	; (801d2ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d280:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d284:	2203      	movs	r2, #3
 801d286:	2504      	movs	r5, #4
 801d288:	4550      	cmp	r0, sl
 801d28a:	d228      	bcs.n	801d2de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d28c:	eb00 0c09 	add.w	ip, r0, r9
 801d290:	4560      	cmp	r0, ip
 801d292:	4623      	mov	r3, r4
 801d294:	d219      	bcs.n	801d2ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d296:	f893 e000 	ldrb.w	lr, [r3]
 801d29a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d29e:	eb07 0b0e 	add.w	fp, r7, lr
 801d2a2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d2a6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d2aa:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d2ae:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d2b2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d2b6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d2ba:	ea43 030b 	orr.w	r3, r3, fp
 801d2be:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d2c2:	3401      	adds	r4, #1
 801d2c4:	f820 3b02 	strh.w	r3, [r0], #2
 801d2c8:	e7e2      	b.n	801d290 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d2ca:	f8b8 3000 	ldrh.w	r3, [r8]
 801d2ce:	1b9b      	subs	r3, r3, r6
 801d2d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d2d8:	1b9b      	subs	r3, r3, r6
 801d2da:	441c      	add	r4, r3
 801d2dc:	e7d4      	b.n	801d288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d2de:	4b04      	ldr	r3, [pc, #16]	; (801d2f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d2e0:	6818      	ldr	r0, [r3, #0]
 801d2e2:	6803      	ldr	r3, [r0, #0]
 801d2e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d2e6:	4798      	blx	r3
 801d2e8:	e750      	b.n	801d18c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d2ea:	bf00      	nop
 801d2ec:	fffff800 	.word	0xfffff800
 801d2f0:	200137cc 	.word	0x200137cc
 801d2f4:	200137c6 	.word	0x200137c6

0801d2f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d2f8:	b4f0      	push	{r4, r5, r6, r7}
 801d2fa:	460c      	mov	r4, r1
 801d2fc:	4611      	mov	r1, r2
 801d2fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d302:	780f      	ldrb	r7, [r1, #0]
 801d304:	784e      	ldrb	r6, [r1, #1]
 801d306:	2f01      	cmp	r7, #1
 801d308:	461a      	mov	r2, r3
 801d30a:	9b04      	ldr	r3, [sp, #16]
 801d30c:	d036      	beq.n	801d37c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d30e:	d31e      	bcc.n	801d34e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d310:	2f02      	cmp	r7, #2
 801d312:	d14a      	bne.n	801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d314:	2e03      	cmp	r6, #3
 801d316:	d848      	bhi.n	801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d318:	e8df f006 	tbb	[pc, r6]
 801d31c:	16140702 	.word	0x16140702
 801d320:	9504      	str	r5, [sp, #16]
 801d322:	4620      	mov	r0, r4
 801d324:	bcf0      	pop	{r4, r5, r6, r7}
 801d326:	f7ff be09 	b.w	801cf3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d32a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d32c:	2800      	cmp	r0, #0
 801d32e:	d03c      	beq.n	801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d330:	6806      	ldr	r6, [r0, #0]
 801d332:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d336:	68b5      	ldr	r5, [r6, #8]
 801d338:	4613      	mov	r3, r2
 801d33a:	46ac      	mov	ip, r5
 801d33c:	460a      	mov	r2, r1
 801d33e:	4621      	mov	r1, r4
 801d340:	bcf0      	pop	{r4, r5, r6, r7}
 801d342:	4760      	bx	ip
 801d344:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d346:	e7f1      	b.n	801d32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d348:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d34c:	e7ee      	b.n	801d32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d34e:	2e03      	cmp	r6, #3
 801d350:	d82b      	bhi.n	801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d352:	e8df f006 	tbb	[pc, r6]
 801d356:	0702      	.short	0x0702
 801d358:	100e      	.short	0x100e
 801d35a:	9504      	str	r5, [sp, #16]
 801d35c:	4620      	mov	r0, r4
 801d35e:	bcf0      	pop	{r4, r5, r6, r7}
 801d360:	f7ff bd06 	b.w	801cd70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d364:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d366:	b300      	cbz	r0, 801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d368:	6806      	ldr	r6, [r0, #0]
 801d36a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d36e:	68f5      	ldr	r5, [r6, #12]
 801d370:	e7e2      	b.n	801d338 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d372:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d374:	e7f7      	b.n	801d366 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d376:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d37a:	e7f4      	b.n	801d366 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d37c:	2e03      	cmp	r6, #3
 801d37e:	d814      	bhi.n	801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d380:	e8df f006 	tbb	[pc, r6]
 801d384:	100e0702 	.word	0x100e0702
 801d388:	9504      	str	r5, [sp, #16]
 801d38a:	4620      	mov	r0, r4
 801d38c:	bcf0      	pop	{r4, r5, r6, r7}
 801d38e:	f7ff bea1 	b.w	801d0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d392:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d394:	b148      	cbz	r0, 801d3aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d396:	6806      	ldr	r6, [r0, #0]
 801d398:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d39c:	6935      	ldr	r5, [r6, #16]
 801d39e:	e7cb      	b.n	801d338 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d3a0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d3a2:	e7f7      	b.n	801d394 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d3a4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d3a8:	e7f4      	b.n	801d394 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d3aa:	bcf0      	pop	{r4, r5, r6, r7}
 801d3ac:	4770      	bx	lr
	...

0801d3b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3b4:	4604      	mov	r4, r0
 801d3b6:	b087      	sub	sp, #28
 801d3b8:	6810      	ldr	r0, [r2, #0]
 801d3ba:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d3be:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d5f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d3c2:	460e      	mov	r6, r1
 801d3c4:	6851      	ldr	r1, [r2, #4]
 801d3c6:	ad02      	add	r5, sp, #8
 801d3c8:	c503      	stmia	r5!, {r0, r1}
 801d3ca:	6818      	ldr	r0, [r3, #0]
 801d3cc:	6859      	ldr	r1, [r3, #4]
 801d3ce:	ad04      	add	r5, sp, #16
 801d3d0:	4617      	mov	r7, r2
 801d3d2:	c503      	stmia	r5!, {r0, r1}
 801d3d4:	a802      	add	r0, sp, #8
 801d3d6:	f7f7 fba7 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3da:	4639      	mov	r1, r7
 801d3dc:	a804      	add	r0, sp, #16
 801d3de:	f7f7 fbe7 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d3e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d3ea:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d3ee:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d3f2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d3f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d3fa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d3fe:	440e      	add	r6, r1
 801d400:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d404:	440a      	add	r2, r1
 801d406:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d40a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d40e:	4413      	add	r3, r2
 801d410:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d414:	4b77      	ldr	r3, [pc, #476]	; (801d5f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d416:	6818      	ldr	r0, [r3, #0]
 801d418:	6803      	ldr	r3, [r0, #0]
 801d41a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d41c:	4798      	blx	r3
 801d41e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d422:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d426:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d42a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d42e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d432:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d436:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d43a:	fb05 f50b 	mul.w	r5, r5, fp
 801d43e:	9300      	str	r3, [sp, #0]
 801d440:	d069      	beq.n	801d516 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d442:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d446:	4558      	cmp	r0, fp
 801d448:	f080 80cc 	bcs.w	801d5e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d44c:	9b00      	ldr	r3, [sp, #0]
 801d44e:	18c3      	adds	r3, r0, r3
 801d450:	9301      	str	r3, [sp, #4]
 801d452:	4631      	mov	r1, r6
 801d454:	9b01      	ldr	r3, [sp, #4]
 801d456:	4298      	cmp	r0, r3
 801d458:	d24f      	bcs.n	801d4fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d45a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d45e:	2a00      	cmp	r2, #0
 801d460:	d048      	beq.n	801d4f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d462:	fb0a f202 	mul.w	r2, sl, r2
 801d466:	1c53      	adds	r3, r2, #1
 801d468:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d46c:	121b      	asrs	r3, r3, #8
 801d46e:	d041      	beq.n	801d4f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d470:	8802      	ldrh	r2, [r0, #0]
 801d472:	f8b4 c000 	ldrh.w	ip, [r4]
 801d476:	b29e      	uxth	r6, r3
 801d478:	1215      	asrs	r5, r2, #8
 801d47a:	43db      	mvns	r3, r3
 801d47c:	b2db      	uxtb	r3, r3
 801d47e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d482:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d486:	fb15 f503 	smulbb	r5, r5, r3
 801d48a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d48e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d492:	00d2      	lsls	r2, r2, #3
 801d494:	fb07 5706 	mla	r7, r7, r6, r5
 801d498:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d49c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d4a0:	b2d2      	uxtb	r2, r2
 801d4a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4a6:	b2bf      	uxth	r7, r7
 801d4a8:	fb1e fe03 	smulbb	lr, lr, r3
 801d4ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d4b0:	fa5f fc8c 	uxtb.w	ip, ip
 801d4b4:	fb12 f203 	smulbb	r2, r2, r3
 801d4b8:	fb05 e506 	mla	r5, r5, r6, lr
 801d4bc:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d4c0:	f107 0e01 	add.w	lr, r7, #1
 801d4c4:	fa1f fc8c 	uxth.w	ip, ip
 801d4c8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d4cc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d4d0:	f10c 0701 	add.w	r7, ip, #1
 801d4d4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d4d8:	b2ad      	uxth	r5, r5
 801d4da:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d4de:	ea47 070e 	orr.w	r7, r7, lr
 801d4e2:	f105 0e01 	add.w	lr, r5, #1
 801d4e6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d4ea:	096d      	lsrs	r5, r5, #5
 801d4ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d4f0:	432f      	orrs	r7, r5
 801d4f2:	8007      	strh	r7, [r0, #0]
 801d4f4:	3002      	adds	r0, #2
 801d4f6:	3402      	adds	r4, #2
 801d4f8:	e7ac      	b.n	801d454 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d4fa:	f8b9 3000 	ldrh.w	r3, [r9]
 801d4fe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d502:	eba3 0308 	sub.w	r3, r3, r8
 801d506:	eba6 0608 	sub.w	r6, r6, r8
 801d50a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d50e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d512:	440e      	add	r6, r1
 801d514:	e797      	b.n	801d446 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d516:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d51a:	42a8      	cmp	r0, r5
 801d51c:	d262      	bcs.n	801d5e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d51e:	9b00      	ldr	r3, [sp, #0]
 801d520:	4631      	mov	r1, r6
 801d522:	eb00 0b03 	add.w	fp, r0, r3
 801d526:	4558      	cmp	r0, fp
 801d528:	d24e      	bcs.n	801d5c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d52a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d52e:	b12b      	cbz	r3, 801d53c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d530:	2bff      	cmp	r3, #255	; 0xff
 801d532:	f8b4 e000 	ldrh.w	lr, [r4]
 801d536:	d104      	bne.n	801d542 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d538:	f8a0 e000 	strh.w	lr, [r0]
 801d53c:	3002      	adds	r0, #2
 801d53e:	3402      	adds	r4, #2
 801d540:	e7f1      	b.n	801d526 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d542:	8802      	ldrh	r2, [r0, #0]
 801d544:	b29f      	uxth	r7, r3
 801d546:	1216      	asrs	r6, r2, #8
 801d548:	43db      	mvns	r3, r3
 801d54a:	b2db      	uxtb	r3, r3
 801d54c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d550:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d554:	fb16 f603 	smulbb	r6, r6, r3
 801d558:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d55c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d560:	00d2      	lsls	r2, r2, #3
 801d562:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d566:	b2d2      	uxtb	r2, r2
 801d568:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d56c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d570:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d574:	fb1a fa03 	smulbb	sl, sl, r3
 801d578:	fa1f fc8c 	uxth.w	ip, ip
 801d57c:	fb12 f303 	smulbb	r3, r2, r3
 801d580:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d584:	fa5f fe8e 	uxtb.w	lr, lr
 801d588:	fb06 a607 	mla	r6, r6, r7, sl
 801d58c:	f10c 0201 	add.w	r2, ip, #1
 801d590:	fb0e 3307 	mla	r3, lr, r7, r3
 801d594:	b2b6      	uxth	r6, r6
 801d596:	b29b      	uxth	r3, r3
 801d598:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d59c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d5a0:	f106 0a01 	add.w	sl, r6, #1
 801d5a4:	f103 0c01 	add.w	ip, r3, #1
 801d5a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d5ac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d5b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d5b4:	0976      	lsrs	r6, r6, #5
 801d5b6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d5ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d5be:	ea4c 0c06 	orr.w	ip, ip, r6
 801d5c2:	f8a0 c000 	strh.w	ip, [r0]
 801d5c6:	e7b9      	b.n	801d53c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d5c8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d5cc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d5d0:	eba3 0308 	sub.w	r3, r3, r8
 801d5d4:	eba6 0608 	sub.w	r6, r6, r8
 801d5d8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d5dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5e0:	440e      	add	r6, r1
 801d5e2:	e79a      	b.n	801d51a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d5e4:	4b03      	ldr	r3, [pc, #12]	; (801d5f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d5e6:	6818      	ldr	r0, [r3, #0]
 801d5e8:	6803      	ldr	r3, [r0, #0]
 801d5ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d5ec:	4798      	blx	r3
 801d5ee:	b007      	add	sp, #28
 801d5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5f4:	200137cc 	.word	0x200137cc
 801d5f8:	200137c6 	.word	0x200137c6

0801d5fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d600:	b089      	sub	sp, #36	; 0x24
 801d602:	4682      	mov	sl, r0
 801d604:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d60a:	460f      	mov	r7, r1
 801d60c:	4691      	mov	r9, r2
 801d60e:	4698      	mov	r8, r3
 801d610:	2e00      	cmp	r6, #0
 801d612:	d03d      	beq.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d614:	4608      	mov	r0, r1
 801d616:	f7fa fe59 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d61a:	4605      	mov	r5, r0
 801d61c:	4638      	mov	r0, r7
 801d61e:	f7fa fe89 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d622:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d626:	4638      	mov	r0, r7
 801d628:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d62c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d630:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d634:	f7fa ff36 	bl	80184a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d638:	4605      	mov	r5, r0
 801d63a:	4638      	mov	r0, r7
 801d63c:	f7fa ff62 	bl	8018504 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d640:	4681      	mov	r9, r0
 801d642:	4638      	mov	r0, r7
 801d644:	f7fa ffb2 	bl	80185ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d648:	280b      	cmp	r0, #11
 801d64a:	d821      	bhi.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d64c:	e8df f000 	tbb	[pc, r0]
 801d650:	2006aebe 	.word	0x2006aebe
 801d654:	20202020 	.word	0x20202020
 801d658:	b5202020 	.word	0xb5202020
 801d65c:	4bb0      	ldr	r3, [pc, #704]	; (801d920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d65e:	6818      	ldr	r0, [r3, #0]
 801d660:	6803      	ldr	r3, [r0, #0]
 801d662:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d664:	4798      	blx	r3
 801d666:	2eff      	cmp	r6, #255	; 0xff
 801d668:	d101      	bne.n	801d66e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d66a:	0683      	lsls	r3, r0, #26
 801d66c:	d506      	bpl.n	801d67c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d66e:	4633      	mov	r3, r6
 801d670:	4622      	mov	r2, r4
 801d672:	a902      	add	r1, sp, #8
 801d674:	4628      	mov	r0, r5
 801d676:	f7ff f909 	bl	801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d67a:	e009      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d67c:	4638      	mov	r0, r7
 801d67e:	f7fa fed9 	bl	8018434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d682:	b940      	cbnz	r0, 801d696 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d684:	4623      	mov	r3, r4
 801d686:	aa02      	add	r2, sp, #8
 801d688:	4629      	mov	r1, r5
 801d68a:	4650      	mov	r0, sl
 801d68c:	f7ff f9e4 	bl	801ca58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d690:	b009      	add	sp, #36	; 0x24
 801d692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d696:	f10d 0818 	add.w	r8, sp, #24
 801d69a:	4639      	mov	r1, r7
 801d69c:	4640      	mov	r0, r8
 801d69e:	f7fa fe7d 	bl	801839c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d6a2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d6a6:	af04      	add	r7, sp, #16
 801d6a8:	e887 0003 	stmia.w	r7, {r0, r1}
 801d6ac:	4638      	mov	r0, r7
 801d6ae:	4621      	mov	r1, r4
 801d6b0:	f7f2 fadc 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 801d6b4:	4638      	mov	r0, r7
 801d6b6:	f7f2 fb1c 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d6ba:	2800      	cmp	r0, #0
 801d6bc:	d1d7      	bne.n	801d66e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d6be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d6c6:	4293      	cmp	r3, r2
 801d6c8:	dd12      	ble.n	801d6f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d6ca:	1a9b      	subs	r3, r3, r2
 801d6cc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d6d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d6d4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d6d8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d6dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d6e0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d6e4:	4642      	mov	r2, r8
 801d6e6:	4633      	mov	r3, r6
 801d6e8:	a902      	add	r1, sp, #8
 801d6ea:	4628      	mov	r0, r5
 801d6ec:	f7ff f8ce 	bl	801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d6f0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d6f4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d6f8:	4293      	cmp	r3, r2
 801d6fa:	dd12      	ble.n	801d722 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d6fc:	1a9b      	subs	r3, r3, r2
 801d6fe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d702:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d706:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d70a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d70e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d712:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d716:	23ff      	movs	r3, #255	; 0xff
 801d718:	4642      	mov	r2, r8
 801d71a:	a902      	add	r1, sp, #8
 801d71c:	4628      	mov	r0, r5
 801d71e:	f7ff f8b5 	bl	801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d722:	463b      	mov	r3, r7
 801d724:	aa02      	add	r2, sp, #8
 801d726:	4629      	mov	r1, r5
 801d728:	4650      	mov	r0, sl
 801d72a:	f7ff f995 	bl	801ca58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d72e:	88a2      	ldrh	r2, [r4, #4]
 801d730:	8823      	ldrh	r3, [r4, #0]
 801d732:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d736:	4413      	add	r3, r2
 801d738:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d73c:	440a      	add	r2, r1
 801d73e:	b29b      	uxth	r3, r3
 801d740:	b292      	uxth	r2, r2
 801d742:	b211      	sxth	r1, r2
 801d744:	b218      	sxth	r0, r3
 801d746:	4288      	cmp	r0, r1
 801d748:	dd12      	ble.n	801d770 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d74a:	1a9b      	subs	r3, r3, r2
 801d74c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d750:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d754:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d758:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d75c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d760:	23ff      	movs	r3, #255	; 0xff
 801d762:	4642      	mov	r2, r8
 801d764:	a902      	add	r1, sp, #8
 801d766:	4628      	mov	r0, r5
 801d768:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d76c:	f7ff f88e 	bl	801c88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d770:	88e2      	ldrh	r2, [r4, #6]
 801d772:	8863      	ldrh	r3, [r4, #2]
 801d774:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d778:	4413      	add	r3, r2
 801d77a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d77e:	440a      	add	r2, r1
 801d780:	b29b      	uxth	r3, r3
 801d782:	b292      	uxth	r2, r2
 801d784:	b211      	sxth	r1, r2
 801d786:	b218      	sxth	r0, r3
 801d788:	4288      	cmp	r0, r1
 801d78a:	dd81      	ble.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d78c:	1a9b      	subs	r3, r3, r2
 801d78e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d792:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d796:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d79a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d79e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d7a2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d7a6:	23ff      	movs	r3, #255	; 0xff
 801d7a8:	4642      	mov	r2, r8
 801d7aa:	e762      	b.n	801d672 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d7ac:	4633      	mov	r3, r6
 801d7ae:	4622      	mov	r2, r4
 801d7b0:	a902      	add	r1, sp, #8
 801d7b2:	4628      	mov	r0, r5
 801d7b4:	f7ff f9c0 	bl	801cb38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d7b8:	e76a      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7ba:	e9cd 4600 	strd	r4, r6, [sp]
 801d7be:	ab02      	add	r3, sp, #8
 801d7c0:	464a      	mov	r2, r9
 801d7c2:	4629      	mov	r1, r5
 801d7c4:	4650      	mov	r0, sl
 801d7c6:	f7ff fd97 	bl	801d2f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d7ca:	e761      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7cc:	4638      	mov	r0, r7
 801d7ce:	f7fa fe31 	bl	8018434 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d7d2:	b950      	cbnz	r0, 801d7ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d7d4:	e9cd 6000 	strd	r6, r0, [sp]
 801d7d8:	f8da 3000 	ldr.w	r3, [sl]
 801d7dc:	aa02      	add	r2, sp, #8
 801d7de:	68de      	ldr	r6, [r3, #12]
 801d7e0:	4629      	mov	r1, r5
 801d7e2:	4623      	mov	r3, r4
 801d7e4:	4650      	mov	r0, sl
 801d7e6:	47b0      	blx	r6
 801d7e8:	e752      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7ea:	f10d 0818 	add.w	r8, sp, #24
 801d7ee:	4639      	mov	r1, r7
 801d7f0:	4640      	mov	r0, r8
 801d7f2:	f7fa fdd3 	bl	801839c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d7f6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d7fa:	af04      	add	r7, sp, #16
 801d7fc:	e887 0003 	stmia.w	r7, {r0, r1}
 801d800:	4638      	mov	r0, r7
 801d802:	4621      	mov	r1, r4
 801d804:	f7f2 fa32 	bl	800fc6c <_ZN8touchgfx4RectaNERKS0_>
 801d808:	4638      	mov	r0, r7
 801d80a:	f7f2 fa72 	bl	800fcf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d80e:	b138      	cbz	r0, 801d820 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d810:	9600      	str	r6, [sp, #0]
 801d812:	4623      	mov	r3, r4
 801d814:	aa02      	add	r2, sp, #8
 801d816:	4649      	mov	r1, r9
 801d818:	4628      	mov	r0, r5
 801d81a:	f7ff fdc9 	bl	801d3b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d81e:	e737      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d820:	e9cd 6000 	strd	r6, r0, [sp]
 801d824:	f8da 3000 	ldr.w	r3, [sl]
 801d828:	aa02      	add	r2, sp, #8
 801d82a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d82e:	4629      	mov	r1, r5
 801d830:	463b      	mov	r3, r7
 801d832:	4650      	mov	r0, sl
 801d834:	47d8      	blx	fp
 801d836:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d83a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d83e:	4293      	cmp	r3, r2
 801d840:	dd13      	ble.n	801d86a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d842:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d846:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d84a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d84e:	1a9b      	subs	r3, r3, r2
 801d850:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d854:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d858:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d85c:	9600      	str	r6, [sp, #0]
 801d85e:	4643      	mov	r3, r8
 801d860:	aa02      	add	r2, sp, #8
 801d862:	4649      	mov	r1, r9
 801d864:	4628      	mov	r0, r5
 801d866:	f7ff fda3 	bl	801d3b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d86a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d86e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d872:	4293      	cmp	r3, r2
 801d874:	dd13      	ble.n	801d89e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d876:	1a9b      	subs	r3, r3, r2
 801d878:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d87c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d880:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d884:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d888:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d88c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d890:	9600      	str	r6, [sp, #0]
 801d892:	4643      	mov	r3, r8
 801d894:	aa02      	add	r2, sp, #8
 801d896:	4649      	mov	r1, r9
 801d898:	4628      	mov	r0, r5
 801d89a:	f7ff fd89 	bl	801d3b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d89e:	88a2      	ldrh	r2, [r4, #4]
 801d8a0:	8823      	ldrh	r3, [r4, #0]
 801d8a2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d8a6:	4413      	add	r3, r2
 801d8a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d8ac:	440a      	add	r2, r1
 801d8ae:	b29b      	uxth	r3, r3
 801d8b0:	b292      	uxth	r2, r2
 801d8b2:	b211      	sxth	r1, r2
 801d8b4:	b218      	sxth	r0, r3
 801d8b6:	4288      	cmp	r0, r1
 801d8b8:	dd13      	ble.n	801d8e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d8ba:	1a9b      	subs	r3, r3, r2
 801d8bc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d8c0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d8c4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d8c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8cc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d8d0:	9600      	str	r6, [sp, #0]
 801d8d2:	4643      	mov	r3, r8
 801d8d4:	aa02      	add	r2, sp, #8
 801d8d6:	4649      	mov	r1, r9
 801d8d8:	4628      	mov	r0, r5
 801d8da:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d8de:	f7ff fd67 	bl	801d3b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d8e2:	88e2      	ldrh	r2, [r4, #6]
 801d8e4:	8863      	ldrh	r3, [r4, #2]
 801d8e6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d8ea:	4413      	add	r3, r2
 801d8ec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d8f0:	440a      	add	r2, r1
 801d8f2:	b29b      	uxth	r3, r3
 801d8f4:	b292      	uxth	r2, r2
 801d8f6:	b211      	sxth	r1, r2
 801d8f8:	b218      	sxth	r0, r3
 801d8fa:	4288      	cmp	r0, r1
 801d8fc:	f77f aec8 	ble.w	801d690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d900:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d904:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d908:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d90c:	1a9b      	subs	r3, r3, r2
 801d90e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d912:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d916:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d91a:	9600      	str	r6, [sp, #0]
 801d91c:	4643      	mov	r3, r8
 801d91e:	e779      	b.n	801d814 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801d920:	200137cc 	.word	0x200137cc

0801d924 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d924:	b180      	cbz	r0, 801d948 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d926:	2903      	cmp	r1, #3
 801d928:	d81c      	bhi.n	801d964 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d92a:	e8df f001 	tbb	[pc, r1]
 801d92e:	1d02      	.short	0x1d02
 801d930:	1f08      	.short	0x1f08
 801d932:	4b10      	ldr	r3, [pc, #64]	; (801d974 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d934:	8818      	ldrh	r0, [r3, #0]
 801d936:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d93a:	4240      	negs	r0, r0
 801d93c:	4770      	bx	lr
 801d93e:	4b0d      	ldr	r3, [pc, #52]	; (801d974 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d940:	8818      	ldrh	r0, [r3, #0]
 801d942:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d946:	4770      	bx	lr
 801d948:	2903      	cmp	r1, #3
 801d94a:	d80b      	bhi.n	801d964 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d94c:	a301      	add	r3, pc, #4	; (adr r3, 801d954 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d94e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d952:	bf00      	nop
 801d954:	0801d969 	.word	0x0801d969
 801d958:	0801d93f 	.word	0x0801d93f
 801d95c:	0801d96d 	.word	0x0801d96d
 801d960:	0801d933 	.word	0x0801d933
 801d964:	2000      	movs	r0, #0
 801d966:	4770      	bx	lr
 801d968:	2001      	movs	r0, #1
 801d96a:	4770      	bx	lr
 801d96c:	f04f 30ff 	mov.w	r0, #4294967295
 801d970:	4770      	bx	lr
 801d972:	bf00      	nop
 801d974:	200137c6 	.word	0x200137c6

0801d978 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d978:	b180      	cbz	r0, 801d99c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d97a:	2903      	cmp	r1, #3
 801d97c:	d81c      	bhi.n	801d9b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d97e:	e8df f001 	tbb	[pc, r1]
 801d982:	021d      	.short	0x021d
 801d984:	071f      	.short	0x071f
 801d986:	4b10      	ldr	r3, [pc, #64]	; (801d9c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d988:	8818      	ldrh	r0, [r3, #0]
 801d98a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d98e:	4770      	bx	lr
 801d990:	4b0d      	ldr	r3, [pc, #52]	; (801d9c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d992:	8818      	ldrh	r0, [r3, #0]
 801d994:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d998:	4240      	negs	r0, r0
 801d99a:	4770      	bx	lr
 801d99c:	2903      	cmp	r1, #3
 801d99e:	d80b      	bhi.n	801d9b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d9a0:	a301      	add	r3, pc, #4	; (adr r3, 801d9a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d9a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d9a6:	bf00      	nop
 801d9a8:	0801d987 	.word	0x0801d987
 801d9ac:	0801d9c1 	.word	0x0801d9c1
 801d9b0:	0801d991 	.word	0x0801d991
 801d9b4:	0801d9bd 	.word	0x0801d9bd
 801d9b8:	2000      	movs	r0, #0
 801d9ba:	4770      	bx	lr
 801d9bc:	2001      	movs	r0, #1
 801d9be:	4770      	bx	lr
 801d9c0:	f04f 30ff 	mov.w	r0, #4294967295
 801d9c4:	4770      	bx	lr
 801d9c6:	bf00      	nop
 801d9c8:	200137c6 	.word	0x200137c6

0801d9cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9d0:	b099      	sub	sp, #100	; 0x64
 801d9d2:	910b      	str	r1, [sp, #44]	; 0x2c
 801d9d4:	a914      	add	r1, sp, #80	; 0x50
 801d9d6:	e881 000c 	stmia.w	r1, {r2, r3}
 801d9da:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d9de:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d9e2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d9e6:	9309      	str	r3, [sp, #36]	; 0x24
 801d9e8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d9ec:	9310      	str	r3, [sp, #64]	; 0x40
 801d9ee:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d9f2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801d9f6:	930c      	str	r3, [sp, #48]	; 0x30
 801d9f8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801d9fc:	798f      	ldrb	r7, [r1, #6]
 801d9fe:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801da02:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801da06:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801da0a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801da0e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801da12:	431f      	orrs	r7, r3
 801da14:	f000 8195 	beq.w	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801da18:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801da1c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801da20:	f891 9007 	ldrb.w	r9, [r1, #7]
 801da24:	ea59 0903 	orrs.w	r9, r9, r3
 801da28:	f000 818b 	beq.w	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801da2c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801da30:	b29b      	uxth	r3, r3
 801da32:	2d00      	cmp	r5, #0
 801da34:	f000 812e 	beq.w	801dc94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801da38:	1aed      	subs	r5, r5, r3
 801da3a:	b2ad      	uxth	r5, r5
 801da3c:	042b      	lsls	r3, r5, #16
 801da3e:	d502      	bpl.n	801da46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801da40:	1b64      	subs	r4, r4, r5
 801da42:	b224      	sxth	r4, r4
 801da44:	2500      	movs	r5, #0
 801da46:	f9b2 1000 	ldrsh.w	r1, [r2]
 801da4a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801da4e:	428c      	cmp	r4, r1
 801da50:	b28b      	uxth	r3, r1
 801da52:	bfbf      	itttt	lt
 801da54:	18ed      	addlt	r5, r5, r3
 801da56:	1b2c      	sublt	r4, r5, r4
 801da58:	b2a5      	uxthlt	r5, r4
 801da5a:	460c      	movlt	r4, r1
 801da5c:	8891      	ldrh	r1, [r2, #4]
 801da5e:	440b      	add	r3, r1
 801da60:	b21b      	sxth	r3, r3
 801da62:	930f      	str	r3, [sp, #60]	; 0x3c
 801da64:	88d3      	ldrh	r3, [r2, #6]
 801da66:	8852      	ldrh	r2, [r2, #2]
 801da68:	4413      	add	r3, r2
 801da6a:	b21b      	sxth	r3, r3
 801da6c:	930d      	str	r3, [sp, #52]	; 0x34
 801da6e:	4bbe      	ldr	r3, [pc, #760]	; (801dd68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801da70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801da72:	f893 b000 	ldrb.w	fp, [r3]
 801da76:	f10b 3cff 	add.w	ip, fp, #4294967295
 801da7a:	f1dc 0300 	rsbs	r3, ip, #0
 801da7e:	eb43 030c 	adc.w	r3, r3, ip
 801da82:	930e      	str	r3, [sp, #56]	; 0x38
 801da84:	4621      	mov	r1, r4
 801da86:	4653      	mov	r3, sl
 801da88:	a814      	add	r0, sp, #80	; 0x50
 801da8a:	f7f6 fec2 	bl	8014812 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801da8e:	4621      	mov	r1, r4
 801da90:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801da94:	4653      	mov	r3, sl
 801da96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801da98:	a814      	add	r0, sp, #80	; 0x50
 801da9a:	f7f6 fed7 	bl	801484c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801da9e:	a918      	add	r1, sp, #96	; 0x60
 801daa0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801daa4:	a817      	add	r0, sp, #92	; 0x5c
 801daa6:	f7f6 fffd 	bl	8014aa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801daaa:	f1ba 0f00 	cmp.w	sl, #0
 801daae:	f040 80f4 	bne.w	801dc9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dab2:	f1bb 0f01 	cmp.w	fp, #1
 801dab6:	f040 80f8 	bne.w	801dcaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801daba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dabc:	2b00      	cmp	r3, #0
 801dabe:	f040 8145 	bne.w	801dd4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dac2:	b2ba      	uxth	r2, r7
 801dac4:	b905      	cbnz	r5, 801dac8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dac6:	b16e      	cbz	r6, 801dae4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dac8:	fb06 5302 	mla	r3, r6, r2, r5
 801dacc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dace:	fb08 f303 	mul.w	r3, r8, r3
 801dad2:	4631      	mov	r1, r6
 801dad4:	f003 0607 	and.w	r6, r3, #7
 801dad8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dadc:	9328      	str	r3, [sp, #160]	; 0xa0
 801dade:	eba9 0301 	sub.w	r3, r9, r1
 801dae2:	930a      	str	r3, [sp, #40]	; 0x28
 801dae4:	4651      	mov	r1, sl
 801dae6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dae8:	f7ff ff1c 	bl	801d924 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801daec:	4681      	mov	r9, r0
 801daee:	980e      	ldr	r0, [sp, #56]	; 0x38
 801daf0:	f7ff ff42 	bl	801d978 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801daf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801daf6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801daf8:	eba3 0a01 	sub.w	sl, r3, r1
 801dafc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dafe:	459a      	cmp	sl, r3
 801db00:	bfa8      	it	ge
 801db02:	469a      	movge	sl, r3
 801db04:	f1ba 0f00 	cmp.w	sl, #0
 801db08:	4683      	mov	fp, r0
 801db0a:	f340 811a 	ble.w	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801db10:	1b64      	subs	r4, r4, r5
 801db12:	1b1c      	subs	r4, r3, r4
 801db14:	42bc      	cmp	r4, r7
 801db16:	bfd4      	ite	le
 801db18:	ebc5 0504 	rsble	r5, r5, r4
 801db1c:	ebc5 0507 	rsbgt	r5, r5, r7
 801db20:	2d00      	cmp	r5, #0
 801db22:	f340 810e 	ble.w	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db26:	1b52      	subs	r2, r2, r5
 801db28:	fb08 f302 	mul.w	r3, r8, r2
 801db2c:	930f      	str	r3, [sp, #60]	; 0x3c
 801db2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801db30:	2b00      	cmp	r3, #0
 801db32:	f040 8116 	bne.w	801dd62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801db36:	4b8d      	ldr	r3, [pc, #564]	; (801dd6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801db38:	6818      	ldr	r0, [r3, #0]
 801db3a:	6803      	ldr	r3, [r0, #0]
 801db3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db3e:	4798      	blx	r3
 801db40:	2301      	movs	r3, #1
 801db42:	fa03 f308 	lsl.w	r3, r3, r8
 801db46:	4a8a      	ldr	r2, [pc, #552]	; (801dd70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801db48:	3b01      	subs	r3, #1
 801db4a:	b2db      	uxtb	r3, r3
 801db4c:	8811      	ldrh	r1, [r2, #0]
 801db4e:	930e      	str	r3, [sp, #56]	; 0x38
 801db50:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801db54:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801db58:	fb01 2303 	mla	r3, r1, r3, r2
 801db5c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801db60:	930a      	str	r3, [sp, #40]	; 0x28
 801db62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db64:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801db68:	9313      	str	r3, [sp, #76]	; 0x4c
 801db6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db6c:	0a19      	lsrs	r1, r3, #8
 801db6e:	b2cb      	uxtb	r3, r1
 801db70:	9312      	str	r3, [sp, #72]	; 0x48
 801db72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db74:	b2db      	uxtb	r3, r3
 801db76:	9311      	str	r3, [sp, #68]	; 0x44
 801db78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db7a:	095a      	lsrs	r2, r3, #5
 801db7c:	4b7d      	ldr	r3, [pc, #500]	; (801dd74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801db7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db82:	400b      	ands	r3, r1
 801db84:	4313      	orrs	r3, r2
 801db86:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801db88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801db8c:	4313      	orrs	r3, r2
 801db8e:	b29b      	uxth	r3, r3
 801db90:	9310      	str	r3, [sp, #64]	; 0x40
 801db92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801db94:	781a      	ldrb	r2, [r3, #0]
 801db96:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801db9a:	4132      	asrs	r2, r6
 801db9c:	fb05 b919 	mls	r9, r5, r9, fp
 801dba0:	fb03 fb05 	mul.w	fp, r3, r5
 801dba4:	b2d2      	uxtb	r2, r2
 801dba6:	930d      	str	r3, [sp, #52]	; 0x34
 801dba8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dbac:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dbb0:	f0c0 80f5 	bcc.w	801dd9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dbb4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dbb8:	46ae      	mov	lr, r5
 801dbba:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dbbe:	f0c0 80dd 	bcc.w	801dd7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dbc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dbc4:	4013      	ands	r3, r2
 801dbc6:	d055      	beq.n	801dc74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dbc8:	20ff      	movs	r0, #255	; 0xff
 801dbca:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dbcc:	fb90 f1f1 	sdiv	r1, r0, r1
 801dbd0:	434b      	muls	r3, r1
 801dbd2:	2bfe      	cmp	r3, #254	; 0xfe
 801dbd4:	dd03      	ble.n	801dbde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dbd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dbd8:	4281      	cmp	r1, r0
 801dbda:	f000 80cd 	beq.w	801dd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dbde:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dbe0:	f8bc 4000 	ldrh.w	r4, [ip]
 801dbe4:	fb11 f303 	smulbb	r3, r1, r3
 801dbe8:	b29b      	uxth	r3, r3
 801dbea:	1c59      	adds	r1, r3, #1
 801dbec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dbf0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dbf4:	b29f      	uxth	r7, r3
 801dbf6:	43db      	mvns	r3, r3
 801dbf8:	b2db      	uxtb	r3, r3
 801dbfa:	9309      	str	r3, [sp, #36]	; 0x24
 801dbfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dbfe:	1220      	asrs	r0, r4, #8
 801dc00:	fb13 f907 	smulbb	r9, r3, r7
 801dc04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dc08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc0a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dc0e:	fb00 9003 	mla	r0, r0, r3, r9
 801dc12:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dc14:	10e1      	asrs	r1, r4, #3
 801dc16:	fb13 f907 	smulbb	r9, r3, r7
 801dc1a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dc1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc20:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dc24:	fb01 9103 	mla	r1, r1, r3, r9
 801dc28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dc2a:	00e4      	lsls	r4, r4, #3
 801dc2c:	fb13 f707 	smulbb	r7, r3, r7
 801dc30:	b2e4      	uxtb	r4, r4
 801dc32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dc34:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dc38:	fb04 7403 	mla	r4, r4, r3, r7
 801dc3c:	b280      	uxth	r0, r0
 801dc3e:	b2a4      	uxth	r4, r4
 801dc40:	1c43      	adds	r3, r0, #1
 801dc42:	f104 0901 	add.w	r9, r4, #1
 801dc46:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dc4a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dc4e:	b289      	uxth	r1, r1
 801dc50:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dc54:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dc58:	ea49 0000 	orr.w	r0, r9, r0
 801dc5c:	f101 0901 	add.w	r9, r1, #1
 801dc60:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dc64:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dc68:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dc6c:	ea40 0009 	orr.w	r0, r0, r9
 801dc70:	f8ac 0000 	strh.w	r0, [ip]
 801dc74:	4446      	add	r6, r8
 801dc76:	b2b6      	uxth	r6, r6
 801dc78:	2e07      	cmp	r6, #7
 801dc7a:	bf81      	itttt	hi
 801dc7c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801dc7e:	785a      	ldrbhi	r2, [r3, #1]
 801dc80:	3301      	addhi	r3, #1
 801dc82:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801dc84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc86:	bf9a      	itte	ls
 801dc88:	fa42 f208 	asrls.w	r2, r2, r8
 801dc8c:	b2d2      	uxtbls	r2, r2
 801dc8e:	2600      	movhi	r6, #0
 801dc90:	449c      	add	ip, r3
 801dc92:	e792      	b.n	801dbba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dc94:	441c      	add	r4, r3
 801dc96:	b224      	sxth	r4, r4
 801dc98:	e6d5      	b.n	801da46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dc9a:	f1ba 0f01 	cmp.w	sl, #1
 801dc9e:	f47f af0c 	bne.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dca2:	f1bb 0f01 	cmp.w	fp, #1
 801dca6:	f47f af08 	bne.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcaa:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801dd6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801dcae:	f8db 0000 	ldr.w	r0, [fp]
 801dcb2:	6803      	ldr	r3, [r0, #0]
 801dcb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dcb6:	4798      	blx	r3
 801dcb8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801dcbc:	465a      	mov	r2, fp
 801dcbe:	d006      	beq.n	801dcce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dcc0:	f1b8 0f04 	cmp.w	r8, #4
 801dcc4:	d140      	bne.n	801dd48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801dcc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dcc8:	3300      	adds	r3, #0
 801dcca:	bf18      	it	ne
 801dccc:	2301      	movne	r3, #1
 801dcce:	0580      	lsls	r0, r0, #22
 801dcd0:	d56e      	bpl.n	801ddb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dcd2:	f1b8 0f08 	cmp.w	r8, #8
 801dcd6:	d16b      	bne.n	801ddb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801dcd8:	2b00      	cmp	r3, #0
 801dcda:	bf0c      	ite	eq
 801dcdc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801dce0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801dce4:	2d00      	cmp	r5, #0
 801dce6:	f47f aee8 	bne.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcea:	2e00      	cmp	r6, #0
 801dcec:	f47f aee5 	bne.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcf0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dcf2:	19e3      	adds	r3, r4, r7
 801dcf4:	4283      	cmp	r3, r0
 801dcf6:	f73f aee0 	bgt.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dcfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dcfc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dcfe:	444b      	add	r3, r9
 801dd00:	4283      	cmp	r3, r0
 801dd02:	f73f aeda 	bgt.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dd06:	6810      	ldr	r0, [r2, #0]
 801dd08:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dd0c:	6804      	ldr	r4, [r0, #0]
 801dd0e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801dd12:	b2bf      	uxth	r7, r7
 801dd14:	f1b8 0f08 	cmp.w	r8, #8
 801dd18:	f04f 0500 	mov.w	r5, #0
 801dd1c:	bf18      	it	ne
 801dd1e:	3701      	addne	r7, #1
 801dd20:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801dd24:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd26:	9104      	str	r1, [sp, #16]
 801dd28:	bf18      	it	ne
 801dd2a:	f027 0701 	bicne.w	r7, r7, #1
 801dd2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dd30:	bf18      	it	ne
 801dd32:	b2bf      	uxthne	r7, r7
 801dd34:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dd38:	e9cd 7900 	strd	r7, r9, [sp]
 801dd3c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dd3e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801dd40:	47a0      	blx	r4
 801dd42:	b019      	add	sp, #100	; 0x64
 801dd44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd48:	2300      	movs	r3, #0
 801dd4a:	e7c0      	b.n	801dcce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dd4c:	2208      	movs	r2, #8
 801dd4e:	fb92 f3f8 	sdiv	r3, r2, r8
 801dd52:	1e5a      	subs	r2, r3, #1
 801dd54:	443a      	add	r2, r7
 801dd56:	fb92 f2f3 	sdiv	r2, r2, r3
 801dd5a:	fb12 f203 	smulbb	r2, r2, r3
 801dd5e:	b292      	uxth	r2, r2
 801dd60:	e6b0      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801dd62:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801dd64:	e6ec      	b.n	801db40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801dd66:	bf00      	nop
 801dd68:	200137c4 	.word	0x200137c4
 801dd6c:	200137cc 	.word	0x200137cc
 801dd70:	200137c6 	.word	0x200137c6
 801dd74:	00fff800 	.word	0x00fff800
 801dd78:	9810      	ldr	r0, [sp, #64]	; 0x40
 801dd7a:	e779      	b.n	801dc70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801dd7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dd7e:	b153      	cbz	r3, 801dd96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801dd80:	441e      	add	r6, r3
 801dd82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dd84:	b2b6      	uxth	r6, r6
 801dd86:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801dd8a:	f006 0607 	and.w	r6, r6, #7
 801dd8e:	781a      	ldrb	r2, [r3, #0]
 801dd90:	9328      	str	r3, [sp, #160]	; 0xa0
 801dd92:	4132      	asrs	r2, r6
 801dd94:	b2d2      	uxtb	r2, r2
 801dd96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dd98:	445b      	add	r3, fp
 801dd9a:	930a      	str	r3, [sp, #40]	; 0x28
 801dd9c:	e706      	b.n	801dbac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801dd9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dda0:	2b00      	cmp	r3, #0
 801dda2:	d1ce      	bne.n	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dda4:	4b05      	ldr	r3, [pc, #20]	; (801ddbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801dda6:	6818      	ldr	r0, [r3, #0]
 801dda8:	6803      	ldr	r3, [r0, #0]
 801ddaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ddac:	4798      	blx	r3
 801ddae:	e7c8      	b.n	801dd42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ddb0:	2b00      	cmp	r3, #0
 801ddb2:	f43f ae82 	beq.w	801daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddb6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ddba:	e793      	b.n	801dce4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ddbc:	200137cc 	.word	0x200137cc

0801ddc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ddc0:	b538      	push	{r3, r4, r5, lr}
 801ddc2:	4c15      	ldr	r4, [pc, #84]	; (801de18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ddc4:	7823      	ldrb	r3, [r4, #0]
 801ddc6:	f3bf 8f5b 	dmb	ish
 801ddca:	07da      	lsls	r2, r3, #31
 801ddcc:	4605      	mov	r5, r0
 801ddce:	d40b      	bmi.n	801dde8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ddd0:	4620      	mov	r0, r4
 801ddd2:	f009 fdbe 	bl	8027952 <__cxa_guard_acquire>
 801ddd6:	b138      	cbz	r0, 801dde8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ddd8:	4620      	mov	r0, r4
 801ddda:	f009 fdc6 	bl	802796a <__cxa_guard_release>
 801ddde:	4a0f      	ldr	r2, [pc, #60]	; (801de1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801dde0:	490f      	ldr	r1, [pc, #60]	; (801de20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801dde2:	4810      	ldr	r0, [pc, #64]	; (801de24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dde4:	f009 fdae 	bl	8027944 <__aeabi_atexit>
 801dde8:	4c0f      	ldr	r4, [pc, #60]	; (801de28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801ddea:	7823      	ldrb	r3, [r4, #0]
 801ddec:	f3bf 8f5b 	dmb	ish
 801ddf0:	07db      	lsls	r3, r3, #31
 801ddf2:	d40b      	bmi.n	801de0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ddf4:	4620      	mov	r0, r4
 801ddf6:	f009 fdac 	bl	8027952 <__cxa_guard_acquire>
 801ddfa:	b138      	cbz	r0, 801de0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ddfc:	4620      	mov	r0, r4
 801ddfe:	f009 fdb4 	bl	802796a <__cxa_guard_release>
 801de02:	4a06      	ldr	r2, [pc, #24]	; (801de1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801de04:	4909      	ldr	r1, [pc, #36]	; (801de2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801de06:	480a      	ldr	r0, [pc, #40]	; (801de30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de08:	f009 fd9c 	bl	8027944 <__aeabi_atexit>
 801de0c:	4b05      	ldr	r3, [pc, #20]	; (801de24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801de0e:	612b      	str	r3, [r5, #16]
 801de10:	4b07      	ldr	r3, [pc, #28]	; (801de30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801de12:	616b      	str	r3, [r5, #20]
 801de14:	bd38      	pop	{r3, r4, r5, pc}
 801de16:	bf00      	nop
 801de18:	200138ac 	.word	0x200138ac
 801de1c:	20000000 	.word	0x20000000
 801de20:	0801abc3 	.word	0x0801abc3
 801de24:	200000d4 	.word	0x200000d4
 801de28:	200138b0 	.word	0x200138b0
 801de2c:	0801abc1 	.word	0x0801abc1
 801de30:	200000d8 	.word	0x200000d8

0801de34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801de34:	b538      	push	{r3, r4, r5, lr}
 801de36:	4c15      	ldr	r4, [pc, #84]	; (801de8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801de38:	7823      	ldrb	r3, [r4, #0]
 801de3a:	f3bf 8f5b 	dmb	ish
 801de3e:	07da      	lsls	r2, r3, #31
 801de40:	4605      	mov	r5, r0
 801de42:	d40b      	bmi.n	801de5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de44:	4620      	mov	r0, r4
 801de46:	f009 fd84 	bl	8027952 <__cxa_guard_acquire>
 801de4a:	b138      	cbz	r0, 801de5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801de4c:	4620      	mov	r0, r4
 801de4e:	f009 fd8c 	bl	802796a <__cxa_guard_release>
 801de52:	4a0f      	ldr	r2, [pc, #60]	; (801de90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801de54:	490f      	ldr	r1, [pc, #60]	; (801de94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801de56:	4810      	ldr	r0, [pc, #64]	; (801de98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801de58:	f009 fd74 	bl	8027944 <__aeabi_atexit>
 801de5c:	4c0f      	ldr	r4, [pc, #60]	; (801de9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801de5e:	7823      	ldrb	r3, [r4, #0]
 801de60:	f3bf 8f5b 	dmb	ish
 801de64:	07db      	lsls	r3, r3, #31
 801de66:	d40b      	bmi.n	801de80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801de68:	4620      	mov	r0, r4
 801de6a:	f009 fd72 	bl	8027952 <__cxa_guard_acquire>
 801de6e:	b138      	cbz	r0, 801de80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801de70:	4620      	mov	r0, r4
 801de72:	f009 fd7a 	bl	802796a <__cxa_guard_release>
 801de76:	4a06      	ldr	r2, [pc, #24]	; (801de90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801de78:	4909      	ldr	r1, [pc, #36]	; (801dea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801de7a:	480a      	ldr	r0, [pc, #40]	; (801dea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801de7c:	f009 fd62 	bl	8027944 <__aeabi_atexit>
 801de80:	4b05      	ldr	r3, [pc, #20]	; (801de98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801de82:	60ab      	str	r3, [r5, #8]
 801de84:	4b07      	ldr	r3, [pc, #28]	; (801dea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801de86:	60eb      	str	r3, [r5, #12]
 801de88:	bd38      	pop	{r3, r4, r5, pc}
 801de8a:	bf00      	nop
 801de8c:	20013884 	.word	0x20013884
 801de90:	20000000 	.word	0x20000000
 801de94:	0801abc7 	.word	0x0801abc7
 801de98:	200000ac 	.word	0x200000ac
 801de9c:	20013888 	.word	0x20013888
 801dea0:	0801abc5 	.word	0x0801abc5
 801dea4:	200000b0 	.word	0x200000b0

0801dea8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dea8:	b510      	push	{r4, lr}
 801deaa:	4604      	mov	r4, r0
 801deac:	f7ff ff88 	bl	801ddc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801deb0:	4620      	mov	r0, r4
 801deb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801deb6:	f7ff bfbd 	b.w	801de34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801debc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801debc:	b538      	push	{r3, r4, r5, lr}
 801debe:	4c15      	ldr	r4, [pc, #84]	; (801df14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dec0:	7823      	ldrb	r3, [r4, #0]
 801dec2:	f3bf 8f5b 	dmb	ish
 801dec6:	07da      	lsls	r2, r3, #31
 801dec8:	4605      	mov	r5, r0
 801deca:	d40b      	bmi.n	801dee4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801decc:	4620      	mov	r0, r4
 801dece:	f009 fd40 	bl	8027952 <__cxa_guard_acquire>
 801ded2:	b138      	cbz	r0, 801dee4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ded4:	4620      	mov	r0, r4
 801ded6:	f009 fd48 	bl	802796a <__cxa_guard_release>
 801deda:	4a0f      	ldr	r2, [pc, #60]	; (801df18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dedc:	490f      	ldr	r1, [pc, #60]	; (801df1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dede:	4810      	ldr	r0, [pc, #64]	; (801df20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dee0:	f009 fd30 	bl	8027944 <__aeabi_atexit>
 801dee4:	4c0f      	ldr	r4, [pc, #60]	; (801df24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801dee6:	7823      	ldrb	r3, [r4, #0]
 801dee8:	f3bf 8f5b 	dmb	ish
 801deec:	07db      	lsls	r3, r3, #31
 801deee:	d40b      	bmi.n	801df08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801def0:	4620      	mov	r0, r4
 801def2:	f009 fd2e 	bl	8027952 <__cxa_guard_acquire>
 801def6:	b138      	cbz	r0, 801df08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801def8:	4620      	mov	r0, r4
 801defa:	f009 fd36 	bl	802796a <__cxa_guard_release>
 801defe:	4a06      	ldr	r2, [pc, #24]	; (801df18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801df00:	4909      	ldr	r1, [pc, #36]	; (801df28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801df02:	480a      	ldr	r0, [pc, #40]	; (801df2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df04:	f009 fd1e 	bl	8027944 <__aeabi_atexit>
 801df08:	4b05      	ldr	r3, [pc, #20]	; (801df20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801df0a:	622b      	str	r3, [r5, #32]
 801df0c:	4b07      	ldr	r3, [pc, #28]	; (801df2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801df0e:	626b      	str	r3, [r5, #36]	; 0x24
 801df10:	bd38      	pop	{r3, r4, r5, pc}
 801df12:	bf00      	nop
 801df14:	200138b4 	.word	0x200138b4
 801df18:	20000000 	.word	0x20000000
 801df1c:	0801abbb 	.word	0x0801abbb
 801df20:	200000dc 	.word	0x200000dc
 801df24:	200138b8 	.word	0x200138b8
 801df28:	0801abb9 	.word	0x0801abb9
 801df2c:	200000e0 	.word	0x200000e0

0801df30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801df30:	b538      	push	{r3, r4, r5, lr}
 801df32:	4c15      	ldr	r4, [pc, #84]	; (801df88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801df34:	7823      	ldrb	r3, [r4, #0]
 801df36:	f3bf 8f5b 	dmb	ish
 801df3a:	07da      	lsls	r2, r3, #31
 801df3c:	4605      	mov	r5, r0
 801df3e:	d40b      	bmi.n	801df58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df40:	4620      	mov	r0, r4
 801df42:	f009 fd06 	bl	8027952 <__cxa_guard_acquire>
 801df46:	b138      	cbz	r0, 801df58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801df48:	4620      	mov	r0, r4
 801df4a:	f009 fd0e 	bl	802796a <__cxa_guard_release>
 801df4e:	4a0f      	ldr	r2, [pc, #60]	; (801df8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801df50:	490f      	ldr	r1, [pc, #60]	; (801df90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801df52:	4810      	ldr	r0, [pc, #64]	; (801df94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801df54:	f009 fcf6 	bl	8027944 <__aeabi_atexit>
 801df58:	4c0f      	ldr	r4, [pc, #60]	; (801df98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801df5a:	7823      	ldrb	r3, [r4, #0]
 801df5c:	f3bf 8f5b 	dmb	ish
 801df60:	07db      	lsls	r3, r3, #31
 801df62:	d40b      	bmi.n	801df7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801df64:	4620      	mov	r0, r4
 801df66:	f009 fcf4 	bl	8027952 <__cxa_guard_acquire>
 801df6a:	b138      	cbz	r0, 801df7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801df6c:	4620      	mov	r0, r4
 801df6e:	f009 fcfc 	bl	802796a <__cxa_guard_release>
 801df72:	4a06      	ldr	r2, [pc, #24]	; (801df8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801df74:	4909      	ldr	r1, [pc, #36]	; (801df9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801df76:	480a      	ldr	r0, [pc, #40]	; (801dfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801df78:	f009 fce4 	bl	8027944 <__aeabi_atexit>
 801df7c:	4b05      	ldr	r3, [pc, #20]	; (801df94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801df7e:	61ab      	str	r3, [r5, #24]
 801df80:	4b07      	ldr	r3, [pc, #28]	; (801dfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801df82:	61eb      	str	r3, [r5, #28]
 801df84:	bd38      	pop	{r3, r4, r5, pc}
 801df86:	bf00      	nop
 801df88:	2001388c 	.word	0x2001388c
 801df8c:	20000000 	.word	0x20000000
 801df90:	0801abbf 	.word	0x0801abbf
 801df94:	200000b4 	.word	0x200000b4
 801df98:	20013890 	.word	0x20013890
 801df9c:	0801abbd 	.word	0x0801abbd
 801dfa0:	200000b8 	.word	0x200000b8

0801dfa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dfa4:	b510      	push	{r4, lr}
 801dfa6:	4604      	mov	r4, r0
 801dfa8:	f7ff ff88 	bl	801debc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dfac:	4620      	mov	r0, r4
 801dfae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfb2:	f7ff bfbd 	b.w	801df30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dfb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dfb8:	b538      	push	{r3, r4, r5, lr}
 801dfba:	4c15      	ldr	r4, [pc, #84]	; (801e010 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dfbc:	7823      	ldrb	r3, [r4, #0]
 801dfbe:	f3bf 8f5b 	dmb	ish
 801dfc2:	07da      	lsls	r2, r3, #31
 801dfc4:	4605      	mov	r5, r0
 801dfc6:	d40b      	bmi.n	801dfe0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dfc8:	4620      	mov	r0, r4
 801dfca:	f009 fcc2 	bl	8027952 <__cxa_guard_acquire>
 801dfce:	b138      	cbz	r0, 801dfe0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dfd0:	4620      	mov	r0, r4
 801dfd2:	f009 fcca 	bl	802796a <__cxa_guard_release>
 801dfd6:	4a0f      	ldr	r2, [pc, #60]	; (801e014 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dfd8:	490f      	ldr	r1, [pc, #60]	; (801e018 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dfda:	4810      	ldr	r0, [pc, #64]	; (801e01c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dfdc:	f009 fcb2 	bl	8027944 <__aeabi_atexit>
 801dfe0:	4c0f      	ldr	r4, [pc, #60]	; (801e020 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801dfe2:	7823      	ldrb	r3, [r4, #0]
 801dfe4:	f3bf 8f5b 	dmb	ish
 801dfe8:	07db      	lsls	r3, r3, #31
 801dfea:	d40b      	bmi.n	801e004 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dfec:	4620      	mov	r0, r4
 801dfee:	f009 fcb0 	bl	8027952 <__cxa_guard_acquire>
 801dff2:	b138      	cbz	r0, 801e004 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dff4:	4620      	mov	r0, r4
 801dff6:	f009 fcb8 	bl	802796a <__cxa_guard_release>
 801dffa:	4a06      	ldr	r2, [pc, #24]	; (801e014 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dffc:	4909      	ldr	r1, [pc, #36]	; (801e024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dffe:	480a      	ldr	r0, [pc, #40]	; (801e028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e000:	f009 fca0 	bl	8027944 <__aeabi_atexit>
 801e004:	4b05      	ldr	r3, [pc, #20]	; (801e01c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e006:	632b      	str	r3, [r5, #48]	; 0x30
 801e008:	4b07      	ldr	r3, [pc, #28]	; (801e028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e00a:	636b      	str	r3, [r5, #52]	; 0x34
 801e00c:	bd38      	pop	{r3, r4, r5, pc}
 801e00e:	bf00      	nop
 801e010:	200138c4 	.word	0x200138c4
 801e014:	20000000 	.word	0x20000000
 801e018:	0801abb3 	.word	0x0801abb3
 801e01c:	200000ec 	.word	0x200000ec
 801e020:	200138c8 	.word	0x200138c8
 801e024:	0801abb1 	.word	0x0801abb1
 801e028:	200000f0 	.word	0x200000f0

0801e02c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e02c:	b538      	push	{r3, r4, r5, lr}
 801e02e:	4c15      	ldr	r4, [pc, #84]	; (801e084 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e030:	7823      	ldrb	r3, [r4, #0]
 801e032:	f3bf 8f5b 	dmb	ish
 801e036:	07da      	lsls	r2, r3, #31
 801e038:	4605      	mov	r5, r0
 801e03a:	d40b      	bmi.n	801e054 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e03c:	4620      	mov	r0, r4
 801e03e:	f009 fc88 	bl	8027952 <__cxa_guard_acquire>
 801e042:	b138      	cbz	r0, 801e054 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e044:	4620      	mov	r0, r4
 801e046:	f009 fc90 	bl	802796a <__cxa_guard_release>
 801e04a:	4a0f      	ldr	r2, [pc, #60]	; (801e088 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e04c:	490f      	ldr	r1, [pc, #60]	; (801e08c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e04e:	4810      	ldr	r0, [pc, #64]	; (801e090 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e050:	f009 fc78 	bl	8027944 <__aeabi_atexit>
 801e054:	4c0f      	ldr	r4, [pc, #60]	; (801e094 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e056:	7823      	ldrb	r3, [r4, #0]
 801e058:	f3bf 8f5b 	dmb	ish
 801e05c:	07db      	lsls	r3, r3, #31
 801e05e:	d40b      	bmi.n	801e078 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e060:	4620      	mov	r0, r4
 801e062:	f009 fc76 	bl	8027952 <__cxa_guard_acquire>
 801e066:	b138      	cbz	r0, 801e078 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e068:	4620      	mov	r0, r4
 801e06a:	f009 fc7e 	bl	802796a <__cxa_guard_release>
 801e06e:	4a06      	ldr	r2, [pc, #24]	; (801e088 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e070:	4909      	ldr	r1, [pc, #36]	; (801e098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e072:	480a      	ldr	r0, [pc, #40]	; (801e09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e074:	f009 fc66 	bl	8027944 <__aeabi_atexit>
 801e078:	4b05      	ldr	r3, [pc, #20]	; (801e090 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e07a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e07c:	4b07      	ldr	r3, [pc, #28]	; (801e09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e07e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e080:	bd38      	pop	{r3, r4, r5, pc}
 801e082:	bf00      	nop
 801e084:	20013894 	.word	0x20013894
 801e088:	20000000 	.word	0x20000000
 801e08c:	0801abb7 	.word	0x0801abb7
 801e090:	200000bc 	.word	0x200000bc
 801e094:	20013898 	.word	0x20013898
 801e098:	0801abb5 	.word	0x0801abb5
 801e09c:	200000c0 	.word	0x200000c0

0801e0a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e0a0:	b510      	push	{r4, lr}
 801e0a2:	4604      	mov	r4, r0
 801e0a4:	f7ff ff88 	bl	801dfb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e0a8:	4620      	mov	r0, r4
 801e0aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0ae:	f7ff bfbd 	b.w	801e02c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e0b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e0b4:	b538      	push	{r3, r4, r5, lr}
 801e0b6:	4c15      	ldr	r4, [pc, #84]	; (801e10c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e0b8:	7823      	ldrb	r3, [r4, #0]
 801e0ba:	f3bf 8f5b 	dmb	ish
 801e0be:	07da      	lsls	r2, r3, #31
 801e0c0:	4605      	mov	r5, r0
 801e0c2:	d40b      	bmi.n	801e0dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e0c4:	4620      	mov	r0, r4
 801e0c6:	f009 fc44 	bl	8027952 <__cxa_guard_acquire>
 801e0ca:	b138      	cbz	r0, 801e0dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e0cc:	4620      	mov	r0, r4
 801e0ce:	f009 fc4c 	bl	802796a <__cxa_guard_release>
 801e0d2:	4a0f      	ldr	r2, [pc, #60]	; (801e110 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e0d4:	490f      	ldr	r1, [pc, #60]	; (801e114 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e0d6:	4810      	ldr	r0, [pc, #64]	; (801e118 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e0d8:	f009 fc34 	bl	8027944 <__aeabi_atexit>
 801e0dc:	4c0f      	ldr	r4, [pc, #60]	; (801e11c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e0de:	7823      	ldrb	r3, [r4, #0]
 801e0e0:	f3bf 8f5b 	dmb	ish
 801e0e4:	07db      	lsls	r3, r3, #31
 801e0e6:	d40b      	bmi.n	801e100 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e0e8:	4620      	mov	r0, r4
 801e0ea:	f009 fc32 	bl	8027952 <__cxa_guard_acquire>
 801e0ee:	b138      	cbz	r0, 801e100 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	f009 fc3a 	bl	802796a <__cxa_guard_release>
 801e0f6:	4a06      	ldr	r2, [pc, #24]	; (801e110 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e0f8:	4909      	ldr	r1, [pc, #36]	; (801e120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e0fa:	480a      	ldr	r0, [pc, #40]	; (801e124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e0fc:	f009 fc22 	bl	8027944 <__aeabi_atexit>
 801e100:	4b05      	ldr	r3, [pc, #20]	; (801e118 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e102:	652b      	str	r3, [r5, #80]	; 0x50
 801e104:	4b07      	ldr	r3, [pc, #28]	; (801e124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e106:	656b      	str	r3, [r5, #84]	; 0x54
 801e108:	bd38      	pop	{r3, r4, r5, pc}
 801e10a:	bf00      	nop
 801e10c:	200138cc 	.word	0x200138cc
 801e110:	20000000 	.word	0x20000000
 801e114:	0801aba3 	.word	0x0801aba3
 801e118:	200000f4 	.word	0x200000f4
 801e11c:	200138d0 	.word	0x200138d0
 801e120:	0801aba1 	.word	0x0801aba1
 801e124:	200000f8 	.word	0x200000f8

0801e128 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e128:	b538      	push	{r3, r4, r5, lr}
 801e12a:	4c15      	ldr	r4, [pc, #84]	; (801e180 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e12c:	7823      	ldrb	r3, [r4, #0]
 801e12e:	f3bf 8f5b 	dmb	ish
 801e132:	07da      	lsls	r2, r3, #31
 801e134:	4605      	mov	r5, r0
 801e136:	d40b      	bmi.n	801e150 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e138:	4620      	mov	r0, r4
 801e13a:	f009 fc0a 	bl	8027952 <__cxa_guard_acquire>
 801e13e:	b138      	cbz	r0, 801e150 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e140:	4620      	mov	r0, r4
 801e142:	f009 fc12 	bl	802796a <__cxa_guard_release>
 801e146:	4a0f      	ldr	r2, [pc, #60]	; (801e184 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e148:	490f      	ldr	r1, [pc, #60]	; (801e188 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e14a:	4810      	ldr	r0, [pc, #64]	; (801e18c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e14c:	f009 fbfa 	bl	8027944 <__aeabi_atexit>
 801e150:	4c0f      	ldr	r4, [pc, #60]	; (801e190 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e152:	7823      	ldrb	r3, [r4, #0]
 801e154:	f3bf 8f5b 	dmb	ish
 801e158:	07db      	lsls	r3, r3, #31
 801e15a:	d40b      	bmi.n	801e174 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e15c:	4620      	mov	r0, r4
 801e15e:	f009 fbf8 	bl	8027952 <__cxa_guard_acquire>
 801e162:	b138      	cbz	r0, 801e174 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e164:	4620      	mov	r0, r4
 801e166:	f009 fc00 	bl	802796a <__cxa_guard_release>
 801e16a:	4a06      	ldr	r2, [pc, #24]	; (801e184 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e16c:	4909      	ldr	r1, [pc, #36]	; (801e194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e16e:	480a      	ldr	r0, [pc, #40]	; (801e198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e170:	f009 fbe8 	bl	8027944 <__aeabi_atexit>
 801e174:	4b05      	ldr	r3, [pc, #20]	; (801e18c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e176:	64ab      	str	r3, [r5, #72]	; 0x48
 801e178:	4b07      	ldr	r3, [pc, #28]	; (801e198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e17a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e17c:	bd38      	pop	{r3, r4, r5, pc}
 801e17e:	bf00      	nop
 801e180:	200138d4 	.word	0x200138d4
 801e184:	20000000 	.word	0x20000000
 801e188:	0801aba7 	.word	0x0801aba7
 801e18c:	200000fc 	.word	0x200000fc
 801e190:	200138d8 	.word	0x200138d8
 801e194:	0801aba5 	.word	0x0801aba5
 801e198:	20000100 	.word	0x20000100

0801e19c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e19c:	b538      	push	{r3, r4, r5, lr}
 801e19e:	4c15      	ldr	r4, [pc, #84]	; (801e1f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e1a0:	7823      	ldrb	r3, [r4, #0]
 801e1a2:	f3bf 8f5b 	dmb	ish
 801e1a6:	07da      	lsls	r2, r3, #31
 801e1a8:	4605      	mov	r5, r0
 801e1aa:	d40b      	bmi.n	801e1c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1ac:	4620      	mov	r0, r4
 801e1ae:	f009 fbd0 	bl	8027952 <__cxa_guard_acquire>
 801e1b2:	b138      	cbz	r0, 801e1c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e1b4:	4620      	mov	r0, r4
 801e1b6:	f009 fbd8 	bl	802796a <__cxa_guard_release>
 801e1ba:	4a0f      	ldr	r2, [pc, #60]	; (801e1f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e1bc:	490f      	ldr	r1, [pc, #60]	; (801e1fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e1be:	4810      	ldr	r0, [pc, #64]	; (801e200 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e1c0:	f009 fbc0 	bl	8027944 <__aeabi_atexit>
 801e1c4:	4c0f      	ldr	r4, [pc, #60]	; (801e204 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e1c6:	7823      	ldrb	r3, [r4, #0]
 801e1c8:	f3bf 8f5b 	dmb	ish
 801e1cc:	07db      	lsls	r3, r3, #31
 801e1ce:	d40b      	bmi.n	801e1e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e1d0:	4620      	mov	r0, r4
 801e1d2:	f009 fbbe 	bl	8027952 <__cxa_guard_acquire>
 801e1d6:	b138      	cbz	r0, 801e1e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e1d8:	4620      	mov	r0, r4
 801e1da:	f009 fbc6 	bl	802796a <__cxa_guard_release>
 801e1de:	4a06      	ldr	r2, [pc, #24]	; (801e1f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e1e0:	4909      	ldr	r1, [pc, #36]	; (801e208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e1e2:	480a      	ldr	r0, [pc, #40]	; (801e20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e1e4:	f009 fbae 	bl	8027944 <__aeabi_atexit>
 801e1e8:	4b05      	ldr	r3, [pc, #20]	; (801e200 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e1ea:	642b      	str	r3, [r5, #64]	; 0x40
 801e1ec:	4b07      	ldr	r3, [pc, #28]	; (801e20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e1ee:	646b      	str	r3, [r5, #68]	; 0x44
 801e1f0:	bd38      	pop	{r3, r4, r5, pc}
 801e1f2:	bf00      	nop
 801e1f4:	2001389c 	.word	0x2001389c
 801e1f8:	20000000 	.word	0x20000000
 801e1fc:	0801abab 	.word	0x0801abab
 801e200:	200000c4 	.word	0x200000c4
 801e204:	200138a0 	.word	0x200138a0
 801e208:	0801aba9 	.word	0x0801aba9
 801e20c:	200000c8 	.word	0x200000c8

0801e210 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e210:	b538      	push	{r3, r4, r5, lr}
 801e212:	4c15      	ldr	r4, [pc, #84]	; (801e268 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e214:	7823      	ldrb	r3, [r4, #0]
 801e216:	f3bf 8f5b 	dmb	ish
 801e21a:	07da      	lsls	r2, r3, #31
 801e21c:	4605      	mov	r5, r0
 801e21e:	d40b      	bmi.n	801e238 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e220:	4620      	mov	r0, r4
 801e222:	f009 fb96 	bl	8027952 <__cxa_guard_acquire>
 801e226:	b138      	cbz	r0, 801e238 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e228:	4620      	mov	r0, r4
 801e22a:	f009 fb9e 	bl	802796a <__cxa_guard_release>
 801e22e:	4a0f      	ldr	r2, [pc, #60]	; (801e26c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e230:	490f      	ldr	r1, [pc, #60]	; (801e270 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e232:	4810      	ldr	r0, [pc, #64]	; (801e274 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e234:	f009 fb86 	bl	8027944 <__aeabi_atexit>
 801e238:	4c0f      	ldr	r4, [pc, #60]	; (801e278 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e23a:	7823      	ldrb	r3, [r4, #0]
 801e23c:	f3bf 8f5b 	dmb	ish
 801e240:	07db      	lsls	r3, r3, #31
 801e242:	d40b      	bmi.n	801e25c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e244:	4620      	mov	r0, r4
 801e246:	f009 fb84 	bl	8027952 <__cxa_guard_acquire>
 801e24a:	b138      	cbz	r0, 801e25c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e24c:	4620      	mov	r0, r4
 801e24e:	f009 fb8c 	bl	802796a <__cxa_guard_release>
 801e252:	4a06      	ldr	r2, [pc, #24]	; (801e26c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e254:	4909      	ldr	r1, [pc, #36]	; (801e27c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e256:	480a      	ldr	r0, [pc, #40]	; (801e280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e258:	f009 fb74 	bl	8027944 <__aeabi_atexit>
 801e25c:	4b05      	ldr	r3, [pc, #20]	; (801e274 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e25e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e260:	4b07      	ldr	r3, [pc, #28]	; (801e280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e262:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e264:	bd38      	pop	{r3, r4, r5, pc}
 801e266:	bf00      	nop
 801e268:	200138bc 	.word	0x200138bc
 801e26c:	20000000 	.word	0x20000000
 801e270:	0801abaf 	.word	0x0801abaf
 801e274:	200000e4 	.word	0x200000e4
 801e278:	200138c0 	.word	0x200138c0
 801e27c:	0801abad 	.word	0x0801abad
 801e280:	200000e8 	.word	0x200000e8

0801e284 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e284:	b510      	push	{r4, lr}
 801e286:	4604      	mov	r4, r0
 801e288:	f7ff ff14 	bl	801e0b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e28c:	4620      	mov	r0, r4
 801e28e:	f7ff ff85 	bl	801e19c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e292:	4620      	mov	r0, r4
 801e294:	f7ff ff48 	bl	801e128 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e298:	4620      	mov	r0, r4
 801e29a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e29e:	f7ff bfb7 	b.w	801e210 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e2a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e2a4:	b538      	push	{r3, r4, r5, lr}
 801e2a6:	4c15      	ldr	r4, [pc, #84]	; (801e2fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e2a8:	7823      	ldrb	r3, [r4, #0]
 801e2aa:	f3bf 8f5b 	dmb	ish
 801e2ae:	07da      	lsls	r2, r3, #31
 801e2b0:	4605      	mov	r5, r0
 801e2b2:	d40b      	bmi.n	801e2cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e2b4:	4620      	mov	r0, r4
 801e2b6:	f009 fb4c 	bl	8027952 <__cxa_guard_acquire>
 801e2ba:	b138      	cbz	r0, 801e2cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e2bc:	4620      	mov	r0, r4
 801e2be:	f009 fb54 	bl	802796a <__cxa_guard_release>
 801e2c2:	4a0f      	ldr	r2, [pc, #60]	; (801e300 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e2c4:	490f      	ldr	r1, [pc, #60]	; (801e304 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e2c6:	4810      	ldr	r0, [pc, #64]	; (801e308 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e2c8:	f009 fb3c 	bl	8027944 <__aeabi_atexit>
 801e2cc:	4c0f      	ldr	r4, [pc, #60]	; (801e30c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e2ce:	7823      	ldrb	r3, [r4, #0]
 801e2d0:	f3bf 8f5b 	dmb	ish
 801e2d4:	07db      	lsls	r3, r3, #31
 801e2d6:	d40b      	bmi.n	801e2f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e2d8:	4620      	mov	r0, r4
 801e2da:	f009 fb3a 	bl	8027952 <__cxa_guard_acquire>
 801e2de:	b138      	cbz	r0, 801e2f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e2e0:	4620      	mov	r0, r4
 801e2e2:	f009 fb42 	bl	802796a <__cxa_guard_release>
 801e2e6:	4a06      	ldr	r2, [pc, #24]	; (801e300 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e2e8:	4909      	ldr	r1, [pc, #36]	; (801e310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e2ea:	480a      	ldr	r0, [pc, #40]	; (801e314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e2ec:	f009 fb2a 	bl	8027944 <__aeabi_atexit>
 801e2f0:	4b05      	ldr	r3, [pc, #20]	; (801e308 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e2f2:	662b      	str	r3, [r5, #96]	; 0x60
 801e2f4:	4b07      	ldr	r3, [pc, #28]	; (801e314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e2f6:	666b      	str	r3, [r5, #100]	; 0x64
 801e2f8:	bd38      	pop	{r3, r4, r5, pc}
 801e2fa:	bf00      	nop
 801e2fc:	200138a4 	.word	0x200138a4
 801e300:	20000000 	.word	0x20000000
 801e304:	0801ab9b 	.word	0x0801ab9b
 801e308:	200000cc 	.word	0x200000cc
 801e30c:	200138a8 	.word	0x200138a8
 801e310:	0801ab99 	.word	0x0801ab99
 801e314:	200000d0 	.word	0x200000d0

0801e318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e318:	b538      	push	{r3, r4, r5, lr}
 801e31a:	4c15      	ldr	r4, [pc, #84]	; (801e370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e31c:	7823      	ldrb	r3, [r4, #0]
 801e31e:	f3bf 8f5b 	dmb	ish
 801e322:	07da      	lsls	r2, r3, #31
 801e324:	4605      	mov	r5, r0
 801e326:	d40b      	bmi.n	801e340 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e328:	4620      	mov	r0, r4
 801e32a:	f009 fb12 	bl	8027952 <__cxa_guard_acquire>
 801e32e:	b138      	cbz	r0, 801e340 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e330:	4620      	mov	r0, r4
 801e332:	f009 fb1a 	bl	802796a <__cxa_guard_release>
 801e336:	4a0f      	ldr	r2, [pc, #60]	; (801e374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e338:	490f      	ldr	r1, [pc, #60]	; (801e378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e33a:	4810      	ldr	r0, [pc, #64]	; (801e37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e33c:	f009 fb02 	bl	8027944 <__aeabi_atexit>
 801e340:	4c0f      	ldr	r4, [pc, #60]	; (801e380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e342:	7823      	ldrb	r3, [r4, #0]
 801e344:	f3bf 8f5b 	dmb	ish
 801e348:	07db      	lsls	r3, r3, #31
 801e34a:	d40b      	bmi.n	801e364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e34c:	4620      	mov	r0, r4
 801e34e:	f009 fb00 	bl	8027952 <__cxa_guard_acquire>
 801e352:	b138      	cbz	r0, 801e364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e354:	4620      	mov	r0, r4
 801e356:	f009 fb08 	bl	802796a <__cxa_guard_release>
 801e35a:	4a06      	ldr	r2, [pc, #24]	; (801e374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e35c:	4909      	ldr	r1, [pc, #36]	; (801e384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e35e:	480a      	ldr	r0, [pc, #40]	; (801e388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e360:	f009 faf0 	bl	8027944 <__aeabi_atexit>
 801e364:	4b05      	ldr	r3, [pc, #20]	; (801e37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e366:	65ab      	str	r3, [r5, #88]	; 0x58
 801e368:	4b07      	ldr	r3, [pc, #28]	; (801e388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e36a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e36c:	bd38      	pop	{r3, r4, r5, pc}
 801e36e:	bf00      	nop
 801e370:	2001387c 	.word	0x2001387c
 801e374:	20000000 	.word	0x20000000
 801e378:	0801ab9f 	.word	0x0801ab9f
 801e37c:	200000a4 	.word	0x200000a4
 801e380:	20013880 	.word	0x20013880
 801e384:	0801ab9d 	.word	0x0801ab9d
 801e388:	200000a8 	.word	0x200000a8

0801e38c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e38c:	b510      	push	{r4, lr}
 801e38e:	4604      	mov	r4, r0
 801e390:	f7ff ff88 	bl	801e2a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e394:	4620      	mov	r0, r4
 801e396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e39a:	f7ff bfbd 	b.w	801e318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e3a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e3a0:	b538      	push	{r3, r4, r5, lr}
 801e3a2:	4c15      	ldr	r4, [pc, #84]	; (801e3f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e3a4:	7823      	ldrb	r3, [r4, #0]
 801e3a6:	f3bf 8f5b 	dmb	ish
 801e3aa:	07da      	lsls	r2, r3, #31
 801e3ac:	4605      	mov	r5, r0
 801e3ae:	d40b      	bmi.n	801e3c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e3b0:	4620      	mov	r0, r4
 801e3b2:	f009 face 	bl	8027952 <__cxa_guard_acquire>
 801e3b6:	b138      	cbz	r0, 801e3c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e3b8:	4620      	mov	r0, r4
 801e3ba:	f009 fad6 	bl	802796a <__cxa_guard_release>
 801e3be:	4a0f      	ldr	r2, [pc, #60]	; (801e3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e3c0:	490f      	ldr	r1, [pc, #60]	; (801e400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e3c2:	4810      	ldr	r0, [pc, #64]	; (801e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e3c4:	f009 fabe 	bl	8027944 <__aeabi_atexit>
 801e3c8:	4c0f      	ldr	r4, [pc, #60]	; (801e408 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e3ca:	7823      	ldrb	r3, [r4, #0]
 801e3cc:	f3bf 8f5b 	dmb	ish
 801e3d0:	07db      	lsls	r3, r3, #31
 801e3d2:	d40b      	bmi.n	801e3ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e3d4:	4620      	mov	r0, r4
 801e3d6:	f009 fabc 	bl	8027952 <__cxa_guard_acquire>
 801e3da:	b138      	cbz	r0, 801e3ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f009 fac4 	bl	802796a <__cxa_guard_release>
 801e3e2:	4a06      	ldr	r2, [pc, #24]	; (801e3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e3e4:	4909      	ldr	r1, [pc, #36]	; (801e40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e3e6:	480a      	ldr	r0, [pc, #40]	; (801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e3e8:	f009 faac 	bl	8027944 <__aeabi_atexit>
 801e3ec:	4b05      	ldr	r3, [pc, #20]	; (801e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e3ee:	672b      	str	r3, [r5, #112]	; 0x70
 801e3f0:	4b07      	ldr	r3, [pc, #28]	; (801e410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e3f2:	676b      	str	r3, [r5, #116]	; 0x74
 801e3f4:	bd38      	pop	{r3, r4, r5, pc}
 801e3f6:	bf00      	nop
 801e3f8:	20013874 	.word	0x20013874
 801e3fc:	20000000 	.word	0x20000000
 801e400:	0801ab93 	.word	0x0801ab93
 801e404:	2000009c 	.word	0x2000009c
 801e408:	20013878 	.word	0x20013878
 801e40c:	0801ab91 	.word	0x0801ab91
 801e410:	200000a0 	.word	0x200000a0

0801e414 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e414:	b538      	push	{r3, r4, r5, lr}
 801e416:	4c15      	ldr	r4, [pc, #84]	; (801e46c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e418:	7823      	ldrb	r3, [r4, #0]
 801e41a:	f3bf 8f5b 	dmb	ish
 801e41e:	07da      	lsls	r2, r3, #31
 801e420:	4605      	mov	r5, r0
 801e422:	d40b      	bmi.n	801e43c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e424:	4620      	mov	r0, r4
 801e426:	f009 fa94 	bl	8027952 <__cxa_guard_acquire>
 801e42a:	b138      	cbz	r0, 801e43c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e42c:	4620      	mov	r0, r4
 801e42e:	f009 fa9c 	bl	802796a <__cxa_guard_release>
 801e432:	4a0f      	ldr	r2, [pc, #60]	; (801e470 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e434:	490f      	ldr	r1, [pc, #60]	; (801e474 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e436:	4810      	ldr	r0, [pc, #64]	; (801e478 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e438:	f009 fa84 	bl	8027944 <__aeabi_atexit>
 801e43c:	4c0f      	ldr	r4, [pc, #60]	; (801e47c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e43e:	7823      	ldrb	r3, [r4, #0]
 801e440:	f3bf 8f5b 	dmb	ish
 801e444:	07db      	lsls	r3, r3, #31
 801e446:	d40b      	bmi.n	801e460 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e448:	4620      	mov	r0, r4
 801e44a:	f009 fa82 	bl	8027952 <__cxa_guard_acquire>
 801e44e:	b138      	cbz	r0, 801e460 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e450:	4620      	mov	r0, r4
 801e452:	f009 fa8a 	bl	802796a <__cxa_guard_release>
 801e456:	4a06      	ldr	r2, [pc, #24]	; (801e470 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e458:	4909      	ldr	r1, [pc, #36]	; (801e480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e45a:	480a      	ldr	r0, [pc, #40]	; (801e484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e45c:	f009 fa72 	bl	8027944 <__aeabi_atexit>
 801e460:	4b05      	ldr	r3, [pc, #20]	; (801e478 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e462:	66ab      	str	r3, [r5, #104]	; 0x68
 801e464:	4b07      	ldr	r3, [pc, #28]	; (801e484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e466:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e468:	bd38      	pop	{r3, r4, r5, pc}
 801e46a:	bf00      	nop
 801e46c:	2001386c 	.word	0x2001386c
 801e470:	20000000 	.word	0x20000000
 801e474:	0801ab97 	.word	0x0801ab97
 801e478:	20000094 	.word	0x20000094
 801e47c:	20013870 	.word	0x20013870
 801e480:	0801ab95 	.word	0x0801ab95
 801e484:	20000098 	.word	0x20000098

0801e488 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e488:	b510      	push	{r4, lr}
 801e48a:	4604      	mov	r4, r0
 801e48c:	f7ff ff88 	bl	801e3a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e490:	4620      	mov	r0, r4
 801e492:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e496:	f7ff bfbd 	b.w	801e414 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e49a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e49a:	b510      	push	{r4, lr}
 801e49c:	4604      	mov	r4, r0
 801e49e:	f7ff fff3 	bl	801e488 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e4a2:	4620      	mov	r0, r4
 801e4a4:	f7ff ff72 	bl	801e38c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e4a8:	4620      	mov	r0, r4
 801e4aa:	f7ff fdf9 	bl	801e0a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e4ae:	4620      	mov	r0, r4
 801e4b0:	f7ff fcfa 	bl	801dea8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e4b4:	4620      	mov	r0, r4
 801e4b6:	f7ff fd75 	bl	801dfa4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e4ba:	4620      	mov	r0, r4
 801e4bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4c0:	f7ff bee0 	b.w	801e284 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e4c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e4c4:	b538      	push	{r3, r4, r5, lr}
 801e4c6:	4c0b      	ldr	r4, [pc, #44]	; (801e4f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e4c8:	7823      	ldrb	r3, [r4, #0]
 801e4ca:	f3bf 8f5b 	dmb	ish
 801e4ce:	07db      	lsls	r3, r3, #31
 801e4d0:	4605      	mov	r5, r0
 801e4d2:	d40b      	bmi.n	801e4ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e4d4:	4620      	mov	r0, r4
 801e4d6:	f009 fa3c 	bl	8027952 <__cxa_guard_acquire>
 801e4da:	b138      	cbz	r0, 801e4ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e4dc:	4620      	mov	r0, r4
 801e4de:	f009 fa44 	bl	802796a <__cxa_guard_release>
 801e4e2:	4a05      	ldr	r2, [pc, #20]	; (801e4f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e4e4:	4905      	ldr	r1, [pc, #20]	; (801e4fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e4e6:	4806      	ldr	r0, [pc, #24]	; (801e500 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e4e8:	f009 fa2c 	bl	8027944 <__aeabi_atexit>
 801e4ec:	4b04      	ldr	r3, [pc, #16]	; (801e500 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e4ee:	67ab      	str	r3, [r5, #120]	; 0x78
 801e4f0:	bd38      	pop	{r3, r4, r5, pc}
 801e4f2:	bf00      	nop
 801e4f4:	20013860 	.word	0x20013860
 801e4f8:	20000000 	.word	0x20000000
 801e4fc:	0801ab8f 	.word	0x0801ab8f
 801e500:	2000008c 	.word	0x2000008c

0801e504 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e504:	b538      	push	{r3, r4, r5, lr}
 801e506:	4c0b      	ldr	r4, [pc, #44]	; (801e534 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e508:	7823      	ldrb	r3, [r4, #0]
 801e50a:	f3bf 8f5b 	dmb	ish
 801e50e:	07db      	lsls	r3, r3, #31
 801e510:	4605      	mov	r5, r0
 801e512:	d40b      	bmi.n	801e52c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e514:	4620      	mov	r0, r4
 801e516:	f009 fa1c 	bl	8027952 <__cxa_guard_acquire>
 801e51a:	b138      	cbz	r0, 801e52c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e51c:	4620      	mov	r0, r4
 801e51e:	f009 fa24 	bl	802796a <__cxa_guard_release>
 801e522:	4a05      	ldr	r2, [pc, #20]	; (801e538 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e524:	4905      	ldr	r1, [pc, #20]	; (801e53c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e526:	4806      	ldr	r0, [pc, #24]	; (801e540 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e528:	f009 fa0c 	bl	8027944 <__aeabi_atexit>
 801e52c:	4b04      	ldr	r3, [pc, #16]	; (801e540 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e52e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e530:	bd38      	pop	{r3, r4, r5, pc}
 801e532:	bf00      	nop
 801e534:	20013864 	.word	0x20013864
 801e538:	20000000 	.word	0x20000000
 801e53c:	0801ab8d 	.word	0x0801ab8d
 801e540:	20000090 	.word	0x20000090

0801e544 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e544:	b570      	push	{r4, r5, r6, lr}
 801e546:	4d0d      	ldr	r5, [pc, #52]	; (801e57c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e548:	4c0d      	ldr	r4, [pc, #52]	; (801e580 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e54a:	782b      	ldrb	r3, [r5, #0]
 801e54c:	f3bf 8f5b 	dmb	ish
 801e550:	f013 0f01 	tst.w	r3, #1
 801e554:	4606      	mov	r6, r0
 801e556:	d10d      	bne.n	801e574 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e558:	4628      	mov	r0, r5
 801e55a:	f009 f9fa 	bl	8027952 <__cxa_guard_acquire>
 801e55e:	b148      	cbz	r0, 801e574 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e560:	4b08      	ldr	r3, [pc, #32]	; (801e584 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e562:	6023      	str	r3, [r4, #0]
 801e564:	4628      	mov	r0, r5
 801e566:	f009 fa00 	bl	802796a <__cxa_guard_release>
 801e56a:	4a07      	ldr	r2, [pc, #28]	; (801e588 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e56c:	4907      	ldr	r1, [pc, #28]	; (801e58c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e56e:	4620      	mov	r0, r4
 801e570:	f009 f9e8 	bl	8027944 <__aeabi_atexit>
 801e574:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e578:	bd70      	pop	{r4, r5, r6, pc}
 801e57a:	bf00      	nop
 801e57c:	20013868 	.word	0x20013868
 801e580:	200138dc 	.word	0x200138dc
 801e584:	0802cf00 	.word	0x0802cf00
 801e588:	20000000 	.word	0x20000000
 801e58c:	0801ab8b 	.word	0x0801ab8b

0801e590 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e590:	b510      	push	{r4, lr}
 801e592:	4604      	mov	r4, r0
 801e594:	f7ff ff96 	bl	801e4c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e598:	4620      	mov	r0, r4
 801e59a:	f7ff ffb3 	bl	801e504 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e59e:	4620      	mov	r0, r4
 801e5a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5a4:	f7ff bfce 	b.w	801e544 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e5a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5ac:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e5b0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e5b4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e5b8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e5bc:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e5c0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e5c4:	8808      	ldrh	r0, [r1, #0]
 801e5c6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e5ca:	2d00      	cmp	r5, #0
 801e5cc:	eb02 0a0c 	add.w	sl, r2, ip
 801e5d0:	f2c0 80b0 	blt.w	801e734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e5d4:	45ab      	cmp	fp, r5
 801e5d6:	f340 80ad 	ble.w	801e734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e5da:	2c00      	cmp	r4, #0
 801e5dc:	f2c0 80a8 	blt.w	801e730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e5e0:	45a6      	cmp	lr, r4
 801e5e2:	f340 80a5 	ble.w	801e730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e5e6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e5ea:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e5ee:	1c62      	adds	r2, r4, #1
 801e5f0:	f100 80a3 	bmi.w	801e73a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e5f4:	4596      	cmp	lr, r2
 801e5f6:	f340 80a0 	ble.w	801e73a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e5fa:	f1b9 0f00 	cmp.w	r9, #0
 801e5fe:	f000 809c 	beq.w	801e73a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e602:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e606:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e60a:	3501      	adds	r5, #1
 801e60c:	f100 8099 	bmi.w	801e742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e610:	45ab      	cmp	fp, r5
 801e612:	f340 8096 	ble.w	801e742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e616:	2f00      	cmp	r7, #0
 801e618:	f000 8093 	beq.w	801e742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e61c:	2c00      	cmp	r4, #0
 801e61e:	f2c0 808e 	blt.w	801e73e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e622:	45a6      	cmp	lr, r4
 801e624:	f340 808b 	ble.w	801e73e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e628:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e62c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e630:	3401      	adds	r4, #1
 801e632:	f100 8089 	bmi.w	801e748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e636:	45a6      	cmp	lr, r4
 801e638:	f340 8086 	ble.w	801e748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e63c:	f1b9 0f00 	cmp.w	r9, #0
 801e640:	f000 8082 	beq.w	801e748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e644:	44d6      	add	lr, sl
 801e646:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e64a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e64e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e652:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e656:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e65a:	fb19 fe07 	smulbb	lr, r9, r7
 801e65e:	ea44 0808 	orr.w	r8, r4, r8
 801e662:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e666:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e66a:	f1c7 0210 	rsb	r2, r7, #16
 801e66e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e672:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e676:	ea44 0c0c 	orr.w	ip, r4, ip
 801e67a:	eba2 0209 	sub.w	r2, r2, r9
 801e67e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e682:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e686:	fb04 f40c 	mul.w	r4, r4, ip
 801e68a:	fb02 4808 	mla	r8, r2, r8, r4
 801e68e:	041a      	lsls	r2, r3, #16
 801e690:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e694:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e698:	4313      	orrs	r3, r2
 801e69a:	042a      	lsls	r2, r5, #16
 801e69c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e6a0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e6a4:	fb0e 8303 	mla	r3, lr, r3, r8
 801e6a8:	432a      	orrs	r2, r5
 801e6aa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e6ae:	fb07 3202 	mla	r2, r7, r2, r3
 801e6b2:	0d53      	lsrs	r3, r2, #21
 801e6b4:	0952      	lsrs	r2, r2, #5
 801e6b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e6ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e6be:	431a      	orrs	r2, r3
 801e6c0:	b293      	uxth	r3, r2
 801e6c2:	b2b4      	uxth	r4, r6
 801e6c4:	1202      	asrs	r2, r0, #8
 801e6c6:	43f6      	mvns	r6, r6
 801e6c8:	b2f6      	uxtb	r6, r6
 801e6ca:	121d      	asrs	r5, r3, #8
 801e6cc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e6d0:	fb12 f206 	smulbb	r2, r2, r6
 801e6d4:	10c7      	asrs	r7, r0, #3
 801e6d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e6da:	00c0      	lsls	r0, r0, #3
 801e6dc:	fb05 2504 	mla	r5, r5, r4, r2
 801e6e0:	b2c0      	uxtb	r0, r0
 801e6e2:	10da      	asrs	r2, r3, #3
 801e6e4:	00db      	lsls	r3, r3, #3
 801e6e6:	b2db      	uxtb	r3, r3
 801e6e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e6ec:	fb10 f006 	smulbb	r0, r0, r6
 801e6f0:	b2ad      	uxth	r5, r5
 801e6f2:	fb03 0004 	mla	r0, r3, r4, r0
 801e6f6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e6fa:	fb17 f706 	smulbb	r7, r7, r6
 801e6fe:	b280      	uxth	r0, r0
 801e700:	1c6b      	adds	r3, r5, #1
 801e702:	fb02 7204 	mla	r2, r2, r4, r7
 801e706:	b292      	uxth	r2, r2
 801e708:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e70c:	1c43      	adds	r3, r0, #1
 801e70e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e712:	1c50      	adds	r0, r2, #1
 801e714:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e718:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e71c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e720:	0952      	lsrs	r2, r2, #5
 801e722:	432b      	orrs	r3, r5
 801e724:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e728:	4313      	orrs	r3, r2
 801e72a:	800b      	strh	r3, [r1, #0]
 801e72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e730:	4680      	mov	r8, r0
 801e732:	e75c      	b.n	801e5ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e734:	4684      	mov	ip, r0
 801e736:	4680      	mov	r8, r0
 801e738:	e767      	b.n	801e60a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e73a:	4684      	mov	ip, r0
 801e73c:	e765      	b.n	801e60a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e73e:	4605      	mov	r5, r0
 801e740:	e776      	b.n	801e630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e742:	4603      	mov	r3, r0
 801e744:	4605      	mov	r5, r0
 801e746:	e782      	b.n	801e64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e748:	4603      	mov	r3, r0
 801e74a:	e780      	b.n	801e64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e750:	b099      	sub	sp, #100	; 0x64
 801e752:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e756:	9215      	str	r2, [sp, #84]	; 0x54
 801e758:	9309      	str	r3, [sp, #36]	; 0x24
 801e75a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e75c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e760:	930d      	str	r3, [sp, #52]	; 0x34
 801e762:	910c      	str	r1, [sp, #48]	; 0x30
 801e764:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e768:	9016      	str	r0, [sp, #88]	; 0x58
 801e76a:	6850      	ldr	r0, [r2, #4]
 801e76c:	6812      	ldr	r2, [r2, #0]
 801e76e:	fb00 1303 	mla	r3, r0, r3, r1
 801e772:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e776:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e778:	681b      	ldr	r3, [r3, #0]
 801e77a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e77c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e77e:	685e      	ldr	r6, [r3, #4]
 801e780:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e782:	43db      	mvns	r3, r3
 801e784:	b2db      	uxtb	r3, r3
 801e786:	3604      	adds	r6, #4
 801e788:	930a      	str	r3, [sp, #40]	; 0x28
 801e78a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e78c:	2b00      	cmp	r3, #0
 801e78e:	dc03      	bgt.n	801e798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e790:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e792:	2b00      	cmp	r3, #0
 801e794:	f340 8225 	ble.w	801ebe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e798:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e79a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e79e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e7a2:	1e48      	subs	r0, r1, #1
 801e7a4:	1e57      	subs	r7, r2, #1
 801e7a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7a8:	2b00      	cmp	r3, #0
 801e7aa:	f340 80e3 	ble.w	801e974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e7ae:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e7b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e7b6:	d406      	bmi.n	801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e7b8:	4584      	cmp	ip, r0
 801e7ba:	da04      	bge.n	801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e7bc:	2b00      	cmp	r3, #0
 801e7be:	db02      	blt.n	801e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e7c0:	42bb      	cmp	r3, r7
 801e7c2:	f2c0 80d8 	blt.w	801e976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e7c6:	f11c 0c01 	adds.w	ip, ip, #1
 801e7ca:	f100 80c9 	bmi.w	801e960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e7ce:	4561      	cmp	r1, ip
 801e7d0:	f2c0 80c6 	blt.w	801e960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e7d4:	3301      	adds	r3, #1
 801e7d6:	f100 80c3 	bmi.w	801e960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e7da:	429a      	cmp	r2, r3
 801e7dc:	f2c0 80c0 	blt.w	801e960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e7e0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e7e4:	4647      	mov	r7, r8
 801e7e6:	f1bb 0f00 	cmp.w	fp, #0
 801e7ea:	f340 80e3 	ble.w	801e9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e7ee:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e7f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e7f2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e7f6:	689b      	ldr	r3, [r3, #8]
 801e7f8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e7fc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e800:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e804:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e808:	f100 8121 	bmi.w	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e80c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e810:	454a      	cmp	r2, r9
 801e812:	f280 811c 	bge.w	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e816:	f1bc 0f00 	cmp.w	ip, #0
 801e81a:	f2c0 8118 	blt.w	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e81e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e822:	45cc      	cmp	ip, r9
 801e824:	f280 8113 	bge.w	801ea4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e828:	b21b      	sxth	r3, r3
 801e82a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e82e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e830:	eb04 0902 	add.w	r9, r4, r2
 801e834:	5ca2      	ldrb	r2, [r4, r2]
 801e836:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e83a:	2800      	cmp	r0, #0
 801e83c:	f000 80fe 	beq.w	801ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e840:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e844:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e848:	9211      	str	r2, [sp, #68]	; 0x44
 801e84a:	b151      	cbz	r1, 801e862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e84c:	eb09 0203 	add.w	r2, r9, r3
 801e850:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e854:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e858:	930f      	str	r3, [sp, #60]	; 0x3c
 801e85a:	7853      	ldrb	r3, [r2, #1]
 801e85c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e860:	9312      	str	r3, [sp, #72]	; 0x48
 801e862:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e864:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e866:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e86a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e86e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e872:	ea4c 0c03 	orr.w	ip, ip, r3
 801e876:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e878:	041b      	lsls	r3, r3, #16
 801e87a:	fb10 f201 	smulbb	r2, r0, r1
 801e87e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e882:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e886:	10d2      	asrs	r2, r2, #3
 801e888:	4323      	orrs	r3, r4
 801e88a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e88e:	4353      	muls	r3, r2
 801e890:	fb09 330c 	mla	r3, r9, ip, r3
 801e894:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e898:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e89c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e8a0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e8a4:	f1c1 0c10 	rsb	ip, r1, #16
 801e8a8:	ebac 0c00 	sub.w	ip, ip, r0
 801e8ac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e8b0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e8b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e8b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e8b8:	0418      	lsls	r0, r3, #16
 801e8ba:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e8be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e8c2:	4318      	orrs	r0, r3
 801e8c4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e8c8:	fb02 c200 	mla	r2, r2, r0, ip
 801e8cc:	0d53      	lsrs	r3, r2, #21
 801e8ce:	0952      	lsrs	r2, r2, #5
 801e8d0:	8838      	ldrh	r0, [r7, #0]
 801e8d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e8d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e8da:	431a      	orrs	r2, r3
 801e8dc:	b292      	uxth	r2, r2
 801e8de:	1201      	asrs	r1, r0, #8
 801e8e0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e8e4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e8e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e8ec:	fb11 f104 	smulbb	r1, r1, r4
 801e8f0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e8f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e8f8:	00c0      	lsls	r0, r0, #3
 801e8fa:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e8fe:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e902:	10d1      	asrs	r1, r2, #3
 801e904:	b2c0      	uxtb	r0, r0
 801e906:	00d2      	lsls	r2, r2, #3
 801e908:	b2d2      	uxtb	r2, r2
 801e90a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e90e:	fb1e fe04 	smulbb	lr, lr, r4
 801e912:	fb10 f004 	smulbb	r0, r0, r4
 801e916:	fa1f fc8c 	uxth.w	ip, ip
 801e91a:	fb01 e103 	mla	r1, r1, r3, lr
 801e91e:	fb02 0303 	mla	r3, r2, r3, r0
 801e922:	b29a      	uxth	r2, r3
 801e924:	f10c 0301 	add.w	r3, ip, #1
 801e928:	b289      	uxth	r1, r1
 801e92a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e92e:	1c53      	adds	r3, r2, #1
 801e930:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e934:	1c4a      	adds	r2, r1, #1
 801e936:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e93a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e93e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e942:	0949      	lsrs	r1, r1, #5
 801e944:	ea43 030c 	orr.w	r3, r3, ip
 801e948:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e94c:	430b      	orrs	r3, r1
 801e94e:	803b      	strh	r3, [r7, #0]
 801e950:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e952:	449a      	add	sl, r3
 801e954:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e956:	3702      	adds	r7, #2
 801e958:	441d      	add	r5, r3
 801e95a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e95e:	e742      	b.n	801e7e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e960:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e962:	449a      	add	sl, r3
 801e964:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e966:	441d      	add	r5, r3
 801e968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e96a:	3b01      	subs	r3, #1
 801e96c:	9309      	str	r3, [sp, #36]	; 0x24
 801e96e:	f108 0802 	add.w	r8, r8, #2
 801e972:	e718      	b.n	801e7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e974:	d023      	beq.n	801e9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e976:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e978:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e97a:	3b01      	subs	r3, #1
 801e97c:	fb00 a003 	mla	r0, r0, r3, sl
 801e980:	1400      	asrs	r0, r0, #16
 801e982:	f53f af2d 	bmi.w	801e7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e986:	3901      	subs	r1, #1
 801e988:	4288      	cmp	r0, r1
 801e98a:	f6bf af29 	bge.w	801e7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e98e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e990:	fb01 5303 	mla	r3, r1, r3, r5
 801e994:	141b      	asrs	r3, r3, #16
 801e996:	f53f af23 	bmi.w	801e7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e99a:	3a01      	subs	r2, #1
 801e99c:	4293      	cmp	r3, r2
 801e99e:	f6bf af1f 	bge.w	801e7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e9a2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e9a6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e9aa:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e9ae:	f1be 0f00 	cmp.w	lr, #0
 801e9b2:	dc6c      	bgt.n	801ea8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e9b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e9ba:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e9be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e9c0:	2b00      	cmp	r3, #0
 801e9c2:	f340 810e 	ble.w	801ebe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e9c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e9ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e9ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e9d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e9d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e9d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e9dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e9e0:	eef0 6a62 	vmov.f32	s13, s5
 801e9e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e9e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e9f0:	ee16 aa90 	vmov	sl, s13
 801e9f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e9f8:	eef0 6a43 	vmov.f32	s13, s6
 801e9fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea00:	ee12 2a90 	vmov	r2, s5
 801ea04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea08:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea0c:	ee13 2a10 	vmov	r2, s6
 801ea10:	9325      	str	r3, [sp, #148]	; 0x94
 801ea12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ea14:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea18:	9326      	str	r3, [sp, #152]	; 0x98
 801ea1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ea1c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ea1e:	3b01      	subs	r3, #1
 801ea20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea24:	930c      	str	r3, [sp, #48]	; 0x30
 801ea26:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ea28:	bf08      	it	eq
 801ea2a:	4613      	moveq	r3, r2
 801ea2c:	ee16 5a90 	vmov	r5, s13
 801ea30:	9309      	str	r3, [sp, #36]	; 0x24
 801ea32:	eeb0 3a67 	vmov.f32	s6, s15
 801ea36:	eef0 2a47 	vmov.f32	s5, s14
 801ea3a:	e6a6      	b.n	801e78a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ea3c:	2900      	cmp	r1, #0
 801ea3e:	f43f af10 	beq.w	801e862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ea42:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ea46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea4a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ea4c:	e709      	b.n	801e862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ea4e:	f112 0901 	adds.w	r9, r2, #1
 801ea52:	f53f af7d 	bmi.w	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ea56:	454b      	cmp	r3, r9
 801ea58:	f6ff af7a 	blt.w	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ea5c:	f11c 0901 	adds.w	r9, ip, #1
 801ea60:	f53f af76 	bmi.w	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ea64:	45ce      	cmp	lr, r9
 801ea66:	f6ff af73 	blt.w	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ea6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ea6c:	9202      	str	r2, [sp, #8]
 801ea6e:	b21b      	sxth	r3, r3
 801ea70:	fa0f f28e 	sxth.w	r2, lr
 801ea74:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ea78:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ea7c:	9201      	str	r2, [sp, #4]
 801ea7e:	9300      	str	r3, [sp, #0]
 801ea80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ea82:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ea84:	4633      	mov	r3, r6
 801ea86:	4639      	mov	r1, r7
 801ea88:	f7ff fd8e 	bl	801e5a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ea8c:	e760      	b.n	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ea8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ea90:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ea92:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ea96:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ea9a:	1429      	asrs	r1, r5, #16
 801ea9c:	fb03 2101 	mla	r1, r3, r1, r2
 801eaa0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eaa2:	440a      	add	r2, r1
 801eaa4:	5c61      	ldrb	r1, [r4, r1]
 801eaa6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801eaaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801eaae:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801eab2:	f1bc 0f00 	cmp.w	ip, #0
 801eab6:	f000 808c 	beq.w	801ebd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801eaba:	7857      	ldrb	r7, [r2, #1]
 801eabc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801eac0:	9413      	str	r4, [sp, #76]	; 0x4c
 801eac2:	b140      	cbz	r0, 801ead6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eac4:	18d7      	adds	r7, r2, r3
 801eac6:	5cd3      	ldrb	r3, [r2, r3]
 801eac8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eacc:	9310      	str	r3, [sp, #64]	; 0x40
 801eace:	787b      	ldrb	r3, [r7, #1]
 801ead0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ead4:	9314      	str	r3, [sp, #80]	; 0x50
 801ead6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ead8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eada:	fb1c f200 	smulbb	r2, ip, r0
 801eade:	041f      	lsls	r7, r3, #16
 801eae0:	10d2      	asrs	r2, r2, #3
 801eae2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eae6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801eaea:	431f      	orrs	r7, r3
 801eaec:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801eaf0:	9317      	str	r3, [sp, #92]	; 0x5c
 801eaf2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eaf4:	041b      	lsls	r3, r3, #16
 801eaf6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eafa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eafe:	ea43 030b 	orr.w	r3, r3, fp
 801eb02:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801eb04:	4353      	muls	r3, r2
 801eb06:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eb0a:	fb04 3707 	mla	r7, r4, r7, r3
 801eb0e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801eb12:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801eb16:	ea43 0b01 	orr.w	fp, r3, r1
 801eb1a:	f1c0 0110 	rsb	r1, r0, #16
 801eb1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eb20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801eb22:	eba1 0c0c 	sub.w	ip, r1, ip
 801eb26:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eb2a:	fb0c 770b 	mla	r7, ip, fp, r7
 801eb2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eb32:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801eb36:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801eb3a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801eb3e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801eb42:	fb02 770c 	mla	r7, r2, ip, r7
 801eb46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eb48:	0d79      	lsrs	r1, r7, #21
 801eb4a:	097f      	lsrs	r7, r7, #5
 801eb4c:	8812      	ldrh	r2, [r2, #0]
 801eb4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eb52:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801eb56:	430f      	orrs	r7, r1
 801eb58:	b2bb      	uxth	r3, r7
 801eb5a:	1211      	asrs	r1, r2, #8
 801eb5c:	1218      	asrs	r0, r3, #8
 801eb5e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801eb62:	fb11 f104 	smulbb	r1, r1, r4
 801eb66:	10d7      	asrs	r7, r2, #3
 801eb68:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eb6c:	00d2      	lsls	r2, r2, #3
 801eb6e:	fb00 1009 	mla	r0, r0, r9, r1
 801eb72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eb76:	10d9      	asrs	r1, r3, #3
 801eb78:	b2d2      	uxtb	r2, r2
 801eb7a:	00db      	lsls	r3, r3, #3
 801eb7c:	fb17 f704 	smulbb	r7, r7, r4
 801eb80:	fb12 f204 	smulbb	r2, r2, r4
 801eb84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eb88:	b2db      	uxtb	r3, r3
 801eb8a:	b280      	uxth	r0, r0
 801eb8c:	fb01 7109 	mla	r1, r1, r9, r7
 801eb90:	fb03 2309 	mla	r3, r3, r9, r2
 801eb94:	b29b      	uxth	r3, r3
 801eb96:	b289      	uxth	r1, r1
 801eb98:	1c42      	adds	r2, r0, #1
 801eb9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eb9e:	1c4f      	adds	r7, r1, #1
 801eba0:	1c5a      	adds	r2, r3, #1
 801eba2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eba6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ebaa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ebae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ebb2:	0949      	lsrs	r1, r1, #5
 801ebb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ebb6:	4310      	orrs	r0, r2
 801ebb8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ebbc:	4308      	orrs	r0, r1
 801ebbe:	f823 0b02 	strh.w	r0, [r3], #2
 801ebc2:	930e      	str	r3, [sp, #56]	; 0x38
 801ebc4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ebc6:	449a      	add	sl, r3
 801ebc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ebca:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ebce:	441d      	add	r5, r3
 801ebd0:	e6ed      	b.n	801e9ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ebd2:	2800      	cmp	r0, #0
 801ebd4:	f43f af7f 	beq.w	801ead6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ebd8:	5cd3      	ldrb	r3, [r2, r3]
 801ebda:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ebde:	9310      	str	r3, [sp, #64]	; 0x40
 801ebe0:	e779      	b.n	801ead6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ebe2:	b019      	add	sp, #100	; 0x64
 801ebe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ebe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ebe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ebec:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ebf0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ebf4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ebf8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ebfc:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ec00:	8808      	ldrh	r0, [r1, #0]
 801ec02:	fb08 470e 	mla	r7, r8, lr, r4
 801ec06:	f1b8 0f00 	cmp.w	r8, #0
 801ec0a:	eb02 0907 	add.w	r9, r2, r7
 801ec0e:	db67      	blt.n	801ece0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ec10:	45c2      	cmp	sl, r8
 801ec12:	dd65      	ble.n	801ece0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ec14:	2c00      	cmp	r4, #0
 801ec16:	db61      	blt.n	801ecdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ec18:	45a6      	cmp	lr, r4
 801ec1a:	dd5f      	ble.n	801ecdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ec1c:	5dd2      	ldrb	r2, [r2, r7]
 801ec1e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ec22:	1c62      	adds	r2, r4, #1
 801ec24:	d45f      	bmi.n	801ece6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ec26:	4596      	cmp	lr, r2
 801ec28:	dd5d      	ble.n	801ece6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ec2a:	2d00      	cmp	r5, #0
 801ec2c:	d05b      	beq.n	801ece6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ec2e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ec32:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ec36:	f118 0801 	adds.w	r8, r8, #1
 801ec3a:	d458      	bmi.n	801ecee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ec3c:	45c2      	cmp	sl, r8
 801ec3e:	dd56      	ble.n	801ecee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ec40:	2e00      	cmp	r6, #0
 801ec42:	d054      	beq.n	801ecee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ec44:	2c00      	cmp	r4, #0
 801ec46:	db50      	blt.n	801ecea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ec48:	45a6      	cmp	lr, r4
 801ec4a:	dd4e      	ble.n	801ecea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ec4c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ec50:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ec54:	3401      	adds	r4, #1
 801ec56:	d407      	bmi.n	801ec68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ec58:	45a6      	cmp	lr, r4
 801ec5a:	dd05      	ble.n	801ec68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ec5c:	b125      	cbz	r5, 801ec68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ec5e:	44ce      	add	lr, r9
 801ec60:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ec64:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ec68:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ec6c:	fb15 f406 	smulbb	r4, r5, r6
 801ec70:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec74:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ec78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ec7c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ec80:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec84:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ec88:	f1c6 0310 	rsb	r3, r6, #16
 801ec8c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ec90:	1b5b      	subs	r3, r3, r5
 801ec92:	ea4e 0707 	orr.w	r7, lr, r7
 801ec96:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ec9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ec9e:	437d      	muls	r5, r7
 801eca0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801eca4:	0403      	lsls	r3, r0, #16
 801eca6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ecaa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ecae:	4318      	orrs	r0, r3
 801ecb0:	0413      	lsls	r3, r2, #16
 801ecb2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ecb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ecba:	4313      	orrs	r3, r2
 801ecbc:	fb04 c000 	mla	r0, r4, r0, ip
 801ecc0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ecc4:	fb06 0003 	mla	r0, r6, r3, r0
 801ecc8:	0d43      	lsrs	r3, r0, #21
 801ecca:	0940      	lsrs	r0, r0, #5
 801eccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecd0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ecd4:	4318      	orrs	r0, r3
 801ecd6:	8008      	strh	r0, [r1, #0]
 801ecd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ecdc:	4684      	mov	ip, r0
 801ecde:	e7a0      	b.n	801ec22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ece0:	4607      	mov	r7, r0
 801ece2:	4684      	mov	ip, r0
 801ece4:	e7a7      	b.n	801ec36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ece6:	4607      	mov	r7, r0
 801ece8:	e7a5      	b.n	801ec36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ecea:	4602      	mov	r2, r0
 801ecec:	e7b2      	b.n	801ec54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ecee:	4602      	mov	r2, r0
 801ecf0:	e7ba      	b.n	801ec68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ecf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ecf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecf6:	b093      	sub	sp, #76	; 0x4c
 801ecf8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ecfc:	920f      	str	r2, [sp, #60]	; 0x3c
 801ecfe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ed00:	9108      	str	r1, [sp, #32]
 801ed02:	9306      	str	r3, [sp, #24]
 801ed04:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ed08:	9010      	str	r0, [sp, #64]	; 0x40
 801ed0a:	6850      	ldr	r0, [r2, #4]
 801ed0c:	6812      	ldr	r2, [r2, #0]
 801ed0e:	fb00 1303 	mla	r3, r0, r3, r1
 801ed12:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ed16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed18:	681b      	ldr	r3, [r3, #0]
 801ed1a:	9307      	str	r3, [sp, #28]
 801ed1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed1e:	685f      	ldr	r7, [r3, #4]
 801ed20:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ed24:	3704      	adds	r7, #4
 801ed26:	9b08      	ldr	r3, [sp, #32]
 801ed28:	2b00      	cmp	r3, #0
 801ed2a:	dc03      	bgt.n	801ed34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ed2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ed2e:	2b00      	cmp	r3, #0
 801ed30:	f340 81b2 	ble.w	801f098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ed34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ed3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ed3e:	1e48      	subs	r0, r1, #1
 801ed40:	f102 3cff 	add.w	ip, r2, #4294967295
 801ed44:	9b06      	ldr	r3, [sp, #24]
 801ed46:	2b00      	cmp	r3, #0
 801ed48:	f340 80a9 	ble.w	801ee9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ed4c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ed50:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ed54:	d406      	bmi.n	801ed64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ed56:	4586      	cmp	lr, r0
 801ed58:	da04      	bge.n	801ed64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ed5a:	2b00      	cmp	r3, #0
 801ed5c:	db02      	blt.n	801ed64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ed5e:	4563      	cmp	r3, ip
 801ed60:	f2c0 809e 	blt.w	801eea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ed64:	f11e 0e01 	adds.w	lr, lr, #1
 801ed68:	f100 808f 	bmi.w	801ee8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed6c:	4571      	cmp	r1, lr
 801ed6e:	f2c0 808c 	blt.w	801ee8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed72:	3301      	adds	r3, #1
 801ed74:	f100 8089 	bmi.w	801ee8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed78:	429a      	cmp	r2, r3
 801ed7a:	f2c0 8086 	blt.w	801ee8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ed7e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ed82:	46c8      	mov	r8, r9
 801ed84:	f1bb 0f00 	cmp.w	fp, #0
 801ed88:	f340 80a6 	ble.w	801eed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ed8c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ed8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed90:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ed94:	689b      	ldr	r3, [r3, #8]
 801ed96:	1422      	asrs	r2, r4, #16
 801ed98:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ed9c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eda0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801eda4:	f100 80e3 	bmi.w	801ef6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eda8:	f103 3aff 	add.w	sl, r3, #4294967295
 801edac:	4552      	cmp	r2, sl
 801edae:	f280 80de 	bge.w	801ef6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801edb2:	f1bc 0f00 	cmp.w	ip, #0
 801edb6:	f2c0 80da 	blt.w	801ef6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801edba:	f10e 3aff 	add.w	sl, lr, #4294967295
 801edbe:	45d4      	cmp	ip, sl
 801edc0:	f280 80d5 	bge.w	801ef6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801edc4:	b21b      	sxth	r3, r3
 801edc6:	fb0c 2203 	mla	r2, ip, r3, r2
 801edca:	9d07      	ldr	r5, [sp, #28]
 801edcc:	eb05 0a02 	add.w	sl, r5, r2
 801edd0:	5caa      	ldrb	r2, [r5, r2]
 801edd2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801edd6:	2800      	cmp	r0, #0
 801edd8:	f000 80c0 	beq.w	801ef5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801eddc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ede0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ede4:	920b      	str	r2, [sp, #44]	; 0x2c
 801ede6:	b151      	cbz	r1, 801edfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ede8:	eb0a 0203 	add.w	r2, sl, r3
 801edec:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801edf0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801edf4:	9309      	str	r3, [sp, #36]	; 0x24
 801edf6:	7853      	ldrb	r3, [r2, #1]
 801edf8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801edfc:	930c      	str	r3, [sp, #48]	; 0x30
 801edfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ee02:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ee06:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ee0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ee0e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ee12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee14:	041b      	lsls	r3, r3, #16
 801ee16:	fb10 f201 	smulbb	r2, r0, r1
 801ee1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ee1e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ee22:	10d2      	asrs	r2, r2, #3
 801ee24:	432b      	orrs	r3, r5
 801ee26:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ee2a:	4353      	muls	r3, r2
 801ee2c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ee30:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ee34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ee38:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ee3c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ee40:	f1c1 0c10 	rsb	ip, r1, #16
 801ee44:	ebac 0c00 	sub.w	ip, ip, r0
 801ee48:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ee4c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ee50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee52:	0418      	lsls	r0, r3, #16
 801ee54:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ee58:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ee5c:	4318      	orrs	r0, r3
 801ee5e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ee62:	fb02 c200 	mla	r2, r2, r0, ip
 801ee66:	0d53      	lsrs	r3, r2, #21
 801ee68:	0952      	lsrs	r2, r2, #5
 801ee6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ee72:	431a      	orrs	r2, r3
 801ee74:	f8a8 2000 	strh.w	r2, [r8]
 801ee78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ee7a:	441c      	add	r4, r3
 801ee7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee7e:	f108 0802 	add.w	r8, r8, #2
 801ee82:	441e      	add	r6, r3
 801ee84:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee88:	e77c      	b.n	801ed84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ee8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ee8c:	441c      	add	r4, r3
 801ee8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee90:	441e      	add	r6, r3
 801ee92:	9b06      	ldr	r3, [sp, #24]
 801ee94:	3b01      	subs	r3, #1
 801ee96:	9306      	str	r3, [sp, #24]
 801ee98:	f109 0902 	add.w	r9, r9, #2
 801ee9c:	e752      	b.n	801ed44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ee9e:	d020      	beq.n	801eee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801eea0:	9b06      	ldr	r3, [sp, #24]
 801eea2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801eea4:	3b01      	subs	r3, #1
 801eea6:	fb00 4003 	mla	r0, r0, r3, r4
 801eeaa:	1400      	asrs	r0, r0, #16
 801eeac:	f53f af67 	bmi.w	801ed7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eeb0:	3901      	subs	r1, #1
 801eeb2:	4288      	cmp	r0, r1
 801eeb4:	f6bf af63 	bge.w	801ed7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eeb8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801eeba:	fb01 6303 	mla	r3, r1, r3, r6
 801eebe:	141b      	asrs	r3, r3, #16
 801eec0:	f53f af5d 	bmi.w	801ed7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eec4:	3a01      	subs	r2, #1
 801eec6:	4293      	cmp	r3, r2
 801eec8:	f6bf af59 	bge.w	801ed7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eecc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801eed0:	46ca      	mov	sl, r9
 801eed2:	f1b8 0f00 	cmp.w	r8, #0
 801eed6:	dc67      	bgt.n	801efa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801eed8:	9b06      	ldr	r3, [sp, #24]
 801eeda:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eede:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801eee2:	9b08      	ldr	r3, [sp, #32]
 801eee4:	2b00      	cmp	r3, #0
 801eee6:	f340 80d7 	ble.w	801f098 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eeea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eeee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eef2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eef6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eef8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eefc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef00:	eeb0 6a62 	vmov.f32	s12, s5
 801ef04:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ef08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ef10:	ee16 4a10 	vmov	r4, s12
 801ef14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ef18:	eeb0 6a43 	vmov.f32	s12, s6
 801ef1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ef20:	ee12 2a90 	vmov	r2, s5
 801ef24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ef28:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef2c:	ee13 2a10 	vmov	r2, s6
 801ef30:	931f      	str	r3, [sp, #124]	; 0x7c
 801ef32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ef34:	fb92 f3f3 	sdiv	r3, r2, r3
 801ef38:	9320      	str	r3, [sp, #128]	; 0x80
 801ef3a:	9b08      	ldr	r3, [sp, #32]
 801ef3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ef3e:	3b01      	subs	r3, #1
 801ef40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef44:	9308      	str	r3, [sp, #32]
 801ef46:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ef48:	bf08      	it	eq
 801ef4a:	4613      	moveq	r3, r2
 801ef4c:	ee16 6a10 	vmov	r6, s12
 801ef50:	9306      	str	r3, [sp, #24]
 801ef52:	eeb0 3a67 	vmov.f32	s6, s15
 801ef56:	eef0 2a47 	vmov.f32	s5, s14
 801ef5a:	e6e4      	b.n	801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ef5c:	2900      	cmp	r1, #0
 801ef5e:	f43f af4e 	beq.w	801edfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ef62:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ef66:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef6a:	9309      	str	r3, [sp, #36]	; 0x24
 801ef6c:	e747      	b.n	801edfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ef6e:	f112 0a01 	adds.w	sl, r2, #1
 801ef72:	d481      	bmi.n	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef74:	4553      	cmp	r3, sl
 801ef76:	f6ff af7f 	blt.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef7a:	f11c 0a01 	adds.w	sl, ip, #1
 801ef7e:	f53f af7b 	bmi.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef82:	45d6      	cmp	lr, sl
 801ef84:	f6ff af78 	blt.w	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ef88:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ef8c:	b21b      	sxth	r3, r3
 801ef8e:	fa0f f28e 	sxth.w	r2, lr
 801ef92:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ef96:	9201      	str	r2, [sp, #4]
 801ef98:	9300      	str	r3, [sp, #0]
 801ef9a:	9a07      	ldr	r2, [sp, #28]
 801ef9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ef9e:	463b      	mov	r3, r7
 801efa0:	4641      	mov	r1, r8
 801efa2:	f7ff fe21 	bl	801ebe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801efa6:	e767      	b.n	801ee78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801efa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efaa:	9d07      	ldr	r5, [sp, #28]
 801efac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801efb0:	1422      	asrs	r2, r4, #16
 801efb2:	1431      	asrs	r1, r6, #16
 801efb4:	fb03 2101 	mla	r1, r3, r1, r2
 801efb8:	9a07      	ldr	r2, [sp, #28]
 801efba:	440a      	add	r2, r1
 801efbc:	5c69      	ldrb	r1, [r5, r1]
 801efbe:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801efc2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801efc6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801efca:	f1be 0f00 	cmp.w	lr, #0
 801efce:	d05c      	beq.n	801f08a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801efd0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801efd4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801efd8:	950d      	str	r5, [sp, #52]	; 0x34
 801efda:	b150      	cbz	r0, 801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801efdc:	eb02 0c03 	add.w	ip, r2, r3
 801efe0:	5cd3      	ldrb	r3, [r2, r3]
 801efe2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801efe6:	930a      	str	r3, [sp, #40]	; 0x28
 801efe8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801efec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eff0:	930e      	str	r3, [sp, #56]	; 0x38
 801eff2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eff4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eff6:	fb1e f200 	smulbb	r2, lr, r0
 801effa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801effe:	10d2      	asrs	r2, r2, #3
 801f000:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f004:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f008:	ea4c 0c03 	orr.w	ip, ip, r3
 801f00c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f010:	9311      	str	r3, [sp, #68]	; 0x44
 801f012:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f014:	041b      	lsls	r3, r3, #16
 801f016:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f01a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f01e:	ea43 030b 	orr.w	r3, r3, fp
 801f022:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f024:	4353      	muls	r3, r2
 801f026:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f02a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f02e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f032:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f036:	ea43 0b01 	orr.w	fp, r3, r1
 801f03a:	f1c0 0110 	rsb	r1, r0, #16
 801f03e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f040:	eba1 0e0e 	sub.w	lr, r1, lr
 801f044:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f048:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f04c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f050:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f054:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f058:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f05c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f060:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f064:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f068:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f06c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f070:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f074:	ea43 0c0c 	orr.w	ip, r3, ip
 801f078:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f07a:	f82a cb02 	strh.w	ip, [sl], #2
 801f07e:	441c      	add	r4, r3
 801f080:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f082:	f108 38ff 	add.w	r8, r8, #4294967295
 801f086:	441e      	add	r6, r3
 801f088:	e723      	b.n	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f08a:	2800      	cmp	r0, #0
 801f08c:	d0b1      	beq.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f08e:	5cd3      	ldrb	r3, [r2, r3]
 801f090:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f094:	930a      	str	r3, [sp, #40]	; 0x28
 801f096:	e7ac      	b.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f098:	b013      	add	sp, #76	; 0x4c
 801f09a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f09e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f09e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0a2:	880d      	ldrh	r5, [r1, #0]
 801f0a4:	b087      	sub	sp, #28
 801f0a6:	10ef      	asrs	r7, r5, #3
 801f0a8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f0ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f0b0:	00ed      	lsls	r5, r5, #3
 801f0b2:	9701      	str	r7, [sp, #4]
 801f0b4:	b2ed      	uxtb	r5, r5
 801f0b6:	9502      	str	r5, [sp, #8]
 801f0b8:	9d01      	ldr	r5, [sp, #4]
 801f0ba:	9103      	str	r1, [sp, #12]
 801f0bc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f0c0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f0c4:	9902      	ldr	r1, [sp, #8]
 801f0c6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f0ca:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f0ce:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f0d2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f0d6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f0da:	022d      	lsls	r5, r5, #8
 801f0dc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f0e0:	fb06 0709 	mla	r7, r6, r9, r0
 801f0e4:	430d      	orrs	r5, r1
 801f0e6:	2e00      	cmp	r6, #0
 801f0e8:	eb02 0c07 	add.w	ip, r2, r7
 801f0ec:	9505      	str	r5, [sp, #20]
 801f0ee:	f2c0 80b6 	blt.w	801f25e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f0f2:	45b3      	cmp	fp, r6
 801f0f4:	f340 80b3 	ble.w	801f25e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f0f8:	2800      	cmp	r0, #0
 801f0fa:	f2c0 80ae 	blt.w	801f25a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f0fe:	4581      	cmp	r9, r0
 801f100:	f340 80ab 	ble.w	801f25a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f104:	5dd7      	ldrb	r7, [r2, r7]
 801f106:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f10a:	441f      	add	r7, r3
 801f10c:	1c42      	adds	r2, r0, #1
 801f10e:	f100 80a9 	bmi.w	801f264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f112:	4591      	cmp	r9, r2
 801f114:	f340 80a6 	ble.w	801f264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f118:	2c00      	cmp	r4, #0
 801f11a:	f000 80a3 	beq.w	801f264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f11e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f122:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f126:	441d      	add	r5, r3
 801f128:	3601      	adds	r6, #1
 801f12a:	f100 809f 	bmi.w	801f26c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f12e:	45b3      	cmp	fp, r6
 801f130:	f340 809c 	ble.w	801f26c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f134:	f1be 0f00 	cmp.w	lr, #0
 801f138:	f000 8098 	beq.w	801f26c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f13c:	2800      	cmp	r0, #0
 801f13e:	f2c0 8093 	blt.w	801f268 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f142:	4581      	cmp	r9, r0
 801f144:	f340 8090 	ble.w	801f268 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f148:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f14c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f150:	441e      	add	r6, r3
 801f152:	3001      	adds	r0, #1
 801f154:	f100 808d 	bmi.w	801f272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f158:	4581      	cmp	r9, r0
 801f15a:	f340 808a 	ble.w	801f272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f15e:	2c00      	cmp	r4, #0
 801f160:	f000 8087 	beq.w	801f272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f164:	44e1      	add	r9, ip
 801f166:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f16a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f16e:	4413      	add	r3, r2
 801f170:	b2a4      	uxth	r4, r4
 801f172:	fa1f fe8e 	uxth.w	lr, lr
 801f176:	fb04 fb0e 	mul.w	fp, r4, lr
 801f17a:	0124      	lsls	r4, r4, #4
 801f17c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f180:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f184:	eba4 040b 	sub.w	r4, r4, fp
 801f188:	fa1f f08e 	uxth.w	r0, lr
 801f18c:	b2a2      	uxth	r2, r4
 801f18e:	78ac      	ldrb	r4, [r5, #2]
 801f190:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f194:	9901      	ldr	r1, [sp, #4]
 801f196:	eba9 0900 	sub.w	r9, r9, r0
 801f19a:	fa1f f989 	uxth.w	r9, r9
 801f19e:	4354      	muls	r4, r2
 801f1a0:	fb09 440c 	mla	r4, r9, ip, r4
 801f1a4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f1a8:	fb00 440c 	mla	r4, r0, ip, r4
 801f1ac:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f1b0:	fa1f fe88 	uxth.w	lr, r8
 801f1b4:	ea6f 0808 	mvn.w	r8, r8
 801f1b8:	fa5f f888 	uxtb.w	r8, r8
 801f1bc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f1c0:	fb1a fa08 	smulbb	sl, sl, r8
 801f1c4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f1c8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f1cc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f1d0:	787c      	ldrb	r4, [r7, #1]
 801f1d2:	782d      	ldrb	r5, [r5, #0]
 801f1d4:	783f      	ldrb	r7, [r7, #0]
 801f1d6:	fb02 fa0a 	mul.w	sl, r2, sl
 801f1da:	fb09 aa04 	mla	sl, r9, r4, sl
 801f1de:	7874      	ldrb	r4, [r6, #1]
 801f1e0:	436a      	muls	r2, r5
 801f1e2:	7835      	ldrb	r5, [r6, #0]
 801f1e4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f1e8:	fb09 2207 	mla	r2, r9, r7, r2
 801f1ec:	785c      	ldrb	r4, [r3, #1]
 801f1ee:	781b      	ldrb	r3, [r3, #0]
 801f1f0:	fb00 2005 	mla	r0, r0, r5, r2
 801f1f4:	fb0b a404 	mla	r4, fp, r4, sl
 801f1f8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f1fc:	9b02      	ldr	r3, [sp, #8]
 801f1fe:	fb11 fa08 	smulbb	sl, r1, r8
 801f202:	fa1f fc8c 	uxth.w	ip, ip
 801f206:	fb13 f808 	smulbb	r8, r3, r8
 801f20a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f20e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f212:	fb04 a40e 	mla	r4, r4, lr, sl
 801f216:	f10c 0301 	add.w	r3, ip, #1
 801f21a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f21e:	fa1f fe8e 	uxth.w	lr, lr
 801f222:	b2a4      	uxth	r4, r4
 801f224:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f228:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f22c:	f104 0a01 	add.w	sl, r4, #1
 801f230:	f10e 0c01 	add.w	ip, lr, #1
 801f234:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f238:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f23c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f240:	0964      	lsrs	r4, r4, #5
 801f242:	ea4c 0c03 	orr.w	ip, ip, r3
 801f246:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f24a:	9b03      	ldr	r3, [sp, #12]
 801f24c:	ea4c 0c04 	orr.w	ip, ip, r4
 801f250:	f8a3 c000 	strh.w	ip, [r3]
 801f254:	b007      	add	sp, #28
 801f256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f25a:	af05      	add	r7, sp, #20
 801f25c:	e756      	b.n	801f10c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f25e:	ad05      	add	r5, sp, #20
 801f260:	462f      	mov	r7, r5
 801f262:	e761      	b.n	801f128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f264:	ad05      	add	r5, sp, #20
 801f266:	e75f      	b.n	801f128 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f268:	ae05      	add	r6, sp, #20
 801f26a:	e772      	b.n	801f152 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f26c:	ab05      	add	r3, sp, #20
 801f26e:	461e      	mov	r6, r3
 801f270:	e77e      	b.n	801f170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f272:	ab05      	add	r3, sp, #20
 801f274:	e77c      	b.n	801f170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f27a:	b095      	sub	sp, #84	; 0x54
 801f27c:	9212      	str	r2, [sp, #72]	; 0x48
 801f27e:	9309      	str	r3, [sp, #36]	; 0x24
 801f280:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f282:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f286:	930f      	str	r3, [sp, #60]	; 0x3c
 801f288:	910e      	str	r1, [sp, #56]	; 0x38
 801f28a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f28e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f290:	6850      	ldr	r0, [r2, #4]
 801f292:	6812      	ldr	r2, [r2, #0]
 801f294:	fb00 1303 	mla	r3, r0, r3, r1
 801f298:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f29c:	930a      	str	r3, [sp, #40]	; 0x28
 801f29e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f2a0:	681b      	ldr	r3, [r3, #0]
 801f2a2:	930d      	str	r3, [sp, #52]	; 0x34
 801f2a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f2a6:	685c      	ldr	r4, [r3, #4]
 801f2a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f2aa:	43db      	mvns	r3, r3
 801f2ac:	b2db      	uxtb	r3, r3
 801f2ae:	3404      	adds	r4, #4
 801f2b0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f2b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f2b4:	2b00      	cmp	r3, #0
 801f2b6:	dc03      	bgt.n	801f2c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f2b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f2ba:	2b00      	cmp	r3, #0
 801f2bc:	f340 8255 	ble.w	801f76a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f2c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f2c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f2c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f2ca:	1e48      	subs	r0, r1, #1
 801f2cc:	1e55      	subs	r5, r2, #1
 801f2ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2d0:	2b00      	cmp	r3, #0
 801f2d2:	f340 80f9 	ble.w	801f4c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f2d6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f2d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f2da:	1436      	asrs	r6, r6, #16
 801f2dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f2e0:	d406      	bmi.n	801f2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f2e2:	4286      	cmp	r6, r0
 801f2e4:	da04      	bge.n	801f2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f2e6:	2b00      	cmp	r3, #0
 801f2e8:	db02      	blt.n	801f2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f2ea:	42ab      	cmp	r3, r5
 801f2ec:	f2c0 80ed 	blt.w	801f4ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f2f0:	3601      	adds	r6, #1
 801f2f2:	f100 80da 	bmi.w	801f4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f2f6:	42b1      	cmp	r1, r6
 801f2f8:	f2c0 80d7 	blt.w	801f4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f2fc:	3301      	adds	r3, #1
 801f2fe:	f100 80d4 	bmi.w	801f4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f302:	429a      	cmp	r2, r3
 801f304:	f2c0 80d1 	blt.w	801f4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f30a:	9311      	str	r3, [sp, #68]	; 0x44
 801f30c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f30e:	930c      	str	r3, [sp, #48]	; 0x30
 801f310:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f312:	2b00      	cmp	r3, #0
 801f314:	f340 80fa 	ble.w	801f50c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f318:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f31a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f31c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f31e:	68c6      	ldr	r6, [r0, #12]
 801f320:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f322:	141d      	asrs	r5, r3, #16
 801f324:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f328:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f32a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f32c:	1400      	asrs	r0, r0, #16
 801f32e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f332:	6892      	ldr	r2, [r2, #8]
 801f334:	f100 813e 	bmi.w	801f5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f338:	1e57      	subs	r7, r2, #1
 801f33a:	42b8      	cmp	r0, r7
 801f33c:	f280 813a 	bge.w	801f5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f340:	2d00      	cmp	r5, #0
 801f342:	f2c0 8137 	blt.w	801f5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f346:	1e77      	subs	r7, r6, #1
 801f348:	42bd      	cmp	r5, r7
 801f34a:	f280 8133 	bge.w	801f5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f34e:	b212      	sxth	r2, r2
 801f350:	fb05 0002 	mla	r0, r5, r2, r0
 801f354:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f356:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f35a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f35e:	182e      	adds	r6, r5, r0
 801f360:	eb04 050a 	add.w	r5, r4, sl
 801f364:	2b00      	cmp	r3, #0
 801f366:	f000 8117 	beq.w	801f598 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f36a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f36e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f372:	44a4      	add	ip, r4
 801f374:	2900      	cmp	r1, #0
 801f376:	f000 8117 	beq.w	801f5a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f37a:	18b0      	adds	r0, r6, r2
 801f37c:	5cb2      	ldrb	r2, [r6, r2]
 801f37e:	7840      	ldrb	r0, [r0, #1]
 801f380:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f384:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f388:	4422      	add	r2, r4
 801f38a:	4420      	add	r0, r4
 801f38c:	b29b      	uxth	r3, r3
 801f38e:	b289      	uxth	r1, r1
 801f390:	fb03 f901 	mul.w	r9, r3, r1
 801f394:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f398:	011b      	lsls	r3, r3, #4
 801f39a:	b289      	uxth	r1, r1
 801f39c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f3a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f3a4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f3a6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f3aa:	f8b6 e000 	ldrh.w	lr, [r6]
 801f3ae:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f3b2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f3b6:	eba3 0309 	sub.w	r3, r3, r9
 801f3ba:	b29b      	uxth	r3, r3
 801f3bc:	eba8 0801 	sub.w	r8, r8, r1
 801f3c0:	fa1f f888 	uxth.w	r8, r8
 801f3c4:	435f      	muls	r7, r3
 801f3c6:	fb08 770b 	mla	r7, r8, fp, r7
 801f3ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f3ce:	9310      	str	r3, [sp, #64]	; 0x40
 801f3d0:	fb01 770b 	mla	r7, r1, fp, r7
 801f3d4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f3d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f3da:	fb09 770b 	mla	r7, r9, fp, r7
 801f3de:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f3e2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f3e6:	fb1b fb03 	smulbb	fp, fp, r3
 801f3ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f3ee:	fb07 b706 	mla	r7, r7, r6, fp
 801f3f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f3f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f3f8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f3fc:	f89c c000 	ldrb.w	ip, [ip]
 801f400:	435d      	muls	r5, r3
 801f402:	fb08 550b 	mla	r5, r8, fp, r5
 801f406:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f40a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f40c:	fb01 550b 	mla	r5, r1, fp, r5
 801f410:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f414:	fb09 550b 	mla	r5, r9, fp, r5
 801f418:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f41c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f420:	fb1b fb03 	smulbb	fp, fp, r3
 801f424:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f426:	fb03 f30c 	mul.w	r3, r3, ip
 801f42a:	f892 c000 	ldrb.w	ip, [r2]
 801f42e:	fb08 330a 	mla	r3, r8, sl, r3
 801f432:	fb01 330c 	mla	r3, r1, ip, r3
 801f436:	f890 c000 	ldrb.w	ip, [r0]
 801f43a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f43e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f442:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f444:	fa5f fe8e 	uxtb.w	lr, lr
 801f448:	b2bf      	uxth	r7, r7
 801f44a:	fb1e fe03 	smulbb	lr, lr, r3
 801f44e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f452:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f456:	fb05 b506 	mla	r5, r5, r6, fp
 801f45a:	1c7b      	adds	r3, r7, #1
 801f45c:	fb0c e606 	mla	r6, ip, r6, lr
 801f460:	b2ad      	uxth	r5, r5
 801f462:	b2b6      	uxth	r6, r6
 801f464:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f468:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f46c:	f105 0b01 	add.w	fp, r5, #1
 801f470:	1c77      	adds	r7, r6, #1
 801f472:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f476:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f47a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f47e:	096d      	lsrs	r5, r5, #5
 801f480:	431f      	orrs	r7, r3
 801f482:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f486:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f488:	433d      	orrs	r5, r7
 801f48a:	801d      	strh	r5, [r3, #0]
 801f48c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f48e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f490:	3302      	adds	r3, #2
 801f492:	930c      	str	r3, [sp, #48]	; 0x30
 801f494:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f496:	4413      	add	r3, r2
 801f498:	931f      	str	r3, [sp, #124]	; 0x7c
 801f49a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f49c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f49e:	4413      	add	r3, r2
 801f4a0:	9320      	str	r3, [sp, #128]	; 0x80
 801f4a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f4a4:	3b01      	subs	r3, #1
 801f4a6:	9311      	str	r3, [sp, #68]	; 0x44
 801f4a8:	e732      	b.n	801f310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f4aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f4ac:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f4ae:	4433      	add	r3, r6
 801f4b0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f4b2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f4b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4b6:	4433      	add	r3, r6
 801f4b8:	9320      	str	r3, [sp, #128]	; 0x80
 801f4ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4bc:	3b01      	subs	r3, #1
 801f4be:	9309      	str	r3, [sp, #36]	; 0x24
 801f4c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4c2:	3302      	adds	r3, #2
 801f4c4:	930a      	str	r3, [sp, #40]	; 0x28
 801f4c6:	e702      	b.n	801f2ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f4c8:	d027      	beq.n	801f51a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f4ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4cc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f4ce:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f4d0:	3b01      	subs	r3, #1
 801f4d2:	fb00 5003 	mla	r0, r0, r3, r5
 801f4d6:	1400      	asrs	r0, r0, #16
 801f4d8:	f53f af16 	bmi.w	801f308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4dc:	3901      	subs	r1, #1
 801f4de:	4288      	cmp	r0, r1
 801f4e0:	f6bf af12 	bge.w	801f308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4e4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f4e6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f4e8:	fb01 0303 	mla	r3, r1, r3, r0
 801f4ec:	141b      	asrs	r3, r3, #16
 801f4ee:	f53f af0b 	bmi.w	801f308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4f2:	3a01      	subs	r2, #1
 801f4f4:	4293      	cmp	r3, r2
 801f4f6:	f6bf af07 	bge.w	801f308 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f4fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4fc:	9311      	str	r3, [sp, #68]	; 0x44
 801f4fe:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f502:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f504:	930c      	str	r3, [sp, #48]	; 0x30
 801f506:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f508:	2b00      	cmp	r3, #0
 801f50a:	dc70      	bgt.n	801f5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f50c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f50e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f510:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f514:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f518:	930a      	str	r3, [sp, #40]	; 0x28
 801f51a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f51c:	2b00      	cmp	r3, #0
 801f51e:	f340 8124 	ble.w	801f76a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f522:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f526:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f52a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f52e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f530:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f534:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f538:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f53c:	eef0 6a62 	vmov.f32	s13, s5
 801f540:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f544:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f548:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f54c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f550:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f554:	eef0 6a43 	vmov.f32	s13, s6
 801f558:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f55c:	ee12 2a90 	vmov	r2, s5
 801f560:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f564:	fb92 f3f3 	sdiv	r3, r2, r3
 801f568:	ee13 2a10 	vmov	r2, s6
 801f56c:	9321      	str	r3, [sp, #132]	; 0x84
 801f56e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f570:	fb92 f3f3 	sdiv	r3, r2, r3
 801f574:	9322      	str	r3, [sp, #136]	; 0x88
 801f576:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f578:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f57a:	3b01      	subs	r3, #1
 801f57c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f580:	930e      	str	r3, [sp, #56]	; 0x38
 801f582:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f584:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f588:	bf08      	it	eq
 801f58a:	4613      	moveq	r3, r2
 801f58c:	9309      	str	r3, [sp, #36]	; 0x24
 801f58e:	eeb0 3a67 	vmov.f32	s6, s15
 801f592:	eef0 2a47 	vmov.f32	s5, s14
 801f596:	e68c      	b.n	801f2b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f598:	b149      	cbz	r1, 801f5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f59a:	5cb2      	ldrb	r2, [r6, r2]
 801f59c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f5a0:	4422      	add	r2, r4
 801f5a2:	4628      	mov	r0, r5
 801f5a4:	46ac      	mov	ip, r5
 801f5a6:	e6f1      	b.n	801f38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f5a8:	4628      	mov	r0, r5
 801f5aa:	462a      	mov	r2, r5
 801f5ac:	e6ee      	b.n	801f38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f5ae:	4628      	mov	r0, r5
 801f5b0:	462a      	mov	r2, r5
 801f5b2:	e7f7      	b.n	801f5a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f5b4:	1c47      	adds	r7, r0, #1
 801f5b6:	f53f af69 	bmi.w	801f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f5ba:	42ba      	cmp	r2, r7
 801f5bc:	f6ff af66 	blt.w	801f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f5c0:	1c6f      	adds	r7, r5, #1
 801f5c2:	f53f af63 	bmi.w	801f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f5c6:	42be      	cmp	r6, r7
 801f5c8:	f6ff af60 	blt.w	801f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f5cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f5ce:	9002      	str	r0, [sp, #8]
 801f5d0:	b236      	sxth	r6, r6
 801f5d2:	b212      	sxth	r2, r2
 801f5d4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f5d8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f5dc:	9200      	str	r2, [sp, #0]
 801f5de:	9601      	str	r6, [sp, #4]
 801f5e0:	4623      	mov	r3, r4
 801f5e2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f5e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f5e8:	f7ff fd59 	bl	801f09e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f5ec:	e74e      	b.n	801f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f5ee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f5f0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f5f2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f5f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f5f6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f5fa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f5fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f600:	142d      	asrs	r5, r5, #16
 801f602:	1400      	asrs	r0, r0, #16
 801f604:	fb02 5000 	mla	r0, r2, r0, r5
 801f608:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f60a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f60e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f612:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f616:	182e      	adds	r6, r5, r0
 801f618:	eb04 0509 	add.w	r5, r4, r9
 801f61c:	2b00      	cmp	r3, #0
 801f61e:	f000 8096 	beq.w	801f74e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f622:	7877      	ldrb	r7, [r6, #1]
 801f624:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f628:	4427      	add	r7, r4
 801f62a:	2900      	cmp	r1, #0
 801f62c:	f000 8097 	beq.w	801f75e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f630:	18b0      	adds	r0, r6, r2
 801f632:	5cb2      	ldrb	r2, [r6, r2]
 801f634:	7840      	ldrb	r0, [r0, #1]
 801f636:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f63a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f63e:	4422      	add	r2, r4
 801f640:	4420      	add	r0, r4
 801f642:	b29b      	uxth	r3, r3
 801f644:	b289      	uxth	r1, r1
 801f646:	fb03 f801 	mul.w	r8, r3, r1
 801f64a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f64c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f650:	f8b6 c000 	ldrh.w	ip, [r6]
 801f654:	78be      	ldrb	r6, [r7, #2]
 801f656:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f65a:	011b      	lsls	r3, r3, #4
 801f65c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f660:	b289      	uxth	r1, r1
 801f662:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f666:	eba3 0308 	sub.w	r3, r3, r8
 801f66a:	b29b      	uxth	r3, r3
 801f66c:	ebae 0e01 	sub.w	lr, lr, r1
 801f670:	fa1f fe8e 	uxth.w	lr, lr
 801f674:	435e      	muls	r6, r3
 801f676:	fb0e 660b 	mla	r6, lr, fp, r6
 801f67a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f67e:	9310      	str	r3, [sp, #64]	; 0x40
 801f680:	fb01 660b 	mla	r6, r1, fp, r6
 801f684:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f688:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f68a:	fb08 660b 	mla	r6, r8, fp, r6
 801f68e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f692:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f696:	fb1b fb03 	smulbb	fp, fp, r3
 801f69a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f69e:	fb06 b60a 	mla	r6, r6, sl, fp
 801f6a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6a4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f6a8:	787d      	ldrb	r5, [r7, #1]
 801f6aa:	783f      	ldrb	r7, [r7, #0]
 801f6ac:	435d      	muls	r5, r3
 801f6ae:	fb0e 550b 	mla	r5, lr, fp, r5
 801f6b2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f6b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6b8:	fb01 550b 	mla	r5, r1, fp, r5
 801f6bc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f6c0:	fb08 550b 	mla	r5, r8, fp, r5
 801f6c4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f6c8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f6cc:	fb1b fb03 	smulbb	fp, fp, r3
 801f6d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6d2:	437b      	muls	r3, r7
 801f6d4:	7817      	ldrb	r7, [r2, #0]
 801f6d6:	fb0e 3309 	mla	r3, lr, r9, r3
 801f6da:	fb01 3307 	mla	r3, r1, r7, r3
 801f6de:	7807      	ldrb	r7, [r0, #0]
 801f6e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f6e4:	fb08 3707 	mla	r7, r8, r7, r3
 801f6e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6ea:	fa5f fc8c 	uxtb.w	ip, ip
 801f6ee:	fb1c fc03 	smulbb	ip, ip, r3
 801f6f2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f6f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f6fa:	fb05 b50a 	mla	r5, r5, sl, fp
 801f6fe:	fb07 c70a 	mla	r7, r7, sl, ip
 801f702:	b2b6      	uxth	r6, r6
 801f704:	b2ad      	uxth	r5, r5
 801f706:	b2bf      	uxth	r7, r7
 801f708:	1c73      	adds	r3, r6, #1
 801f70a:	1c7a      	adds	r2, r7, #1
 801f70c:	f105 0b01 	add.w	fp, r5, #1
 801f710:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f714:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f718:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f71c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f720:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f724:	096d      	lsrs	r5, r5, #5
 801f726:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f728:	4316      	orrs	r6, r2
 801f72a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f72e:	432e      	orrs	r6, r5
 801f730:	f823 6b02 	strh.w	r6, [r3], #2
 801f734:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f736:	930c      	str	r3, [sp, #48]	; 0x30
 801f738:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f73a:	4413      	add	r3, r2
 801f73c:	931f      	str	r3, [sp, #124]	; 0x7c
 801f73e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f740:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f742:	4413      	add	r3, r2
 801f744:	9320      	str	r3, [sp, #128]	; 0x80
 801f746:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f748:	3b01      	subs	r3, #1
 801f74a:	9311      	str	r3, [sp, #68]	; 0x44
 801f74c:	e6db      	b.n	801f506 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f74e:	b149      	cbz	r1, 801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f750:	5cb2      	ldrb	r2, [r6, r2]
 801f752:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f756:	4422      	add	r2, r4
 801f758:	4628      	mov	r0, r5
 801f75a:	462f      	mov	r7, r5
 801f75c:	e771      	b.n	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f75e:	4628      	mov	r0, r5
 801f760:	462a      	mov	r2, r5
 801f762:	e76e      	b.n	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f764:	4628      	mov	r0, r5
 801f766:	462a      	mov	r2, r5
 801f768:	e7f7      	b.n	801f75a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f76a:	b015      	add	sp, #84	; 0x54
 801f76c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f770:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f774:	880f      	ldrh	r7, [r1, #0]
 801f776:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f77a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f77e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f782:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f786:	023c      	lsls	r4, r7, #8
 801f788:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f78c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f790:	017c      	lsls	r4, r7, #5
 801f792:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f796:	00ff      	lsls	r7, r7, #3
 801f798:	ea4b 0404 	orr.w	r4, fp, r4
 801f79c:	b2ff      	uxtb	r7, r7
 801f79e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f7a2:	4327      	orrs	r7, r4
 801f7a4:	2d00      	cmp	r5, #0
 801f7a6:	eb02 080a 	add.w	r8, r2, sl
 801f7aa:	9701      	str	r7, [sp, #4]
 801f7ac:	db7e      	blt.n	801f8ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f7ae:	45a9      	cmp	r9, r5
 801f7b0:	dd7c      	ble.n	801f8ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f7b2:	f1bc 0f00 	cmp.w	ip, #0
 801f7b6:	db77      	blt.n	801f8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f7b8:	45e6      	cmp	lr, ip
 801f7ba:	dd75      	ble.n	801f8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f7bc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f7c0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f7c4:	441f      	add	r7, r3
 801f7c6:	f11c 0201 	adds.w	r2, ip, #1
 801f7ca:	d472      	bmi.n	801f8b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f7cc:	4596      	cmp	lr, r2
 801f7ce:	dd70      	ble.n	801f8b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f7d0:	2800      	cmp	r0, #0
 801f7d2:	d06e      	beq.n	801f8b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f7d4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f7d8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f7dc:	441c      	add	r4, r3
 801f7de:	3501      	adds	r5, #1
 801f7e0:	d46b      	bmi.n	801f8ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f7e2:	45a9      	cmp	r9, r5
 801f7e4:	dd69      	ble.n	801f8ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f7e6:	2e00      	cmp	r6, #0
 801f7e8:	d067      	beq.n	801f8ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f7ea:	f1bc 0f00 	cmp.w	ip, #0
 801f7ee:	db62      	blt.n	801f8b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f7f0:	45e6      	cmp	lr, ip
 801f7f2:	dd60      	ble.n	801f8b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f7f4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f7f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f7fc:	441d      	add	r5, r3
 801f7fe:	f11c 0201 	adds.w	r2, ip, #1
 801f802:	d45d      	bmi.n	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f804:	4596      	cmp	lr, r2
 801f806:	dd5b      	ble.n	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f808:	2800      	cmp	r0, #0
 801f80a:	d059      	beq.n	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f80c:	44c6      	add	lr, r8
 801f80e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f812:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f816:	4413      	add	r3, r2
 801f818:	b280      	uxth	r0, r0
 801f81a:	b2b2      	uxth	r2, r6
 801f81c:	fb00 f602 	mul.w	r6, r0, r2
 801f820:	0100      	lsls	r0, r0, #4
 801f822:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f826:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f82a:	1b80      	subs	r0, r0, r6
 801f82c:	fa1f fc82 	uxth.w	ip, r2
 801f830:	b282      	uxth	r2, r0
 801f832:	78a0      	ldrb	r0, [r4, #2]
 801f834:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f838:	f897 9000 	ldrb.w	r9, [r7]
 801f83c:	787f      	ldrb	r7, [r7, #1]
 801f83e:	eba8 080c 	sub.w	r8, r8, ip
 801f842:	fa1f f888 	uxth.w	r8, r8
 801f846:	4350      	muls	r0, r2
 801f848:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f84c:	78a8      	ldrb	r0, [r5, #2]
 801f84e:	fb0c e000 	mla	r0, ip, r0, lr
 801f852:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f856:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f85a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f85e:	f894 e000 	ldrb.w	lr, [r4]
 801f862:	fb02 fe0e 	mul.w	lr, r2, lr
 801f866:	fb08 e909 	mla	r9, r8, r9, lr
 801f86a:	f895 e000 	ldrb.w	lr, [r5]
 801f86e:	fb0c 990e 	mla	r9, ip, lr, r9
 801f872:	f893 e000 	ldrb.w	lr, [r3]
 801f876:	785b      	ldrb	r3, [r3, #1]
 801f878:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f87c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f880:	ea4e 0e00 	orr.w	lr, lr, r0
 801f884:	7860      	ldrb	r0, [r4, #1]
 801f886:	4350      	muls	r0, r2
 801f888:	786a      	ldrb	r2, [r5, #1]
 801f88a:	fb08 0007 	mla	r0, r8, r7, r0
 801f88e:	fb0c 0202 	mla	r2, ip, r2, r0
 801f892:	fb06 2303 	mla	r3, r6, r3, r2
 801f896:	095b      	lsrs	r3, r3, #5
 801f898:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f89c:	ea4e 0303 	orr.w	r3, lr, r3
 801f8a0:	800b      	strh	r3, [r1, #0]
 801f8a2:	b003      	add	sp, #12
 801f8a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8a8:	af01      	add	r7, sp, #4
 801f8aa:	e78c      	b.n	801f7c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f8ac:	ac01      	add	r4, sp, #4
 801f8ae:	4627      	mov	r7, r4
 801f8b0:	e795      	b.n	801f7de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f8b2:	ac01      	add	r4, sp, #4
 801f8b4:	e793      	b.n	801f7de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f8b6:	ad01      	add	r5, sp, #4
 801f8b8:	e7a1      	b.n	801f7fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f8ba:	ab01      	add	r3, sp, #4
 801f8bc:	461d      	mov	r5, r3
 801f8be:	e7ab      	b.n	801f818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f8c0:	ab01      	add	r3, sp, #4
 801f8c2:	e7a9      	b.n	801f818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f8c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8c8:	b08f      	sub	sp, #60	; 0x3c
 801f8ca:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f8ce:	920c      	str	r2, [sp, #48]	; 0x30
 801f8d0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f8d2:	910a      	str	r1, [sp, #40]	; 0x28
 801f8d4:	9306      	str	r3, [sp, #24]
 801f8d6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f8da:	900d      	str	r0, [sp, #52]	; 0x34
 801f8dc:	6850      	ldr	r0, [r2, #4]
 801f8de:	6812      	ldr	r2, [r2, #0]
 801f8e0:	fb00 1303 	mla	r3, r0, r3, r1
 801f8e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f8e8:	9307      	str	r3, [sp, #28]
 801f8ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8ec:	681b      	ldr	r3, [r3, #0]
 801f8ee:	9308      	str	r3, [sp, #32]
 801f8f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8f2:	685c      	ldr	r4, [r3, #4]
 801f8f4:	3404      	adds	r4, #4
 801f8f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8f8:	2b00      	cmp	r3, #0
 801f8fa:	dc03      	bgt.n	801f904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f8fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f8fe:	2b00      	cmp	r3, #0
 801f900:	f340 81d6 	ble.w	801fcb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f904:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f906:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f90a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f90e:	1e48      	subs	r0, r1, #1
 801f910:	1e56      	subs	r6, r2, #1
 801f912:	9b06      	ldr	r3, [sp, #24]
 801f914:	2b00      	cmp	r3, #0
 801f916:	f340 80b7 	ble.w	801fa88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f91a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f91e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f922:	d406      	bmi.n	801f932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f924:	4287      	cmp	r7, r0
 801f926:	da04      	bge.n	801f932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f928:	2b00      	cmp	r3, #0
 801f92a:	db02      	blt.n	801f932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f92c:	42b3      	cmp	r3, r6
 801f92e:	f2c0 80ac 	blt.w	801fa8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f932:	3701      	adds	r7, #1
 801f934:	f100 809d 	bmi.w	801fa72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f938:	42b9      	cmp	r1, r7
 801f93a:	f2c0 809a 	blt.w	801fa72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f93e:	3301      	adds	r3, #1
 801f940:	f100 8097 	bmi.w	801fa72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f944:	429a      	cmp	r2, r3
 801f946:	f2c0 8094 	blt.w	801fa72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f94a:	9b06      	ldr	r3, [sp, #24]
 801f94c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f94e:	9b07      	ldr	r3, [sp, #28]
 801f950:	9309      	str	r3, [sp, #36]	; 0x24
 801f952:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f954:	2b00      	cmp	r3, #0
 801f956:	f340 80b5 	ble.w	801fac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f95a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f95c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f95e:	68c7      	ldr	r7, [r0, #12]
 801f960:	6892      	ldr	r2, [r2, #8]
 801f962:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f966:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f96a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f96e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f972:	f100 80fb 	bmi.w	801fb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f976:	f102 3cff 	add.w	ip, r2, #4294967295
 801f97a:	4560      	cmp	r0, ip
 801f97c:	f280 80f6 	bge.w	801fb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f980:	2e00      	cmp	r6, #0
 801f982:	f2c0 80f3 	blt.w	801fb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f986:	f107 3cff 	add.w	ip, r7, #4294967295
 801f98a:	4566      	cmp	r6, ip
 801f98c:	f280 80ee 	bge.w	801fb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f990:	b212      	sxth	r2, r2
 801f992:	fb06 0002 	mla	r0, r6, r2, r0
 801f996:	9e08      	ldr	r6, [sp, #32]
 801f998:	1837      	adds	r7, r6, r0
 801f99a:	5c30      	ldrb	r0, [r6, r0]
 801f99c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f9a0:	eb04 0c08 	add.w	ip, r4, r8
 801f9a4:	2b00      	cmp	r3, #0
 801f9a6:	f000 80d3 	beq.w	801fb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f9aa:	787e      	ldrb	r6, [r7, #1]
 801f9ac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f9b0:	4426      	add	r6, r4
 801f9b2:	2900      	cmp	r1, #0
 801f9b4:	f000 80d4 	beq.w	801fb60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f9b8:	18b8      	adds	r0, r7, r2
 801f9ba:	5cba      	ldrb	r2, [r7, r2]
 801f9bc:	7840      	ldrb	r0, [r0, #1]
 801f9be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f9c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f9c6:	4422      	add	r2, r4
 801f9c8:	4420      	add	r0, r4
 801f9ca:	b29b      	uxth	r3, r3
 801f9cc:	b289      	uxth	r1, r1
 801f9ce:	fb03 f901 	mul.w	r9, r3, r1
 801f9d2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f9d6:	011b      	lsls	r3, r3, #4
 801f9d8:	b289      	uxth	r1, r1
 801f9da:	78b7      	ldrb	r7, [r6, #2]
 801f9dc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f9e0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f9e4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f9e8:	eba3 0309 	sub.w	r3, r3, r9
 801f9ec:	b29b      	uxth	r3, r3
 801f9ee:	ebae 0e01 	sub.w	lr, lr, r1
 801f9f2:	fa1f fe8e 	uxth.w	lr, lr
 801f9f6:	435f      	muls	r7, r3
 801f9f8:	fb0e 770a 	mla	r7, lr, sl, r7
 801f9fc:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fa00:	fb01 770a 	mla	r7, r1, sl, r7
 801fa04:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fa08:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fa0c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fa10:	f896 8000 	ldrb.w	r8, [r6]
 801fa14:	7876      	ldrb	r6, [r6, #1]
 801fa16:	fb03 f808 	mul.w	r8, r3, r8
 801fa1a:	fb0e 8807 	mla	r8, lr, r7, r8
 801fa1e:	7817      	ldrb	r7, [r2, #0]
 801fa20:	fb01 8807 	mla	r8, r1, r7, r8
 801fa24:	7807      	ldrb	r7, [r0, #0]
 801fa26:	fb09 8707 	mla	r7, r9, r7, r8
 801fa2a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fa2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fa32:	ea47 070a 	orr.w	r7, r7, sl
 801fa36:	4373      	muls	r3, r6
 801fa38:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fa3c:	fb0e 330c 	mla	r3, lr, ip, r3
 801fa40:	fb01 310a 	mla	r1, r1, sl, r3
 801fa44:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fa48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa4a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fa4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fa52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fa56:	ea47 070a 	orr.w	r7, r7, sl
 801fa5a:	801f      	strh	r7, [r3, #0]
 801fa5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa5e:	3302      	adds	r3, #2
 801fa60:	9309      	str	r3, [sp, #36]	; 0x24
 801fa62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fa64:	449b      	add	fp, r3
 801fa66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa68:	441d      	add	r5, r3
 801fa6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa6c:	3b01      	subs	r3, #1
 801fa6e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa70:	e76f      	b.n	801f952 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fa72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fa74:	449b      	add	fp, r3
 801fa76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa78:	441d      	add	r5, r3
 801fa7a:	9b06      	ldr	r3, [sp, #24]
 801fa7c:	3b01      	subs	r3, #1
 801fa7e:	9306      	str	r3, [sp, #24]
 801fa80:	9b07      	ldr	r3, [sp, #28]
 801fa82:	3302      	adds	r3, #2
 801fa84:	9307      	str	r3, [sp, #28]
 801fa86:	e744      	b.n	801f912 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fa88:	d023      	beq.n	801fad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fa8a:	9b06      	ldr	r3, [sp, #24]
 801fa8c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fa8e:	3b01      	subs	r3, #1
 801fa90:	fb00 b003 	mla	r0, r0, r3, fp
 801fa94:	1400      	asrs	r0, r0, #16
 801fa96:	f53f af58 	bmi.w	801f94a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fa9a:	3901      	subs	r1, #1
 801fa9c:	4288      	cmp	r0, r1
 801fa9e:	f6bf af54 	bge.w	801f94a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801faa2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801faa4:	fb01 5303 	mla	r3, r1, r3, r5
 801faa8:	141b      	asrs	r3, r3, #16
 801faaa:	f53f af4e 	bmi.w	801f94a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801faae:	3a01      	subs	r2, #1
 801fab0:	4293      	cmp	r3, r2
 801fab2:	f6bf af4a 	bge.w	801f94a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fab6:	9b06      	ldr	r3, [sp, #24]
 801fab8:	9309      	str	r3, [sp, #36]	; 0x24
 801faba:	9b07      	ldr	r3, [sp, #28]
 801fabc:	930b      	str	r3, [sp, #44]	; 0x2c
 801fabe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fac0:	2b00      	cmp	r3, #0
 801fac2:	dc70      	bgt.n	801fba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fac4:	9b06      	ldr	r3, [sp, #24]
 801fac6:	9a07      	ldr	r2, [sp, #28]
 801fac8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801facc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fad0:	9307      	str	r3, [sp, #28]
 801fad2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fad4:	2b00      	cmp	r3, #0
 801fad6:	f340 80eb 	ble.w	801fcb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fada:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fade:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fae2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fae6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fae8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801faec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801faf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801faf4:	eef0 6a62 	vmov.f32	s13, s5
 801faf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fafc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb04:	ee16 ba90 	vmov	fp, s13
 801fb08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb0c:	eef0 6a43 	vmov.f32	s13, s6
 801fb10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb14:	ee12 2a90 	vmov	r2, s5
 801fb18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb20:	ee13 2a10 	vmov	r2, s6
 801fb24:	931b      	str	r3, [sp, #108]	; 0x6c
 801fb26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fb28:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb2c:	931c      	str	r3, [sp, #112]	; 0x70
 801fb2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fb32:	3b01      	subs	r3, #1
 801fb34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb38:	930a      	str	r3, [sp, #40]	; 0x28
 801fb3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fb3c:	bf08      	it	eq
 801fb3e:	4613      	moveq	r3, r2
 801fb40:	ee16 5a90 	vmov	r5, s13
 801fb44:	9306      	str	r3, [sp, #24]
 801fb46:	eeb0 3a67 	vmov.f32	s6, s15
 801fb4a:	eef0 2a47 	vmov.f32	s5, s14
 801fb4e:	e6d2      	b.n	801f8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fb50:	b149      	cbz	r1, 801fb66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fb52:	5cba      	ldrb	r2, [r7, r2]
 801fb54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb58:	4422      	add	r2, r4
 801fb5a:	4660      	mov	r0, ip
 801fb5c:	4666      	mov	r6, ip
 801fb5e:	e734      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fb60:	4660      	mov	r0, ip
 801fb62:	4662      	mov	r2, ip
 801fb64:	e731      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fb66:	4660      	mov	r0, ip
 801fb68:	4662      	mov	r2, ip
 801fb6a:	e7f7      	b.n	801fb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fb6c:	f110 0c01 	adds.w	ip, r0, #1
 801fb70:	f53f af74 	bmi.w	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fb74:	4562      	cmp	r2, ip
 801fb76:	f6ff af71 	blt.w	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fb7a:	f116 0c01 	adds.w	ip, r6, #1
 801fb7e:	f53f af6d 	bmi.w	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fb82:	4567      	cmp	r7, ip
 801fb84:	f6ff af6a 	blt.w	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fb88:	b23f      	sxth	r7, r7
 801fb8a:	b212      	sxth	r2, r2
 801fb8c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fb90:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fb94:	9200      	str	r2, [sp, #0]
 801fb96:	9701      	str	r7, [sp, #4]
 801fb98:	4623      	mov	r3, r4
 801fb9a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fb9e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fba0:	f7ff fde6 	bl	801f770 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fba4:	e75a      	b.n	801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fba6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fba8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fbac:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fbb0:	1428      	asrs	r0, r5, #16
 801fbb2:	fb02 6000 	mla	r0, r2, r0, r6
 801fbb6:	9e08      	ldr	r6, [sp, #32]
 801fbb8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fbbc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fbc0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fbc4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fbc8:	1837      	adds	r7, r6, r0
 801fbca:	eb04 0c08 	add.w	ip, r4, r8
 801fbce:	2b00      	cmp	r3, #0
 801fbd0:	d060      	beq.n	801fc94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fbd2:	787e      	ldrb	r6, [r7, #1]
 801fbd4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fbd8:	4426      	add	r6, r4
 801fbda:	2900      	cmp	r1, #0
 801fbdc:	d062      	beq.n	801fca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fbde:	18b8      	adds	r0, r7, r2
 801fbe0:	5cba      	ldrb	r2, [r7, r2]
 801fbe2:	7840      	ldrb	r0, [r0, #1]
 801fbe4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fbe8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fbec:	4422      	add	r2, r4
 801fbee:	4420      	add	r0, r4
 801fbf0:	b29b      	uxth	r3, r3
 801fbf2:	b289      	uxth	r1, r1
 801fbf4:	fb03 f901 	mul.w	r9, r3, r1
 801fbf8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fbfc:	011b      	lsls	r3, r3, #4
 801fbfe:	b289      	uxth	r1, r1
 801fc00:	78b7      	ldrb	r7, [r6, #2]
 801fc02:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fc06:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fc0a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fc0e:	eba3 0309 	sub.w	r3, r3, r9
 801fc12:	b29b      	uxth	r3, r3
 801fc14:	ebae 0e01 	sub.w	lr, lr, r1
 801fc18:	fa1f fe8e 	uxth.w	lr, lr
 801fc1c:	435f      	muls	r7, r3
 801fc1e:	fb0e 770a 	mla	r7, lr, sl, r7
 801fc22:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fc26:	fb01 770a 	mla	r7, r1, sl, r7
 801fc2a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fc2e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fc32:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fc36:	f896 8000 	ldrb.w	r8, [r6]
 801fc3a:	7876      	ldrb	r6, [r6, #1]
 801fc3c:	fb03 f808 	mul.w	r8, r3, r8
 801fc40:	fb0e 8807 	mla	r8, lr, r7, r8
 801fc44:	7817      	ldrb	r7, [r2, #0]
 801fc46:	fb01 8807 	mla	r8, r1, r7, r8
 801fc4a:	7807      	ldrb	r7, [r0, #0]
 801fc4c:	fb09 8707 	mla	r7, r9, r7, r8
 801fc50:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fc54:	4373      	muls	r3, r6
 801fc56:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fc5a:	7856      	ldrb	r6, [r2, #1]
 801fc5c:	ea47 070a 	orr.w	r7, r7, sl
 801fc60:	fb0e 330c 	mla	r3, lr, ip, r3
 801fc64:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fc68:	fb01 3306 	mla	r3, r1, r6, r3
 801fc6c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fc70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fc74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fc7a:	ea47 070a 	orr.w	r7, r7, sl
 801fc7e:	f823 7b02 	strh.w	r7, [r3], #2
 801fc82:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc84:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fc86:	449b      	add	fp, r3
 801fc88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc8a:	441d      	add	r5, r3
 801fc8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc8e:	3b01      	subs	r3, #1
 801fc90:	9309      	str	r3, [sp, #36]	; 0x24
 801fc92:	e714      	b.n	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fc94:	b149      	cbz	r1, 801fcaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fc96:	5cba      	ldrb	r2, [r7, r2]
 801fc98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc9c:	4422      	add	r2, r4
 801fc9e:	4660      	mov	r0, ip
 801fca0:	4666      	mov	r6, ip
 801fca2:	e7a5      	b.n	801fbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fca4:	4660      	mov	r0, ip
 801fca6:	4662      	mov	r2, ip
 801fca8:	e7a2      	b.n	801fbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fcaa:	4660      	mov	r0, ip
 801fcac:	4662      	mov	r2, ip
 801fcae:	e7f7      	b.n	801fca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fcb0:	b00f      	add	sp, #60	; 0x3c
 801fcb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fcb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fcb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcba:	b085      	sub	sp, #20
 801fcbc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fcc0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fcc4:	9102      	str	r1, [sp, #8]
 801fcc6:	2c00      	cmp	r4, #0
 801fcc8:	fb04 710c 	mla	r1, r4, ip, r7
 801fccc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fcd0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fcd4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fcd8:	eb02 0e01 	add.w	lr, r2, r1
 801fcdc:	f2c0 8122 	blt.w	801ff24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fce0:	45a0      	cmp	r8, r4
 801fce2:	f340 811f 	ble.w	801ff24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fce6:	2f00      	cmp	r7, #0
 801fce8:	f2c0 811a 	blt.w	801ff20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fcec:	45bc      	cmp	ip, r7
 801fcee:	f340 8117 	ble.w	801ff20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fcf2:	5c52      	ldrb	r2, [r2, r1]
 801fcf4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fcf8:	1c7a      	adds	r2, r7, #1
 801fcfa:	f100 8116 	bmi.w	801ff2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fcfe:	4594      	cmp	ip, r2
 801fd00:	f340 8113 	ble.w	801ff2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fd04:	2e00      	cmp	r6, #0
 801fd06:	f000 8112 	beq.w	801ff2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fd0a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fd0e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fd12:	3401      	adds	r4, #1
 801fd14:	f100 810f 	bmi.w	801ff36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fd18:	45a0      	cmp	r8, r4
 801fd1a:	f340 810c 	ble.w	801ff36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fd1e:	2800      	cmp	r0, #0
 801fd20:	f000 810c 	beq.w	801ff3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fd24:	2f00      	cmp	r7, #0
 801fd26:	f2c0 8104 	blt.w	801ff32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fd2a:	45bc      	cmp	ip, r7
 801fd2c:	f340 8101 	ble.w	801ff32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fd30:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fd34:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fd38:	3701      	adds	r7, #1
 801fd3a:	f100 8102 	bmi.w	801ff42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fd3e:	45bc      	cmp	ip, r7
 801fd40:	f340 80ff 	ble.w	801ff42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fd44:	2e00      	cmp	r6, #0
 801fd46:	f000 80fe 	beq.w	801ff46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fd4a:	44f4      	add	ip, lr
 801fd4c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fd50:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fd54:	b2b6      	uxth	r6, r6
 801fd56:	b280      	uxth	r0, r0
 801fd58:	fb00 fe06 	mul.w	lr, r0, r6
 801fd5c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fd60:	0136      	lsls	r6, r6, #4
 801fd62:	eba6 070e 	sub.w	r7, r6, lr
 801fd66:	b280      	uxth	r0, r0
 801fd68:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fd6c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fd70:	b2bf      	uxth	r7, r7
 801fd72:	1a1b      	subs	r3, r3, r0
 801fd74:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fd78:	b29b      	uxth	r3, r3
 801fd7a:	fb0a f607 	mul.w	r6, sl, r7
 801fd7e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fd82:	fb0b 6603 	mla	r6, fp, r3, r6
 801fd86:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fd8a:	fb00 6609 	mla	r6, r0, r9, r6
 801fd8e:	fb0e 6608 	mla	r6, lr, r8, r6
 801fd92:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fd96:	9600      	str	r6, [sp, #0]
 801fd98:	2e00      	cmp	r6, #0
 801fd9a:	f000 80be 	beq.w	801ff1a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fd9e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fda2:	fb0b fc0c 	mul.w	ip, fp, ip
 801fda6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fdaa:	fb0b f505 	mul.w	r5, fp, r5
 801fdae:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fdb2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fdb6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fdba:	44dc      	add	ip, fp
 801fdbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdc0:	9501      	str	r5, [sp, #4]
 801fdc2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fdc6:	9503      	str	r5, [sp, #12]
 801fdc8:	9d01      	ldr	r5, [sp, #4]
 801fdca:	9e02      	ldr	r6, [sp, #8]
 801fdcc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fdd0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fdd4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fdd8:	fb0a fc0c 	mul.w	ip, sl, ip
 801fddc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fde0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fde4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fde8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fdec:	4465      	add	r5, ip
 801fdee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fdf2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fdf6:	fb09 fc0c 	mul.w	ip, r9, ip
 801fdfa:	fb09 f904 	mul.w	r9, r9, r4
 801fdfe:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fe02:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fe06:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fe0a:	fb08 f404 	mul.w	r4, r8, r4
 801fe0e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fe12:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fe16:	fb08 f802 	mul.w	r8, r8, r2
 801fe1a:	fb0a fa01 	mul.w	sl, sl, r1
 801fe1e:	0a22      	lsrs	r2, r4, #8
 801fe20:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fe24:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fe28:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fe2c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fe30:	4414      	add	r4, r2
 801fe32:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fe36:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fe3a:	0a2d      	lsrs	r5, r5, #8
 801fe3c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fe40:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fe44:	9a03      	ldr	r2, [sp, #12]
 801fe46:	8836      	ldrh	r6, [r6, #0]
 801fe48:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fe4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fe50:	437d      	muls	r5, r7
 801fe52:	4461      	add	r1, ip
 801fe54:	0a24      	lsrs	r4, r4, #8
 801fe56:	fb02 5503 	mla	r5, r2, r3, r5
 801fe5a:	0a09      	lsrs	r1, r1, #8
 801fe5c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fe60:	fb04 540e 	mla	r4, r4, lr, r5
 801fe64:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fe68:	fb01 4100 	mla	r1, r1, r0, r4
 801fe6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe70:	0a09      	lsrs	r1, r1, #8
 801fe72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe76:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801fe7a:	fb07 f70a 	mul.w	r7, r7, sl
 801fe7e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fe82:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fe86:	fb03 7101 	mla	r1, r3, r1, r7
 801fe8a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe8e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fe92:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fe96:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801fe9a:	fb00 e101 	mla	r1, r0, r1, lr
 801fe9e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fea2:	9a00      	ldr	r2, [sp, #0]
 801fea4:	b287      	uxth	r7, r0
 801fea6:	437a      	muls	r2, r7
 801fea8:	0a09      	lsrs	r1, r1, #8
 801feaa:	1c53      	adds	r3, r2, #1
 801feac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801feb0:	4321      	orrs	r1, r4
 801feb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801feb6:	1235      	asrs	r5, r6, #8
 801feb8:	0c0a      	lsrs	r2, r1, #16
 801feba:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801febe:	b2db      	uxtb	r3, r3
 801fec0:	fb12 f207 	smulbb	r2, r2, r7
 801fec4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fec8:	fb05 2503 	mla	r5, r5, r3, r2
 801fecc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fed0:	10f2      	asrs	r2, r6, #3
 801fed2:	b2c8      	uxtb	r0, r1
 801fed4:	00f6      	lsls	r6, r6, #3
 801fed6:	fb14 f407 	smulbb	r4, r4, r7
 801feda:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fede:	b2f6      	uxtb	r6, r6
 801fee0:	fb10 f007 	smulbb	r0, r0, r7
 801fee4:	fb02 4203 	mla	r2, r2, r3, r4
 801fee8:	b2ad      	uxth	r5, r5
 801feea:	fb06 0303 	mla	r3, r6, r3, r0
 801feee:	b299      	uxth	r1, r3
 801fef0:	b294      	uxth	r4, r2
 801fef2:	1c6b      	adds	r3, r5, #1
 801fef4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fef8:	1c62      	adds	r2, r4, #1
 801fefa:	1c4b      	adds	r3, r1, #1
 801fefc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ff00:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ff04:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ff0c:	0952      	lsrs	r2, r2, #5
 801ff0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff12:	432b      	orrs	r3, r5
 801ff14:	4313      	orrs	r3, r2
 801ff16:	9a02      	ldr	r2, [sp, #8]
 801ff18:	8013      	strh	r3, [r2, #0]
 801ff1a:	b005      	add	sp, #20
 801ff1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff20:	2500      	movs	r5, #0
 801ff22:	e6e9      	b.n	801fcf8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ff24:	2100      	movs	r1, #0
 801ff26:	460d      	mov	r5, r1
 801ff28:	e6f3      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ff2a:	2100      	movs	r1, #0
 801ff2c:	e6f1      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ff2e:	4631      	mov	r1, r6
 801ff30:	e6ef      	b.n	801fd12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ff32:	2400      	movs	r4, #0
 801ff34:	e700      	b.n	801fd38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ff36:	2200      	movs	r2, #0
 801ff38:	4614      	mov	r4, r2
 801ff3a:	e70b      	b.n	801fd54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ff3c:	4602      	mov	r2, r0
 801ff3e:	4604      	mov	r4, r0
 801ff40:	e708      	b.n	801fd54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ff42:	2200      	movs	r2, #0
 801ff44:	e706      	b.n	801fd54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ff46:	4632      	mov	r2, r6
 801ff48:	e704      	b.n	801fd54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ff4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff4e:	b09f      	sub	sp, #124	; 0x7c
 801ff50:	921b      	str	r2, [sp, #108]	; 0x6c
 801ff52:	9309      	str	r3, [sp, #36]	; 0x24
 801ff54:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ff56:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ff5a:	931c      	str	r3, [sp, #112]	; 0x70
 801ff5c:	9119      	str	r1, [sp, #100]	; 0x64
 801ff5e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ff62:	901d      	str	r0, [sp, #116]	; 0x74
 801ff64:	6850      	ldr	r0, [r2, #4]
 801ff66:	6812      	ldr	r2, [r2, #0]
 801ff68:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ff6a:	fb00 1303 	mla	r3, r0, r3, r1
 801ff6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ff72:	930c      	str	r3, [sp, #48]	; 0x30
 801ff74:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ff76:	681b      	ldr	r3, [r3, #0]
 801ff78:	9312      	str	r3, [sp, #72]	; 0x48
 801ff7a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ff7c:	685e      	ldr	r6, [r3, #4]
 801ff7e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ff82:	930d      	str	r3, [sp, #52]	; 0x34
 801ff84:	3604      	adds	r6, #4
 801ff86:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ff88:	2b00      	cmp	r3, #0
 801ff8a:	dc03      	bgt.n	801ff94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ff8c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ff8e:	2b00      	cmp	r3, #0
 801ff90:	f340 8388 	ble.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ff94:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ff96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff9e:	1e48      	subs	r0, r1, #1
 801ffa0:	1e57      	subs	r7, r2, #1
 801ffa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffa4:	2b00      	cmp	r3, #0
 801ffa6:	f340 8195 	ble.w	80202d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ffaa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ffac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ffb0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ffb4:	d406      	bmi.n	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ffb6:	4584      	cmp	ip, r0
 801ffb8:	da04      	bge.n	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ffba:	2b00      	cmp	r3, #0
 801ffbc:	db02      	blt.n	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ffbe:	42bb      	cmp	r3, r7
 801ffc0:	f2c0 8189 	blt.w	80202d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801ffc4:	f11c 0c01 	adds.w	ip, ip, #1
 801ffc8:	f100 8177 	bmi.w	80202ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ffcc:	4561      	cmp	r1, ip
 801ffce:	f2c0 8174 	blt.w	80202ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ffd2:	3301      	adds	r3, #1
 801ffd4:	f100 8171 	bmi.w	80202ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ffd8:	429a      	cmp	r2, r3
 801ffda:	f2c0 816e 	blt.w	80202ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ffde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffe0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ffe2:	931a      	str	r3, [sp, #104]	; 0x68
 801ffe4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ffe6:	2b00      	cmp	r3, #0
 801ffe8:	f340 8193 	ble.w	8020312 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ffec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ffee:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fff2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fff4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801fff8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fffa:	141b      	asrs	r3, r3, #16
 801fffc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020000:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020004:	f100 81d6 	bmi.w	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020008:	f100 38ff 	add.w	r8, r0, #4294967295
 802000c:	4543      	cmp	r3, r8
 802000e:	f280 81d1 	bge.w	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020012:	f1bc 0f00 	cmp.w	ip, #0
 8020016:	f2c0 81cd 	blt.w	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802001a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802001e:	45c4      	cmp	ip, r8
 8020020:	f280 81c8 	bge.w	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020024:	b200      	sxth	r0, r0
 8020026:	fb0c 3300 	mla	r3, ip, r0, r3
 802002a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802002c:	eb04 0803 	add.w	r8, r4, r3
 8020030:	5ce3      	ldrb	r3, [r4, r3]
 8020032:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020036:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802003a:	2a00      	cmp	r2, #0
 802003c:	f000 81af 	beq.w	802039e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020040:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020044:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020048:	940e      	str	r4, [sp, #56]	; 0x38
 802004a:	0e24      	lsrs	r4, r4, #24
 802004c:	9415      	str	r4, [sp, #84]	; 0x54
 802004e:	b179      	cbz	r1, 8020070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020050:	eb08 0c00 	add.w	ip, r8, r0
 8020054:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020058:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802005c:	900a      	str	r0, [sp, #40]	; 0x28
 802005e:	0e00      	lsrs	r0, r0, #24
 8020060:	9013      	str	r0, [sp, #76]	; 0x4c
 8020062:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020066:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802006a:	900f      	str	r0, [sp, #60]	; 0x3c
 802006c:	0e00      	lsrs	r0, r0, #24
 802006e:	9016      	str	r0, [sp, #88]	; 0x58
 8020070:	b292      	uxth	r2, r2
 8020072:	b289      	uxth	r1, r1
 8020074:	fb02 f901 	mul.w	r9, r2, r1
 8020078:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802007c:	0112      	lsls	r2, r2, #4
 802007e:	eba2 0809 	sub.w	r8, r2, r9
 8020082:	b289      	uxth	r1, r1
 8020084:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020088:	9815      	ldr	r0, [sp, #84]	; 0x54
 802008a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802008c:	fa1f f888 	uxth.w	r8, r8
 8020090:	1a52      	subs	r2, r2, r1
 8020092:	b292      	uxth	r2, r2
 8020094:	fb08 f000 	mul.w	r0, r8, r0
 8020098:	fb02 000e 	mla	r0, r2, lr, r0
 802009c:	fb01 0004 	mla	r0, r1, r4, r0
 80200a0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80200a2:	fb09 0004 	mla	r0, r9, r4, r0
 80200a6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80200aa:	2800      	cmp	r0, #0
 80200ac:	f000 80fa 	beq.w	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80200b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80200b4:	d01b      	beq.n	80200ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80200b6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80200ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80200be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80200c2:	fb0e fe03 	mul.w	lr, lr, r3
 80200c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80200ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80200d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80200d6:	4453      	add	r3, sl
 80200d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80200dc:	0a1b      	lsrs	r3, r3, #8
 80200de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80200ea:	ea43 030c 	orr.w	r3, r3, ip
 80200ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80200f0:	2cff      	cmp	r4, #255	; 0xff
 80200f2:	d021      	beq.n	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80200f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80200f6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80200fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80200fc:	fb04 fb0b 	mul.w	fp, r4, fp
 8020100:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020102:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020106:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020108:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802010c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020110:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020114:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020118:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802011c:	44de      	add	lr, fp
 802011e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020122:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020126:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802012a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802012e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020132:	ea4e 040a 	orr.w	r4, lr, sl
 8020136:	940e      	str	r4, [sp, #56]	; 0x38
 8020138:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802013a:	2cff      	cmp	r4, #255	; 0xff
 802013c:	d021      	beq.n	8020182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802013e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020140:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020144:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020146:	fb04 fb0b 	mul.w	fp, r4, fp
 802014a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802014c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020150:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020152:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020156:	fb04 fa0a 	mul.w	sl, r4, sl
 802015a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802015e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020162:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020166:	44de      	add	lr, fp
 8020168:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802016c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020174:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020178:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802017c:	ea4e 040a 	orr.w	r4, lr, sl
 8020180:	940a      	str	r4, [sp, #40]	; 0x28
 8020182:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020184:	2cff      	cmp	r4, #255	; 0xff
 8020186:	d021      	beq.n	80201cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020188:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802018a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802018e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020190:	fb04 fb0b 	mul.w	fp, r4, fp
 8020194:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020196:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802019a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802019c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80201a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80201a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80201ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80201b0:	44de      	add	lr, fp
 80201b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80201b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80201ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80201c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201c6:	ea4e 040a 	orr.w	r4, lr, sl
 80201ca:	940f      	str	r4, [sp, #60]	; 0x3c
 80201cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80201ce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80201d4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80201d8:	fb08 fc0c 	mul.w	ip, r8, ip
 80201dc:	fb02 cc0e 	mla	ip, r2, lr, ip
 80201e0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80201e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80201e6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80201ea:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80201ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80201f0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80201f4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80201f8:	fb08 f80e 	mul.w	r8, r8, lr
 80201fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020200:	fb02 8303 	mla	r3, r2, r3, r8
 8020204:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020206:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020208:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802020c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802020e:	fb01 330a 	mla	r3, r1, sl, r3
 8020212:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020216:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020218:	fb09 3901 	mla	r9, r9, r1, r3
 802021c:	4342      	muls	r2, r0
 802021e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020222:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020226:	883b      	ldrh	r3, [r7, #0]
 8020228:	1c50      	adds	r0, r2, #1
 802022a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802022e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020232:	ea4c 0c09 	orr.w	ip, ip, r9
 8020236:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802023a:	1219      	asrs	r1, r3, #8
 802023c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020240:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020244:	b2c0      	uxtb	r0, r0
 8020246:	fb12 f204 	smulbb	r2, r2, r4
 802024a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802024e:	fb01 2100 	mla	r1, r1, r0, r2
 8020252:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020256:	10da      	asrs	r2, r3, #3
 8020258:	fa5f fc8c 	uxtb.w	ip, ip
 802025c:	00db      	lsls	r3, r3, #3
 802025e:	fb1c fc04 	smulbb	ip, ip, r4
 8020262:	b2db      	uxtb	r3, r3
 8020264:	b289      	uxth	r1, r1
 8020266:	fb03 c300 	mla	r3, r3, r0, ip
 802026a:	fa1f fc83 	uxth.w	ip, r3
 802026e:	1c4b      	adds	r3, r1, #1
 8020270:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020274:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020278:	fb1e fe04 	smulbb	lr, lr, r4
 802027c:	f10c 0301 	add.w	r3, ip, #1
 8020280:	fb02 e200 	mla	r2, r2, r0, lr
 8020284:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020288:	b292      	uxth	r2, r2
 802028a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802028e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020292:	430b      	orrs	r3, r1
 8020294:	1c51      	adds	r1, r2, #1
 8020296:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802029a:	0952      	lsrs	r2, r2, #5
 802029c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80202a0:	4313      	orrs	r3, r2
 80202a2:	803b      	strh	r3, [r7, #0]
 80202a4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80202a6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80202a8:	441a      	add	r2, r3
 80202aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80202ac:	9229      	str	r2, [sp, #164]	; 0xa4
 80202ae:	441d      	add	r5, r3
 80202b0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80202b2:	3b01      	subs	r3, #1
 80202b4:	3702      	adds	r7, #2
 80202b6:	931a      	str	r3, [sp, #104]	; 0x68
 80202b8:	e694      	b.n	801ffe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80202ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80202bc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80202be:	441c      	add	r4, r3
 80202c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80202c2:	9429      	str	r4, [sp, #164]	; 0xa4
 80202c4:	441d      	add	r5, r3
 80202c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80202c8:	3b01      	subs	r3, #1
 80202ca:	9309      	str	r3, [sp, #36]	; 0x24
 80202cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80202ce:	3302      	adds	r3, #2
 80202d0:	930c      	str	r3, [sp, #48]	; 0x30
 80202d2:	e666      	b.n	801ffa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80202d4:	d024      	beq.n	8020320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80202d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80202d8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80202da:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80202dc:	3b01      	subs	r3, #1
 80202de:	fb00 4003 	mla	r0, r0, r3, r4
 80202e2:	1400      	asrs	r0, r0, #16
 80202e4:	f53f ae7b 	bmi.w	801ffde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80202e8:	3901      	subs	r1, #1
 80202ea:	4288      	cmp	r0, r1
 80202ec:	f6bf ae77 	bge.w	801ffde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80202f0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80202f2:	fb01 5303 	mla	r3, r1, r3, r5
 80202f6:	141b      	asrs	r3, r3, #16
 80202f8:	f53f ae71 	bmi.w	801ffde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80202fc:	3a01      	subs	r2, #1
 80202fe:	4293      	cmp	r3, r2
 8020300:	f6bf ae6d 	bge.w	801ffde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020304:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020308:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802030c:	f1bb 0f00 	cmp.w	fp, #0
 8020310:	dc70      	bgt.n	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020314:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020318:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802031a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802031e:	930c      	str	r3, [sp, #48]	; 0x30
 8020320:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020322:	2b00      	cmp	r3, #0
 8020324:	f340 81be 	ble.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020328:	ee30 0a04 	vadd.f32	s0, s0, s8
 802032c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020330:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020334:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020336:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802033a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802033e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020342:	eef0 6a62 	vmov.f32	s13, s5
 8020346:	ee61 7a27 	vmul.f32	s15, s2, s15
 802034a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802034e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020352:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020356:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802035a:	eef0 6a43 	vmov.f32	s13, s6
 802035e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020362:	ee12 2a90 	vmov	r2, s5
 8020366:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802036a:	fb92 f3f3 	sdiv	r3, r2, r3
 802036e:	ee13 2a10 	vmov	r2, s6
 8020372:	932b      	str	r3, [sp, #172]	; 0xac
 8020374:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020376:	fb92 f3f3 	sdiv	r3, r2, r3
 802037a:	932c      	str	r3, [sp, #176]	; 0xb0
 802037c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802037e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020380:	3b01      	subs	r3, #1
 8020382:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020386:	9319      	str	r3, [sp, #100]	; 0x64
 8020388:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802038a:	bf08      	it	eq
 802038c:	4613      	moveq	r3, r2
 802038e:	ee16 5a90 	vmov	r5, s13
 8020392:	9309      	str	r3, [sp, #36]	; 0x24
 8020394:	eeb0 3a67 	vmov.f32	s6, s15
 8020398:	eef0 2a47 	vmov.f32	s5, s14
 802039c:	e5f3      	b.n	801ff86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802039e:	2900      	cmp	r1, #0
 80203a0:	f43f ae66 	beq.w	8020070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80203a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80203a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80203ac:	900a      	str	r0, [sp, #40]	; 0x28
 80203ae:	0e00      	lsrs	r0, r0, #24
 80203b0:	9013      	str	r0, [sp, #76]	; 0x4c
 80203b2:	e65d      	b.n	8020070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80203b4:	f113 0801 	adds.w	r8, r3, #1
 80203b8:	f53f af74 	bmi.w	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80203bc:	4540      	cmp	r0, r8
 80203be:	f6ff af71 	blt.w	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80203c2:	f11c 0801 	adds.w	r8, ip, #1
 80203c6:	f53f af6d 	bmi.w	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80203ca:	45c6      	cmp	lr, r8
 80203cc:	f6ff af6a 	blt.w	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80203d0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80203d2:	9302      	str	r3, [sp, #8]
 80203d4:	b200      	sxth	r0, r0
 80203d6:	fa0f f38e 	sxth.w	r3, lr
 80203da:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80203de:	e9cd c203 	strd	ip, r2, [sp, #12]
 80203e2:	9301      	str	r3, [sp, #4]
 80203e4:	9000      	str	r0, [sp, #0]
 80203e6:	4633      	mov	r3, r6
 80203e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80203ea:	981d      	ldr	r0, [sp, #116]	; 0x74
 80203ec:	4639      	mov	r1, r7
 80203ee:	f7ff fc62 	bl	801fcb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80203f2:	e757      	b.n	80202a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80203f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203f6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80203f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80203fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80203fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020402:	1427      	asrs	r7, r4, #16
 8020404:	142b      	asrs	r3, r5, #16
 8020406:	fb01 7303 	mla	r3, r1, r3, r7
 802040a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802040c:	18e7      	adds	r7, r4, r3
 802040e:	5ce3      	ldrb	r3, [r4, r3]
 8020410:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020414:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020418:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802041c:	2a00      	cmp	r2, #0
 802041e:	f000 8137 	beq.w	8020690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020422:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020426:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802042a:	9410      	str	r4, [sp, #64]	; 0x40
 802042c:	0e24      	lsrs	r4, r4, #24
 802042e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020430:	b170      	cbz	r0, 8020450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020432:	eb07 0e01 	add.w	lr, r7, r1
 8020436:	5c79      	ldrb	r1, [r7, r1]
 8020438:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802043c:	910b      	str	r1, [sp, #44]	; 0x2c
 802043e:	0e09      	lsrs	r1, r1, #24
 8020440:	9114      	str	r1, [sp, #80]	; 0x50
 8020442:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020446:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802044a:	9111      	str	r1, [sp, #68]	; 0x44
 802044c:	0e09      	lsrs	r1, r1, #24
 802044e:	9118      	str	r1, [sp, #96]	; 0x60
 8020450:	b292      	uxth	r2, r2
 8020452:	b280      	uxth	r0, r0
 8020454:	fb02 f800 	mul.w	r8, r2, r0
 8020458:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802045c:	0112      	lsls	r2, r2, #4
 802045e:	eba2 0e08 	sub.w	lr, r2, r8
 8020462:	b280      	uxth	r0, r0
 8020464:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020468:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802046a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802046c:	fa1f fe8e 	uxth.w	lr, lr
 8020470:	1a12      	subs	r2, r2, r0
 8020472:	b292      	uxth	r2, r2
 8020474:	fb0e f101 	mul.w	r1, lr, r1
 8020478:	fb02 110c 	mla	r1, r2, ip, r1
 802047c:	fb00 1104 	mla	r1, r0, r4, r1
 8020480:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020482:	fb08 1104 	mla	r1, r8, r4, r1
 8020486:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802048a:	2900      	cmp	r1, #0
 802048c:	f000 80f5 	beq.w	802067a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020490:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020494:	d019      	beq.n	80204ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020496:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802049a:	fb0c fa0a 	mul.w	sl, ip, sl
 802049e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80204a2:	fb0c fc03 	mul.w	ip, ip, r3
 80204a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80204aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80204b2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80204b6:	4453      	add	r3, sl
 80204b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80204bc:	0a1b      	lsrs	r3, r3, #8
 80204be:	0a3f      	lsrs	r7, r7, #8
 80204c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80204c8:	433b      	orrs	r3, r7
 80204ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80204cc:	2cff      	cmp	r4, #255	; 0xff
 80204ce:	d020      	beq.n	8020512 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80204d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80204d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80204d6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80204d8:	4367      	muls	r7, r4
 80204da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80204dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80204e0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80204e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80204e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80204ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80204ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204f2:	44bc      	add	ip, r7
 80204f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020500:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020504:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802050c:	ea4c 040a 	orr.w	r4, ip, sl
 8020510:	9410      	str	r4, [sp, #64]	; 0x40
 8020512:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020514:	2cff      	cmp	r4, #255	; 0xff
 8020516:	d020      	beq.n	802055a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020518:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802051a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802051e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020520:	4367      	muls	r7, r4
 8020522:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020524:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020528:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802052a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802052e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020532:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020536:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802053a:	44bc      	add	ip, r7
 802053c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020540:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020548:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802054c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020550:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020554:	ea4c 040a 	orr.w	r4, ip, sl
 8020558:	940b      	str	r4, [sp, #44]	; 0x2c
 802055a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802055c:	2cff      	cmp	r4, #255	; 0xff
 802055e:	d020      	beq.n	80205a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020560:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020562:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020566:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020568:	4367      	muls	r7, r4
 802056a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802056c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020570:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020572:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020576:	fb04 fa0a 	mul.w	sl, r4, sl
 802057a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802057e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020582:	44bc      	add	ip, r7
 8020584:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020588:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802058c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020590:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020594:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020598:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802059c:	ea4c 040a 	orr.w	r4, ip, sl
 80205a0:	9411      	str	r4, [sp, #68]	; 0x44
 80205a2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80205a4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80205a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80205ae:	fb0e f707 	mul.w	r7, lr, r7
 80205b2:	fb02 770c 	mla	r7, r2, ip, r7
 80205b6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80205ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80205bc:	fb00 770c 	mla	r7, r0, ip, r7
 80205c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80205c4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80205c6:	fb08 770c 	mla	r7, r8, ip, r7
 80205ca:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80205ce:	fb0e fe0c 	mul.w	lr, lr, ip
 80205d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80205d6:	fb02 e303 	mla	r3, r2, r3, lr
 80205da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80205dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80205de:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80205e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80205e4:	fb00 330a 	mla	r3, r0, sl, r3
 80205e8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80205ec:	fb08 3c0c 	mla	ip, r8, ip, r3
 80205f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80205f2:	f8b9 0000 	ldrh.w	r0, [r9]
 80205f6:	434b      	muls	r3, r1
 80205f8:	0a3f      	lsrs	r7, r7, #8
 80205fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205fe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020602:	1c59      	adds	r1, r3, #1
 8020604:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020608:	ea47 070c 	orr.w	r7, r7, ip
 802060c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020610:	1202      	asrs	r2, r0, #8
 8020612:	0c3b      	lsrs	r3, r7, #16
 8020614:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020618:	b2c9      	uxtb	r1, r1
 802061a:	fb13 f304 	smulbb	r3, r3, r4
 802061e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020622:	fb02 3201 	mla	r2, r2, r1, r3
 8020626:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802062a:	10c3      	asrs	r3, r0, #3
 802062c:	b2ff      	uxtb	r7, r7
 802062e:	00c0      	lsls	r0, r0, #3
 8020630:	b292      	uxth	r2, r2
 8020632:	fb1c fc04 	smulbb	ip, ip, r4
 8020636:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802063a:	b2c0      	uxtb	r0, r0
 802063c:	fb17 f704 	smulbb	r7, r7, r4
 8020640:	fb03 c301 	mla	r3, r3, r1, ip
 8020644:	fb00 7001 	mla	r0, r0, r1, r7
 8020648:	f102 0c01 	add.w	ip, r2, #1
 802064c:	b280      	uxth	r0, r0
 802064e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020652:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020656:	1c42      	adds	r2, r0, #1
 8020658:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802065c:	b29b      	uxth	r3, r3
 802065e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020662:	ea42 020c 	orr.w	r2, r2, ip
 8020666:	f103 0c01 	add.w	ip, r3, #1
 802066a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802066e:	095b      	lsrs	r3, r3, #5
 8020670:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020674:	431a      	orrs	r2, r3
 8020676:	f8a9 2000 	strh.w	r2, [r9]
 802067a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802067c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802067e:	441a      	add	r2, r3
 8020680:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020682:	9229      	str	r2, [sp, #164]	; 0xa4
 8020684:	f109 0902 	add.w	r9, r9, #2
 8020688:	441d      	add	r5, r3
 802068a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802068e:	e63d      	b.n	802030c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020690:	2800      	cmp	r0, #0
 8020692:	f43f aedd 	beq.w	8020450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020696:	5c79      	ldrb	r1, [r7, r1]
 8020698:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802069c:	910b      	str	r1, [sp, #44]	; 0x2c
 802069e:	0e09      	lsrs	r1, r1, #24
 80206a0:	9114      	str	r1, [sp, #80]	; 0x50
 80206a2:	e6d5      	b.n	8020450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80206a4:	b01f      	add	sp, #124	; 0x7c
 80206a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080206aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80206aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206ae:	b089      	sub	sp, #36	; 0x24
 80206b0:	9101      	str	r1, [sp, #4]
 80206b2:	9801      	ldr	r0, [sp, #4]
 80206b4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80206b8:	8800      	ldrh	r0, [r0, #0]
 80206ba:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80206be:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80206c2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80206c6:	1206      	asrs	r6, r0, #8
 80206c8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80206cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80206d0:	9602      	str	r6, [sp, #8]
 80206d2:	10c6      	asrs	r6, r0, #3
 80206d4:	00c0      	lsls	r0, r0, #3
 80206d6:	b2c0      	uxtb	r0, r0
 80206d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80206dc:	9004      	str	r0, [sp, #16]
 80206de:	2f00      	cmp	r7, #0
 80206e0:	fb07 100c 	mla	r0, r7, ip, r1
 80206e4:	9603      	str	r6, [sp, #12]
 80206e6:	eb02 0e00 	add.w	lr, r2, r0
 80206ea:	f2c0 810a 	blt.w	8020902 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80206ee:	45b8      	cmp	r8, r7
 80206f0:	f340 8107 	ble.w	8020902 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80206f4:	2900      	cmp	r1, #0
 80206f6:	f2c0 8102 	blt.w	80208fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80206fa:	458c      	cmp	ip, r1
 80206fc:	f340 80ff 	ble.w	80208fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020700:	5c12      	ldrb	r2, [r2, r0]
 8020702:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020706:	1c4a      	adds	r2, r1, #1
 8020708:	f100 80fe 	bmi.w	8020908 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802070c:	4594      	cmp	ip, r2
 802070e:	f340 80fb 	ble.w	8020908 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020712:	2d00      	cmp	r5, #0
 8020714:	f000 80fa 	beq.w	802090c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020718:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802071c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020720:	3701      	adds	r7, #1
 8020722:	f100 80f7 	bmi.w	8020914 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020726:	45b8      	cmp	r8, r7
 8020728:	f340 80f4 	ble.w	8020914 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802072c:	2c00      	cmp	r4, #0
 802072e:	f000 80f4 	beq.w	802091a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020732:	2900      	cmp	r1, #0
 8020734:	eb0e 020c 	add.w	r2, lr, ip
 8020738:	f2c0 80ea 	blt.w	8020910 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802073c:	458c      	cmp	ip, r1
 802073e:	f340 80e7 	ble.w	8020910 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020742:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020746:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802074a:	3101      	adds	r1, #1
 802074c:	f100 80e8 	bmi.w	8020920 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020750:	458c      	cmp	ip, r1
 8020752:	f340 80e5 	ble.w	8020920 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020756:	2d00      	cmp	r5, #0
 8020758:	f000 80e4 	beq.w	8020924 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802075c:	7852      	ldrb	r2, [r2, #1]
 802075e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020762:	0e0b      	lsrs	r3, r1, #24
 8020764:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020768:	9300      	str	r3, [sp, #0]
 802076a:	b2a4      	uxth	r4, r4
 802076c:	b2ab      	uxth	r3, r5
 802076e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020772:	fb03 f904 	mul.w	r9, r3, r4
 8020776:	fb0a f505 	mul.w	r5, sl, r5
 802077a:	011b      	lsls	r3, r3, #4
 802077c:	eba3 0e09 	sub.w	lr, r3, r9
 8020780:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020784:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020788:	0a28      	lsrs	r0, r5, #8
 802078a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802078e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020792:	4405      	add	r5, r0
 8020794:	0a2d      	lsrs	r5, r5, #8
 8020796:	fb0a f303 	mul.w	r3, sl, r3
 802079a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 802079e:	9005      	str	r0, [sp, #20]
 80207a0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80207a4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80207a8:	0a1b      	lsrs	r3, r3, #8
 80207aa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80207ae:	9306      	str	r3, [sp, #24]
 80207b0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80207b4:	fb0b f303 	mul.w	r3, fp, r3
 80207b8:	0a1d      	lsrs	r5, r3, #8
 80207ba:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80207be:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80207c2:	fb0b f606 	mul.w	r6, fp, r6
 80207c6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80207ca:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80207ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80207d2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80207d6:	fb08 f707 	mul.w	r7, r8, r7
 80207da:	441d      	add	r5, r3
 80207dc:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80207e0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80207e4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80207e8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80207ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80207f0:	0a1b      	lsrs	r3, r3, #8
 80207f2:	9307      	str	r3, [sp, #28]
 80207f4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80207f8:	0e0b      	lsrs	r3, r1, #24
 80207fa:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80207fe:	435f      	muls	r7, r3
 8020800:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020804:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020808:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802080c:	4460      	add	r0, ip
 802080e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020812:	b2a4      	uxth	r4, r4
 8020814:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020818:	0a2d      	lsrs	r5, r5, #8
 802081a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802081e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020822:	fa1f fe8e 	uxth.w	lr, lr
 8020826:	4359      	muls	r1, r3
 8020828:	1b12      	subs	r2, r2, r4
 802082a:	9b05      	ldr	r3, [sp, #20]
 802082c:	44bc      	add	ip, r7
 802082e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020832:	b292      	uxth	r2, r2
 8020834:	fb05 f50e 	mul.w	r5, r5, lr
 8020838:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802083c:	fb03 5502 	mla	r5, r3, r2, r5
 8020840:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020844:	9b06      	ldr	r3, [sp, #24]
 8020846:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802084a:	0a36      	lsrs	r6, r6, #8
 802084c:	0a00      	lsrs	r0, r0, #8
 802084e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020852:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020856:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802085a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802085e:	fb00 5504 	mla	r5, r0, r4, r5
 8020862:	fb0e f606 	mul.w	r6, lr, r6
 8020866:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802086a:	0a09      	lsrs	r1, r1, #8
 802086c:	9b07      	ldr	r3, [sp, #28]
 802086e:	fb02 6000 	mla	r0, r2, r0, r6
 8020872:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020876:	fb09 0001 	mla	r0, r9, r1, r0
 802087a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802087e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020882:	fb04 0003 	mla	r0, r4, r3, r0
 8020886:	fb02 e20a 	mla	r2, r2, sl, lr
 802088a:	9b00      	ldr	r3, [sp, #0]
 802088c:	fb04 2408 	mla	r4, r4, r8, r2
 8020890:	fb09 4903 	mla	r9, r9, r3, r4
 8020894:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020898:	9b02      	ldr	r3, [sp, #8]
 802089a:	9a04      	ldr	r2, [sp, #16]
 802089c:	fa5f f989 	uxtb.w	r9, r9
 80208a0:	fb03 f109 	mul.w	r1, r3, r9
 80208a4:	9b03      	ldr	r3, [sp, #12]
 80208a6:	0a2d      	lsrs	r5, r5, #8
 80208a8:	0a00      	lsrs	r0, r0, #8
 80208aa:	fb03 f309 	mul.w	r3, r3, r9
 80208ae:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80208b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80208b6:	4305      	orrs	r5, r0
 80208b8:	fb02 f909 	mul.w	r9, r2, r9
 80208bc:	1c58      	adds	r0, r3, #1
 80208be:	1c4a      	adds	r2, r1, #1
 80208c0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80208c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80208c8:	0a2b      	lsrs	r3, r5, #8
 80208ca:	0c2a      	lsrs	r2, r5, #16
 80208cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80208d0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80208d4:	00db      	lsls	r3, r3, #3
 80208d6:	0212      	lsls	r2, r2, #8
 80208d8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80208dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80208e0:	4313      	orrs	r3, r2
 80208e2:	f109 0201 	add.w	r2, r9, #1
 80208e6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80208ea:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80208ee:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80208f2:	431d      	orrs	r5, r3
 80208f4:	9b01      	ldr	r3, [sp, #4]
 80208f6:	801d      	strh	r5, [r3, #0]
 80208f8:	b009      	add	sp, #36	; 0x24
 80208fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208fe:	2000      	movs	r0, #0
 8020900:	e701      	b.n	8020706 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020902:	2600      	movs	r6, #0
 8020904:	4630      	mov	r0, r6
 8020906:	e70b      	b.n	8020720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020908:	2600      	movs	r6, #0
 802090a:	e709      	b.n	8020720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802090c:	462e      	mov	r6, r5
 802090e:	e707      	b.n	8020720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020910:	2700      	movs	r7, #0
 8020912:	e71a      	b.n	802074a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020914:	2100      	movs	r1, #0
 8020916:	460f      	mov	r7, r1
 8020918:	e723      	b.n	8020762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802091a:	4621      	mov	r1, r4
 802091c:	4627      	mov	r7, r4
 802091e:	e720      	b.n	8020762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020920:	2100      	movs	r1, #0
 8020922:	e71e      	b.n	8020762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020924:	4629      	mov	r1, r5
 8020926:	e71c      	b.n	8020762 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020928 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802092c:	b09b      	sub	sp, #108	; 0x6c
 802092e:	9218      	str	r2, [sp, #96]	; 0x60
 8020930:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020932:	9116      	str	r1, [sp, #88]	; 0x58
 8020934:	9307      	str	r3, [sp, #28]
 8020936:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802093a:	9019      	str	r0, [sp, #100]	; 0x64
 802093c:	6850      	ldr	r0, [r2, #4]
 802093e:	6812      	ldr	r2, [r2, #0]
 8020940:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020942:	fb00 1303 	mla	r3, r0, r3, r1
 8020946:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802094a:	930a      	str	r3, [sp, #40]	; 0x28
 802094c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802094e:	681b      	ldr	r3, [r3, #0]
 8020950:	930f      	str	r3, [sp, #60]	; 0x3c
 8020952:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020954:	685e      	ldr	r6, [r3, #4]
 8020956:	3604      	adds	r6, #4
 8020958:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802095a:	2b00      	cmp	r3, #0
 802095c:	dc03      	bgt.n	8020966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802095e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020960:	2b00      	cmp	r3, #0
 8020962:	f340 8373 	ble.w	802104c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020966:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020968:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802096c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020970:	1e48      	subs	r0, r1, #1
 8020972:	1e57      	subs	r7, r2, #1
 8020974:	9b07      	ldr	r3, [sp, #28]
 8020976:	2b00      	cmp	r3, #0
 8020978:	f340 8190 	ble.w	8020c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802097c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802097e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020982:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020986:	d406      	bmi.n	8020996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020988:	4584      	cmp	ip, r0
 802098a:	da04      	bge.n	8020996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802098c:	2b00      	cmp	r3, #0
 802098e:	db02      	blt.n	8020996 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020990:	42bb      	cmp	r3, r7
 8020992:	f2c0 8184 	blt.w	8020c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020996:	f11c 0c01 	adds.w	ip, ip, #1
 802099a:	f100 8172 	bmi.w	8020c82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802099e:	4561      	cmp	r1, ip
 80209a0:	f2c0 816f 	blt.w	8020c82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80209a4:	3301      	adds	r3, #1
 80209a6:	f100 816c 	bmi.w	8020c82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80209aa:	429a      	cmp	r2, r3
 80209ac:	f2c0 8169 	blt.w	8020c82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80209b0:	9b07      	ldr	r3, [sp, #28]
 80209b2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80209b4:	9317      	str	r3, [sp, #92]	; 0x5c
 80209b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80209b8:	2b00      	cmp	r3, #0
 80209ba:	f340 818e 	ble.w	8020cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80209be:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80209c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80209c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209c6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80209ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80209cc:	141b      	asrs	r3, r3, #16
 80209ce:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80209d2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80209d6:	f100 81d1 	bmi.w	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80209da:	f101 38ff 	add.w	r8, r1, #4294967295
 80209de:	4543      	cmp	r3, r8
 80209e0:	f280 81cc 	bge.w	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80209e4:	f1bc 0f00 	cmp.w	ip, #0
 80209e8:	f2c0 81c8 	blt.w	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80209ec:	f10e 38ff 	add.w	r8, lr, #4294967295
 80209f0:	45c4      	cmp	ip, r8
 80209f2:	f280 81c3 	bge.w	8020d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80209f6:	b209      	sxth	r1, r1
 80209f8:	fb0c 3301 	mla	r3, ip, r1, r3
 80209fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80209fe:	eb04 0803 	add.w	r8, r4, r3
 8020a02:	5ce3      	ldrb	r3, [r4, r3]
 8020a04:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020a08:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020a0c:	2a00      	cmp	r2, #0
 8020a0e:	f000 81aa 	beq.w	8020d66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020a12:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020a16:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020a1a:	940b      	str	r4, [sp, #44]	; 0x2c
 8020a1c:	0e24      	lsrs	r4, r4, #24
 8020a1e:	9412      	str	r4, [sp, #72]	; 0x48
 8020a20:	b178      	cbz	r0, 8020a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020a22:	eb08 0c01 	add.w	ip, r8, r1
 8020a26:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020a2a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a2e:	9108      	str	r1, [sp, #32]
 8020a30:	0e09      	lsrs	r1, r1, #24
 8020a32:	9110      	str	r1, [sp, #64]	; 0x40
 8020a34:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020a38:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a3c:	910c      	str	r1, [sp, #48]	; 0x30
 8020a3e:	0e09      	lsrs	r1, r1, #24
 8020a40:	9113      	str	r1, [sp, #76]	; 0x4c
 8020a42:	b292      	uxth	r2, r2
 8020a44:	b280      	uxth	r0, r0
 8020a46:	fb02 f900 	mul.w	r9, r2, r0
 8020a4a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020a4e:	0112      	lsls	r2, r2, #4
 8020a50:	eba2 0809 	sub.w	r8, r2, r9
 8020a54:	b280      	uxth	r0, r0
 8020a56:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020a5a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020a5c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020a5e:	fa1f f888 	uxth.w	r8, r8
 8020a62:	1a12      	subs	r2, r2, r0
 8020a64:	b292      	uxth	r2, r2
 8020a66:	fb08 f101 	mul.w	r1, r8, r1
 8020a6a:	fb02 110e 	mla	r1, r2, lr, r1
 8020a6e:	fb00 1104 	mla	r1, r0, r4, r1
 8020a72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020a74:	fb09 1104 	mla	r1, r9, r4, r1
 8020a78:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020a7c:	2900      	cmp	r1, #0
 8020a7e:	f000 80f5 	beq.w	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020a82:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020a86:	d01b      	beq.n	8020ac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020a88:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020a8c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020a90:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a94:	fb0e fe03 	mul.w	lr, lr, r3
 8020a98:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020a9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020aa0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020aa4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020aa8:	4453      	add	r3, sl
 8020aaa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020aae:	0a1b      	lsrs	r3, r3, #8
 8020ab0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ab4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020ab8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020abc:	ea43 030c 	orr.w	r3, r3, ip
 8020ac0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ac2:	2cff      	cmp	r4, #255	; 0xff
 8020ac4:	d021      	beq.n	8020b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020ac6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ac8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020acc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ace:	fb04 fb0b 	mul.w	fp, r4, fp
 8020ad2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ad4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ad8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ada:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ade:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ae2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ae6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020aea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020aee:	44de      	add	lr, fp
 8020af0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020af4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020af8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020afc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b04:	ea4e 040a 	orr.w	r4, lr, sl
 8020b08:	940b      	str	r4, [sp, #44]	; 0x2c
 8020b0a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b0c:	2cff      	cmp	r4, #255	; 0xff
 8020b0e:	d021      	beq.n	8020b54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020b10:	9c08      	ldr	r4, [sp, #32]
 8020b12:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020b16:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b18:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b1c:	9c08      	ldr	r4, [sp, #32]
 8020b1e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020b24:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b28:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b30:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b34:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b38:	44de      	add	lr, fp
 8020b3a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b4e:	ea4e 040a 	orr.w	r4, lr, sl
 8020b52:	9408      	str	r4, [sp, #32]
 8020b54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b56:	2cff      	cmp	r4, #255	; 0xff
 8020b58:	d021      	beq.n	8020b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020b5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020b5c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020b60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b62:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020b68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b72:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b7e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b82:	44de      	add	lr, fp
 8020b84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b98:	ea4e 040a 	orr.w	r4, lr, sl
 8020b9c:	940c      	str	r4, [sp, #48]	; 0x30
 8020b9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ba0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020ba4:	9c08      	ldr	r4, [sp, #32]
 8020ba6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020baa:	fb08 fc0c 	mul.w	ip, r8, ip
 8020bae:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020bb2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020bb6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020bb8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020bbc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020bc0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020bc2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020bc6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020bca:	fb08 f80e 	mul.w	r8, r8, lr
 8020bce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bd2:	fb02 8303 	mla	r3, r2, r3, r8
 8020bd6:	9a08      	ldr	r2, [sp, #32]
 8020bd8:	f8b7 8000 	ldrh.w	r8, [r7]
 8020bdc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020be0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020be2:	fb00 330a 	mla	r3, r0, sl, r3
 8020be6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020bea:	fb09 3900 	mla	r9, r9, r0, r3
 8020bee:	43c9      	mvns	r1, r1
 8020bf0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020bf4:	fa5f fe81 	uxtb.w	lr, r1
 8020bf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bfc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020c00:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020c04:	fb02 f20e 	mul.w	r2, r2, lr
 8020c08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c0c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020c10:	ea4c 0c09 	orr.w	ip, ip, r9
 8020c14:	1c53      	adds	r3, r2, #1
 8020c16:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020c1a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020c1e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020c22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020c26:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020c2a:	4a63      	ldr	r2, [pc, #396]	; (8020db8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020c2c:	fb00 f00e 	mul.w	r0, r0, lr
 8020c30:	b2db      	uxtb	r3, r3
 8020c32:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020c36:	1c43      	adds	r3, r0, #1
 8020c38:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020c3c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020c40:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020c44:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020c48:	b2c9      	uxtb	r1, r1
 8020c4a:	00db      	lsls	r3, r3, #3
 8020c4c:	fb01 f10e 	mul.w	r1, r1, lr
 8020c50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c54:	4313      	orrs	r3, r2
 8020c56:	1c4a      	adds	r2, r1, #1
 8020c58:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c5c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020c60:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020c64:	ea4c 0c03 	orr.w	ip, ip, r3
 8020c68:	f8a7 c000 	strh.w	ip, [r7]
 8020c6c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020c6e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020c70:	441a      	add	r2, r3
 8020c72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c74:	9225      	str	r2, [sp, #148]	; 0x94
 8020c76:	441d      	add	r5, r3
 8020c78:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020c7a:	3b01      	subs	r3, #1
 8020c7c:	3702      	adds	r7, #2
 8020c7e:	9317      	str	r3, [sp, #92]	; 0x5c
 8020c80:	e699      	b.n	80209b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020c82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020c84:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020c86:	441c      	add	r4, r3
 8020c88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c8a:	9425      	str	r4, [sp, #148]	; 0x94
 8020c8c:	441d      	add	r5, r3
 8020c8e:	9b07      	ldr	r3, [sp, #28]
 8020c90:	3b01      	subs	r3, #1
 8020c92:	9307      	str	r3, [sp, #28]
 8020c94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c96:	3302      	adds	r3, #2
 8020c98:	930a      	str	r3, [sp, #40]	; 0x28
 8020c9a:	e66b      	b.n	8020974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020c9c:	d024      	beq.n	8020ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020c9e:	9b07      	ldr	r3, [sp, #28]
 8020ca0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020ca2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020ca4:	3b01      	subs	r3, #1
 8020ca6:	fb00 4003 	mla	r0, r0, r3, r4
 8020caa:	1400      	asrs	r0, r0, #16
 8020cac:	f53f ae80 	bmi.w	80209b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020cb0:	3901      	subs	r1, #1
 8020cb2:	4288      	cmp	r0, r1
 8020cb4:	f6bf ae7c 	bge.w	80209b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020cb8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020cba:	fb01 5303 	mla	r3, r1, r3, r5
 8020cbe:	141b      	asrs	r3, r3, #16
 8020cc0:	f53f ae76 	bmi.w	80209b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020cc4:	3a01      	subs	r2, #1
 8020cc6:	4293      	cmp	r3, r2
 8020cc8:	f6bf ae72 	bge.w	80209b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020ccc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020cd0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020cd4:	f1bb 0f00 	cmp.w	fp, #0
 8020cd8:	dc70      	bgt.n	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020cda:	9b07      	ldr	r3, [sp, #28]
 8020cdc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020ce0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ce2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020ce6:	930a      	str	r3, [sp, #40]	; 0x28
 8020ce8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020cea:	2b00      	cmp	r3, #0
 8020cec:	f340 81ae 	ble.w	802104c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020cf0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cf4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020cf8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020cfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020cfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d0a:	eef0 6a62 	vmov.f32	s13, s5
 8020d0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d1a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020d1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d22:	eef0 6a43 	vmov.f32	s13, s6
 8020d26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d2a:	ee12 2a90 	vmov	r2, s5
 8020d2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d32:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d36:	ee13 2a10 	vmov	r2, s6
 8020d3a:	9327      	str	r3, [sp, #156]	; 0x9c
 8020d3c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d42:	9328      	str	r3, [sp, #160]	; 0xa0
 8020d44:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020d46:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020d48:	3b01      	subs	r3, #1
 8020d4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d4e:	9316      	str	r3, [sp, #88]	; 0x58
 8020d50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d52:	bf08      	it	eq
 8020d54:	4613      	moveq	r3, r2
 8020d56:	ee16 5a90 	vmov	r5, s13
 8020d5a:	9307      	str	r3, [sp, #28]
 8020d5c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d60:	eef0 2a47 	vmov.f32	s5, s14
 8020d64:	e5f8      	b.n	8020958 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020d66:	2800      	cmp	r0, #0
 8020d68:	f43f ae6b 	beq.w	8020a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020d6c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020d70:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020d74:	9108      	str	r1, [sp, #32]
 8020d76:	0e09      	lsrs	r1, r1, #24
 8020d78:	9110      	str	r1, [sp, #64]	; 0x40
 8020d7a:	e662      	b.n	8020a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020d7c:	f113 0801 	adds.w	r8, r3, #1
 8020d80:	f53f af74 	bmi.w	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020d84:	4541      	cmp	r1, r8
 8020d86:	f6ff af71 	blt.w	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020d8a:	f11c 0801 	adds.w	r8, ip, #1
 8020d8e:	f53f af6d 	bmi.w	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020d92:	45c6      	cmp	lr, r8
 8020d94:	f6ff af6a 	blt.w	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020d98:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020d9c:	b209      	sxth	r1, r1
 8020d9e:	fa0f f38e 	sxth.w	r3, lr
 8020da2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020da6:	9301      	str	r3, [sp, #4]
 8020da8:	9100      	str	r1, [sp, #0]
 8020daa:	4633      	mov	r3, r6
 8020dac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020dae:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020db0:	4639      	mov	r1, r7
 8020db2:	f7ff fc7a 	bl	80206aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020db6:	e759      	b.n	8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020db8:	fffff800 	.word	0xfffff800
 8020dbc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020dbe:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020dc0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020dc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020dc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020dca:	1427      	asrs	r7, r4, #16
 8020dcc:	142b      	asrs	r3, r5, #16
 8020dce:	fb01 7303 	mla	r3, r1, r3, r7
 8020dd2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020dd4:	18e7      	adds	r7, r4, r3
 8020dd6:	5ce3      	ldrb	r3, [r4, r3]
 8020dd8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020ddc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020de0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020de4:	2a00      	cmp	r2, #0
 8020de6:	f000 8127 	beq.w	8021038 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020dea:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020dee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020df2:	940d      	str	r4, [sp, #52]	; 0x34
 8020df4:	0e24      	lsrs	r4, r4, #24
 8020df6:	9414      	str	r4, [sp, #80]	; 0x50
 8020df8:	b170      	cbz	r0, 8020e18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020dfa:	eb07 0e01 	add.w	lr, r7, r1
 8020dfe:	5c79      	ldrb	r1, [r7, r1]
 8020e00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e04:	9109      	str	r1, [sp, #36]	; 0x24
 8020e06:	0e09      	lsrs	r1, r1, #24
 8020e08:	9111      	str	r1, [sp, #68]	; 0x44
 8020e0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020e0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e12:	910e      	str	r1, [sp, #56]	; 0x38
 8020e14:	0e09      	lsrs	r1, r1, #24
 8020e16:	9115      	str	r1, [sp, #84]	; 0x54
 8020e18:	b292      	uxth	r2, r2
 8020e1a:	b280      	uxth	r0, r0
 8020e1c:	fb02 f800 	mul.w	r8, r2, r0
 8020e20:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020e24:	0112      	lsls	r2, r2, #4
 8020e26:	eba2 0e08 	sub.w	lr, r2, r8
 8020e2a:	b280      	uxth	r0, r0
 8020e2c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020e30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020e32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020e34:	fa1f fe8e 	uxth.w	lr, lr
 8020e38:	1a09      	subs	r1, r1, r0
 8020e3a:	b289      	uxth	r1, r1
 8020e3c:	fb0e f202 	mul.w	r2, lr, r2
 8020e40:	fb01 220c 	mla	r2, r1, ip, r2
 8020e44:	fb00 2204 	mla	r2, r0, r4, r2
 8020e48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020e4a:	fb08 2204 	mla	r2, r8, r4, r2
 8020e4e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020e52:	2a00      	cmp	r2, #0
 8020e54:	f000 80e5 	beq.w	8021022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020e58:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020e5c:	d019      	beq.n	8020e92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020e5e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e62:	fb0c fa0a 	mul.w	sl, ip, sl
 8020e66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e6a:	fb0c fc03 	mul.w	ip, ip, r3
 8020e6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e76:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020e7a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020e7e:	4453      	add	r3, sl
 8020e80:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020e84:	0a1b      	lsrs	r3, r3, #8
 8020e86:	0a3f      	lsrs	r7, r7, #8
 8020e88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e8c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020e90:	433b      	orrs	r3, r7
 8020e92:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e94:	2cff      	cmp	r4, #255	; 0xff
 8020e96:	d020      	beq.n	8020eda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020e98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020e9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020e9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ea0:	4367      	muls	r7, r4
 8020ea2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ea4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ea8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020eaa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020eae:	fb04 fa0a 	mul.w	sl, r4, sl
 8020eb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020eb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eba:	44bc      	add	ip, r7
 8020ebc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020ec0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ec8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ecc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ed0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ed4:	ea4c 040a 	orr.w	r4, ip, sl
 8020ed8:	940d      	str	r4, [sp, #52]	; 0x34
 8020eda:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020edc:	2cff      	cmp	r4, #255	; 0xff
 8020ede:	d020      	beq.n	8020f22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020ee0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020ee2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ee6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020ee8:	4367      	muls	r7, r4
 8020eea:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020eec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ef0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020ef2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ef6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020efa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020efe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f02:	44bc      	add	ip, r7
 8020f04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f1c:	ea4c 040a 	orr.w	r4, ip, sl
 8020f20:	9409      	str	r4, [sp, #36]	; 0x24
 8020f22:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f24:	2cff      	cmp	r4, #255	; 0xff
 8020f26:	d020      	beq.n	8020f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020f28:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020f2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f30:	4367      	muls	r7, r4
 8020f32:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020f34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f4a:	44bc      	add	ip, r7
 8020f4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f64:	ea4c 040a 	orr.w	r4, ip, sl
 8020f68:	940e      	str	r4, [sp, #56]	; 0x38
 8020f6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f6c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f70:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020f72:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020f76:	fb0e f707 	mul.w	r7, lr, r7
 8020f7a:	fb01 770c 	mla	r7, r1, ip, r7
 8020f7e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f82:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020f84:	fb00 770c 	mla	r7, r0, ip, r7
 8020f88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020f8e:	fb08 770c 	mla	r7, r8, ip, r7
 8020f92:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020f96:	fb0e fe0c 	mul.w	lr, lr, ip
 8020f9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020f9e:	fb01 e303 	mla	r3, r1, r3, lr
 8020fa2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020fa4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020fa8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020faa:	fb00 330a 	mla	r3, r0, sl, r3
 8020fae:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020fb2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020fb6:	f8b9 3000 	ldrh.w	r3, [r9]
 8020fba:	43d2      	mvns	r2, r2
 8020fbc:	1218      	asrs	r0, r3, #8
 8020fbe:	b2d2      	uxtb	r2, r2
 8020fc0:	10d9      	asrs	r1, r3, #3
 8020fc2:	0a3f      	lsrs	r7, r7, #8
 8020fc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fc8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020fcc:	00db      	lsls	r3, r3, #3
 8020fce:	4350      	muls	r0, r2
 8020fd0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020fd4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020fd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020fdc:	b2db      	uxtb	r3, r3
 8020fde:	ea47 070c 	orr.w	r7, r7, ip
 8020fe2:	4351      	muls	r1, r2
 8020fe4:	4353      	muls	r3, r2
 8020fe6:	1c42      	adds	r2, r0, #1
 8020fe8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020fec:	0c3a      	lsrs	r2, r7, #16
 8020fee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ff2:	4a18      	ldr	r2, [pc, #96]	; (8021054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020ff4:	b2c0      	uxtb	r0, r0
 8020ff6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020ffa:	1c4a      	adds	r2, r1, #1
 8020ffc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021000:	0a3a      	lsrs	r2, r7, #8
 8021002:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021006:	00c9      	lsls	r1, r1, #3
 8021008:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802100c:	4301      	orrs	r1, r0
 802100e:	1c58      	adds	r0, r3, #1
 8021010:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021014:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021018:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802101c:	4308      	orrs	r0, r1
 802101e:	f8a9 0000 	strh.w	r0, [r9]
 8021022:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021024:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021026:	441a      	add	r2, r3
 8021028:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802102a:	9225      	str	r2, [sp, #148]	; 0x94
 802102c:	f109 0902 	add.w	r9, r9, #2
 8021030:	441d      	add	r5, r3
 8021032:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021036:	e64d      	b.n	8020cd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021038:	2800      	cmp	r0, #0
 802103a:	f43f aeed 	beq.w	8020e18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802103e:	5c79      	ldrb	r1, [r7, r1]
 8021040:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021044:	9109      	str	r1, [sp, #36]	; 0x24
 8021046:	0e09      	lsrs	r1, r1, #24
 8021048:	9111      	str	r1, [sp, #68]	; 0x44
 802104a:	e6e5      	b.n	8020e18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802104c:	b01b      	add	sp, #108	; 0x6c
 802104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021052:	bf00      	nop
 8021054:	fffff800 	.word	0xfffff800

08021058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802105c:	b085      	sub	sp, #20
 802105e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021062:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021066:	9103      	str	r1, [sp, #12]
 8021068:	fb00 7406 	mla	r4, r0, r6, r7
 802106c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021070:	2800      	cmp	r0, #0
 8021072:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021076:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802107a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802107e:	9501      	str	r5, [sp, #4]
 8021080:	eb03 0904 	add.w	r9, r3, r4
 8021084:	f2c0 8150 	blt.w	8021328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021088:	4583      	cmp	fp, r0
 802108a:	f340 814d 	ble.w	8021328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802108e:	2f00      	cmp	r7, #0
 8021090:	f2c0 8146 	blt.w	8021320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021094:	42be      	cmp	r6, r7
 8021096:	f340 8143 	ble.w	8021320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802109a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802109e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80210a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80210a6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80210aa:	4355      	muls	r5, r2
 80210ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210b0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80210b4:	fb0c f203 	mul.w	r2, ip, r3
 80210b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80210bc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80210c0:	441d      	add	r5, r3
 80210c2:	f102 0320 	add.w	r3, r2, #32
 80210c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80210ca:	0a1b      	lsrs	r3, r3, #8
 80210cc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80210d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210d4:	431c      	orrs	r4, r3
 80210d6:	1c7b      	adds	r3, r7, #1
 80210d8:	f100 812b 	bmi.w	8021332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80210dc:	429e      	cmp	r6, r3
 80210de:	f340 8128 	ble.w	8021332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80210e2:	2900      	cmp	r1, #0
 80210e4:	f000 8128 	beq.w	8021338 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80210e8:	9a01      	ldr	r2, [sp, #4]
 80210ea:	f899 3001 	ldrb.w	r3, [r9, #1]
 80210ee:	8855      	ldrh	r5, [r2, #2]
 80210f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80210f4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80210f8:	fb08 f802 	mul.w	r8, r8, r2
 80210fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021100:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021104:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021108:	435d      	muls	r5, r3
 802110a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802110e:	44d0      	add	r8, sl
 8021110:	f105 0a20 	add.w	sl, r5, #32
 8021114:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021118:	0a2d      	lsrs	r5, r5, #8
 802111a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802111e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021122:	432a      	orrs	r2, r5
 8021124:	3001      	adds	r0, #1
 8021126:	f100 810d 	bmi.w	8021344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802112a:	4583      	cmp	fp, r0
 802112c:	f340 810a 	ble.w	8021344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021130:	f1be 0f00 	cmp.w	lr, #0
 8021134:	f000 810b 	beq.w	802134e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021138:	2f00      	cmp	r7, #0
 802113a:	f2c0 8100 	blt.w	802133e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802113e:	42be      	cmp	r6, r7
 8021140:	f340 80fd 	ble.w	802133e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021144:	9801      	ldr	r0, [sp, #4]
 8021146:	f819 5006 	ldrb.w	r5, [r9, r6]
 802114a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802114e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021152:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021156:	fb0a fa00 	mul.w	sl, sl, r0
 802115a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802115e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021162:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021166:	fb05 f808 	mul.w	r8, r5, r8
 802116a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802116e:	4482      	add	sl, r0
 8021170:	f108 0020 	add.w	r0, r8, #32
 8021174:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021178:	0a00      	lsrs	r0, r0, #8
 802117a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802117e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021182:	ea4b 0b00 	orr.w	fp, fp, r0
 8021186:	3701      	adds	r7, #1
 8021188:	f100 80e6 	bmi.w	8021358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802118c:	42be      	cmp	r6, r7
 802118e:	f340 80e3 	ble.w	8021358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021192:	2900      	cmp	r1, #0
 8021194:	f000 80e3 	beq.w	802135e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021198:	3601      	adds	r6, #1
 802119a:	9801      	ldr	r0, [sp, #4]
 802119c:	f819 7006 	ldrb.w	r7, [r9, r6]
 80211a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80211a4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80211a8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80211ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80211b0:	fb09 f906 	mul.w	r9, r9, r6
 80211b4:	fb07 f800 	mul.w	r8, r7, r0
 80211b8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80211bc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80211c0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80211c4:	44d1      	add	r9, sl
 80211c6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80211ca:	f108 0020 	add.w	r0, r8, #32
 80211ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80211d2:	0a00      	lsrs	r0, r0, #8
 80211d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80211d8:	4330      	orrs	r0, r6
 80211da:	b28e      	uxth	r6, r1
 80211dc:	fa1f f98e 	uxth.w	r9, lr
 80211e0:	fb06 f809 	mul.w	r8, r6, r9
 80211e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80211e8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80211ec:	0136      	lsls	r6, r6, #4
 80211ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80211f2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80211f6:	9601      	str	r6, [sp, #4]
 80211f8:	ea4a 0404 	orr.w	r4, sl, r4
 80211fc:	fa1f f689 	uxth.w	r6, r9
 8021200:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021204:	fb11 f90e 	smulbb	r9, r1, lr
 8021208:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802120c:	9602      	str	r6, [sp, #8]
 802120e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021212:	4626      	mov	r6, r4
 8021214:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021218:	f1ce 0410 	rsb	r4, lr, #16
 802121c:	1a64      	subs	r4, r4, r1
 802121e:	ea4a 0202 	orr.w	r2, sl, r2
 8021222:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021226:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802122a:	434a      	muls	r2, r1
 802122c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021230:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021234:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021238:	fb04 2406 	mla	r4, r4, r6, r2
 802123c:	ea4a 0000 	orr.w	r0, sl, r0
 8021240:	fb09 4200 	mla	r2, r9, r0, r4
 8021244:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021248:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802124c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021250:	ea44 0b0b 	orr.w	fp, r4, fp
 8021254:	9c01      	ldr	r4, [sp, #4]
 8021256:	9e02      	ldr	r6, [sp, #8]
 8021258:	9903      	ldr	r1, [sp, #12]
 802125a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802125e:	1ba4      	subs	r4, r4, r6
 8021260:	9e01      	ldr	r6, [sp, #4]
 8021262:	8808      	ldrh	r0, [r1, #0]
 8021264:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021268:	eba6 0608 	sub.w	r6, r6, r8
 802126c:	b2b6      	uxth	r6, r6
 802126e:	b2a4      	uxth	r4, r4
 8021270:	4373      	muls	r3, r6
 8021272:	fb0c 3304 	mla	r3, ip, r4, r3
 8021276:	9c02      	ldr	r4, [sp, #8]
 8021278:	fb04 3505 	mla	r5, r4, r5, r3
 802127c:	fb08 5707 	mla	r7, r8, r7, r5
 8021280:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021284:	b289      	uxth	r1, r1
 8021286:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802128a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802128e:	434f      	muls	r7, r1
 8021290:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021294:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021298:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802129c:	1c7b      	adds	r3, r7, #1
 802129e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80212a2:	ea42 0e0e 	orr.w	lr, r2, lr
 80212a6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80212aa:	fa1f f28e 	uxth.w	r2, lr
 80212ae:	1203      	asrs	r3, r0, #8
 80212b0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80212b4:	b2ff      	uxtb	r7, r7
 80212b6:	1215      	asrs	r5, r2, #8
 80212b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80212bc:	fb13 f307 	smulbb	r3, r3, r7
 80212c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80212c4:	fb05 3501 	mla	r5, r5, r1, r3
 80212c8:	10c3      	asrs	r3, r0, #3
 80212ca:	10d4      	asrs	r4, r2, #3
 80212cc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80212d0:	fb13 f307 	smulbb	r3, r3, r7
 80212d4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80212d8:	fb04 3401 	mla	r4, r4, r1, r3
 80212dc:	00c3      	lsls	r3, r0, #3
 80212de:	00d2      	lsls	r2, r2, #3
 80212e0:	b2db      	uxtb	r3, r3
 80212e2:	fb13 f307 	smulbb	r3, r3, r7
 80212e6:	b2d2      	uxtb	r2, r2
 80212e8:	fb02 3101 	mla	r1, r2, r1, r3
 80212ec:	b2ad      	uxth	r5, r5
 80212ee:	b289      	uxth	r1, r1
 80212f0:	b2a4      	uxth	r4, r4
 80212f2:	1c6b      	adds	r3, r5, #1
 80212f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212f8:	1c62      	adds	r2, r4, #1
 80212fa:	1c4b      	adds	r3, r1, #1
 80212fc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021300:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021304:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021308:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802130c:	0964      	lsrs	r4, r4, #5
 802130e:	432b      	orrs	r3, r5
 8021310:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021314:	9a03      	ldr	r2, [sp, #12]
 8021316:	4323      	orrs	r3, r4
 8021318:	8013      	strh	r3, [r2, #0]
 802131a:	b005      	add	sp, #20
 802131c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021320:	f04f 0c00 	mov.w	ip, #0
 8021324:	4664      	mov	r4, ip
 8021326:	e6d6      	b.n	80210d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021328:	2300      	movs	r3, #0
 802132a:	469c      	mov	ip, r3
 802132c:	461a      	mov	r2, r3
 802132e:	461c      	mov	r4, r3
 8021330:	e6f8      	b.n	8021124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021332:	2300      	movs	r3, #0
 8021334:	461a      	mov	r2, r3
 8021336:	e6f5      	b.n	8021124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021338:	460b      	mov	r3, r1
 802133a:	460a      	mov	r2, r1
 802133c:	e6f2      	b.n	8021124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802133e:	2500      	movs	r5, #0
 8021340:	46ab      	mov	fp, r5
 8021342:	e720      	b.n	8021186 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021344:	2700      	movs	r7, #0
 8021346:	463d      	mov	r5, r7
 8021348:	4638      	mov	r0, r7
 802134a:	46bb      	mov	fp, r7
 802134c:	e745      	b.n	80211da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802134e:	4677      	mov	r7, lr
 8021350:	4675      	mov	r5, lr
 8021352:	4670      	mov	r0, lr
 8021354:	46f3      	mov	fp, lr
 8021356:	e740      	b.n	80211da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021358:	2700      	movs	r7, #0
 802135a:	4638      	mov	r0, r7
 802135c:	e73d      	b.n	80211da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802135e:	460f      	mov	r7, r1
 8021360:	4608      	mov	r0, r1
 8021362:	e73a      	b.n	80211da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021364 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021368:	b097      	sub	sp, #92	; 0x5c
 802136a:	9214      	str	r2, [sp, #80]	; 0x50
 802136c:	9308      	str	r3, [sp, #32]
 802136e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021370:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021374:	9312      	str	r3, [sp, #72]	; 0x48
 8021376:	9111      	str	r1, [sp, #68]	; 0x44
 8021378:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802137c:	9015      	str	r0, [sp, #84]	; 0x54
 802137e:	6850      	ldr	r0, [r2, #4]
 8021380:	6812      	ldr	r2, [r2, #0]
 8021382:	fb00 1303 	mla	r3, r0, r3, r1
 8021386:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802138a:	9309      	str	r3, [sp, #36]	; 0x24
 802138c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802138e:	681b      	ldr	r3, [r3, #0]
 8021390:	930b      	str	r3, [sp, #44]	; 0x2c
 8021392:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021394:	685b      	ldr	r3, [r3, #4]
 8021396:	930c      	str	r3, [sp, #48]	; 0x30
 8021398:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802139c:	930a      	str	r3, [sp, #40]	; 0x28
 802139e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80213a0:	2b00      	cmp	r3, #0
 80213a2:	dc03      	bgt.n	80213ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80213a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80213a6:	2b00      	cmp	r3, #0
 80213a8:	f340 83cb 	ble.w	8021b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80213ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80213ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80213b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80213b6:	1e48      	subs	r0, r1, #1
 80213b8:	1e55      	subs	r5, r2, #1
 80213ba:	9b08      	ldr	r3, [sp, #32]
 80213bc:	2b00      	cmp	r3, #0
 80213be:	f340 81a3 	ble.w	8021708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80213c2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80213c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80213c6:	1436      	asrs	r6, r6, #16
 80213c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80213cc:	d406      	bmi.n	80213dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80213ce:	4286      	cmp	r6, r0
 80213d0:	da04      	bge.n	80213dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80213d2:	2b00      	cmp	r3, #0
 80213d4:	db02      	blt.n	80213dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80213d6:	42ab      	cmp	r3, r5
 80213d8:	f2c0 8197 	blt.w	802170a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80213dc:	3601      	adds	r6, #1
 80213de:	f100 8184 	bmi.w	80216ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80213e2:	42b1      	cmp	r1, r6
 80213e4:	f2c0 8181 	blt.w	80216ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80213e8:	3301      	adds	r3, #1
 80213ea:	f100 817e 	bmi.w	80216ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80213ee:	429a      	cmp	r2, r3
 80213f0:	f2c0 817b 	blt.w	80216ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80213f4:	9b08      	ldr	r3, [sp, #32]
 80213f6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80213f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80213fa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80213fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021400:	2b00      	cmp	r3, #0
 8021402:	f340 81a4 	ble.w	802174e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021406:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021408:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802140a:	1418      	asrs	r0, r3, #16
 802140c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802140e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021412:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021414:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802141a:	142d      	asrs	r5, r5, #16
 802141c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021420:	f100 81f8 	bmi.w	8021814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021424:	f102 3eff 	add.w	lr, r2, #4294967295
 8021428:	4575      	cmp	r5, lr
 802142a:	f280 81f3 	bge.w	8021814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802142e:	2800      	cmp	r0, #0
 8021430:	f2c0 81f0 	blt.w	8021814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021434:	f103 3eff 	add.w	lr, r3, #4294967295
 8021438:	4570      	cmp	r0, lr
 802143a:	f280 81eb 	bge.w	8021814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802143e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021440:	b212      	sxth	r2, r2
 8021442:	fb00 5002 	mla	r0, r0, r2, r5
 8021446:	fa1f fe81 	uxth.w	lr, r1
 802144a:	eb03 0a00 	add.w	sl, r3, r0
 802144e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021452:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021456:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802145a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802145e:	b29b      	uxth	r3, r3
 8021460:	f1bc 0f00 	cmp.w	ip, #0
 8021464:	f000 81b9 	beq.w	80217da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021468:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802146c:	940d      	str	r4, [sp, #52]	; 0x34
 802146e:	eb0a 0b02 	add.w	fp, sl, r2
 8021472:	fa1f fa8c 	uxth.w	sl, ip
 8021476:	fb0a fe0e 	mul.w	lr, sl, lr
 802147a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802147e:	fa1f fa8a 	uxth.w	sl, sl
 8021482:	eba5 050e 	sub.w	r5, r5, lr
 8021486:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802148a:	940e      	str	r4, [sp, #56]	; 0x38
 802148c:	eba3 030a 	sub.w	r3, r3, sl
 8021490:	b2ad      	uxth	r5, r5
 8021492:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021494:	b29b      	uxth	r3, r3
 8021496:	fb08 f505 	mul.w	r5, r8, r5
 802149a:	fb09 5303 	mla	r3, r9, r3, r5
 802149e:	fb0a 3304 	mla	r3, sl, r4, r3
 80214a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80214a4:	fb0e 3304 	mla	r3, lr, r4, r3
 80214a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80214ac:	2b00      	cmp	r3, #0
 80214ae:	f000 810f 	beq.w	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80214b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80214b8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80214bc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80214c0:	f000 8190 	beq.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80214c4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80214c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80214cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80214d0:	fb09 f000 	mul.w	r0, r9, r0
 80214d4:	fb0a fe0e 	mul.w	lr, sl, lr
 80214d8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80214dc:	f100 0b20 	add.w	fp, r0, #32
 80214e0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80214e4:	44ce      	add	lr, r9
 80214e6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80214ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80214ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80214f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80214f6:	ea4e 0909 	orr.w	r9, lr, r9
 80214fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80214fe:	8868      	ldrh	r0, [r5, #2]
 8021500:	d019      	beq.n	8021536 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021502:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021506:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802150a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802150e:	fb08 f800 	mul.w	r8, r8, r0
 8021512:	fb0a fe0e 	mul.w	lr, sl, lr
 8021516:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802151a:	f108 0b20 	add.w	fp, r8, #32
 802151e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021522:	4486      	add	lr, r0
 8021524:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021528:	0a00      	lsrs	r0, r0, #8
 802152a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802152e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021532:	ea4e 0000 	orr.w	r0, lr, r0
 8021536:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802153a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802153e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021542:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021546:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802154a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802154e:	ea4e 0909 	orr.w	r9, lr, r9
 8021552:	ea4a 0000 	orr.w	r0, sl, r0
 8021556:	f1bc 0f00 	cmp.w	ip, #0
 802155a:	f000 8145 	beq.w	80217e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802155e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021562:	3a01      	subs	r2, #1
 8021564:	0052      	lsls	r2, r2, #1
 8021566:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021568:	3202      	adds	r2, #2
 802156a:	2cff      	cmp	r4, #255	; 0xff
 802156c:	eb05 0e02 	add.w	lr, r5, r2
 8021570:	5aaa      	ldrh	r2, [r5, r2]
 8021572:	d018      	beq.n	80215a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021574:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021578:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802157c:	fb04 fa02 	mul.w	sl, r4, r2
 8021580:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021584:	fb08 f805 	mul.w	r8, r8, r5
 8021588:	f10a 0520 	add.w	r5, sl, #32
 802158c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021590:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021594:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021598:	4442      	add	r2, r8
 802159a:	0a2d      	lsrs	r5, r5, #8
 802159c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80215a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215a4:	432a      	orrs	r2, r5
 80215a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215a8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80215ac:	2cff      	cmp	r4, #255	; 0xff
 80215ae:	d01a      	beq.n	80215e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80215b0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80215b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80215b8:	fb04 fa05 	mul.w	sl, r4, r5
 80215bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80215c0:	fb08 f80e 	mul.w	r8, r8, lr
 80215c4:	f10a 0e20 	add.w	lr, sl, #32
 80215c8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80215cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80215d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80215d4:	4445      	add	r5, r8
 80215d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80215da:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80215de:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80215e2:	ea45 050e 	orr.w	r5, r5, lr
 80215e6:	fb1c fe01 	smulbb	lr, ip, r1
 80215ea:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80215ee:	f1cc 0810 	rsb	r8, ip, #16
 80215f2:	eba8 0801 	sub.w	r8, r8, r1
 80215f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80215fa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80215fe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021602:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021606:	4341      	muls	r1, r0
 8021608:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802160c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021610:	ea4a 0202 	orr.w	r2, sl, r2
 8021614:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021618:	fb09 1108 	mla	r1, r9, r8, r1
 802161c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021620:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021624:	fb0c 1102 	mla	r1, ip, r2, r1
 8021628:	ea4b 0505 	orr.w	r5, fp, r5
 802162c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021630:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021634:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021638:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802163c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021640:	ea42 0e0e 	orr.w	lr, r2, lr
 8021644:	fa1f f28e 	uxth.w	r2, lr
 8021648:	2bff      	cmp	r3, #255	; 0xff
 802164a:	d103      	bne.n	8021654 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802164c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802164e:	29ff      	cmp	r1, #255	; 0xff
 8021650:	f000 80de 	beq.w	8021810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021654:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021656:	8838      	ldrh	r0, [r7, #0]
 8021658:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802165a:	434b      	muls	r3, r1
 802165c:	f103 0c01 	add.w	ip, r3, #1
 8021660:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021664:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021668:	fa5f fc83 	uxtb.w	ip, r3
 802166c:	1203      	asrs	r3, r0, #8
 802166e:	1215      	asrs	r5, r2, #8
 8021670:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021674:	fb13 f30c 	smulbb	r3, r3, ip
 8021678:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802167c:	fb05 3501 	mla	r5, r5, r1, r3
 8021680:	10c3      	asrs	r3, r0, #3
 8021682:	10d1      	asrs	r1, r2, #3
 8021684:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021688:	fb13 f30c 	smulbb	r3, r3, ip
 802168c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021690:	fb01 3104 	mla	r1, r1, r4, r3
 8021694:	00c3      	lsls	r3, r0, #3
 8021696:	00d2      	lsls	r2, r2, #3
 8021698:	b2db      	uxtb	r3, r3
 802169a:	b2d2      	uxtb	r2, r2
 802169c:	fb13 f30c 	smulbb	r3, r3, ip
 80216a0:	b2ad      	uxth	r5, r5
 80216a2:	fb02 3304 	mla	r3, r2, r4, r3
 80216a6:	b29a      	uxth	r2, r3
 80216a8:	1c6b      	adds	r3, r5, #1
 80216aa:	b289      	uxth	r1, r1
 80216ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216b0:	1c53      	adds	r3, r2, #1
 80216b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80216b6:	1c4a      	adds	r2, r1, #1
 80216b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80216bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80216c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80216c4:	0949      	lsrs	r1, r1, #5
 80216c6:	432b      	orrs	r3, r5
 80216c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80216cc:	430b      	orrs	r3, r1
 80216ce:	803b      	strh	r3, [r7, #0]
 80216d0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80216d2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80216d4:	4413      	add	r3, r2
 80216d6:	9321      	str	r3, [sp, #132]	; 0x84
 80216d8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80216da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80216dc:	441a      	add	r2, r3
 80216de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80216e0:	9222      	str	r2, [sp, #136]	; 0x88
 80216e2:	3b01      	subs	r3, #1
 80216e4:	3702      	adds	r7, #2
 80216e6:	9313      	str	r3, [sp, #76]	; 0x4c
 80216e8:	e689      	b.n	80213fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80216ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80216ec:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80216ee:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80216f0:	4433      	add	r3, r6
 80216f2:	9321      	str	r3, [sp, #132]	; 0x84
 80216f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80216f6:	441c      	add	r4, r3
 80216f8:	9b08      	ldr	r3, [sp, #32]
 80216fa:	9422      	str	r4, [sp, #136]	; 0x88
 80216fc:	3b01      	subs	r3, #1
 80216fe:	9308      	str	r3, [sp, #32]
 8021700:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021702:	3302      	adds	r3, #2
 8021704:	9309      	str	r3, [sp, #36]	; 0x24
 8021706:	e658      	b.n	80213ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021708:	d028      	beq.n	802175c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802170a:	9b08      	ldr	r3, [sp, #32]
 802170c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802170e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021710:	3b01      	subs	r3, #1
 8021712:	fb00 5003 	mla	r0, r0, r3, r5
 8021716:	1400      	asrs	r0, r0, #16
 8021718:	f53f ae6c 	bmi.w	80213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802171c:	3901      	subs	r1, #1
 802171e:	4288      	cmp	r0, r1
 8021720:	f6bf ae68 	bge.w	80213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021724:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021726:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021728:	fb01 0303 	mla	r3, r1, r3, r0
 802172c:	141b      	asrs	r3, r3, #16
 802172e:	f53f ae61 	bmi.w	80213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021732:	3a01      	subs	r2, #1
 8021734:	4293      	cmp	r3, r2
 8021736:	f6bf ae5d 	bge.w	80213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802173a:	9b08      	ldr	r3, [sp, #32]
 802173c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021740:	9313      	str	r3, [sp, #76]	; 0x4c
 8021742:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021746:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021748:	2b00      	cmp	r3, #0
 802174a:	f300 8082 	bgt.w	8021852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802174e:	9b08      	ldr	r3, [sp, #32]
 8021750:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021754:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021756:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802175a:	9309      	str	r3, [sp, #36]	; 0x24
 802175c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802175e:	2b00      	cmp	r3, #0
 8021760:	f340 81ef 	ble.w	8021b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021764:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021768:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802176c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021770:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021772:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021776:	ee31 1a05 	vadd.f32	s2, s2, s10
 802177a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802177e:	eef0 6a62 	vmov.f32	s13, s5
 8021782:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021786:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802178a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802178e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021796:	eef0 6a43 	vmov.f32	s13, s6
 802179a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802179e:	ee12 2a90 	vmov	r2, s5
 80217a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80217a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80217aa:	ee13 2a10 	vmov	r2, s6
 80217ae:	9323      	str	r3, [sp, #140]	; 0x8c
 80217b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80217b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80217b6:	9324      	str	r3, [sp, #144]	; 0x90
 80217b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80217ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80217bc:	3b01      	subs	r3, #1
 80217be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217c2:	9311      	str	r3, [sp, #68]	; 0x44
 80217c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80217c6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80217ca:	bf08      	it	eq
 80217cc:	4613      	moveq	r3, r2
 80217ce:	9308      	str	r3, [sp, #32]
 80217d0:	eeb0 3a67 	vmov.f32	s6, s15
 80217d4:	eef0 2a47 	vmov.f32	s5, s14
 80217d8:	e5e1      	b.n	802139e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80217da:	fb08 f505 	mul.w	r5, r8, r5
 80217de:	fb09 5303 	mla	r3, r9, r3, r5
 80217e2:	e661      	b.n	80214a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80217e4:	4681      	mov	r9, r0
 80217e6:	e688      	b.n	80214fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80217e8:	f1c1 0210 	rsb	r2, r1, #16
 80217ec:	4341      	muls	r1, r0
 80217ee:	fb09 1902 	mla	r9, r9, r2, r1
 80217f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80217f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80217fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80217fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021802:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021806:	ea42 0909 	orr.w	r9, r2, r9
 802180a:	fa1f f289 	uxth.w	r2, r9
 802180e:	e71b      	b.n	8021648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021810:	803a      	strh	r2, [r7, #0]
 8021812:	e75d      	b.n	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021814:	f115 0e01 	adds.w	lr, r5, #1
 8021818:	f53f af5a 	bmi.w	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802181c:	4572      	cmp	r2, lr
 802181e:	f6ff af57 	blt.w	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021822:	f110 0e01 	adds.w	lr, r0, #1
 8021826:	f53f af53 	bmi.w	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802182a:	4573      	cmp	r3, lr
 802182c:	f6ff af50 	blt.w	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021830:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021832:	9502      	str	r5, [sp, #8]
 8021834:	b21b      	sxth	r3, r3
 8021836:	b212      	sxth	r2, r2
 8021838:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802183c:	9301      	str	r3, [sp, #4]
 802183e:	9200      	str	r2, [sp, #0]
 8021840:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021844:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021848:	4639      	mov	r1, r7
 802184a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802184c:	f7ff fc04 	bl	8021058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021850:	e73e      	b.n	80216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021852:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021854:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021858:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802185a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802185e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021860:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021864:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021866:	141f      	asrs	r7, r3, #16
 8021868:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802186a:	141b      	asrs	r3, r3, #16
 802186c:	fb01 3707 	mla	r7, r1, r7, r3
 8021870:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021872:	fa1f fc82 	uxth.w	ip, r2
 8021876:	eb03 0a07 	add.w	sl, r3, r7
 802187a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802187e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021882:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021886:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802188a:	b29b      	uxth	r3, r3
 802188c:	2d00      	cmp	r5, #0
 802188e:	f000 813d 	beq.w	8021b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021892:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021896:	940f      	str	r4, [sp, #60]	; 0x3c
 8021898:	eb0a 0b01 	add.w	fp, sl, r1
 802189c:	fa1f fa85 	uxth.w	sl, r5
 80218a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80218a4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80218a8:	fa1f fa8a 	uxth.w	sl, sl
 80218ac:	eba0 000c 	sub.w	r0, r0, ip
 80218b0:	eba3 030a 	sub.w	r3, r3, sl
 80218b4:	b280      	uxth	r0, r0
 80218b6:	fb08 f000 	mul.w	r0, r8, r0
 80218ba:	b29b      	uxth	r3, r3
 80218bc:	fb09 0303 	mla	r3, r9, r3, r0
 80218c0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80218c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80218c6:	9410      	str	r4, [sp, #64]	; 0x40
 80218c8:	fb0a 3300 	mla	r3, sl, r0, r3
 80218cc:	fb0c 3304 	mla	r3, ip, r4, r3
 80218d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80218d4:	2b00      	cmp	r3, #0
 80218d6:	f000 810b 	beq.w	8021af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80218da:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80218dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80218e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80218e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80218ea:	f000 8114 	beq.w	8021b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80218ee:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80218f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80218f6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80218fa:	fb09 f707 	mul.w	r7, r9, r7
 80218fe:	fb0a fc0c 	mul.w	ip, sl, ip
 8021902:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021906:	f107 0b20 	add.w	fp, r7, #32
 802190a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802190e:	44cc      	add	ip, r9
 8021910:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021914:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021918:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802191c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021920:	ea4c 0909 	orr.w	r9, ip, r9
 8021924:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021928:	8847      	ldrh	r7, [r0, #2]
 802192a:	d019      	beq.n	8021960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802192c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021930:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021934:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021938:	fb08 f807 	mul.w	r8, r8, r7
 802193c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021940:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021944:	f108 0b20 	add.w	fp, r8, #32
 8021948:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802194c:	44bc      	add	ip, r7
 802194e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021952:	0a3f      	lsrs	r7, r7, #8
 8021954:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021958:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802195c:	ea4c 0707 	orr.w	r7, ip, r7
 8021960:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021964:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021968:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802196c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021970:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021974:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021978:	ea4c 0909 	orr.w	r9, ip, r9
 802197c:	ea4a 0707 	orr.w	r7, sl, r7
 8021980:	2d00      	cmp	r5, #0
 8021982:	f000 80ca 	beq.w	8021b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021986:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802198a:	3901      	subs	r1, #1
 802198c:	0049      	lsls	r1, r1, #1
 802198e:	3102      	adds	r1, #2
 8021990:	eb00 0c01 	add.w	ip, r0, r1
 8021994:	5a41      	ldrh	r1, [r0, r1]
 8021996:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021998:	28ff      	cmp	r0, #255	; 0xff
 802199a:	d019      	beq.n	80219d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802199c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802199e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80219a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80219a6:	fb04 fa01 	mul.w	sl, r4, r1
 80219aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80219ae:	fb08 f800 	mul.w	r8, r8, r0
 80219b2:	f10a 0020 	add.w	r0, sl, #32
 80219b6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80219ba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80219be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80219c2:	4441      	add	r1, r8
 80219c4:	0a00      	lsrs	r0, r0, #8
 80219c6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80219ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80219ce:	4301      	orrs	r1, r0
 80219d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80219d2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80219d6:	2cff      	cmp	r4, #255	; 0xff
 80219d8:	d01a      	beq.n	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80219da:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80219de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80219e2:	fb04 fa00 	mul.w	sl, r4, r0
 80219e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80219ea:	fb08 f80c 	mul.w	r8, r8, ip
 80219ee:	f10a 0c20 	add.w	ip, sl, #32
 80219f2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80219f6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80219fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80219fe:	4440      	add	r0, r8
 8021a00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a04:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021a08:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021a0c:	ea40 000c 	orr.w	r0, r0, ip
 8021a10:	fb15 fc02 	smulbb	ip, r5, r2
 8021a14:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021a18:	f1c5 0810 	rsb	r8, r5, #16
 8021a1c:	eba8 0802 	sub.w	r8, r8, r2
 8021a20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021a24:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021a28:	437a      	muls	r2, r7
 8021a2a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021a2e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021a32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021a3a:	fb09 2208 	mla	r2, r9, r8, r2
 8021a3e:	ea4a 0101 	orr.w	r1, sl, r1
 8021a42:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021a46:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021a4e:	fb05 2201 	mla	r2, r5, r1, r2
 8021a52:	ea4b 0000 	orr.w	r0, fp, r0
 8021a56:	fb0c 2200 	mla	r2, ip, r0, r2
 8021a5a:	0d57      	lsrs	r7, r2, #21
 8021a5c:	0952      	lsrs	r2, r2, #5
 8021a5e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a66:	433a      	orrs	r2, r7
 8021a68:	2bff      	cmp	r3, #255	; 0xff
 8021a6a:	b292      	uxth	r2, r2
 8021a6c:	d102      	bne.n	8021a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021a6e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021a70:	29ff      	cmp	r1, #255	; 0xff
 8021a72:	d063      	beq.n	8021b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021a74:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021a76:	f8be 1000 	ldrh.w	r1, [lr]
 8021a7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021a7c:	4343      	muls	r3, r0
 8021a7e:	1c58      	adds	r0, r3, #1
 8021a80:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021a84:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021a88:	1208      	asrs	r0, r1, #8
 8021a8a:	b2db      	uxtb	r3, r3
 8021a8c:	1215      	asrs	r5, r2, #8
 8021a8e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021a92:	fb10 f003 	smulbb	r0, r0, r3
 8021a96:	10cf      	asrs	r7, r1, #3
 8021a98:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a9c:	00c9      	lsls	r1, r1, #3
 8021a9e:	fb05 0504 	mla	r5, r5, r4, r0
 8021aa2:	b2c9      	uxtb	r1, r1
 8021aa4:	10d0      	asrs	r0, r2, #3
 8021aa6:	00d2      	lsls	r2, r2, #3
 8021aa8:	fb11 f103 	smulbb	r1, r1, r3
 8021aac:	b2d2      	uxtb	r2, r2
 8021aae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021ab2:	fb02 1204 	mla	r2, r2, r4, r1
 8021ab6:	fb17 f703 	smulbb	r7, r7, r3
 8021aba:	b2ad      	uxth	r5, r5
 8021abc:	b292      	uxth	r2, r2
 8021abe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021ac2:	fb00 7004 	mla	r0, r0, r4, r7
 8021ac6:	1c6b      	adds	r3, r5, #1
 8021ac8:	1c57      	adds	r7, r2, #1
 8021aca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ace:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021ad2:	b280      	uxth	r0, r0
 8021ad4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ad8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021adc:	433d      	orrs	r5, r7
 8021ade:	1c47      	adds	r7, r0, #1
 8021ae0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021ae4:	097f      	lsrs	r7, r7, #5
 8021ae6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021aea:	433d      	orrs	r5, r7
 8021aec:	f8ae 5000 	strh.w	r5, [lr]
 8021af0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021af2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021af4:	4413      	add	r3, r2
 8021af6:	9321      	str	r3, [sp, #132]	; 0x84
 8021af8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021afa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021afc:	441a      	add	r2, r3
 8021afe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b00:	9222      	str	r2, [sp, #136]	; 0x88
 8021b02:	3b01      	subs	r3, #1
 8021b04:	f10e 0e02 	add.w	lr, lr, #2
 8021b08:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b0a:	e61c      	b.n	8021746 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021b0c:	fb08 f000 	mul.w	r0, r8, r0
 8021b10:	fb09 0303 	mla	r3, r9, r3, r0
 8021b14:	e6dc      	b.n	80218d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021b16:	46b9      	mov	r9, r7
 8021b18:	e704      	b.n	8021924 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021b1a:	f1c2 0110 	rsb	r1, r2, #16
 8021b1e:	437a      	muls	r2, r7
 8021b20:	fb09 2901 	mla	r9, r9, r1, r2
 8021b24:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021b28:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021b2c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021b30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b38:	4302      	orrs	r2, r0
 8021b3a:	e795      	b.n	8021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021b3c:	f8ae 2000 	strh.w	r2, [lr]
 8021b40:	e7d6      	b.n	8021af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021b42:	b017      	add	sp, #92	; 0x5c
 8021b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b4c:	b085      	sub	sp, #20
 8021b4e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021b52:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021b56:	9103      	str	r1, [sp, #12]
 8021b58:	fb00 7406 	mla	r4, r0, r6, r7
 8021b5c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021b60:	2800      	cmp	r0, #0
 8021b62:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021b66:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021b6a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021b6e:	9501      	str	r5, [sp, #4]
 8021b70:	eb02 0904 	add.w	r9, r2, r4
 8021b74:	f2c0 8141 	blt.w	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021b78:	4583      	cmp	fp, r0
 8021b7a:	f340 813e 	ble.w	8021dfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021b7e:	2f00      	cmp	r7, #0
 8021b80:	f2c0 8137 	blt.w	8021df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021b84:	42be      	cmp	r6, r7
 8021b86:	f340 8134 	ble.w	8021df2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021b8a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021b8e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021b92:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021b96:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021b9a:	4355      	muls	r5, r2
 8021b9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ba0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021ba4:	fb0c f203 	mul.w	r2, ip, r3
 8021ba8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021bac:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021bb0:	441d      	add	r5, r3
 8021bb2:	f102 0320 	add.w	r3, r2, #32
 8021bb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021bba:	0a1b      	lsrs	r3, r3, #8
 8021bbc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021bc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021bc4:	431c      	orrs	r4, r3
 8021bc6:	1c7b      	adds	r3, r7, #1
 8021bc8:	f100 811c 	bmi.w	8021e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021bcc:	429e      	cmp	r6, r3
 8021bce:	f340 8119 	ble.w	8021e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021bd2:	2900      	cmp	r1, #0
 8021bd4:	f000 8119 	beq.w	8021e0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021bd8:	9a01      	ldr	r2, [sp, #4]
 8021bda:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021bde:	8855      	ldrh	r5, [r2, #2]
 8021be0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021be4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021be8:	fb08 f802 	mul.w	r8, r8, r2
 8021bec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021bf0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021bf4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021bf8:	435d      	muls	r5, r3
 8021bfa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021bfe:	44d0      	add	r8, sl
 8021c00:	f105 0a20 	add.w	sl, r5, #32
 8021c04:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021c08:	0a2d      	lsrs	r5, r5, #8
 8021c0a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021c0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c12:	432a      	orrs	r2, r5
 8021c14:	3001      	adds	r0, #1
 8021c16:	f100 80fe 	bmi.w	8021e16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021c1a:	4583      	cmp	fp, r0
 8021c1c:	f340 80fb 	ble.w	8021e16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021c20:	f1be 0f00 	cmp.w	lr, #0
 8021c24:	f000 80fc 	beq.w	8021e20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021c28:	2f00      	cmp	r7, #0
 8021c2a:	f2c0 80f1 	blt.w	8021e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021c2e:	42be      	cmp	r6, r7
 8021c30:	f340 80ee 	ble.w	8021e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021c34:	9801      	ldr	r0, [sp, #4]
 8021c36:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021c3a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021c3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021c42:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021c46:	fb0a fa00 	mul.w	sl, sl, r0
 8021c4a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021c4e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021c52:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021c56:	fb05 f808 	mul.w	r8, r5, r8
 8021c5a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021c5e:	4482      	add	sl, r0
 8021c60:	f108 0020 	add.w	r0, r8, #32
 8021c64:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021c68:	0a00      	lsrs	r0, r0, #8
 8021c6a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021c6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c72:	ea4b 0b00 	orr.w	fp, fp, r0
 8021c76:	3701      	adds	r7, #1
 8021c78:	f100 80d7 	bmi.w	8021e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021c7c:	42be      	cmp	r6, r7
 8021c7e:	f340 80d4 	ble.w	8021e2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021c82:	2900      	cmp	r1, #0
 8021c84:	f000 80d4 	beq.w	8021e30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021c88:	3601      	adds	r6, #1
 8021c8a:	9801      	ldr	r0, [sp, #4]
 8021c8c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021c90:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021c94:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021c98:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021c9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ca0:	fb09 f906 	mul.w	r9, r9, r6
 8021ca4:	fb07 f800 	mul.w	r8, r7, r0
 8021ca8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021cac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021cb0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021cb4:	44d1      	add	r9, sl
 8021cb6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021cba:	f108 0020 	add.w	r0, r8, #32
 8021cbe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021cc2:	0a00      	lsrs	r0, r0, #8
 8021cc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021cc8:	4330      	orrs	r0, r6
 8021cca:	b28e      	uxth	r6, r1
 8021ccc:	fa1f f98e 	uxth.w	r9, lr
 8021cd0:	fb06 f809 	mul.w	r8, r6, r9
 8021cd4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021cd8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021cdc:	0136      	lsls	r6, r6, #4
 8021cde:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ce2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021ce6:	9601      	str	r6, [sp, #4]
 8021ce8:	ea4a 0404 	orr.w	r4, sl, r4
 8021cec:	fa1f f689 	uxth.w	r6, r9
 8021cf0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021cf4:	fb11 f90e 	smulbb	r9, r1, lr
 8021cf8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021cfc:	9602      	str	r6, [sp, #8]
 8021cfe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d02:	4626      	mov	r6, r4
 8021d04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021d08:	f1ce 0410 	rsb	r4, lr, #16
 8021d0c:	1a64      	subs	r4, r4, r1
 8021d0e:	ea4a 0202 	orr.w	r2, sl, r2
 8021d12:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021d16:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021d1a:	434a      	muls	r2, r1
 8021d1c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021d20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d24:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021d28:	fb04 2406 	mla	r4, r4, r6, r2
 8021d2c:	ea4a 0000 	orr.w	r0, sl, r0
 8021d30:	fb09 4200 	mla	r2, r9, r0, r4
 8021d34:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021d38:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021d3c:	9801      	ldr	r0, [sp, #4]
 8021d3e:	9903      	ldr	r1, [sp, #12]
 8021d40:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021d44:	ea44 0b0b 	orr.w	fp, r4, fp
 8021d48:	9c02      	ldr	r4, [sp, #8]
 8021d4a:	8809      	ldrh	r1, [r1, #0]
 8021d4c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021d50:	1b00      	subs	r0, r0, r4
 8021d52:	9c01      	ldr	r4, [sp, #4]
 8021d54:	eba4 0608 	sub.w	r6, r4, r8
 8021d58:	b2b6      	uxth	r6, r6
 8021d5a:	b280      	uxth	r0, r0
 8021d5c:	4373      	muls	r3, r6
 8021d5e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021d62:	9802      	ldr	r0, [sp, #8]
 8021d64:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021d68:	fb00 3505 	mla	r5, r0, r5, r3
 8021d6c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021d70:	fb08 5707 	mla	r7, r8, r7, r5
 8021d74:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021d78:	120b      	asrs	r3, r1, #8
 8021d7a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021d7e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021d82:	b2ff      	uxtb	r7, r7
 8021d84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d88:	10c8      	asrs	r0, r1, #3
 8021d8a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021d8e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021d92:	00c9      	lsls	r1, r1, #3
 8021d94:	437b      	muls	r3, r7
 8021d96:	ea42 0e0e 	orr.w	lr, r2, lr
 8021d9a:	b2c9      	uxtb	r1, r1
 8021d9c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021da0:	fa1f f28e 	uxth.w	r2, lr
 8021da4:	4378      	muls	r0, r7
 8021da6:	434f      	muls	r7, r1
 8021da8:	1c59      	adds	r1, r3, #1
 8021daa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021dae:	1213      	asrs	r3, r2, #8
 8021db0:	f023 0307 	bic.w	r3, r3, #7
 8021db4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021db8:	1c41      	adds	r1, r0, #1
 8021dba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021dbe:	10d1      	asrs	r1, r2, #3
 8021dc0:	f021 0103 	bic.w	r1, r1, #3
 8021dc4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021dc8:	021b      	lsls	r3, r3, #8
 8021dca:	00c9      	lsls	r1, r1, #3
 8021dcc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021dd0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021dd4:	430b      	orrs	r3, r1
 8021dd6:	1c79      	adds	r1, r7, #1
 8021dd8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021ddc:	00d2      	lsls	r2, r2, #3
 8021dde:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021de2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021de6:	431a      	orrs	r2, r3
 8021de8:	9b03      	ldr	r3, [sp, #12]
 8021dea:	801a      	strh	r2, [r3, #0]
 8021dec:	b005      	add	sp, #20
 8021dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021df2:	f04f 0c00 	mov.w	ip, #0
 8021df6:	4664      	mov	r4, ip
 8021df8:	e6e5      	b.n	8021bc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021dfa:	2300      	movs	r3, #0
 8021dfc:	469c      	mov	ip, r3
 8021dfe:	461a      	mov	r2, r3
 8021e00:	461c      	mov	r4, r3
 8021e02:	e707      	b.n	8021c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021e04:	2300      	movs	r3, #0
 8021e06:	461a      	mov	r2, r3
 8021e08:	e704      	b.n	8021c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021e0a:	460b      	mov	r3, r1
 8021e0c:	460a      	mov	r2, r1
 8021e0e:	e701      	b.n	8021c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021e10:	2500      	movs	r5, #0
 8021e12:	46ab      	mov	fp, r5
 8021e14:	e72f      	b.n	8021c76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021e16:	2700      	movs	r7, #0
 8021e18:	463d      	mov	r5, r7
 8021e1a:	4638      	mov	r0, r7
 8021e1c:	46bb      	mov	fp, r7
 8021e1e:	e754      	b.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021e20:	4677      	mov	r7, lr
 8021e22:	4675      	mov	r5, lr
 8021e24:	4670      	mov	r0, lr
 8021e26:	46f3      	mov	fp, lr
 8021e28:	e74f      	b.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021e2a:	2700      	movs	r7, #0
 8021e2c:	4638      	mov	r0, r7
 8021e2e:	e74c      	b.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021e30:	460f      	mov	r7, r1
 8021e32:	4608      	mov	r0, r1
 8021e34:	e749      	b.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021e3c:	b093      	sub	sp, #76	; 0x4c
 8021e3e:	9210      	str	r2, [sp, #64]	; 0x40
 8021e40:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021e42:	910e      	str	r1, [sp, #56]	; 0x38
 8021e44:	9306      	str	r3, [sp, #24]
 8021e46:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021e4a:	9011      	str	r0, [sp, #68]	; 0x44
 8021e4c:	6850      	ldr	r0, [r2, #4]
 8021e4e:	6812      	ldr	r2, [r2, #0]
 8021e50:	fb00 1303 	mla	r3, r0, r3, r1
 8021e54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021e58:	9307      	str	r3, [sp, #28]
 8021e5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e5c:	681b      	ldr	r3, [r3, #0]
 8021e5e:	9308      	str	r3, [sp, #32]
 8021e60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e62:	685b      	ldr	r3, [r3, #4]
 8021e64:	9309      	str	r3, [sp, #36]	; 0x24
 8021e66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021e68:	2b00      	cmp	r3, #0
 8021e6a:	dc03      	bgt.n	8021e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021e6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021e6e:	2b00      	cmp	r3, #0
 8021e70:	f340 83b4 	ble.w	80225dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021e74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e7e:	1e48      	subs	r0, r1, #1
 8021e80:	1e55      	subs	r5, r2, #1
 8021e82:	9b06      	ldr	r3, [sp, #24]
 8021e84:	2b00      	cmp	r3, #0
 8021e86:	f340 8163 	ble.w	8022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021e8a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021e8c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021e8e:	1436      	asrs	r6, r6, #16
 8021e90:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021e94:	d406      	bmi.n	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021e96:	4286      	cmp	r6, r0
 8021e98:	da04      	bge.n	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021e9a:	2b00      	cmp	r3, #0
 8021e9c:	db02      	blt.n	8021ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021e9e:	42ab      	cmp	r3, r5
 8021ea0:	f2c0 8157 	blt.w	8022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021ea4:	3601      	adds	r6, #1
 8021ea6:	f100 8144 	bmi.w	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021eaa:	42b1      	cmp	r1, r6
 8021eac:	f2c0 8141 	blt.w	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021eb0:	3301      	adds	r3, #1
 8021eb2:	f100 813e 	bmi.w	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021eb6:	429a      	cmp	r2, r3
 8021eb8:	f2c0 813b 	blt.w	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ebc:	9b06      	ldr	r3, [sp, #24]
 8021ebe:	9f07      	ldr	r7, [sp, #28]
 8021ec0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ec2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021ec6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021ec8:	2b00      	cmp	r3, #0
 8021eca:	f340 8164 	ble.w	8022196 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021ece:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021ed0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021ed2:	1418      	asrs	r0, r3, #16
 8021ed4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021ed6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021eda:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021edc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021ee0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ee2:	142d      	asrs	r5, r5, #16
 8021ee4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021ee8:	f100 81ee 	bmi.w	80222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021eec:	f102 3eff 	add.w	lr, r2, #4294967295
 8021ef0:	4575      	cmp	r5, lr
 8021ef2:	f280 81e9 	bge.w	80222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021ef6:	2800      	cmp	r0, #0
 8021ef8:	f2c0 81e6 	blt.w	80222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021efc:	f103 3eff 	add.w	lr, r3, #4294967295
 8021f00:	4570      	cmp	r0, lr
 8021f02:	f280 81e1 	bge.w	80222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021f06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f08:	b212      	sxth	r2, r2
 8021f0a:	fb00 5002 	mla	r0, r0, r2, r5
 8021f0e:	fa1f fe81 	uxth.w	lr, r1
 8021f12:	eb03 0a00 	add.w	sl, r3, r0
 8021f16:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021f1a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021f1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021f22:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021f26:	b29b      	uxth	r3, r3
 8021f28:	f1bc 0f00 	cmp.w	ip, #0
 8021f2c:	f000 8179 	beq.w	8022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021f30:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021f34:	940a      	str	r4, [sp, #40]	; 0x28
 8021f36:	eb0a 0b02 	add.w	fp, sl, r2
 8021f3a:	fa1f fa8c 	uxth.w	sl, ip
 8021f3e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021f42:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021f46:	fa1f fa8a 	uxth.w	sl, sl
 8021f4a:	eba5 050e 	sub.w	r5, r5, lr
 8021f4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021f52:	940b      	str	r4, [sp, #44]	; 0x2c
 8021f54:	eba3 030a 	sub.w	r3, r3, sl
 8021f58:	b2ad      	uxth	r5, r5
 8021f5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021f5c:	b29b      	uxth	r3, r3
 8021f5e:	fb08 f505 	mul.w	r5, r8, r5
 8021f62:	fb09 5303 	mla	r3, r9, r3, r5
 8021f66:	fb0a 3304 	mla	r3, sl, r4, r3
 8021f6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021f6c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021f70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f74:	2b00      	cmp	r3, #0
 8021f76:	f000 80cf 	beq.w	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f7a:	9c08      	ldr	r4, [sp, #32]
 8021f7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021f80:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021f84:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021f88:	f000 8150 	beq.w	802222c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021f8c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021f90:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021f94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f98:	fb09 f000 	mul.w	r0, r9, r0
 8021f9c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021fa0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021fa4:	f100 0b20 	add.w	fp, r0, #32
 8021fa8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021fac:	44ce      	add	lr, r9
 8021fae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021fb2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021fb6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021fba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021fbe:	ea4e 0909 	orr.w	r9, lr, r9
 8021fc2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021fc6:	8868      	ldrh	r0, [r5, #2]
 8021fc8:	d019      	beq.n	8021ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021fca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021fce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021fd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021fd6:	fb08 f800 	mul.w	r8, r8, r0
 8021fda:	fb0a fe0e 	mul.w	lr, sl, lr
 8021fde:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021fe2:	f108 0b20 	add.w	fp, r8, #32
 8021fe6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021fea:	4486      	add	lr, r0
 8021fec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021ff0:	0a00      	lsrs	r0, r0, #8
 8021ff2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ffa:	ea4e 0000 	orr.w	r0, lr, r0
 8021ffe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022002:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022006:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802200a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802200e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022012:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022016:	ea4e 0909 	orr.w	r9, lr, r9
 802201a:	ea4a 0000 	orr.w	r0, sl, r0
 802201e:	f1bc 0f00 	cmp.w	ip, #0
 8022022:	f000 8105 	beq.w	8022230 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022026:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802202a:	3a01      	subs	r2, #1
 802202c:	0052      	lsls	r2, r2, #1
 802202e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022030:	3202      	adds	r2, #2
 8022032:	2cff      	cmp	r4, #255	; 0xff
 8022034:	eb05 0e02 	add.w	lr, r5, r2
 8022038:	5aaa      	ldrh	r2, [r5, r2]
 802203a:	d018      	beq.n	802206e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802203c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022040:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022044:	fb04 fa02 	mul.w	sl, r4, r2
 8022048:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802204c:	fb08 f805 	mul.w	r8, r8, r5
 8022050:	f10a 0520 	add.w	r5, sl, #32
 8022054:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022058:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802205c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022060:	4442      	add	r2, r8
 8022062:	0a2d      	lsrs	r5, r5, #8
 8022064:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022068:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802206c:	432a      	orrs	r2, r5
 802206e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022070:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022074:	2cff      	cmp	r4, #255	; 0xff
 8022076:	d01a      	beq.n	80220ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022078:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802207c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022080:	fb04 fa05 	mul.w	sl, r4, r5
 8022084:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022088:	fb08 f80e 	mul.w	r8, r8, lr
 802208c:	f10a 0e20 	add.w	lr, sl, #32
 8022090:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022094:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022098:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802209c:	4445      	add	r5, r8
 802209e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80220a2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80220a6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80220aa:	ea45 050e 	orr.w	r5, r5, lr
 80220ae:	fb1c fe01 	smulbb	lr, ip, r1
 80220b2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80220b6:	f1cc 0810 	rsb	r8, ip, #16
 80220ba:	eba8 0801 	sub.w	r8, r8, r1
 80220be:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80220c2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80220c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80220ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80220ce:	4341      	muls	r1, r0
 80220d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80220d8:	ea4a 0202 	orr.w	r2, sl, r2
 80220dc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80220e0:	fb09 1108 	mla	r1, r9, r8, r1
 80220e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80220e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80220ec:	fb0c 1102 	mla	r1, ip, r2, r1
 80220f0:	ea4b 0505 	orr.w	r5, fp, r5
 80220f4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80220f8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80220fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022100:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022104:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022108:	ea42 0e0e 	orr.w	lr, r2, lr
 802210c:	fa1f f28e 	uxth.w	r2, lr
 8022110:	2bff      	cmp	r3, #255	; 0xff
 8022112:	f040 80a1 	bne.w	8022258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022116:	803a      	strh	r2, [r7, #0]
 8022118:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802211a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802211c:	4413      	add	r3, r2
 802211e:	931d      	str	r3, [sp, #116]	; 0x74
 8022120:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022122:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022124:	441a      	add	r2, r3
 8022126:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022128:	921e      	str	r2, [sp, #120]	; 0x78
 802212a:	3b01      	subs	r3, #1
 802212c:	3702      	adds	r7, #2
 802212e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022130:	e6c9      	b.n	8021ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022132:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022134:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022136:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022138:	4433      	add	r3, r6
 802213a:	931d      	str	r3, [sp, #116]	; 0x74
 802213c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802213e:	441c      	add	r4, r3
 8022140:	9b06      	ldr	r3, [sp, #24]
 8022142:	941e      	str	r4, [sp, #120]	; 0x78
 8022144:	3b01      	subs	r3, #1
 8022146:	9306      	str	r3, [sp, #24]
 8022148:	9b07      	ldr	r3, [sp, #28]
 802214a:	3302      	adds	r3, #2
 802214c:	9307      	str	r3, [sp, #28]
 802214e:	e698      	b.n	8021e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022150:	d028      	beq.n	80221a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022152:	9b06      	ldr	r3, [sp, #24]
 8022154:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022156:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022158:	3b01      	subs	r3, #1
 802215a:	fb00 5003 	mla	r0, r0, r3, r5
 802215e:	1400      	asrs	r0, r0, #16
 8022160:	f53f aeac 	bmi.w	8021ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022164:	3901      	subs	r1, #1
 8022166:	4288      	cmp	r0, r1
 8022168:	f6bf aea8 	bge.w	8021ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802216c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802216e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022170:	fb01 0303 	mla	r3, r1, r3, r0
 8022174:	141b      	asrs	r3, r3, #16
 8022176:	f53f aea1 	bmi.w	8021ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802217a:	3a01      	subs	r2, #1
 802217c:	4293      	cmp	r3, r2
 802217e:	f6bf ae9d 	bge.w	8021ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022182:	9b06      	ldr	r3, [sp, #24]
 8022184:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022188:	930f      	str	r3, [sp, #60]	; 0x3c
 802218a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802218e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022190:	2b00      	cmp	r3, #0
 8022192:	f300 80b6 	bgt.w	8022302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022196:	9b06      	ldr	r3, [sp, #24]
 8022198:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802219c:	9b07      	ldr	r3, [sp, #28]
 802219e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80221a2:	9307      	str	r3, [sp, #28]
 80221a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80221a6:	2b00      	cmp	r3, #0
 80221a8:	f340 8218 	ble.w	80225dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80221ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80221b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80221b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80221ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80221be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80221c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80221c6:	eef0 6a62 	vmov.f32	s13, s5
 80221ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80221ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80221d6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80221da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80221de:	eef0 6a43 	vmov.f32	s13, s6
 80221e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80221e6:	ee12 2a90 	vmov	r2, s5
 80221ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80221ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80221f2:	ee13 2a10 	vmov	r2, s6
 80221f6:	931f      	str	r3, [sp, #124]	; 0x7c
 80221f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80221fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80221fe:	9320      	str	r3, [sp, #128]	; 0x80
 8022200:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022202:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022204:	3b01      	subs	r3, #1
 8022206:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802220a:	930e      	str	r3, [sp, #56]	; 0x38
 802220c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802220e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022212:	bf08      	it	eq
 8022214:	4613      	moveq	r3, r2
 8022216:	9306      	str	r3, [sp, #24]
 8022218:	eeb0 3a67 	vmov.f32	s6, s15
 802221c:	eef0 2a47 	vmov.f32	s5, s14
 8022220:	e621      	b.n	8021e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022222:	fb08 f505 	mul.w	r5, r8, r5
 8022226:	fb09 5303 	mla	r3, r9, r3, r5
 802222a:	e6a1      	b.n	8021f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802222c:	4681      	mov	r9, r0
 802222e:	e6c8      	b.n	8021fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022230:	f1c1 0210 	rsb	r2, r1, #16
 8022234:	4341      	muls	r1, r0
 8022236:	fb09 1902 	mla	r9, r9, r2, r1
 802223a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802223e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022242:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022246:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802224a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802224e:	ea42 0909 	orr.w	r9, r2, r9
 8022252:	fa1f f289 	uxth.w	r2, r9
 8022256:	e75b      	b.n	8022110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022258:	f8b7 c000 	ldrh.w	ip, [r7]
 802225c:	43db      	mvns	r3, r3
 802225e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022262:	fa5f fe83 	uxtb.w	lr, r3
 8022266:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802226a:	fb00 f00e 	mul.w	r0, r0, lr
 802226e:	1c41      	adds	r1, r0, #1
 8022270:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022274:	1211      	asrs	r1, r2, #8
 8022276:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802227a:	f021 0107 	bic.w	r1, r1, #7
 802227e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022282:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022286:	48d7      	ldr	r0, [pc, #860]	; (80225e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022288:	fb05 f50e 	mul.w	r5, r5, lr
 802228c:	b2c9      	uxtb	r1, r1
 802228e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022292:	1c69      	adds	r1, r5, #1
 8022294:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022298:	10d1      	asrs	r1, r2, #3
 802229a:	f021 0103 	bic.w	r1, r1, #3
 802229e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80222a2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80222a6:	b2db      	uxtb	r3, r3
 80222a8:	00c9      	lsls	r1, r1, #3
 80222aa:	fb03 f30e 	mul.w	r3, r3, lr
 80222ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80222b2:	4301      	orrs	r1, r0
 80222b4:	1c58      	adds	r0, r3, #1
 80222b6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80222ba:	00d2      	lsls	r2, r2, #3
 80222bc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80222c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80222c4:	430a      	orrs	r2, r1
 80222c6:	e726      	b.n	8022116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80222c8:	f115 0e01 	adds.w	lr, r5, #1
 80222cc:	f53f af24 	bmi.w	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80222d0:	4572      	cmp	r2, lr
 80222d2:	f6ff af21 	blt.w	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80222d6:	f110 0e01 	adds.w	lr, r0, #1
 80222da:	f53f af1d 	bmi.w	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80222de:	4573      	cmp	r3, lr
 80222e0:	f6ff af1a 	blt.w	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80222e4:	b21b      	sxth	r3, r3
 80222e6:	b212      	sxth	r2, r2
 80222e8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80222ec:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80222f0:	9301      	str	r3, [sp, #4]
 80222f2:	9200      	str	r2, [sp, #0]
 80222f4:	4639      	mov	r1, r7
 80222f6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80222fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80222fc:	f7ff fc24 	bl	8021b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022300:	e70a      	b.n	8022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022302:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022304:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022308:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802230a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802230e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022310:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022314:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022316:	141f      	asrs	r7, r3, #16
 8022318:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802231a:	141b      	asrs	r3, r3, #16
 802231c:	fb01 3707 	mla	r7, r1, r7, r3
 8022320:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022322:	fa1f fc82 	uxth.w	ip, r2
 8022326:	eb03 0a07 	add.w	sl, r3, r7
 802232a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802232e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022332:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022336:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802233a:	b29b      	uxth	r3, r3
 802233c:	2d00      	cmp	r5, #0
 802233e:	f000 80fe 	beq.w	802253e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022342:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022346:	940c      	str	r4, [sp, #48]	; 0x30
 8022348:	eb0a 0b01 	add.w	fp, sl, r1
 802234c:	fa1f fa85 	uxth.w	sl, r5
 8022350:	fb0a fc0c 	mul.w	ip, sl, ip
 8022354:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022358:	fa1f fa8a 	uxth.w	sl, sl
 802235c:	eba0 000c 	sub.w	r0, r0, ip
 8022360:	eba3 030a 	sub.w	r3, r3, sl
 8022364:	b280      	uxth	r0, r0
 8022366:	fb08 f000 	mul.w	r0, r8, r0
 802236a:	b29b      	uxth	r3, r3
 802236c:	fb09 0303 	mla	r3, r9, r3, r0
 8022370:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022372:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022376:	940d      	str	r4, [sp, #52]	; 0x34
 8022378:	fb0a 3300 	mla	r3, sl, r0, r3
 802237c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022380:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022384:	2b00      	cmp	r3, #0
 8022386:	f000 80cc 	beq.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802238a:	9808      	ldr	r0, [sp, #32]
 802238c:	9c08      	ldr	r4, [sp, #32]
 802238e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022392:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022396:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802239a:	f000 80d5 	beq.w	8022548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802239e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80223a2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80223a6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80223aa:	fb09 f707 	mul.w	r7, r9, r7
 80223ae:	fb0a fc0c 	mul.w	ip, sl, ip
 80223b2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80223b6:	f107 0b20 	add.w	fp, r7, #32
 80223ba:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80223be:	44cc      	add	ip, r9
 80223c0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80223c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80223cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80223d0:	ea4c 0909 	orr.w	r9, ip, r9
 80223d4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80223d8:	8847      	ldrh	r7, [r0, #2]
 80223da:	d019      	beq.n	8022410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80223dc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80223e0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80223e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80223e8:	fb08 f807 	mul.w	r8, r8, r7
 80223ec:	fb0a fc0c 	mul.w	ip, sl, ip
 80223f0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80223f4:	f108 0b20 	add.w	fp, r8, #32
 80223f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80223fc:	44bc      	add	ip, r7
 80223fe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022402:	0a3f      	lsrs	r7, r7, #8
 8022404:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022408:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802240c:	ea4c 0707 	orr.w	r7, ip, r7
 8022410:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022414:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022418:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802241c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022420:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022424:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022428:	ea4c 0909 	orr.w	r9, ip, r9
 802242c:	ea4a 0707 	orr.w	r7, sl, r7
 8022430:	2d00      	cmp	r5, #0
 8022432:	f000 808b 	beq.w	802254c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022436:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802243a:	3901      	subs	r1, #1
 802243c:	0049      	lsls	r1, r1, #1
 802243e:	3102      	adds	r1, #2
 8022440:	eb00 0c01 	add.w	ip, r0, r1
 8022444:	5a41      	ldrh	r1, [r0, r1]
 8022446:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022448:	28ff      	cmp	r0, #255	; 0xff
 802244a:	d019      	beq.n	8022480 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802244c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802244e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022452:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022456:	fb04 fa01 	mul.w	sl, r4, r1
 802245a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802245e:	fb08 f800 	mul.w	r8, r8, r0
 8022462:	f10a 0020 	add.w	r0, sl, #32
 8022466:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802246a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802246e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022472:	4441      	add	r1, r8
 8022474:	0a00      	lsrs	r0, r0, #8
 8022476:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802247a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802247e:	4301      	orrs	r1, r0
 8022480:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022482:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022486:	2cff      	cmp	r4, #255	; 0xff
 8022488:	d01a      	beq.n	80224c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802248a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802248e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022492:	fb04 fa00 	mul.w	sl, r4, r0
 8022496:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802249a:	fb08 f80c 	mul.w	r8, r8, ip
 802249e:	f10a 0c20 	add.w	ip, sl, #32
 80224a2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80224a6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80224aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80224ae:	4440      	add	r0, r8
 80224b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224b4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80224b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80224bc:	ea40 000c 	orr.w	r0, r0, ip
 80224c0:	fb15 fc02 	smulbb	ip, r5, r2
 80224c4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80224c8:	f1c5 0810 	rsb	r8, r5, #16
 80224cc:	eba8 0802 	sub.w	r8, r8, r2
 80224d0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80224d4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80224d8:	437a      	muls	r2, r7
 80224da:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80224de:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80224e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80224ea:	fb09 2208 	mla	r2, r9, r8, r2
 80224ee:	ea4a 0101 	orr.w	r1, sl, r1
 80224f2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80224f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80224fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80224fe:	fb05 2201 	mla	r2, r5, r1, r2
 8022502:	ea4b 0000 	orr.w	r0, fp, r0
 8022506:	fb0c 2200 	mla	r2, ip, r0, r2
 802250a:	0d57      	lsrs	r7, r2, #21
 802250c:	0952      	lsrs	r2, r2, #5
 802250e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022512:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022516:	433a      	orrs	r2, r7
 8022518:	2bff      	cmp	r3, #255	; 0xff
 802251a:	b292      	uxth	r2, r2
 802251c:	d127      	bne.n	802256e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802251e:	f8ae 2000 	strh.w	r2, [lr]
 8022522:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022524:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022526:	4413      	add	r3, r2
 8022528:	931d      	str	r3, [sp, #116]	; 0x74
 802252a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802252c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802252e:	441a      	add	r2, r3
 8022530:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022532:	921e      	str	r2, [sp, #120]	; 0x78
 8022534:	3b01      	subs	r3, #1
 8022536:	f10e 0e02 	add.w	lr, lr, #2
 802253a:	930f      	str	r3, [sp, #60]	; 0x3c
 802253c:	e627      	b.n	802218e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802253e:	fb08 f000 	mul.w	r0, r8, r0
 8022542:	fb09 0303 	mla	r3, r9, r3, r0
 8022546:	e71b      	b.n	8022380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022548:	46b9      	mov	r9, r7
 802254a:	e743      	b.n	80223d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802254c:	f1c2 0110 	rsb	r1, r2, #16
 8022550:	437a      	muls	r2, r7
 8022552:	fb09 2901 	mla	r9, r9, r1, r2
 8022556:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802255a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802255e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022562:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022566:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802256a:	4302      	orrs	r2, r0
 802256c:	e7d4      	b.n	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802256e:	f8be 7000 	ldrh.w	r7, [lr]
 8022572:	4c1c      	ldr	r4, [pc, #112]	; (80225e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022574:	43db      	mvns	r3, r3
 8022576:	1238      	asrs	r0, r7, #8
 8022578:	fa5f fc83 	uxtb.w	ip, r3
 802257c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022580:	10fd      	asrs	r5, r7, #3
 8022582:	fb00 f00c 	mul.w	r0, r0, ip
 8022586:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802258a:	fb05 f10c 	mul.w	r1, r5, ip
 802258e:	1c45      	adds	r5, r0, #1
 8022590:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022594:	1215      	asrs	r5, r2, #8
 8022596:	f025 0507 	bic.w	r5, r5, #7
 802259a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802259e:	1c4d      	adds	r5, r1, #1
 80225a0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80225a4:	10d1      	asrs	r1, r2, #3
 80225a6:	f021 0103 	bic.w	r1, r1, #3
 80225aa:	00fb      	lsls	r3, r7, #3
 80225ac:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80225b0:	b2db      	uxtb	r3, r3
 80225b2:	b2c0      	uxtb	r0, r0
 80225b4:	00c9      	lsls	r1, r1, #3
 80225b6:	fb03 f30c 	mul.w	r3, r3, ip
 80225ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80225be:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80225c2:	4308      	orrs	r0, r1
 80225c4:	1c59      	adds	r1, r3, #1
 80225c6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80225ca:	00d2      	lsls	r2, r2, #3
 80225cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80225d0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80225d4:	4318      	orrs	r0, r3
 80225d6:	f8ae 0000 	strh.w	r0, [lr]
 80225da:	e7a2      	b.n	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80225dc:	b013      	add	sp, #76	; 0x4c
 80225de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80225e2:	bf00      	nop
 80225e4:	fffff800 	.word	0xfffff800

080225e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80225e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80225ec:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80225f0:	fb05 4c03 	mla	ip, r5, r3, r4
 80225f4:	2d00      	cmp	r5, #0
 80225f6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80225fa:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80225fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022602:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022606:	8808      	ldrh	r0, [r1, #0]
 8022608:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802260c:	f2c0 80a7 	blt.w	802275e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022610:	45aa      	cmp	sl, r5
 8022612:	f340 80a4 	ble.w	802275e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022616:	2c00      	cmp	r4, #0
 8022618:	f2c0 809f 	blt.w	802275a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802261c:	42a3      	cmp	r3, r4
 802261e:	f340 809c 	ble.w	802275a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022622:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022626:	1c62      	adds	r2, r4, #1
 8022628:	f100 809c 	bmi.w	8022764 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802262c:	4293      	cmp	r3, r2
 802262e:	f340 8099 	ble.w	8022764 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022632:	f1b9 0f00 	cmp.w	r9, #0
 8022636:	f000 8095 	beq.w	8022764 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802263a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802263e:	3501      	adds	r5, #1
 8022640:	f100 8094 	bmi.w	802276c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022644:	45aa      	cmp	sl, r5
 8022646:	f340 8091 	ble.w	802276c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802264a:	2f00      	cmp	r7, #0
 802264c:	f000 808e 	beq.w	802276c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022650:	2c00      	cmp	r4, #0
 8022652:	f2c0 8089 	blt.w	8022768 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022656:	42a3      	cmp	r3, r4
 8022658:	f340 8086 	ble.w	8022768 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802265c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022660:	3401      	adds	r4, #1
 8022662:	f100 8086 	bmi.w	8022772 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022666:	42a3      	cmp	r3, r4
 8022668:	f340 8083 	ble.w	8022772 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802266c:	f1b9 0f00 	cmp.w	r9, #0
 8022670:	d07f      	beq.n	8022772 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022672:	3301      	adds	r3, #1
 8022674:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022678:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802267c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022680:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022684:	fb19 fe07 	smulbb	lr, r9, r7
 8022688:	ea44 0808 	orr.w	r8, r4, r8
 802268c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022690:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022694:	f1c7 0210 	rsb	r2, r7, #16
 8022698:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802269c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80226a0:	ea44 0c0c 	orr.w	ip, r4, ip
 80226a4:	eba2 0209 	sub.w	r2, r2, r9
 80226a8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80226ac:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80226b0:	fb04 f40c 	mul.w	r4, r4, ip
 80226b4:	fb02 4808 	mla	r8, r2, r8, r4
 80226b8:	041a      	lsls	r2, r3, #16
 80226ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80226be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80226c2:	4313      	orrs	r3, r2
 80226c4:	042a      	lsls	r2, r5, #16
 80226c6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80226ca:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80226ce:	fb0e 8303 	mla	r3, lr, r3, r8
 80226d2:	432a      	orrs	r2, r5
 80226d4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80226d8:	fb07 3202 	mla	r2, r7, r2, r3
 80226dc:	0d53      	lsrs	r3, r2, #21
 80226de:	0952      	lsrs	r2, r2, #5
 80226e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80226e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226e8:	431a      	orrs	r2, r3
 80226ea:	b293      	uxth	r3, r2
 80226ec:	b2b4      	uxth	r4, r6
 80226ee:	1202      	asrs	r2, r0, #8
 80226f0:	43f6      	mvns	r6, r6
 80226f2:	b2f6      	uxtb	r6, r6
 80226f4:	121d      	asrs	r5, r3, #8
 80226f6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80226fa:	fb12 f206 	smulbb	r2, r2, r6
 80226fe:	10c7      	asrs	r7, r0, #3
 8022700:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022704:	00c0      	lsls	r0, r0, #3
 8022706:	fb05 2504 	mla	r5, r5, r4, r2
 802270a:	b2c0      	uxtb	r0, r0
 802270c:	10da      	asrs	r2, r3, #3
 802270e:	00db      	lsls	r3, r3, #3
 8022710:	b2db      	uxtb	r3, r3
 8022712:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022716:	fb10 f006 	smulbb	r0, r0, r6
 802271a:	b2ad      	uxth	r5, r5
 802271c:	fb03 0004 	mla	r0, r3, r4, r0
 8022720:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022724:	fb17 f706 	smulbb	r7, r7, r6
 8022728:	b280      	uxth	r0, r0
 802272a:	1c6b      	adds	r3, r5, #1
 802272c:	fb02 7204 	mla	r2, r2, r4, r7
 8022730:	b292      	uxth	r2, r2
 8022732:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022736:	1c43      	adds	r3, r0, #1
 8022738:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802273c:	1c50      	adds	r0, r2, #1
 802273e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022742:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022746:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802274a:	0952      	lsrs	r2, r2, #5
 802274c:	432b      	orrs	r3, r5
 802274e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022752:	4313      	orrs	r3, r2
 8022754:	800b      	strh	r3, [r1, #0]
 8022756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802275a:	4680      	mov	r8, r0
 802275c:	e763      	b.n	8022626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802275e:	4684      	mov	ip, r0
 8022760:	4680      	mov	r8, r0
 8022762:	e76c      	b.n	802263e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022764:	4684      	mov	ip, r0
 8022766:	e76a      	b.n	802263e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022768:	4605      	mov	r5, r0
 802276a:	e779      	b.n	8022660 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802276c:	4603      	mov	r3, r0
 802276e:	4605      	mov	r5, r0
 8022770:	e782      	b.n	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022772:	4603      	mov	r3, r0
 8022774:	e780      	b.n	8022678 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022776:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802277a:	b093      	sub	sp, #76	; 0x4c
 802277c:	461d      	mov	r5, r3
 802277e:	9210      	str	r2, [sp, #64]	; 0x40
 8022780:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022782:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022786:	920b      	str	r2, [sp, #44]	; 0x2c
 8022788:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802278c:	910a      	str	r1, [sp, #40]	; 0x28
 802278e:	6859      	ldr	r1, [r3, #4]
 8022790:	681b      	ldr	r3, [r3, #0]
 8022792:	9011      	str	r0, [sp, #68]	; 0x44
 8022794:	fb01 2707 	mla	r7, r1, r7, r2
 8022798:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802279c:	9307      	str	r3, [sp, #28]
 802279e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227a0:	681b      	ldr	r3, [r3, #0]
 80227a2:	9309      	str	r3, [sp, #36]	; 0x24
 80227a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80227a6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80227aa:	43db      	mvns	r3, r3
 80227ac:	b2db      	uxtb	r3, r3
 80227ae:	9308      	str	r3, [sp, #32]
 80227b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80227b2:	2b00      	cmp	r3, #0
 80227b4:	dc03      	bgt.n	80227be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80227b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80227b8:	2b00      	cmp	r3, #0
 80227ba:	f340 8203 	ble.w	8022bc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80227be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227c8:	1e48      	subs	r0, r1, #1
 80227ca:	f102 3cff 	add.w	ip, r2, #4294967295
 80227ce:	2d00      	cmp	r5, #0
 80227d0:	f340 80da 	ble.w	8022988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80227d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80227d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80227dc:	d406      	bmi.n	80227ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80227de:	4586      	cmp	lr, r0
 80227e0:	da04      	bge.n	80227ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80227e2:	2b00      	cmp	r3, #0
 80227e4:	db02      	blt.n	80227ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80227e6:	4563      	cmp	r3, ip
 80227e8:	f2c0 80cf 	blt.w	802298a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80227ec:	f11e 0e01 	adds.w	lr, lr, #1
 80227f0:	f100 80c1 	bmi.w	8022976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80227f4:	4571      	cmp	r1, lr
 80227f6:	f2c0 80be 	blt.w	8022976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80227fa:	3301      	adds	r3, #1
 80227fc:	f100 80bb 	bmi.w	8022976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022800:	429a      	cmp	r2, r3
 8022802:	f2c0 80b8 	blt.w	8022976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022806:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802280a:	46a9      	mov	r9, r5
 802280c:	f1b9 0f00 	cmp.w	r9, #0
 8022810:	f340 80d8 	ble.w	80229c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022814:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022816:	1421      	asrs	r1, r4, #16
 8022818:	ea4f 4026 	mov.w	r0, r6, asr #16
 802281c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022820:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022824:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022828:	f100 8111 	bmi.w	8022a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802282c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022830:	4551      	cmp	r1, sl
 8022832:	f280 810c 	bge.w	8022a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022836:	2800      	cmp	r0, #0
 8022838:	f2c0 8109 	blt.w	8022a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802283c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022840:	4550      	cmp	r0, sl
 8022842:	f280 8104 	bge.w	8022a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022846:	fa0f f38e 	sxth.w	r3, lr
 802284a:	fb00 1103 	mla	r1, r0, r3, r1
 802284e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022850:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022854:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022858:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802285c:	f1bc 0f00 	cmp.w	ip, #0
 8022860:	d007      	beq.n	8022872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022862:	005b      	lsls	r3, r3, #1
 8022864:	eb0a 0003 	add.w	r0, sl, r3
 8022868:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802286c:	930c      	str	r3, [sp, #48]	; 0x30
 802286e:	8843      	ldrh	r3, [r0, #2]
 8022870:	930d      	str	r3, [sp, #52]	; 0x34
 8022872:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022876:	fb12 f30c 	smulbb	r3, r2, ip
 802287a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802287e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022882:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022886:	10db      	asrs	r3, r3, #3
 8022888:	ea40 000e 	orr.w	r0, r0, lr
 802288c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022890:	f1cc 0e10 	rsb	lr, ip, #16
 8022894:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022898:	ebae 0e02 	sub.w	lr, lr, r2
 802289c:	ea4a 0101 	orr.w	r1, sl, r1
 80228a0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80228a4:	4351      	muls	r1, r2
 80228a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80228a8:	9f08      	ldr	r7, [sp, #32]
 80228aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80228ae:	fb0e 1e00 	mla	lr, lr, r0, r1
 80228b2:	0410      	lsls	r0, r2, #16
 80228b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80228b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80228bc:	4310      	orrs	r0, r2
 80228be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80228c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80228c2:	0412      	lsls	r2, r2, #16
 80228c4:	fb03 e000 	mla	r0, r3, r0, lr
 80228c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80228cc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80228d0:	ea42 020e 	orr.w	r2, r2, lr
 80228d4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80228d8:	fb03 0302 	mla	r3, r3, r2, r0
 80228dc:	0d5a      	lsrs	r2, r3, #21
 80228de:	095b      	lsrs	r3, r3, #5
 80228e0:	f8b8 0000 	ldrh.w	r0, [r8]
 80228e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80228ec:	4313      	orrs	r3, r2
 80228ee:	b29b      	uxth	r3, r3
 80228f0:	1201      	asrs	r1, r0, #8
 80228f2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80228f6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80228fa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80228fe:	fb11 f107 	smulbb	r1, r1, r7
 8022902:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022906:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802290a:	00c0      	lsls	r0, r0, #3
 802290c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022910:	b2c0      	uxtb	r0, r0
 8022912:	10d9      	asrs	r1, r3, #3
 8022914:	00db      	lsls	r3, r3, #3
 8022916:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802291a:	b2db      	uxtb	r3, r3
 802291c:	fb10 f007 	smulbb	r0, r0, r7
 8022920:	fa1f fc8c 	uxth.w	ip, ip
 8022924:	fb03 0302 	mla	r3, r3, r2, r0
 8022928:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802292c:	fb1e fe07 	smulbb	lr, lr, r7
 8022930:	fb01 e102 	mla	r1, r1, r2, lr
 8022934:	b29a      	uxth	r2, r3
 8022936:	f10c 0301 	add.w	r3, ip, #1
 802293a:	b289      	uxth	r1, r1
 802293c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022940:	1c53      	adds	r3, r2, #1
 8022942:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022946:	1c4a      	adds	r2, r1, #1
 8022948:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802294c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022950:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022954:	0949      	lsrs	r1, r1, #5
 8022956:	ea43 030c 	orr.w	r3, r3, ip
 802295a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802295e:	430b      	orrs	r3, r1
 8022960:	f8a8 3000 	strh.w	r3, [r8]
 8022964:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022966:	441c      	add	r4, r3
 8022968:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802296a:	f108 0802 	add.w	r8, r8, #2
 802296e:	441e      	add	r6, r3
 8022970:	f109 39ff 	add.w	r9, r9, #4294967295
 8022974:	e74a      	b.n	802280c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022976:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022978:	441c      	add	r4, r3
 802297a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802297c:	441e      	add	r6, r3
 802297e:	9b07      	ldr	r3, [sp, #28]
 8022980:	3302      	adds	r3, #2
 8022982:	3d01      	subs	r5, #1
 8022984:	9307      	str	r3, [sp, #28]
 8022986:	e722      	b.n	80227ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022988:	d022      	beq.n	80229d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802298a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802298c:	1e6b      	subs	r3, r5, #1
 802298e:	fb00 4003 	mla	r0, r0, r3, r4
 8022992:	1400      	asrs	r0, r0, #16
 8022994:	f53f af37 	bmi.w	8022806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022998:	3901      	subs	r1, #1
 802299a:	4288      	cmp	r0, r1
 802299c:	f6bf af33 	bge.w	8022806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80229a0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80229a2:	fb01 6303 	mla	r3, r1, r3, r6
 80229a6:	141b      	asrs	r3, r3, #16
 80229a8:	f53f af2d 	bmi.w	8022806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80229ac:	3a01      	subs	r2, #1
 80229ae:	4293      	cmp	r3, r2
 80229b0:	f6bf af29 	bge.w	8022806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80229b4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80229b8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80229bc:	46a8      	mov	r8, r5
 80229be:	f1b8 0f00 	cmp.w	r8, #0
 80229c2:	dc5e      	bgt.n	8022a82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80229c4:	9b07      	ldr	r3, [sp, #28]
 80229c6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80229ca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80229ce:	9307      	str	r3, [sp, #28]
 80229d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80229d2:	2b00      	cmp	r3, #0
 80229d4:	f340 80f6 	ble.w	8022bc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80229d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80229dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80229e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80229e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80229e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80229ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80229ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80229f2:	eef0 6a62 	vmov.f32	s13, s5
 80229f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80229fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a02:	ee16 4a90 	vmov	r4, s13
 8022a06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a0a:	eef0 6a43 	vmov.f32	s13, s6
 8022a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a12:	ee12 2a90 	vmov	r2, s5
 8022a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a1e:	ee13 2a10 	vmov	r2, s6
 8022a22:	931f      	str	r3, [sp, #124]	; 0x7c
 8022a24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a2a:	9320      	str	r3, [sp, #128]	; 0x80
 8022a2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022a30:	3b01      	subs	r3, #1
 8022a32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a36:	930a      	str	r3, [sp, #40]	; 0x28
 8022a38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a3a:	ee16 6a90 	vmov	r6, s13
 8022a3e:	bf14      	ite	ne
 8022a40:	461d      	movne	r5, r3
 8022a42:	4615      	moveq	r5, r2
 8022a44:	eeb0 3a67 	vmov.f32	s6, s15
 8022a48:	eef0 2a47 	vmov.f32	s5, s14
 8022a4c:	e6b0      	b.n	80227b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022a4e:	f111 0a01 	adds.w	sl, r1, #1
 8022a52:	d487      	bmi.n	8022964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022a54:	45d6      	cmp	lr, sl
 8022a56:	db85      	blt.n	8022964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022a58:	f110 0a01 	adds.w	sl, r0, #1
 8022a5c:	d482      	bmi.n	8022964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022a5e:	4553      	cmp	r3, sl
 8022a60:	db80      	blt.n	8022964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022a62:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022a64:	9101      	str	r1, [sp, #4]
 8022a66:	b21b      	sxth	r3, r3
 8022a68:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022a6c:	9300      	str	r3, [sp, #0]
 8022a6e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022a72:	fa0f f38e 	sxth.w	r3, lr
 8022a76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022a78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022a7a:	4641      	mov	r1, r8
 8022a7c:	f7ff fdb4 	bl	80225e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022a80:	e770      	b.n	8022964 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022a82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022a84:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022a86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022a8a:	1430      	asrs	r0, r6, #16
 8022a8c:	1423      	asrs	r3, r4, #16
 8022a8e:	fb01 3000 	mla	r0, r1, r0, r3
 8022a92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022a94:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022a98:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022a9c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022aa0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022aa4:	8858      	ldrh	r0, [r3, #2]
 8022aa6:	f1be 0f00 	cmp.w	lr, #0
 8022aaa:	d00b      	beq.n	8022ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022aac:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ab0:	3901      	subs	r1, #1
 8022ab2:	0049      	lsls	r1, r1, #1
 8022ab4:	3102      	adds	r1, #2
 8022ab6:	eb03 0b01 	add.w	fp, r3, r1
 8022aba:	5a5b      	ldrh	r3, [r3, r1]
 8022abc:	930e      	str	r3, [sp, #56]	; 0x38
 8022abe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022ac2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022ac4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022ac8:	fb12 f30e 	smulbb	r3, r2, lr
 8022acc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ad0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022ad4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022ad8:	10db      	asrs	r3, r3, #3
 8022ada:	ea41 010c 	orr.w	r1, r1, ip
 8022ade:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ae2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ae6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022aea:	ebac 0c02 	sub.w	ip, ip, r2
 8022aee:	ea4b 0000 	orr.w	r0, fp, r0
 8022af2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022af6:	4350      	muls	r0, r2
 8022af8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022afa:	9f08      	ldr	r7, [sp, #32]
 8022afc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022b00:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022b04:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022b08:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022b0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022b0e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022b10:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b14:	0412      	lsls	r2, r2, #16
 8022b16:	ea4b 0101 	orr.w	r1, fp, r1
 8022b1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022b1e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022b22:	fb03 c101 	mla	r1, r3, r1, ip
 8022b26:	4302      	orrs	r2, r0
 8022b28:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022b2c:	fb03 1202 	mla	r2, r3, r2, r1
 8022b30:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022b34:	0952      	lsrs	r2, r2, #5
 8022b36:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022b3a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022b3e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022b42:	ea4b 0303 	orr.w	r3, fp, r3
 8022b46:	b29b      	uxth	r3, r3
 8022b48:	1211      	asrs	r1, r2, #8
 8022b4a:	1218      	asrs	r0, r3, #8
 8022b4c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022b50:	fb11 f107 	smulbb	r1, r1, r7
 8022b54:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022b58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b5c:	00d2      	lsls	r2, r2, #3
 8022b5e:	fb00 100a 	mla	r0, r0, sl, r1
 8022b62:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022b66:	10d9      	asrs	r1, r3, #3
 8022b68:	b2d2      	uxtb	r2, r2
 8022b6a:	00db      	lsls	r3, r3, #3
 8022b6c:	fb1c fc07 	smulbb	ip, ip, r7
 8022b70:	fb12 f207 	smulbb	r2, r2, r7
 8022b74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022b78:	b2db      	uxtb	r3, r3
 8022b7a:	b280      	uxth	r0, r0
 8022b7c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022b80:	fb03 230a 	mla	r3, r3, sl, r2
 8022b84:	b29b      	uxth	r3, r3
 8022b86:	b289      	uxth	r1, r1
 8022b88:	1c42      	adds	r2, r0, #1
 8022b8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b8e:	f101 0c01 	add.w	ip, r1, #1
 8022b92:	1c5a      	adds	r2, r3, #1
 8022b94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b98:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022b9c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022b9e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022ba2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022ba6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022baa:	4310      	orrs	r0, r2
 8022bac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022bb0:	441c      	add	r4, r3
 8022bb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022bb4:	ea40 000c 	orr.w	r0, r0, ip
 8022bb8:	f829 0b02 	strh.w	r0, [r9], #2
 8022bbc:	441e      	add	r6, r3
 8022bbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8022bc2:	e6fc      	b.n	80229be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022bc4:	b013      	add	sp, #76	; 0x4c
 8022bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022bca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022bca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022bce:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022bd2:	fb0e 4703 	mla	r7, lr, r3, r4
 8022bd6:	f1be 0f00 	cmp.w	lr, #0
 8022bda:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022bde:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022be2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022be6:	8808      	ldrh	r0, [r1, #0]
 8022be8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022bec:	db60      	blt.n	8022cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022bee:	45f1      	cmp	r9, lr
 8022bf0:	dd5e      	ble.n	8022cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022bf2:	2c00      	cmp	r4, #0
 8022bf4:	db5a      	blt.n	8022cac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022bf6:	42a3      	cmp	r3, r4
 8022bf8:	dd58      	ble.n	8022cac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022bfa:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022bfe:	1c62      	adds	r2, r4, #1
 8022c00:	d459      	bmi.n	8022cb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c02:	4293      	cmp	r3, r2
 8022c04:	dd57      	ble.n	8022cb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c06:	2d00      	cmp	r5, #0
 8022c08:	d055      	beq.n	8022cb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022c0a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022c0e:	f11e 0e01 	adds.w	lr, lr, #1
 8022c12:	d454      	bmi.n	8022cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022c14:	45f1      	cmp	r9, lr
 8022c16:	dd52      	ble.n	8022cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022c18:	2e00      	cmp	r6, #0
 8022c1a:	d050      	beq.n	8022cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022c1c:	2c00      	cmp	r4, #0
 8022c1e:	db4c      	blt.n	8022cba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022c20:	42a3      	cmp	r3, r4
 8022c22:	dd4a      	ble.n	8022cba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022c24:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022c28:	3401      	adds	r4, #1
 8022c2a:	d405      	bmi.n	8022c38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022c2c:	42a3      	cmp	r3, r4
 8022c2e:	dd03      	ble.n	8022c38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022c30:	b115      	cbz	r5, 8022c38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022c32:	3301      	adds	r3, #1
 8022c34:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022c38:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022c3c:	fb15 f406 	smulbb	r4, r5, r6
 8022c40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c44:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022c48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c4c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022c50:	ea43 0c0c 	orr.w	ip, r3, ip
 8022c54:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022c58:	f1c6 0310 	rsb	r3, r6, #16
 8022c5c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c60:	1b5b      	subs	r3, r3, r5
 8022c62:	ea4e 0707 	orr.w	r7, lr, r7
 8022c66:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022c6a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022c6e:	437d      	muls	r5, r7
 8022c70:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022c74:	0403      	lsls	r3, r0, #16
 8022c76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c7e:	4318      	orrs	r0, r3
 8022c80:	0413      	lsls	r3, r2, #16
 8022c82:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c86:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c8a:	4313      	orrs	r3, r2
 8022c8c:	fb04 c000 	mla	r0, r4, r0, ip
 8022c90:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022c94:	fb06 0003 	mla	r0, r6, r3, r0
 8022c98:	0d43      	lsrs	r3, r0, #21
 8022c9a:	0940      	lsrs	r0, r0, #5
 8022c9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ca0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ca4:	4318      	orrs	r0, r3
 8022ca6:	8008      	strh	r0, [r1, #0]
 8022ca8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022cac:	4684      	mov	ip, r0
 8022cae:	e7a6      	b.n	8022bfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022cb0:	4607      	mov	r7, r0
 8022cb2:	4684      	mov	ip, r0
 8022cb4:	e7ab      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022cb6:	4607      	mov	r7, r0
 8022cb8:	e7a9      	b.n	8022c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022cba:	4602      	mov	r2, r0
 8022cbc:	e7b4      	b.n	8022c28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022cbe:	4602      	mov	r2, r0
 8022cc0:	e7ba      	b.n	8022c38 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022cc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022cc6:	b08f      	sub	sp, #60	; 0x3c
 8022cc8:	461d      	mov	r5, r3
 8022cca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022ccc:	920c      	str	r2, [sp, #48]	; 0x30
 8022cce:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022cd2:	9107      	str	r1, [sp, #28]
 8022cd4:	6859      	ldr	r1, [r3, #4]
 8022cd6:	681b      	ldr	r3, [r3, #0]
 8022cd8:	900d      	str	r0, [sp, #52]	; 0x34
 8022cda:	fb01 2707 	mla	r7, r1, r7, r2
 8022cde:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022ce2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ce4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022ce8:	f8d3 8000 	ldr.w	r8, [r3]
 8022cec:	9b07      	ldr	r3, [sp, #28]
 8022cee:	2b00      	cmp	r3, #0
 8022cf0:	dc03      	bgt.n	8022cfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022cf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022cf4:	2b00      	cmp	r3, #0
 8022cf6:	f340 8181 	ble.w	8022ffc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022cfa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022cfc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d04:	1e48      	subs	r0, r1, #1
 8022d06:	f102 3cff 	add.w	ip, r2, #4294967295
 8022d0a:	2d00      	cmp	r5, #0
 8022d0c:	f340 809b 	ble.w	8022e46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022d10:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022d14:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022d18:	d406      	bmi.n	8022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022d1a:	4586      	cmp	lr, r0
 8022d1c:	da04      	bge.n	8022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022d1e:	2b00      	cmp	r3, #0
 8022d20:	db02      	blt.n	8022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022d22:	4563      	cmp	r3, ip
 8022d24:	f2c0 8090 	blt.w	8022e48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d28:	f11e 0e01 	adds.w	lr, lr, #1
 8022d2c:	f100 8084 	bmi.w	8022e38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022d30:	4571      	cmp	r1, lr
 8022d32:	f2c0 8081 	blt.w	8022e38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022d36:	3301      	adds	r3, #1
 8022d38:	d47e      	bmi.n	8022e38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022d3a:	429a      	cmp	r2, r3
 8022d3c:	db7c      	blt.n	8022e38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022d3e:	46aa      	mov	sl, r5
 8022d40:	46b9      	mov	r9, r7
 8022d42:	f1ba 0f00 	cmp.w	sl, #0
 8022d46:	f340 8099 	ble.w	8022e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022d4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d4c:	1421      	asrs	r1, r4, #16
 8022d4e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022d52:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022d56:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022d5a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022d5e:	f100 80d0 	bmi.w	8022f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022d62:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022d66:	4559      	cmp	r1, fp
 8022d68:	f280 80cb 	bge.w	8022f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022d6c:	2800      	cmp	r0, #0
 8022d6e:	f2c0 80c8 	blt.w	8022f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022d72:	f103 3bff 	add.w	fp, r3, #4294967295
 8022d76:	4558      	cmp	r0, fp
 8022d78:	f280 80c3 	bge.w	8022f02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022d7c:	fa0f fe8e 	sxth.w	lr, lr
 8022d80:	fb00 110e 	mla	r1, r0, lr, r1
 8022d84:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022d88:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022d8c:	8841      	ldrh	r1, [r0, #2]
 8022d8e:	f1bc 0f00 	cmp.w	ip, #0
 8022d92:	d00b      	beq.n	8022dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022d94:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022d98:	3b01      	subs	r3, #1
 8022d9a:	005b      	lsls	r3, r3, #1
 8022d9c:	3302      	adds	r3, #2
 8022d9e:	eb00 0e03 	add.w	lr, r0, r3
 8022da2:	5ac3      	ldrh	r3, [r0, r3]
 8022da4:	9308      	str	r3, [sp, #32]
 8022da6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022daa:	9309      	str	r3, [sp, #36]	; 0x24
 8022dac:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022db0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022db4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022db8:	ea40 000b 	orr.w	r0, r0, fp
 8022dbc:	fb12 f30c 	smulbb	r3, r2, ip
 8022dc0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022dc4:	10db      	asrs	r3, r3, #3
 8022dc6:	f1cc 0e10 	rsb	lr, ip, #16
 8022dca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022dce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022dd2:	ebae 0e02 	sub.w	lr, lr, r2
 8022dd6:	ea4b 0101 	orr.w	r1, fp, r1
 8022dda:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022dde:	4351      	muls	r1, r2
 8022de0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022de2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022de6:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022dea:	0410      	lsls	r0, r2, #16
 8022dec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022df0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022df4:	4310      	orrs	r0, r2
 8022df6:	9a08      	ldr	r2, [sp, #32]
 8022df8:	9908      	ldr	r1, [sp, #32]
 8022dfa:	0412      	lsls	r2, r2, #16
 8022dfc:	fb03 e000 	mla	r0, r3, r0, lr
 8022e00:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022e04:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022e08:	ea42 020e 	orr.w	r2, r2, lr
 8022e0c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022e10:	fb03 0302 	mla	r3, r3, r2, r0
 8022e14:	0d5a      	lsrs	r2, r3, #21
 8022e16:	095b      	lsrs	r3, r3, #5
 8022e18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e1c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022e20:	4313      	orrs	r3, r2
 8022e22:	f8a9 3000 	strh.w	r3, [r9]
 8022e26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022e28:	441c      	add	r4, r3
 8022e2a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e2c:	f109 0902 	add.w	r9, r9, #2
 8022e30:	441e      	add	r6, r3
 8022e32:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022e36:	e784      	b.n	8022d42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022e38:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022e3a:	441c      	add	r4, r3
 8022e3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e3e:	3d01      	subs	r5, #1
 8022e40:	441e      	add	r6, r3
 8022e42:	3702      	adds	r7, #2
 8022e44:	e761      	b.n	8022d0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022e46:	d01d      	beq.n	8022e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022e48:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022e4a:	1e6b      	subs	r3, r5, #1
 8022e4c:	fb00 4003 	mla	r0, r0, r3, r4
 8022e50:	1400      	asrs	r0, r0, #16
 8022e52:	f53f af74 	bmi.w	8022d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022e56:	3901      	subs	r1, #1
 8022e58:	4288      	cmp	r0, r1
 8022e5a:	f6bf af70 	bge.w	8022d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022e5e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022e60:	fb01 6303 	mla	r3, r1, r3, r6
 8022e64:	141b      	asrs	r3, r3, #16
 8022e66:	f53f af6a 	bmi.w	8022d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022e6a:	3a01      	subs	r2, #1
 8022e6c:	4293      	cmp	r3, r2
 8022e6e:	f6bf af66 	bge.w	8022d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022e72:	46a9      	mov	r9, r5
 8022e74:	46ba      	mov	sl, r7
 8022e76:	f1b9 0f00 	cmp.w	r9, #0
 8022e7a:	dc5a      	bgt.n	8022f32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022e7c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022e80:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022e84:	9b07      	ldr	r3, [sp, #28]
 8022e86:	2b00      	cmp	r3, #0
 8022e88:	f340 80b8 	ble.w	8022ffc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022e8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022e94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022e98:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022e9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ea2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ea6:	eef0 6a62 	vmov.f32	s13, s5
 8022eaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022eae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022eb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022eb6:	ee16 4a90 	vmov	r4, s13
 8022eba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ebe:	eef0 6a43 	vmov.f32	s13, s6
 8022ec2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ec6:	ee12 2a90 	vmov	r2, s5
 8022eca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ece:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ed2:	ee13 2a10 	vmov	r2, s6
 8022ed6:	931b      	str	r3, [sp, #108]	; 0x6c
 8022ed8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022eda:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ede:	931c      	str	r3, [sp, #112]	; 0x70
 8022ee0:	9b07      	ldr	r3, [sp, #28]
 8022ee2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022ee4:	3b01      	subs	r3, #1
 8022ee6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022eea:	9307      	str	r3, [sp, #28]
 8022eec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022eee:	ee16 6a90 	vmov	r6, s13
 8022ef2:	bf14      	ite	ne
 8022ef4:	461d      	movne	r5, r3
 8022ef6:	4615      	moveq	r5, r2
 8022ef8:	eeb0 3a67 	vmov.f32	s6, s15
 8022efc:	eef0 2a47 	vmov.f32	s5, s14
 8022f00:	e6f4      	b.n	8022cec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022f02:	f111 0b01 	adds.w	fp, r1, #1
 8022f06:	d48e      	bmi.n	8022e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f08:	45de      	cmp	lr, fp
 8022f0a:	db8c      	blt.n	8022e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f0c:	f110 0b01 	adds.w	fp, r0, #1
 8022f10:	d489      	bmi.n	8022e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f12:	455b      	cmp	r3, fp
 8022f14:	db87      	blt.n	8022e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f16:	b21b      	sxth	r3, r3
 8022f18:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022f1c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022f20:	9300      	str	r3, [sp, #0]
 8022f22:	4642      	mov	r2, r8
 8022f24:	fa0f f38e 	sxth.w	r3, lr
 8022f28:	4649      	mov	r1, r9
 8022f2a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022f2c:	f7ff fe4d 	bl	8022bca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022f30:	e779      	b.n	8022e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022f32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022f34:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022f38:	1420      	asrs	r0, r4, #16
 8022f3a:	1431      	asrs	r1, r6, #16
 8022f3c:	fb03 0101 	mla	r1, r3, r1, r0
 8022f40:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022f44:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022f48:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022f4c:	8841      	ldrh	r1, [r0, #2]
 8022f4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022f52:	f1be 0f00 	cmp.w	lr, #0
 8022f56:	d00b      	beq.n	8022f70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022f58:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022f5c:	3b01      	subs	r3, #1
 8022f5e:	005b      	lsls	r3, r3, #1
 8022f60:	3302      	adds	r3, #2
 8022f62:	eb00 0b03 	add.w	fp, r0, r3
 8022f66:	5ac3      	ldrh	r3, [r0, r3]
 8022f68:	930a      	str	r3, [sp, #40]	; 0x28
 8022f6a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022f6e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022f70:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022f74:	fb12 f30e 	smulbb	r3, r2, lr
 8022f78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022f7c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f80:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f84:	10db      	asrs	r3, r3, #3
 8022f86:	ea40 000c 	orr.w	r0, r0, ip
 8022f8a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f8e:	f1ce 0c10 	rsb	ip, lr, #16
 8022f92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f96:	ebac 0c02 	sub.w	ip, ip, r2
 8022f9a:	ea4b 0101 	orr.w	r1, fp, r1
 8022f9e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022fa2:	4351      	muls	r1, r2
 8022fa4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022fa6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022faa:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022fae:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022fb2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022fb8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022fba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fbe:	0412      	lsls	r2, r2, #16
 8022fc0:	ea4b 0000 	orr.w	r0, fp, r0
 8022fc4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022fc8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8022fcc:	fb03 c000 	mla	r0, r3, r0, ip
 8022fd0:	ea42 0b0b 	orr.w	fp, r2, fp
 8022fd4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022fd8:	fb03 000b 	mla	r0, r3, fp, r0
 8022fdc:	0d43      	lsrs	r3, r0, #21
 8022fde:	0940      	lsrs	r0, r0, #5
 8022fe0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022fe4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022fe8:	4318      	orrs	r0, r3
 8022fea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022fec:	f82a 0b02 	strh.w	r0, [sl], #2
 8022ff0:	441c      	add	r4, r3
 8022ff2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ff4:	f109 39ff 	add.w	r9, r9, #4294967295
 8022ff8:	441e      	add	r6, r3
 8022ffa:	e73c      	b.n	8022e76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022ffc:	b00f      	add	sp, #60	; 0x3c
 8022ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023006:	b085      	sub	sp, #20
 8023008:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802300c:	9102      	str	r1, [sp, #8]
 802300e:	2c00      	cmp	r4, #0
 8023010:	fb04 7103 	mla	r1, r4, r3, r7
 8023014:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023018:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802301c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023020:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023024:	f2c0 811b 	blt.w	802325e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023028:	45a6      	cmp	lr, r4
 802302a:	f340 8118 	ble.w	802325e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802302e:	2f00      	cmp	r7, #0
 8023030:	f2c0 8113 	blt.w	802325a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023034:	42bb      	cmp	r3, r7
 8023036:	f340 8110 	ble.w	802325a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802303a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802303e:	1c7a      	adds	r2, r7, #1
 8023040:	f100 8110 	bmi.w	8023264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023044:	4293      	cmp	r3, r2
 8023046:	f340 810d 	ble.w	8023264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802304a:	2e00      	cmp	r6, #0
 802304c:	f000 810c 	beq.w	8023268 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023050:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023054:	3401      	adds	r4, #1
 8023056:	f100 810b 	bmi.w	8023270 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802305a:	45a6      	cmp	lr, r4
 802305c:	f340 8108 	ble.w	8023270 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023060:	2800      	cmp	r0, #0
 8023062:	f000 8108 	beq.w	8023276 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023066:	2f00      	cmp	r7, #0
 8023068:	f2c0 8100 	blt.w	802326c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802306c:	42bb      	cmp	r3, r7
 802306e:	f340 80fd 	ble.w	802326c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023072:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023076:	3701      	adds	r7, #1
 8023078:	f100 8100 	bmi.w	802327c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802307c:	42bb      	cmp	r3, r7
 802307e:	f340 80fd 	ble.w	802327c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023082:	2e00      	cmp	r6, #0
 8023084:	f000 80fc 	beq.w	8023280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023088:	3301      	adds	r3, #1
 802308a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802308e:	b2b6      	uxth	r6, r6
 8023090:	b280      	uxth	r0, r0
 8023092:	fb00 fe06 	mul.w	lr, r0, r6
 8023096:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802309a:	0136      	lsls	r6, r6, #4
 802309c:	eba6 070e 	sub.w	r7, r6, lr
 80230a0:	b280      	uxth	r0, r0
 80230a2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80230a6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80230aa:	b2bf      	uxth	r7, r7
 80230ac:	1a1b      	subs	r3, r3, r0
 80230ae:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80230b2:	b29b      	uxth	r3, r3
 80230b4:	fb0a f607 	mul.w	r6, sl, r7
 80230b8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80230bc:	fb0b 6603 	mla	r6, fp, r3, r6
 80230c0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80230c4:	fb00 6609 	mla	r6, r0, r9, r6
 80230c8:	fb0e 6608 	mla	r6, lr, r8, r6
 80230cc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80230d0:	9600      	str	r6, [sp, #0]
 80230d2:	2e00      	cmp	r6, #0
 80230d4:	f000 80be 	beq.w	8023254 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80230d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80230dc:	fb0b fc0c 	mul.w	ip, fp, ip
 80230e0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80230e4:	fb0b f505 	mul.w	r5, fp, r5
 80230e8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80230ec:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80230f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80230f4:	44dc      	add	ip, fp
 80230f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80230fa:	9501      	str	r5, [sp, #4]
 80230fc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023100:	9503      	str	r5, [sp, #12]
 8023102:	9d01      	ldr	r5, [sp, #4]
 8023104:	9e02      	ldr	r6, [sp, #8]
 8023106:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802310a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802310e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023112:	fb0a fc0c 	mul.w	ip, sl, ip
 8023116:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802311a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802311e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023122:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023126:	4465      	add	r5, ip
 8023128:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802312c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023130:	fb09 fc0c 	mul.w	ip, r9, ip
 8023134:	fb09 f904 	mul.w	r9, r9, r4
 8023138:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802313c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023140:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023144:	fb08 f404 	mul.w	r4, r8, r4
 8023148:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802314c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023150:	fb08 f802 	mul.w	r8, r8, r2
 8023154:	fb0a fa01 	mul.w	sl, sl, r1
 8023158:	0a22      	lsrs	r2, r4, #8
 802315a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802315e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023162:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023166:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802316a:	4414      	add	r4, r2
 802316c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023170:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023174:	0a2d      	lsrs	r5, r5, #8
 8023176:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802317a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802317e:	9a03      	ldr	r2, [sp, #12]
 8023180:	8836      	ldrh	r6, [r6, #0]
 8023182:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023186:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802318a:	437d      	muls	r5, r7
 802318c:	4461      	add	r1, ip
 802318e:	0a24      	lsrs	r4, r4, #8
 8023190:	fb02 5503 	mla	r5, r2, r3, r5
 8023194:	0a09      	lsrs	r1, r1, #8
 8023196:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802319a:	fb04 540e 	mla	r4, r4, lr, r5
 802319e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80231a2:	fb01 4100 	mla	r1, r1, r0, r4
 80231a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231aa:	0a09      	lsrs	r1, r1, #8
 80231ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231b0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80231b4:	fb07 f70a 	mul.w	r7, r7, sl
 80231b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80231bc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80231c0:	fb03 7101 	mla	r1, r3, r1, r7
 80231c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80231c8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80231cc:	fb0e 1e08 	mla	lr, lr, r8, r1
 80231d0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80231d4:	fb00 e101 	mla	r1, r0, r1, lr
 80231d8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80231dc:	9a00      	ldr	r2, [sp, #0]
 80231de:	b287      	uxth	r7, r0
 80231e0:	437a      	muls	r2, r7
 80231e2:	0a09      	lsrs	r1, r1, #8
 80231e4:	1c53      	adds	r3, r2, #1
 80231e6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80231ea:	4321      	orrs	r1, r4
 80231ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80231f0:	1235      	asrs	r5, r6, #8
 80231f2:	0c0a      	lsrs	r2, r1, #16
 80231f4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80231f8:	b2db      	uxtb	r3, r3
 80231fa:	fb12 f207 	smulbb	r2, r2, r7
 80231fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023202:	fb05 2503 	mla	r5, r5, r3, r2
 8023206:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802320a:	10f2      	asrs	r2, r6, #3
 802320c:	b2c8      	uxtb	r0, r1
 802320e:	00f6      	lsls	r6, r6, #3
 8023210:	fb14 f407 	smulbb	r4, r4, r7
 8023214:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023218:	b2f6      	uxtb	r6, r6
 802321a:	fb10 f007 	smulbb	r0, r0, r7
 802321e:	fb02 4203 	mla	r2, r2, r3, r4
 8023222:	b2ad      	uxth	r5, r5
 8023224:	fb06 0303 	mla	r3, r6, r3, r0
 8023228:	b299      	uxth	r1, r3
 802322a:	b294      	uxth	r4, r2
 802322c:	1c6b      	adds	r3, r5, #1
 802322e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023232:	1c62      	adds	r2, r4, #1
 8023234:	1c4b      	adds	r3, r1, #1
 8023236:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802323a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802323e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023242:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023246:	0952      	lsrs	r2, r2, #5
 8023248:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802324c:	432b      	orrs	r3, r5
 802324e:	4313      	orrs	r3, r2
 8023250:	9a02      	ldr	r2, [sp, #8]
 8023252:	8013      	strh	r3, [r2, #0]
 8023254:	b005      	add	sp, #20
 8023256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802325a:	2500      	movs	r5, #0
 802325c:	e6ef      	b.n	802303e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802325e:	2100      	movs	r1, #0
 8023260:	460d      	mov	r5, r1
 8023262:	e6f7      	b.n	8023054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023264:	2100      	movs	r1, #0
 8023266:	e6f5      	b.n	8023054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023268:	4631      	mov	r1, r6
 802326a:	e6f3      	b.n	8023054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802326c:	2400      	movs	r4, #0
 802326e:	e702      	b.n	8023076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023270:	2200      	movs	r2, #0
 8023272:	4614      	mov	r4, r2
 8023274:	e70b      	b.n	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023276:	4602      	mov	r2, r0
 8023278:	4604      	mov	r4, r0
 802327a:	e708      	b.n	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802327c:	2200      	movs	r2, #0
 802327e:	e706      	b.n	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023280:	4632      	mov	r2, r6
 8023282:	e704      	b.n	802308e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023284 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023288:	b09d      	sub	sp, #116	; 0x74
 802328a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802328e:	9219      	str	r2, [sp, #100]	; 0x64
 8023290:	9307      	str	r3, [sp, #28]
 8023292:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023294:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023298:	931a      	str	r3, [sp, #104]	; 0x68
 802329a:	9117      	str	r1, [sp, #92]	; 0x5c
 802329c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80232a0:	901b      	str	r0, [sp, #108]	; 0x6c
 80232a2:	6850      	ldr	r0, [r2, #4]
 80232a4:	6812      	ldr	r2, [r2, #0]
 80232a6:	fb00 1303 	mla	r3, r0, r3, r1
 80232aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80232ae:	930a      	str	r3, [sp, #40]	; 0x28
 80232b0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80232b2:	681b      	ldr	r3, [r3, #0]
 80232b4:	9310      	str	r3, [sp, #64]	; 0x40
 80232b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80232ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80232bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80232be:	2b00      	cmp	r3, #0
 80232c0:	dc03      	bgt.n	80232ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80232c2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80232c4:	2b00      	cmp	r3, #0
 80232c6:	f340 8375 	ble.w	80239b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80232ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80232cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80232d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80232d4:	1e48      	subs	r0, r1, #1
 80232d6:	1e57      	subs	r7, r2, #1
 80232d8:	9b07      	ldr	r3, [sp, #28]
 80232da:	2b00      	cmp	r3, #0
 80232dc:	f340 818e 	ble.w	80235fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80232e0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80232e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80232e8:	d406      	bmi.n	80232f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80232ea:	4584      	cmp	ip, r0
 80232ec:	da04      	bge.n	80232f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80232ee:	2b00      	cmp	r3, #0
 80232f0:	db02      	blt.n	80232f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80232f2:	42bb      	cmp	r3, r7
 80232f4:	f2c0 8183 	blt.w	80235fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80232f8:	f11c 0c01 	adds.w	ip, ip, #1
 80232fc:	f100 8173 	bmi.w	80235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023300:	4561      	cmp	r1, ip
 8023302:	f2c0 8170 	blt.w	80235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023306:	3301      	adds	r3, #1
 8023308:	f100 816d 	bmi.w	80235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802330c:	429a      	cmp	r2, r3
 802330e:	f2c0 816a 	blt.w	80235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023312:	9b07      	ldr	r3, [sp, #28]
 8023314:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023316:	9318      	str	r3, [sp, #96]	; 0x60
 8023318:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802331a:	2b00      	cmp	r3, #0
 802331c:	f340 818c 	ble.w	8023638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023320:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023322:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023324:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023328:	689b      	ldr	r3, [r3, #8]
 802332a:	1422      	asrs	r2, r4, #16
 802332c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023330:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023334:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023338:	f100 81cd 	bmi.w	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802333c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023340:	4542      	cmp	r2, r8
 8023342:	f280 81c8 	bge.w	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023346:	f1bc 0f00 	cmp.w	ip, #0
 802334a:	f2c0 81c4 	blt.w	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802334e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023352:	45c4      	cmp	ip, r8
 8023354:	f280 81bf 	bge.w	80236d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023358:	b21b      	sxth	r3, r3
 802335a:	fb0c 2203 	mla	r2, ip, r3, r2
 802335e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023360:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023364:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023368:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802336c:	2800      	cmp	r0, #0
 802336e:	f000 81a9 	beq.w	80236c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023372:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023376:	950c      	str	r5, [sp, #48]	; 0x30
 8023378:	0e2d      	lsrs	r5, r5, #24
 802337a:	9513      	str	r5, [sp, #76]	; 0x4c
 802337c:	b181      	cbz	r1, 80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802337e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023382:	3b01      	subs	r3, #1
 8023384:	009b      	lsls	r3, r3, #2
 8023386:	3304      	adds	r3, #4
 8023388:	eb08 0c03 	add.w	ip, r8, r3
 802338c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023390:	9308      	str	r3, [sp, #32]
 8023392:	0e1b      	lsrs	r3, r3, #24
 8023394:	9311      	str	r3, [sp, #68]	; 0x44
 8023396:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802339a:	930d      	str	r3, [sp, #52]	; 0x34
 802339c:	0e1b      	lsrs	r3, r3, #24
 802339e:	9314      	str	r3, [sp, #80]	; 0x50
 80233a0:	b280      	uxth	r0, r0
 80233a2:	b289      	uxth	r1, r1
 80233a4:	fb00 f901 	mul.w	r9, r0, r1
 80233a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80233ac:	0100      	lsls	r0, r0, #4
 80233ae:	eba0 0809 	sub.w	r8, r0, r9
 80233b2:	b289      	uxth	r1, r1
 80233b4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80233b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80233ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80233bc:	fa1f f888 	uxth.w	r8, r8
 80233c0:	1a5b      	subs	r3, r3, r1
 80233c2:	b29b      	uxth	r3, r3
 80233c4:	fb08 f000 	mul.w	r0, r8, r0
 80233c8:	fb03 000e 	mla	r0, r3, lr, r0
 80233cc:	fb01 0005 	mla	r0, r1, r5, r0
 80233d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80233d2:	fb09 0005 	mla	r0, r9, r5, r0
 80233d6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80233da:	2800      	cmp	r0, #0
 80233dc:	f000 80fa 	beq.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80233e0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80233e4:	d01b      	beq.n	802341e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80233e6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80233ea:	fb0e fa0a 	mul.w	sl, lr, sl
 80233ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80233f2:	fb0e fe02 	mul.w	lr, lr, r2
 80233f6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80233fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80233fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023402:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023406:	4452      	add	r2, sl
 8023408:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802340c:	0a12      	lsrs	r2, r2, #8
 802340e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023412:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023416:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802341a:	ea42 020c 	orr.w	r2, r2, ip
 802341e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023420:	2dff      	cmp	r5, #255	; 0xff
 8023422:	d021      	beq.n	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023424:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023426:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802342a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802342c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023430:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023432:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023436:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023438:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802343c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023440:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023444:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023448:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802344c:	44de      	add	lr, fp
 802344e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023452:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023456:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802345a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802345e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023462:	ea4e 050a 	orr.w	r5, lr, sl
 8023466:	950c      	str	r5, [sp, #48]	; 0x30
 8023468:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802346a:	2dff      	cmp	r5, #255	; 0xff
 802346c:	d021      	beq.n	80234b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802346e:	9d08      	ldr	r5, [sp, #32]
 8023470:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023474:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023476:	fb05 fb0b 	mul.w	fp, r5, fp
 802347a:	9d08      	ldr	r5, [sp, #32]
 802347c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023480:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023482:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023486:	fb05 fa0a 	mul.w	sl, r5, sl
 802348a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802348e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023492:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023496:	44de      	add	lr, fp
 8023498:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802349c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80234a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234ac:	ea4e 050a 	orr.w	r5, lr, sl
 80234b0:	9508      	str	r5, [sp, #32]
 80234b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80234b4:	2dff      	cmp	r5, #255	; 0xff
 80234b6:	d021      	beq.n	80234fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80234b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80234ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80234be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80234c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80234c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80234c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80234ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80234cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80234d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80234d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80234dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80234e0:	44de      	add	lr, fp
 80234e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80234e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80234ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80234f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234f6:	ea4e 050a 	orr.w	r5, lr, sl
 80234fa:	950d      	str	r5, [sp, #52]	; 0x34
 80234fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80234fe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023502:	9d08      	ldr	r5, [sp, #32]
 8023504:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023508:	fb08 fc0c 	mul.w	ip, r8, ip
 802350c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023510:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023514:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023516:	fb01 cc0e 	mla	ip, r1, lr, ip
 802351a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802351e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023520:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023524:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023528:	fb08 f80e 	mul.w	r8, r8, lr
 802352c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023530:	fb03 8202 	mla	r2, r3, r2, r8
 8023534:	9b08      	ldr	r3, [sp, #32]
 8023536:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023538:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802353c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802353e:	fb01 220a 	mla	r2, r1, sl, r2
 8023542:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023546:	fb09 2901 	mla	r9, r9, r1, r2
 802354a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802354c:	883b      	ldrh	r3, [r7, #0]
 802354e:	4342      	muls	r2, r0
 8023550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023554:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023558:	1c50      	adds	r0, r2, #1
 802355a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802355e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023562:	ea4c 0c09 	orr.w	ip, ip, r9
 8023566:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802356a:	1219      	asrs	r1, r3, #8
 802356c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023570:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023574:	b2c0      	uxtb	r0, r0
 8023576:	fb12 f205 	smulbb	r2, r2, r5
 802357a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802357e:	fb01 2100 	mla	r1, r1, r0, r2
 8023582:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023586:	10da      	asrs	r2, r3, #3
 8023588:	fa5f fc8c 	uxtb.w	ip, ip
 802358c:	00db      	lsls	r3, r3, #3
 802358e:	fb1c fc05 	smulbb	ip, ip, r5
 8023592:	b2db      	uxtb	r3, r3
 8023594:	b289      	uxth	r1, r1
 8023596:	fb03 c300 	mla	r3, r3, r0, ip
 802359a:	fa1f fc83 	uxth.w	ip, r3
 802359e:	1c4b      	adds	r3, r1, #1
 80235a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80235a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80235a8:	fb1e fe05 	smulbb	lr, lr, r5
 80235ac:	f10c 0301 	add.w	r3, ip, #1
 80235b0:	fb02 e200 	mla	r2, r2, r0, lr
 80235b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80235b8:	b292      	uxth	r2, r2
 80235ba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80235be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80235c2:	430b      	orrs	r3, r1
 80235c4:	1c51      	adds	r1, r2, #1
 80235c6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80235ca:	0952      	lsrs	r2, r2, #5
 80235cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80235d0:	4313      	orrs	r3, r2
 80235d2:	803b      	strh	r3, [r7, #0]
 80235d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80235d6:	441c      	add	r4, r3
 80235d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80235da:	441e      	add	r6, r3
 80235dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80235de:	3b01      	subs	r3, #1
 80235e0:	3702      	adds	r7, #2
 80235e2:	9318      	str	r3, [sp, #96]	; 0x60
 80235e4:	e698      	b.n	8023318 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80235e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80235e8:	441c      	add	r4, r3
 80235ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80235ec:	441e      	add	r6, r3
 80235ee:	9b07      	ldr	r3, [sp, #28]
 80235f0:	3b01      	subs	r3, #1
 80235f2:	9307      	str	r3, [sp, #28]
 80235f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80235f6:	3302      	adds	r3, #2
 80235f8:	930a      	str	r3, [sp, #40]	; 0x28
 80235fa:	e66d      	b.n	80232d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80235fc:	d023      	beq.n	8023646 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80235fe:	9b07      	ldr	r3, [sp, #28]
 8023600:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023602:	3b01      	subs	r3, #1
 8023604:	fb00 4003 	mla	r0, r0, r3, r4
 8023608:	1400      	asrs	r0, r0, #16
 802360a:	f53f ae82 	bmi.w	8023312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802360e:	3901      	subs	r1, #1
 8023610:	4288      	cmp	r0, r1
 8023612:	f6bf ae7e 	bge.w	8023312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023616:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023618:	fb01 6303 	mla	r3, r1, r3, r6
 802361c:	141b      	asrs	r3, r3, #16
 802361e:	f53f ae78 	bmi.w	8023312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023622:	3a01      	subs	r2, #1
 8023624:	4293      	cmp	r3, r2
 8023626:	f6bf ae74 	bge.w	8023312 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802362a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802362e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023632:	f1bb 0f00 	cmp.w	fp, #0
 8023636:	dc6c      	bgt.n	8023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023638:	9b07      	ldr	r3, [sp, #28]
 802363a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802363e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023640:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023644:	930a      	str	r3, [sp, #40]	; 0x28
 8023646:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023648:	2b00      	cmp	r3, #0
 802364a:	f340 81b3 	ble.w	80239b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802364e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023652:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023656:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802365a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802365c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023660:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023664:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023668:	eef0 6a62 	vmov.f32	s13, s5
 802366c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023670:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023674:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023678:	ee16 4a90 	vmov	r4, s13
 802367c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023680:	eef0 6a43 	vmov.f32	s13, s6
 8023684:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023688:	ee12 2a90 	vmov	r2, s5
 802368c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023690:	fb92 f3f3 	sdiv	r3, r2, r3
 8023694:	ee13 2a10 	vmov	r2, s6
 8023698:	9329      	str	r3, [sp, #164]	; 0xa4
 802369a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802369c:	fb92 f3f3 	sdiv	r3, r2, r3
 80236a0:	932a      	str	r3, [sp, #168]	; 0xa8
 80236a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80236a4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80236a6:	3b01      	subs	r3, #1
 80236a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236ac:	9317      	str	r3, [sp, #92]	; 0x5c
 80236ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80236b0:	bf08      	it	eq
 80236b2:	4613      	moveq	r3, r2
 80236b4:	ee16 6a90 	vmov	r6, s13
 80236b8:	9307      	str	r3, [sp, #28]
 80236ba:	eeb0 3a67 	vmov.f32	s6, s15
 80236be:	eef0 2a47 	vmov.f32	s5, s14
 80236c2:	e5fb      	b.n	80232bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80236c4:	2900      	cmp	r1, #0
 80236c6:	f43f ae6b 	beq.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80236ca:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80236ce:	9308      	str	r3, [sp, #32]
 80236d0:	0e1b      	lsrs	r3, r3, #24
 80236d2:	9311      	str	r3, [sp, #68]	; 0x44
 80236d4:	e664      	b.n	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80236d6:	f112 0801 	adds.w	r8, r2, #1
 80236da:	f53f af7b 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80236de:	4543      	cmp	r3, r8
 80236e0:	f6ff af78 	blt.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80236e4:	f11c 0801 	adds.w	r8, ip, #1
 80236e8:	f53f af74 	bmi.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80236ec:	45c6      	cmp	lr, r8
 80236ee:	f6ff af71 	blt.w	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80236f2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80236f4:	9201      	str	r2, [sp, #4]
 80236f6:	fa0f f28e 	sxth.w	r2, lr
 80236fa:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80236fe:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023702:	9200      	str	r2, [sp, #0]
 8023704:	b21b      	sxth	r3, r3
 8023706:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023708:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802370a:	4639      	mov	r1, r7
 802370c:	f7ff fc79 	bl	8023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023710:	e760      	b.n	80235d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023712:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023714:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023716:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802371a:	1427      	asrs	r7, r4, #16
 802371c:	1433      	asrs	r3, r6, #16
 802371e:	fb01 7303 	mla	r3, r1, r3, r7
 8023722:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023726:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802372a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802372e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023732:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023736:	2a00      	cmp	r2, #0
 8023738:	f000 8133 	beq.w	80239a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802373c:	687d      	ldr	r5, [r7, #4]
 802373e:	950e      	str	r5, [sp, #56]	; 0x38
 8023740:	0e2d      	lsrs	r5, r5, #24
 8023742:	9515      	str	r5, [sp, #84]	; 0x54
 8023744:	b178      	cbz	r0, 8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023746:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802374a:	3901      	subs	r1, #1
 802374c:	0089      	lsls	r1, r1, #2
 802374e:	3104      	adds	r1, #4
 8023750:	eb07 0e01 	add.w	lr, r7, r1
 8023754:	5879      	ldr	r1, [r7, r1]
 8023756:	9109      	str	r1, [sp, #36]	; 0x24
 8023758:	0e09      	lsrs	r1, r1, #24
 802375a:	9112      	str	r1, [sp, #72]	; 0x48
 802375c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023760:	910f      	str	r1, [sp, #60]	; 0x3c
 8023762:	0e09      	lsrs	r1, r1, #24
 8023764:	9116      	str	r1, [sp, #88]	; 0x58
 8023766:	b292      	uxth	r2, r2
 8023768:	b280      	uxth	r0, r0
 802376a:	fb02 f800 	mul.w	r8, r2, r0
 802376e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023772:	0112      	lsls	r2, r2, #4
 8023774:	eba2 0e08 	sub.w	lr, r2, r8
 8023778:	b280      	uxth	r0, r0
 802377a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802377e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023780:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023782:	fa1f fe8e 	uxth.w	lr, lr
 8023786:	1a12      	subs	r2, r2, r0
 8023788:	b292      	uxth	r2, r2
 802378a:	fb0e f101 	mul.w	r1, lr, r1
 802378e:	fb02 110c 	mla	r1, r2, ip, r1
 8023792:	fb00 1105 	mla	r1, r0, r5, r1
 8023796:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023798:	fb08 1105 	mla	r1, r8, r5, r1
 802379c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80237a0:	2900      	cmp	r1, #0
 80237a2:	f000 80f5 	beq.w	8023990 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80237a6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80237aa:	d019      	beq.n	80237e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80237ac:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80237b0:	fb0c fa0a 	mul.w	sl, ip, sl
 80237b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80237b8:	fb0c fc03 	mul.w	ip, ip, r3
 80237bc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80237c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80237c4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80237c8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80237cc:	4453      	add	r3, sl
 80237ce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80237d2:	0a1b      	lsrs	r3, r3, #8
 80237d4:	0a3f      	lsrs	r7, r7, #8
 80237d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80237da:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80237de:	433b      	orrs	r3, r7
 80237e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80237e2:	2dff      	cmp	r5, #255	; 0xff
 80237e4:	d020      	beq.n	8023828 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80237e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80237e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80237ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80237ee:	436f      	muls	r7, r5
 80237f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80237f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80237f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80237f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80237fc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023800:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023804:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023808:	44bc      	add	ip, r7
 802380a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802380e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023812:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023816:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802381a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802381e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023822:	ea4c 050a 	orr.w	r5, ip, sl
 8023826:	950e      	str	r5, [sp, #56]	; 0x38
 8023828:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802382a:	2dff      	cmp	r5, #255	; 0xff
 802382c:	d020      	beq.n	8023870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802382e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023830:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023834:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023836:	436f      	muls	r7, r5
 8023838:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802383a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802383e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023840:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023844:	fb05 fa0a 	mul.w	sl, r5, sl
 8023848:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802384c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023850:	44bc      	add	ip, r7
 8023852:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023856:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802385a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802385e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023862:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023866:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802386a:	ea4c 050a 	orr.w	r5, ip, sl
 802386e:	9509      	str	r5, [sp, #36]	; 0x24
 8023870:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023872:	2dff      	cmp	r5, #255	; 0xff
 8023874:	d020      	beq.n	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023876:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023878:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802387c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802387e:	436f      	muls	r7, r5
 8023880:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023882:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023886:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023888:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802388c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023890:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023894:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023898:	44bc      	add	ip, r7
 802389a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802389e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80238a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80238ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238b2:	ea4c 050a 	orr.w	r5, ip, sl
 80238b6:	950f      	str	r5, [sp, #60]	; 0x3c
 80238b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238ba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80238be:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80238c0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80238c4:	fb0e f707 	mul.w	r7, lr, r7
 80238c8:	fb02 770c 	mla	r7, r2, ip, r7
 80238cc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80238d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80238d2:	fb00 770c 	mla	r7, r0, ip, r7
 80238d6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80238da:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80238dc:	fb08 770c 	mla	r7, r8, ip, r7
 80238e0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80238e4:	fb0e fe0c 	mul.w	lr, lr, ip
 80238e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80238ec:	fb02 e303 	mla	r3, r2, r3, lr
 80238f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80238f2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80238f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80238f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80238fa:	fb00 330a 	mla	r3, r0, sl, r3
 80238fe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023902:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023906:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023908:	f8b9 0000 	ldrh.w	r0, [r9]
 802390c:	4359      	muls	r1, r3
 802390e:	0a3f      	lsrs	r7, r7, #8
 8023910:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023914:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023918:	1c4b      	adds	r3, r1, #1
 802391a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802391e:	ea47 070c 	orr.w	r7, r7, ip
 8023922:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023926:	1202      	asrs	r2, r0, #8
 8023928:	0c3b      	lsrs	r3, r7, #16
 802392a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802392e:	b2c9      	uxtb	r1, r1
 8023930:	fb13 f305 	smulbb	r3, r3, r5
 8023934:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023938:	fb02 3201 	mla	r2, r2, r1, r3
 802393c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023940:	10c3      	asrs	r3, r0, #3
 8023942:	b2ff      	uxtb	r7, r7
 8023944:	00c0      	lsls	r0, r0, #3
 8023946:	b2c0      	uxtb	r0, r0
 8023948:	fb17 f705 	smulbb	r7, r7, r5
 802394c:	fb00 7001 	mla	r0, r0, r1, r7
 8023950:	b292      	uxth	r2, r2
 8023952:	fb1c fc05 	smulbb	ip, ip, r5
 8023956:	b280      	uxth	r0, r0
 8023958:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802395c:	fb03 c301 	mla	r3, r3, r1, ip
 8023960:	1c51      	adds	r1, r2, #1
 8023962:	f100 0c01 	add.w	ip, r0, #1
 8023966:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802396a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802396e:	b29b      	uxth	r3, r3
 8023970:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023974:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023978:	ea4c 0202 	orr.w	r2, ip, r2
 802397c:	f103 0c01 	add.w	ip, r3, #1
 8023980:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023984:	095b      	lsrs	r3, r3, #5
 8023986:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802398a:	431a      	orrs	r2, r3
 802398c:	f8a9 2000 	strh.w	r2, [r9]
 8023990:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023992:	441c      	add	r4, r3
 8023994:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023996:	f109 0902 	add.w	r9, r9, #2
 802399a:	441e      	add	r6, r3
 802399c:	f10b 3bff 	add.w	fp, fp, #4294967295
 80239a0:	e647      	b.n	8023632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80239a2:	2800      	cmp	r0, #0
 80239a4:	f43f aedf 	beq.w	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80239a8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80239ac:	9109      	str	r1, [sp, #36]	; 0x24
 80239ae:	0e09      	lsrs	r1, r1, #24
 80239b0:	9112      	str	r1, [sp, #72]	; 0x48
 80239b2:	e6d8      	b.n	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80239b4:	b01d      	add	sp, #116	; 0x74
 80239b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080239ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80239ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239be:	b085      	sub	sp, #20
 80239c0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80239c4:	9102      	str	r1, [sp, #8]
 80239c6:	2c00      	cmp	r4, #0
 80239c8:	fb04 7103 	mla	r1, r4, r3, r7
 80239cc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80239d0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80239d4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80239d8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80239dc:	f2c0 810c 	blt.w	8023bf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80239e0:	45a6      	cmp	lr, r4
 80239e2:	f340 8109 	ble.w	8023bf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80239e6:	2f00      	cmp	r7, #0
 80239e8:	f2c0 8104 	blt.w	8023bf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80239ec:	42bb      	cmp	r3, r7
 80239ee:	f340 8101 	ble.w	8023bf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80239f2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80239f6:	1c7a      	adds	r2, r7, #1
 80239f8:	f100 8101 	bmi.w	8023bfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80239fc:	4293      	cmp	r3, r2
 80239fe:	f340 80fe 	ble.w	8023bfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023a02:	2e00      	cmp	r6, #0
 8023a04:	f000 80fd 	beq.w	8023c02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023a08:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023a0c:	3401      	adds	r4, #1
 8023a0e:	f100 80fc 	bmi.w	8023c0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023a12:	45a6      	cmp	lr, r4
 8023a14:	f340 80f9 	ble.w	8023c0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023a18:	2800      	cmp	r0, #0
 8023a1a:	f000 80f9 	beq.w	8023c10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023a1e:	2f00      	cmp	r7, #0
 8023a20:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023a24:	f2c0 80ef 	blt.w	8023c06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023a28:	42bb      	cmp	r3, r7
 8023a2a:	f340 80ec 	ble.w	8023c06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023a2e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023a32:	3701      	adds	r7, #1
 8023a34:	f100 80ef 	bmi.w	8023c16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023a38:	42bb      	cmp	r3, r7
 8023a3a:	f340 80ec 	ble.w	8023c16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023a3e:	2e00      	cmp	r6, #0
 8023a40:	f000 80eb 	beq.w	8023c1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023a44:	6852      	ldr	r2, [r2, #4]
 8023a46:	b2b6      	uxth	r6, r6
 8023a48:	b280      	uxth	r0, r0
 8023a4a:	fb00 fe06 	mul.w	lr, r0, r6
 8023a4e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023a52:	0136      	lsls	r6, r6, #4
 8023a54:	eba6 070e 	sub.w	r7, r6, lr
 8023a58:	b280      	uxth	r0, r0
 8023a5a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023a5e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023a62:	b2bf      	uxth	r7, r7
 8023a64:	1a1b      	subs	r3, r3, r0
 8023a66:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023a6a:	b29b      	uxth	r3, r3
 8023a6c:	fb07 f60a 	mul.w	r6, r7, sl
 8023a70:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023a74:	fb0b 6603 	mla	r6, fp, r3, r6
 8023a78:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023a7c:	fb00 6609 	mla	r6, r0, r9, r6
 8023a80:	fb0e 6608 	mla	r6, lr, r8, r6
 8023a84:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023a88:	9600      	str	r6, [sp, #0]
 8023a8a:	2e00      	cmp	r6, #0
 8023a8c:	f000 80af 	beq.w	8023bee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023a90:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023a94:	fb0b fc0c 	mul.w	ip, fp, ip
 8023a98:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023a9c:	fb0b f505 	mul.w	r5, fp, r5
 8023aa0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023aa4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023aa8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023aac:	44dc      	add	ip, fp
 8023aae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ab2:	9501      	str	r5, [sp, #4]
 8023ab4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023ab8:	9503      	str	r5, [sp, #12]
 8023aba:	9d01      	ldr	r5, [sp, #4]
 8023abc:	9e02      	ldr	r6, [sp, #8]
 8023abe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023ac2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023ac6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023aca:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ace:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023ad2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023ad6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023ada:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ade:	4465      	add	r5, ip
 8023ae0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023ae4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ae8:	fb09 fc0c 	mul.w	ip, r9, ip
 8023aec:	fb09 f904 	mul.w	r9, r9, r4
 8023af0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023af4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023af8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023afc:	fb08 f404 	mul.w	r4, r8, r4
 8023b00:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023b04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b08:	fb08 f802 	mul.w	r8, r8, r2
 8023b0c:	fb0a fa01 	mul.w	sl, sl, r1
 8023b10:	0a22      	lsrs	r2, r4, #8
 8023b12:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023b16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023b1a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023b1e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023b22:	4414      	add	r4, r2
 8023b24:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023b28:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023b2c:	0a2d      	lsrs	r5, r5, #8
 8023b2e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023b32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023b36:	9a03      	ldr	r2, [sp, #12]
 8023b38:	8836      	ldrh	r6, [r6, #0]
 8023b3a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023b3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023b42:	437d      	muls	r5, r7
 8023b44:	4461      	add	r1, ip
 8023b46:	0a24      	lsrs	r4, r4, #8
 8023b48:	fb02 5503 	mla	r5, r2, r3, r5
 8023b4c:	0a09      	lsrs	r1, r1, #8
 8023b4e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023b52:	fb04 540e 	mla	r4, r4, lr, r5
 8023b56:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023b5a:	fb01 4100 	mla	r1, r1, r0, r4
 8023b5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b62:	0a09      	lsrs	r1, r1, #8
 8023b64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b68:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023b6c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023b70:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023b74:	fb07 f70a 	mul.w	r7, r7, sl
 8023b78:	fb03 7101 	mla	r1, r3, r1, r7
 8023b7c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b80:	9b00      	ldr	r3, [sp, #0]
 8023b82:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023b86:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023b8a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023b8e:	fb00 e101 	mla	r1, r0, r1, lr
 8023b92:	43da      	mvns	r2, r3
 8023b94:	1233      	asrs	r3, r6, #8
 8023b96:	b2d2      	uxtb	r2, r2
 8023b98:	10f0      	asrs	r0, r6, #3
 8023b9a:	0a09      	lsrs	r1, r1, #8
 8023b9c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023ba0:	00f6      	lsls	r6, r6, #3
 8023ba2:	4353      	muls	r3, r2
 8023ba4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ba8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023bac:	b2f6      	uxtb	r6, r6
 8023bae:	4321      	orrs	r1, r4
 8023bb0:	4350      	muls	r0, r2
 8023bb2:	4356      	muls	r6, r2
 8023bb4:	1c5a      	adds	r2, r3, #1
 8023bb6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023bba:	0c0b      	lsrs	r3, r1, #16
 8023bbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023bc0:	1c42      	adds	r2, r0, #1
 8023bc2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023bc6:	0a0a      	lsrs	r2, r1, #8
 8023bc8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023bcc:	021b      	lsls	r3, r3, #8
 8023bce:	00d2      	lsls	r2, r2, #3
 8023bd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023bd4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023bd8:	4313      	orrs	r3, r2
 8023bda:	1c72      	adds	r2, r6, #1
 8023bdc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023be0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023be4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023be8:	4319      	orrs	r1, r3
 8023bea:	9b02      	ldr	r3, [sp, #8]
 8023bec:	8019      	strh	r1, [r3, #0]
 8023bee:	b005      	add	sp, #20
 8023bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023bf4:	2500      	movs	r5, #0
 8023bf6:	e6fe      	b.n	80239f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023bf8:	2100      	movs	r1, #0
 8023bfa:	460d      	mov	r5, r1
 8023bfc:	e706      	b.n	8023a0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023bfe:	2100      	movs	r1, #0
 8023c00:	e704      	b.n	8023a0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023c02:	4631      	mov	r1, r6
 8023c04:	e702      	b.n	8023a0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023c06:	2400      	movs	r4, #0
 8023c08:	e713      	b.n	8023a32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023c0a:	2200      	movs	r2, #0
 8023c0c:	4614      	mov	r4, r2
 8023c0e:	e71a      	b.n	8023a46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023c10:	4602      	mov	r2, r0
 8023c12:	4604      	mov	r4, r0
 8023c14:	e717      	b.n	8023a46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023c16:	2200      	movs	r2, #0
 8023c18:	e715      	b.n	8023a46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023c1a:	4632      	mov	r2, r6
 8023c1c:	e713      	b.n	8023a46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c24:	b09b      	sub	sp, #108	; 0x6c
 8023c26:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023c2a:	9218      	str	r2, [sp, #96]	; 0x60
 8023c2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023c2e:	9116      	str	r1, [sp, #88]	; 0x58
 8023c30:	9307      	str	r3, [sp, #28]
 8023c32:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023c36:	9019      	str	r0, [sp, #100]	; 0x64
 8023c38:	6850      	ldr	r0, [r2, #4]
 8023c3a:	6812      	ldr	r2, [r2, #0]
 8023c3c:	fb00 1303 	mla	r3, r0, r3, r1
 8023c40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023c44:	930a      	str	r3, [sp, #40]	; 0x28
 8023c46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023c48:	681b      	ldr	r3, [r3, #0]
 8023c4a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023c4e:	2b00      	cmp	r3, #0
 8023c50:	dc03      	bgt.n	8023c5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023c52:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023c54:	2b00      	cmp	r3, #0
 8023c56:	f340 8386 	ble.w	8024366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023c5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023c5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c64:	1e48      	subs	r0, r1, #1
 8023c66:	1e57      	subs	r7, r2, #1
 8023c68:	9b07      	ldr	r3, [sp, #28]
 8023c6a:	2b00      	cmp	r3, #0
 8023c6c:	f340 8166 	ble.w	8023f3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023c70:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023c74:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023c78:	d406      	bmi.n	8023c88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023c7a:	4584      	cmp	ip, r0
 8023c7c:	da04      	bge.n	8023c88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023c7e:	2b00      	cmp	r3, #0
 8023c80:	db02      	blt.n	8023c88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023c82:	42bb      	cmp	r3, r7
 8023c84:	f2c0 815b 	blt.w	8023f3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023c88:	f11c 0c01 	adds.w	ip, ip, #1
 8023c8c:	f100 814b 	bmi.w	8023f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023c90:	4561      	cmp	r1, ip
 8023c92:	f2c0 8148 	blt.w	8023f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023c96:	3301      	adds	r3, #1
 8023c98:	f100 8145 	bmi.w	8023f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023c9c:	429a      	cmp	r2, r3
 8023c9e:	f2c0 8142 	blt.w	8023f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023ca2:	9b07      	ldr	r3, [sp, #28]
 8023ca4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023ca6:	9317      	str	r3, [sp, #92]	; 0x5c
 8023ca8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023caa:	2b00      	cmp	r3, #0
 8023cac:	f340 8165 	ble.w	8023f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023cb0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023cb2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023cb4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023cb8:	689b      	ldr	r3, [r3, #8]
 8023cba:	1422      	asrs	r2, r4, #16
 8023cbc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023cc0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023cc4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023cc8:	f100 81d5 	bmi.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023ccc:	f103 38ff 	add.w	r8, r3, #4294967295
 8023cd0:	4542      	cmp	r2, r8
 8023cd2:	f280 81d0 	bge.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023cd6:	f1bc 0f00 	cmp.w	ip, #0
 8023cda:	f2c0 81cc 	blt.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023cde:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023ce2:	45c4      	cmp	ip, r8
 8023ce4:	f280 81c7 	bge.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023ce8:	b21b      	sxth	r3, r3
 8023cea:	fb0c 2203 	mla	r2, ip, r3, r2
 8023cee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023cf0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023cf4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023cf8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023cfc:	2900      	cmp	r1, #0
 8023cfe:	f000 8182 	beq.w	8024006 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023d02:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023d06:	950b      	str	r5, [sp, #44]	; 0x2c
 8023d08:	0e2d      	lsrs	r5, r5, #24
 8023d0a:	9512      	str	r5, [sp, #72]	; 0x48
 8023d0c:	b180      	cbz	r0, 8023d30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023d0e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023d12:	3b01      	subs	r3, #1
 8023d14:	009b      	lsls	r3, r3, #2
 8023d16:	3304      	adds	r3, #4
 8023d18:	eb08 0c03 	add.w	ip, r8, r3
 8023d1c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023d20:	9308      	str	r3, [sp, #32]
 8023d22:	0e1b      	lsrs	r3, r3, #24
 8023d24:	9310      	str	r3, [sp, #64]	; 0x40
 8023d26:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023d2a:	930c      	str	r3, [sp, #48]	; 0x30
 8023d2c:	0e1b      	lsrs	r3, r3, #24
 8023d2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8023d30:	b289      	uxth	r1, r1
 8023d32:	b280      	uxth	r0, r0
 8023d34:	fb01 f900 	mul.w	r9, r1, r0
 8023d38:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d3c:	0109      	lsls	r1, r1, #4
 8023d3e:	eba1 0809 	sub.w	r8, r1, r9
 8023d42:	b280      	uxth	r0, r0
 8023d44:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023d48:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023d4a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d4c:	fa1f f888 	uxth.w	r8, r8
 8023d50:	1a09      	subs	r1, r1, r0
 8023d52:	b289      	uxth	r1, r1
 8023d54:	fb08 f303 	mul.w	r3, r8, r3
 8023d58:	fb01 330e 	mla	r3, r1, lr, r3
 8023d5c:	fb00 3305 	mla	r3, r0, r5, r3
 8023d60:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023d62:	fb09 3305 	mla	r3, r9, r5, r3
 8023d66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023d6a:	2b00      	cmp	r3, #0
 8023d6c:	f000 80d2 	beq.w	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023d70:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023d74:	d01b      	beq.n	8023dae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023d76:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023d7a:	fb0e fa0a 	mul.w	sl, lr, sl
 8023d7e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d82:	fb0e fe02 	mul.w	lr, lr, r2
 8023d86:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023d8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d92:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023d96:	4452      	add	r2, sl
 8023d98:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023d9c:	0a12      	lsrs	r2, r2, #8
 8023d9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023da2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023da6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023daa:	ea42 020c 	orr.w	r2, r2, ip
 8023dae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023db0:	2dff      	cmp	r5, #255	; 0xff
 8023db2:	d021      	beq.n	8023df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023db4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023db6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023dba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023dbc:	fb05 fb0b 	mul.w	fp, r5, fp
 8023dc0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023dc2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023dc6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023dc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023dcc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023dd8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023ddc:	44de      	add	lr, fp
 8023dde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023de2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023de6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023dee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023df2:	ea4e 050a 	orr.w	r5, lr, sl
 8023df6:	950b      	str	r5, [sp, #44]	; 0x2c
 8023df8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023dfa:	2dff      	cmp	r5, #255	; 0xff
 8023dfc:	d021      	beq.n	8023e42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023dfe:	9d08      	ldr	r5, [sp, #32]
 8023e00:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e06:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e0a:	9d08      	ldr	r5, [sp, #32]
 8023e0c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023e10:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e12:	fb05 fa0e 	mul.w	sl, r5, lr
 8023e16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e1e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e22:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e26:	44de      	add	lr, fp
 8023e28:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e2c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e38:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e3c:	ea4e 050a 	orr.w	r5, lr, sl
 8023e40:	9508      	str	r5, [sp, #32]
 8023e42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e44:	2dff      	cmp	r5, #255	; 0xff
 8023e46:	d021      	beq.n	8023e8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023e48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e4a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e50:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e60:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e68:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e70:	44de      	add	lr, fp
 8023e72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e86:	ea4e 050a 	orr.w	r5, lr, sl
 8023e8a:	950c      	str	r5, [sp, #48]	; 0x30
 8023e8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023e8e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e92:	9d08      	ldr	r5, [sp, #32]
 8023e94:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023e98:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e9c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023ea0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ea4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ea6:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023eaa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023eae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023eb0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023eb4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023eb8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ebc:	fb08 f80e 	mul.w	r8, r8, lr
 8023ec0:	fb01 8202 	mla	r2, r1, r2, r8
 8023ec4:	9908      	ldr	r1, [sp, #32]
 8023ec6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023eca:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023ecc:	fb00 220a 	mla	r2, r0, sl, r2
 8023ed0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023ed4:	fb09 2900 	mla	r9, r9, r0, r2
 8023ed8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023edc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ee0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023ee4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023ee8:	ea4c 0c09 	orr.w	ip, ip, r9
 8023eec:	2bff      	cmp	r3, #255	; 0xff
 8023eee:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023ef2:	f040 8091 	bne.w	8024018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023ef6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023efa:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023efe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f02:	f022 0207 	bic.w	r2, r2, #7
 8023f06:	431a      	orrs	r2, r3
 8023f08:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023f0c:	ea4c 0c02 	orr.w	ip, ip, r2
 8023f10:	f8a7 c000 	strh.w	ip, [r7]
 8023f14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023f16:	441c      	add	r4, r3
 8023f18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023f1a:	441e      	add	r6, r3
 8023f1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023f1e:	3b01      	subs	r3, #1
 8023f20:	3702      	adds	r7, #2
 8023f22:	9317      	str	r3, [sp, #92]	; 0x5c
 8023f24:	e6c0      	b.n	8023ca8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023f26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023f28:	441c      	add	r4, r3
 8023f2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023f2c:	441e      	add	r6, r3
 8023f2e:	9b07      	ldr	r3, [sp, #28]
 8023f30:	3b01      	subs	r3, #1
 8023f32:	9307      	str	r3, [sp, #28]
 8023f34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f36:	3302      	adds	r3, #2
 8023f38:	930a      	str	r3, [sp, #40]	; 0x28
 8023f3a:	e695      	b.n	8023c68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023f3c:	d024      	beq.n	8023f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023f3e:	9b07      	ldr	r3, [sp, #28]
 8023f40:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023f42:	3b01      	subs	r3, #1
 8023f44:	fb00 4003 	mla	r0, r0, r3, r4
 8023f48:	1400      	asrs	r0, r0, #16
 8023f4a:	f53f aeaa 	bmi.w	8023ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023f4e:	3901      	subs	r1, #1
 8023f50:	4288      	cmp	r0, r1
 8023f52:	f6bf aea6 	bge.w	8023ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023f56:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023f58:	fb01 6303 	mla	r3, r1, r3, r6
 8023f5c:	141b      	asrs	r3, r3, #16
 8023f5e:	f53f aea0 	bmi.w	8023ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023f62:	3a01      	subs	r2, #1
 8023f64:	4293      	cmp	r3, r2
 8023f66:	f6bf ae9c 	bge.w	8023ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023f6a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023f6e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023f72:	f1bb 0f00 	cmp.w	fp, #0
 8023f76:	f300 809a 	bgt.w	80240ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023f7a:	9b07      	ldr	r3, [sp, #28]
 8023f7c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023f80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023f82:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023f86:	930a      	str	r3, [sp, #40]	; 0x28
 8023f88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023f8a:	2b00      	cmp	r3, #0
 8023f8c:	f340 81eb 	ble.w	8024366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023f90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023fa2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023fa6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023faa:	eef0 6a62 	vmov.f32	s13, s5
 8023fae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023fb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023fba:	ee16 4a90 	vmov	r4, s13
 8023fbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023fc2:	eef0 6a43 	vmov.f32	s13, s6
 8023fc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023fca:	ee12 2a90 	vmov	r2, s5
 8023fce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fd6:	ee13 2a10 	vmov	r2, s6
 8023fda:	9327      	str	r3, [sp, #156]	; 0x9c
 8023fdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023fde:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fe2:	9328      	str	r3, [sp, #160]	; 0xa0
 8023fe4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023fe6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023fe8:	3b01      	subs	r3, #1
 8023fea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fee:	9316      	str	r3, [sp, #88]	; 0x58
 8023ff0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ff2:	bf08      	it	eq
 8023ff4:	4613      	moveq	r3, r2
 8023ff6:	ee16 6a90 	vmov	r6, s13
 8023ffa:	9307      	str	r3, [sp, #28]
 8023ffc:	eeb0 3a67 	vmov.f32	s6, s15
 8024000:	eef0 2a47 	vmov.f32	s5, s14
 8024004:	e622      	b.n	8023c4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8024006:	2800      	cmp	r0, #0
 8024008:	f43f ae92 	beq.w	8023d30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802400c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024010:	9308      	str	r3, [sp, #32]
 8024012:	0e1b      	lsrs	r3, r3, #24
 8024014:	9310      	str	r3, [sp, #64]	; 0x40
 8024016:	e68b      	b.n	8023d30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024018:	8839      	ldrh	r1, [r7, #0]
 802401a:	4dd4      	ldr	r5, [pc, #848]	; (802436c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802401c:	43db      	mvns	r3, r3
 802401e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024022:	fa5f f883 	uxtb.w	r8, r3
 8024026:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802402a:	fb0e fe08 	mul.w	lr, lr, r8
 802402e:	10c8      	asrs	r0, r1, #3
 8024030:	00cb      	lsls	r3, r1, #3
 8024032:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024036:	f10e 0101 	add.w	r1, lr, #1
 802403a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802403e:	fb00 f008 	mul.w	r0, r0, r8
 8024042:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024046:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802404a:	f100 0e01 	add.w	lr, r0, #1
 802404e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024052:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024056:	b2db      	uxtb	r3, r3
 8024058:	b2c9      	uxtb	r1, r1
 802405a:	00d2      	lsls	r2, r2, #3
 802405c:	fb03 f308 	mul.w	r3, r3, r8
 8024060:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024064:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024068:	430a      	orrs	r2, r1
 802406a:	1c59      	adds	r1, r3, #1
 802406c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024070:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024074:	e748      	b.n	8023f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024076:	f112 0801 	adds.w	r8, r2, #1
 802407a:	f53f af4b 	bmi.w	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802407e:	4543      	cmp	r3, r8
 8024080:	f6ff af48 	blt.w	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024084:	f11c 0801 	adds.w	r8, ip, #1
 8024088:	f53f af44 	bmi.w	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802408c:	45c6      	cmp	lr, r8
 802408e:	f6ff af41 	blt.w	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024092:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024096:	fa0f f28e 	sxth.w	r2, lr
 802409a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802409e:	9200      	str	r2, [sp, #0]
 80240a0:	b21b      	sxth	r3, r3
 80240a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80240a4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80240a6:	4639      	mov	r1, r7
 80240a8:	f7ff fc87 	bl	80239ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80240ac:	e732      	b.n	8023f14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80240ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80240b2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80240b6:	1421      	asrs	r1, r4, #16
 80240b8:	1433      	asrs	r3, r6, #16
 80240ba:	fb07 1303 	mla	r3, r7, r3, r1
 80240be:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80240c0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80240c4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80240c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80240cc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80240d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80240d4:	2a00      	cmp	r2, #0
 80240d6:	f000 8107 	beq.w	80242e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80240da:	684d      	ldr	r5, [r1, #4]
 80240dc:	950d      	str	r5, [sp, #52]	; 0x34
 80240de:	0e2d      	lsrs	r5, r5, #24
 80240e0:	9514      	str	r5, [sp, #80]	; 0x50
 80240e2:	b178      	cbz	r0, 8024104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80240e4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80240e8:	3f01      	subs	r7, #1
 80240ea:	00bf      	lsls	r7, r7, #2
 80240ec:	3704      	adds	r7, #4
 80240ee:	eb01 0e07 	add.w	lr, r1, r7
 80240f2:	59c9      	ldr	r1, [r1, r7]
 80240f4:	9109      	str	r1, [sp, #36]	; 0x24
 80240f6:	0e09      	lsrs	r1, r1, #24
 80240f8:	9111      	str	r1, [sp, #68]	; 0x44
 80240fa:	f8de 1004 	ldr.w	r1, [lr, #4]
 80240fe:	910e      	str	r1, [sp, #56]	; 0x38
 8024100:	0e09      	lsrs	r1, r1, #24
 8024102:	9115      	str	r1, [sp, #84]	; 0x54
 8024104:	b292      	uxth	r2, r2
 8024106:	b280      	uxth	r0, r0
 8024108:	fb02 f900 	mul.w	r9, r2, r0
 802410c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024110:	0112      	lsls	r2, r2, #4
 8024112:	eba2 0e09 	sub.w	lr, r2, r9
 8024116:	b280      	uxth	r0, r0
 8024118:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802411c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802411e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024120:	fa1f fe8e 	uxth.w	lr, lr
 8024124:	1a09      	subs	r1, r1, r0
 8024126:	b289      	uxth	r1, r1
 8024128:	fb0e f202 	mul.w	r2, lr, r2
 802412c:	fb01 220c 	mla	r2, r1, ip, r2
 8024130:	fb00 2205 	mla	r2, r0, r5, r2
 8024134:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024136:	fb09 2205 	mla	r2, r9, r5, r2
 802413a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802413e:	2a00      	cmp	r2, #0
 8024140:	f000 80c9 	beq.w	80242d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024144:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024148:	d019      	beq.n	802417e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802414a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802414e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024152:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024156:	fb0c fc03 	mul.w	ip, ip, r3
 802415a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802415e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024162:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024166:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802416a:	4453      	add	r3, sl
 802416c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024170:	0a1b      	lsrs	r3, r3, #8
 8024172:	0a3f      	lsrs	r7, r7, #8
 8024174:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024178:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802417c:	433b      	orrs	r3, r7
 802417e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024180:	2dff      	cmp	r5, #255	; 0xff
 8024182:	d020      	beq.n	80241c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024184:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024186:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802418a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802418c:	436f      	muls	r7, r5
 802418e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024190:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024194:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024196:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802419a:	fb05 fa0a 	mul.w	sl, r5, sl
 802419e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241a6:	44bc      	add	ip, r7
 80241a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241c0:	ea4c 050a 	orr.w	r5, ip, sl
 80241c4:	950d      	str	r5, [sp, #52]	; 0x34
 80241c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80241c8:	2dff      	cmp	r5, #255	; 0xff
 80241ca:	d020      	beq.n	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80241cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80241ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80241d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80241d4:	436f      	muls	r7, r5
 80241d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80241d8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80241dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80241de:	fb05 fa0c 	mul.w	sl, r5, ip
 80241e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241ee:	44bc      	add	ip, r7
 80241f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024204:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024208:	ea4c 050a 	orr.w	r5, ip, sl
 802420c:	9509      	str	r5, [sp, #36]	; 0x24
 802420e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024210:	2dff      	cmp	r5, #255	; 0xff
 8024212:	d020      	beq.n	8024256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024214:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024216:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802421a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802421c:	436f      	muls	r7, r5
 802421e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024220:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024224:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802422a:	fb05 fa0a 	mul.w	sl, r5, sl
 802422e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024232:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024236:	44bc      	add	ip, r7
 8024238:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802423c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024248:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802424c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024250:	ea4c 050a 	orr.w	r5, ip, sl
 8024254:	950e      	str	r5, [sp, #56]	; 0x38
 8024256:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024258:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802425c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802425e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024262:	fb0e f707 	mul.w	r7, lr, r7
 8024266:	fb01 770c 	mla	r7, r1, ip, r7
 802426a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802426e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024270:	fb00 770c 	mla	r7, r0, ip, r7
 8024274:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024278:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802427a:	fb09 770c 	mla	r7, r9, ip, r7
 802427e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024282:	fb0e fe0c 	mul.w	lr, lr, ip
 8024286:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802428a:	fb01 e303 	mla	r3, r1, r3, lr
 802428e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024290:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024294:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024296:	fb00 330a 	mla	r3, r0, sl, r3
 802429a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802429e:	fb09 3c0c 	mla	ip, r9, ip, r3
 80242a2:	0a3f      	lsrs	r7, r7, #8
 80242a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80242ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80242b0:	ea47 070c 	orr.w	r7, r7, ip
 80242b4:	2aff      	cmp	r2, #255	; 0xff
 80242b6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80242ba:	d11e      	bne.n	80242fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80242bc:	097a      	lsrs	r2, r7, #5
 80242be:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80242c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242c6:	f023 0307 	bic.w	r3, r3, #7
 80242ca:	4313      	orrs	r3, r2
 80242cc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80242d0:	431f      	orrs	r7, r3
 80242d2:	f8a8 7000 	strh.w	r7, [r8]
 80242d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80242d8:	441c      	add	r4, r3
 80242da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242dc:	f108 0802 	add.w	r8, r8, #2
 80242e0:	441e      	add	r6, r3
 80242e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80242e6:	e644      	b.n	8023f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80242e8:	2800      	cmp	r0, #0
 80242ea:	f43f af0b 	beq.w	8024104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80242ee:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80242f2:	9109      	str	r1, [sp, #36]	; 0x24
 80242f4:	0e09      	lsrs	r1, r1, #24
 80242f6:	9111      	str	r1, [sp, #68]	; 0x44
 80242f8:	e704      	b.n	8024104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80242fa:	f8b8 1000 	ldrh.w	r1, [r8]
 80242fe:	43d2      	mvns	r2, r2
 8024300:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024304:	fa5f fe82 	uxtb.w	lr, r2
 8024308:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802430c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024310:	10c8      	asrs	r0, r1, #3
 8024312:	00ca      	lsls	r2, r1, #3
 8024314:	f10c 0101 	add.w	r1, ip, #1
 8024318:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802431c:	0c39      	lsrs	r1, r7, #16
 802431e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024322:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024326:	4911      	ldr	r1, [pc, #68]	; (802436c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024328:	fb00 f00e 	mul.w	r0, r0, lr
 802432c:	fa5f fc8c 	uxtb.w	ip, ip
 8024330:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024334:	b2d2      	uxtb	r2, r2
 8024336:	1c41      	adds	r1, r0, #1
 8024338:	fb02 f20e 	mul.w	r2, r2, lr
 802433c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024340:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024344:	1c51      	adds	r1, r2, #1
 8024346:	00c0      	lsls	r0, r0, #3
 8024348:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802434c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024350:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024354:	ea4c 0c00 	orr.w	ip, ip, r0
 8024358:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802435c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024360:	f8a8 c000 	strh.w	ip, [r8]
 8024364:	e7b7      	b.n	80242d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024366:	b01b      	add	sp, #108	; 0x6c
 8024368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802436c:	fffff800 	.word	0xfffff800

08024370 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024374:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024378:	2d00      	cmp	r5, #0
 802437a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802437e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024382:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024386:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802438a:	fb05 0e03 	mla	lr, r5, r3, r0
 802438e:	f2c0 808c 	blt.w	80244aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024392:	45a9      	cmp	r9, r5
 8024394:	f340 8089 	ble.w	80244aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024398:	2800      	cmp	r0, #0
 802439a:	f2c0 8084 	blt.w	80244a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802439e:	4580      	cmp	r8, r0
 80243a0:	f340 8081 	ble.w	80244a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80243a4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80243a8:	f01e 0f01 	tst.w	lr, #1
 80243ac:	5d16      	ldrb	r6, [r2, r4]
 80243ae:	bf0c      	ite	eq
 80243b0:	f006 060f 	andeq.w	r6, r6, #15
 80243b4:	1136      	asrne	r6, r6, #4
 80243b6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80243ba:	b2f6      	uxtb	r6, r6
 80243bc:	1c44      	adds	r4, r0, #1
 80243be:	d477      	bmi.n	80244b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80243c0:	45a0      	cmp	r8, r4
 80243c2:	dd75      	ble.n	80244b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80243c4:	2f00      	cmp	r7, #0
 80243c6:	d075      	beq.n	80244b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80243c8:	f10e 0a01 	add.w	sl, lr, #1
 80243cc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80243d0:	f01a 0f01 	tst.w	sl, #1
 80243d4:	5d14      	ldrb	r4, [r2, r4]
 80243d6:	bf0c      	ite	eq
 80243d8:	f004 040f 	andeq.w	r4, r4, #15
 80243dc:	1124      	asrne	r4, r4, #4
 80243de:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80243e2:	b2e4      	uxtb	r4, r4
 80243e4:	3501      	adds	r5, #1
 80243e6:	d469      	bmi.n	80244bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80243e8:	45a9      	cmp	r9, r5
 80243ea:	dd67      	ble.n	80244bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80243ec:	f1bc 0f00 	cmp.w	ip, #0
 80243f0:	d067      	beq.n	80244c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80243f2:	2800      	cmp	r0, #0
 80243f4:	db60      	blt.n	80244b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80243f6:	4580      	cmp	r8, r0
 80243f8:	dd5e      	ble.n	80244b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80243fa:	eb03 090e 	add.w	r9, r3, lr
 80243fe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024402:	f019 0f01 	tst.w	r9, #1
 8024406:	5d55      	ldrb	r5, [r2, r5]
 8024408:	bf0c      	ite	eq
 802440a:	f005 050f 	andeq.w	r5, r5, #15
 802440e:	112d      	asrne	r5, r5, #4
 8024410:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024414:	b2ed      	uxtb	r5, r5
 8024416:	3001      	adds	r0, #1
 8024418:	d456      	bmi.n	80244c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802441a:	4580      	cmp	r8, r0
 802441c:	dd54      	ble.n	80244c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802441e:	2f00      	cmp	r7, #0
 8024420:	d054      	beq.n	80244cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024422:	3301      	adds	r3, #1
 8024424:	449e      	add	lr, r3
 8024426:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802442a:	f01e 0f01 	tst.w	lr, #1
 802442e:	5cd0      	ldrb	r0, [r2, r3]
 8024430:	bf0c      	ite	eq
 8024432:	f000 000f 	andeq.w	r0, r0, #15
 8024436:	1100      	asrne	r0, r0, #4
 8024438:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802443c:	b2c3      	uxtb	r3, r0
 802443e:	b2ba      	uxth	r2, r7
 8024440:	fa1f fc8c 	uxth.w	ip, ip
 8024444:	fb02 f00c 	mul.w	r0, r2, ip
 8024448:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802444c:	0112      	lsls	r2, r2, #4
 802444e:	fa1f fc8c 	uxth.w	ip, ip
 8024452:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024456:	1a12      	subs	r2, r2, r0
 8024458:	eba7 070c 	sub.w	r7, r7, ip
 802445c:	b292      	uxth	r2, r2
 802445e:	b2bf      	uxth	r7, r7
 8024460:	4362      	muls	r2, r4
 8024462:	fb06 2207 	mla	r2, r6, r7, r2
 8024466:	fb0c 2505 	mla	r5, ip, r5, r2
 802446a:	fb00 5303 	mla	r3, r0, r3, r5
 802446e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024472:	b1b3      	cbz	r3, 80244a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024474:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024478:	435a      	muls	r2, r3
 802447a:	1c53      	adds	r3, r2, #1
 802447c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024480:	4a2d      	ldr	r2, [pc, #180]	; (8024538 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024482:	121b      	asrs	r3, r3, #8
 8024484:	6812      	ldr	r2, [r2, #0]
 8024486:	2bff      	cmp	r3, #255	; 0xff
 8024488:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802448c:	d120      	bne.n	80244d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802448e:	4b2b      	ldr	r3, [pc, #172]	; (802453c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024490:	0950      	lsrs	r0, r2, #5
 8024492:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024496:	4033      	ands	r3, r6
 8024498:	4318      	orrs	r0, r3
 802449a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802449e:	4302      	orrs	r2, r0
 80244a0:	800a      	strh	r2, [r1, #0]
 80244a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80244a6:	2600      	movs	r6, #0
 80244a8:	e788      	b.n	80243bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80244aa:	2400      	movs	r4, #0
 80244ac:	4626      	mov	r6, r4
 80244ae:	e799      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80244b0:	2400      	movs	r4, #0
 80244b2:	e797      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80244b4:	463c      	mov	r4, r7
 80244b6:	e795      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80244b8:	2500      	movs	r5, #0
 80244ba:	e7ac      	b.n	8024416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80244bc:	2300      	movs	r3, #0
 80244be:	461d      	mov	r5, r3
 80244c0:	e7bd      	b.n	802443e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80244c2:	4663      	mov	r3, ip
 80244c4:	4665      	mov	r5, ip
 80244c6:	e7ba      	b.n	802443e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80244c8:	2300      	movs	r3, #0
 80244ca:	e7b8      	b.n	802443e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80244cc:	463b      	mov	r3, r7
 80244ce:	e7b6      	b.n	802443e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80244d0:	880d      	ldrh	r5, [r1, #0]
 80244d2:	b29f      	uxth	r7, r3
 80244d4:	122c      	asrs	r4, r5, #8
 80244d6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80244da:	43db      	mvns	r3, r3
 80244dc:	b2db      	uxtb	r3, r3
 80244de:	fb10 f007 	smulbb	r0, r0, r7
 80244e2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80244e6:	fb04 0403 	mla	r4, r4, r3, r0
 80244ea:	b2f6      	uxtb	r6, r6
 80244ec:	10e8      	asrs	r0, r5, #3
 80244ee:	b2d2      	uxtb	r2, r2
 80244f0:	00ed      	lsls	r5, r5, #3
 80244f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80244f6:	fb12 f207 	smulbb	r2, r2, r7
 80244fa:	fb16 f607 	smulbb	r6, r6, r7
 80244fe:	b2ed      	uxtb	r5, r5
 8024500:	b2a4      	uxth	r4, r4
 8024502:	fb00 6603 	mla	r6, r0, r3, r6
 8024506:	fb05 2303 	mla	r3, r5, r3, r2
 802450a:	b29a      	uxth	r2, r3
 802450c:	1c63      	adds	r3, r4, #1
 802450e:	b2b0      	uxth	r0, r6
 8024510:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024514:	1c53      	adds	r3, r2, #1
 8024516:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802451a:	1c42      	adds	r2, r0, #1
 802451c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024520:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024524:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024528:	0940      	lsrs	r0, r0, #5
 802452a:	4323      	orrs	r3, r4
 802452c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024530:	4303      	orrs	r3, r0
 8024532:	800b      	strh	r3, [r1, #0]
 8024534:	e7b5      	b.n	80244a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024536:	bf00      	nop
 8024538:	200137dc 	.word	0x200137dc
 802453c:	00fff800 	.word	0x00fff800

08024540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024544:	b097      	sub	sp, #92	; 0x5c
 8024546:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802454a:	9214      	str	r2, [sp, #80]	; 0x50
 802454c:	9309      	str	r3, [sp, #36]	; 0x24
 802454e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024550:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024554:	910d      	str	r1, [sp, #52]	; 0x34
 8024556:	930f      	str	r3, [sp, #60]	; 0x3c
 8024558:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802455c:	9015      	str	r0, [sp, #84]	; 0x54
 802455e:	6850      	ldr	r0, [r2, #4]
 8024560:	6812      	ldr	r2, [r2, #0]
 8024562:	fb00 1303 	mla	r3, r0, r3, r1
 8024566:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802456a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802456c:	689b      	ldr	r3, [r3, #8]
 802456e:	3301      	adds	r3, #1
 8024570:	f023 0301 	bic.w	r3, r3, #1
 8024574:	930a      	str	r3, [sp, #40]	; 0x28
 8024576:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024578:	681f      	ldr	r7, [r3, #0]
 802457a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802457c:	2b00      	cmp	r3, #0
 802457e:	dc03      	bgt.n	8024588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024580:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024582:	2b00      	cmp	r3, #0
 8024584:	f340 8287 	ble.w	8024a96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024588:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802458a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802458e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024592:	1e48      	subs	r0, r1, #1
 8024594:	f102 3cff 	add.w	ip, r2, #4294967295
 8024598:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802459a:	2b00      	cmp	r3, #0
 802459c:	f340 80c4 	ble.w	8024728 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80245a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80245a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80245a8:	d406      	bmi.n	80245b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80245aa:	4586      	cmp	lr, r0
 80245ac:	da04      	bge.n	80245b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80245ae:	2b00      	cmp	r3, #0
 80245b0:	db02      	blt.n	80245b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80245b2:	4563      	cmp	r3, ip
 80245b4:	f2c0 80b9 	blt.w	802472a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80245b8:	f11e 0e01 	adds.w	lr, lr, #1
 80245bc:	f100 80aa 	bmi.w	8024714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80245c0:	4571      	cmp	r1, lr
 80245c2:	f2c0 80a7 	blt.w	8024714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80245c6:	3301      	adds	r3, #1
 80245c8:	f100 80a4 	bmi.w	8024714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80245cc:	429a      	cmp	r2, r3
 80245ce:	f2c0 80a1 	blt.w	8024714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80245d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245d4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80245d8:	930e      	str	r3, [sp, #56]	; 0x38
 80245da:	46c8      	mov	r8, r9
 80245dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80245de:	2b00      	cmp	r3, #0
 80245e0:	f340 80c3 	ble.w	802476a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80245e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80245e6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80245ea:	1423      	asrs	r3, r4, #16
 80245ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 80245f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80245f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80245f8:	f100 814d 	bmi.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80245fc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024600:	455b      	cmp	r3, fp
 8024602:	f280 8148 	bge.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024606:	2800      	cmp	r0, #0
 8024608:	f2c0 8145 	blt.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802460c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024610:	4558      	cmp	r0, fp
 8024612:	f280 8140 	bge.w	8024896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024616:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024618:	fb00 3305 	mla	r3, r0, r5, r3
 802461c:	0858      	lsrs	r0, r3, #1
 802461e:	07dd      	lsls	r5, r3, #31
 8024620:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024624:	bf54      	ite	pl
 8024626:	f00c 0c0f 	andpl.w	ip, ip, #15
 802462a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802462e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024632:	fa5f fc8c 	uxtb.w	ip, ip
 8024636:	2a00      	cmp	r2, #0
 8024638:	f000 80db 	beq.w	80247f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802463c:	1c58      	adds	r0, r3, #1
 802463e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024642:	07c0      	lsls	r0, r0, #31
 8024644:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024648:	bf54      	ite	pl
 802464a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802464e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024652:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024656:	fa5f f08e 	uxtb.w	r0, lr
 802465a:	9010      	str	r0, [sp, #64]	; 0x40
 802465c:	b1c9      	cbz	r1, 8024692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802465e:	4453      	add	r3, sl
 8024660:	0858      	lsrs	r0, r3, #1
 8024662:	07dd      	lsls	r5, r3, #31
 8024664:	5c38      	ldrb	r0, [r7, r0]
 8024666:	bf54      	ite	pl
 8024668:	f000 000f 	andpl.w	r0, r0, #15
 802466c:	1100      	asrmi	r0, r0, #4
 802466e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024672:	3301      	adds	r3, #1
 8024674:	b2c0      	uxtb	r0, r0
 8024676:	900b      	str	r0, [sp, #44]	; 0x2c
 8024678:	0858      	lsrs	r0, r3, #1
 802467a:	07dd      	lsls	r5, r3, #31
 802467c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024680:	bf54      	ite	pl
 8024682:	f00e 030f 	andpl.w	r3, lr, #15
 8024686:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802468a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802468e:	b2db      	uxtb	r3, r3
 8024690:	9311      	str	r3, [sp, #68]	; 0x44
 8024692:	b292      	uxth	r2, r2
 8024694:	b289      	uxth	r1, r1
 8024696:	fb02 f301 	mul.w	r3, r2, r1
 802469a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802469e:	0112      	lsls	r2, r2, #4
 80246a0:	b289      	uxth	r1, r1
 80246a2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80246a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80246a8:	1ad2      	subs	r2, r2, r3
 80246aa:	1a40      	subs	r0, r0, r1
 80246ac:	b292      	uxth	r2, r2
 80246ae:	436a      	muls	r2, r5
 80246b0:	b280      	uxth	r0, r0
 80246b2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80246b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80246b8:	fb01 c102 	mla	r1, r1, r2, ip
 80246bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80246be:	fb03 1302 	mla	r3, r3, r2, r1
 80246c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80246c6:	b1db      	cbz	r3, 8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80246c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80246ca:	4353      	muls	r3, r2
 80246cc:	1c5a      	adds	r2, r3, #1
 80246ce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80246d2:	4ac6      	ldr	r2, [pc, #792]	; (80249ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80246d4:	121b      	asrs	r3, r3, #8
 80246d6:	6812      	ldr	r2, [r2, #0]
 80246d8:	2bff      	cmp	r3, #255	; 0xff
 80246da:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80246de:	f040 8099 	bne.w	8024814 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80246e2:	0953      	lsrs	r3, r2, #5
 80246e4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80246e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80246ec:	f02c 0c07 	bic.w	ip, ip, #7
 80246f0:	ea43 0c0c 	orr.w	ip, r3, ip
 80246f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80246f8:	ea4c 0202 	orr.w	r2, ip, r2
 80246fc:	f8a8 2000 	strh.w	r2, [r8]
 8024700:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024702:	441c      	add	r4, r3
 8024704:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024706:	441e      	add	r6, r3
 8024708:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802470a:	3b01      	subs	r3, #1
 802470c:	f108 0802 	add.w	r8, r8, #2
 8024710:	930e      	str	r3, [sp, #56]	; 0x38
 8024712:	e763      	b.n	80245dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024714:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024716:	441c      	add	r4, r3
 8024718:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802471a:	441e      	add	r6, r3
 802471c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802471e:	3b01      	subs	r3, #1
 8024720:	9309      	str	r3, [sp, #36]	; 0x24
 8024722:	f109 0902 	add.w	r9, r9, #2
 8024726:	e737      	b.n	8024598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024728:	d024      	beq.n	8024774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802472a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802472c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802472e:	3b01      	subs	r3, #1
 8024730:	fb00 4003 	mla	r0, r0, r3, r4
 8024734:	1400      	asrs	r0, r0, #16
 8024736:	f53f af4c 	bmi.w	80245d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802473a:	3901      	subs	r1, #1
 802473c:	4288      	cmp	r0, r1
 802473e:	f6bf af48 	bge.w	80245d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024742:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024744:	fb01 6303 	mla	r3, r1, r3, r6
 8024748:	141b      	asrs	r3, r3, #16
 802474a:	f53f af42 	bmi.w	80245d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802474e:	3a01      	subs	r2, #1
 8024750:	4293      	cmp	r3, r2
 8024752:	f6bf af3e 	bge.w	80245d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024756:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802475a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802475e:	930e      	str	r3, [sp, #56]	; 0x38
 8024760:	46c8      	mov	r8, r9
 8024762:	f1bb 0f00 	cmp.w	fp, #0
 8024766:	f300 80b7 	bgt.w	80248d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802476a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802476c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024770:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024774:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024776:	2b00      	cmp	r3, #0
 8024778:	f340 818d 	ble.w	8024a96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802477c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024780:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024784:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024788:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802478a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802478e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024792:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024796:	eef0 6a62 	vmov.f32	s13, s5
 802479a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802479e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247a6:	ee16 4a90 	vmov	r4, s13
 80247aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247ae:	eef0 6a43 	vmov.f32	s13, s6
 80247b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247b6:	ee12 2a90 	vmov	r2, s5
 80247ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247be:	fb92 f3f3 	sdiv	r3, r2, r3
 80247c2:	ee13 2a10 	vmov	r2, s6
 80247c6:	9323      	str	r3, [sp, #140]	; 0x8c
 80247c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80247ce:	9324      	str	r3, [sp, #144]	; 0x90
 80247d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80247d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80247d4:	3b01      	subs	r3, #1
 80247d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247da:	930d      	str	r3, [sp, #52]	; 0x34
 80247dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247de:	bf08      	it	eq
 80247e0:	4613      	moveq	r3, r2
 80247e2:	ee16 6a90 	vmov	r6, s13
 80247e6:	9309      	str	r3, [sp, #36]	; 0x24
 80247e8:	eeb0 3a67 	vmov.f32	s6, s15
 80247ec:	eef0 2a47 	vmov.f32	s5, s14
 80247f0:	e6c3      	b.n	802457a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80247f2:	2900      	cmp	r1, #0
 80247f4:	f43f af4d 	beq.w	8024692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80247f8:	eb0a 0003 	add.w	r0, sl, r3
 80247fc:	0843      	lsrs	r3, r0, #1
 80247fe:	07c0      	lsls	r0, r0, #31
 8024800:	5cfb      	ldrb	r3, [r7, r3]
 8024802:	bf54      	ite	pl
 8024804:	f003 030f 	andpl.w	r3, r3, #15
 8024808:	111b      	asrmi	r3, r3, #4
 802480a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802480e:	b2db      	uxtb	r3, r3
 8024810:	930b      	str	r3, [sp, #44]	; 0x2c
 8024812:	e73e      	b.n	8024692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024814:	f8b8 e000 	ldrh.w	lr, [r8]
 8024818:	fa1f fb83 	uxth.w	fp, r3
 802481c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024820:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024824:	43db      	mvns	r3, r3
 8024826:	b2db      	uxtb	r3, r3
 8024828:	fb11 f10b 	smulbb	r1, r1, fp
 802482c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024830:	fb00 1003 	mla	r0, r0, r3, r1
 8024834:	fa5f fc8c 	uxtb.w	ip, ip
 8024838:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802483c:	b2d2      	uxtb	r2, r2
 802483e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024842:	b280      	uxth	r0, r0
 8024844:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024848:	fb1c fc0b 	smulbb	ip, ip, fp
 802484c:	fa5f fe8e 	uxtb.w	lr, lr
 8024850:	fb12 fb0b 	smulbb	fp, r2, fp
 8024854:	fb01 cc03 	mla	ip, r1, r3, ip
 8024858:	fb0e bb03 	mla	fp, lr, r3, fp
 802485c:	1c43      	adds	r3, r0, #1
 802485e:	fa1f fc8c 	uxth.w	ip, ip
 8024862:	fa1f fb8b 	uxth.w	fp, fp
 8024866:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802486a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802486e:	f10c 0101 	add.w	r1, ip, #1
 8024872:	f10b 0001 	add.w	r0, fp, #1
 8024876:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802487a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802487e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024882:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024886:	4318      	orrs	r0, r3
 8024888:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802488c:	ea40 000c 	orr.w	r0, r0, ip
 8024890:	f8a8 0000 	strh.w	r0, [r8]
 8024894:	e734      	b.n	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024896:	f113 0b01 	adds.w	fp, r3, #1
 802489a:	f53f af31 	bmi.w	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802489e:	45dc      	cmp	ip, fp
 80248a0:	f6ff af2e 	blt.w	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80248a4:	f110 0b01 	adds.w	fp, r0, #1
 80248a8:	f53f af2a 	bmi.w	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80248ac:	45de      	cmp	lr, fp
 80248ae:	f6ff af27 	blt.w	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80248b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80248b4:	9302      	str	r3, [sp, #8]
 80248b6:	fa0f f38e 	sxth.w	r3, lr
 80248ba:	9301      	str	r3, [sp, #4]
 80248bc:	fa0f f38c 	sxth.w	r3, ip
 80248c0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80248c4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80248c8:	9300      	str	r3, [sp, #0]
 80248ca:	463a      	mov	r2, r7
 80248cc:	4653      	mov	r3, sl
 80248ce:	4641      	mov	r1, r8
 80248d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80248d2:	f7ff fd4d 	bl	8024370 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80248d6:	e713      	b.n	8024700 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80248d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80248da:	1422      	asrs	r2, r4, #16
 80248dc:	1433      	asrs	r3, r6, #16
 80248de:	fb05 2303 	mla	r3, r5, r3, r2
 80248e2:	085a      	lsrs	r2, r3, #1
 80248e4:	07dd      	lsls	r5, r3, #31
 80248e6:	5cba      	ldrb	r2, [r7, r2]
 80248e8:	bf54      	ite	pl
 80248ea:	f002 020f 	andpl.w	r2, r2, #15
 80248ee:	1112      	asrmi	r2, r2, #4
 80248f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80248f4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80248f8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80248fc:	b2d2      	uxtb	r2, r2
 80248fe:	2900      	cmp	r1, #0
 8024900:	d076      	beq.n	80249f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024902:	f103 0e01 	add.w	lr, r3, #1
 8024906:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802490a:	f01e 0f01 	tst.w	lr, #1
 802490e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024912:	bf0c      	ite	eq
 8024914:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024918:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802491c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024920:	fa5f f58c 	uxtb.w	r5, ip
 8024924:	9512      	str	r5, [sp, #72]	; 0x48
 8024926:	b300      	cbz	r0, 802496a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024928:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802492a:	442b      	add	r3, r5
 802492c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024930:	07dd      	lsls	r5, r3, #31
 8024932:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024936:	bf54      	ite	pl
 8024938:	f00c 0c0f 	andpl.w	ip, ip, #15
 802493c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024940:	3301      	adds	r3, #1
 8024942:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024946:	fa5f f58c 	uxtb.w	r5, ip
 802494a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802494e:	950c      	str	r5, [sp, #48]	; 0x30
 8024950:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024954:	07dd      	lsls	r5, r3, #31
 8024956:	bf54      	ite	pl
 8024958:	f00c 0c0f 	andpl.w	ip, ip, #15
 802495c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024960:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024964:	fa5f f38c 	uxtb.w	r3, ip
 8024968:	9313      	str	r3, [sp, #76]	; 0x4c
 802496a:	b289      	uxth	r1, r1
 802496c:	b280      	uxth	r0, r0
 802496e:	fb01 f300 	mul.w	r3, r1, r0
 8024972:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024976:	0109      	lsls	r1, r1, #4
 8024978:	b280      	uxth	r0, r0
 802497a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802497e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024980:	1ac9      	subs	r1, r1, r3
 8024982:	ebac 0c00 	sub.w	ip, ip, r0
 8024986:	b289      	uxth	r1, r1
 8024988:	4369      	muls	r1, r5
 802498a:	fa1f fc8c 	uxth.w	ip, ip
 802498e:	fb02 120c 	mla	r2, r2, ip, r1
 8024992:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024994:	fb00 2001 	mla	r0, r0, r1, r2
 8024998:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802499a:	fb03 0302 	mla	r3, r3, r2, r0
 802499e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80249a2:	b1d3      	cbz	r3, 80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80249a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80249a6:	4353      	muls	r3, r2
 80249a8:	1c5a      	adds	r2, r3, #1
 80249aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80249ae:	4a0f      	ldr	r2, [pc, #60]	; (80249ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80249b0:	121b      	asrs	r3, r3, #8
 80249b2:	6812      	ldr	r2, [r2, #0]
 80249b4:	2bff      	cmp	r3, #255	; 0xff
 80249b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80249ba:	d12d      	bne.n	8024a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80249bc:	0953      	lsrs	r3, r2, #5
 80249be:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80249c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80249c6:	f02c 0c07 	bic.w	ip, ip, #7
 80249ca:	ea43 0c0c 	orr.w	ip, r3, ip
 80249ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80249d2:	ea4c 0202 	orr.w	r2, ip, r2
 80249d6:	f8a8 2000 	strh.w	r2, [r8]
 80249da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80249dc:	441c      	add	r4, r3
 80249de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80249e0:	f108 0802 	add.w	r8, r8, #2
 80249e4:	441e      	add	r6, r3
 80249e6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80249ea:	e6ba      	b.n	8024762 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80249ec:	200137dc 	.word	0x200137dc
 80249f0:	2800      	cmp	r0, #0
 80249f2:	d0ba      	beq.n	802496a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80249f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80249f6:	442b      	add	r3, r5
 80249f8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80249fc:	07db      	lsls	r3, r3, #31
 80249fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a02:	bf54      	ite	pl
 8024a04:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a10:	fa5f f38c 	uxtb.w	r3, ip
 8024a14:	930c      	str	r3, [sp, #48]	; 0x30
 8024a16:	e7a8      	b.n	802496a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024a18:	f8b8 e000 	ldrh.w	lr, [r8]
 8024a1c:	fa1f fa83 	uxth.w	sl, r3
 8024a20:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024a24:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024a28:	43db      	mvns	r3, r3
 8024a2a:	b2db      	uxtb	r3, r3
 8024a2c:	fb11 f10a 	smulbb	r1, r1, sl
 8024a30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024a34:	fb00 1003 	mla	r0, r0, r3, r1
 8024a38:	b2d2      	uxtb	r2, r2
 8024a3a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024a3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024a42:	fa5f fe8e 	uxtb.w	lr, lr
 8024a46:	fb12 f20a 	smulbb	r2, r2, sl
 8024a4a:	fb0e 2203 	mla	r2, lr, r3, r2
 8024a4e:	fa5f fc8c 	uxtb.w	ip, ip
 8024a52:	b280      	uxth	r0, r0
 8024a54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024a58:	b292      	uxth	r2, r2
 8024a5a:	fb1c fc0a 	smulbb	ip, ip, sl
 8024a5e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024a62:	1c43      	adds	r3, r0, #1
 8024a64:	1c51      	adds	r1, r2, #1
 8024a66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024a6a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024a6e:	fa1f fc8c 	uxth.w	ip, ip
 8024a72:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024a76:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024a7a:	4308      	orrs	r0, r1
 8024a7c:	f10c 0101 	add.w	r1, ip, #1
 8024a80:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024a84:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024a88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024a8c:	ea40 000c 	orr.w	r0, r0, ip
 8024a90:	f8a8 0000 	strh.w	r0, [r8]
 8024a94:	e7a1      	b.n	80249da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024a96:	b017      	add	sp, #92	; 0x5c
 8024a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024a9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024aa0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024aa4:	2d00      	cmp	r5, #0
 8024aa6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024aaa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024aae:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024ab2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024ab6:	fb05 0e03 	mla	lr, r5, r3, r0
 8024aba:	f2c0 80b0 	blt.w	8024c1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024abe:	45a9      	cmp	r9, r5
 8024ac0:	f340 80ad 	ble.w	8024c1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024ac4:	2800      	cmp	r0, #0
 8024ac6:	f2c0 80a8 	blt.w	8024c1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024aca:	4580      	cmp	r8, r0
 8024acc:	f340 80a5 	ble.w	8024c1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024ad0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024ad4:	f01e 0f01 	tst.w	lr, #1
 8024ad8:	5d16      	ldrb	r6, [r2, r4]
 8024ada:	bf0c      	ite	eq
 8024adc:	f006 060f 	andeq.w	r6, r6, #15
 8024ae0:	1136      	asrne	r6, r6, #4
 8024ae2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024ae6:	b2f6      	uxtb	r6, r6
 8024ae8:	1c44      	adds	r4, r0, #1
 8024aea:	f100 809b 	bmi.w	8024c24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024aee:	45a0      	cmp	r8, r4
 8024af0:	f340 8098 	ble.w	8024c24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024af4:	2f00      	cmp	r7, #0
 8024af6:	f000 8097 	beq.w	8024c28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024afa:	f10e 0a01 	add.w	sl, lr, #1
 8024afe:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024b02:	f01a 0f01 	tst.w	sl, #1
 8024b06:	5d14      	ldrb	r4, [r2, r4]
 8024b08:	bf0c      	ite	eq
 8024b0a:	f004 040f 	andeq.w	r4, r4, #15
 8024b0e:	1124      	asrne	r4, r4, #4
 8024b10:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024b14:	b2e4      	uxtb	r4, r4
 8024b16:	3501      	adds	r5, #1
 8024b18:	f100 808a 	bmi.w	8024c30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024b1c:	45a9      	cmp	r9, r5
 8024b1e:	f340 8087 	ble.w	8024c30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024b22:	f1bc 0f00 	cmp.w	ip, #0
 8024b26:	f000 8086 	beq.w	8024c36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024b2a:	2800      	cmp	r0, #0
 8024b2c:	db7e      	blt.n	8024c2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024b2e:	4580      	cmp	r8, r0
 8024b30:	dd7c      	ble.n	8024c2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024b32:	eb03 090e 	add.w	r9, r3, lr
 8024b36:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024b3a:	f019 0f01 	tst.w	r9, #1
 8024b3e:	5d55      	ldrb	r5, [r2, r5]
 8024b40:	bf0c      	ite	eq
 8024b42:	f005 050f 	andeq.w	r5, r5, #15
 8024b46:	112d      	asrne	r5, r5, #4
 8024b48:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024b4c:	b2ed      	uxtb	r5, r5
 8024b4e:	3001      	adds	r0, #1
 8024b50:	d474      	bmi.n	8024c3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024b52:	4580      	cmp	r8, r0
 8024b54:	dd72      	ble.n	8024c3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024b56:	2f00      	cmp	r7, #0
 8024b58:	d072      	beq.n	8024c40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024b5a:	3301      	adds	r3, #1
 8024b5c:	449e      	add	lr, r3
 8024b5e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024b62:	f01e 0f01 	tst.w	lr, #1
 8024b66:	5cd0      	ldrb	r0, [r2, r3]
 8024b68:	bf0c      	ite	eq
 8024b6a:	f000 000f 	andeq.w	r0, r0, #15
 8024b6e:	1100      	asrne	r0, r0, #4
 8024b70:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024b74:	b2c3      	uxtb	r3, r0
 8024b76:	b2ba      	uxth	r2, r7
 8024b78:	fa1f fc8c 	uxth.w	ip, ip
 8024b7c:	fb02 f00c 	mul.w	r0, r2, ip
 8024b80:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024b84:	0112      	lsls	r2, r2, #4
 8024b86:	fa1f fc8c 	uxth.w	ip, ip
 8024b8a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024b8e:	1a12      	subs	r2, r2, r0
 8024b90:	eba7 070c 	sub.w	r7, r7, ip
 8024b94:	b292      	uxth	r2, r2
 8024b96:	b2bf      	uxth	r7, r7
 8024b98:	4362      	muls	r2, r4
 8024b9a:	fb06 2207 	mla	r2, r6, r7, r2
 8024b9e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024ba2:	fb00 5303 	mla	r3, r0, r3, r5
 8024ba6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024baa:	b3a3      	cbz	r3, 8024c16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024bac:	4a25      	ldr	r2, [pc, #148]	; (8024c44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024bae:	880e      	ldrh	r6, [r1, #0]
 8024bb0:	6815      	ldr	r5, [r2, #0]
 8024bb2:	1234      	asrs	r4, r6, #8
 8024bb4:	b29a      	uxth	r2, r3
 8024bb6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024bba:	43db      	mvns	r3, r3
 8024bbc:	b2db      	uxtb	r3, r3
 8024bbe:	fb10 f002 	smulbb	r0, r0, r2
 8024bc2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024bc6:	fb04 0403 	mla	r4, r4, r3, r0
 8024bca:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024bce:	10f0      	asrs	r0, r6, #3
 8024bd0:	b2ed      	uxtb	r5, r5
 8024bd2:	00f6      	lsls	r6, r6, #3
 8024bd4:	fb17 f702 	smulbb	r7, r7, r2
 8024bd8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024bdc:	fb15 f202 	smulbb	r2, r5, r2
 8024be0:	b2f6      	uxtb	r6, r6
 8024be2:	b2a4      	uxth	r4, r4
 8024be4:	fb00 7003 	mla	r0, r0, r3, r7
 8024be8:	fb06 2303 	mla	r3, r6, r3, r2
 8024bec:	b29a      	uxth	r2, r3
 8024bee:	1c63      	adds	r3, r4, #1
 8024bf0:	b280      	uxth	r0, r0
 8024bf2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024bf6:	1c53      	adds	r3, r2, #1
 8024bf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bfc:	1c42      	adds	r2, r0, #1
 8024bfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024c02:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024c06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024c0a:	0940      	lsrs	r0, r0, #5
 8024c0c:	4323      	orrs	r3, r4
 8024c0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024c12:	4303      	orrs	r3, r0
 8024c14:	800b      	strh	r3, [r1, #0]
 8024c16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024c1a:	2600      	movs	r6, #0
 8024c1c:	e764      	b.n	8024ae8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024c1e:	2400      	movs	r4, #0
 8024c20:	4626      	mov	r6, r4
 8024c22:	e778      	b.n	8024b16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024c24:	2400      	movs	r4, #0
 8024c26:	e776      	b.n	8024b16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024c28:	463c      	mov	r4, r7
 8024c2a:	e774      	b.n	8024b16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024c2c:	2500      	movs	r5, #0
 8024c2e:	e78e      	b.n	8024b4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024c30:	2300      	movs	r3, #0
 8024c32:	461d      	mov	r5, r3
 8024c34:	e79f      	b.n	8024b76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024c36:	4663      	mov	r3, ip
 8024c38:	4665      	mov	r5, ip
 8024c3a:	e79c      	b.n	8024b76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024c3c:	2300      	movs	r3, #0
 8024c3e:	e79a      	b.n	8024b76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024c40:	463b      	mov	r3, r7
 8024c42:	e798      	b.n	8024b76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024c44:	200137dc 	.word	0x200137dc

08024c48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c4c:	b093      	sub	sp, #76	; 0x4c
 8024c4e:	461d      	mov	r5, r3
 8024c50:	920c      	str	r2, [sp, #48]	; 0x30
 8024c52:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024c54:	9107      	str	r1, [sp, #28]
 8024c56:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024c5a:	9011      	str	r0, [sp, #68]	; 0x44
 8024c5c:	6850      	ldr	r0, [r2, #4]
 8024c5e:	6812      	ldr	r2, [r2, #0]
 8024c60:	fb00 1303 	mla	r3, r0, r3, r1
 8024c64:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024c68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c6a:	689b      	ldr	r3, [r3, #8]
 8024c6c:	3301      	adds	r3, #1
 8024c6e:	f023 0301 	bic.w	r3, r3, #1
 8024c72:	9306      	str	r3, [sp, #24]
 8024c74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c76:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024c7a:	681f      	ldr	r7, [r3, #0]
 8024c7c:	9b07      	ldr	r3, [sp, #28]
 8024c7e:	2b00      	cmp	r3, #0
 8024c80:	dc03      	bgt.n	8024c8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024c82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024c84:	2b00      	cmp	r3, #0
 8024c86:	f340 8267 	ble.w	8025158 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024c8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024c90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024c94:	1e48      	subs	r0, r1, #1
 8024c96:	f102 3cff 	add.w	ip, r2, #4294967295
 8024c9a:	2d00      	cmp	r5, #0
 8024c9c:	f340 80b8 	ble.w	8024e10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024ca0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024ca4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024ca8:	d406      	bmi.n	8024cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024caa:	4586      	cmp	lr, r0
 8024cac:	da04      	bge.n	8024cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024cae:	2b00      	cmp	r3, #0
 8024cb0:	db02      	blt.n	8024cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024cb2:	4563      	cmp	r3, ip
 8024cb4:	f2c0 80ad 	blt.w	8024e12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024cb8:	f11e 0e01 	adds.w	lr, lr, #1
 8024cbc:	f100 80a0 	bmi.w	8024e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024cc0:	4571      	cmp	r1, lr
 8024cc2:	f2c0 809d 	blt.w	8024e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024cc6:	3301      	adds	r3, #1
 8024cc8:	f100 809a 	bmi.w	8024e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024ccc:	429a      	cmp	r2, r3
 8024cce:	f2c0 8097 	blt.w	8024e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024cd2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024cd6:	9509      	str	r5, [sp, #36]	; 0x24
 8024cd8:	46c8      	mov	r8, r9
 8024cda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024cdc:	2b00      	cmp	r3, #0
 8024cde:	f340 80b6 	ble.w	8024e4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024ce2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024ce6:	9308      	str	r3, [sp, #32]
 8024ce8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cea:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024cee:	1423      	asrs	r3, r4, #16
 8024cf0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024cf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024cf8:	f100 813e 	bmi.w	8024f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024cfc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024d00:	455b      	cmp	r3, fp
 8024d02:	f280 8139 	bge.w	8024f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d06:	2800      	cmp	r0, #0
 8024d08:	f2c0 8136 	blt.w	8024f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d0c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024d10:	4558      	cmp	r0, fp
 8024d12:	f280 8131 	bge.w	8024f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024d16:	9a06      	ldr	r2, [sp, #24]
 8024d18:	fb00 3302 	mla	r3, r0, r2, r3
 8024d1c:	0858      	lsrs	r0, r3, #1
 8024d1e:	07da      	lsls	r2, r3, #31
 8024d20:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024d24:	9a08      	ldr	r2, [sp, #32]
 8024d26:	bf54      	ite	pl
 8024d28:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d2c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d34:	fa5f fc8c 	uxtb.w	ip, ip
 8024d38:	2a00      	cmp	r2, #0
 8024d3a:	f000 80cb 	beq.w	8024ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024d3e:	1c58      	adds	r0, r3, #1
 8024d40:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024d44:	07c0      	lsls	r0, r0, #31
 8024d46:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024d4a:	bf54      	ite	pl
 8024d4c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024d50:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024d54:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024d58:	fa5f fe8e 	uxtb.w	lr, lr
 8024d5c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024d60:	b1b9      	cbz	r1, 8024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024d62:	4453      	add	r3, sl
 8024d64:	0858      	lsrs	r0, r3, #1
 8024d66:	07da      	lsls	r2, r3, #31
 8024d68:	5c38      	ldrb	r0, [r7, r0]
 8024d6a:	bf54      	ite	pl
 8024d6c:	f000 000f 	andpl.w	r0, r0, #15
 8024d70:	1100      	asrmi	r0, r0, #4
 8024d72:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024d76:	b2c0      	uxtb	r0, r0
 8024d78:	900a      	str	r0, [sp, #40]	; 0x28
 8024d7a:	1c58      	adds	r0, r3, #1
 8024d7c:	0843      	lsrs	r3, r0, #1
 8024d7e:	07c2      	lsls	r2, r0, #31
 8024d80:	5cfb      	ldrb	r3, [r7, r3]
 8024d82:	bf54      	ite	pl
 8024d84:	f003 030f 	andpl.w	r3, r3, #15
 8024d88:	111b      	asrmi	r3, r3, #4
 8024d8a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024d8e:	b2db      	uxtb	r3, r3
 8024d90:	930e      	str	r3, [sp, #56]	; 0x38
 8024d92:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024d96:	b289      	uxth	r1, r1
 8024d98:	fb02 f301 	mul.w	r3, r2, r1
 8024d9c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024da0:	0112      	lsls	r2, r2, #4
 8024da2:	b289      	uxth	r1, r1
 8024da4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024da8:	1a40      	subs	r0, r0, r1
 8024daa:	fa1f fe80 	uxth.w	lr, r0
 8024dae:	1ad2      	subs	r2, r2, r3
 8024db0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024db2:	b292      	uxth	r2, r2
 8024db4:	4342      	muls	r2, r0
 8024db6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024dba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024dbc:	fb01 c102 	mla	r1, r1, r2, ip
 8024dc0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024dc2:	fb03 1302 	mla	r3, r3, r2, r1
 8024dc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024dca:	2bff      	cmp	r3, #255	; 0xff
 8024dcc:	f040 8093 	bne.w	8024ef6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024dd0:	4bbe      	ldr	r3, [pc, #760]	; (80250cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024dd2:	681a      	ldr	r2, [r3, #0]
 8024dd4:	4bbe      	ldr	r3, [pc, #760]	; (80250d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024dd6:	0951      	lsrs	r1, r2, #5
 8024dd8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024ddc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024de0:	430b      	orrs	r3, r1
 8024de2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024de6:	4313      	orrs	r3, r2
 8024de8:	f8a8 3000 	strh.w	r3, [r8]
 8024dec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024dee:	441c      	add	r4, r3
 8024df0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024df2:	441e      	add	r6, r3
 8024df4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024df6:	3b01      	subs	r3, #1
 8024df8:	f108 0802 	add.w	r8, r8, #2
 8024dfc:	9309      	str	r3, [sp, #36]	; 0x24
 8024dfe:	e76c      	b.n	8024cda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024e00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e02:	441c      	add	r4, r3
 8024e04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e06:	3d01      	subs	r5, #1
 8024e08:	441e      	add	r6, r3
 8024e0a:	f109 0902 	add.w	r9, r9, #2
 8024e0e:	e744      	b.n	8024c9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024e10:	d021      	beq.n	8024e56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024e12:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024e14:	1e6b      	subs	r3, r5, #1
 8024e16:	fb00 4003 	mla	r0, r0, r3, r4
 8024e1a:	1400      	asrs	r0, r0, #16
 8024e1c:	f53f af59 	bmi.w	8024cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024e20:	3901      	subs	r1, #1
 8024e22:	4288      	cmp	r0, r1
 8024e24:	f6bf af55 	bge.w	8024cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024e28:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024e2a:	fb01 6303 	mla	r3, r1, r3, r6
 8024e2e:	141b      	asrs	r3, r3, #16
 8024e30:	f53f af4f 	bmi.w	8024cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024e34:	3a01      	subs	r2, #1
 8024e36:	4293      	cmp	r3, r2
 8024e38:	f6bf af4b 	bge.w	8024cd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024e3c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024e40:	9308      	str	r3, [sp, #32]
 8024e42:	46a8      	mov	r8, r5
 8024e44:	46ce      	mov	lr, r9
 8024e46:	f1b8 0f00 	cmp.w	r8, #0
 8024e4a:	f300 80b5 	bgt.w	8024fb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024e4e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024e52:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024e56:	9b07      	ldr	r3, [sp, #28]
 8024e58:	2b00      	cmp	r3, #0
 8024e5a:	f340 817d 	ble.w	8025158 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024e5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024e62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024e66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024e6a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024e70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024e74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024e78:	eef0 6a62 	vmov.f32	s13, s5
 8024e7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024e80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024e88:	ee16 4a90 	vmov	r4, s13
 8024e8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024e90:	eef0 6a43 	vmov.f32	s13, s6
 8024e94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024e98:	ee12 2a90 	vmov	r2, s5
 8024e9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ea0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ea4:	ee13 2a10 	vmov	r2, s6
 8024ea8:	931f      	str	r3, [sp, #124]	; 0x7c
 8024eaa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024eac:	fb92 f3f3 	sdiv	r3, r2, r3
 8024eb0:	9320      	str	r3, [sp, #128]	; 0x80
 8024eb2:	9b07      	ldr	r3, [sp, #28]
 8024eb4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024eb6:	3b01      	subs	r3, #1
 8024eb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ebc:	9307      	str	r3, [sp, #28]
 8024ebe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024ec0:	ee16 6a90 	vmov	r6, s13
 8024ec4:	bf14      	ite	ne
 8024ec6:	461d      	movne	r5, r3
 8024ec8:	4615      	moveq	r5, r2
 8024eca:	eeb0 3a67 	vmov.f32	s6, s15
 8024ece:	eef0 2a47 	vmov.f32	s5, s14
 8024ed2:	e6d3      	b.n	8024c7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024ed4:	2900      	cmp	r1, #0
 8024ed6:	f43f af5c 	beq.w	8024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024eda:	eb0a 0003 	add.w	r0, sl, r3
 8024ede:	0843      	lsrs	r3, r0, #1
 8024ee0:	07c0      	lsls	r0, r0, #31
 8024ee2:	5cfb      	ldrb	r3, [r7, r3]
 8024ee4:	bf54      	ite	pl
 8024ee6:	f003 030f 	andpl.w	r3, r3, #15
 8024eea:	111b      	asrmi	r3, r3, #4
 8024eec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ef0:	b2db      	uxtb	r3, r3
 8024ef2:	930a      	str	r3, [sp, #40]	; 0x28
 8024ef4:	e74d      	b.n	8024d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024ef6:	2b00      	cmp	r3, #0
 8024ef8:	f43f af78 	beq.w	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024efc:	4a73      	ldr	r2, [pc, #460]	; (80250cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024efe:	f8b8 c000 	ldrh.w	ip, [r8]
 8024f02:	6810      	ldr	r0, [r2, #0]
 8024f04:	fa1f fe83 	uxth.w	lr, r3
 8024f08:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024f0c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024f10:	43db      	mvns	r3, r3
 8024f12:	b2db      	uxtb	r3, r3
 8024f14:	fb12 f20e 	smulbb	r2, r2, lr
 8024f18:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024f1c:	fb01 2103 	mla	r1, r1, r3, r2
 8024f20:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024f24:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024f28:	b2c0      	uxtb	r0, r0
 8024f2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024f2e:	fb1b fb0e 	smulbb	fp, fp, lr
 8024f32:	b289      	uxth	r1, r1
 8024f34:	fb10 fe0e 	smulbb	lr, r0, lr
 8024f38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024f3c:	fa5f fc8c 	uxtb.w	ip, ip
 8024f40:	fb02 b203 	mla	r2, r2, r3, fp
 8024f44:	1c48      	adds	r0, r1, #1
 8024f46:	fb0c e303 	mla	r3, ip, r3, lr
 8024f4a:	b292      	uxth	r2, r2
 8024f4c:	b29b      	uxth	r3, r3
 8024f4e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024f52:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024f56:	f102 0b01 	add.w	fp, r2, #1
 8024f5a:	1c59      	adds	r1, r3, #1
 8024f5c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024f60:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024f64:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024f68:	0952      	lsrs	r2, r2, #5
 8024f6a:	4301      	orrs	r1, r0
 8024f6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024f70:	4311      	orrs	r1, r2
 8024f72:	f8a8 1000 	strh.w	r1, [r8]
 8024f76:	e739      	b.n	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f78:	f113 0b01 	adds.w	fp, r3, #1
 8024f7c:	f53f af36 	bmi.w	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f80:	45dc      	cmp	ip, fp
 8024f82:	f6ff af33 	blt.w	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f86:	f110 0b01 	adds.w	fp, r0, #1
 8024f8a:	f53f af2f 	bmi.w	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f8e:	45de      	cmp	lr, fp
 8024f90:	f6ff af2c 	blt.w	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024f94:	9a08      	ldr	r2, [sp, #32]
 8024f96:	9302      	str	r3, [sp, #8]
 8024f98:	fa0f f38e 	sxth.w	r3, lr
 8024f9c:	9301      	str	r3, [sp, #4]
 8024f9e:	fa0f f38c 	sxth.w	r3, ip
 8024fa2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024fa6:	9105      	str	r1, [sp, #20]
 8024fa8:	9300      	str	r3, [sp, #0]
 8024faa:	463a      	mov	r2, r7
 8024fac:	4653      	mov	r3, sl
 8024fae:	4641      	mov	r1, r8
 8024fb0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024fb2:	f7ff fd73 	bl	8024a9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024fb6:	e719      	b.n	8024dec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024fb8:	9906      	ldr	r1, [sp, #24]
 8024fba:	1422      	asrs	r2, r4, #16
 8024fbc:	1433      	asrs	r3, r6, #16
 8024fbe:	fb01 2303 	mla	r3, r1, r3, r2
 8024fc2:	085a      	lsrs	r2, r3, #1
 8024fc4:	07d9      	lsls	r1, r3, #31
 8024fc6:	5cba      	ldrb	r2, [r7, r2]
 8024fc8:	bf54      	ite	pl
 8024fca:	f002 020f 	andpl.w	r2, r2, #15
 8024fce:	1112      	asrmi	r2, r2, #4
 8024fd0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024fd4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024fd8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024fdc:	b2d2      	uxtb	r2, r2
 8024fde:	2800      	cmp	r0, #0
 8024fe0:	d062      	beq.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024fe2:	f103 0a01 	add.w	sl, r3, #1
 8024fe6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024fea:	f01a 0f01 	tst.w	sl, #1
 8024fee:	5c79      	ldrb	r1, [r7, r1]
 8024ff0:	bf0c      	ite	eq
 8024ff2:	f001 010f 	andeq.w	r1, r1, #15
 8024ff6:	1109      	asrne	r1, r1, #4
 8024ff8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024ffc:	b2c9      	uxtb	r1, r1
 8024ffe:	910f      	str	r1, [sp, #60]	; 0x3c
 8025000:	f1bc 0f00 	cmp.w	ip, #0
 8025004:	d019      	beq.n	802503a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025006:	9908      	ldr	r1, [sp, #32]
 8025008:	440b      	add	r3, r1
 802500a:	0859      	lsrs	r1, r3, #1
 802500c:	f013 0f01 	tst.w	r3, #1
 8025010:	5c79      	ldrb	r1, [r7, r1]
 8025012:	bf0c      	ite	eq
 8025014:	f001 010f 	andeq.w	r1, r1, #15
 8025018:	1109      	asrne	r1, r1, #4
 802501a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802501e:	b2c9      	uxtb	r1, r1
 8025020:	3301      	adds	r3, #1
 8025022:	910b      	str	r1, [sp, #44]	; 0x2c
 8025024:	0859      	lsrs	r1, r3, #1
 8025026:	07db      	lsls	r3, r3, #31
 8025028:	5c79      	ldrb	r1, [r7, r1]
 802502a:	bf54      	ite	pl
 802502c:	f001 010f 	andpl.w	r1, r1, #15
 8025030:	1109      	asrmi	r1, r1, #4
 8025032:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025036:	b2c9      	uxtb	r1, r1
 8025038:	9110      	str	r1, [sp, #64]	; 0x40
 802503a:	b280      	uxth	r0, r0
 802503c:	fa1f fc8c 	uxth.w	ip, ip
 8025040:	fb00 f30c 	mul.w	r3, r0, ip
 8025044:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025048:	0100      	lsls	r0, r0, #4
 802504a:	fa1f fc8c 	uxth.w	ip, ip
 802504e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025052:	eba1 010c 	sub.w	r1, r1, ip
 8025056:	fa1f fa81 	uxth.w	sl, r1
 802505a:	1ac0      	subs	r0, r0, r3
 802505c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802505e:	b280      	uxth	r0, r0
 8025060:	4348      	muls	r0, r1
 8025062:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025064:	fb02 020a 	mla	r2, r2, sl, r0
 8025068:	fb0c 2c01 	mla	ip, ip, r1, r2
 802506c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802506e:	fb03 c302 	mla	r3, r3, r2, ip
 8025072:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025076:	2bff      	cmp	r3, #255	; 0xff
 8025078:	d12c      	bne.n	80250d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802507a:	4b14      	ldr	r3, [pc, #80]	; (80250cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802507c:	681a      	ldr	r2, [r3, #0]
 802507e:	4b14      	ldr	r3, [pc, #80]	; (80250d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025080:	0951      	lsrs	r1, r2, #5
 8025082:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025086:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802508a:	430b      	orrs	r3, r1
 802508c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025090:	4313      	orrs	r3, r2
 8025092:	f8ae 3000 	strh.w	r3, [lr]
 8025096:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025098:	441c      	add	r4, r3
 802509a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802509c:	f10e 0e02 	add.w	lr, lr, #2
 80250a0:	441e      	add	r6, r3
 80250a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80250a6:	e6ce      	b.n	8024e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80250a8:	f1bc 0f00 	cmp.w	ip, #0
 80250ac:	d0c5      	beq.n	802503a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80250ae:	9908      	ldr	r1, [sp, #32]
 80250b0:	440b      	add	r3, r1
 80250b2:	0859      	lsrs	r1, r3, #1
 80250b4:	07db      	lsls	r3, r3, #31
 80250b6:	5c79      	ldrb	r1, [r7, r1]
 80250b8:	bf54      	ite	pl
 80250ba:	f001 010f 	andpl.w	r1, r1, #15
 80250be:	1109      	asrmi	r1, r1, #4
 80250c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80250c4:	b2c9      	uxtb	r1, r1
 80250c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80250c8:	e7b7      	b.n	802503a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80250ca:	bf00      	nop
 80250cc:	200137dc 	.word	0x200137dc
 80250d0:	fffff800 	.word	0xfffff800
 80250d4:	2b00      	cmp	r3, #0
 80250d6:	d0de      	beq.n	8025096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80250d8:	4a21      	ldr	r2, [pc, #132]	; (8025160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80250da:	f8be c000 	ldrh.w	ip, [lr]
 80250de:	6810      	ldr	r0, [r2, #0]
 80250e0:	fa1f fa83 	uxth.w	sl, r3
 80250e4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80250e8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80250ec:	43db      	mvns	r3, r3
 80250ee:	b2db      	uxtb	r3, r3
 80250f0:	fb12 f20a 	smulbb	r2, r2, sl
 80250f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80250f8:	fb01 2103 	mla	r1, r1, r3, r2
 80250fc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025100:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025104:	b2c0      	uxtb	r0, r0
 8025106:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802510a:	fa5f fc8c 	uxtb.w	ip, ip
 802510e:	fb10 f00a 	smulbb	r0, r0, sl
 8025112:	fb0c 0003 	mla	r0, ip, r3, r0
 8025116:	b289      	uxth	r1, r1
 8025118:	fb1b fb0a 	smulbb	fp, fp, sl
 802511c:	b280      	uxth	r0, r0
 802511e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025122:	fb02 b203 	mla	r2, r2, r3, fp
 8025126:	1c4b      	adds	r3, r1, #1
 8025128:	f100 0b01 	add.w	fp, r0, #1
 802512c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025130:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025134:	b292      	uxth	r2, r2
 8025136:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802513a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802513e:	ea4b 0101 	orr.w	r1, fp, r1
 8025142:	f102 0b01 	add.w	fp, r2, #1
 8025146:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802514a:	0952      	lsrs	r2, r2, #5
 802514c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025150:	4311      	orrs	r1, r2
 8025152:	f8ae 1000 	strh.w	r1, [lr]
 8025156:	e79e      	b.n	8025096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025158:	b013      	add	sp, #76	; 0x4c
 802515a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802515e:	bf00      	nop
 8025160:	200137dc 	.word	0x200137dc

08025164 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025164:	b570      	push	{r4, r5, r6, lr}
 8025166:	1208      	asrs	r0, r1, #8
 8025168:	b29e      	uxth	r6, r3
 802516a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802516e:	1213      	asrs	r3, r2, #8
 8025170:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025174:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025178:	fb13 f305 	smulbb	r3, r3, r5
 802517c:	fb10 f006 	smulbb	r0, r0, r6
 8025180:	4418      	add	r0, r3
 8025182:	10cc      	asrs	r4, r1, #3
 8025184:	10d3      	asrs	r3, r2, #3
 8025186:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802518a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802518e:	fb13 f305 	smulbb	r3, r3, r5
 8025192:	fb14 f406 	smulbb	r4, r4, r6
 8025196:	00c9      	lsls	r1, r1, #3
 8025198:	00d2      	lsls	r2, r2, #3
 802519a:	441c      	add	r4, r3
 802519c:	b2d2      	uxtb	r2, r2
 802519e:	b2cb      	uxtb	r3, r1
 80251a0:	fb12 f205 	smulbb	r2, r2, r5
 80251a4:	b280      	uxth	r0, r0
 80251a6:	fb13 f306 	smulbb	r3, r3, r6
 80251aa:	4413      	add	r3, r2
 80251ac:	1c42      	adds	r2, r0, #1
 80251ae:	b29b      	uxth	r3, r3
 80251b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80251b4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80251b8:	1c58      	adds	r0, r3, #1
 80251ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80251be:	b2a4      	uxth	r4, r4
 80251c0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80251c4:	4310      	orrs	r0, r2
 80251c6:	1c62      	adds	r2, r4, #1
 80251c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80251cc:	0964      	lsrs	r4, r4, #5
 80251ce:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80251d2:	4320      	orrs	r0, r4
 80251d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080251d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80251d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251dc:	b08f      	sub	sp, #60	; 0x3c
 80251de:	461c      	mov	r4, r3
 80251e0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80251e4:	9004      	str	r0, [sp, #16]
 80251e6:	460d      	mov	r5, r1
 80251e8:	4616      	mov	r6, r2
 80251ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80251ec:	2f00      	cmp	r7, #0
 80251ee:	f000 80f6 	beq.w	80253de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80251f2:	6820      	ldr	r0, [r4, #0]
 80251f4:	6861      	ldr	r1, [r4, #4]
 80251f6:	aa0a      	add	r2, sp, #40	; 0x28
 80251f8:	c203      	stmia	r2!, {r0, r1}
 80251fa:	6818      	ldr	r0, [r3, #0]
 80251fc:	6859      	ldr	r1, [r3, #4]
 80251fe:	aa0c      	add	r2, sp, #48	; 0x30
 8025200:	c203      	stmia	r2!, {r0, r1}
 8025202:	a80a      	add	r0, sp, #40	; 0x28
 8025204:	f7ef fc90 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025208:	4621      	mov	r1, r4
 802520a:	a80c      	add	r0, sp, #48	; 0x30
 802520c:	f7ef fcd0 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025210:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025214:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025218:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802521c:	f002 0301 	and.w	r3, r2, #1
 8025220:	9306      	str	r3, [sp, #24]
 8025222:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025226:	f003 0101 	and.w	r1, r3, #1
 802522a:	9105      	str	r1, [sp, #20]
 802522c:	9805      	ldr	r0, [sp, #20]
 802522e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025232:	4403      	add	r3, r0
 8025234:	fb01 2303 	mla	r3, r1, r3, r2
 8025238:	f04f 0802 	mov.w	r8, #2
 802523c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025240:	441d      	add	r5, r3
 8025242:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025246:	441a      	add	r2, r3
 8025248:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802524c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025250:	4419      	add	r1, r3
 8025252:	4b64      	ldr	r3, [pc, #400]	; (80253e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025254:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025258:	6818      	ldr	r0, [r3, #0]
 802525a:	6803      	ldr	r3, [r0, #0]
 802525c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802525e:	4798      	blx	r3
 8025260:	4a61      	ldr	r2, [pc, #388]	; (80253e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025262:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025266:	8813      	ldrh	r3, [r2, #0]
 8025268:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802526c:	2fff      	cmp	r7, #255	; 0xff
 802526e:	fb03 a404 	mla	r4, r3, r4, sl
 8025272:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025276:	f106 0604 	add.w	r6, r6, #4
 802527a:	4611      	mov	r1, r2
 802527c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025280:	d06b      	beq.n	802535a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025282:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025286:	9303      	str	r3, [sp, #12]
 8025288:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802528c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025290:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025294:	9b07      	ldr	r3, [sp, #28]
 8025296:	42a3      	cmp	r3, r4
 8025298:	f240 809c 	bls.w	80253d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802529c:	9b06      	ldr	r3, [sp, #24]
 802529e:	2b00      	cmp	r3, #0
 80252a0:	d039      	beq.n	8025316 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80252a2:	782b      	ldrb	r3, [r5, #0]
 80252a4:	8822      	ldrh	r2, [r4, #0]
 80252a6:	9804      	ldr	r0, [sp, #16]
 80252a8:	f003 030f 	and.w	r3, r3, #15
 80252ac:	f105 0801 	add.w	r8, r5, #1
 80252b0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80252b4:	9b03      	ldr	r3, [sp, #12]
 80252b6:	9300      	str	r3, [sp, #0]
 80252b8:	463b      	mov	r3, r7
 80252ba:	f7ff ff53 	bl	8025164 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80252be:	f824 0b02 	strh.w	r0, [r4], #2
 80252c2:	f109 3bff 	add.w	fp, r9, #4294967295
 80252c6:	f1bb 0f01 	cmp.w	fp, #1
 80252ca:	46a2      	mov	sl, r4
 80252cc:	f104 0404 	add.w	r4, r4, #4
 80252d0:	dd24      	ble.n	802531c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80252d2:	f898 3000 	ldrb.w	r3, [r8]
 80252d6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80252da:	9804      	ldr	r0, [sp, #16]
 80252dc:	091b      	lsrs	r3, r3, #4
 80252de:	f1ab 0b02 	sub.w	fp, fp, #2
 80252e2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80252e6:	9b03      	ldr	r3, [sp, #12]
 80252e8:	9300      	str	r3, [sp, #0]
 80252ea:	463b      	mov	r3, r7
 80252ec:	f7ff ff3a 	bl	8025164 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80252f0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80252f4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80252f8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80252fc:	9804      	ldr	r0, [sp, #16]
 80252fe:	f003 030f 	and.w	r3, r3, #15
 8025302:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025306:	9b03      	ldr	r3, [sp, #12]
 8025308:	9300      	str	r3, [sp, #0]
 802530a:	463b      	mov	r3, r7
 802530c:	f7ff ff2a 	bl	8025164 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025310:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025314:	e7d7      	b.n	80252c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025316:	46a8      	mov	r8, r5
 8025318:	46cb      	mov	fp, r9
 802531a:	e7d4      	b.n	80252c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802531c:	d10e      	bne.n	802533c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802531e:	f898 3000 	ldrb.w	r3, [r8]
 8025322:	f8ba 2000 	ldrh.w	r2, [sl]
 8025326:	9804      	ldr	r0, [sp, #16]
 8025328:	091b      	lsrs	r3, r3, #4
 802532a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802532e:	9b03      	ldr	r3, [sp, #12]
 8025330:	9300      	str	r3, [sp, #0]
 8025332:	463b      	mov	r3, r7
 8025334:	f7ff ff16 	bl	8025164 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025338:	f82a 0b02 	strh.w	r0, [sl], #2
 802533c:	9b08      	ldr	r3, [sp, #32]
 802533e:	9a05      	ldr	r2, [sp, #20]
 8025340:	881c      	ldrh	r4, [r3, #0]
 8025342:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025346:	eba4 0409 	sub.w	r4, r4, r9
 802534a:	4413      	add	r3, r2
 802534c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025350:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025352:	fb93 f3f2 	sdiv	r3, r3, r2
 8025356:	441d      	add	r5, r3
 8025358:	e79c      	b.n	8025294 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802535a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802535e:	45a3      	cmp	fp, r4
 8025360:	d938      	bls.n	80253d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025362:	9b06      	ldr	r3, [sp, #24]
 8025364:	b1f3      	cbz	r3, 80253a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025366:	782b      	ldrb	r3, [r5, #0]
 8025368:	f003 030f 	and.w	r3, r3, #15
 802536c:	1c6a      	adds	r2, r5, #1
 802536e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025372:	8023      	strh	r3, [r4, #0]
 8025374:	f109 30ff 	add.w	r0, r9, #4294967295
 8025378:	3402      	adds	r4, #2
 802537a:	2801      	cmp	r0, #1
 802537c:	4623      	mov	r3, r4
 802537e:	f104 0404 	add.w	r4, r4, #4
 8025382:	dd12      	ble.n	80253aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025384:	7813      	ldrb	r3, [r2, #0]
 8025386:	091b      	lsrs	r3, r3, #4
 8025388:	3802      	subs	r0, #2
 802538a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802538e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025392:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025396:	f003 030f 	and.w	r3, r3, #15
 802539a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802539e:	f824 3c02 	strh.w	r3, [r4, #-2]
 80253a2:	e7ea      	b.n	802537a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80253a4:	462a      	mov	r2, r5
 80253a6:	4648      	mov	r0, r9
 80253a8:	e7e7      	b.n	802537a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80253aa:	d106      	bne.n	80253ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80253ac:	7812      	ldrb	r2, [r2, #0]
 80253ae:	0912      	lsrs	r2, r2, #4
 80253b0:	3302      	adds	r3, #2
 80253b2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80253b6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80253ba:	880c      	ldrh	r4, [r1, #0]
 80253bc:	9a05      	ldr	r2, [sp, #20]
 80253be:	eba4 0409 	sub.w	r4, r4, r9
 80253c2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80253c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80253ca:	4413      	add	r3, r2
 80253cc:	fb93 f3f8 	sdiv	r3, r3, r8
 80253d0:	441d      	add	r5, r3
 80253d2:	e7c4      	b.n	802535e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80253d4:	4b03      	ldr	r3, [pc, #12]	; (80253e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80253d6:	6818      	ldr	r0, [r3, #0]
 80253d8:	6803      	ldr	r3, [r0, #0]
 80253da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80253dc:	4798      	blx	r3
 80253de:	b00f      	add	sp, #60	; 0x3c
 80253e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80253e4:	200137cc 	.word	0x200137cc
 80253e8:	200137c6 	.word	0x200137c6

080253ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80253ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80253ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80253f2:	2dff      	cmp	r5, #255	; 0xff
 80253f4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80253f8:	d10c      	bne.n	8025414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80253fa:	2bff      	cmp	r3, #255	; 0xff
 80253fc:	d10a      	bne.n	8025414 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80253fe:	4b25      	ldr	r3, [pc, #148]	; (8025494 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025400:	0948      	lsrs	r0, r1, #5
 8025402:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025406:	403b      	ands	r3, r7
 8025408:	4318      	orrs	r0, r3
 802540a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802540e:	4308      	orrs	r0, r1
 8025410:	b280      	uxth	r0, r0
 8025412:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025414:	fb15 f503 	smulbb	r5, r5, r3
 8025418:	b2ab      	uxth	r3, r5
 802541a:	1c5d      	adds	r5, r3, #1
 802541c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025420:	1214      	asrs	r4, r2, #8
 8025422:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025426:	fa1f fc85 	uxth.w	ip, r5
 802542a:	10d6      	asrs	r6, r2, #3
 802542c:	00d0      	lsls	r0, r2, #3
 802542e:	43ed      	mvns	r5, r5
 8025430:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025434:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025438:	b2eb      	uxtb	r3, r5
 802543a:	b2c0      	uxtb	r0, r0
 802543c:	fb12 f20c 	smulbb	r2, r2, ip
 8025440:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025444:	fb04 2403 	mla	r4, r4, r3, r2
 8025448:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802544c:	b2c8      	uxtb	r0, r1
 802544e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025452:	b2fd      	uxtb	r5, r7
 8025454:	fb10 f00c 	smulbb	r0, r0, ip
 8025458:	b2a4      	uxth	r4, r4
 802545a:	fb02 0003 	mla	r0, r2, r3, r0
 802545e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025462:	fb15 f50c 	smulbb	r5, r5, ip
 8025466:	fb06 5503 	mla	r5, r6, r3, r5
 802546a:	b283      	uxth	r3, r0
 802546c:	1c60      	adds	r0, r4, #1
 802546e:	b2ad      	uxth	r5, r5
 8025470:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025474:	1c58      	adds	r0, r3, #1
 8025476:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802547a:	1c6b      	adds	r3, r5, #1
 802547c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025480:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025484:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025488:	096d      	lsrs	r5, r5, #5
 802548a:	4320      	orrs	r0, r4
 802548c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025490:	4328      	orrs	r0, r5
 8025492:	e7be      	b.n	8025412 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025494:	00fff800 	.word	0x00fff800

08025498 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802549c:	461c      	mov	r4, r3
 802549e:	b08d      	sub	sp, #52	; 0x34
 80254a0:	460d      	mov	r5, r1
 80254a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80254a4:	6861      	ldr	r1, [r4, #4]
 80254a6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80254aa:	4680      	mov	r8, r0
 80254ac:	6820      	ldr	r0, [r4, #0]
 80254ae:	4616      	mov	r6, r2
 80254b0:	aa08      	add	r2, sp, #32
 80254b2:	c203      	stmia	r2!, {r0, r1}
 80254b4:	6818      	ldr	r0, [r3, #0]
 80254b6:	6859      	ldr	r1, [r3, #4]
 80254b8:	aa0a      	add	r2, sp, #40	; 0x28
 80254ba:	c203      	stmia	r2!, {r0, r1}
 80254bc:	a808      	add	r0, sp, #32
 80254be:	f7ef fb33 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80254c2:	4621      	mov	r1, r4
 80254c4:	a80a      	add	r0, sp, #40	; 0x28
 80254c6:	f7ef fb73 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80254ca:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80254ce:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80254d2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80254d6:	f002 0301 	and.w	r3, r2, #1
 80254da:	9303      	str	r3, [sp, #12]
 80254dc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80254e0:	f003 0101 	and.w	r1, r3, #1
 80254e4:	9102      	str	r1, [sp, #8]
 80254e6:	9802      	ldr	r0, [sp, #8]
 80254e8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80254ec:	4403      	add	r3, r0
 80254ee:	fb01 2303 	mla	r3, r1, r3, r2
 80254f2:	f04f 0a02 	mov.w	sl, #2
 80254f6:	fb93 f3fa 	sdiv	r3, r3, sl
 80254fa:	441d      	add	r5, r3
 80254fc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025500:	441a      	add	r2, r3
 8025502:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025506:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802550a:	4a3f      	ldr	r2, [pc, #252]	; (8025608 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802550c:	9205      	str	r2, [sp, #20]
 802550e:	4419      	add	r1, r3
 8025510:	6810      	ldr	r0, [r2, #0]
 8025512:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025516:	6803      	ldr	r3, [r0, #0]
 8025518:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802551a:	4798      	blx	r3
 802551c:	4b3b      	ldr	r3, [pc, #236]	; (802560c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802551e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025522:	8819      	ldrh	r1, [r3, #0]
 8025524:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025528:	fb01 c404 	mla	r4, r1, r4, ip
 802552c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025530:	434f      	muls	r7, r1
 8025532:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025536:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802553a:	3604      	adds	r6, #4
 802553c:	9204      	str	r2, [sp, #16]
 802553e:	9b04      	ldr	r3, [sp, #16]
 8025540:	429c      	cmp	r4, r3
 8025542:	d258      	bcs.n	80255f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025544:	9b03      	ldr	r3, [sp, #12]
 8025546:	2b00      	cmp	r3, #0
 8025548:	d034      	beq.n	80255b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802554a:	782b      	ldrb	r3, [r5, #0]
 802554c:	f003 030f 	and.w	r3, r3, #15
 8025550:	1c6f      	adds	r7, r5, #1
 8025552:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025556:	0e0b      	lsrs	r3, r1, #24
 8025558:	d006      	beq.n	8025568 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802555a:	8822      	ldrh	r2, [r4, #0]
 802555c:	9300      	str	r3, [sp, #0]
 802555e:	4640      	mov	r0, r8
 8025560:	464b      	mov	r3, r9
 8025562:	f7ff ff43 	bl	80253ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025566:	8020      	strh	r0, [r4, #0]
 8025568:	3402      	adds	r4, #2
 802556a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802556e:	f1ba 0f01 	cmp.w	sl, #1
 8025572:	dd22      	ble.n	80255ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025574:	783b      	ldrb	r3, [r7, #0]
 8025576:	091b      	lsrs	r3, r3, #4
 8025578:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802557c:	0e0b      	lsrs	r3, r1, #24
 802557e:	d006      	beq.n	802558e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025580:	8822      	ldrh	r2, [r4, #0]
 8025582:	9300      	str	r3, [sp, #0]
 8025584:	4640      	mov	r0, r8
 8025586:	464b      	mov	r3, r9
 8025588:	f7ff ff30 	bl	80253ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802558c:	8020      	strh	r0, [r4, #0]
 802558e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025592:	f003 030f 	and.w	r3, r3, #15
 8025596:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802559a:	0e0b      	lsrs	r3, r1, #24
 802559c:	d006      	beq.n	80255ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802559e:	8862      	ldrh	r2, [r4, #2]
 80255a0:	9300      	str	r3, [sp, #0]
 80255a2:	4640      	mov	r0, r8
 80255a4:	464b      	mov	r3, r9
 80255a6:	f7ff ff21 	bl	80253ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80255aa:	8060      	strh	r0, [r4, #2]
 80255ac:	3404      	adds	r4, #4
 80255ae:	f1aa 0a02 	sub.w	sl, sl, #2
 80255b2:	e7dc      	b.n	802556e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80255b4:	462f      	mov	r7, r5
 80255b6:	46da      	mov	sl, fp
 80255b8:	e7d9      	b.n	802556e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80255ba:	d10d      	bne.n	80255d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80255bc:	783b      	ldrb	r3, [r7, #0]
 80255be:	091b      	lsrs	r3, r3, #4
 80255c0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80255c4:	0e0b      	lsrs	r3, r1, #24
 80255c6:	d006      	beq.n	80255d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80255c8:	8822      	ldrh	r2, [r4, #0]
 80255ca:	9300      	str	r3, [sp, #0]
 80255cc:	4640      	mov	r0, r8
 80255ce:	464b      	mov	r3, r9
 80255d0:	f7ff ff0c 	bl	80253ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80255d4:	8020      	strh	r0, [r4, #0]
 80255d6:	3402      	adds	r4, #2
 80255d8:	9b06      	ldr	r3, [sp, #24]
 80255da:	9a02      	ldr	r2, [sp, #8]
 80255dc:	881b      	ldrh	r3, [r3, #0]
 80255de:	eba3 030b 	sub.w	r3, r3, fp
 80255e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80255e6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80255ea:	4413      	add	r3, r2
 80255ec:	9a07      	ldr	r2, [sp, #28]
 80255ee:	fb93 f3f2 	sdiv	r3, r3, r2
 80255f2:	441d      	add	r5, r3
 80255f4:	e7a3      	b.n	802553e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80255f6:	9b05      	ldr	r3, [sp, #20]
 80255f8:	6818      	ldr	r0, [r3, #0]
 80255fa:	6803      	ldr	r3, [r0, #0]
 80255fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80255fe:	4798      	blx	r3
 8025600:	b00d      	add	sp, #52	; 0x34
 8025602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025606:	bf00      	nop
 8025608:	200137cc 	.word	0x200137cc
 802560c:	200137c6 	.word	0x200137c6

08025610 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025610:	b570      	push	{r4, r5, r6, lr}
 8025612:	1214      	asrs	r4, r2, #8
 8025614:	788d      	ldrb	r5, [r1, #2]
 8025616:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802561a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802561e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025622:	fb15 f503 	smulbb	r5, r5, r3
 8025626:	fb04 5506 	mla	r5, r4, r6, r5
 802562a:	10d0      	asrs	r0, r2, #3
 802562c:	784c      	ldrb	r4, [r1, #1]
 802562e:	7809      	ldrb	r1, [r1, #0]
 8025630:	00d2      	lsls	r2, r2, #3
 8025632:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025636:	b2d2      	uxtb	r2, r2
 8025638:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802563c:	fb14 f403 	smulbb	r4, r4, r3
 8025640:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025644:	fb11 f303 	smulbb	r3, r1, r3
 8025648:	fb00 4406 	mla	r4, r0, r6, r4
 802564c:	fb02 3306 	mla	r3, r2, r6, r3
 8025650:	b2ad      	uxth	r5, r5
 8025652:	b29b      	uxth	r3, r3
 8025654:	b2a4      	uxth	r4, r4
 8025656:	1c68      	adds	r0, r5, #1
 8025658:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802565c:	1c62      	adds	r2, r4, #1
 802565e:	1c58      	adds	r0, r3, #1
 8025660:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025664:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025668:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802566c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025670:	0964      	lsrs	r4, r4, #5
 8025672:	4328      	orrs	r0, r5
 8025674:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025678:	4320      	orrs	r0, r4
 802567a:	bd70      	pop	{r4, r5, r6, pc}

0802567c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802567c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025680:	b08f      	sub	sp, #60	; 0x3c
 8025682:	461c      	mov	r4, r3
 8025684:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025688:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802568a:	4682      	mov	sl, r0
 802568c:	460e      	mov	r6, r1
 802568e:	4615      	mov	r5, r2
 8025690:	2f00      	cmp	r7, #0
 8025692:	f000 8142 	beq.w	802591a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025696:	6820      	ldr	r0, [r4, #0]
 8025698:	6861      	ldr	r1, [r4, #4]
 802569a:	aa0a      	add	r2, sp, #40	; 0x28
 802569c:	c203      	stmia	r2!, {r0, r1}
 802569e:	6818      	ldr	r0, [r3, #0]
 80256a0:	6859      	ldr	r1, [r3, #4]
 80256a2:	aa0c      	add	r2, sp, #48	; 0x30
 80256a4:	c203      	stmia	r2!, {r0, r1}
 80256a6:	a80a      	add	r0, sp, #40	; 0x28
 80256a8:	f7ef fa3e 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80256ac:	4621      	mov	r1, r4
 80256ae:	a80c      	add	r0, sp, #48	; 0x30
 80256b0:	f7ef fa7e 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80256b4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80256b8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80256bc:	f002 0301 	and.w	r3, r2, #1
 80256c0:	9306      	str	r3, [sp, #24]
 80256c2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80256c6:	f003 0101 	and.w	r1, r3, #1
 80256ca:	9105      	str	r1, [sp, #20]
 80256cc:	9805      	ldr	r0, [sp, #20]
 80256ce:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80256d2:	4403      	add	r3, r0
 80256d4:	fb01 2303 	mla	r3, r1, r3, r2
 80256d8:	f04f 0802 	mov.w	r8, #2
 80256dc:	fb93 f3f8 	sdiv	r3, r3, r8
 80256e0:	441e      	add	r6, r3
 80256e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80256e6:	441a      	add	r2, r3
 80256e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80256ec:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80256f0:	4419      	add	r1, r3
 80256f2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80256f6:	9303      	str	r3, [sp, #12]
 80256f8:	4b89      	ldr	r3, [pc, #548]	; (8025920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80256fa:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80256fe:	6818      	ldr	r0, [r3, #0]
 8025700:	6803      	ldr	r3, [r0, #0]
 8025702:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025704:	4798      	blx	r3
 8025706:	4a87      	ldr	r2, [pc, #540]	; (8025924 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025708:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802570c:	8813      	ldrh	r3, [r2, #0]
 802570e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025712:	2fff      	cmp	r7, #255	; 0xff
 8025714:	fb03 9404 	mla	r4, r3, r4, r9
 8025718:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802571c:	f105 0504 	add.w	r5, r5, #4
 8025720:	4694      	mov	ip, r2
 8025722:	fb03 f30b 	mul.w	r3, r3, fp
 8025726:	d071      	beq.n	802580c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025728:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802572c:	43f9      	mvns	r1, r7
 802572e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025732:	b2c9      	uxtb	r1, r1
 8025734:	9104      	str	r1, [sp, #16]
 8025736:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802573a:	9b07      	ldr	r3, [sp, #28]
 802573c:	42a3      	cmp	r3, r4
 802573e:	f240 80e7 	bls.w	8025910 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025742:	9b06      	ldr	r3, [sp, #24]
 8025744:	2b00      	cmp	r3, #0
 8025746:	d03d      	beq.n	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025748:	7831      	ldrb	r1, [r6, #0]
 802574a:	9b04      	ldr	r3, [sp, #16]
 802574c:	8822      	ldrh	r2, [r4, #0]
 802574e:	9300      	str	r3, [sp, #0]
 8025750:	f001 010f 	and.w	r1, r1, #15
 8025754:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025758:	463b      	mov	r3, r7
 802575a:	4429      	add	r1, r5
 802575c:	4650      	mov	r0, sl
 802575e:	f7ff ff57 	bl	8025610 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025762:	9b03      	ldr	r3, [sp, #12]
 8025764:	f824 0b02 	strh.w	r0, [r4], #2
 8025768:	f106 0801 	add.w	r8, r6, #1
 802576c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025770:	f1bb 0f01 	cmp.w	fp, #1
 8025774:	46a1      	mov	r9, r4
 8025776:	f104 0404 	add.w	r4, r4, #4
 802577a:	dd27      	ble.n	80257cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802577c:	f898 1000 	ldrb.w	r1, [r8]
 8025780:	9b04      	ldr	r3, [sp, #16]
 8025782:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025786:	9300      	str	r3, [sp, #0]
 8025788:	0909      	lsrs	r1, r1, #4
 802578a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802578e:	463b      	mov	r3, r7
 8025790:	4429      	add	r1, r5
 8025792:	4650      	mov	r0, sl
 8025794:	f7ff ff3c 	bl	8025610 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025798:	f824 0c04 	strh.w	r0, [r4, #-4]
 802579c:	f818 1b01 	ldrb.w	r1, [r8], #1
 80257a0:	9b04      	ldr	r3, [sp, #16]
 80257a2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80257a6:	9300      	str	r3, [sp, #0]
 80257a8:	f001 010f 	and.w	r1, r1, #15
 80257ac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80257b0:	463b      	mov	r3, r7
 80257b2:	4429      	add	r1, r5
 80257b4:	4650      	mov	r0, sl
 80257b6:	f7ff ff2b 	bl	8025610 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80257ba:	f1ab 0b02 	sub.w	fp, fp, #2
 80257be:	f824 0c02 	strh.w	r0, [r4, #-2]
 80257c2:	e7d5      	b.n	8025770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80257c4:	46b0      	mov	r8, r6
 80257c6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80257ca:	e7d1      	b.n	8025770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80257cc:	d10f      	bne.n	80257ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80257ce:	f898 1000 	ldrb.w	r1, [r8]
 80257d2:	9b04      	ldr	r3, [sp, #16]
 80257d4:	f8b9 2000 	ldrh.w	r2, [r9]
 80257d8:	9300      	str	r3, [sp, #0]
 80257da:	0909      	lsrs	r1, r1, #4
 80257dc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80257e0:	463b      	mov	r3, r7
 80257e2:	4429      	add	r1, r5
 80257e4:	4650      	mov	r0, sl
 80257e6:	f7ff ff13 	bl	8025610 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80257ea:	f829 0b02 	strh.w	r0, [r9], #2
 80257ee:	9b08      	ldr	r3, [sp, #32]
 80257f0:	9a05      	ldr	r2, [sp, #20]
 80257f2:	881c      	ldrh	r4, [r3, #0]
 80257f4:	9b03      	ldr	r3, [sp, #12]
 80257f6:	1ae4      	subs	r4, r4, r3
 80257f8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257fc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025800:	4413      	add	r3, r2
 8025802:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025804:	fb93 f3f2 	sdiv	r3, r3, r2
 8025808:	441e      	add	r6, r3
 802580a:	e796      	b.n	802573a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802580c:	4f46      	ldr	r7, [pc, #280]	; (8025928 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802580e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025812:	42a3      	cmp	r3, r4
 8025814:	d97c      	bls.n	8025910 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025816:	9a06      	ldr	r2, [sp, #24]
 8025818:	2a00      	cmp	r2, #0
 802581a:	d054      	beq.n	80258c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802581c:	7830      	ldrb	r0, [r6, #0]
 802581e:	f000 000f 	and.w	r0, r0, #15
 8025822:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025826:	eb05 0e00 	add.w	lr, r5, r0
 802582a:	5c28      	ldrb	r0, [r5, r0]
 802582c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025830:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025834:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025838:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802583c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025840:	ea42 020e 	orr.w	r2, r2, lr
 8025844:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025848:	f824 2b02 	strh.w	r2, [r4], #2
 802584c:	9a03      	ldr	r2, [sp, #12]
 802584e:	1c71      	adds	r1, r6, #1
 8025850:	f102 3eff 	add.w	lr, r2, #4294967295
 8025854:	f1be 0f01 	cmp.w	lr, #1
 8025858:	4620      	mov	r0, r4
 802585a:	f104 0404 	add.w	r4, r4, #4
 802585e:	dd36      	ble.n	80258ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025860:	7808      	ldrb	r0, [r1, #0]
 8025862:	0900      	lsrs	r0, r0, #4
 8025864:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025868:	eb05 0a00 	add.w	sl, r5, r0
 802586c:	f1ae 0e02 	sub.w	lr, lr, #2
 8025870:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025874:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025878:	00d2      	lsls	r2, r2, #3
 802587a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802587e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025882:	ea49 0202 	orr.w	r2, r9, r2
 8025886:	f815 9000 	ldrb.w	r9, [r5, r0]
 802588a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802588e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025892:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025896:	f000 000f 	and.w	r0, r0, #15
 802589a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802589e:	eb05 0a00 	add.w	sl, r5, r0
 80258a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80258a6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80258aa:	00d2      	lsls	r2, r2, #3
 80258ac:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80258b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80258b4:	ea49 0202 	orr.w	r2, r9, r2
 80258b8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80258bc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80258c0:	f824 2c02 	strh.w	r2, [r4, #-2]
 80258c4:	e7c6      	b.n	8025854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80258c6:	4631      	mov	r1, r6
 80258c8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80258cc:	e7c2      	b.n	8025854 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80258ce:	d111      	bne.n	80258f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80258d0:	7809      	ldrb	r1, [r1, #0]
 80258d2:	0909      	lsrs	r1, r1, #4
 80258d4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258d8:	186c      	adds	r4, r5, r1
 80258da:	5c69      	ldrb	r1, [r5, r1]
 80258dc:	78a2      	ldrb	r2, [r4, #2]
 80258de:	7864      	ldrb	r4, [r4, #1]
 80258e0:	00e4      	lsls	r4, r4, #3
 80258e2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80258e6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80258ea:	4322      	orrs	r2, r4
 80258ec:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80258f0:	f820 2b02 	strh.w	r2, [r0], #2
 80258f4:	9a03      	ldr	r2, [sp, #12]
 80258f6:	f8bc 4000 	ldrh.w	r4, [ip]
 80258fa:	9905      	ldr	r1, [sp, #20]
 80258fc:	1aa4      	subs	r4, r4, r2
 80258fe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025902:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025906:	440a      	add	r2, r1
 8025908:	fb92 f2f8 	sdiv	r2, r2, r8
 802590c:	4416      	add	r6, r2
 802590e:	e780      	b.n	8025812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025910:	4b03      	ldr	r3, [pc, #12]	; (8025920 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025912:	6818      	ldr	r0, [r3, #0]
 8025914:	6803      	ldr	r3, [r0, #0]
 8025916:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025918:	4798      	blx	r3
 802591a:	b00f      	add	sp, #60	; 0x3c
 802591c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025920:	200137cc 	.word	0x200137cc
 8025924:	200137c6 	.word	0x200137c6
 8025928:	fffff800 	.word	0xfffff800

0802592c <CRC_Lock>:
 802592c:	b530      	push	{r4, r5, lr}
 802592e:	4a20      	ldr	r2, [pc, #128]	; (80259b0 <CRC_Lock+0x84>)
 8025930:	6813      	ldr	r3, [r2, #0]
 8025932:	f023 0301 	bic.w	r3, r3, #1
 8025936:	6013      	str	r3, [r2, #0]
 8025938:	4b1e      	ldr	r3, [pc, #120]	; (80259b4 <CRC_Lock+0x88>)
 802593a:	681a      	ldr	r2, [r3, #0]
 802593c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025940:	4022      	ands	r2, r4
 8025942:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025946:	42aa      	cmp	r2, r5
 8025948:	d005      	beq.n	8025956 <CRC_Lock+0x2a>
 802594a:	681b      	ldr	r3, [r3, #0]
 802594c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025950:	4023      	ands	r3, r4
 8025952:	4293      	cmp	r3, r2
 8025954:	d124      	bne.n	80259a0 <CRC_Lock+0x74>
 8025956:	4b18      	ldr	r3, [pc, #96]	; (80259b8 <CRC_Lock+0x8c>)
 8025958:	681b      	ldr	r3, [r3, #0]
 802595a:	bb0b      	cbnz	r3, 80259a0 <CRC_Lock+0x74>
 802595c:	4b17      	ldr	r3, [pc, #92]	; (80259bc <CRC_Lock+0x90>)
 802595e:	681a      	ldr	r2, [r3, #0]
 8025960:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025964:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025968:	d00d      	beq.n	8025986 <CRC_Lock+0x5a>
 802596a:	681a      	ldr	r2, [r3, #0]
 802596c:	f240 4483 	movw	r4, #1155	; 0x483
 8025970:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025974:	42a2      	cmp	r2, r4
 8025976:	d006      	beq.n	8025986 <CRC_Lock+0x5a>
 8025978:	681b      	ldr	r3, [r3, #0]
 802597a:	f240 4285 	movw	r2, #1157	; 0x485
 802597e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025982:	4293      	cmp	r3, r2
 8025984:	d10c      	bne.n	80259a0 <CRC_Lock+0x74>
 8025986:	4b0e      	ldr	r3, [pc, #56]	; (80259c0 <CRC_Lock+0x94>)
 8025988:	2201      	movs	r2, #1
 802598a:	601a      	str	r2, [r3, #0]
 802598c:	681a      	ldr	r2, [r3, #0]
 802598e:	2a00      	cmp	r2, #0
 8025990:	d1fc      	bne.n	802598c <CRC_Lock+0x60>
 8025992:	4b0c      	ldr	r3, [pc, #48]	; (80259c4 <CRC_Lock+0x98>)
 8025994:	6018      	str	r0, [r3, #0]
 8025996:	6818      	ldr	r0, [r3, #0]
 8025998:	1a43      	subs	r3, r0, r1
 802599a:	4258      	negs	r0, r3
 802599c:	4158      	adcs	r0, r3
 802599e:	bd30      	pop	{r4, r5, pc}
 80259a0:	4b09      	ldr	r3, [pc, #36]	; (80259c8 <CRC_Lock+0x9c>)
 80259a2:	2201      	movs	r2, #1
 80259a4:	601a      	str	r2, [r3, #0]
 80259a6:	681a      	ldr	r2, [r3, #0]
 80259a8:	2a00      	cmp	r2, #0
 80259aa:	d1fc      	bne.n	80259a6 <CRC_Lock+0x7a>
 80259ac:	4b07      	ldr	r3, [pc, #28]	; (80259cc <CRC_Lock+0xa0>)
 80259ae:	e7f1      	b.n	8025994 <CRC_Lock+0x68>
 80259b0:	e0002000 	.word	0xe0002000
 80259b4:	e000ed00 	.word	0xe000ed00
 80259b8:	e0042000 	.word	0xe0042000
 80259bc:	5c001000 	.word	0x5c001000
 80259c0:	58024c08 	.word	0x58024c08
 80259c4:	58024c00 	.word	0x58024c00
 80259c8:	40023008 	.word	0x40023008
 80259cc:	40023000 	.word	0x40023000

080259d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80259d0:	6101      	str	r1, [r0, #16]
 80259d2:	4770      	bx	lr

080259d4 <_ZN8touchgfx8Gestures4tickEv>:
 80259d4:	7b83      	ldrb	r3, [r0, #14]
 80259d6:	b14b      	cbz	r3, 80259ec <_ZN8touchgfx8Gestures4tickEv+0x18>
 80259d8:	8903      	ldrh	r3, [r0, #8]
 80259da:	3301      	adds	r3, #1
 80259dc:	b29b      	uxth	r3, r3
 80259de:	2b07      	cmp	r3, #7
 80259e0:	8103      	strh	r3, [r0, #8]
 80259e2:	bf81      	itttt	hi
 80259e4:	2300      	movhi	r3, #0
 80259e6:	8143      	strhhi	r3, [r0, #10]
 80259e8:	8183      	strhhi	r3, [r0, #12]
 80259ea:	7383      	strbhi	r3, [r0, #14]
 80259ec:	4770      	bx	lr
	...

080259f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80259f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80259f4:	4698      	mov	r8, r3
 80259f6:	8883      	ldrh	r3, [r0, #4]
 80259f8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80259fc:	eba8 0303 	sub.w	r3, r8, r3
 8025a00:	b21b      	sxth	r3, r3
 8025a02:	4604      	mov	r4, r0
 8025a04:	2b00      	cmp	r3, #0
 8025a06:	4617      	mov	r7, r2
 8025a08:	4a18      	ldr	r2, [pc, #96]	; (8025a6c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025a0a:	9200      	str	r2, [sp, #0]
 8025a0c:	bfb8      	it	lt
 8025a0e:	425b      	neglt	r3, r3
 8025a10:	8aa2      	ldrh	r2, [r4, #20]
 8025a12:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025a16:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025a1a:	b21b      	sxth	r3, r3
 8025a1c:	460e      	mov	r6, r1
 8025a1e:	4293      	cmp	r3, r2
 8025a20:	88c1      	ldrh	r1, [r0, #6]
 8025a22:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025a26:	f04f 0000 	mov.w	r0, #0
 8025a2a:	f88d 0004 	strb.w	r0, [sp, #4]
 8025a2e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025a32:	dc07      	bgt.n	8025a44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025a34:	1a69      	subs	r1, r5, r1
 8025a36:	b209      	sxth	r1, r1
 8025a38:	2900      	cmp	r1, #0
 8025a3a:	bfb8      	it	lt
 8025a3c:	4249      	neglt	r1, r1
 8025a3e:	b209      	sxth	r1, r1
 8025a40:	428a      	cmp	r2, r1
 8025a42:	da10      	bge.n	8025a66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025a44:	6920      	ldr	r0, [r4, #16]
 8025a46:	6803      	ldr	r3, [r0, #0]
 8025a48:	4669      	mov	r1, sp
 8025a4a:	685b      	ldr	r3, [r3, #4]
 8025a4c:	4798      	blx	r3
 8025a4e:	eba8 0606 	sub.w	r6, r8, r6
 8025a52:	2300      	movs	r3, #0
 8025a54:	1bef      	subs	r7, r5, r7
 8025a56:	2001      	movs	r0, #1
 8025a58:	8123      	strh	r3, [r4, #8]
 8025a5a:	8166      	strh	r6, [r4, #10]
 8025a5c:	81a7      	strh	r7, [r4, #12]
 8025a5e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025a62:	80e5      	strh	r5, [r4, #6]
 8025a64:	73a0      	strb	r0, [r4, #14]
 8025a66:	b004      	add	sp, #16
 8025a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025a6c:	0802ce6c 	.word	0x0802ce6c

08025a70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025a70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025a72:	461e      	mov	r6, r3
 8025a74:	1e4b      	subs	r3, r1, #1
 8025a76:	2b01      	cmp	r3, #1
 8025a78:	b085      	sub	sp, #20
 8025a7a:	4604      	mov	r4, r0
 8025a7c:	460d      	mov	r5, r1
 8025a7e:	4617      	mov	r7, r2
 8025a80:	d84b      	bhi.n	8025b1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025a82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025a86:	1cd3      	adds	r3, r2, #3
 8025a88:	b29b      	uxth	r3, r3
 8025a8a:	2b06      	cmp	r3, #6
 8025a8c:	d916      	bls.n	8025abc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025a8e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025b30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025a92:	f8cd c004 	str.w	ip, [sp, #4]
 8025a96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025a9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025a9e:	6900      	ldr	r0, [r0, #16]
 8025aa0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025aa4:	f04f 0c00 	mov.w	ip, #0
 8025aa8:	f88d c008 	strb.w	ip, [sp, #8]
 8025aac:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025ab0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ab4:	6803      	ldr	r3, [r0, #0]
 8025ab6:	a901      	add	r1, sp, #4
 8025ab8:	689b      	ldr	r3, [r3, #8]
 8025aba:	4798      	blx	r3
 8025abc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025ac0:	1cd3      	adds	r3, r2, #3
 8025ac2:	b29b      	uxth	r3, r3
 8025ac4:	2b06      	cmp	r3, #6
 8025ac6:	d916      	bls.n	8025af6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025ac8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025b30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025acc:	f8cd c004 	str.w	ip, [sp, #4]
 8025ad0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025ad4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025ad8:	6920      	ldr	r0, [r4, #16]
 8025ada:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025ade:	f04f 0c01 	mov.w	ip, #1
 8025ae2:	f88d c008 	strb.w	ip, [sp, #8]
 8025ae6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025aea:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025aee:	6803      	ldr	r3, [r0, #0]
 8025af0:	a901      	add	r1, sp, #4
 8025af2:	689b      	ldr	r3, [r3, #8]
 8025af4:	4798      	blx	r3
 8025af6:	4b0d      	ldr	r3, [pc, #52]	; (8025b2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025af8:	9301      	str	r3, [sp, #4]
 8025afa:	6920      	ldr	r0, [r4, #16]
 8025afc:	f88d 5008 	strb.w	r5, [sp, #8]
 8025b00:	2300      	movs	r3, #0
 8025b02:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025b06:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025b0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025b0e:	6803      	ldr	r3, [r0, #0]
 8025b10:	a901      	add	r1, sp, #4
 8025b12:	681b      	ldr	r3, [r3, #0]
 8025b14:	4798      	blx	r3
 8025b16:	b005      	add	sp, #20
 8025b18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025b1a:	2900      	cmp	r1, #0
 8025b1c:	d1eb      	bne.n	8025af6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025b1e:	80a2      	strh	r2, [r4, #4]
 8025b20:	80c6      	strh	r6, [r0, #6]
 8025b22:	60a1      	str	r1, [r4, #8]
 8025b24:	81a1      	strh	r1, [r4, #12]
 8025b26:	73a1      	strb	r1, [r4, #14]
 8025b28:	e7e5      	b.n	8025af6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025b2a:	bf00      	nop
 8025b2c:	0802ce58 	.word	0x0802ce58
 8025b30:	0802ce80 	.word	0x0802ce80

08025b34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025b34:	10c9      	asrs	r1, r1, #3
 8025b36:	2900      	cmp	r1, #0
 8025b38:	bfb8      	it	lt
 8025b3a:	4249      	neglt	r1, r1
 8025b3c:	2801      	cmp	r0, #1
 8025b3e:	d108      	bne.n	8025b52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025b40:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025b44:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025b48:	4601      	mov	r1, r0
 8025b4a:	dd02      	ble.n	8025b52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025b4c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025b50:	4770      	bx	lr
 8025b52:	29ff      	cmp	r1, #255	; 0xff
 8025b54:	bfa8      	it	ge
 8025b56:	21ff      	movge	r1, #255	; 0xff
 8025b58:	4608      	mov	r0, r1
 8025b5a:	4770      	bx	lr

08025b5c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025b5c:	b410      	push	{r4}
 8025b5e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025b62:	429c      	cmp	r4, r3
 8025b64:	d803      	bhi.n	8025b6e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025b66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025b6a:	f7ed bae3 	b.w	8013134 <_ZN8touchgfx7Outline6lineToEii>
 8025b6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025b72:	4770      	bx	lr

08025b74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b78:	b08b      	sub	sp, #44	; 0x2c
 8025b7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025b7e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025b82:	9308      	str	r3, [sp, #32]
 8025b84:	4606      	mov	r6, r0
 8025b86:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025b8a:	9309      	str	r3, [sp, #36]	; 0x24
 8025b8c:	468a      	mov	sl, r1
 8025b8e:	f7ed fc3e 	bl	801340e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025b92:	68b5      	ldr	r5, [r6, #8]
 8025b94:	4604      	mov	r4, r0
 8025b96:	2d00      	cmp	r5, #0
 8025b98:	d044      	beq.n	8025c24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025b9a:	6873      	ldr	r3, [r6, #4]
 8025b9c:	42ab      	cmp	r3, r5
 8025b9e:	d33d      	bcc.n	8025c1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025ba0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025ba4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025ba8:	eb02 0b03 	add.w	fp, r2, r3
 8025bac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025bb0:	fb02 1203 	mla	r2, r2, r3, r1
 8025bb4:	9205      	str	r2, [sp, #20]
 8025bb6:	1e6a      	subs	r2, r5, #1
 8025bb8:	9204      	str	r2, [sp, #16]
 8025bba:	f04f 0800 	mov.w	r8, #0
 8025bbe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025bc2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025bc6:	454b      	cmp	r3, r9
 8025bc8:	463a      	mov	r2, r7
 8025bca:	d008      	beq.n	8025bde <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025bcc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025bd0:	eb03 0b09 	add.w	fp, r3, r9
 8025bd4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025bd8:	fb03 1309 	mla	r3, r3, r9, r1
 8025bdc:	9305      	str	r3, [sp, #20]
 8025bde:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025be2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025be6:	4498      	add	r8, r3
 8025be8:	9b04      	ldr	r3, [sp, #16]
 8025bea:	3b01      	subs	r3, #1
 8025bec:	9304      	str	r3, [sp, #16]
 8025bee:	9b04      	ldr	r3, [sp, #16]
 8025bf0:	3301      	adds	r3, #1
 8025bf2:	d015      	beq.n	8025c20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025bf4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025bf8:	42bb      	cmp	r3, r7
 8025bfa:	d117      	bne.n	8025c2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025bfc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025c00:	9b04      	ldr	r3, [sp, #16]
 8025c02:	4548      	cmp	r0, r9
 8025c04:	f103 33ff 	add.w	r3, r3, #4294967295
 8025c08:	d17f      	bne.n	8025d0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025c0a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025c0e:	4401      	add	r1, r0
 8025c10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025c14:	4480      	add	r8, r0
 8025c16:	e7e9      	b.n	8025bec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025c18:	461f      	mov	r7, r3
 8025c1a:	e044      	b.n	8025ca6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8025c1c:	2000      	movs	r0, #0
 8025c1e:	e002      	b.n	8025c26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025c20:	2900      	cmp	r1, #0
 8025c22:	d16f      	bne.n	8025d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025c24:	2001      	movs	r0, #1
 8025c26:	b00b      	add	sp, #44	; 0x2c
 8025c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c2c:	2900      	cmp	r1, #0
 8025c2e:	d030      	beq.n	8025c92 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025c30:	2f00      	cmp	r7, #0
 8025c32:	db29      	blt.n	8025c88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025c34:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025c38:	42bb      	cmp	r3, r7
 8025c3a:	dd25      	ble.n	8025c88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025c3c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025c40:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025c44:	f7ff ff76 	bl	8025b34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c4a:	fb10 f003 	smulbb	r0, r0, r3
 8025c4e:	b280      	uxth	r0, r0
 8025c50:	1c41      	adds	r1, r0, #1
 8025c52:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025c56:	1209      	asrs	r1, r1, #8
 8025c58:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025c5c:	d014      	beq.n	8025c88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025c5e:	9808      	ldr	r0, [sp, #32]
 8025c60:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025c62:	b2c9      	uxtb	r1, r1
 8025c64:	b2ba      	uxth	r2, r7
 8025c66:	9102      	str	r1, [sp, #8]
 8025c68:	2101      	movs	r1, #1
 8025c6a:	4413      	add	r3, r2
 8025c6c:	9101      	str	r1, [sp, #4]
 8025c6e:	4402      	add	r2, r0
 8025c70:	fa0f f18b 	sxth.w	r1, fp
 8025c74:	f8da 0000 	ldr.w	r0, [sl]
 8025c78:	9100      	str	r1, [sp, #0]
 8025c7a:	6941      	ldr	r1, [r0, #20]
 8025c7c:	b21b      	sxth	r3, r3
 8025c7e:	460d      	mov	r5, r1
 8025c80:	b212      	sxth	r2, r2
 8025c82:	9905      	ldr	r1, [sp, #20]
 8025c84:	4650      	mov	r0, sl
 8025c86:	47a8      	blx	r5
 8025c88:	9b04      	ldr	r3, [sp, #16]
 8025c8a:	3301      	adds	r3, #1
 8025c8c:	f107 0201 	add.w	r2, r7, #1
 8025c90:	d0c8      	beq.n	8025c24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025c92:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025c96:	1abb      	subs	r3, r7, r2
 8025c98:	2b00      	cmp	r3, #0
 8025c9a:	dd31      	ble.n	8025d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025c9c:	2a00      	cmp	r2, #0
 8025c9e:	dabb      	bge.n	8025c18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025ca0:	2f00      	cmp	r7, #0
 8025ca2:	dd2d      	ble.n	8025d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025ca4:	2200      	movs	r2, #0
 8025ca6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025caa:	19d1      	adds	r1, r2, r7
 8025cac:	4299      	cmp	r1, r3
 8025cae:	db02      	blt.n	8025cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025cb0:	1a9f      	subs	r7, r3, r2
 8025cb2:	2f00      	cmp	r7, #0
 8025cb4:	dd24      	ble.n	8025d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025cb6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025cba:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025cbe:	f7ff ff39 	bl	8025b34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025cc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025cc4:	fb10 f003 	smulbb	r0, r0, r3
 8025cc8:	b280      	uxth	r0, r0
 8025cca:	1c41      	adds	r1, r0, #1
 8025ccc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025cd0:	1209      	asrs	r1, r1, #8
 8025cd2:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025cd6:	d013      	beq.n	8025d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025cd8:	9808      	ldr	r0, [sp, #32]
 8025cda:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025cdc:	b292      	uxth	r2, r2
 8025cde:	b2c9      	uxtb	r1, r1
 8025ce0:	4413      	add	r3, r2
 8025ce2:	9102      	str	r1, [sp, #8]
 8025ce4:	4402      	add	r2, r0
 8025ce6:	b23f      	sxth	r7, r7
 8025ce8:	f8da 0000 	ldr.w	r0, [sl]
 8025cec:	9701      	str	r7, [sp, #4]
 8025cee:	fa0f f18b 	sxth.w	r1, fp
 8025cf2:	9100      	str	r1, [sp, #0]
 8025cf4:	6947      	ldr	r7, [r0, #20]
 8025cf6:	9905      	ldr	r1, [sp, #20]
 8025cf8:	b21b      	sxth	r3, r3
 8025cfa:	b212      	sxth	r2, r2
 8025cfc:	4650      	mov	r0, sl
 8025cfe:	47b8      	blx	r7
 8025d00:	464b      	mov	r3, r9
 8025d02:	e75c      	b.n	8025bbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025d04:	2f00      	cmp	r7, #0
 8025d06:	da95      	bge.n	8025c34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025d08:	e78c      	b.n	8025c24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025d0a:	2900      	cmp	r1, #0
 8025d0c:	d0f8      	beq.n	8025d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025d0e:	e78f      	b.n	8025c30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025d10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025d10:	4b4b      	ldr	r3, [pc, #300]	; (8025e40 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025d12:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025d16:	2500      	movs	r5, #0
 8025d18:	f100 0620 	add.w	r6, r0, #32
 8025d1c:	4604      	mov	r4, r0
 8025d1e:	e9c0 3100 	strd	r3, r1, [r0]
 8025d22:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025d26:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8025d2a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8025d2e:	f100 0718 	add.w	r7, r0, #24
 8025d32:	4630      	mov	r0, r6
 8025d34:	4690      	mov	r8, r2
 8025d36:	f7ec fd35 	bl	80127a4 <_ZN8touchgfx7OutlineC1Ev>
 8025d3a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8025d3e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025d42:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025d46:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8025d4a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8025d4e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025d52:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025d56:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8025d5a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8025d5e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025d62:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025d66:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025d6a:	9500      	str	r5, [sp, #0]
 8025d6c:	4410      	add	r0, r2
 8025d6e:	b280      	uxth	r0, r0
 8025d70:	fa0f fa80 	sxth.w	sl, r0
 8025d74:	45aa      	cmp	sl, r5
 8025d76:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025d7a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025d7e:	dd5c      	ble.n	8025e3a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025d80:	4591      	cmp	r9, r2
 8025d82:	dd5a      	ble.n	8025e3a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025d84:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025d88:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025d8c:	440b      	add	r3, r1
 8025d8e:	b29b      	uxth	r3, r3
 8025d90:	b21d      	sxth	r5, r3
 8025d92:	2d00      	cmp	r5, #0
 8025d94:	dd51      	ble.n	8025e3a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025d96:	458e      	cmp	lr, r1
 8025d98:	dd4f      	ble.n	8025e3a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025d9a:	45d1      	cmp	r9, sl
 8025d9c:	bfb8      	it	lt
 8025d9e:	fa1f f089 	uxthlt.w	r0, r9
 8025da2:	45ae      	cmp	lr, r5
 8025da4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025da8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025dac:	bfb8      	it	lt
 8025dae:	fa1f f38e 	uxthlt.w	r3, lr
 8025db2:	1a80      	subs	r0, r0, r2
 8025db4:	1a5b      	subs	r3, r3, r1
 8025db6:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025dba:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025dbe:	f8ad 2000 	strh.w	r2, [sp]
 8025dc2:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025dc6:	466d      	mov	r5, sp
 8025dc8:	e895 0003 	ldmia.w	r5, {r0, r1}
 8025dcc:	e887 0003 	stmia.w	r7, {r0, r1}
 8025dd0:	f8dc 3000 	ldr.w	r3, [ip]
 8025dd4:	4660      	mov	r0, ip
 8025dd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025dd8:	4639      	mov	r1, r7
 8025dda:	4798      	blx	r3
 8025ddc:	6861      	ldr	r1, [r4, #4]
 8025dde:	4628      	mov	r0, r5
 8025de0:	3104      	adds	r1, #4
 8025de2:	f7ee fee5 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025de6:	4638      	mov	r0, r7
 8025de8:	f7ee fe9e 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025dec:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025df0:	f8bd 2000 	ldrh.w	r2, [sp]
 8025df4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025df8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025dfc:	4630      	mov	r0, r6
 8025dfe:	f7ec fcb5 	bl	801276c <_ZN8touchgfx7Outline5resetEv>
 8025e02:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025e06:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025e0a:	015b      	lsls	r3, r3, #5
 8025e0c:	60a3      	str	r3, [r4, #8]
 8025e0e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025e12:	015b      	lsls	r3, r3, #5
 8025e14:	60e3      	str	r3, [r4, #12]
 8025e16:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025e1a:	015b      	lsls	r3, r3, #5
 8025e1c:	6123      	str	r3, [r4, #16]
 8025e1e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025e22:	015b      	lsls	r3, r3, #5
 8025e24:	6163      	str	r3, [r4, #20]
 8025e26:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025e2a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025e2e:	4620      	mov	r0, r4
 8025e30:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025e34:	b002      	add	sp, #8
 8025e36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025e3a:	2300      	movs	r3, #0
 8025e3c:	9301      	str	r3, [sp, #4]
 8025e3e:	e7c2      	b.n	8025dc6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025e40:	0802d1a4 	.word	0x0802d1a4

08025e44 <_ZN8touchgfx6Canvas5closeEv>:
 8025e44:	b538      	push	{r3, r4, r5, lr}
 8025e46:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025e4a:	4604      	mov	r4, r0
 8025e4c:	b193      	cbz	r3, 8025e74 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025e4e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025e52:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025e56:	4213      	tst	r3, r2
 8025e58:	d10c      	bne.n	8025e74 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025e5a:	f100 0520 	add.w	r5, r0, #32
 8025e5e:	b123      	cbz	r3, 8025e6a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025e60:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025e64:	4628      	mov	r0, r5
 8025e66:	f7ff fe79 	bl	8025b5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025e6a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025e6e:	4628      	mov	r0, r5
 8025e70:	f7ff fe74 	bl	8025b5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025e74:	2300      	movs	r3, #0
 8025e76:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025e7a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025e7e:	4298      	cmp	r0, r3
 8025e80:	bf34      	ite	cc
 8025e82:	2000      	movcc	r0, #0
 8025e84:	2001      	movcs	r0, #1
 8025e86:	bd38      	pop	{r3, r4, r5, pc}

08025e88 <_ZN8touchgfx6Canvas6renderEh>:
 8025e88:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025e8c:	4604      	mov	r4, r0
 8025e8e:	6840      	ldr	r0, [r0, #4]
 8025e90:	6803      	ldr	r3, [r0, #0]
 8025e92:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025e94:	460d      	mov	r5, r1
 8025e96:	4798      	blx	r3
 8025e98:	fb10 f105 	smulbb	r1, r0, r5
 8025e9c:	b289      	uxth	r1, r1
 8025e9e:	1c4d      	adds	r5, r1, #1
 8025ea0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025ea4:	122d      	asrs	r5, r5, #8
 8025ea6:	f000 809d 	beq.w	8025fe4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025eaa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025eae:	2b00      	cmp	r3, #0
 8025eb0:	f000 8098 	beq.w	8025fe4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025eb4:	4620      	mov	r0, r4
 8025eb6:	f7ff ffc5 	bl	8025e44 <_ZN8touchgfx6Canvas5closeEv>
 8025eba:	4607      	mov	r7, r0
 8025ebc:	2800      	cmp	r0, #0
 8025ebe:	d048      	beq.n	8025f52 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025ec0:	6863      	ldr	r3, [r4, #4]
 8025ec2:	4e49      	ldr	r6, [pc, #292]	; (8025fe8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025ec4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025ec6:	6837      	ldr	r7, [r6, #0]
 8025ec8:	6803      	ldr	r3, [r0, #0]
 8025eca:	689b      	ldr	r3, [r3, #8]
 8025ecc:	4798      	blx	r3
 8025ece:	4601      	mov	r1, r0
 8025ed0:	4638      	mov	r0, r7
 8025ed2:	f7ea fdb9 	bl	8010a48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025ed6:	4607      	mov	r7, r0
 8025ed8:	f7dd fba4 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8025edc:	6803      	ldr	r3, [r0, #0]
 8025ede:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025ee0:	4798      	blx	r3
 8025ee2:	4680      	mov	r8, r0
 8025ee4:	f7dd fb9e 	bl	8003624 <_ZN8touchgfx3HAL3lcdEv>
 8025ee8:	6803      	ldr	r3, [r0, #0]
 8025eea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025eec:	4798      	blx	r3
 8025eee:	280b      	cmp	r0, #11
 8025ef0:	d85d      	bhi.n	8025fae <_ZN8touchgfx6Canvas6renderEh+0x126>
 8025ef2:	e8df f000 	tbb	[pc, r0]
 8025ef6:	5e53      	.short	0x5e53
 8025ef8:	325c066e 	.word	0x325c066e
 8025efc:	67676742 	.word	0x67676742
 8025f00:	6767      	.short	0x6767
 8025f02:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025f06:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025f0a:	2208      	movs	r2, #8
 8025f0c:	fb91 f2f2 	sdiv	r2, r1, r2
 8025f10:	fb08 2303 	mla	r3, r8, r3, r2
 8025f14:	441f      	add	r7, r3
 8025f16:	424b      	negs	r3, r1
 8025f18:	f003 0307 	and.w	r3, r3, #7
 8025f1c:	f001 0107 	and.w	r1, r1, #7
 8025f20:	bf58      	it	pl
 8025f22:	4259      	negpl	r1, r3
 8025f24:	b2c9      	uxtb	r1, r1
 8025f26:	b2ed      	uxtb	r5, r5
 8025f28:	e9cd 1500 	strd	r1, r5, [sp]
 8025f2c:	6860      	ldr	r0, [r4, #4]
 8025f2e:	463a      	mov	r2, r7
 8025f30:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8025f32:	fa0f f388 	sxth.w	r3, r8
 8025f36:	f104 0020 	add.w	r0, r4, #32
 8025f3a:	f7ff fe1b 	bl	8025b74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8025f3e:	6863      	ldr	r3, [r4, #4]
 8025f40:	4607      	mov	r7, r0
 8025f42:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025f44:	6803      	ldr	r3, [r0, #0]
 8025f46:	691b      	ldr	r3, [r3, #16]
 8025f48:	4798      	blx	r3
 8025f4a:	6830      	ldr	r0, [r6, #0]
 8025f4c:	6803      	ldr	r3, [r0, #0]
 8025f4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025f50:	4798      	blx	r3
 8025f52:	4638      	mov	r0, r7
 8025f54:	b002      	add	sp, #8
 8025f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025f5a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025f5e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025f62:	2204      	movs	r2, #4
 8025f64:	fb91 f2f2 	sdiv	r2, r1, r2
 8025f68:	fb08 2303 	mla	r3, r8, r3, r2
 8025f6c:	441f      	add	r7, r3
 8025f6e:	424b      	negs	r3, r1
 8025f70:	f003 0303 	and.w	r3, r3, #3
 8025f74:	f001 0103 	and.w	r1, r1, #3
 8025f78:	e7d2      	b.n	8025f20 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8025f7a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025f7e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025f82:	2900      	cmp	r1, #0
 8025f84:	f04f 0202 	mov.w	r2, #2
 8025f88:	fb91 f2f2 	sdiv	r2, r1, r2
 8025f8c:	f001 0101 	and.w	r1, r1, #1
 8025f90:	fb08 2303 	mla	r3, r8, r3, r2
 8025f94:	441f      	add	r7, r3
 8025f96:	bfb8      	it	lt
 8025f98:	4249      	neglt	r1, r1
 8025f9a:	e7c3      	b.n	8025f24 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8025f9c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025fa0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025fa4:	fb08 f303 	mul.w	r3, r8, r3
 8025fa8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8025fac:	441f      	add	r7, r3
 8025fae:	2100      	movs	r1, #0
 8025fb0:	e7b9      	b.n	8025f26 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8025fb2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025fb6:	fb08 f203 	mul.w	r2, r8, r3
 8025fba:	8b23      	ldrh	r3, [r4, #24]
 8025fbc:	2103      	movs	r1, #3
 8025fbe:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025fc2:	e7f3      	b.n	8025fac <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025fc4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025fc8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025fcc:	fb08 2303 	mla	r3, r8, r3, r2
 8025fd0:	e7ec      	b.n	8025fac <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025fd2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025fd6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025fda:	fb08 f303 	mul.w	r3, r8, r3
 8025fde:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8025fe2:	e7e3      	b.n	8025fac <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025fe4:	2701      	movs	r7, #1
 8025fe6:	e7b4      	b.n	8025f52 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025fe8:	200137cc 	.word	0x200137cc

08025fec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8025fec:	b510      	push	{r4, lr}
 8025fee:	4b07      	ldr	r3, [pc, #28]	; (802600c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8025ff0:	781b      	ldrb	r3, [r3, #0]
 8025ff2:	2b01      	cmp	r3, #1
 8025ff4:	d108      	bne.n	8026008 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8025ff6:	6843      	ldr	r3, [r0, #4]
 8025ff8:	6814      	ldr	r4, [r2, #0]
 8025ffa:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8025ffe:	680b      	ldr	r3, [r1, #0]
 8026000:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8026004:	6013      	str	r3, [r2, #0]
 8026006:	600c      	str	r4, [r1, #0]
 8026008:	bd10      	pop	{r4, pc}
 802600a:	bf00      	nop
 802600c:	200137c4 	.word	0x200137c4

08026010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026010:	b513      	push	{r0, r1, r4, lr}
 8026012:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026016:	4604      	mov	r4, r0
 8026018:	e9cd 2100 	strd	r2, r1, [sp]
 802601c:	b9a3      	cbnz	r3, 8026048 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802601e:	466a      	mov	r2, sp
 8026020:	a901      	add	r1, sp, #4
 8026022:	4620      	mov	r0, r4
 8026024:	f7ff ffe2 	bl	8025fec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026028:	68a3      	ldr	r3, [r4, #8]
 802602a:	9901      	ldr	r1, [sp, #4]
 802602c:	9a00      	ldr	r2, [sp, #0]
 802602e:	1ac9      	subs	r1, r1, r3
 8026030:	68e3      	ldr	r3, [r4, #12]
 8026032:	9101      	str	r1, [sp, #4]
 8026034:	1ad2      	subs	r2, r2, r3
 8026036:	2a00      	cmp	r2, #0
 8026038:	9200      	str	r2, [sp, #0]
 802603a:	da0b      	bge.n	8026054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802603c:	2301      	movs	r3, #1
 802603e:	2900      	cmp	r1, #0
 8026040:	da0e      	bge.n	8026060 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026042:	f043 0304 	orr.w	r3, r3, #4
 8026046:	e013      	b.n	8026070 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026048:	f7ff fefc 	bl	8025e44 <_ZN8touchgfx6Canvas5closeEv>
 802604c:	2800      	cmp	r0, #0
 802604e:	d1e6      	bne.n	802601e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026050:	b002      	add	sp, #8
 8026052:	bd10      	pop	{r4, pc}
 8026054:	6963      	ldr	r3, [r4, #20]
 8026056:	429a      	cmp	r2, r3
 8026058:	bfac      	ite	ge
 802605a:	2302      	movge	r3, #2
 802605c:	2300      	movlt	r3, #0
 802605e:	e7ee      	b.n	802603e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026060:	6920      	ldr	r0, [r4, #16]
 8026062:	4281      	cmp	r1, r0
 8026064:	bfac      	ite	ge
 8026066:	2008      	movge	r0, #8
 8026068:	2000      	movlt	r0, #0
 802606a:	4318      	orrs	r0, r3
 802606c:	b2c3      	uxtb	r3, r0
 802606e:	b158      	cbz	r0, 8026088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026070:	2200      	movs	r2, #0
 8026072:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026076:	9901      	ldr	r1, [sp, #4]
 8026078:	9a00      	ldr	r2, [sp, #0]
 802607a:	66a1      	str	r1, [r4, #104]	; 0x68
 802607c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802607e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026082:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026086:	e7e3      	b.n	8026050 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026088:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802608c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026090:	4298      	cmp	r0, r3
 8026092:	d803      	bhi.n	802609c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026094:	f104 0020 	add.w	r0, r4, #32
 8026098:	f7ed f866 	bl	8013168 <_ZN8touchgfx7Outline6moveToEii>
 802609c:	2301      	movs	r3, #1
 802609e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80260a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80260a6:	2300      	movs	r3, #0
 80260a8:	e7e5      	b.n	8026076 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80260aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80260ac:	ab02      	add	r3, sp, #8
 80260ae:	4604      	mov	r4, r0
 80260b0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80260b4:	9101      	str	r1, [sp, #4]
 80260b6:	461a      	mov	r2, r3
 80260b8:	a901      	add	r1, sp, #4
 80260ba:	f7ff ff97 	bl	8025fec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80260be:	68a3      	ldr	r3, [r4, #8]
 80260c0:	9901      	ldr	r1, [sp, #4]
 80260c2:	9a00      	ldr	r2, [sp, #0]
 80260c4:	1ac9      	subs	r1, r1, r3
 80260c6:	68e3      	ldr	r3, [r4, #12]
 80260c8:	9101      	str	r1, [sp, #4]
 80260ca:	1ad2      	subs	r2, r2, r3
 80260cc:	2a00      	cmp	r2, #0
 80260ce:	9200      	str	r2, [sp, #0]
 80260d0:	db1c      	blt.n	802610c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80260d2:	6963      	ldr	r3, [r4, #20]
 80260d4:	429a      	cmp	r2, r3
 80260d6:	bfac      	ite	ge
 80260d8:	2002      	movge	r0, #2
 80260da:	2000      	movlt	r0, #0
 80260dc:	2900      	cmp	r1, #0
 80260de:	db17      	blt.n	8026110 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80260e0:	6923      	ldr	r3, [r4, #16]
 80260e2:	4299      	cmp	r1, r3
 80260e4:	bfac      	ite	ge
 80260e6:	2308      	movge	r3, #8
 80260e8:	2300      	movlt	r3, #0
 80260ea:	4303      	orrs	r3, r0
 80260ec:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80260f0:	b2dd      	uxtb	r5, r3
 80260f2:	b978      	cbnz	r0, 8026114 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80260f4:	f104 0020 	add.w	r0, r4, #32
 80260f8:	f7ff fd30 	bl	8025b5c <_ZN8touchgfx10Rasterizer6lineToEii>
 80260fc:	9b01      	ldr	r3, [sp, #4]
 80260fe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026100:	9b00      	ldr	r3, [sp, #0]
 8026102:	6623      	str	r3, [r4, #96]	; 0x60
 8026104:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026108:	b002      	add	sp, #8
 802610a:	bd70      	pop	{r4, r5, r6, pc}
 802610c:	2001      	movs	r0, #1
 802610e:	e7e5      	b.n	80260dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026110:	2304      	movs	r3, #4
 8026112:	e7ea      	b.n	80260ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026114:	b113      	cbz	r3, 802611c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026116:	ea10 0305 	ands.w	r3, r0, r5
 802611a:	d11c      	bne.n	8026156 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802611c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026120:	f104 0620 	add.w	r6, r4, #32
 8026124:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026128:	b98b      	cbnz	r3, 802614e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802612a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802612e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026132:	4298      	cmp	r0, r3
 8026134:	d802      	bhi.n	802613c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026136:	4630      	mov	r0, r6
 8026138:	f7ed f816 	bl	8013168 <_ZN8touchgfx7Outline6moveToEii>
 802613c:	2301      	movs	r3, #1
 802613e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026142:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026146:	e9dd 2100 	ldrd	r2, r1, [sp]
 802614a:	4630      	mov	r0, r6
 802614c:	e7d4      	b.n	80260f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802614e:	4630      	mov	r0, r6
 8026150:	f7ff fd04 	bl	8025b5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026154:	e7f7      	b.n	8026146 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026156:	461d      	mov	r5, r3
 8026158:	e7d0      	b.n	80260fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802615c <_ZN8touchgfx6CanvasD1Ev>:
 802615c:	b510      	push	{r4, lr}
 802615e:	4b04      	ldr	r3, [pc, #16]	; (8026170 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026160:	4604      	mov	r4, r0
 8026162:	f840 3b20 	str.w	r3, [r0], #32
 8026166:	f7ec faf9 	bl	801275c <_ZN8touchgfx7OutlineD1Ev>
 802616a:	4620      	mov	r0, r4
 802616c:	bd10      	pop	{r4, pc}
 802616e:	bf00      	nop
 8026170:	0802d1a4 	.word	0x0802d1a4

08026174 <_ZN8touchgfx6CanvasD0Ev>:
 8026174:	b510      	push	{r4, lr}
 8026176:	4604      	mov	r4, r0
 8026178:	f7ff fff0 	bl	802615c <_ZN8touchgfx6CanvasD1Ev>
 802617c:	4620      	mov	r0, r4
 802617e:	2170      	movs	r1, #112	; 0x70
 8026180:	f001 fbe5 	bl	802794e <_ZdlPvj>
 8026184:	4620      	mov	r0, r4
 8026186:	bd10      	pop	{r4, pc}

08026188 <_ZN8touchgfx6CircleD1Ev>:
 8026188:	4770      	bx	lr

0802618a <_ZN8touchgfx6CircleD0Ev>:
 802618a:	b510      	push	{r4, lr}
 802618c:	2148      	movs	r1, #72	; 0x48
 802618e:	4604      	mov	r4, r0
 8026190:	f001 fbdd 	bl	802794e <_ZdlPvj>
 8026194:	4620      	mov	r0, r4
 8026196:	bd10      	pop	{r4, pc}

08026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026198:	b508      	push	{r3, lr}
 802619a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802619e:	f7ea ffa9 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80261a2:	bd08      	pop	{r3, pc}

080261a4 <_ZN8touchgfx6CircleC1Ev>:
 80261a4:	b510      	push	{r4, lr}
 80261a6:	4604      	mov	r4, r0
 80261a8:	f7ea fe40 	bl	8010e2c <_ZN8touchgfx12CanvasWidgetC1Ev>
 80261ac:	4b08      	ldr	r3, [pc, #32]	; (80261d0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80261ae:	6023      	str	r3, [r4, #0]
 80261b0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80261b4:	2300      	movs	r3, #0
 80261b6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80261ba:	f24b 4205 	movw	r2, #46085	; 0xb405
 80261be:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80261c2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80261c6:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80261ca:	60a3      	str	r3, [r4, #8]
 80261cc:	4620      	mov	r0, r4
 80261ce:	bd10      	pop	{r4, pc}
 80261d0:	0802d1b8 	.word	0x0802d1b8

080261d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80261d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80261d8:	428a      	cmp	r2, r1
 80261da:	4680      	mov	r8, r0
 80261dc:	4610      	mov	r0, r2
 80261de:	4699      	mov	r9, r3
 80261e0:	bfa6      	itte	ge
 80261e2:	460a      	movge	r2, r1
 80261e4:	4603      	movge	r3, r0
 80261e6:	460b      	movlt	r3, r1
 80261e8:	1a99      	subs	r1, r3, r2
 80261ea:	b085      	sub	sp, #20
 80261ec:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80261f0:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80261f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80261f6:	bfa4      	itt	ge
 80261f8:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80261fc:	2200      	movge	r2, #0
 80261fe:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8026202:	9300      	str	r3, [sp, #0]
 8026204:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026208:	f102 0b01 	add.w	fp, r2, #1
 802620c:	2c00      	cmp	r4, #0
 802620e:	f040 80af 	bne.w	8026370 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8026212:	4610      	mov	r0, r2
 8026214:	9201      	str	r2, [sp, #4]
 8026216:	f7ea ff6d 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802621a:	a903      	add	r1, sp, #12
 802621c:	9003      	str	r0, [sp, #12]
 802621e:	4650      	mov	r0, sl
 8026220:	f7ea fe30 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026224:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026228:	9a01      	ldr	r2, [sp, #4]
 802622a:	4408      	add	r0, r1
 802622c:	f8d9 1000 	ldr.w	r1, [r9]
 8026230:	4281      	cmp	r1, r0
 8026232:	bfc8      	it	gt
 8026234:	f8c9 0000 	strgt.w	r0, [r9]
 8026238:	6839      	ldr	r1, [r7, #0]
 802623a:	4288      	cmp	r0, r1
 802623c:	bfc8      	it	gt
 802623e:	6038      	strgt	r0, [r7, #0]
 8026240:	4610      	mov	r0, r2
 8026242:	f7ff ffa9 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026246:	a903      	add	r1, sp, #12
 8026248:	9003      	str	r0, [sp, #12]
 802624a:	4650      	mov	r0, sl
 802624c:	f7ea fe1a 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026250:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026254:	1a10      	subs	r0, r2, r0
 8026256:	6832      	ldr	r2, [r6, #0]
 8026258:	4282      	cmp	r2, r0
 802625a:	bfc8      	it	gt
 802625c:	6030      	strgt	r0, [r6, #0]
 802625e:	682a      	ldr	r2, [r5, #0]
 8026260:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026264:	4290      	cmp	r0, r2
 8026266:	fb9b f2f1 	sdiv	r2, fp, r1
 802626a:	fb01 b212 	mls	r2, r1, r2, fp
 802626e:	eba1 0202 	sub.w	r2, r1, r2
 8026272:	bfc8      	it	gt
 8026274:	6028      	strgt	r0, [r5, #0]
 8026276:	fb92 f0f1 	sdiv	r0, r2, r1
 802627a:	fb01 2210 	mls	r2, r1, r0, r2
 802627e:	4493      	add	fp, r2
 8026280:	9b00      	ldr	r3, [sp, #0]
 8026282:	455b      	cmp	r3, fp
 8026284:	db2a      	blt.n	80262dc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026286:	4658      	mov	r0, fp
 8026288:	f7ea ff34 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802628c:	a903      	add	r1, sp, #12
 802628e:	9003      	str	r0, [sp, #12]
 8026290:	4650      	mov	r0, sl
 8026292:	f7ea fdf7 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026296:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802629a:	4410      	add	r0, r2
 802629c:	f8d9 2000 	ldr.w	r2, [r9]
 80262a0:	4282      	cmp	r2, r0
 80262a2:	bfc8      	it	gt
 80262a4:	f8c9 0000 	strgt.w	r0, [r9]
 80262a8:	683a      	ldr	r2, [r7, #0]
 80262aa:	4290      	cmp	r0, r2
 80262ac:	bfc8      	it	gt
 80262ae:	6038      	strgt	r0, [r7, #0]
 80262b0:	4658      	mov	r0, fp
 80262b2:	f7ff ff71 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80262b6:	a903      	add	r1, sp, #12
 80262b8:	9003      	str	r0, [sp, #12]
 80262ba:	4650      	mov	r0, sl
 80262bc:	f7ea fde2 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80262c0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80262c4:	1a10      	subs	r0, r2, r0
 80262c6:	6832      	ldr	r2, [r6, #0]
 80262c8:	4282      	cmp	r2, r0
 80262ca:	bfc8      	it	gt
 80262cc:	6030      	strgt	r0, [r6, #0]
 80262ce:	682a      	ldr	r2, [r5, #0]
 80262d0:	4290      	cmp	r0, r2
 80262d2:	bfc8      	it	gt
 80262d4:	6028      	strgt	r0, [r5, #0]
 80262d6:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80262da:	e7d1      	b.n	8026280 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80262dc:	9b00      	ldr	r3, [sp, #0]
 80262de:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80262e2:	455b      	cmp	r3, fp
 80262e4:	dd27      	ble.n	8026336 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80262e6:	4618      	mov	r0, r3
 80262e8:	f7ea ff04 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80262ec:	a903      	add	r1, sp, #12
 80262ee:	9003      	str	r0, [sp, #12]
 80262f0:	4650      	mov	r0, sl
 80262f2:	f7ea fdc7 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80262f6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80262fa:	4410      	add	r0, r2
 80262fc:	f8d9 2000 	ldr.w	r2, [r9]
 8026300:	4282      	cmp	r2, r0
 8026302:	bfc8      	it	gt
 8026304:	f8c9 0000 	strgt.w	r0, [r9]
 8026308:	683a      	ldr	r2, [r7, #0]
 802630a:	4290      	cmp	r0, r2
 802630c:	bfc8      	it	gt
 802630e:	6038      	strgt	r0, [r7, #0]
 8026310:	9800      	ldr	r0, [sp, #0]
 8026312:	f7ff ff41 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026316:	a903      	add	r1, sp, #12
 8026318:	9003      	str	r0, [sp, #12]
 802631a:	4650      	mov	r0, sl
 802631c:	f7ea fdb2 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026320:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026324:	1a10      	subs	r0, r2, r0
 8026326:	6832      	ldr	r2, [r6, #0]
 8026328:	4282      	cmp	r2, r0
 802632a:	bfc8      	it	gt
 802632c:	6030      	strgt	r0, [r6, #0]
 802632e:	682a      	ldr	r2, [r5, #0]
 8026330:	4290      	cmp	r0, r2
 8026332:	bfc8      	it	gt
 8026334:	6028      	strgt	r0, [r5, #0]
 8026336:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802633a:	f8d9 1000 	ldr.w	r1, [r9]
 802633e:	4291      	cmp	r1, r2
 8026340:	bfc8      	it	gt
 8026342:	f8c9 2000 	strgt.w	r2, [r9]
 8026346:	683a      	ldr	r2, [r7, #0]
 8026348:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802634c:	429a      	cmp	r2, r3
 802634e:	bfb8      	it	lt
 8026350:	603b      	strlt	r3, [r7, #0]
 8026352:	6832      	ldr	r2, [r6, #0]
 8026354:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026358:	429a      	cmp	r2, r3
 802635a:	bfc8      	it	gt
 802635c:	6033      	strgt	r3, [r6, #0]
 802635e:	682a      	ldr	r2, [r5, #0]
 8026360:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026364:	429a      	cmp	r2, r3
 8026366:	da00      	bge.n	802636a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026368:	602b      	str	r3, [r5, #0]
 802636a:	b005      	add	sp, #20
 802636c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026370:	2002      	movs	r0, #2
 8026372:	3401      	adds	r4, #1
 8026374:	fb94 f4f0 	sdiv	r4, r4, r0
 8026378:	4610      	mov	r0, r2
 802637a:	9201      	str	r2, [sp, #4]
 802637c:	f7ea feba 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026380:	a903      	add	r1, sp, #12
 8026382:	9003      	str	r0, [sp, #12]
 8026384:	4650      	mov	r0, sl
 8026386:	f7ea fd7d 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802638a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802638e:	9a01      	ldr	r2, [sp, #4]
 8026390:	4408      	add	r0, r1
 8026392:	f8d9 1000 	ldr.w	r1, [r9]
 8026396:	1b03      	subs	r3, r0, r4
 8026398:	4299      	cmp	r1, r3
 802639a:	bfc8      	it	gt
 802639c:	f8c9 3000 	strgt.w	r3, [r9]
 80263a0:	6839      	ldr	r1, [r7, #0]
 80263a2:	428b      	cmp	r3, r1
 80263a4:	bfc8      	it	gt
 80263a6:	603b      	strgt	r3, [r7, #0]
 80263a8:	f8d9 1000 	ldr.w	r1, [r9]
 80263ac:	4420      	add	r0, r4
 80263ae:	4281      	cmp	r1, r0
 80263b0:	bfc8      	it	gt
 80263b2:	f8c9 0000 	strgt.w	r0, [r9]
 80263b6:	6839      	ldr	r1, [r7, #0]
 80263b8:	4288      	cmp	r0, r1
 80263ba:	bfc8      	it	gt
 80263bc:	6038      	strgt	r0, [r7, #0]
 80263be:	4610      	mov	r0, r2
 80263c0:	f7ff feea 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80263c4:	a903      	add	r1, sp, #12
 80263c6:	9003      	str	r0, [sp, #12]
 80263c8:	4650      	mov	r0, sl
 80263ca:	f7ea fd5b 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263ce:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80263d2:	1a10      	subs	r0, r2, r0
 80263d4:	6832      	ldr	r2, [r6, #0]
 80263d6:	1b01      	subs	r1, r0, r4
 80263d8:	428a      	cmp	r2, r1
 80263da:	bfc8      	it	gt
 80263dc:	6031      	strgt	r1, [r6, #0]
 80263de:	682a      	ldr	r2, [r5, #0]
 80263e0:	4291      	cmp	r1, r2
 80263e2:	bfc8      	it	gt
 80263e4:	6029      	strgt	r1, [r5, #0]
 80263e6:	6832      	ldr	r2, [r6, #0]
 80263e8:	4420      	add	r0, r4
 80263ea:	4282      	cmp	r2, r0
 80263ec:	bfc8      	it	gt
 80263ee:	6030      	strgt	r0, [r6, #0]
 80263f0:	682a      	ldr	r2, [r5, #0]
 80263f2:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80263f6:	4290      	cmp	r0, r2
 80263f8:	fb9b f2f1 	sdiv	r2, fp, r1
 80263fc:	fb01 b212 	mls	r2, r1, r2, fp
 8026400:	eba1 0202 	sub.w	r2, r1, r2
 8026404:	bfc8      	it	gt
 8026406:	6028      	strgt	r0, [r5, #0]
 8026408:	fb92 f0f1 	sdiv	r0, r2, r1
 802640c:	fb01 2210 	mls	r2, r1, r0, r2
 8026410:	4493      	add	fp, r2
 8026412:	9b00      	ldr	r3, [sp, #0]
 8026414:	455b      	cmp	r3, fp
 8026416:	db40      	blt.n	802649a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026418:	4658      	mov	r0, fp
 802641a:	f7ea fe6b 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802641e:	a903      	add	r1, sp, #12
 8026420:	9003      	str	r0, [sp, #12]
 8026422:	4650      	mov	r0, sl
 8026424:	f7ea fd2e 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026428:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802642c:	4410      	add	r0, r2
 802642e:	f8d9 2000 	ldr.w	r2, [r9]
 8026432:	1b01      	subs	r1, r0, r4
 8026434:	428a      	cmp	r2, r1
 8026436:	bfc8      	it	gt
 8026438:	f8c9 1000 	strgt.w	r1, [r9]
 802643c:	683a      	ldr	r2, [r7, #0]
 802643e:	4291      	cmp	r1, r2
 8026440:	bfc8      	it	gt
 8026442:	6039      	strgt	r1, [r7, #0]
 8026444:	f8d9 2000 	ldr.w	r2, [r9]
 8026448:	4420      	add	r0, r4
 802644a:	4282      	cmp	r2, r0
 802644c:	bfc8      	it	gt
 802644e:	f8c9 0000 	strgt.w	r0, [r9]
 8026452:	683a      	ldr	r2, [r7, #0]
 8026454:	4290      	cmp	r0, r2
 8026456:	bfc8      	it	gt
 8026458:	6038      	strgt	r0, [r7, #0]
 802645a:	4658      	mov	r0, fp
 802645c:	f7ff fe9c 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026460:	a903      	add	r1, sp, #12
 8026462:	9003      	str	r0, [sp, #12]
 8026464:	4650      	mov	r0, sl
 8026466:	f7ea fd0d 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802646a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802646e:	1a10      	subs	r0, r2, r0
 8026470:	6832      	ldr	r2, [r6, #0]
 8026472:	1b01      	subs	r1, r0, r4
 8026474:	428a      	cmp	r2, r1
 8026476:	bfc8      	it	gt
 8026478:	6031      	strgt	r1, [r6, #0]
 802647a:	682a      	ldr	r2, [r5, #0]
 802647c:	4291      	cmp	r1, r2
 802647e:	bfc8      	it	gt
 8026480:	6029      	strgt	r1, [r5, #0]
 8026482:	6832      	ldr	r2, [r6, #0]
 8026484:	4420      	add	r0, r4
 8026486:	4282      	cmp	r2, r0
 8026488:	bfc8      	it	gt
 802648a:	6030      	strgt	r0, [r6, #0]
 802648c:	682a      	ldr	r2, [r5, #0]
 802648e:	4290      	cmp	r0, r2
 8026490:	bfc8      	it	gt
 8026492:	6028      	strgt	r0, [r5, #0]
 8026494:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026498:	e7bb      	b.n	8026412 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802649a:	9b00      	ldr	r3, [sp, #0]
 802649c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80264a0:	455b      	cmp	r3, fp
 80264a2:	f77f af62 	ble.w	802636a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80264a6:	4618      	mov	r0, r3
 80264a8:	f7ea fe24 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80264ac:	a903      	add	r1, sp, #12
 80264ae:	9003      	str	r0, [sp, #12]
 80264b0:	4650      	mov	r0, sl
 80264b2:	f7ea fce7 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264b6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80264ba:	4410      	add	r0, r2
 80264bc:	f8d9 2000 	ldr.w	r2, [r9]
 80264c0:	1b01      	subs	r1, r0, r4
 80264c2:	428a      	cmp	r2, r1
 80264c4:	bfc8      	it	gt
 80264c6:	f8c9 1000 	strgt.w	r1, [r9]
 80264ca:	683a      	ldr	r2, [r7, #0]
 80264cc:	4291      	cmp	r1, r2
 80264ce:	bfc8      	it	gt
 80264d0:	6039      	strgt	r1, [r7, #0]
 80264d2:	f8d9 2000 	ldr.w	r2, [r9]
 80264d6:	4420      	add	r0, r4
 80264d8:	4282      	cmp	r2, r0
 80264da:	bfc8      	it	gt
 80264dc:	f8c9 0000 	strgt.w	r0, [r9]
 80264e0:	683b      	ldr	r3, [r7, #0]
 80264e2:	4298      	cmp	r0, r3
 80264e4:	bfc8      	it	gt
 80264e6:	6038      	strgt	r0, [r7, #0]
 80264e8:	9800      	ldr	r0, [sp, #0]
 80264ea:	f7ff fe55 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80264ee:	a903      	add	r1, sp, #12
 80264f0:	9003      	str	r0, [sp, #12]
 80264f2:	4650      	mov	r0, sl
 80264f4:	f7ea fcc6 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264f8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80264fc:	6832      	ldr	r2, [r6, #0]
 80264fe:	1a18      	subs	r0, r3, r0
 8026500:	1b03      	subs	r3, r0, r4
 8026502:	429a      	cmp	r2, r3
 8026504:	bfc8      	it	gt
 8026506:	6033      	strgt	r3, [r6, #0]
 8026508:	682a      	ldr	r2, [r5, #0]
 802650a:	4293      	cmp	r3, r2
 802650c:	bfc8      	it	gt
 802650e:	602b      	strgt	r3, [r5, #0]
 8026510:	6833      	ldr	r3, [r6, #0]
 8026512:	4404      	add	r4, r0
 8026514:	42a3      	cmp	r3, r4
 8026516:	bfc8      	it	gt
 8026518:	6034      	strgt	r4, [r6, #0]
 802651a:	682b      	ldr	r3, [r5, #0]
 802651c:	429c      	cmp	r4, r3
 802651e:	bfc8      	it	gt
 8026520:	602c      	strgt	r4, [r5, #0]
 8026522:	e722      	b.n	802636a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026524 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026524:	b530      	push	{r4, r5, lr}
 8026526:	4604      	mov	r4, r0
 8026528:	4608      	mov	r0, r1
 802652a:	4611      	mov	r1, r2
 802652c:	461a      	mov	r2, r3
 802652e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026532:	b089      	sub	sp, #36	; 0x24
 8026534:	015b      	lsls	r3, r3, #5
 8026536:	9304      	str	r3, [sp, #16]
 8026538:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802653c:	2500      	movs	r5, #0
 802653e:	015b      	lsls	r3, r3, #5
 8026540:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026544:	ab07      	add	r3, sp, #28
 8026546:	9302      	str	r3, [sp, #8]
 8026548:	ab06      	add	r3, sp, #24
 802654a:	9301      	str	r3, [sp, #4]
 802654c:	ab05      	add	r3, sp, #20
 802654e:	9300      	str	r3, [sp, #0]
 8026550:	ab04      	add	r3, sp, #16
 8026552:	9505      	str	r5, [sp, #20]
 8026554:	f7ff fe3e 	bl	80261d4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026558:	2520      	movs	r5, #32
 802655a:	9a04      	ldr	r2, [sp, #16]
 802655c:	9805      	ldr	r0, [sp, #20]
 802655e:	fb92 f2f5 	sdiv	r2, r2, r5
 8026562:	fb90 f0f5 	sdiv	r0, r0, r5
 8026566:	b292      	uxth	r2, r2
 8026568:	3002      	adds	r0, #2
 802656a:	1a80      	subs	r0, r0, r2
 802656c:	9b06      	ldr	r3, [sp, #24]
 802656e:	9907      	ldr	r1, [sp, #28]
 8026570:	fb93 f3f5 	sdiv	r3, r3, r5
 8026574:	fb91 f1f5 	sdiv	r1, r1, r5
 8026578:	b29b      	uxth	r3, r3
 802657a:	3102      	adds	r1, #2
 802657c:	1ac9      	subs	r1, r1, r3
 802657e:	3a01      	subs	r2, #1
 8026580:	3b01      	subs	r3, #1
 8026582:	80a0      	strh	r0, [r4, #4]
 8026584:	4620      	mov	r0, r4
 8026586:	8022      	strh	r2, [r4, #0]
 8026588:	8063      	strh	r3, [r4, #2]
 802658a:	80e1      	strh	r1, [r4, #6]
 802658c:	b009      	add	sp, #36	; 0x24
 802658e:	bd30      	pop	{r4, r5, pc}

08026590 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026590:	b510      	push	{r4, lr}
 8026592:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026596:	4604      	mov	r4, r0
 8026598:	f7ff ffc4 	bl	8026524 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802659c:	4620      	mov	r0, r4
 802659e:	bd10      	pop	{r4, pc}

080265a0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80265a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80265a2:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80265a6:	4606      	mov	r6, r0
 80265a8:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80265ac:	6813      	ldr	r3, [r2, #0]
 80265ae:	42a5      	cmp	r5, r4
 80265b0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80265b4:	da2b      	bge.n	802660e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80265b6:	42a3      	cmp	r3, r4
 80265b8:	dd14      	ble.n	80265e4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80265ba:	b168      	cbz	r0, 80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80265bc:	4267      	negs	r7, r4
 80265be:	fb97 f2f0 	sdiv	r2, r7, r0
 80265c2:	fb00 7212 	mls	r2, r0, r2, r7
 80265c6:	1a82      	subs	r2, r0, r2
 80265c8:	fb92 f7f0 	sdiv	r7, r2, r0
 80265cc:	fb00 2017 	mls	r0, r0, r7, r2
 80265d0:	1a24      	subs	r4, r4, r0
 80265d2:	42ac      	cmp	r4, r5
 80265d4:	bfb8      	it	lt
 80265d6:	462c      	movlt	r4, r5
 80265d8:	4630      	mov	r0, r6
 80265da:	4622      	mov	r2, r4
 80265dc:	f7ff ffa2 	bl	8026524 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80265e0:	4630      	mov	r0, r6
 80265e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80265e4:	42ab      	cmp	r3, r5
 80265e6:	dd0e      	ble.n	8026606 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80265e8:	b168      	cbz	r0, 8026606 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80265ea:	425f      	negs	r7, r3
 80265ec:	fb97 f2f0 	sdiv	r2, r7, r0
 80265f0:	fb00 7212 	mls	r2, r0, r2, r7
 80265f4:	1a82      	subs	r2, r0, r2
 80265f6:	fb92 f7f0 	sdiv	r7, r2, r0
 80265fa:	fb00 2017 	mls	r0, r0, r7, r2
 80265fe:	1a1b      	subs	r3, r3, r0
 8026600:	42ab      	cmp	r3, r5
 8026602:	bfb8      	it	lt
 8026604:	462b      	movlt	r3, r5
 8026606:	4622      	mov	r2, r4
 8026608:	461c      	mov	r4, r3
 802660a:	4613      	mov	r3, r2
 802660c:	e7e4      	b.n	80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802660e:	42a3      	cmp	r3, r4
 8026610:	da10      	bge.n	8026634 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026612:	b148      	cbz	r0, 8026628 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026614:	fb94 f2f0 	sdiv	r2, r4, r0
 8026618:	fb00 4212 	mls	r2, r0, r2, r4
 802661c:	1a82      	subs	r2, r0, r2
 802661e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026622:	fb00 2017 	mls	r0, r0, r7, r2
 8026626:	4404      	add	r4, r0
 8026628:	42a5      	cmp	r5, r4
 802662a:	bfa8      	it	ge
 802662c:	4625      	movge	r5, r4
 802662e:	461c      	mov	r4, r3
 8026630:	462b      	mov	r3, r5
 8026632:	e7d1      	b.n	80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026634:	42ab      	cmp	r3, r5
 8026636:	dacf      	bge.n	80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026638:	2800      	cmp	r0, #0
 802663a:	d0cd      	beq.n	80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802663c:	fb93 f2f0 	sdiv	r2, r3, r0
 8026640:	fb00 3212 	mls	r2, r0, r2, r3
 8026644:	1a82      	subs	r2, r0, r2
 8026646:	fb92 f7f0 	sdiv	r7, r2, r0
 802664a:	fb00 2017 	mls	r0, r0, r7, r2
 802664e:	4403      	add	r3, r0
 8026650:	42ab      	cmp	r3, r5
 8026652:	bfa8      	it	ge
 8026654:	462b      	movge	r3, r5
 8026656:	e7bf      	b.n	80265d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026658 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802665c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026660:	42ae      	cmp	r6, r5
 8026662:	bfa2      	ittt	ge
 8026664:	4633      	movge	r3, r6
 8026666:	462e      	movge	r6, r5
 8026668:	461d      	movge	r5, r3
 802666a:	1bab      	subs	r3, r5, r6
 802666c:	468b      	mov	fp, r1
 802666e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026670:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026674:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026678:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802667c:	f04f 0220 	mov.w	r2, #32
 8026680:	b0ab      	sub	sp, #172	; 0xac
 8026682:	4604      	mov	r4, r0
 8026684:	bfa4      	itt	ge
 8026686:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802668a:	2600      	movge	r6, #0
 802668c:	fb99 f9f2 	sdiv	r9, r9, r2
 8026690:	fb9a faf2 	sdiv	sl, sl, r2
 8026694:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026696:	2900      	cmp	r1, #0
 8026698:	f000 80f5 	beq.w	8026886 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802669c:	f9bb 0000 	ldrsh.w	r0, [fp]
 80266a0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80266a4:	eba9 0700 	sub.w	r7, r9, r0
 80266a8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80266ac:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80266b0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80266b4:	ebaa 0802 	sub.w	r8, sl, r2
 80266b8:	4407      	add	r7, r0
 80266ba:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80266be:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80266c2:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80266c6:	b23f      	sxth	r7, r7
 80266c8:	4490      	add	r8, r2
 80266ca:	eba9 0707 	sub.w	r7, r9, r7
 80266ce:	fa0f f888 	sxth.w	r8, r8
 80266d2:	ebaa 0808 	sub.w	r8, sl, r8
 80266d6:	2f00      	cmp	r7, #0
 80266d8:	bfb8      	it	lt
 80266da:	427f      	neglt	r7, r7
 80266dc:	f1b8 0f00 	cmp.w	r8, #0
 80266e0:	bfb8      	it	lt
 80266e2:	f1c8 0800 	rsblt	r8, r8, #0
 80266e6:	45bc      	cmp	ip, r7
 80266e8:	bfcc      	ite	gt
 80266ea:	f10c 0701 	addgt.w	r7, ip, #1
 80266ee:	3701      	addle	r7, #1
 80266f0:	4540      	cmp	r0, r8
 80266f2:	bfc8      	it	gt
 80266f4:	f100 0801 	addgt.w	r8, r0, #1
 80266f8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80266fc:	f100 0001 	add.w	r0, r0, #1
 8026700:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026704:	f04f 0202 	mov.w	r2, #2
 8026708:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802670c:	fb91 f1f2 	sdiv	r1, r1, r2
 8026710:	eba3 0301 	sub.w	r3, r3, r1
 8026714:	bfd8      	it	le
 8026716:	f108 0801 	addle.w	r8, r8, #1
 802671a:	9201      	str	r2, [sp, #4]
 802671c:	930d      	str	r3, [sp, #52]	; 0x34
 802671e:	f7ea fcc9 	bl	80110b4 <_ZN8touchgfx7CWRUtil4sineEi>
 8026722:	a92a      	add	r1, sp, #168	; 0xa8
 8026724:	fb08 f808 	mul.w	r8, r8, r8
 8026728:	f841 0d70 	str.w	r0, [r1, #-112]!
 802672c:	a80d      	add	r0, sp, #52	; 0x34
 802672e:	f7ea fba9 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026732:	fb07 8707 	mla	r7, r7, r7, r8
 8026736:	f04f 0c20 	mov.w	ip, #32
 802673a:	fb90 f0fc 	sdiv	r0, r0, ip
 802673e:	4340      	muls	r0, r0
 8026740:	4287      	cmp	r7, r0
 8026742:	9a01      	ldr	r2, [sp, #4]
 8026744:	da04      	bge.n	8026750 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026746:	2401      	movs	r4, #1
 8026748:	4620      	mov	r0, r4
 802674a:	b02b      	add	sp, #172	; 0xac
 802674c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026750:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026752:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026754:	fb91 f3f2 	sdiv	r3, r1, r2
 8026758:	4403      	add	r3, r0
 802675a:	fb93 f3fc 	sdiv	r3, r3, ip
 802675e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026762:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026766:	440a      	add	r2, r1
 8026768:	b212      	sxth	r2, r2
 802676a:	454a      	cmp	r2, r9
 802676c:	bfa8      	it	ge
 802676e:	464a      	movge	r2, r9
 8026770:	428a      	cmp	r2, r1
 8026772:	bfac      	ite	ge
 8026774:	eba9 0902 	subge.w	r9, r9, r2
 8026778:	eba9 0901 	sublt.w	r9, r9, r1
 802677c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026780:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026784:	440a      	add	r2, r1
 8026786:	b212      	sxth	r2, r2
 8026788:	4552      	cmp	r2, sl
 802678a:	bfa8      	it	ge
 802678c:	4652      	movge	r2, sl
 802678e:	428a      	cmp	r2, r1
 8026790:	bfac      	ite	ge
 8026792:	ebaa 0a02 	subge.w	sl, sl, r2
 8026796:	ebaa 0a01 	sublt.w	sl, sl, r1
 802679a:	3301      	adds	r3, #1
 802679c:	fb0a fa0a 	mul.w	sl, sl, sl
 80267a0:	fb09 a909 	mla	r9, r9, r9, sl
 80267a4:	435b      	muls	r3, r3
 80267a6:	4599      	cmp	r9, r3
 80267a8:	dccd      	bgt.n	8026746 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80267aa:	465a      	mov	r2, fp
 80267ac:	4621      	mov	r1, r4
 80267ae:	a80e      	add	r0, sp, #56	; 0x38
 80267b0:	f7ff faae 	bl	8025d10 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80267b4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80267b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80267b8:	9209      	str	r2, [sp, #36]	; 0x24
 80267ba:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80267be:	930a      	str	r3, [sp, #40]	; 0x28
 80267c0:	dd07      	ble.n	80267d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80267c2:	2102      	movs	r1, #2
 80267c4:	fb93 f3f1 	sdiv	r3, r3, r1
 80267c8:	4413      	add	r3, r2
 80267ca:	930a      	str	r3, [sp, #40]	; 0x28
 80267cc:	fb93 f3f1 	sdiv	r3, r3, r1
 80267d0:	9309      	str	r3, [sp, #36]	; 0x24
 80267d2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80267d6:	4630      	mov	r0, r6
 80267d8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80267dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80267de:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80267e2:	f7ea fc87 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80267e6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80267ea:	f04f 0a02 	mov.w	sl, #2
 80267ee:	f849 0d74 	str.w	r0, [r9, #-116]!
 80267f2:	a80b      	add	r0, sp, #44	; 0x2c
 80267f4:	4649      	mov	r1, r9
 80267f6:	f7ea fb45 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80267fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80267fc:	fb90 f0fa 	sdiv	r0, r0, sl
 8026800:	eb00 0b03 	add.w	fp, r0, r3
 8026804:	4630      	mov	r0, r6
 8026806:	f7ff fcc7 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802680a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802680e:	017f      	lsls	r7, r7, #5
 8026810:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026814:	a80b      	add	r0, sp, #44	; 0x2c
 8026816:	4641      	mov	r1, r8
 8026818:	f7ea fb34 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802681c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802681e:	fb90 f0fa 	sdiv	r0, r0, sl
 8026822:	4659      	mov	r1, fp
 8026824:	1a12      	subs	r2, r2, r0
 8026826:	a80e      	add	r0, sp, #56	; 0x38
 8026828:	f7ff fbf2 	bl	8026010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802682c:	f106 0a20 	add.w	sl, r6, #32
 8026830:	bb67      	cbnz	r7, 802688c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026832:	46b3      	mov	fp, r6
 8026834:	45aa      	cmp	sl, r5
 8026836:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026838:	dc33      	bgt.n	80268a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802683a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802683c:	4650      	mov	r0, sl
 802683e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026842:	920b      	str	r2, [sp, #44]	; 0x2c
 8026844:	f7ea fc56 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026848:	4641      	mov	r1, r8
 802684a:	900c      	str	r0, [sp, #48]	; 0x30
 802684c:	a80b      	add	r0, sp, #44	; 0x2c
 802684e:	f7ea fb19 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026852:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026854:	2302      	movs	r3, #2
 8026856:	fb90 f0f3 	sdiv	r0, r0, r3
 802685a:	eb00 0b02 	add.w	fp, r0, r2
 802685e:	4650      	mov	r0, sl
 8026860:	f7ff fc9a 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026864:	4649      	mov	r1, r9
 8026866:	900d      	str	r0, [sp, #52]	; 0x34
 8026868:	a80b      	add	r0, sp, #44	; 0x2c
 802686a:	f7ea fb0b 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802686e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026870:	2302      	movs	r3, #2
 8026872:	4659      	mov	r1, fp
 8026874:	fb90 f0f3 	sdiv	r0, r0, r3
 8026878:	1a12      	subs	r2, r2, r0
 802687a:	a80e      	add	r0, sp, #56	; 0x38
 802687c:	46d3      	mov	fp, sl
 802687e:	f7ff fc14 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026882:	44ba      	add	sl, r7
 8026884:	e7d6      	b.n	8026834 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026886:	fb93 f3f2 	sdiv	r3, r3, r2
 802688a:	e768      	b.n	802675e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802688c:	fb9a f2f7 	sdiv	r2, sl, r7
 8026890:	fb07 a212 	mls	r2, r7, r2, sl
 8026894:	1aba      	subs	r2, r7, r2
 8026896:	fb92 f1f7 	sdiv	r1, r2, r7
 802689a:	fb07 2211 	mls	r2, r7, r1, r2
 802689e:	4492      	add	sl, r2
 80268a0:	e7c7      	b.n	8026832 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80268a2:	45ab      	cmp	fp, r5
 80268a4:	da23      	bge.n	80268ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80268a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80268a8:	4628      	mov	r0, r5
 80268aa:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80268ae:	920b      	str	r2, [sp, #44]	; 0x2c
 80268b0:	f7ea fc20 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80268b4:	4641      	mov	r1, r8
 80268b6:	900c      	str	r0, [sp, #48]	; 0x30
 80268b8:	a80b      	add	r0, sp, #44	; 0x2c
 80268ba:	f7ea fae3 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80268c0:	f04f 0a02 	mov.w	sl, #2
 80268c4:	fb90 f0fa 	sdiv	r0, r0, sl
 80268c8:	4403      	add	r3, r0
 80268ca:	4628      	mov	r0, r5
 80268cc:	9301      	str	r3, [sp, #4]
 80268ce:	f7ff fc63 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80268d2:	4649      	mov	r1, r9
 80268d4:	900d      	str	r0, [sp, #52]	; 0x34
 80268d6:	a80b      	add	r0, sp, #44	; 0x2c
 80268d8:	f7ea fad4 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268dc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80268de:	9b01      	ldr	r3, [sp, #4]
 80268e0:	fb90 f0fa 	sdiv	r0, r0, sl
 80268e4:	4619      	mov	r1, r3
 80268e6:	1a12      	subs	r2, r2, r0
 80268e8:	a80e      	add	r0, sp, #56	; 0x38
 80268ea:	f7ff fbde 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80268ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80268f0:	b99b      	cbnz	r3, 802691a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80268f2:	1bad      	subs	r5, r5, r6
 80268f4:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80268f8:	da04      	bge.n	8026904 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80268fa:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80268fe:	a80e      	add	r0, sp, #56	; 0x38
 8026900:	f7ff fbd3 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026904:	21ff      	movs	r1, #255	; 0xff
 8026906:	a80e      	add	r0, sp, #56	; 0x38
 8026908:	f7ff fabe 	bl	8025e88 <_ZN8touchgfx6Canvas6renderEh>
 802690c:	4604      	mov	r4, r0
 802690e:	4b8a      	ldr	r3, [pc, #552]	; (8026b38 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026910:	930e      	str	r3, [sp, #56]	; 0x38
 8026912:	a816      	add	r0, sp, #88	; 0x58
 8026914:	f7eb ff22 	bl	801275c <_ZN8touchgfx7OutlineD1Ev>
 8026918:	e716      	b.n	8026748 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802691a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802691e:	429a      	cmp	r2, r3
 8026920:	f0c0 8107 	bcc.w	8026b32 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026924:	1bab      	subs	r3, r5, r6
 8026926:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802692a:	9301      	str	r3, [sp, #4]
 802692c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026930:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026934:	da43      	bge.n	80269be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026936:	4628      	mov	r0, r5
 8026938:	f7ea fbdc 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802693c:	4649      	mov	r1, r9
 802693e:	900d      	str	r0, [sp, #52]	; 0x34
 8026940:	a809      	add	r0, sp, #36	; 0x24
 8026942:	f7ea fa9f 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026946:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026948:	18c3      	adds	r3, r0, r3
 802694a:	4628      	mov	r0, r5
 802694c:	9303      	str	r3, [sp, #12]
 802694e:	f7ff fc23 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026952:	4649      	mov	r1, r9
 8026954:	900d      	str	r0, [sp, #52]	; 0x34
 8026956:	a809      	add	r0, sp, #36	; 0x24
 8026958:	f7ea fa94 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802695c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802695e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026962:	1a1b      	subs	r3, r3, r0
 8026964:	9302      	str	r3, [sp, #8]
 8026966:	9204      	str	r2, [sp, #16]
 8026968:	eb0a 0305 	add.w	r3, sl, r5
 802696c:	9a04      	ldr	r2, [sp, #16]
 802696e:	4293      	cmp	r3, r2
 8026970:	da25      	bge.n	80269be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026972:	4618      	mov	r0, r3
 8026974:	9306      	str	r3, [sp, #24]
 8026976:	f7ea fbbd 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802697a:	4649      	mov	r1, r9
 802697c:	900d      	str	r0, [sp, #52]	; 0x34
 802697e:	a80a      	add	r0, sp, #40	; 0x28
 8026980:	f7ea fa80 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026984:	9b03      	ldr	r3, [sp, #12]
 8026986:	2202      	movs	r2, #2
 8026988:	fb90 f0f2 	sdiv	r0, r0, r2
 802698c:	18c3      	adds	r3, r0, r3
 802698e:	9305      	str	r3, [sp, #20]
 8026990:	9b06      	ldr	r3, [sp, #24]
 8026992:	9207      	str	r2, [sp, #28]
 8026994:	4618      	mov	r0, r3
 8026996:	f7ff fbff 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802699a:	a92a      	add	r1, sp, #168	; 0xa8
 802699c:	f841 0d78 	str.w	r0, [r1, #-120]!
 80269a0:	a80a      	add	r0, sp, #40	; 0x28
 80269a2:	f7ea fa6f 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269a6:	9b02      	ldr	r3, [sp, #8]
 80269a8:	9a07      	ldr	r2, [sp, #28]
 80269aa:	9905      	ldr	r1, [sp, #20]
 80269ac:	fb90 f2f2 	sdiv	r2, r0, r2
 80269b0:	a80e      	add	r0, sp, #56	; 0x38
 80269b2:	1a9a      	subs	r2, r3, r2
 80269b4:	f7ff fb79 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80269b8:	9b06      	ldr	r3, [sp, #24]
 80269ba:	4453      	add	r3, sl
 80269bc:	e7d6      	b.n	802696c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80269be:	45ab      	cmp	fp, r5
 80269c0:	da25      	bge.n	8026a0e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80269c2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80269c6:	4628      	mov	r0, r5
 80269c8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80269cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80269ce:	f7ea fb91 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80269d2:	4641      	mov	r1, r8
 80269d4:	900c      	str	r0, [sp, #48]	; 0x30
 80269d6:	a80b      	add	r0, sp, #44	; 0x2c
 80269d8:	f7ea fa54 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80269de:	2202      	movs	r2, #2
 80269e0:	fb90 f0f2 	sdiv	r0, r0, r2
 80269e4:	eb00 0903 	add.w	r9, r0, r3
 80269e8:	4628      	mov	r0, r5
 80269ea:	9202      	str	r2, [sp, #8]
 80269ec:	f7ff fbd4 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269f0:	a92a      	add	r1, sp, #168	; 0xa8
 80269f2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80269f6:	a80b      	add	r0, sp, #44	; 0x2c
 80269f8:	f7ea fa44 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80269fe:	9a02      	ldr	r2, [sp, #8]
 8026a00:	fb90 f2f2 	sdiv	r2, r0, r2
 8026a04:	4649      	mov	r1, r9
 8026a06:	1a9a      	subs	r2, r3, r2
 8026a08:	a80e      	add	r0, sp, #56	; 0x38
 8026a0a:	f7ff fb4e 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a0e:	46d9      	mov	r9, fp
 8026a10:	2502      	movs	r5, #2
 8026a12:	45b1      	cmp	r9, r6
 8026a14:	db25      	blt.n	8026a62 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026a16:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026a1a:	4648      	mov	r0, r9
 8026a1c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026a20:	930b      	str	r3, [sp, #44]	; 0x2c
 8026a22:	f7ea fb67 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a26:	4641      	mov	r1, r8
 8026a28:	900c      	str	r0, [sp, #48]	; 0x30
 8026a2a:	a80b      	add	r0, sp, #44	; 0x2c
 8026a2c:	f7ea fa2a 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026a32:	fb90 f0f5 	sdiv	r0, r0, r5
 8026a36:	eb00 0b03 	add.w	fp, r0, r3
 8026a3a:	4648      	mov	r0, r9
 8026a3c:	f7ff fbac 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a40:	a90d      	add	r1, sp, #52	; 0x34
 8026a42:	900d      	str	r0, [sp, #52]	; 0x34
 8026a44:	a80b      	add	r0, sp, #44	; 0x2c
 8026a46:	f7ea fa1d 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a4a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026a4c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026a50:	4659      	mov	r1, fp
 8026a52:	1a12      	subs	r2, r2, r0
 8026a54:	a80e      	add	r0, sp, #56	; 0x38
 8026a56:	46cb      	mov	fp, r9
 8026a58:	f7ff fb27 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a5c:	eba9 0907 	sub.w	r9, r9, r7
 8026a60:	e7d7      	b.n	8026a12 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026a62:	455e      	cmp	r6, fp
 8026a64:	da22      	bge.n	8026aac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026a66:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026a6a:	4630      	mov	r0, r6
 8026a6c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026a70:	930b      	str	r3, [sp, #44]	; 0x2c
 8026a72:	f7ea fb3f 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a76:	4641      	mov	r1, r8
 8026a78:	900c      	str	r0, [sp, #48]	; 0x30
 8026a7a:	a80b      	add	r0, sp, #44	; 0x2c
 8026a7c:	f7ea fa02 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a80:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026a82:	2502      	movs	r5, #2
 8026a84:	fb90 f0f5 	sdiv	r0, r0, r5
 8026a88:	4407      	add	r7, r0
 8026a8a:	4630      	mov	r0, r6
 8026a8c:	f7ff fb84 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a90:	a92a      	add	r1, sp, #168	; 0xa8
 8026a92:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026a96:	a80b      	add	r0, sp, #44	; 0x2c
 8026a98:	f7ea f9f4 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a9c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026a9e:	fb90 f0f5 	sdiv	r0, r0, r5
 8026aa2:	4639      	mov	r1, r7
 8026aa4:	1a12      	subs	r2, r2, r0
 8026aa6:	a80e      	add	r0, sp, #56	; 0x38
 8026aa8:	f7ff faff 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026aac:	9b01      	ldr	r3, [sp, #4]
 8026aae:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026ab2:	f6bf af27 	bge.w	8026904 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026ab6:	4630      	mov	r0, r6
 8026ab8:	f7ea fb1c 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026abc:	ad2a      	add	r5, sp, #168	; 0xa8
 8026abe:	f04f 0b02 	mov.w	fp, #2
 8026ac2:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026ac6:	a809      	add	r0, sp, #36	; 0x24
 8026ac8:	4629      	mov	r1, r5
 8026aca:	f7ea f9db 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ace:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ad0:	eb00 0903 	add.w	r9, r0, r3
 8026ad4:	4630      	mov	r0, r6
 8026ad6:	f7ff fb5f 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ada:	4629      	mov	r1, r5
 8026adc:	900d      	str	r0, [sp, #52]	; 0x34
 8026ade:	a809      	add	r0, sp, #36	; 0x24
 8026ae0:	f7ea f9d0 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ae4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026ae6:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026aea:	eba3 0800 	sub.w	r8, r3, r0
 8026aee:	4454      	add	r4, sl
 8026af0:	42a6      	cmp	r6, r4
 8026af2:	f77f af07 	ble.w	8026904 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026af6:	4620      	mov	r0, r4
 8026af8:	f7ea fafc 	bl	80110f4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026afc:	4629      	mov	r1, r5
 8026afe:	900d      	str	r0, [sp, #52]	; 0x34
 8026b00:	a80a      	add	r0, sp, #40	; 0x28
 8026b02:	f7ea f9bf 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b06:	fb90 f0fb 	sdiv	r0, r0, fp
 8026b0a:	eb00 0709 	add.w	r7, r0, r9
 8026b0e:	4620      	mov	r0, r4
 8026b10:	f7ff fb42 	bl	8026198 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b14:	a90c      	add	r1, sp, #48	; 0x30
 8026b16:	900c      	str	r0, [sp, #48]	; 0x30
 8026b18:	a80a      	add	r0, sp, #40	; 0x28
 8026b1a:	f7ea f9b3 	bl	8010e84 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b1e:	4639      	mov	r1, r7
 8026b20:	fb90 f2fb 	sdiv	r2, r0, fp
 8026b24:	a80e      	add	r0, sp, #56	; 0x38
 8026b26:	eba8 0202 	sub.w	r2, r8, r2
 8026b2a:	f7ff fabe 	bl	80260aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026b2e:	4454      	add	r4, sl
 8026b30:	e7de      	b.n	8026af0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026b32:	2400      	movs	r4, #0
 8026b34:	e6eb      	b.n	802690e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026b36:	bf00      	nop
 8026b38:	0802d1a4 	.word	0x0802d1a4

08026b3c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026b3c:	b570      	push	{r4, r5, r6, lr}
 8026b3e:	790b      	ldrb	r3, [r1, #4]
 8026b40:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026b44:	2b00      	cmp	r3, #0
 8026b46:	bf0c      	ite	eq
 8026b48:	2301      	moveq	r3, #1
 8026b4a:	2300      	movne	r3, #0
 8026b4c:	4604      	mov	r4, r0
 8026b4e:	460e      	mov	r6, r1
 8026b50:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026b54:	d109      	bne.n	8026b6a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026b56:	b14d      	cbz	r5, 8026b6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026b58:	7933      	ldrb	r3, [r6, #4]
 8026b5a:	2b01      	cmp	r3, #1
 8026b5c:	d10c      	bne.n	8026b78 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026b5e:	6823      	ldr	r3, [r4, #0]
 8026b60:	4620      	mov	r0, r4
 8026b62:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026b64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026b68:	4718      	bx	r3
 8026b6a:	b12d      	cbz	r5, 8026b78 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026b6c:	6823      	ldr	r3, [r4, #0]
 8026b6e:	4620      	mov	r0, r4
 8026b70:	695b      	ldr	r3, [r3, #20]
 8026b72:	4798      	blx	r3
 8026b74:	2d00      	cmp	r5, #0
 8026b76:	d1ef      	bne.n	8026b58 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026b78:	bd70      	pop	{r4, r5, r6, pc}

08026b7a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8026b7a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8026b7e:	4770      	bx	lr

08026b80 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026b80:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026b84:	4770      	bx	lr

08026b86 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026b86:	6802      	ldr	r2, [r0, #0]
 8026b88:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026b8c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026b8e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026b92:	4710      	bx	r2

08026b94 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026b94:	6802      	ldr	r2, [r0, #0]
 8026b96:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026b9a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026b9c:	eef0 0a40 	vmov.f32	s1, s0
 8026ba0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026ba4:	4710      	bx	r2

08026ba6 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026ba6:	6802      	ldr	r2, [r0, #0]
 8026ba8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026bac:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026bae:	eeb0 1a40 	vmov.f32	s2, s0
 8026bb2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026bb6:	4710      	bx	r2

08026bb8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026bb8:	6802      	ldr	r2, [r0, #0]
 8026bba:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026bbe:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026bc0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026bc4:	4710      	bx	r2

08026bc6 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026bc6:	6802      	ldr	r2, [r0, #0]
 8026bc8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026bcc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026bce:	eef0 0a40 	vmov.f32	s1, s0
 8026bd2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026bd6:	4710      	bx	r2

08026bd8 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026bd8:	6802      	ldr	r2, [r0, #0]
 8026bda:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026bde:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026be0:	eeb0 1a40 	vmov.f32	s2, s0
 8026be4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026be8:	4710      	bx	r2

08026bea <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8026bea:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026bee:	4770      	bx	lr

08026bf0 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026bf0:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026bf4:	4770      	bx	lr

08026bf6 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026bf6:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8026bfa:	4770      	bx	lr

08026bfc <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8026bfc:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026c00:	4770      	bx	lr

08026c02 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026c02:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026c06:	4770      	bx	lr

08026c08 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026c08:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8026c0c:	4770      	bx	lr

08026c0e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8026c0e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026c12:	4770      	bx	lr

08026c14 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026c14:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026c18:	4770      	bx	lr

08026c1a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8026c1a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8026c1e:	4770      	bx	lr

08026c20 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026c20:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026c24:	4770      	bx	lr

08026c26 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026c26:	ee07 2a90 	vmov	s15, r2
 8026c2a:	6803      	ldr	r3, [r0, #0]
 8026c2c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026c30:	ee07 1a90 	vmov	s15, r1
 8026c34:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026c38:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8026c3c:	4718      	bx	r3

08026c3e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8026c3e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026c42:	4770      	bx	lr

08026c44 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026c44:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026c48:	4770      	bx	lr

08026c4a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8026c4a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8026c4e:	4770      	bx	lr

08026c50 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026c50:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026c54:	4770      	bx	lr

08026c56 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026c56:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8026c5a:	4770      	bx	lr

08026c5c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8026c5c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026c60:	4770      	bx	lr

08026c62 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026c62:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026c66:	4770      	bx	lr

08026c68 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026c68:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8026c6c:	4770      	bx	lr

08026c6e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8026c6e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026c72:	4770      	bx	lr

08026c74 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026c74:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026c78:	4770      	bx	lr

08026c7a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8026c7a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8026c7e:	4770      	bx	lr

08026c80 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026c80:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026c84:	4770      	bx	lr

08026c86 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026c86:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8026c8a:	4770      	bx	lr

08026c8c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8026c8c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8026c90:	4770      	bx	lr

08026c92 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8026c92:	b510      	push	{r4, lr}
 8026c94:	ed2d 8b04 	vpush	{d8-d9}
 8026c98:	6803      	ldr	r3, [r0, #0]
 8026c9a:	4604      	mov	r4, r0
 8026c9c:	699b      	ldr	r3, [r3, #24]
 8026c9e:	eeb0 8a40 	vmov.f32	s16, s0
 8026ca2:	eef0 8a60 	vmov.f32	s17, s1
 8026ca6:	eeb0 9a41 	vmov.f32	s18, s2
 8026caa:	4798      	blx	r3
 8026cac:	6823      	ldr	r3, [r4, #0]
 8026cae:	4620      	mov	r0, r4
 8026cb0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8026cb2:	eeb0 1a49 	vmov.f32	s2, s18
 8026cb6:	eef0 0a68 	vmov.f32	s1, s17
 8026cba:	eeb0 0a48 	vmov.f32	s0, s16
 8026cbe:	4798      	blx	r3
 8026cc0:	ecbd 8b04 	vpop	{d8-d9}
 8026cc4:	6823      	ldr	r3, [r4, #0]
 8026cc6:	4620      	mov	r0, r4
 8026cc8:	699b      	ldr	r3, [r3, #24]
 8026cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026cce:	4718      	bx	r3

08026cd0 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026cd0:	b510      	push	{r4, lr}
 8026cd2:	ed2d 8b02 	vpush	{d8}
 8026cd6:	6803      	ldr	r3, [r0, #0]
 8026cd8:	4604      	mov	r4, r0
 8026cda:	699b      	ldr	r3, [r3, #24]
 8026cdc:	eeb0 8a40 	vmov.f32	s16, s0
 8026ce0:	4798      	blx	r3
 8026ce2:	6823      	ldr	r3, [r4, #0]
 8026ce4:	4620      	mov	r0, r4
 8026ce6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8026cea:	eeb0 0a48 	vmov.f32	s0, s16
 8026cee:	4798      	blx	r3
 8026cf0:	ecbd 8b02 	vpop	{d8}
 8026cf4:	6823      	ldr	r3, [r4, #0]
 8026cf6:	4620      	mov	r0, r4
 8026cf8:	699b      	ldr	r3, [r3, #24]
 8026cfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026cfe:	4718      	bx	r3

08026d00 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026d00:	2200      	movs	r2, #0
 8026d02:	8002      	strh	r2, [r0, #0]
 8026d04:	8042      	strh	r2, [r0, #2]
 8026d06:	8082      	strh	r2, [r0, #4]
 8026d08:	80c2      	strh	r2, [r0, #6]
 8026d0a:	4770      	bx	lr

08026d0c <_ZN8touchgfx13TextureMapperD1Ev>:
 8026d0c:	4770      	bx	lr

08026d0e <_ZN8touchgfx13TextureMapperD0Ev>:
 8026d0e:	b510      	push	{r4, lr}
 8026d10:	2190      	movs	r1, #144	; 0x90
 8026d12:	4604      	mov	r4, r0
 8026d14:	f000 fe1b 	bl	802794e <_ZdlPvj>
 8026d18:	4620      	mov	r0, r4
 8026d1a:	bd10      	pop	{r4, pc}

08026d1c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8026d1c:	b538      	push	{r3, r4, r5, lr}
 8026d1e:	2500      	movs	r5, #0
 8026d20:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026d24:	2301      	movs	r3, #1
 8026d26:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8026d2a:	4b1f      	ldr	r3, [pc, #124]	; (8026da8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8026d2c:	8085      	strh	r5, [r0, #4]
 8026d2e:	80c5      	strh	r5, [r0, #6]
 8026d30:	8105      	strh	r5, [r0, #8]
 8026d32:	8145      	strh	r5, [r0, #10]
 8026d34:	8185      	strh	r5, [r0, #12]
 8026d36:	81c5      	strh	r5, [r0, #14]
 8026d38:	8205      	strh	r5, [r0, #16]
 8026d3a:	8245      	strh	r5, [r0, #18]
 8026d3c:	61c5      	str	r5, [r0, #28]
 8026d3e:	8405      	strh	r5, [r0, #32]
 8026d40:	8445      	strh	r5, [r0, #34]	; 0x22
 8026d42:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026d46:	6003      	str	r3, [r0, #0]
 8026d48:	880b      	ldrh	r3, [r1, #0]
 8026d4a:	84c3      	strh	r3, [r0, #38]	; 0x26
 8026d4c:	23ff      	movs	r3, #255	; 0xff
 8026d4e:	4604      	mov	r4, r0
 8026d50:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026d54:	f7eb fb93 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026d58:	4b14      	ldr	r3, [pc, #80]	; (8026dac <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8026d5a:	6023      	str	r3, [r4, #0]
 8026d5c:	2300      	movs	r3, #0
 8026d5e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026d62:	4913      	ldr	r1, [pc, #76]	; (8026db0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026d64:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026d66:	6323      	str	r3, [r4, #48]	; 0x30
 8026d68:	6363      	str	r3, [r4, #52]	; 0x34
 8026d6a:	63a3      	str	r3, [r4, #56]	; 0x38
 8026d6c:	63e3      	str	r3, [r4, #60]	; 0x3c
 8026d6e:	6463      	str	r3, [r4, #68]	; 0x44
 8026d70:	64a3      	str	r3, [r4, #72]	; 0x48
 8026d72:	6523      	str	r3, [r4, #80]	; 0x50
 8026d74:	6563      	str	r3, [r4, #84]	; 0x54
 8026d76:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026d78:	6623      	str	r3, [r4, #96]	; 0x60
 8026d7a:	66a3      	str	r3, [r4, #104]	; 0x68
 8026d7c:	66e3      	str	r3, [r4, #108]	; 0x6c
 8026d7e:	6763      	str	r3, [r4, #116]	; 0x74
 8026d80:	67a3      	str	r3, [r4, #120]	; 0x78
 8026d82:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026d86:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8026d8a:	230c      	movs	r3, #12
 8026d8c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8026d90:	6422      	str	r2, [r4, #64]	; 0x40
 8026d92:	64e1      	str	r1, [r4, #76]	; 0x4c
 8026d94:	65a1      	str	r1, [r4, #88]	; 0x58
 8026d96:	6662      	str	r2, [r4, #100]	; 0x64
 8026d98:	6722      	str	r2, [r4, #112]	; 0x70
 8026d9a:	67e2      	str	r2, [r4, #124]	; 0x7c
 8026d9c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8026da0:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8026da4:	4620      	mov	r0, r4
 8026da6:	bd38      	pop	{r3, r4, r5, pc}
 8026da8:	0802cc4c 	.word	0x0802cc4c
 8026dac:	0802d230 	.word	0x0802d230
 8026db0:	447a0000 	.word	0x447a0000

08026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8026db4:	b570      	push	{r4, r5, r6, lr}
 8026db6:	ed2d 8b04 	vpush	{d8-d9}
 8026dba:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8026dbe:	add0      	add	r5, sp, #832	; 0x340
 8026dc0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8026dc2:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8026dc6:	4604      	mov	r4, r0
 8026dc8:	4628      	mov	r0, r5
 8026dca:	f7f1 fa7f 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026dce:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026dd0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026dd4:	4606      	mov	r6, r0
 8026dd6:	4628      	mov	r0, r5
 8026dd8:	f7f1 faac 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026ddc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8026de0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8026de4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026de6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8026dea:	9312      	str	r3, [sp, #72]	; 0x48
 8026dec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026df0:	1c72      	adds	r2, r6, #1
 8026df2:	3001      	adds	r0, #1
 8026df4:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026df8:	ee07 2a90 	vmov	s15, r2
 8026dfc:	ee06 0a90 	vmov	s13, r0
 8026e00:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026e04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026e08:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026e0c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026e10:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026e14:	9316      	str	r3, [sp, #88]	; 0x58
 8026e16:	931a      	str	r3, [sp, #104]	; 0x68
 8026e18:	931e      	str	r3, [sp, #120]	; 0x78
 8026e1a:	2300      	movs	r3, #0
 8026e1c:	9320      	str	r3, [sp, #128]	; 0x80
 8026e1e:	9321      	str	r3, [sp, #132]	; 0x84
 8026e20:	9322      	str	r3, [sp, #136]	; 0x88
 8026e22:	9324      	str	r3, [sp, #144]	; 0x90
 8026e24:	9325      	str	r3, [sp, #148]	; 0x94
 8026e26:	9326      	str	r3, [sp, #152]	; 0x98
 8026e28:	9328      	str	r3, [sp, #160]	; 0xa0
 8026e2a:	9329      	str	r3, [sp, #164]	; 0xa4
 8026e2c:	932a      	str	r3, [sp, #168]	; 0xa8
 8026e2e:	932c      	str	r3, [sp, #176]	; 0xb0
 8026e30:	932d      	str	r3, [sp, #180]	; 0xb4
 8026e32:	932e      	str	r3, [sp, #184]	; 0xb8
 8026e34:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026e38:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026e3c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026e40:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026e44:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026e48:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026e4c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026e50:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026e54:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026e58:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026e5c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026e60:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026e64:	a830      	add	r0, sp, #192	; 0xc0
 8026e66:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8026e6a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8026e6e:	f000 fc43 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026e72:	eeb1 0a49 	vneg.f32	s0, s18
 8026e76:	a830      	add	r0, sp, #192	; 0xc0
 8026e78:	f000 fd12 	bl	80278a0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026e7c:	eeb1 0a68 	vneg.f32	s0, s17
 8026e80:	f000 fd1c 	bl	80278bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026e84:	eeb1 0a48 	vneg.f32	s0, s16
 8026e88:	f000 fd27 	bl	80278da <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026e8c:	a840      	add	r0, sp, #256	; 0x100
 8026e8e:	f000 fc33 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026e92:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026e96:	a840      	add	r0, sp, #256	; 0x100
 8026e98:	f000 fc86 	bl	80277a8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8026e9c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026ea0:	f000 fcac 	bl	80277fc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026ea4:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026ea8:	f000 fcd1 	bl	802784e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8026eac:	a850      	add	r0, sp, #320	; 0x140
 8026eae:	f000 fc23 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026eb2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026eb6:	a850      	add	r0, sp, #320	; 0x140
 8026eb8:	f000 fd1e 	bl	80278f8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8026ebc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ec0:	f000 fd26 	bl	8027910 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026ec4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ec8:	f000 fd2f 	bl	802792a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8026ecc:	a860      	add	r0, sp, #384	; 0x180
 8026ece:	f000 fc13 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026ed2:	eeb0 0a49 	vmov.f32	s0, s18
 8026ed6:	a860      	add	r0, sp, #384	; 0x180
 8026ed8:	f000 fce2 	bl	80278a0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026edc:	eeb0 0a68 	vmov.f32	s0, s17
 8026ee0:	f000 fcec 	bl	80278bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026ee4:	eeb0 0a48 	vmov.f32	s0, s16
 8026ee8:	f000 fcf7 	bl	80278da <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026eec:	aa50      	add	r2, sp, #320	; 0x140
 8026eee:	a960      	add	r1, sp, #384	; 0x180
 8026ef0:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026ef2:	f000 fc1b 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026ef6:	4628      	mov	r0, r5
 8026ef8:	aa40      	add	r2, sp, #256	; 0x100
 8026efa:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026efc:	f000 fc16 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f00:	4629      	mov	r1, r5
 8026f02:	aa30      	add	r2, sp, #192	; 0xc0
 8026f04:	a870      	add	r0, sp, #448	; 0x1c0
 8026f06:	f000 fc11 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f0a:	a880      	add	r0, sp, #512	; 0x200
 8026f0c:	f000 fbf4 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f10:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026f14:	a880      	add	r0, sp, #512	; 0x200
 8026f16:	eeb1 0a40 	vneg.f32	s0, s0
 8026f1a:	f000 fcc1 	bl	80278a0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026f1e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026f22:	a880      	add	r0, sp, #512	; 0x200
 8026f24:	eeb1 0a40 	vneg.f32	s0, s0
 8026f28:	f000 fcc8 	bl	80278bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026f2c:	a890      	add	r0, sp, #576	; 0x240
 8026f2e:	f000 fbe3 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f32:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8026f36:	a890      	add	r0, sp, #576	; 0x240
 8026f38:	f000 fc26 	bl	8027788 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8026f3c:	a8a0      	add	r0, sp, #640	; 0x280
 8026f3e:	f000 fbdb 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026f42:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026f46:	a8a0      	add	r0, sp, #640	; 0x280
 8026f48:	f000 fcaa 	bl	80278a0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026f4c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026f50:	f000 fcb4 	bl	80278bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026f54:	aa90      	add	r2, sp, #576	; 0x240
 8026f56:	a9a0      	add	r1, sp, #640	; 0x280
 8026f58:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026f5a:	f000 fbe7 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f5e:	4628      	mov	r0, r5
 8026f60:	aa80      	add	r2, sp, #512	; 0x200
 8026f62:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026f64:	f000 fbe2 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f68:	4629      	mov	r1, r5
 8026f6a:	aa70      	add	r2, sp, #448	; 0x1c0
 8026f6c:	4668      	mov	r0, sp
 8026f6e:	466d      	mov	r5, sp
 8026f70:	f000 fbdc 	bl	802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026f74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026f76:	ae70      	add	r6, sp, #448	; 0x1c0
 8026f78:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026f7a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026f7c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026f7e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026f80:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026f82:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8026f86:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8026f8a:	2500      	movs	r5, #0
 8026f8c:	0129      	lsls	r1, r5, #4
 8026f8e:	ab20      	add	r3, sp, #128	; 0x80
 8026f90:	185e      	adds	r6, r3, r1
 8026f92:	ab10      	add	r3, sp, #64	; 0x40
 8026f94:	4419      	add	r1, r3
 8026f96:	a870      	add	r0, sp, #448	; 0x1c0
 8026f98:	f000 fb7e 	bl	8027698 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8026f9c:	3501      	adds	r5, #1
 8026f9e:	2d04      	cmp	r5, #4
 8026fa0:	ed86 0a00 	vstr	s0, [r6]
 8026fa4:	edc6 0a01 	vstr	s1, [r6, #4]
 8026fa8:	ed86 1a02 	vstr	s2, [r6, #8]
 8026fac:	edc6 1a03 	vstr	s3, [r6, #12]
 8026fb0:	d1ec      	bne.n	8026f8c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8026fb2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8026fb6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8026fba:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8026fbe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026fc2:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8026fc6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026fca:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8026fce:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8026fd2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026fd6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026fda:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8026fde:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8026fe2:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8026fe6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026fea:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8026fee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026ff2:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8026ff6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8026ffa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026ffe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027002:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8027006:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802700a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802700e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027012:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8027016:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802701a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802701e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8027022:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027026:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802702a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802702e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8027032:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8027036:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802703a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802703e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027042:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8027046:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802704a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802704e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8027052:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8027056:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802705a:	ecbd 8b04 	vpop	{d8-d9}
 802705e:	bd70      	pop	{r4, r5, r6, pc}

08027060 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027060:	b510      	push	{r4, lr}
 8027062:	4604      	mov	r4, r0
 8027064:	f7eb fa0b 	bl	801247e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027068:	4620      	mov	r0, r4
 802706a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802706e:	f7ff bea1 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027072 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8027072:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8027076:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802707a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802707e:	f7ff be99 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027082 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8027082:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8027086:	f7ff be95 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802708a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802708a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802708e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8027092:	f7ff be8f 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027096 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8027096:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802709a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802709e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270a2:	bfd8      	it	le
 80270a4:	eeb0 0a67 	vmovle.f32	s0, s15
 80270a8:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80270ac:	f7ff be82 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080270b0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80270b0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80270b4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80270b8:	f7ff be7c 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080270bc <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80270bc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80270c0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80270c4:	f7ff be76 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080270c8 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80270c8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80270cc:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80270d0:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80270d4:	f7ff be6e 	b.w	8026db4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080270d8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80270d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80270dc:	ed2d 8b04 	vpush	{d8-d9}
 80270e0:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80270e4:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80270e8:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80270ec:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80270f0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80270f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270f8:	bf54      	ite	pl
 80270fa:	eeb0 0a69 	vmovpl.f32	s0, s19
 80270fe:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027102:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027106:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802710a:	bfd8      	it	le
 802710c:	eeb0 0a49 	vmovle.f32	s0, s18
 8027110:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027118:	bfd8      	it	le
 802711a:	eeb0 0a68 	vmovle.f32	s0, s17
 802711e:	460c      	mov	r4, r1
 8027120:	4607      	mov	r7, r0
 8027122:	f000 fd09 	bl	8027b38 <floorf>
 8027126:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802712a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802712e:	bf58      	it	pl
 8027130:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027134:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027138:	bf56      	itet	pl
 802713a:	ee10 3a10 	vmovpl	r3, s0
 802713e:	2600      	movmi	r6, #0
 8027140:	b21e      	sxthpl	r6, r3
 8027142:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027146:	bfd8      	it	le
 8027148:	eeb0 8a69 	vmovle.f32	s16, s19
 802714c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027150:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027154:	bf58      	it	pl
 8027156:	eeb0 8a49 	vmovpl.f32	s16, s18
 802715a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802715e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027162:	bf54      	ite	pl
 8027164:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027168:	eeb0 0a48 	vmovmi.f32	s0, s16
 802716c:	f000 fca2 	bl	8027ab4 <ceilf>
 8027170:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8027174:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027178:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802717c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027180:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027184:	ee07 8a90 	vmov	s15, r8
 8027188:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802718c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027190:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027194:	bfd8      	it	le
 8027196:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802719a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802719e:	bfdc      	itt	le
 80271a0:	ee10 3a10 	vmovle	r3, s0
 80271a4:	fa0f f883 	sxthle.w	r8, r3
 80271a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271ac:	bf54      	ite	pl
 80271ae:	eeb0 0a69 	vmovpl.f32	s0, s19
 80271b2:	eeb0 0a48 	vmovmi.f32	s0, s16
 80271b6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80271ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271be:	bfd8      	it	le
 80271c0:	eeb0 0a49 	vmovle.f32	s0, s18
 80271c4:	eef4 8ac0 	vcmpe.f32	s17, s0
 80271c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271cc:	bfd8      	it	le
 80271ce:	eeb0 0a68 	vmovle.f32	s0, s17
 80271d2:	f000 fcb1 	bl	8027b38 <floorf>
 80271d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80271da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271de:	bf58      	it	pl
 80271e0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80271e4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80271e8:	bf56      	itet	pl
 80271ea:	ee10 3a10 	vmovpl	r3, s0
 80271ee:	2500      	movmi	r5, #0
 80271f0:	b21d      	sxthpl	r5, r3
 80271f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271f6:	bfd8      	it	le
 80271f8:	eeb0 8a69 	vmovle.f32	s16, s19
 80271fc:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027204:	bf58      	it	pl
 8027206:	eeb0 8a49 	vmovpl.f32	s16, s18
 802720a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802720e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027212:	bf54      	ite	pl
 8027214:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027218:	eeb0 0a48 	vmovmi.f32	s0, s16
 802721c:	f000 fc4a 	bl	8027ab4 <ceilf>
 8027220:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8027224:	803e      	strh	r6, [r7, #0]
 8027226:	ee07 3a90 	vmov	s15, r3
 802722a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802722e:	807d      	strh	r5, [r7, #2]
 8027230:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027238:	bfd8      	it	le
 802723a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802723e:	eba8 0606 	sub.w	r6, r8, r6
 8027242:	bfdc      	itt	le
 8027244:	ee10 3a10 	vmovle	r3, s0
 8027248:	b21b      	sxthle	r3, r3
 802724a:	1b5d      	subs	r5, r3, r5
 802724c:	80be      	strh	r6, [r7, #4]
 802724e:	80fd      	strh	r5, [r7, #6]
 8027250:	ecbd 8b04 	vpop	{d8-d9}
 8027254:	4638      	mov	r0, r7
 8027256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802725a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802725a:	b513      	push	{r0, r1, r4, lr}
 802725c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027260:	4604      	mov	r4, r0
 8027262:	b143      	cbz	r3, 8027276 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8027264:	4601      	mov	r1, r0
 8027266:	4668      	mov	r0, sp
 8027268:	f7ff ff36 	bl	80270d8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802726c:	6823      	ldr	r3, [r4, #0]
 802726e:	4669      	mov	r1, sp
 8027270:	691b      	ldr	r3, [r3, #16]
 8027272:	4620      	mov	r0, r4
 8027274:	4798      	blx	r3
 8027276:	b002      	add	sp, #8
 8027278:	bd10      	pop	{r4, pc}

0802727a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802727a:	4603      	mov	r3, r0
 802727c:	3026      	adds	r0, #38	; 0x26
 802727e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027282:	b90b      	cbnz	r3, 8027288 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027284:	f7ef b82c 	b.w	80162e0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027288:	f7ef b83a 	b.w	8016300 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802728c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802728c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027290:	ed2d 8b04 	vpush	{d8-d9}
 8027294:	4604      	mov	r4, r0
 8027296:	469b      	mov	fp, r3
 8027298:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802729c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80272a0:	f9b1 6000 	ldrsh.w	r6, [r1]
 80272a4:	8888      	ldrh	r0, [r1, #4]
 80272a6:	b0b3      	sub	sp, #204	; 0xcc
 80272a8:	4430      	add	r0, r6
 80272aa:	b280      	uxth	r0, r0
 80272ac:	9206      	str	r2, [sp, #24]
 80272ae:	fa0f fe80 	sxth.w	lr, r0
 80272b2:	2200      	movs	r2, #0
 80272b4:	4596      	cmp	lr, r2
 80272b6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80272ba:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80272be:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80272c2:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80272c4:	9211      	str	r2, [sp, #68]	; 0x44
 80272c6:	f340 8129 	ble.w	802751c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80272ca:	45b4      	cmp	ip, r6
 80272cc:	f340 8126 	ble.w	802751c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80272d0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80272d4:	88ca      	ldrh	r2, [r1, #6]
 80272d6:	442a      	add	r2, r5
 80272d8:	b292      	uxth	r2, r2
 80272da:	b211      	sxth	r1, r2
 80272dc:	2900      	cmp	r1, #0
 80272de:	f340 811d 	ble.w	802751c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80272e2:	42ab      	cmp	r3, r5
 80272e4:	f340 811a 	ble.w	802751c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80272e8:	45f4      	cmp	ip, lr
 80272ea:	bfb8      	it	lt
 80272ec:	fa1f f08c 	uxthlt.w	r0, ip
 80272f0:	428b      	cmp	r3, r1
 80272f2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80272f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80272fa:	bfb8      	it	lt
 80272fc:	b29a      	uxthlt	r2, r3
 80272fe:	1b80      	subs	r0, r0, r6
 8027300:	1b52      	subs	r2, r2, r5
 8027302:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8027306:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802730a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802730e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8027312:	ab11      	add	r3, sp, #68	; 0x44
 8027314:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027318:	6822      	ldr	r2, [r4, #0]
 802731a:	9307      	str	r3, [sp, #28]
 802731c:	ad13      	add	r5, sp, #76	; 0x4c
 802731e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027320:	e885 0003 	stmia.w	r5, {r0, r1}
 8027324:	4629      	mov	r1, r5
 8027326:	4620      	mov	r0, r4
 8027328:	4790      	blx	r2
 802732a:	4621      	mov	r1, r4
 802732c:	a815      	add	r0, sp, #84	; 0x54
 802732e:	f7ee ff33 	bl	8016198 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8027332:	a815      	add	r0, sp, #84	; 0x54
 8027334:	f7ed fbf8 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027338:	9b07      	ldr	r3, [sp, #28]
 802733a:	1d26      	adds	r6, r4, #4
 802733c:	4618      	mov	r0, r3
 802733e:	4631      	mov	r1, r6
 8027340:	f7ed fc36 	bl	8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027344:	4628      	mov	r0, r5
 8027346:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802734a:	f7ed fbed 	bl	8014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802734e:	4628      	mov	r0, r5
 8027350:	f7f1 f8a8 	bl	80184a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8027354:	9007      	str	r0, [sp, #28]
 8027356:	2800      	cmp	r0, #0
 8027358:	f000 80db 	beq.w	8027512 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802735c:	f8db 2000 	ldr.w	r2, [fp]
 8027360:	9209      	str	r2, [sp, #36]	; 0x24
 8027362:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027366:	920a      	str	r2, [sp, #40]	; 0x28
 8027368:	f8db 2008 	ldr.w	r2, [fp, #8]
 802736c:	920b      	str	r2, [sp, #44]	; 0x2c
 802736e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027372:	920c      	str	r2, [sp, #48]	; 0x30
 8027374:	f8da 2000 	ldr.w	r2, [sl]
 8027378:	920d      	str	r2, [sp, #52]	; 0x34
 802737a:	f8da 2004 	ldr.w	r2, [sl, #4]
 802737e:	920e      	str	r2, [sp, #56]	; 0x38
 8027380:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027384:	920f      	str	r2, [sp, #60]	; 0x3c
 8027386:	f8da 200c 	ldr.w	r2, [sl, #12]
 802738a:	9210      	str	r2, [sp, #64]	; 0x40
 802738c:	a90d      	add	r1, sp, #52	; 0x34
 802738e:	4632      	mov	r2, r6
 8027390:	a809      	add	r0, sp, #36	; 0x24
 8027392:	f7ed fbf1 	bl	8014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027396:	4632      	mov	r2, r6
 8027398:	a90e      	add	r1, sp, #56	; 0x38
 802739a:	a80a      	add	r0, sp, #40	; 0x28
 802739c:	f7ed fbec 	bl	8014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80273a0:	4632      	mov	r2, r6
 80273a2:	a90f      	add	r1, sp, #60	; 0x3c
 80273a4:	a80b      	add	r0, sp, #44	; 0x2c
 80273a6:	f7ed fbe7 	bl	8014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80273aa:	4632      	mov	r2, r6
 80273ac:	a910      	add	r1, sp, #64	; 0x40
 80273ae:	a80c      	add	r0, sp, #48	; 0x30
 80273b0:	f7ed fbe2 	bl	8014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80273b4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80273b8:	edd7 4a00 	vldr	s9, [r7]
 80273bc:	edd7 5a01 	vldr	s11, [r7, #4]
 80273c0:	ed98 4a00 	vldr	s8, [r8]
 80273c4:	ed98 5a01 	vldr	s10, [r8, #4]
 80273c8:	ed99 9a00 	vldr	s18, [r9]
 80273cc:	ed99 8a01 	vldr	s16, [r9, #4]
 80273d0:	edd9 8a02 	vldr	s17, [r9, #8]
 80273d4:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80273d8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80273dc:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80273e0:	eef0 6a67 	vmov.f32	s13, s15
 80273e4:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80273e8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80273ec:	eeb0 7a67 	vmov.f32	s14, s15
 80273f0:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80273f4:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80273f8:	eeb0 6a67 	vmov.f32	s12, s15
 80273fc:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027400:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027404:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027408:	ee16 6a10 	vmov	r6, s12
 802740c:	eeb0 6a67 	vmov.f32	s12, s15
 8027410:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027414:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027418:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802741c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027420:	68ff      	ldr	r7, [r7, #12]
 8027422:	9624      	str	r6, [sp, #144]	; 0x90
 8027424:	ee16 0a10 	vmov	r0, s12
 8027428:	eeb0 6a67 	vmov.f32	s12, s15
 802742c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027430:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027434:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027438:	ee16 1a10 	vmov	r1, s12
 802743c:	eeb0 6a67 	vmov.f32	s12, s15
 8027440:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027444:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027448:	ee16 2a10 	vmov	r2, s12
 802744c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027450:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027454:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027458:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802745c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027460:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027464:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027468:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802746c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027470:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027474:	922d      	str	r2, [sp, #180]	; 0xb4
 8027476:	4a2b      	ldr	r2, [pc, #172]	; (8027524 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027478:	9b06      	ldr	r3, [sp, #24]
 802747a:	8812      	ldrh	r2, [r2, #0]
 802747c:	9317      	str	r3, [sp, #92]	; 0x5c
 802747e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027482:	9b07      	ldr	r3, [sp, #28]
 8027484:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027488:	4628      	mov	r0, r5
 802748a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802748e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027492:	9218      	str	r2, [sp, #96]	; 0x60
 8027494:	9319      	str	r3, [sp, #100]	; 0x64
 8027496:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802749a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802749e:	9731      	str	r7, [sp, #196]	; 0xc4
 80274a0:	f7f1 f830 	bl	8018504 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80274a4:	901a      	str	r0, [sp, #104]	; 0x68
 80274a6:	4628      	mov	r0, r5
 80274a8:	f7f0 ff10 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80274ac:	901b      	str	r0, [sp, #108]	; 0x6c
 80274ae:	4628      	mov	r0, r5
 80274b0:	f7f0 ff40 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80274b4:	901c      	str	r0, [sp, #112]	; 0x70
 80274b6:	4628      	mov	r0, r5
 80274b8:	f7f0 ff08 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80274bc:	eeb4 9a48 	vcmp.f32	s18, s16
 80274c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80274c4:	901d      	str	r0, [sp, #116]	; 0x74
 80274c6:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80274ca:	d107      	bne.n	80274dc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80274cc:	eeb4 8a68 	vcmp.f32	s16, s17
 80274d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80274d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80274d8:	bf08      	it	eq
 80274da:	461e      	moveq	r6, r3
 80274dc:	4b12      	ldr	r3, [pc, #72]	; (8027528 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80274de:	681b      	ldr	r3, [r3, #0]
 80274e0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80274e4:	b10a      	cbz	r2, 80274ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80274e6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80274e8:	b905      	cbnz	r5, 80274ec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80274ea:	689d      	ldr	r5, [r3, #8]
 80274ec:	682b      	ldr	r3, [r5, #0]
 80274ee:	4620      	mov	r0, r4
 80274f0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80274f2:	f7ff fec2 	bl	802727a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80274f6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80274fa:	9604      	str	r6, [sp, #16]
 80274fc:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027500:	ab13      	add	r3, sp, #76	; 0x4c
 8027502:	9301      	str	r3, [sp, #4]
 8027504:	ab15      	add	r3, sp, #84	; 0x54
 8027506:	9300      	str	r3, [sp, #0]
 8027508:	aa1e      	add	r2, sp, #120	; 0x78
 802750a:	ab19      	add	r3, sp, #100	; 0x64
 802750c:	a917      	add	r1, sp, #92	; 0x5c
 802750e:	4628      	mov	r0, r5
 8027510:	47b8      	blx	r7
 8027512:	b033      	add	sp, #204	; 0xcc
 8027514:	ecbd 8b04 	vpop	{d8-d9}
 8027518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802751c:	2300      	movs	r3, #0
 802751e:	9312      	str	r3, [sp, #72]	; 0x48
 8027520:	e6f7      	b.n	8027312 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027522:	bf00      	nop
 8027524:	200137c6 	.word	0x200137c6
 8027528:	200137cc 	.word	0x200137cc

0802752c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802752c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027530:	ed2d 8b02 	vpush	{d8}
 8027534:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027538:	b098      	sub	sp, #96	; 0x60
 802753a:	4604      	mov	r4, r0
 802753c:	4688      	mov	r8, r1
 802753e:	2b00      	cmp	r3, #0
 8027540:	d077      	beq.n	8027632 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027542:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027546:	4628      	mov	r0, r5
 8027548:	f7f0 fec0 	bl	80182cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802754c:	ee07 0a90 	vmov	s15, r0
 8027550:	4628      	mov	r0, r5
 8027552:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027556:	f7f0 feed 	bl	8018334 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802755a:	4b4e      	ldr	r3, [pc, #312]	; (8027694 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802755c:	781b      	ldrb	r3, [r3, #0]
 802755e:	ee07 0a90 	vmov	s15, r0
 8027562:	2b01      	cmp	r3, #1
 8027564:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027568:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802756c:	d066      	beq.n	802763c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802756e:	eeb0 6a47 	vmov.f32	s12, s14
 8027572:	ee17 3a10 	vmov	r3, s14
 8027576:	eeb0 4a48 	vmov.f32	s8, s16
 802757a:	eeb0 7a48 	vmov.f32	s14, s16
 802757e:	eef0 4a67 	vmov.f32	s9, s15
 8027582:	eeb0 8a67 	vmov.f32	s16, s15
 8027586:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802758a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802758e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027592:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027596:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802759a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802759e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80275a0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80275a2:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80275a4:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80275a8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80275ac:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80275b0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80275b4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80275b8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80275bc:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80275c0:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80275c4:	eee1 6a21 	vfma.f32	s13, s2, s3
 80275c8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80275cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275d0:	dd3d      	ble.n	802764e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80275d2:	ed8d 5a04 	vstr	s10, [sp, #16]
 80275d6:	ed8d 2a05 	vstr	s4, [sp, #20]
 80275da:	edcd 2a06 	vstr	s5, [sp, #24]
 80275de:	f8cd c01c 	str.w	ip, [sp, #28]
 80275e2:	edcd 5a08 	vstr	s11, [sp, #32]
 80275e6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80275ea:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80275ee:	970b      	str	r7, [sp, #44]	; 0x2c
 80275f0:	960c      	str	r6, [sp, #48]	; 0x30
 80275f2:	950d      	str	r5, [sp, #52]	; 0x34
 80275f4:	920e      	str	r2, [sp, #56]	; 0x38
 80275f6:	900f      	str	r0, [sp, #60]	; 0x3c
 80275f8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80275fc:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027600:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027604:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027608:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802760c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027610:	9316      	str	r3, [sp, #88]	; 0x58
 8027612:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027616:	ab14      	add	r3, sp, #80	; 0x50
 8027618:	9303      	str	r3, [sp, #12]
 802761a:	ab10      	add	r3, sp, #64	; 0x40
 802761c:	9302      	str	r3, [sp, #8]
 802761e:	ab0c      	add	r3, sp, #48	; 0x30
 8027620:	9301      	str	r3, [sp, #4]
 8027622:	ab08      	add	r3, sp, #32
 8027624:	9300      	str	r3, [sp, #0]
 8027626:	2200      	movs	r2, #0
 8027628:	ab04      	add	r3, sp, #16
 802762a:	4641      	mov	r1, r8
 802762c:	4620      	mov	r0, r4
 802762e:	f7ff fe2d 	bl	802728c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027632:	b018      	add	sp, #96	; 0x60
 8027634:	ecbd 8b02 	vpop	{d8}
 8027638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802763c:	eeb0 6a48 	vmov.f32	s12, s16
 8027640:	eef0 4a47 	vmov.f32	s9, s14
 8027644:	ee17 3a90 	vmov	r3, s15
 8027648:	eeb0 4a67 	vmov.f32	s8, s15
 802764c:	e79b      	b.n	8027586 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802764e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027652:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027656:	f8cd c018 	str.w	ip, [sp, #24]
 802765a:	edcd 2a07 	vstr	s5, [sp, #28]
 802765e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027662:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027666:	970a      	str	r7, [sp, #40]	; 0x28
 8027668:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802766c:	960d      	str	r6, [sp, #52]	; 0x34
 802766e:	950c      	str	r5, [sp, #48]	; 0x30
 8027670:	900e      	str	r0, [sp, #56]	; 0x38
 8027672:	920f      	str	r2, [sp, #60]	; 0x3c
 8027674:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027678:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802767c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027680:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027684:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027688:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802768c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027690:	9317      	str	r3, [sp, #92]	; 0x5c
 8027692:	e7c0      	b.n	8027616 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027694:	200137c4 	.word	0x200137c4

08027698 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027698:	b5f0      	push	{r4, r5, r6, r7, lr}
 802769a:	b08d      	sub	sp, #52	; 0x34
 802769c:	2300      	movs	r3, #0
 802769e:	9304      	str	r3, [sp, #16]
 80276a0:	9305      	str	r3, [sp, #20]
 80276a2:	9306      	str	r3, [sp, #24]
 80276a4:	aa04      	add	r2, sp, #16
 80276a6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80276aa:	9307      	str	r3, [sp, #28]
 80276ac:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80276b0:	4613      	mov	r3, r2
 80276b2:	f101 0710 	add.w	r7, r1, #16
 80276b6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80276f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80276ba:	460c      	mov	r4, r1
 80276bc:	4605      	mov	r5, r0
 80276be:	ecb4 7a01 	vldmia	r4!, {s14}
 80276c2:	ecf5 6a01 	vldmia	r5!, {s13}
 80276c6:	42bc      	cmp	r4, r7
 80276c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80276cc:	d1f7      	bne.n	80276be <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80276ce:	3010      	adds	r0, #16
 80276d0:	42b0      	cmp	r0, r6
 80276d2:	ece2 7a01 	vstmia	r2!, {s15}
 80276d6:	d1ee      	bne.n	80276b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80276d8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80276da:	ac0c      	add	r4, sp, #48	; 0x30
 80276dc:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80276e0:	ed9d 0a08 	vldr	s0, [sp, #32]
 80276e4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80276e8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80276ec:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80276f0:	b00d      	add	sp, #52	; 0x34
 80276f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80276f4:	00000000 	.word	0x00000000

080276f8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80276f8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027728 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80276fc:	2300      	movs	r3, #0
 80276fe:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027702:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027706:	2200      	movs	r2, #0
 8027708:	4293      	cmp	r3, r2
 802770a:	f102 0201 	add.w	r2, r2, #1
 802770e:	bf14      	ite	ne
 8027710:	eef0 6a47 	vmovne.f32	s13, s14
 8027714:	eef0 6a67 	vmoveq.f32	s13, s15
 8027718:	2a04      	cmp	r2, #4
 802771a:	ece1 6a01 	vstmia	r1!, {s13}
 802771e:	d1f3      	bne.n	8027708 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027720:	3301      	adds	r3, #1
 8027722:	2b04      	cmp	r3, #4
 8027724:	d1ed      	bne.n	8027702 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027726:	4770      	bx	lr
 8027728:	00000000 	.word	0x00000000

0802772c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802772c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027730:	460c      	mov	r4, r1
 8027732:	4605      	mov	r5, r0
 8027734:	4690      	mov	r8, r2
 8027736:	f7ff ffdf 	bl	80276f8 <_ZN8touchgfx9Matrix4x4C1Ev>
 802773a:	4628      	mov	r0, r5
 802773c:	4621      	mov	r1, r4
 802773e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027742:	2300      	movs	r3, #0
 8027744:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027784 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027748:	eb08 0603 	add.w	r6, r8, r3
 802774c:	460f      	mov	r7, r1
 802774e:	2400      	movs	r4, #0
 8027750:	4632      	mov	r2, r6
 8027752:	ecf7 6a01 	vldmia	r7!, {s13}
 8027756:	ed92 7a00 	vldr	s14, [r2]
 802775a:	3401      	adds	r4, #1
 802775c:	2c04      	cmp	r4, #4
 802775e:	f106 0610 	add.w	r6, r6, #16
 8027762:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027766:	d1f3      	bne.n	8027750 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027768:	18c2      	adds	r2, r0, r3
 802776a:	3304      	adds	r3, #4
 802776c:	2b10      	cmp	r3, #16
 802776e:	edc2 7a00 	vstr	s15, [r2]
 8027772:	d1e7      	bne.n	8027744 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027774:	3110      	adds	r1, #16
 8027776:	4561      	cmp	r1, ip
 8027778:	f100 0010 	add.w	r0, r0, #16
 802777c:	d1e1      	bne.n	8027742 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802777e:	4628      	mov	r0, r5
 8027780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027784:	00000000 	.word	0x00000000

08027788 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027788:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802778c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027790:	f100 0320 	add.w	r3, r0, #32
 8027794:	3030      	adds	r0, #48	; 0x30
 8027796:	ecf3 7a01 	vldmia	r3!, {s15}
 802779a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802779e:	4283      	cmp	r3, r0
 80277a0:	edc3 7a03 	vstr	s15, [r3, #12]
 80277a4:	d1f7      	bne.n	8027796 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80277a6:	4770      	bx	lr

080277a8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80277a8:	b510      	push	{r4, lr}
 80277aa:	ed2d 8b02 	vpush	{d8}
 80277ae:	4604      	mov	r4, r0
 80277b0:	eef0 8a40 	vmov.f32	s17, s0
 80277b4:	f000 f938 	bl	8027a28 <sinf>
 80277b8:	eeb0 8a40 	vmov.f32	s16, s0
 80277bc:	eeb0 0a68 	vmov.f32	s0, s17
 80277c0:	f000 f8ee 	bl	80279a0 <cosf>
 80277c4:	f104 0310 	add.w	r3, r4, #16
 80277c8:	f104 0220 	add.w	r2, r4, #32
 80277cc:	eeb1 6a48 	vneg.f32	s12, s16
 80277d0:	edd3 7a04 	vldr	s15, [r3, #16]
 80277d4:	edd3 6a00 	vldr	s13, [r3]
 80277d8:	ee26 7a27 	vmul.f32	s14, s12, s15
 80277dc:	ee67 7a80 	vmul.f32	s15, s15, s0
 80277e0:	eea6 7a80 	vfma.f32	s14, s13, s0
 80277e4:	eee6 7a88 	vfma.f32	s15, s13, s16
 80277e8:	eca3 7a01 	vstmia	r3!, {s14}
 80277ec:	429a      	cmp	r2, r3
 80277ee:	edc3 7a03 	vstr	s15, [r3, #12]
 80277f2:	d1ed      	bne.n	80277d0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80277f4:	ecbd 8b02 	vpop	{d8}
 80277f8:	4620      	mov	r0, r4
 80277fa:	bd10      	pop	{r4, pc}

080277fc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80277fc:	b510      	push	{r4, lr}
 80277fe:	ed2d 8b02 	vpush	{d8}
 8027802:	4604      	mov	r4, r0
 8027804:	eef0 8a40 	vmov.f32	s17, s0
 8027808:	f000 f90e 	bl	8027a28 <sinf>
 802780c:	eeb0 8a40 	vmov.f32	s16, s0
 8027810:	eeb0 0a68 	vmov.f32	s0, s17
 8027814:	f000 f8c4 	bl	80279a0 <cosf>
 8027818:	4623      	mov	r3, r4
 802781a:	f104 0210 	add.w	r2, r4, #16
 802781e:	eeb1 6a48 	vneg.f32	s12, s16
 8027822:	edd3 7a08 	vldr	s15, [r3, #32]
 8027826:	edd3 6a00 	vldr	s13, [r3]
 802782a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802782e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027832:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027836:	eee6 7a26 	vfma.f32	s15, s12, s13
 802783a:	eca3 7a01 	vstmia	r3!, {s14}
 802783e:	429a      	cmp	r2, r3
 8027840:	edc3 7a07 	vstr	s15, [r3, #28]
 8027844:	d1ed      	bne.n	8027822 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027846:	ecbd 8b02 	vpop	{d8}
 802784a:	4620      	mov	r0, r4
 802784c:	bd10      	pop	{r4, pc}

0802784e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802784e:	b510      	push	{r4, lr}
 8027850:	ed2d 8b02 	vpush	{d8}
 8027854:	4604      	mov	r4, r0
 8027856:	eef0 8a40 	vmov.f32	s17, s0
 802785a:	f000 f8e5 	bl	8027a28 <sinf>
 802785e:	eeb0 8a40 	vmov.f32	s16, s0
 8027862:	eeb0 0a68 	vmov.f32	s0, s17
 8027866:	f000 f89b 	bl	80279a0 <cosf>
 802786a:	4623      	mov	r3, r4
 802786c:	f104 0210 	add.w	r2, r4, #16
 8027870:	eeb1 6a48 	vneg.f32	s12, s16
 8027874:	edd3 7a04 	vldr	s15, [r3, #16]
 8027878:	edd3 6a00 	vldr	s13, [r3]
 802787c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027880:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027884:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027888:	eee6 7a88 	vfma.f32	s15, s13, s16
 802788c:	eca3 7a01 	vstmia	r3!, {s14}
 8027890:	429a      	cmp	r2, r3
 8027892:	edc3 7a03 	vstr	s15, [r3, #12]
 8027896:	d1ed      	bne.n	8027874 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027898:	ecbd 8b02 	vpop	{d8}
 802789c:	4620      	mov	r0, r4
 802789e:	bd10      	pop	{r4, pc}

080278a0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80278a0:	4603      	mov	r3, r0
 80278a2:	f100 0210 	add.w	r2, r0, #16
 80278a6:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80278aa:	edd3 7a00 	vldr	s15, [r3]
 80278ae:	eee7 7a00 	vfma.f32	s15, s14, s0
 80278b2:	ece3 7a01 	vstmia	r3!, {s15}
 80278b6:	4293      	cmp	r3, r2
 80278b8:	d1f5      	bne.n	80278a6 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80278ba:	4770      	bx	lr

080278bc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80278bc:	f100 0310 	add.w	r3, r0, #16
 80278c0:	f100 0220 	add.w	r2, r0, #32
 80278c4:	ed93 7a08 	vldr	s14, [r3, #32]
 80278c8:	edd3 7a00 	vldr	s15, [r3]
 80278cc:	eee7 7a00 	vfma.f32	s15, s14, s0
 80278d0:	ece3 7a01 	vstmia	r3!, {s15}
 80278d4:	4293      	cmp	r3, r2
 80278d6:	d1f5      	bne.n	80278c4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80278d8:	4770      	bx	lr

080278da <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80278da:	f100 0320 	add.w	r3, r0, #32
 80278de:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80278e2:	ed93 7a04 	vldr	s14, [r3, #16]
 80278e6:	edd3 7a00 	vldr	s15, [r3]
 80278ea:	eee7 7a00 	vfma.f32	s15, s14, s0
 80278ee:	ece3 7a01 	vstmia	r3!, {s15}
 80278f2:	4293      	cmp	r3, r2
 80278f4:	d1f5      	bne.n	80278e2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80278f6:	4770      	bx	lr

080278f8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80278f8:	4603      	mov	r3, r0
 80278fa:	f100 0210 	add.w	r2, r0, #16
 80278fe:	edd3 7a00 	vldr	s15, [r3]
 8027902:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027906:	ece3 7a01 	vstmia	r3!, {s15}
 802790a:	4293      	cmp	r3, r2
 802790c:	d1f7      	bne.n	80278fe <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802790e:	4770      	bx	lr

08027910 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027910:	f100 0310 	add.w	r3, r0, #16
 8027914:	f100 0220 	add.w	r2, r0, #32
 8027918:	edd3 7a00 	vldr	s15, [r3]
 802791c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027920:	ece3 7a01 	vstmia	r3!, {s15}
 8027924:	4293      	cmp	r3, r2
 8027926:	d1f7      	bne.n	8027918 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027928:	4770      	bx	lr

0802792a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802792a:	f100 0320 	add.w	r3, r0, #32
 802792e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027932:	edd3 7a00 	vldr	s15, [r3]
 8027936:	ee67 7a80 	vmul.f32	s15, s15, s0
 802793a:	ece3 7a01 	vstmia	r3!, {s15}
 802793e:	4293      	cmp	r3, r2
 8027940:	d1f7      	bne.n	8027932 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027942:	4770      	bx	lr

08027944 <__aeabi_atexit>:
 8027944:	460b      	mov	r3, r1
 8027946:	4601      	mov	r1, r0
 8027948:	4618      	mov	r0, r3
 802794a:	f000 bed1 	b.w	80286f0 <__cxa_atexit>

0802794e <_ZdlPvj>:
 802794e:	f000 b812 	b.w	8027976 <_ZdlPv>

08027952 <__cxa_guard_acquire>:
 8027952:	6803      	ldr	r3, [r0, #0]
 8027954:	07db      	lsls	r3, r3, #31
 8027956:	d406      	bmi.n	8027966 <__cxa_guard_acquire+0x14>
 8027958:	7843      	ldrb	r3, [r0, #1]
 802795a:	b103      	cbz	r3, 802795e <__cxa_guard_acquire+0xc>
 802795c:	deff      	udf	#255	; 0xff
 802795e:	2301      	movs	r3, #1
 8027960:	7043      	strb	r3, [r0, #1]
 8027962:	4618      	mov	r0, r3
 8027964:	4770      	bx	lr
 8027966:	2000      	movs	r0, #0
 8027968:	4770      	bx	lr

0802796a <__cxa_guard_release>:
 802796a:	2301      	movs	r3, #1
 802796c:	6003      	str	r3, [r0, #0]
 802796e:	4770      	bx	lr

08027970 <__cxa_pure_virtual>:
 8027970:	b508      	push	{r3, lr}
 8027972:	f000 f80f 	bl	8027994 <_ZSt9terminatev>

08027976 <_ZdlPv>:
 8027976:	f000 be07 	b.w	8028588 <free>

0802797a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802797a:	b508      	push	{r3, lr}
 802797c:	4780      	blx	r0
 802797e:	f000 fdcf 	bl	8028520 <abort>
	...

08027984 <_ZSt13get_terminatev>:
 8027984:	4b02      	ldr	r3, [pc, #8]	; (8027990 <_ZSt13get_terminatev+0xc>)
 8027986:	6818      	ldr	r0, [r3, #0]
 8027988:	f3bf 8f5b 	dmb	ish
 802798c:	4770      	bx	lr
 802798e:	bf00      	nop
 8027990:	20000104 	.word	0x20000104

08027994 <_ZSt9terminatev>:
 8027994:	b508      	push	{r3, lr}
 8027996:	f7ff fff5 	bl	8027984 <_ZSt13get_terminatev>
 802799a:	f7ff ffee 	bl	802797a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080279a0 <cosf>:
 80279a0:	ee10 3a10 	vmov	r3, s0
 80279a4:	b507      	push	{r0, r1, r2, lr}
 80279a6:	4a1e      	ldr	r2, [pc, #120]	; (8027a20 <cosf+0x80>)
 80279a8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80279ac:	4293      	cmp	r3, r2
 80279ae:	dc06      	bgt.n	80279be <cosf+0x1e>
 80279b0:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8027a24 <cosf+0x84>
 80279b4:	b003      	add	sp, #12
 80279b6:	f85d eb04 	ldr.w	lr, [sp], #4
 80279ba:	f000 b8ff 	b.w	8027bbc <__kernel_cosf>
 80279be:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80279c2:	db04      	blt.n	80279ce <cosf+0x2e>
 80279c4:	ee30 0a40 	vsub.f32	s0, s0, s0
 80279c8:	b003      	add	sp, #12
 80279ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80279ce:	4668      	mov	r0, sp
 80279d0:	f000 f99a 	bl	8027d08 <__ieee754_rem_pio2f>
 80279d4:	f000 0003 	and.w	r0, r0, #3
 80279d8:	2801      	cmp	r0, #1
 80279da:	d009      	beq.n	80279f0 <cosf+0x50>
 80279dc:	2802      	cmp	r0, #2
 80279de:	d010      	beq.n	8027a02 <cosf+0x62>
 80279e0:	b9b0      	cbnz	r0, 8027a10 <cosf+0x70>
 80279e2:	eddd 0a01 	vldr	s1, [sp, #4]
 80279e6:	ed9d 0a00 	vldr	s0, [sp]
 80279ea:	f000 f8e7 	bl	8027bbc <__kernel_cosf>
 80279ee:	e7eb      	b.n	80279c8 <cosf+0x28>
 80279f0:	eddd 0a01 	vldr	s1, [sp, #4]
 80279f4:	ed9d 0a00 	vldr	s0, [sp]
 80279f8:	f000 f93e 	bl	8027c78 <__kernel_sinf>
 80279fc:	eeb1 0a40 	vneg.f32	s0, s0
 8027a00:	e7e2      	b.n	80279c8 <cosf+0x28>
 8027a02:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a06:	ed9d 0a00 	vldr	s0, [sp]
 8027a0a:	f000 f8d7 	bl	8027bbc <__kernel_cosf>
 8027a0e:	e7f5      	b.n	80279fc <cosf+0x5c>
 8027a10:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a14:	ed9d 0a00 	vldr	s0, [sp]
 8027a18:	2001      	movs	r0, #1
 8027a1a:	f000 f92d 	bl	8027c78 <__kernel_sinf>
 8027a1e:	e7d3      	b.n	80279c8 <cosf+0x28>
 8027a20:	3f490fd8 	.word	0x3f490fd8
 8027a24:	00000000 	.word	0x00000000

08027a28 <sinf>:
 8027a28:	ee10 3a10 	vmov	r3, s0
 8027a2c:	b507      	push	{r0, r1, r2, lr}
 8027a2e:	4a1f      	ldr	r2, [pc, #124]	; (8027aac <sinf+0x84>)
 8027a30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027a34:	4293      	cmp	r3, r2
 8027a36:	dc07      	bgt.n	8027a48 <sinf+0x20>
 8027a38:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8027ab0 <sinf+0x88>
 8027a3c:	2000      	movs	r0, #0
 8027a3e:	b003      	add	sp, #12
 8027a40:	f85d eb04 	ldr.w	lr, [sp], #4
 8027a44:	f000 b918 	b.w	8027c78 <__kernel_sinf>
 8027a48:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8027a4c:	db04      	blt.n	8027a58 <sinf+0x30>
 8027a4e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027a52:	b003      	add	sp, #12
 8027a54:	f85d fb04 	ldr.w	pc, [sp], #4
 8027a58:	4668      	mov	r0, sp
 8027a5a:	f000 f955 	bl	8027d08 <__ieee754_rem_pio2f>
 8027a5e:	f000 0003 	and.w	r0, r0, #3
 8027a62:	2801      	cmp	r0, #1
 8027a64:	d00a      	beq.n	8027a7c <sinf+0x54>
 8027a66:	2802      	cmp	r0, #2
 8027a68:	d00f      	beq.n	8027a8a <sinf+0x62>
 8027a6a:	b9c0      	cbnz	r0, 8027a9e <sinf+0x76>
 8027a6c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a70:	ed9d 0a00 	vldr	s0, [sp]
 8027a74:	2001      	movs	r0, #1
 8027a76:	f000 f8ff 	bl	8027c78 <__kernel_sinf>
 8027a7a:	e7ea      	b.n	8027a52 <sinf+0x2a>
 8027a7c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a80:	ed9d 0a00 	vldr	s0, [sp]
 8027a84:	f000 f89a 	bl	8027bbc <__kernel_cosf>
 8027a88:	e7e3      	b.n	8027a52 <sinf+0x2a>
 8027a8a:	eddd 0a01 	vldr	s1, [sp, #4]
 8027a8e:	ed9d 0a00 	vldr	s0, [sp]
 8027a92:	2001      	movs	r0, #1
 8027a94:	f000 f8f0 	bl	8027c78 <__kernel_sinf>
 8027a98:	eeb1 0a40 	vneg.f32	s0, s0
 8027a9c:	e7d9      	b.n	8027a52 <sinf+0x2a>
 8027a9e:	eddd 0a01 	vldr	s1, [sp, #4]
 8027aa2:	ed9d 0a00 	vldr	s0, [sp]
 8027aa6:	f000 f889 	bl	8027bbc <__kernel_cosf>
 8027aaa:	e7f5      	b.n	8027a98 <sinf+0x70>
 8027aac:	3f490fd8 	.word	0x3f490fd8
 8027ab0:	00000000 	.word	0x00000000

08027ab4 <ceilf>:
 8027ab4:	ee10 3a10 	vmov	r3, s0
 8027ab8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027abc:	3a7f      	subs	r2, #127	; 0x7f
 8027abe:	2a16      	cmp	r2, #22
 8027ac0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027ac4:	dc2a      	bgt.n	8027b1c <ceilf+0x68>
 8027ac6:	2a00      	cmp	r2, #0
 8027ac8:	da11      	bge.n	8027aee <ceilf+0x3a>
 8027aca:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027b30 <ceilf+0x7c>
 8027ace:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027ad2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ada:	dd05      	ble.n	8027ae8 <ceilf+0x34>
 8027adc:	2b00      	cmp	r3, #0
 8027ade:	db23      	blt.n	8027b28 <ceilf+0x74>
 8027ae0:	2900      	cmp	r1, #0
 8027ae2:	bf18      	it	ne
 8027ae4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8027ae8:	ee00 3a10 	vmov	s0, r3
 8027aec:	4770      	bx	lr
 8027aee:	4911      	ldr	r1, [pc, #68]	; (8027b34 <ceilf+0x80>)
 8027af0:	4111      	asrs	r1, r2
 8027af2:	420b      	tst	r3, r1
 8027af4:	d0fa      	beq.n	8027aec <ceilf+0x38>
 8027af6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027b30 <ceilf+0x7c>
 8027afa:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027afe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b06:	ddef      	ble.n	8027ae8 <ceilf+0x34>
 8027b08:	2b00      	cmp	r3, #0
 8027b0a:	bfc2      	ittt	gt
 8027b0c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8027b10:	fa40 f202 	asrgt.w	r2, r0, r2
 8027b14:	189b      	addgt	r3, r3, r2
 8027b16:	ea23 0301 	bic.w	r3, r3, r1
 8027b1a:	e7e5      	b.n	8027ae8 <ceilf+0x34>
 8027b1c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027b20:	d3e4      	bcc.n	8027aec <ceilf+0x38>
 8027b22:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027b26:	4770      	bx	lr
 8027b28:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8027b2c:	e7dc      	b.n	8027ae8 <ceilf+0x34>
 8027b2e:	bf00      	nop
 8027b30:	7149f2ca 	.word	0x7149f2ca
 8027b34:	007fffff 	.word	0x007fffff

08027b38 <floorf>:
 8027b38:	ee10 3a10 	vmov	r3, s0
 8027b3c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027b40:	3a7f      	subs	r2, #127	; 0x7f
 8027b42:	2a16      	cmp	r2, #22
 8027b44:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027b48:	dc2a      	bgt.n	8027ba0 <floorf+0x68>
 8027b4a:	2a00      	cmp	r2, #0
 8027b4c:	da11      	bge.n	8027b72 <floorf+0x3a>
 8027b4e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8027bb0 <floorf+0x78>
 8027b52:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027b56:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b5e:	dd05      	ble.n	8027b6c <floorf+0x34>
 8027b60:	2b00      	cmp	r3, #0
 8027b62:	da23      	bge.n	8027bac <floorf+0x74>
 8027b64:	4a13      	ldr	r2, [pc, #76]	; (8027bb4 <floorf+0x7c>)
 8027b66:	2900      	cmp	r1, #0
 8027b68:	bf18      	it	ne
 8027b6a:	4613      	movne	r3, r2
 8027b6c:	ee00 3a10 	vmov	s0, r3
 8027b70:	4770      	bx	lr
 8027b72:	4911      	ldr	r1, [pc, #68]	; (8027bb8 <floorf+0x80>)
 8027b74:	4111      	asrs	r1, r2
 8027b76:	420b      	tst	r3, r1
 8027b78:	d0fa      	beq.n	8027b70 <floorf+0x38>
 8027b7a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8027bb0 <floorf+0x78>
 8027b7e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027b82:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b8a:	ddef      	ble.n	8027b6c <floorf+0x34>
 8027b8c:	2b00      	cmp	r3, #0
 8027b8e:	bfbe      	ittt	lt
 8027b90:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8027b94:	fa40 f202 	asrlt.w	r2, r0, r2
 8027b98:	189b      	addlt	r3, r3, r2
 8027b9a:	ea23 0301 	bic.w	r3, r3, r1
 8027b9e:	e7e5      	b.n	8027b6c <floorf+0x34>
 8027ba0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027ba4:	d3e4      	bcc.n	8027b70 <floorf+0x38>
 8027ba6:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027baa:	4770      	bx	lr
 8027bac:	2300      	movs	r3, #0
 8027bae:	e7dd      	b.n	8027b6c <floorf+0x34>
 8027bb0:	7149f2ca 	.word	0x7149f2ca
 8027bb4:	bf800000 	.word	0xbf800000
 8027bb8:	007fffff 	.word	0x007fffff

08027bbc <__kernel_cosf>:
 8027bbc:	ee10 3a10 	vmov	r3, s0
 8027bc0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027bc4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027bc8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8027bcc:	da05      	bge.n	8027bda <__kernel_cosf+0x1e>
 8027bce:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027bd2:	ee17 2a90 	vmov	r2, s15
 8027bd6:	2a00      	cmp	r2, #0
 8027bd8:	d03b      	beq.n	8027c52 <__kernel_cosf+0x96>
 8027bda:	ee20 7a00 	vmul.f32	s14, s0, s0
 8027bde:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027c58 <__kernel_cosf+0x9c>
 8027be2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8027c5c <__kernel_cosf+0xa0>
 8027be6:	4a1e      	ldr	r2, [pc, #120]	; (8027c60 <__kernel_cosf+0xa4>)
 8027be8:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027bec:	4293      	cmp	r3, r2
 8027bee:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8027c64 <__kernel_cosf+0xa8>
 8027bf2:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027bf6:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8027c68 <__kernel_cosf+0xac>
 8027bfa:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027bfe:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8027c6c <__kernel_cosf+0xb0>
 8027c02:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027c06:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8027c70 <__kernel_cosf+0xb4>
 8027c0a:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027c0e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8027c12:	ee26 6a07 	vmul.f32	s12, s12, s14
 8027c16:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027c1a:	eee7 0a06 	vfma.f32	s1, s14, s12
 8027c1e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027c22:	dc04      	bgt.n	8027c2e <__kernel_cosf+0x72>
 8027c24:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027c28:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8027c2c:	4770      	bx	lr
 8027c2e:	4a11      	ldr	r2, [pc, #68]	; (8027c74 <__kernel_cosf+0xb8>)
 8027c30:	4293      	cmp	r3, r2
 8027c32:	bfda      	itte	le
 8027c34:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8027c38:	ee07 3a10 	vmovle	s14, r3
 8027c3c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8027c40:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027c44:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8027c48:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027c4c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027c50:	4770      	bx	lr
 8027c52:	eeb0 0a66 	vmov.f32	s0, s13
 8027c56:	4770      	bx	lr
 8027c58:	ad47d74e 	.word	0xad47d74e
 8027c5c:	310f74f6 	.word	0x310f74f6
 8027c60:	3e999999 	.word	0x3e999999
 8027c64:	b493f27c 	.word	0xb493f27c
 8027c68:	37d00d01 	.word	0x37d00d01
 8027c6c:	bab60b61 	.word	0xbab60b61
 8027c70:	3d2aaaab 	.word	0x3d2aaaab
 8027c74:	3f480000 	.word	0x3f480000

08027c78 <__kernel_sinf>:
 8027c78:	ee10 3a10 	vmov	r3, s0
 8027c7c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027c80:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027c84:	da04      	bge.n	8027c90 <__kernel_sinf+0x18>
 8027c86:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027c8a:	ee17 3a90 	vmov	r3, s15
 8027c8e:	b35b      	cbz	r3, 8027ce8 <__kernel_sinf+0x70>
 8027c90:	ee20 7a00 	vmul.f32	s14, s0, s0
 8027c94:	eddf 7a15 	vldr	s15, [pc, #84]	; 8027cec <__kernel_sinf+0x74>
 8027c98:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8027cf0 <__kernel_sinf+0x78>
 8027c9c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027ca0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8027cf4 <__kernel_sinf+0x7c>
 8027ca4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027ca8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8027cf8 <__kernel_sinf+0x80>
 8027cac:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027cb0:	eddf 7a12 	vldr	s15, [pc, #72]	; 8027cfc <__kernel_sinf+0x84>
 8027cb4:	ee60 6a07 	vmul.f32	s13, s0, s14
 8027cb8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027cbc:	b930      	cbnz	r0, 8027ccc <__kernel_sinf+0x54>
 8027cbe:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8027d00 <__kernel_sinf+0x88>
 8027cc2:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027cc6:	eea6 0a26 	vfma.f32	s0, s12, s13
 8027cca:	4770      	bx	lr
 8027ccc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8027cd0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8027cd4:	eee0 7a86 	vfma.f32	s15, s1, s12
 8027cd8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8027cdc:	eddf 7a09 	vldr	s15, [pc, #36]	; 8027d04 <__kernel_sinf+0x8c>
 8027ce0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8027ce4:	ee30 0a60 	vsub.f32	s0, s0, s1
 8027ce8:	4770      	bx	lr
 8027cea:	bf00      	nop
 8027cec:	2f2ec9d3 	.word	0x2f2ec9d3
 8027cf0:	b2d72f34 	.word	0xb2d72f34
 8027cf4:	3638ef1b 	.word	0x3638ef1b
 8027cf8:	b9500d01 	.word	0xb9500d01
 8027cfc:	3c088889 	.word	0x3c088889
 8027d00:	be2aaaab 	.word	0xbe2aaaab
 8027d04:	3e2aaaab 	.word	0x3e2aaaab

08027d08 <__ieee754_rem_pio2f>:
 8027d08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027d0a:	ee10 6a10 	vmov	r6, s0
 8027d0e:	4b86      	ldr	r3, [pc, #536]	; (8027f28 <__ieee754_rem_pio2f+0x220>)
 8027d10:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8027d14:	429d      	cmp	r5, r3
 8027d16:	b087      	sub	sp, #28
 8027d18:	4604      	mov	r4, r0
 8027d1a:	dc05      	bgt.n	8027d28 <__ieee754_rem_pio2f+0x20>
 8027d1c:	2300      	movs	r3, #0
 8027d1e:	ed80 0a00 	vstr	s0, [r0]
 8027d22:	6043      	str	r3, [r0, #4]
 8027d24:	2000      	movs	r0, #0
 8027d26:	e020      	b.n	8027d6a <__ieee754_rem_pio2f+0x62>
 8027d28:	4b80      	ldr	r3, [pc, #512]	; (8027f2c <__ieee754_rem_pio2f+0x224>)
 8027d2a:	429d      	cmp	r5, r3
 8027d2c:	dc38      	bgt.n	8027da0 <__ieee754_rem_pio2f+0x98>
 8027d2e:	2e00      	cmp	r6, #0
 8027d30:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8027f30 <__ieee754_rem_pio2f+0x228>
 8027d34:	4b7f      	ldr	r3, [pc, #508]	; (8027f34 <__ieee754_rem_pio2f+0x22c>)
 8027d36:	f025 050f 	bic.w	r5, r5, #15
 8027d3a:	dd18      	ble.n	8027d6e <__ieee754_rem_pio2f+0x66>
 8027d3c:	429d      	cmp	r5, r3
 8027d3e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8027d42:	bf09      	itett	eq
 8027d44:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8027f38 <__ieee754_rem_pio2f+0x230>
 8027d48:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8027f3c <__ieee754_rem_pio2f+0x234>
 8027d4c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027d50:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8027f40 <__ieee754_rem_pio2f+0x238>
 8027d54:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8027d58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027d5c:	edc0 6a00 	vstr	s13, [r0]
 8027d60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027d64:	edc0 7a01 	vstr	s15, [r0, #4]
 8027d68:	2001      	movs	r0, #1
 8027d6a:	b007      	add	sp, #28
 8027d6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027d6e:	429d      	cmp	r5, r3
 8027d70:	ee70 7a07 	vadd.f32	s15, s0, s14
 8027d74:	bf09      	itett	eq
 8027d76:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8027f38 <__ieee754_rem_pio2f+0x230>
 8027d7a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8027f3c <__ieee754_rem_pio2f+0x234>
 8027d7e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8027d82:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8027f40 <__ieee754_rem_pio2f+0x238>
 8027d86:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027d8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027d8e:	edc0 6a00 	vstr	s13, [r0]
 8027d92:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027d96:	edc0 7a01 	vstr	s15, [r0, #4]
 8027d9a:	f04f 30ff 	mov.w	r0, #4294967295
 8027d9e:	e7e4      	b.n	8027d6a <__ieee754_rem_pio2f+0x62>
 8027da0:	4b68      	ldr	r3, [pc, #416]	; (8027f44 <__ieee754_rem_pio2f+0x23c>)
 8027da2:	429d      	cmp	r5, r3
 8027da4:	dc71      	bgt.n	8027e8a <__ieee754_rem_pio2f+0x182>
 8027da6:	f000 f8db 	bl	8027f60 <fabsf>
 8027daa:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8027f48 <__ieee754_rem_pio2f+0x240>
 8027dae:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027db2:	eee0 7a07 	vfma.f32	s15, s0, s14
 8027db6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027dba:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027dbe:	ee17 0a90 	vmov	r0, s15
 8027dc2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027f30 <__ieee754_rem_pio2f+0x228>
 8027dc6:	eea7 0a67 	vfms.f32	s0, s14, s15
 8027dca:	281f      	cmp	r0, #31
 8027dcc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027f3c <__ieee754_rem_pio2f+0x234>
 8027dd0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027dd4:	eeb1 6a47 	vneg.f32	s12, s14
 8027dd8:	ee70 6a67 	vsub.f32	s13, s0, s15
 8027ddc:	ee16 2a90 	vmov	r2, s13
 8027de0:	dc1c      	bgt.n	8027e1c <__ieee754_rem_pio2f+0x114>
 8027de2:	495a      	ldr	r1, [pc, #360]	; (8027f4c <__ieee754_rem_pio2f+0x244>)
 8027de4:	1e47      	subs	r7, r0, #1
 8027de6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8027dea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8027dee:	428b      	cmp	r3, r1
 8027df0:	d014      	beq.n	8027e1c <__ieee754_rem_pio2f+0x114>
 8027df2:	6022      	str	r2, [r4, #0]
 8027df4:	ed94 7a00 	vldr	s14, [r4]
 8027df8:	ee30 0a47 	vsub.f32	s0, s0, s14
 8027dfc:	2e00      	cmp	r6, #0
 8027dfe:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027e02:	ed84 0a01 	vstr	s0, [r4, #4]
 8027e06:	dab0      	bge.n	8027d6a <__ieee754_rem_pio2f+0x62>
 8027e08:	eeb1 7a47 	vneg.f32	s14, s14
 8027e0c:	eeb1 0a40 	vneg.f32	s0, s0
 8027e10:	ed84 7a00 	vstr	s14, [r4]
 8027e14:	ed84 0a01 	vstr	s0, [r4, #4]
 8027e18:	4240      	negs	r0, r0
 8027e1a:	e7a6      	b.n	8027d6a <__ieee754_rem_pio2f+0x62>
 8027e1c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027e20:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8027e24:	2908      	cmp	r1, #8
 8027e26:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027e2a:	dde2      	ble.n	8027df2 <__ieee754_rem_pio2f+0xea>
 8027e2c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8027f38 <__ieee754_rem_pio2f+0x230>
 8027e30:	eef0 6a40 	vmov.f32	s13, s0
 8027e34:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027e38:	ee70 7a66 	vsub.f32	s15, s0, s13
 8027e3c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027e40:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8027f40 <__ieee754_rem_pio2f+0x238>
 8027e44:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027e48:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8027e4c:	ee15 2a90 	vmov	r2, s11
 8027e50:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027e54:	1a5b      	subs	r3, r3, r1
 8027e56:	2b19      	cmp	r3, #25
 8027e58:	dc04      	bgt.n	8027e64 <__ieee754_rem_pio2f+0x15c>
 8027e5a:	edc4 5a00 	vstr	s11, [r4]
 8027e5e:	eeb0 0a66 	vmov.f32	s0, s13
 8027e62:	e7c7      	b.n	8027df4 <__ieee754_rem_pio2f+0xec>
 8027e64:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8027f50 <__ieee754_rem_pio2f+0x248>
 8027e68:	eeb0 0a66 	vmov.f32	s0, s13
 8027e6c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027e70:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027e74:	eddf 6a37 	vldr	s13, [pc, #220]	; 8027f54 <__ieee754_rem_pio2f+0x24c>
 8027e78:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027e7c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027e80:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027e84:	ed84 7a00 	vstr	s14, [r4]
 8027e88:	e7b4      	b.n	8027df4 <__ieee754_rem_pio2f+0xec>
 8027e8a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8027e8e:	db06      	blt.n	8027e9e <__ieee754_rem_pio2f+0x196>
 8027e90:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027e94:	edc0 7a01 	vstr	s15, [r0, #4]
 8027e98:	edc0 7a00 	vstr	s15, [r0]
 8027e9c:	e742      	b.n	8027d24 <__ieee754_rem_pio2f+0x1c>
 8027e9e:	15ea      	asrs	r2, r5, #23
 8027ea0:	3a86      	subs	r2, #134	; 0x86
 8027ea2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8027ea6:	ee07 3a90 	vmov	s15, r3
 8027eaa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027eae:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8027f58 <__ieee754_rem_pio2f+0x250>
 8027eb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027eb6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027eba:	ed8d 7a03 	vstr	s14, [sp, #12]
 8027ebe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027ec2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027ec6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027eca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027ece:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027ed2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027ed6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8027eda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ede:	edcd 7a05 	vstr	s15, [sp, #20]
 8027ee2:	d11e      	bne.n	8027f22 <__ieee754_rem_pio2f+0x21a>
 8027ee4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8027ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027eec:	bf14      	ite	ne
 8027eee:	2302      	movne	r3, #2
 8027ef0:	2301      	moveq	r3, #1
 8027ef2:	491a      	ldr	r1, [pc, #104]	; (8027f5c <__ieee754_rem_pio2f+0x254>)
 8027ef4:	9101      	str	r1, [sp, #4]
 8027ef6:	2102      	movs	r1, #2
 8027ef8:	9100      	str	r1, [sp, #0]
 8027efa:	a803      	add	r0, sp, #12
 8027efc:	4621      	mov	r1, r4
 8027efe:	f000 f89d 	bl	802803c <__kernel_rem_pio2f>
 8027f02:	2e00      	cmp	r6, #0
 8027f04:	f6bf af31 	bge.w	8027d6a <__ieee754_rem_pio2f+0x62>
 8027f08:	edd4 7a00 	vldr	s15, [r4]
 8027f0c:	eef1 7a67 	vneg.f32	s15, s15
 8027f10:	edc4 7a00 	vstr	s15, [r4]
 8027f14:	edd4 7a01 	vldr	s15, [r4, #4]
 8027f18:	eef1 7a67 	vneg.f32	s15, s15
 8027f1c:	edc4 7a01 	vstr	s15, [r4, #4]
 8027f20:	e77a      	b.n	8027e18 <__ieee754_rem_pio2f+0x110>
 8027f22:	2303      	movs	r3, #3
 8027f24:	e7e5      	b.n	8027ef2 <__ieee754_rem_pio2f+0x1ea>
 8027f26:	bf00      	nop
 8027f28:	3f490fd8 	.word	0x3f490fd8
 8027f2c:	4016cbe3 	.word	0x4016cbe3
 8027f30:	3fc90f80 	.word	0x3fc90f80
 8027f34:	3fc90fd0 	.word	0x3fc90fd0
 8027f38:	37354400 	.word	0x37354400
 8027f3c:	37354443 	.word	0x37354443
 8027f40:	2e85a308 	.word	0x2e85a308
 8027f44:	43490f80 	.word	0x43490f80
 8027f48:	3f22f984 	.word	0x3f22f984
 8027f4c:	0802d33c 	.word	0x0802d33c
 8027f50:	2e85a300 	.word	0x2e85a300
 8027f54:	248d3132 	.word	0x248d3132
 8027f58:	43800000 	.word	0x43800000
 8027f5c:	0802d3bc 	.word	0x0802d3bc

08027f60 <fabsf>:
 8027f60:	ee10 3a10 	vmov	r3, s0
 8027f64:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027f68:	ee00 3a10 	vmov	s0, r3
 8027f6c:	4770      	bx	lr
	...

08027f70 <scalbnf>:
 8027f70:	ee10 3a10 	vmov	r3, s0
 8027f74:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8027f78:	d02b      	beq.n	8027fd2 <scalbnf+0x62>
 8027f7a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8027f7e:	d302      	bcc.n	8027f86 <scalbnf+0x16>
 8027f80:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027f84:	4770      	bx	lr
 8027f86:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8027f8a:	d123      	bne.n	8027fd4 <scalbnf+0x64>
 8027f8c:	4b24      	ldr	r3, [pc, #144]	; (8028020 <scalbnf+0xb0>)
 8027f8e:	eddf 7a25 	vldr	s15, [pc, #148]	; 8028024 <scalbnf+0xb4>
 8027f92:	4298      	cmp	r0, r3
 8027f94:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027f98:	db17      	blt.n	8027fca <scalbnf+0x5a>
 8027f9a:	ee10 3a10 	vmov	r3, s0
 8027f9e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027fa2:	3a19      	subs	r2, #25
 8027fa4:	f24c 3150 	movw	r1, #50000	; 0xc350
 8027fa8:	4288      	cmp	r0, r1
 8027faa:	dd15      	ble.n	8027fd8 <scalbnf+0x68>
 8027fac:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8028028 <scalbnf+0xb8>
 8027fb0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802802c <scalbnf+0xbc>
 8027fb4:	ee10 3a10 	vmov	r3, s0
 8027fb8:	eeb0 7a67 	vmov.f32	s14, s15
 8027fbc:	2b00      	cmp	r3, #0
 8027fbe:	bfb8      	it	lt
 8027fc0:	eef0 7a66 	vmovlt.f32	s15, s13
 8027fc4:	ee27 0a87 	vmul.f32	s0, s15, s14
 8027fc8:	4770      	bx	lr
 8027fca:	eddf 7a19 	vldr	s15, [pc, #100]	; 8028030 <scalbnf+0xc0>
 8027fce:	ee27 0a80 	vmul.f32	s0, s15, s0
 8027fd2:	4770      	bx	lr
 8027fd4:	0dd2      	lsrs	r2, r2, #23
 8027fd6:	e7e5      	b.n	8027fa4 <scalbnf+0x34>
 8027fd8:	4410      	add	r0, r2
 8027fda:	28fe      	cmp	r0, #254	; 0xfe
 8027fdc:	dce6      	bgt.n	8027fac <scalbnf+0x3c>
 8027fde:	2800      	cmp	r0, #0
 8027fe0:	dd06      	ble.n	8027ff0 <scalbnf+0x80>
 8027fe2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8027fe6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027fea:	ee00 3a10 	vmov	s0, r3
 8027fee:	4770      	bx	lr
 8027ff0:	f110 0f16 	cmn.w	r0, #22
 8027ff4:	da09      	bge.n	802800a <scalbnf+0x9a>
 8027ff6:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8028030 <scalbnf+0xc0>
 8027ffa:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8028034 <scalbnf+0xc4>
 8027ffe:	ee10 3a10 	vmov	r3, s0
 8028002:	eeb0 7a67 	vmov.f32	s14, s15
 8028006:	2b00      	cmp	r3, #0
 8028008:	e7d9      	b.n	8027fbe <scalbnf+0x4e>
 802800a:	3019      	adds	r0, #25
 802800c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8028010:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8028014:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8028038 <scalbnf+0xc8>
 8028018:	ee07 3a90 	vmov	s15, r3
 802801c:	e7d7      	b.n	8027fce <scalbnf+0x5e>
 802801e:	bf00      	nop
 8028020:	ffff3cb0 	.word	0xffff3cb0
 8028024:	4c000000 	.word	0x4c000000
 8028028:	7149f2ca 	.word	0x7149f2ca
 802802c:	f149f2ca 	.word	0xf149f2ca
 8028030:	0da24260 	.word	0x0da24260
 8028034:	8da24260 	.word	0x8da24260
 8028038:	33000000 	.word	0x33000000

0802803c <__kernel_rem_pio2f>:
 802803c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028040:	ed2d 8b04 	vpush	{d8-d9}
 8028044:	b0d9      	sub	sp, #356	; 0x164
 8028046:	4688      	mov	r8, r1
 8028048:	9002      	str	r0, [sp, #8]
 802804a:	49b8      	ldr	r1, [pc, #736]	; (802832c <__kernel_rem_pio2f+0x2f0>)
 802804c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802804e:	9301      	str	r3, [sp, #4]
 8028050:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8028054:	9901      	ldr	r1, [sp, #4]
 8028056:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8028058:	f101 3bff 	add.w	fp, r1, #4294967295
 802805c:	1d11      	adds	r1, r2, #4
 802805e:	db25      	blt.n	80280ac <__kernel_rem_pio2f+0x70>
 8028060:	1ed0      	subs	r0, r2, #3
 8028062:	bf48      	it	mi
 8028064:	1d10      	addmi	r0, r2, #4
 8028066:	10c0      	asrs	r0, r0, #3
 8028068:	1c45      	adds	r5, r0, #1
 802806a:	00e9      	lsls	r1, r5, #3
 802806c:	eba0 070b 	sub.w	r7, r0, fp
 8028070:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802833c <__kernel_rem_pio2f+0x300>
 8028074:	9103      	str	r1, [sp, #12]
 8028076:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802807a:	eb0a 0c0b 	add.w	ip, sl, fp
 802807e:	ae1c      	add	r6, sp, #112	; 0x70
 8028080:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8028084:	2400      	movs	r4, #0
 8028086:	4564      	cmp	r4, ip
 8028088:	dd12      	ble.n	80280b0 <__kernel_rem_pio2f+0x74>
 802808a:	9901      	ldr	r1, [sp, #4]
 802808c:	ac1c      	add	r4, sp, #112	; 0x70
 802808e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8028092:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8028096:	f04f 0c00 	mov.w	ip, #0
 802809a:	45d4      	cmp	ip, sl
 802809c:	dc27      	bgt.n	80280ee <__kernel_rem_pio2f+0xb2>
 802809e:	f8dd e008 	ldr.w	lr, [sp, #8]
 80280a2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802833c <__kernel_rem_pio2f+0x300>
 80280a6:	4627      	mov	r7, r4
 80280a8:	2600      	movs	r6, #0
 80280aa:	e016      	b.n	80280da <__kernel_rem_pio2f+0x9e>
 80280ac:	2000      	movs	r0, #0
 80280ae:	e7db      	b.n	8028068 <__kernel_rem_pio2f+0x2c>
 80280b0:	42e7      	cmn	r7, r4
 80280b2:	bf5d      	ittte	pl
 80280b4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 80280b8:	ee07 1a90 	vmovpl	s15, r1
 80280bc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80280c0:	eef0 7a47 	vmovmi.f32	s15, s14
 80280c4:	ece6 7a01 	vstmia	r6!, {s15}
 80280c8:	3401      	adds	r4, #1
 80280ca:	e7dc      	b.n	8028086 <__kernel_rem_pio2f+0x4a>
 80280cc:	ecfe 6a01 	vldmia	lr!, {s13}
 80280d0:	ed97 7a00 	vldr	s14, [r7]
 80280d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80280d8:	3601      	adds	r6, #1
 80280da:	455e      	cmp	r6, fp
 80280dc:	f1a7 0704 	sub.w	r7, r7, #4
 80280e0:	ddf4      	ble.n	80280cc <__kernel_rem_pio2f+0x90>
 80280e2:	ece9 7a01 	vstmia	r9!, {s15}
 80280e6:	f10c 0c01 	add.w	ip, ip, #1
 80280ea:	3404      	adds	r4, #4
 80280ec:	e7d5      	b.n	802809a <__kernel_rem_pio2f+0x5e>
 80280ee:	a908      	add	r1, sp, #32
 80280f0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80280f4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 80280f8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8028338 <__kernel_rem_pio2f+0x2fc>
 80280fc:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8028334 <__kernel_rem_pio2f+0x2f8>
 8028100:	9105      	str	r1, [sp, #20]
 8028102:	9304      	str	r3, [sp, #16]
 8028104:	4656      	mov	r6, sl
 8028106:	00b3      	lsls	r3, r6, #2
 8028108:	9306      	str	r3, [sp, #24]
 802810a:	ab58      	add	r3, sp, #352	; 0x160
 802810c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8028110:	ac08      	add	r4, sp, #32
 8028112:	ab44      	add	r3, sp, #272	; 0x110
 8028114:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8028118:	46a4      	mov	ip, r4
 802811a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802811e:	4637      	mov	r7, r6
 8028120:	2f00      	cmp	r7, #0
 8028122:	f1a0 0004 	sub.w	r0, r0, #4
 8028126:	dc4a      	bgt.n	80281be <__kernel_rem_pio2f+0x182>
 8028128:	4628      	mov	r0, r5
 802812a:	9207      	str	r2, [sp, #28]
 802812c:	f7ff ff20 	bl	8027f70 <scalbnf>
 8028130:	eeb0 8a40 	vmov.f32	s16, s0
 8028134:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8028138:	ee28 0a00 	vmul.f32	s0, s16, s0
 802813c:	f7ff fcfc 	bl	8027b38 <floorf>
 8028140:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8028144:	eea0 8a67 	vfms.f32	s16, s0, s15
 8028148:	2d00      	cmp	r5, #0
 802814a:	9a07      	ldr	r2, [sp, #28]
 802814c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8028150:	ee17 9a90 	vmov	r9, s15
 8028154:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028158:	ee38 8a67 	vsub.f32	s16, s16, s15
 802815c:	dd41      	ble.n	80281e2 <__kernel_rem_pio2f+0x1a6>
 802815e:	f106 3cff 	add.w	ip, r6, #4294967295
 8028162:	ab08      	add	r3, sp, #32
 8028164:	f1c5 0e08 	rsb	lr, r5, #8
 8028168:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802816c:	fa47 f00e 	asr.w	r0, r7, lr
 8028170:	4481      	add	r9, r0
 8028172:	fa00 f00e 	lsl.w	r0, r0, lr
 8028176:	1a3f      	subs	r7, r7, r0
 8028178:	f1c5 0007 	rsb	r0, r5, #7
 802817c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8028180:	4107      	asrs	r7, r0
 8028182:	2f00      	cmp	r7, #0
 8028184:	dd3c      	ble.n	8028200 <__kernel_rem_pio2f+0x1c4>
 8028186:	f04f 0e00 	mov.w	lr, #0
 802818a:	f109 0901 	add.w	r9, r9, #1
 802818e:	4671      	mov	r1, lr
 8028190:	4576      	cmp	r6, lr
 8028192:	dc67      	bgt.n	8028264 <__kernel_rem_pio2f+0x228>
 8028194:	2d00      	cmp	r5, #0
 8028196:	dd03      	ble.n	80281a0 <__kernel_rem_pio2f+0x164>
 8028198:	2d01      	cmp	r5, #1
 802819a:	d074      	beq.n	8028286 <__kernel_rem_pio2f+0x24a>
 802819c:	2d02      	cmp	r5, #2
 802819e:	d07b      	beq.n	8028298 <__kernel_rem_pio2f+0x25c>
 80281a0:	2f02      	cmp	r7, #2
 80281a2:	d12d      	bne.n	8028200 <__kernel_rem_pio2f+0x1c4>
 80281a4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80281a8:	ee30 8a48 	vsub.f32	s16, s0, s16
 80281ac:	b341      	cbz	r1, 8028200 <__kernel_rem_pio2f+0x1c4>
 80281ae:	4628      	mov	r0, r5
 80281b0:	9207      	str	r2, [sp, #28]
 80281b2:	f7ff fedd 	bl	8027f70 <scalbnf>
 80281b6:	9a07      	ldr	r2, [sp, #28]
 80281b8:	ee38 8a40 	vsub.f32	s16, s16, s0
 80281bc:	e020      	b.n	8028200 <__kernel_rem_pio2f+0x1c4>
 80281be:	ee60 7a28 	vmul.f32	s15, s0, s17
 80281c2:	3f01      	subs	r7, #1
 80281c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80281c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80281cc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80281d0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80281d4:	ecac 0a01 	vstmia	ip!, {s0}
 80281d8:	ed90 0a00 	vldr	s0, [r0]
 80281dc:	ee37 0a80 	vadd.f32	s0, s15, s0
 80281e0:	e79e      	b.n	8028120 <__kernel_rem_pio2f+0xe4>
 80281e2:	d105      	bne.n	80281f0 <__kernel_rem_pio2f+0x1b4>
 80281e4:	1e70      	subs	r0, r6, #1
 80281e6:	ab08      	add	r3, sp, #32
 80281e8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80281ec:	11ff      	asrs	r7, r7, #7
 80281ee:	e7c8      	b.n	8028182 <__kernel_rem_pio2f+0x146>
 80281f0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80281f4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80281f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281fc:	da30      	bge.n	8028260 <__kernel_rem_pio2f+0x224>
 80281fe:	2700      	movs	r7, #0
 8028200:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8028204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028208:	f040 809a 	bne.w	8028340 <__kernel_rem_pio2f+0x304>
 802820c:	1e74      	subs	r4, r6, #1
 802820e:	46a4      	mov	ip, r4
 8028210:	2100      	movs	r1, #0
 8028212:	45d4      	cmp	ip, sl
 8028214:	da47      	bge.n	80282a6 <__kernel_rem_pio2f+0x26a>
 8028216:	2900      	cmp	r1, #0
 8028218:	d063      	beq.n	80282e2 <__kernel_rem_pio2f+0x2a6>
 802821a:	ab08      	add	r3, sp, #32
 802821c:	3d08      	subs	r5, #8
 802821e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8028222:	2b00      	cmp	r3, #0
 8028224:	d07f      	beq.n	8028326 <__kernel_rem_pio2f+0x2ea>
 8028226:	4628      	mov	r0, r5
 8028228:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802822c:	f7ff fea0 	bl	8027f70 <scalbnf>
 8028230:	1c63      	adds	r3, r4, #1
 8028232:	aa44      	add	r2, sp, #272	; 0x110
 8028234:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8028338 <__kernel_rem_pio2f+0x2fc>
 8028238:	0099      	lsls	r1, r3, #2
 802823a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802823e:	4623      	mov	r3, r4
 8028240:	2b00      	cmp	r3, #0
 8028242:	f280 80ad 	bge.w	80283a0 <__kernel_rem_pio2f+0x364>
 8028246:	4623      	mov	r3, r4
 8028248:	2b00      	cmp	r3, #0
 802824a:	f2c0 80cb 	blt.w	80283e4 <__kernel_rem_pio2f+0x3a8>
 802824e:	aa44      	add	r2, sp, #272	; 0x110
 8028250:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8028254:	4e36      	ldr	r6, [pc, #216]	; (8028330 <__kernel_rem_pio2f+0x2f4>)
 8028256:	eddf 7a39 	vldr	s15, [pc, #228]	; 802833c <__kernel_rem_pio2f+0x300>
 802825a:	2000      	movs	r0, #0
 802825c:	1ae2      	subs	r2, r4, r3
 802825e:	e0b6      	b.n	80283ce <__kernel_rem_pio2f+0x392>
 8028260:	2702      	movs	r7, #2
 8028262:	e790      	b.n	8028186 <__kernel_rem_pio2f+0x14a>
 8028264:	6820      	ldr	r0, [r4, #0]
 8028266:	b949      	cbnz	r1, 802827c <__kernel_rem_pio2f+0x240>
 8028268:	b118      	cbz	r0, 8028272 <__kernel_rem_pio2f+0x236>
 802826a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802826e:	6020      	str	r0, [r4, #0]
 8028270:	2001      	movs	r0, #1
 8028272:	f10e 0e01 	add.w	lr, lr, #1
 8028276:	3404      	adds	r4, #4
 8028278:	4601      	mov	r1, r0
 802827a:	e789      	b.n	8028190 <__kernel_rem_pio2f+0x154>
 802827c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8028280:	6020      	str	r0, [r4, #0]
 8028282:	4608      	mov	r0, r1
 8028284:	e7f5      	b.n	8028272 <__kernel_rem_pio2f+0x236>
 8028286:	1e74      	subs	r4, r6, #1
 8028288:	ab08      	add	r3, sp, #32
 802828a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802828e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8028292:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8028296:	e783      	b.n	80281a0 <__kernel_rem_pio2f+0x164>
 8028298:	1e74      	subs	r4, r6, #1
 802829a:	ab08      	add	r3, sp, #32
 802829c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80282a0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80282a4:	e7f5      	b.n	8028292 <__kernel_rem_pio2f+0x256>
 80282a6:	ab08      	add	r3, sp, #32
 80282a8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 80282ac:	f10c 3cff 	add.w	ip, ip, #4294967295
 80282b0:	4301      	orrs	r1, r0
 80282b2:	e7ae      	b.n	8028212 <__kernel_rem_pio2f+0x1d6>
 80282b4:	3001      	adds	r0, #1
 80282b6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 80282ba:	2f00      	cmp	r7, #0
 80282bc:	d0fa      	beq.n	80282b4 <__kernel_rem_pio2f+0x278>
 80282be:	9b06      	ldr	r3, [sp, #24]
 80282c0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80282c4:	eb0d 0403 	add.w	r4, sp, r3
 80282c8:	9b01      	ldr	r3, [sp, #4]
 80282ca:	18f7      	adds	r7, r6, r3
 80282cc:	ab1c      	add	r3, sp, #112	; 0x70
 80282ce:	f106 0c01 	add.w	ip, r6, #1
 80282d2:	3c4c      	subs	r4, #76	; 0x4c
 80282d4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80282d8:	4430      	add	r0, r6
 80282da:	4560      	cmp	r0, ip
 80282dc:	da04      	bge.n	80282e8 <__kernel_rem_pio2f+0x2ac>
 80282de:	4606      	mov	r6, r0
 80282e0:	e711      	b.n	8028106 <__kernel_rem_pio2f+0xca>
 80282e2:	9c05      	ldr	r4, [sp, #20]
 80282e4:	2001      	movs	r0, #1
 80282e6:	e7e6      	b.n	80282b6 <__kernel_rem_pio2f+0x27a>
 80282e8:	9b04      	ldr	r3, [sp, #16]
 80282ea:	f8dd e008 	ldr.w	lr, [sp, #8]
 80282ee:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80282f2:	9306      	str	r3, [sp, #24]
 80282f4:	ee07 3a90 	vmov	s15, r3
 80282f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80282fc:	2600      	movs	r6, #0
 80282fe:	ece7 7a01 	vstmia	r7!, {s15}
 8028302:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802833c <__kernel_rem_pio2f+0x300>
 8028306:	46b9      	mov	r9, r7
 8028308:	455e      	cmp	r6, fp
 802830a:	dd04      	ble.n	8028316 <__kernel_rem_pio2f+0x2da>
 802830c:	ece4 7a01 	vstmia	r4!, {s15}
 8028310:	f10c 0c01 	add.w	ip, ip, #1
 8028314:	e7e1      	b.n	80282da <__kernel_rem_pio2f+0x29e>
 8028316:	ecfe 6a01 	vldmia	lr!, {s13}
 802831a:	ed39 7a01 	vldmdb	r9!, {s14}
 802831e:	3601      	adds	r6, #1
 8028320:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028324:	e7f0      	b.n	8028308 <__kernel_rem_pio2f+0x2cc>
 8028326:	3c01      	subs	r4, #1
 8028328:	e777      	b.n	802821a <__kernel_rem_pio2f+0x1de>
 802832a:	bf00      	nop
 802832c:	0802d700 	.word	0x0802d700
 8028330:	0802d6d4 	.word	0x0802d6d4
 8028334:	43800000 	.word	0x43800000
 8028338:	3b800000 	.word	0x3b800000
 802833c:	00000000 	.word	0x00000000
 8028340:	9b03      	ldr	r3, [sp, #12]
 8028342:	eeb0 0a48 	vmov.f32	s0, s16
 8028346:	1a98      	subs	r0, r3, r2
 8028348:	f7ff fe12 	bl	8027f70 <scalbnf>
 802834c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8028334 <__kernel_rem_pio2f+0x2f8>
 8028350:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8028354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028358:	db19      	blt.n	802838e <__kernel_rem_pio2f+0x352>
 802835a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8028338 <__kernel_rem_pio2f+0x2fc>
 802835e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028362:	aa08      	add	r2, sp, #32
 8028364:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8028368:	1c74      	adds	r4, r6, #1
 802836a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802836e:	3508      	adds	r5, #8
 8028370:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8028374:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8028378:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802837c:	ee10 3a10 	vmov	r3, s0
 8028380:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8028384:	ee17 3a90 	vmov	r3, s15
 8028388:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802838c:	e74b      	b.n	8028226 <__kernel_rem_pio2f+0x1ea>
 802838e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8028392:	aa08      	add	r2, sp, #32
 8028394:	ee10 3a10 	vmov	r3, s0
 8028398:	4634      	mov	r4, r6
 802839a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802839e:	e742      	b.n	8028226 <__kernel_rem_pio2f+0x1ea>
 80283a0:	a808      	add	r0, sp, #32
 80283a2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80283a6:	9001      	str	r0, [sp, #4]
 80283a8:	ee07 0a90 	vmov	s15, r0
 80283ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80283b0:	3b01      	subs	r3, #1
 80283b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80283b6:	ee20 0a07 	vmul.f32	s0, s0, s14
 80283ba:	ed62 7a01 	vstmdb	r2!, {s15}
 80283be:	e73f      	b.n	8028240 <__kernel_rem_pio2f+0x204>
 80283c0:	ecf6 6a01 	vldmia	r6!, {s13}
 80283c4:	ecb5 7a01 	vldmia	r5!, {s14}
 80283c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80283cc:	3001      	adds	r0, #1
 80283ce:	4550      	cmp	r0, sl
 80283d0:	dc01      	bgt.n	80283d6 <__kernel_rem_pio2f+0x39a>
 80283d2:	4290      	cmp	r0, r2
 80283d4:	ddf4      	ble.n	80283c0 <__kernel_rem_pio2f+0x384>
 80283d6:	a858      	add	r0, sp, #352	; 0x160
 80283d8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80283dc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 80283e0:	3b01      	subs	r3, #1
 80283e2:	e731      	b.n	8028248 <__kernel_rem_pio2f+0x20c>
 80283e4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 80283e6:	2b02      	cmp	r3, #2
 80283e8:	dc09      	bgt.n	80283fe <__kernel_rem_pio2f+0x3c2>
 80283ea:	2b00      	cmp	r3, #0
 80283ec:	dc2b      	bgt.n	8028446 <__kernel_rem_pio2f+0x40a>
 80283ee:	d044      	beq.n	802847a <__kernel_rem_pio2f+0x43e>
 80283f0:	f009 0007 	and.w	r0, r9, #7
 80283f4:	b059      	add	sp, #356	; 0x164
 80283f6:	ecbd 8b04 	vpop	{d8-d9}
 80283fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80283fe:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028400:	2b03      	cmp	r3, #3
 8028402:	d1f5      	bne.n	80283f0 <__kernel_rem_pio2f+0x3b4>
 8028404:	aa30      	add	r2, sp, #192	; 0xc0
 8028406:	1f0b      	subs	r3, r1, #4
 8028408:	4413      	add	r3, r2
 802840a:	461a      	mov	r2, r3
 802840c:	4620      	mov	r0, r4
 802840e:	2800      	cmp	r0, #0
 8028410:	f1a2 0204 	sub.w	r2, r2, #4
 8028414:	dc52      	bgt.n	80284bc <__kernel_rem_pio2f+0x480>
 8028416:	4622      	mov	r2, r4
 8028418:	2a01      	cmp	r2, #1
 802841a:	f1a3 0304 	sub.w	r3, r3, #4
 802841e:	dc5d      	bgt.n	80284dc <__kernel_rem_pio2f+0x4a0>
 8028420:	ab30      	add	r3, sp, #192	; 0xc0
 8028422:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802833c <__kernel_rem_pio2f+0x300>
 8028426:	440b      	add	r3, r1
 8028428:	2c01      	cmp	r4, #1
 802842a:	dc67      	bgt.n	80284fc <__kernel_rem_pio2f+0x4c0>
 802842c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8028430:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8028434:	2f00      	cmp	r7, #0
 8028436:	d167      	bne.n	8028508 <__kernel_rem_pio2f+0x4cc>
 8028438:	edc8 6a00 	vstr	s13, [r8]
 802843c:	ed88 7a01 	vstr	s14, [r8, #4]
 8028440:	edc8 7a02 	vstr	s15, [r8, #8]
 8028444:	e7d4      	b.n	80283f0 <__kernel_rem_pio2f+0x3b4>
 8028446:	ab30      	add	r3, sp, #192	; 0xc0
 8028448:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802833c <__kernel_rem_pio2f+0x300>
 802844c:	440b      	add	r3, r1
 802844e:	4622      	mov	r2, r4
 8028450:	2a00      	cmp	r2, #0
 8028452:	da24      	bge.n	802849e <__kernel_rem_pio2f+0x462>
 8028454:	b34f      	cbz	r7, 80284aa <__kernel_rem_pio2f+0x46e>
 8028456:	eef1 7a47 	vneg.f32	s15, s14
 802845a:	edc8 7a00 	vstr	s15, [r8]
 802845e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8028462:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028466:	aa31      	add	r2, sp, #196	; 0xc4
 8028468:	2301      	movs	r3, #1
 802846a:	429c      	cmp	r4, r3
 802846c:	da20      	bge.n	80284b0 <__kernel_rem_pio2f+0x474>
 802846e:	b10f      	cbz	r7, 8028474 <__kernel_rem_pio2f+0x438>
 8028470:	eef1 7a67 	vneg.f32	s15, s15
 8028474:	edc8 7a01 	vstr	s15, [r8, #4]
 8028478:	e7ba      	b.n	80283f0 <__kernel_rem_pio2f+0x3b4>
 802847a:	ab30      	add	r3, sp, #192	; 0xc0
 802847c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802833c <__kernel_rem_pio2f+0x300>
 8028480:	440b      	add	r3, r1
 8028482:	2c00      	cmp	r4, #0
 8028484:	da05      	bge.n	8028492 <__kernel_rem_pio2f+0x456>
 8028486:	b10f      	cbz	r7, 802848c <__kernel_rem_pio2f+0x450>
 8028488:	eef1 7a67 	vneg.f32	s15, s15
 802848c:	edc8 7a00 	vstr	s15, [r8]
 8028490:	e7ae      	b.n	80283f0 <__kernel_rem_pio2f+0x3b4>
 8028492:	ed33 7a01 	vldmdb	r3!, {s14}
 8028496:	3c01      	subs	r4, #1
 8028498:	ee77 7a87 	vadd.f32	s15, s15, s14
 802849c:	e7f1      	b.n	8028482 <__kernel_rem_pio2f+0x446>
 802849e:	ed73 7a01 	vldmdb	r3!, {s15}
 80284a2:	3a01      	subs	r2, #1
 80284a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80284a8:	e7d2      	b.n	8028450 <__kernel_rem_pio2f+0x414>
 80284aa:	eef0 7a47 	vmov.f32	s15, s14
 80284ae:	e7d4      	b.n	802845a <__kernel_rem_pio2f+0x41e>
 80284b0:	ecb2 7a01 	vldmia	r2!, {s14}
 80284b4:	3301      	adds	r3, #1
 80284b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80284ba:	e7d6      	b.n	802846a <__kernel_rem_pio2f+0x42e>
 80284bc:	edd2 7a00 	vldr	s15, [r2]
 80284c0:	edd2 6a01 	vldr	s13, [r2, #4]
 80284c4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80284c8:	3801      	subs	r0, #1
 80284ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80284ce:	ed82 7a00 	vstr	s14, [r2]
 80284d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80284d6:	edc2 7a01 	vstr	s15, [r2, #4]
 80284da:	e798      	b.n	802840e <__kernel_rem_pio2f+0x3d2>
 80284dc:	edd3 7a00 	vldr	s15, [r3]
 80284e0:	edd3 6a01 	vldr	s13, [r3, #4]
 80284e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80284e8:	3a01      	subs	r2, #1
 80284ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80284ee:	ed83 7a00 	vstr	s14, [r3]
 80284f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80284f6:	edc3 7a01 	vstr	s15, [r3, #4]
 80284fa:	e78d      	b.n	8028418 <__kernel_rem_pio2f+0x3dc>
 80284fc:	ed33 7a01 	vldmdb	r3!, {s14}
 8028500:	3c01      	subs	r4, #1
 8028502:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028506:	e78f      	b.n	8028428 <__kernel_rem_pio2f+0x3ec>
 8028508:	eef1 6a66 	vneg.f32	s13, s13
 802850c:	eeb1 7a47 	vneg.f32	s14, s14
 8028510:	edc8 6a00 	vstr	s13, [r8]
 8028514:	ed88 7a01 	vstr	s14, [r8, #4]
 8028518:	eef1 7a67 	vneg.f32	s15, s15
 802851c:	e790      	b.n	8028440 <__kernel_rem_pio2f+0x404>
 802851e:	bf00      	nop

08028520 <abort>:
 8028520:	b508      	push	{r3, lr}
 8028522:	2006      	movs	r0, #6
 8028524:	f000 fa3a 	bl	802899c <raise>
 8028528:	2001      	movs	r0, #1
 802852a:	f7d9 fe3b 	bl	80021a4 <_exit>
	...

08028530 <__assert_func>:
 8028530:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8028532:	4614      	mov	r4, r2
 8028534:	461a      	mov	r2, r3
 8028536:	4b09      	ldr	r3, [pc, #36]	; (802855c <__assert_func+0x2c>)
 8028538:	681b      	ldr	r3, [r3, #0]
 802853a:	4605      	mov	r5, r0
 802853c:	68d8      	ldr	r0, [r3, #12]
 802853e:	b14c      	cbz	r4, 8028554 <__assert_func+0x24>
 8028540:	4b07      	ldr	r3, [pc, #28]	; (8028560 <__assert_func+0x30>)
 8028542:	9100      	str	r1, [sp, #0]
 8028544:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028548:	4906      	ldr	r1, [pc, #24]	; (8028564 <__assert_func+0x34>)
 802854a:	462b      	mov	r3, r5
 802854c:	f000 f982 	bl	8028854 <fiprintf>
 8028550:	f7ff ffe6 	bl	8028520 <abort>
 8028554:	4b04      	ldr	r3, [pc, #16]	; (8028568 <__assert_func+0x38>)
 8028556:	461c      	mov	r4, r3
 8028558:	e7f3      	b.n	8028542 <__assert_func+0x12>
 802855a:	bf00      	nop
 802855c:	20000160 	.word	0x20000160
 8028560:	0802d70c 	.word	0x0802d70c
 8028564:	0802d719 	.word	0x0802d719
 8028568:	0802d747 	.word	0x0802d747

0802856c <atexit>:
 802856c:	2300      	movs	r3, #0
 802856e:	4601      	mov	r1, r0
 8028570:	461a      	mov	r2, r3
 8028572:	4618      	mov	r0, r3
 8028574:	f000 bb16 	b.w	8028ba4 <__register_exitproc>

08028578 <malloc>:
 8028578:	4b02      	ldr	r3, [pc, #8]	; (8028584 <malloc+0xc>)
 802857a:	4601      	mov	r1, r0
 802857c:	6818      	ldr	r0, [r3, #0]
 802857e:	f000 b82b 	b.w	80285d8 <_malloc_r>
 8028582:	bf00      	nop
 8028584:	20000160 	.word	0x20000160

08028588 <free>:
 8028588:	4b02      	ldr	r3, [pc, #8]	; (8028594 <free+0xc>)
 802858a:	4601      	mov	r1, r0
 802858c:	6818      	ldr	r0, [r3, #0]
 802858e:	f000 bb67 	b.w	8028c60 <_free_r>
 8028592:	bf00      	nop
 8028594:	20000160 	.word	0x20000160

08028598 <sbrk_aligned>:
 8028598:	b570      	push	{r4, r5, r6, lr}
 802859a:	4e0e      	ldr	r6, [pc, #56]	; (80285d4 <sbrk_aligned+0x3c>)
 802859c:	460c      	mov	r4, r1
 802859e:	6831      	ldr	r1, [r6, #0]
 80285a0:	4605      	mov	r5, r0
 80285a2:	b911      	cbnz	r1, 80285aa <sbrk_aligned+0x12>
 80285a4:	f000 faa0 	bl	8028ae8 <_sbrk_r>
 80285a8:	6030      	str	r0, [r6, #0]
 80285aa:	4621      	mov	r1, r4
 80285ac:	4628      	mov	r0, r5
 80285ae:	f000 fa9b 	bl	8028ae8 <_sbrk_r>
 80285b2:	1c43      	adds	r3, r0, #1
 80285b4:	d00a      	beq.n	80285cc <sbrk_aligned+0x34>
 80285b6:	1cc4      	adds	r4, r0, #3
 80285b8:	f024 0403 	bic.w	r4, r4, #3
 80285bc:	42a0      	cmp	r0, r4
 80285be:	d007      	beq.n	80285d0 <sbrk_aligned+0x38>
 80285c0:	1a21      	subs	r1, r4, r0
 80285c2:	4628      	mov	r0, r5
 80285c4:	f000 fa90 	bl	8028ae8 <_sbrk_r>
 80285c8:	3001      	adds	r0, #1
 80285ca:	d101      	bne.n	80285d0 <sbrk_aligned+0x38>
 80285cc:	f04f 34ff 	mov.w	r4, #4294967295
 80285d0:	4620      	mov	r0, r4
 80285d2:	bd70      	pop	{r4, r5, r6, pc}
 80285d4:	20014124 	.word	0x20014124

080285d8 <_malloc_r>:
 80285d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80285dc:	1ccd      	adds	r5, r1, #3
 80285de:	f025 0503 	bic.w	r5, r5, #3
 80285e2:	3508      	adds	r5, #8
 80285e4:	2d0c      	cmp	r5, #12
 80285e6:	bf38      	it	cc
 80285e8:	250c      	movcc	r5, #12
 80285ea:	2d00      	cmp	r5, #0
 80285ec:	4607      	mov	r7, r0
 80285ee:	db01      	blt.n	80285f4 <_malloc_r+0x1c>
 80285f0:	42a9      	cmp	r1, r5
 80285f2:	d905      	bls.n	8028600 <_malloc_r+0x28>
 80285f4:	230c      	movs	r3, #12
 80285f6:	603b      	str	r3, [r7, #0]
 80285f8:	2600      	movs	r6, #0
 80285fa:	4630      	mov	r0, r6
 80285fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028600:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80286d4 <_malloc_r+0xfc>
 8028604:	f000 f868 	bl	80286d8 <__malloc_lock>
 8028608:	f8d8 3000 	ldr.w	r3, [r8]
 802860c:	461c      	mov	r4, r3
 802860e:	bb5c      	cbnz	r4, 8028668 <_malloc_r+0x90>
 8028610:	4629      	mov	r1, r5
 8028612:	4638      	mov	r0, r7
 8028614:	f7ff ffc0 	bl	8028598 <sbrk_aligned>
 8028618:	1c43      	adds	r3, r0, #1
 802861a:	4604      	mov	r4, r0
 802861c:	d155      	bne.n	80286ca <_malloc_r+0xf2>
 802861e:	f8d8 4000 	ldr.w	r4, [r8]
 8028622:	4626      	mov	r6, r4
 8028624:	2e00      	cmp	r6, #0
 8028626:	d145      	bne.n	80286b4 <_malloc_r+0xdc>
 8028628:	2c00      	cmp	r4, #0
 802862a:	d048      	beq.n	80286be <_malloc_r+0xe6>
 802862c:	6823      	ldr	r3, [r4, #0]
 802862e:	4631      	mov	r1, r6
 8028630:	4638      	mov	r0, r7
 8028632:	eb04 0903 	add.w	r9, r4, r3
 8028636:	f000 fa57 	bl	8028ae8 <_sbrk_r>
 802863a:	4581      	cmp	r9, r0
 802863c:	d13f      	bne.n	80286be <_malloc_r+0xe6>
 802863e:	6821      	ldr	r1, [r4, #0]
 8028640:	1a6d      	subs	r5, r5, r1
 8028642:	4629      	mov	r1, r5
 8028644:	4638      	mov	r0, r7
 8028646:	f7ff ffa7 	bl	8028598 <sbrk_aligned>
 802864a:	3001      	adds	r0, #1
 802864c:	d037      	beq.n	80286be <_malloc_r+0xe6>
 802864e:	6823      	ldr	r3, [r4, #0]
 8028650:	442b      	add	r3, r5
 8028652:	6023      	str	r3, [r4, #0]
 8028654:	f8d8 3000 	ldr.w	r3, [r8]
 8028658:	2b00      	cmp	r3, #0
 802865a:	d038      	beq.n	80286ce <_malloc_r+0xf6>
 802865c:	685a      	ldr	r2, [r3, #4]
 802865e:	42a2      	cmp	r2, r4
 8028660:	d12b      	bne.n	80286ba <_malloc_r+0xe2>
 8028662:	2200      	movs	r2, #0
 8028664:	605a      	str	r2, [r3, #4]
 8028666:	e00f      	b.n	8028688 <_malloc_r+0xb0>
 8028668:	6822      	ldr	r2, [r4, #0]
 802866a:	1b52      	subs	r2, r2, r5
 802866c:	d41f      	bmi.n	80286ae <_malloc_r+0xd6>
 802866e:	2a0b      	cmp	r2, #11
 8028670:	d917      	bls.n	80286a2 <_malloc_r+0xca>
 8028672:	1961      	adds	r1, r4, r5
 8028674:	42a3      	cmp	r3, r4
 8028676:	6025      	str	r5, [r4, #0]
 8028678:	bf18      	it	ne
 802867a:	6059      	strne	r1, [r3, #4]
 802867c:	6863      	ldr	r3, [r4, #4]
 802867e:	bf08      	it	eq
 8028680:	f8c8 1000 	streq.w	r1, [r8]
 8028684:	5162      	str	r2, [r4, r5]
 8028686:	604b      	str	r3, [r1, #4]
 8028688:	4638      	mov	r0, r7
 802868a:	f104 060b 	add.w	r6, r4, #11
 802868e:	f000 f829 	bl	80286e4 <__malloc_unlock>
 8028692:	f026 0607 	bic.w	r6, r6, #7
 8028696:	1d23      	adds	r3, r4, #4
 8028698:	1af2      	subs	r2, r6, r3
 802869a:	d0ae      	beq.n	80285fa <_malloc_r+0x22>
 802869c:	1b9b      	subs	r3, r3, r6
 802869e:	50a3      	str	r3, [r4, r2]
 80286a0:	e7ab      	b.n	80285fa <_malloc_r+0x22>
 80286a2:	42a3      	cmp	r3, r4
 80286a4:	6862      	ldr	r2, [r4, #4]
 80286a6:	d1dd      	bne.n	8028664 <_malloc_r+0x8c>
 80286a8:	f8c8 2000 	str.w	r2, [r8]
 80286ac:	e7ec      	b.n	8028688 <_malloc_r+0xb0>
 80286ae:	4623      	mov	r3, r4
 80286b0:	6864      	ldr	r4, [r4, #4]
 80286b2:	e7ac      	b.n	802860e <_malloc_r+0x36>
 80286b4:	4634      	mov	r4, r6
 80286b6:	6876      	ldr	r6, [r6, #4]
 80286b8:	e7b4      	b.n	8028624 <_malloc_r+0x4c>
 80286ba:	4613      	mov	r3, r2
 80286bc:	e7cc      	b.n	8028658 <_malloc_r+0x80>
 80286be:	230c      	movs	r3, #12
 80286c0:	603b      	str	r3, [r7, #0]
 80286c2:	4638      	mov	r0, r7
 80286c4:	f000 f80e 	bl	80286e4 <__malloc_unlock>
 80286c8:	e797      	b.n	80285fa <_malloc_r+0x22>
 80286ca:	6025      	str	r5, [r4, #0]
 80286cc:	e7dc      	b.n	8028688 <_malloc_r+0xb0>
 80286ce:	605b      	str	r3, [r3, #4]
 80286d0:	deff      	udf	#255	; 0xff
 80286d2:	bf00      	nop
 80286d4:	20014120 	.word	0x20014120

080286d8 <__malloc_lock>:
 80286d8:	4801      	ldr	r0, [pc, #4]	; (80286e0 <__malloc_lock+0x8>)
 80286da:	f000 ba52 	b.w	8028b82 <__retarget_lock_acquire_recursive>
 80286de:	bf00      	nop
 80286e0:	20014269 	.word	0x20014269

080286e4 <__malloc_unlock>:
 80286e4:	4801      	ldr	r0, [pc, #4]	; (80286ec <__malloc_unlock+0x8>)
 80286e6:	f000 ba4d 	b.w	8028b84 <__retarget_lock_release_recursive>
 80286ea:	bf00      	nop
 80286ec:	20014269 	.word	0x20014269

080286f0 <__cxa_atexit>:
 80286f0:	b510      	push	{r4, lr}
 80286f2:	4c05      	ldr	r4, [pc, #20]	; (8028708 <__cxa_atexit+0x18>)
 80286f4:	4613      	mov	r3, r2
 80286f6:	b12c      	cbz	r4, 8028704 <__cxa_atexit+0x14>
 80286f8:	460a      	mov	r2, r1
 80286fa:	4601      	mov	r1, r0
 80286fc:	2002      	movs	r0, #2
 80286fe:	f000 fa51 	bl	8028ba4 <__register_exitproc>
 8028702:	bd10      	pop	{r4, pc}
 8028704:	4620      	mov	r0, r4
 8028706:	e7fc      	b.n	8028702 <__cxa_atexit+0x12>
 8028708:	08028ba5 	.word	0x08028ba5

0802870c <std>:
 802870c:	2300      	movs	r3, #0
 802870e:	b510      	push	{r4, lr}
 8028710:	4604      	mov	r4, r0
 8028712:	e9c0 3300 	strd	r3, r3, [r0]
 8028716:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802871a:	6083      	str	r3, [r0, #8]
 802871c:	8181      	strh	r1, [r0, #12]
 802871e:	6643      	str	r3, [r0, #100]	; 0x64
 8028720:	81c2      	strh	r2, [r0, #14]
 8028722:	6183      	str	r3, [r0, #24]
 8028724:	4619      	mov	r1, r3
 8028726:	2208      	movs	r2, #8
 8028728:	305c      	adds	r0, #92	; 0x5c
 802872a:	f000 f906 	bl	802893a <memset>
 802872e:	4b0d      	ldr	r3, [pc, #52]	; (8028764 <std+0x58>)
 8028730:	6263      	str	r3, [r4, #36]	; 0x24
 8028732:	4b0d      	ldr	r3, [pc, #52]	; (8028768 <std+0x5c>)
 8028734:	62a3      	str	r3, [r4, #40]	; 0x28
 8028736:	4b0d      	ldr	r3, [pc, #52]	; (802876c <std+0x60>)
 8028738:	62e3      	str	r3, [r4, #44]	; 0x2c
 802873a:	4b0d      	ldr	r3, [pc, #52]	; (8028770 <std+0x64>)
 802873c:	6323      	str	r3, [r4, #48]	; 0x30
 802873e:	4b0d      	ldr	r3, [pc, #52]	; (8028774 <std+0x68>)
 8028740:	6224      	str	r4, [r4, #32]
 8028742:	429c      	cmp	r4, r3
 8028744:	d006      	beq.n	8028754 <std+0x48>
 8028746:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802874a:	4294      	cmp	r4, r2
 802874c:	d002      	beq.n	8028754 <std+0x48>
 802874e:	33d0      	adds	r3, #208	; 0xd0
 8028750:	429c      	cmp	r4, r3
 8028752:	d105      	bne.n	8028760 <std+0x54>
 8028754:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8028758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802875c:	f000 ba10 	b.w	8028b80 <__retarget_lock_init_recursive>
 8028760:	bd10      	pop	{r4, pc}
 8028762:	bf00      	nop
 8028764:	080288b5 	.word	0x080288b5
 8028768:	080288d7 	.word	0x080288d7
 802876c:	0802890f 	.word	0x0802890f
 8028770:	08028933 	.word	0x08028933
 8028774:	20014128 	.word	0x20014128

08028778 <stdio_exit_handler>:
 8028778:	4a02      	ldr	r2, [pc, #8]	; (8028784 <stdio_exit_handler+0xc>)
 802877a:	4903      	ldr	r1, [pc, #12]	; (8028788 <stdio_exit_handler+0x10>)
 802877c:	4803      	ldr	r0, [pc, #12]	; (802878c <stdio_exit_handler+0x14>)
 802877e:	f000 b87b 	b.w	8028878 <_fwalk_sglue>
 8028782:	bf00      	nop
 8028784:	20000108 	.word	0x20000108
 8028788:	080293ad 	.word	0x080293ad
 802878c:	20000114 	.word	0x20000114

08028790 <cleanup_stdio>:
 8028790:	6841      	ldr	r1, [r0, #4]
 8028792:	4b0c      	ldr	r3, [pc, #48]	; (80287c4 <cleanup_stdio+0x34>)
 8028794:	4299      	cmp	r1, r3
 8028796:	b510      	push	{r4, lr}
 8028798:	4604      	mov	r4, r0
 802879a:	d001      	beq.n	80287a0 <cleanup_stdio+0x10>
 802879c:	f000 fe06 	bl	80293ac <_fflush_r>
 80287a0:	68a1      	ldr	r1, [r4, #8]
 80287a2:	4b09      	ldr	r3, [pc, #36]	; (80287c8 <cleanup_stdio+0x38>)
 80287a4:	4299      	cmp	r1, r3
 80287a6:	d002      	beq.n	80287ae <cleanup_stdio+0x1e>
 80287a8:	4620      	mov	r0, r4
 80287aa:	f000 fdff 	bl	80293ac <_fflush_r>
 80287ae:	68e1      	ldr	r1, [r4, #12]
 80287b0:	4b06      	ldr	r3, [pc, #24]	; (80287cc <cleanup_stdio+0x3c>)
 80287b2:	4299      	cmp	r1, r3
 80287b4:	d004      	beq.n	80287c0 <cleanup_stdio+0x30>
 80287b6:	4620      	mov	r0, r4
 80287b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80287bc:	f000 bdf6 	b.w	80293ac <_fflush_r>
 80287c0:	bd10      	pop	{r4, pc}
 80287c2:	bf00      	nop
 80287c4:	20014128 	.word	0x20014128
 80287c8:	20014190 	.word	0x20014190
 80287cc:	200141f8 	.word	0x200141f8

080287d0 <global_stdio_init.part.0>:
 80287d0:	b510      	push	{r4, lr}
 80287d2:	4b0b      	ldr	r3, [pc, #44]	; (8028800 <global_stdio_init.part.0+0x30>)
 80287d4:	4c0b      	ldr	r4, [pc, #44]	; (8028804 <global_stdio_init.part.0+0x34>)
 80287d6:	4a0c      	ldr	r2, [pc, #48]	; (8028808 <global_stdio_init.part.0+0x38>)
 80287d8:	601a      	str	r2, [r3, #0]
 80287da:	4620      	mov	r0, r4
 80287dc:	2200      	movs	r2, #0
 80287de:	2104      	movs	r1, #4
 80287e0:	f7ff ff94 	bl	802870c <std>
 80287e4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80287e8:	2201      	movs	r2, #1
 80287ea:	2109      	movs	r1, #9
 80287ec:	f7ff ff8e 	bl	802870c <std>
 80287f0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80287f4:	2202      	movs	r2, #2
 80287f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80287fa:	2112      	movs	r1, #18
 80287fc:	f7ff bf86 	b.w	802870c <std>
 8028800:	20014260 	.word	0x20014260
 8028804:	20014128 	.word	0x20014128
 8028808:	08028779 	.word	0x08028779

0802880c <__sfp_lock_acquire>:
 802880c:	4801      	ldr	r0, [pc, #4]	; (8028814 <__sfp_lock_acquire+0x8>)
 802880e:	f000 b9b8 	b.w	8028b82 <__retarget_lock_acquire_recursive>
 8028812:	bf00      	nop
 8028814:	2001426a 	.word	0x2001426a

08028818 <__sfp_lock_release>:
 8028818:	4801      	ldr	r0, [pc, #4]	; (8028820 <__sfp_lock_release+0x8>)
 802881a:	f000 b9b3 	b.w	8028b84 <__retarget_lock_release_recursive>
 802881e:	bf00      	nop
 8028820:	2001426a 	.word	0x2001426a

08028824 <__sinit>:
 8028824:	b510      	push	{r4, lr}
 8028826:	4604      	mov	r4, r0
 8028828:	f7ff fff0 	bl	802880c <__sfp_lock_acquire>
 802882c:	6a23      	ldr	r3, [r4, #32]
 802882e:	b11b      	cbz	r3, 8028838 <__sinit+0x14>
 8028830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028834:	f7ff bff0 	b.w	8028818 <__sfp_lock_release>
 8028838:	4b04      	ldr	r3, [pc, #16]	; (802884c <__sinit+0x28>)
 802883a:	6223      	str	r3, [r4, #32]
 802883c:	4b04      	ldr	r3, [pc, #16]	; (8028850 <__sinit+0x2c>)
 802883e:	681b      	ldr	r3, [r3, #0]
 8028840:	2b00      	cmp	r3, #0
 8028842:	d1f5      	bne.n	8028830 <__sinit+0xc>
 8028844:	f7ff ffc4 	bl	80287d0 <global_stdio_init.part.0>
 8028848:	e7f2      	b.n	8028830 <__sinit+0xc>
 802884a:	bf00      	nop
 802884c:	08028791 	.word	0x08028791
 8028850:	20014260 	.word	0x20014260

08028854 <fiprintf>:
 8028854:	b40e      	push	{r1, r2, r3}
 8028856:	b503      	push	{r0, r1, lr}
 8028858:	4601      	mov	r1, r0
 802885a:	ab03      	add	r3, sp, #12
 802885c:	4805      	ldr	r0, [pc, #20]	; (8028874 <fiprintf+0x20>)
 802885e:	f853 2b04 	ldr.w	r2, [r3], #4
 8028862:	6800      	ldr	r0, [r0, #0]
 8028864:	9301      	str	r3, [sp, #4]
 8028866:	f000 fa71 	bl	8028d4c <_vfiprintf_r>
 802886a:	b002      	add	sp, #8
 802886c:	f85d eb04 	ldr.w	lr, [sp], #4
 8028870:	b003      	add	sp, #12
 8028872:	4770      	bx	lr
 8028874:	20000160 	.word	0x20000160

08028878 <_fwalk_sglue>:
 8028878:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802887c:	4607      	mov	r7, r0
 802887e:	4688      	mov	r8, r1
 8028880:	4614      	mov	r4, r2
 8028882:	2600      	movs	r6, #0
 8028884:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8028888:	f1b9 0901 	subs.w	r9, r9, #1
 802888c:	d505      	bpl.n	802889a <_fwalk_sglue+0x22>
 802888e:	6824      	ldr	r4, [r4, #0]
 8028890:	2c00      	cmp	r4, #0
 8028892:	d1f7      	bne.n	8028884 <_fwalk_sglue+0xc>
 8028894:	4630      	mov	r0, r6
 8028896:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802889a:	89ab      	ldrh	r3, [r5, #12]
 802889c:	2b01      	cmp	r3, #1
 802889e:	d907      	bls.n	80288b0 <_fwalk_sglue+0x38>
 80288a0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80288a4:	3301      	adds	r3, #1
 80288a6:	d003      	beq.n	80288b0 <_fwalk_sglue+0x38>
 80288a8:	4629      	mov	r1, r5
 80288aa:	4638      	mov	r0, r7
 80288ac:	47c0      	blx	r8
 80288ae:	4306      	orrs	r6, r0
 80288b0:	3568      	adds	r5, #104	; 0x68
 80288b2:	e7e9      	b.n	8028888 <_fwalk_sglue+0x10>

080288b4 <__sread>:
 80288b4:	b510      	push	{r4, lr}
 80288b6:	460c      	mov	r4, r1
 80288b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80288bc:	f000 f8ee 	bl	8028a9c <_read_r>
 80288c0:	2800      	cmp	r0, #0
 80288c2:	bfab      	itete	ge
 80288c4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80288c6:	89a3      	ldrhlt	r3, [r4, #12]
 80288c8:	181b      	addge	r3, r3, r0
 80288ca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80288ce:	bfac      	ite	ge
 80288d0:	6563      	strge	r3, [r4, #84]	; 0x54
 80288d2:	81a3      	strhlt	r3, [r4, #12]
 80288d4:	bd10      	pop	{r4, pc}

080288d6 <__swrite>:
 80288d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80288da:	461f      	mov	r7, r3
 80288dc:	898b      	ldrh	r3, [r1, #12]
 80288de:	05db      	lsls	r3, r3, #23
 80288e0:	4605      	mov	r5, r0
 80288e2:	460c      	mov	r4, r1
 80288e4:	4616      	mov	r6, r2
 80288e6:	d505      	bpl.n	80288f4 <__swrite+0x1e>
 80288e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80288ec:	2302      	movs	r3, #2
 80288ee:	2200      	movs	r2, #0
 80288f0:	f000 f8c2 	bl	8028a78 <_lseek_r>
 80288f4:	89a3      	ldrh	r3, [r4, #12]
 80288f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80288fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80288fe:	81a3      	strh	r3, [r4, #12]
 8028900:	4632      	mov	r2, r6
 8028902:	463b      	mov	r3, r7
 8028904:	4628      	mov	r0, r5
 8028906:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802890a:	f000 b8fd 	b.w	8028b08 <_write_r>

0802890e <__sseek>:
 802890e:	b510      	push	{r4, lr}
 8028910:	460c      	mov	r4, r1
 8028912:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028916:	f000 f8af 	bl	8028a78 <_lseek_r>
 802891a:	1c43      	adds	r3, r0, #1
 802891c:	89a3      	ldrh	r3, [r4, #12]
 802891e:	bf15      	itete	ne
 8028920:	6560      	strne	r0, [r4, #84]	; 0x54
 8028922:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8028926:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802892a:	81a3      	strheq	r3, [r4, #12]
 802892c:	bf18      	it	ne
 802892e:	81a3      	strhne	r3, [r4, #12]
 8028930:	bd10      	pop	{r4, pc}

08028932 <__sclose>:
 8028932:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028936:	f000 b839 	b.w	80289ac <_close_r>

0802893a <memset>:
 802893a:	4402      	add	r2, r0
 802893c:	4603      	mov	r3, r0
 802893e:	4293      	cmp	r3, r2
 8028940:	d100      	bne.n	8028944 <memset+0xa>
 8028942:	4770      	bx	lr
 8028944:	f803 1b01 	strb.w	r1, [r3], #1
 8028948:	e7f9      	b.n	802893e <memset+0x4>

0802894a <_raise_r>:
 802894a:	291f      	cmp	r1, #31
 802894c:	b538      	push	{r3, r4, r5, lr}
 802894e:	4604      	mov	r4, r0
 8028950:	460d      	mov	r5, r1
 8028952:	d904      	bls.n	802895e <_raise_r+0x14>
 8028954:	2316      	movs	r3, #22
 8028956:	6003      	str	r3, [r0, #0]
 8028958:	f04f 30ff 	mov.w	r0, #4294967295
 802895c:	bd38      	pop	{r3, r4, r5, pc}
 802895e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8028960:	b112      	cbz	r2, 8028968 <_raise_r+0x1e>
 8028962:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028966:	b94b      	cbnz	r3, 802897c <_raise_r+0x32>
 8028968:	4620      	mov	r0, r4
 802896a:	f000 f8bb 	bl	8028ae4 <_getpid_r>
 802896e:	462a      	mov	r2, r5
 8028970:	4601      	mov	r1, r0
 8028972:	4620      	mov	r0, r4
 8028974:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028978:	f000 b8a2 	b.w	8028ac0 <_kill_r>
 802897c:	2b01      	cmp	r3, #1
 802897e:	d00a      	beq.n	8028996 <_raise_r+0x4c>
 8028980:	1c59      	adds	r1, r3, #1
 8028982:	d103      	bne.n	802898c <_raise_r+0x42>
 8028984:	2316      	movs	r3, #22
 8028986:	6003      	str	r3, [r0, #0]
 8028988:	2001      	movs	r0, #1
 802898a:	e7e7      	b.n	802895c <_raise_r+0x12>
 802898c:	2400      	movs	r4, #0
 802898e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8028992:	4628      	mov	r0, r5
 8028994:	4798      	blx	r3
 8028996:	2000      	movs	r0, #0
 8028998:	e7e0      	b.n	802895c <_raise_r+0x12>
	...

0802899c <raise>:
 802899c:	4b02      	ldr	r3, [pc, #8]	; (80289a8 <raise+0xc>)
 802899e:	4601      	mov	r1, r0
 80289a0:	6818      	ldr	r0, [r3, #0]
 80289a2:	f7ff bfd2 	b.w	802894a <_raise_r>
 80289a6:	bf00      	nop
 80289a8:	20000160 	.word	0x20000160

080289ac <_close_r>:
 80289ac:	b538      	push	{r3, r4, r5, lr}
 80289ae:	4d06      	ldr	r5, [pc, #24]	; (80289c8 <_close_r+0x1c>)
 80289b0:	2300      	movs	r3, #0
 80289b2:	4604      	mov	r4, r0
 80289b4:	4608      	mov	r0, r1
 80289b6:	602b      	str	r3, [r5, #0]
 80289b8:	f7d9 fc16 	bl	80021e8 <_close>
 80289bc:	1c43      	adds	r3, r0, #1
 80289be:	d102      	bne.n	80289c6 <_close_r+0x1a>
 80289c0:	682b      	ldr	r3, [r5, #0]
 80289c2:	b103      	cbz	r3, 80289c6 <_close_r+0x1a>
 80289c4:	6023      	str	r3, [r4, #0]
 80289c6:	bd38      	pop	{r3, r4, r5, pc}
 80289c8:	20014264 	.word	0x20014264

080289cc <_reclaim_reent>:
 80289cc:	4b29      	ldr	r3, [pc, #164]	; (8028a74 <_reclaim_reent+0xa8>)
 80289ce:	681b      	ldr	r3, [r3, #0]
 80289d0:	4283      	cmp	r3, r0
 80289d2:	b570      	push	{r4, r5, r6, lr}
 80289d4:	4604      	mov	r4, r0
 80289d6:	d04b      	beq.n	8028a70 <_reclaim_reent+0xa4>
 80289d8:	69c3      	ldr	r3, [r0, #28]
 80289da:	b143      	cbz	r3, 80289ee <_reclaim_reent+0x22>
 80289dc:	68db      	ldr	r3, [r3, #12]
 80289de:	2b00      	cmp	r3, #0
 80289e0:	d144      	bne.n	8028a6c <_reclaim_reent+0xa0>
 80289e2:	69e3      	ldr	r3, [r4, #28]
 80289e4:	6819      	ldr	r1, [r3, #0]
 80289e6:	b111      	cbz	r1, 80289ee <_reclaim_reent+0x22>
 80289e8:	4620      	mov	r0, r4
 80289ea:	f000 f939 	bl	8028c60 <_free_r>
 80289ee:	6961      	ldr	r1, [r4, #20]
 80289f0:	b111      	cbz	r1, 80289f8 <_reclaim_reent+0x2c>
 80289f2:	4620      	mov	r0, r4
 80289f4:	f000 f934 	bl	8028c60 <_free_r>
 80289f8:	69e1      	ldr	r1, [r4, #28]
 80289fa:	b111      	cbz	r1, 8028a02 <_reclaim_reent+0x36>
 80289fc:	4620      	mov	r0, r4
 80289fe:	f000 f92f 	bl	8028c60 <_free_r>
 8028a02:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8028a04:	b111      	cbz	r1, 8028a0c <_reclaim_reent+0x40>
 8028a06:	4620      	mov	r0, r4
 8028a08:	f000 f92a 	bl	8028c60 <_free_r>
 8028a0c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028a0e:	b111      	cbz	r1, 8028a16 <_reclaim_reent+0x4a>
 8028a10:	4620      	mov	r0, r4
 8028a12:	f000 f925 	bl	8028c60 <_free_r>
 8028a16:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8028a18:	b111      	cbz	r1, 8028a20 <_reclaim_reent+0x54>
 8028a1a:	4620      	mov	r0, r4
 8028a1c:	f000 f920 	bl	8028c60 <_free_r>
 8028a20:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8028a22:	b111      	cbz	r1, 8028a2a <_reclaim_reent+0x5e>
 8028a24:	4620      	mov	r0, r4
 8028a26:	f000 f91b 	bl	8028c60 <_free_r>
 8028a2a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8028a2c:	b111      	cbz	r1, 8028a34 <_reclaim_reent+0x68>
 8028a2e:	4620      	mov	r0, r4
 8028a30:	f000 f916 	bl	8028c60 <_free_r>
 8028a34:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8028a36:	b111      	cbz	r1, 8028a3e <_reclaim_reent+0x72>
 8028a38:	4620      	mov	r0, r4
 8028a3a:	f000 f911 	bl	8028c60 <_free_r>
 8028a3e:	6a23      	ldr	r3, [r4, #32]
 8028a40:	b1b3      	cbz	r3, 8028a70 <_reclaim_reent+0xa4>
 8028a42:	4620      	mov	r0, r4
 8028a44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028a48:	4718      	bx	r3
 8028a4a:	5949      	ldr	r1, [r1, r5]
 8028a4c:	b941      	cbnz	r1, 8028a60 <_reclaim_reent+0x94>
 8028a4e:	3504      	adds	r5, #4
 8028a50:	69e3      	ldr	r3, [r4, #28]
 8028a52:	2d80      	cmp	r5, #128	; 0x80
 8028a54:	68d9      	ldr	r1, [r3, #12]
 8028a56:	d1f8      	bne.n	8028a4a <_reclaim_reent+0x7e>
 8028a58:	4620      	mov	r0, r4
 8028a5a:	f000 f901 	bl	8028c60 <_free_r>
 8028a5e:	e7c0      	b.n	80289e2 <_reclaim_reent+0x16>
 8028a60:	680e      	ldr	r6, [r1, #0]
 8028a62:	4620      	mov	r0, r4
 8028a64:	f000 f8fc 	bl	8028c60 <_free_r>
 8028a68:	4631      	mov	r1, r6
 8028a6a:	e7ef      	b.n	8028a4c <_reclaim_reent+0x80>
 8028a6c:	2500      	movs	r5, #0
 8028a6e:	e7ef      	b.n	8028a50 <_reclaim_reent+0x84>
 8028a70:	bd70      	pop	{r4, r5, r6, pc}
 8028a72:	bf00      	nop
 8028a74:	20000160 	.word	0x20000160

08028a78 <_lseek_r>:
 8028a78:	b538      	push	{r3, r4, r5, lr}
 8028a7a:	4d07      	ldr	r5, [pc, #28]	; (8028a98 <_lseek_r+0x20>)
 8028a7c:	4604      	mov	r4, r0
 8028a7e:	4608      	mov	r0, r1
 8028a80:	4611      	mov	r1, r2
 8028a82:	2200      	movs	r2, #0
 8028a84:	602a      	str	r2, [r5, #0]
 8028a86:	461a      	mov	r2, r3
 8028a88:	f7d9 fbba 	bl	8002200 <_lseek>
 8028a8c:	1c43      	adds	r3, r0, #1
 8028a8e:	d102      	bne.n	8028a96 <_lseek_r+0x1e>
 8028a90:	682b      	ldr	r3, [r5, #0]
 8028a92:	b103      	cbz	r3, 8028a96 <_lseek_r+0x1e>
 8028a94:	6023      	str	r3, [r4, #0]
 8028a96:	bd38      	pop	{r3, r4, r5, pc}
 8028a98:	20014264 	.word	0x20014264

08028a9c <_read_r>:
 8028a9c:	b538      	push	{r3, r4, r5, lr}
 8028a9e:	4d07      	ldr	r5, [pc, #28]	; (8028abc <_read_r+0x20>)
 8028aa0:	4604      	mov	r4, r0
 8028aa2:	4608      	mov	r0, r1
 8028aa4:	4611      	mov	r1, r2
 8028aa6:	2200      	movs	r2, #0
 8028aa8:	602a      	str	r2, [r5, #0]
 8028aaa:	461a      	mov	r2, r3
 8028aac:	f7d9 fb80 	bl	80021b0 <_read>
 8028ab0:	1c43      	adds	r3, r0, #1
 8028ab2:	d102      	bne.n	8028aba <_read_r+0x1e>
 8028ab4:	682b      	ldr	r3, [r5, #0]
 8028ab6:	b103      	cbz	r3, 8028aba <_read_r+0x1e>
 8028ab8:	6023      	str	r3, [r4, #0]
 8028aba:	bd38      	pop	{r3, r4, r5, pc}
 8028abc:	20014264 	.word	0x20014264

08028ac0 <_kill_r>:
 8028ac0:	b538      	push	{r3, r4, r5, lr}
 8028ac2:	4d07      	ldr	r5, [pc, #28]	; (8028ae0 <_kill_r+0x20>)
 8028ac4:	2300      	movs	r3, #0
 8028ac6:	4604      	mov	r4, r0
 8028ac8:	4608      	mov	r0, r1
 8028aca:	4611      	mov	r1, r2
 8028acc:	602b      	str	r3, [r5, #0]
 8028ace:	f7d9 fb61 	bl	8002194 <_kill>
 8028ad2:	1c43      	adds	r3, r0, #1
 8028ad4:	d102      	bne.n	8028adc <_kill_r+0x1c>
 8028ad6:	682b      	ldr	r3, [r5, #0]
 8028ad8:	b103      	cbz	r3, 8028adc <_kill_r+0x1c>
 8028ada:	6023      	str	r3, [r4, #0]
 8028adc:	bd38      	pop	{r3, r4, r5, pc}
 8028ade:	bf00      	nop
 8028ae0:	20014264 	.word	0x20014264

08028ae4 <_getpid_r>:
 8028ae4:	f7d9 bb54 	b.w	8002190 <_getpid>

08028ae8 <_sbrk_r>:
 8028ae8:	b538      	push	{r3, r4, r5, lr}
 8028aea:	4d06      	ldr	r5, [pc, #24]	; (8028b04 <_sbrk_r+0x1c>)
 8028aec:	2300      	movs	r3, #0
 8028aee:	4604      	mov	r4, r0
 8028af0:	4608      	mov	r0, r1
 8028af2:	602b      	str	r3, [r5, #0]
 8028af4:	f7d9 fb86 	bl	8002204 <_sbrk>
 8028af8:	1c43      	adds	r3, r0, #1
 8028afa:	d102      	bne.n	8028b02 <_sbrk_r+0x1a>
 8028afc:	682b      	ldr	r3, [r5, #0]
 8028afe:	b103      	cbz	r3, 8028b02 <_sbrk_r+0x1a>
 8028b00:	6023      	str	r3, [r4, #0]
 8028b02:	bd38      	pop	{r3, r4, r5, pc}
 8028b04:	20014264 	.word	0x20014264

08028b08 <_write_r>:
 8028b08:	b538      	push	{r3, r4, r5, lr}
 8028b0a:	4d07      	ldr	r5, [pc, #28]	; (8028b28 <_write_r+0x20>)
 8028b0c:	4604      	mov	r4, r0
 8028b0e:	4608      	mov	r0, r1
 8028b10:	4611      	mov	r1, r2
 8028b12:	2200      	movs	r2, #0
 8028b14:	602a      	str	r2, [r5, #0]
 8028b16:	461a      	mov	r2, r3
 8028b18:	f7d9 fb58 	bl	80021cc <_write>
 8028b1c:	1c43      	adds	r3, r0, #1
 8028b1e:	d102      	bne.n	8028b26 <_write_r+0x1e>
 8028b20:	682b      	ldr	r3, [r5, #0]
 8028b22:	b103      	cbz	r3, 8028b26 <_write_r+0x1e>
 8028b24:	6023      	str	r3, [r4, #0]
 8028b26:	bd38      	pop	{r3, r4, r5, pc}
 8028b28:	20014264 	.word	0x20014264

08028b2c <__errno>:
 8028b2c:	4b01      	ldr	r3, [pc, #4]	; (8028b34 <__errno+0x8>)
 8028b2e:	6818      	ldr	r0, [r3, #0]
 8028b30:	4770      	bx	lr
 8028b32:	bf00      	nop
 8028b34:	20000160 	.word	0x20000160

08028b38 <__libc_init_array>:
 8028b38:	b570      	push	{r4, r5, r6, lr}
 8028b3a:	4d0d      	ldr	r5, [pc, #52]	; (8028b70 <__libc_init_array+0x38>)
 8028b3c:	4c0d      	ldr	r4, [pc, #52]	; (8028b74 <__libc_init_array+0x3c>)
 8028b3e:	1b64      	subs	r4, r4, r5
 8028b40:	10a4      	asrs	r4, r4, #2
 8028b42:	2600      	movs	r6, #0
 8028b44:	42a6      	cmp	r6, r4
 8028b46:	d109      	bne.n	8028b5c <__libc_init_array+0x24>
 8028b48:	4d0b      	ldr	r5, [pc, #44]	; (8028b78 <__libc_init_array+0x40>)
 8028b4a:	4c0c      	ldr	r4, [pc, #48]	; (8028b7c <__libc_init_array+0x44>)
 8028b4c:	f000 fd70 	bl	8029630 <_init>
 8028b50:	1b64      	subs	r4, r4, r5
 8028b52:	10a4      	asrs	r4, r4, #2
 8028b54:	2600      	movs	r6, #0
 8028b56:	42a6      	cmp	r6, r4
 8028b58:	d105      	bne.n	8028b66 <__libc_init_array+0x2e>
 8028b5a:	bd70      	pop	{r4, r5, r6, pc}
 8028b5c:	f855 3b04 	ldr.w	r3, [r5], #4
 8028b60:	4798      	blx	r3
 8028b62:	3601      	adds	r6, #1
 8028b64:	e7ee      	b.n	8028b44 <__libc_init_array+0xc>
 8028b66:	f855 3b04 	ldr.w	r3, [r5], #4
 8028b6a:	4798      	blx	r3
 8028b6c:	3601      	adds	r6, #1
 8028b6e:	e7f2      	b.n	8028b56 <__libc_init_array+0x1e>
 8028b70:	08149cd0 	.word	0x08149cd0
 8028b74:	08149cd0 	.word	0x08149cd0
 8028b78:	08149cd0 	.word	0x08149cd0
 8028b7c:	08149ce4 	.word	0x08149ce4

08028b80 <__retarget_lock_init_recursive>:
 8028b80:	4770      	bx	lr

08028b82 <__retarget_lock_acquire_recursive>:
 8028b82:	4770      	bx	lr

08028b84 <__retarget_lock_release_recursive>:
 8028b84:	4770      	bx	lr

08028b86 <memcpy>:
 8028b86:	440a      	add	r2, r1
 8028b88:	4291      	cmp	r1, r2
 8028b8a:	f100 33ff 	add.w	r3, r0, #4294967295
 8028b8e:	d100      	bne.n	8028b92 <memcpy+0xc>
 8028b90:	4770      	bx	lr
 8028b92:	b510      	push	{r4, lr}
 8028b94:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028b98:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028b9c:	4291      	cmp	r1, r2
 8028b9e:	d1f9      	bne.n	8028b94 <memcpy+0xe>
 8028ba0:	bd10      	pop	{r4, pc}
	...

08028ba4 <__register_exitproc>:
 8028ba4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028ba8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8028c5c <__register_exitproc+0xb8>
 8028bac:	4606      	mov	r6, r0
 8028bae:	f8d8 0000 	ldr.w	r0, [r8]
 8028bb2:	461f      	mov	r7, r3
 8028bb4:	460d      	mov	r5, r1
 8028bb6:	4691      	mov	r9, r2
 8028bb8:	f7ff ffe3 	bl	8028b82 <__retarget_lock_acquire_recursive>
 8028bbc:	4b23      	ldr	r3, [pc, #140]	; (8028c4c <__register_exitproc+0xa8>)
 8028bbe:	681c      	ldr	r4, [r3, #0]
 8028bc0:	b934      	cbnz	r4, 8028bd0 <__register_exitproc+0x2c>
 8028bc2:	4c23      	ldr	r4, [pc, #140]	; (8028c50 <__register_exitproc+0xac>)
 8028bc4:	601c      	str	r4, [r3, #0]
 8028bc6:	4b23      	ldr	r3, [pc, #140]	; (8028c54 <__register_exitproc+0xb0>)
 8028bc8:	b113      	cbz	r3, 8028bd0 <__register_exitproc+0x2c>
 8028bca:	681b      	ldr	r3, [r3, #0]
 8028bcc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028bd0:	6863      	ldr	r3, [r4, #4]
 8028bd2:	2b1f      	cmp	r3, #31
 8028bd4:	dd07      	ble.n	8028be6 <__register_exitproc+0x42>
 8028bd6:	f8d8 0000 	ldr.w	r0, [r8]
 8028bda:	f7ff ffd3 	bl	8028b84 <__retarget_lock_release_recursive>
 8028bde:	f04f 30ff 	mov.w	r0, #4294967295
 8028be2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028be6:	b32e      	cbz	r6, 8028c34 <__register_exitproc+0x90>
 8028be8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028bec:	b968      	cbnz	r0, 8028c0a <__register_exitproc+0x66>
 8028bee:	4b1a      	ldr	r3, [pc, #104]	; (8028c58 <__register_exitproc+0xb4>)
 8028bf0:	2b00      	cmp	r3, #0
 8028bf2:	d0f0      	beq.n	8028bd6 <__register_exitproc+0x32>
 8028bf4:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028bf8:	f7ff fcbe 	bl	8028578 <malloc>
 8028bfc:	2800      	cmp	r0, #0
 8028bfe:	d0ea      	beq.n	8028bd6 <__register_exitproc+0x32>
 8028c00:	2300      	movs	r3, #0
 8028c02:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8028c06:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8028c0a:	6863      	ldr	r3, [r4, #4]
 8028c0c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028c10:	2201      	movs	r2, #1
 8028c12:	409a      	lsls	r2, r3
 8028c14:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028c18:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8028c1c:	4313      	orrs	r3, r2
 8028c1e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8028c22:	2e02      	cmp	r6, #2
 8028c24:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028c28:	bf02      	ittt	eq
 8028c2a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8028c2e:	4313      	orreq	r3, r2
 8028c30:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8028c34:	6863      	ldr	r3, [r4, #4]
 8028c36:	f8d8 0000 	ldr.w	r0, [r8]
 8028c3a:	1c5a      	adds	r2, r3, #1
 8028c3c:	3302      	adds	r3, #2
 8028c3e:	6062      	str	r2, [r4, #4]
 8028c40:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028c44:	f7ff ff9e 	bl	8028b84 <__retarget_lock_release_recursive>
 8028c48:	2000      	movs	r0, #0
 8028c4a:	e7ca      	b.n	8028be2 <__register_exitproc+0x3e>
 8028c4c:	200142f8 	.word	0x200142f8
 8028c50:	2001426c 	.word	0x2001426c
 8028c54:	0802d748 	.word	0x0802d748
 8028c58:	08028579 	.word	0x08028579
 8028c5c:	20000164 	.word	0x20000164

08028c60 <_free_r>:
 8028c60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028c62:	2900      	cmp	r1, #0
 8028c64:	d044      	beq.n	8028cf0 <_free_r+0x90>
 8028c66:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028c6a:	9001      	str	r0, [sp, #4]
 8028c6c:	2b00      	cmp	r3, #0
 8028c6e:	f1a1 0404 	sub.w	r4, r1, #4
 8028c72:	bfb8      	it	lt
 8028c74:	18e4      	addlt	r4, r4, r3
 8028c76:	f7ff fd2f 	bl	80286d8 <__malloc_lock>
 8028c7a:	4a1e      	ldr	r2, [pc, #120]	; (8028cf4 <_free_r+0x94>)
 8028c7c:	9801      	ldr	r0, [sp, #4]
 8028c7e:	6813      	ldr	r3, [r2, #0]
 8028c80:	b933      	cbnz	r3, 8028c90 <_free_r+0x30>
 8028c82:	6063      	str	r3, [r4, #4]
 8028c84:	6014      	str	r4, [r2, #0]
 8028c86:	b003      	add	sp, #12
 8028c88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8028c8c:	f7ff bd2a 	b.w	80286e4 <__malloc_unlock>
 8028c90:	42a3      	cmp	r3, r4
 8028c92:	d908      	bls.n	8028ca6 <_free_r+0x46>
 8028c94:	6825      	ldr	r5, [r4, #0]
 8028c96:	1961      	adds	r1, r4, r5
 8028c98:	428b      	cmp	r3, r1
 8028c9a:	bf01      	itttt	eq
 8028c9c:	6819      	ldreq	r1, [r3, #0]
 8028c9e:	685b      	ldreq	r3, [r3, #4]
 8028ca0:	1949      	addeq	r1, r1, r5
 8028ca2:	6021      	streq	r1, [r4, #0]
 8028ca4:	e7ed      	b.n	8028c82 <_free_r+0x22>
 8028ca6:	461a      	mov	r2, r3
 8028ca8:	685b      	ldr	r3, [r3, #4]
 8028caa:	b10b      	cbz	r3, 8028cb0 <_free_r+0x50>
 8028cac:	42a3      	cmp	r3, r4
 8028cae:	d9fa      	bls.n	8028ca6 <_free_r+0x46>
 8028cb0:	6811      	ldr	r1, [r2, #0]
 8028cb2:	1855      	adds	r5, r2, r1
 8028cb4:	42a5      	cmp	r5, r4
 8028cb6:	d10b      	bne.n	8028cd0 <_free_r+0x70>
 8028cb8:	6824      	ldr	r4, [r4, #0]
 8028cba:	4421      	add	r1, r4
 8028cbc:	1854      	adds	r4, r2, r1
 8028cbe:	42a3      	cmp	r3, r4
 8028cc0:	6011      	str	r1, [r2, #0]
 8028cc2:	d1e0      	bne.n	8028c86 <_free_r+0x26>
 8028cc4:	681c      	ldr	r4, [r3, #0]
 8028cc6:	685b      	ldr	r3, [r3, #4]
 8028cc8:	6053      	str	r3, [r2, #4]
 8028cca:	440c      	add	r4, r1
 8028ccc:	6014      	str	r4, [r2, #0]
 8028cce:	e7da      	b.n	8028c86 <_free_r+0x26>
 8028cd0:	d902      	bls.n	8028cd8 <_free_r+0x78>
 8028cd2:	230c      	movs	r3, #12
 8028cd4:	6003      	str	r3, [r0, #0]
 8028cd6:	e7d6      	b.n	8028c86 <_free_r+0x26>
 8028cd8:	6825      	ldr	r5, [r4, #0]
 8028cda:	1961      	adds	r1, r4, r5
 8028cdc:	428b      	cmp	r3, r1
 8028cde:	bf04      	itt	eq
 8028ce0:	6819      	ldreq	r1, [r3, #0]
 8028ce2:	685b      	ldreq	r3, [r3, #4]
 8028ce4:	6063      	str	r3, [r4, #4]
 8028ce6:	bf04      	itt	eq
 8028ce8:	1949      	addeq	r1, r1, r5
 8028cea:	6021      	streq	r1, [r4, #0]
 8028cec:	6054      	str	r4, [r2, #4]
 8028cee:	e7ca      	b.n	8028c86 <_free_r+0x26>
 8028cf0:	b003      	add	sp, #12
 8028cf2:	bd30      	pop	{r4, r5, pc}
 8028cf4:	20014120 	.word	0x20014120

08028cf8 <__sfputc_r>:
 8028cf8:	6893      	ldr	r3, [r2, #8]
 8028cfa:	3b01      	subs	r3, #1
 8028cfc:	2b00      	cmp	r3, #0
 8028cfe:	b410      	push	{r4}
 8028d00:	6093      	str	r3, [r2, #8]
 8028d02:	da08      	bge.n	8028d16 <__sfputc_r+0x1e>
 8028d04:	6994      	ldr	r4, [r2, #24]
 8028d06:	42a3      	cmp	r3, r4
 8028d08:	db01      	blt.n	8028d0e <__sfputc_r+0x16>
 8028d0a:	290a      	cmp	r1, #10
 8028d0c:	d103      	bne.n	8028d16 <__sfputc_r+0x1e>
 8028d0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d12:	f000 bb73 	b.w	80293fc <__swbuf_r>
 8028d16:	6813      	ldr	r3, [r2, #0]
 8028d18:	1c58      	adds	r0, r3, #1
 8028d1a:	6010      	str	r0, [r2, #0]
 8028d1c:	7019      	strb	r1, [r3, #0]
 8028d1e:	4608      	mov	r0, r1
 8028d20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028d24:	4770      	bx	lr

08028d26 <__sfputs_r>:
 8028d26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028d28:	4606      	mov	r6, r0
 8028d2a:	460f      	mov	r7, r1
 8028d2c:	4614      	mov	r4, r2
 8028d2e:	18d5      	adds	r5, r2, r3
 8028d30:	42ac      	cmp	r4, r5
 8028d32:	d101      	bne.n	8028d38 <__sfputs_r+0x12>
 8028d34:	2000      	movs	r0, #0
 8028d36:	e007      	b.n	8028d48 <__sfputs_r+0x22>
 8028d38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028d3c:	463a      	mov	r2, r7
 8028d3e:	4630      	mov	r0, r6
 8028d40:	f7ff ffda 	bl	8028cf8 <__sfputc_r>
 8028d44:	1c43      	adds	r3, r0, #1
 8028d46:	d1f3      	bne.n	8028d30 <__sfputs_r+0xa>
 8028d48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08028d4c <_vfiprintf_r>:
 8028d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028d50:	460d      	mov	r5, r1
 8028d52:	b09d      	sub	sp, #116	; 0x74
 8028d54:	4614      	mov	r4, r2
 8028d56:	4698      	mov	r8, r3
 8028d58:	4606      	mov	r6, r0
 8028d5a:	b118      	cbz	r0, 8028d64 <_vfiprintf_r+0x18>
 8028d5c:	6a03      	ldr	r3, [r0, #32]
 8028d5e:	b90b      	cbnz	r3, 8028d64 <_vfiprintf_r+0x18>
 8028d60:	f7ff fd60 	bl	8028824 <__sinit>
 8028d64:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028d66:	07d9      	lsls	r1, r3, #31
 8028d68:	d405      	bmi.n	8028d76 <_vfiprintf_r+0x2a>
 8028d6a:	89ab      	ldrh	r3, [r5, #12]
 8028d6c:	059a      	lsls	r2, r3, #22
 8028d6e:	d402      	bmi.n	8028d76 <_vfiprintf_r+0x2a>
 8028d70:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028d72:	f7ff ff06 	bl	8028b82 <__retarget_lock_acquire_recursive>
 8028d76:	89ab      	ldrh	r3, [r5, #12]
 8028d78:	071b      	lsls	r3, r3, #28
 8028d7a:	d501      	bpl.n	8028d80 <_vfiprintf_r+0x34>
 8028d7c:	692b      	ldr	r3, [r5, #16]
 8028d7e:	b99b      	cbnz	r3, 8028da8 <_vfiprintf_r+0x5c>
 8028d80:	4629      	mov	r1, r5
 8028d82:	4630      	mov	r0, r6
 8028d84:	f000 fb78 	bl	8029478 <__swsetup_r>
 8028d88:	b170      	cbz	r0, 8028da8 <_vfiprintf_r+0x5c>
 8028d8a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028d8c:	07dc      	lsls	r4, r3, #31
 8028d8e:	d504      	bpl.n	8028d9a <_vfiprintf_r+0x4e>
 8028d90:	f04f 30ff 	mov.w	r0, #4294967295
 8028d94:	b01d      	add	sp, #116	; 0x74
 8028d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028d9a:	89ab      	ldrh	r3, [r5, #12]
 8028d9c:	0598      	lsls	r0, r3, #22
 8028d9e:	d4f7      	bmi.n	8028d90 <_vfiprintf_r+0x44>
 8028da0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028da2:	f7ff feef 	bl	8028b84 <__retarget_lock_release_recursive>
 8028da6:	e7f3      	b.n	8028d90 <_vfiprintf_r+0x44>
 8028da8:	2300      	movs	r3, #0
 8028daa:	9309      	str	r3, [sp, #36]	; 0x24
 8028dac:	2320      	movs	r3, #32
 8028dae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8028db2:	f8cd 800c 	str.w	r8, [sp, #12]
 8028db6:	2330      	movs	r3, #48	; 0x30
 8028db8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8028f6c <_vfiprintf_r+0x220>
 8028dbc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8028dc0:	f04f 0901 	mov.w	r9, #1
 8028dc4:	4623      	mov	r3, r4
 8028dc6:	469a      	mov	sl, r3
 8028dc8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8028dcc:	b10a      	cbz	r2, 8028dd2 <_vfiprintf_r+0x86>
 8028dce:	2a25      	cmp	r2, #37	; 0x25
 8028dd0:	d1f9      	bne.n	8028dc6 <_vfiprintf_r+0x7a>
 8028dd2:	ebba 0b04 	subs.w	fp, sl, r4
 8028dd6:	d00b      	beq.n	8028df0 <_vfiprintf_r+0xa4>
 8028dd8:	465b      	mov	r3, fp
 8028dda:	4622      	mov	r2, r4
 8028ddc:	4629      	mov	r1, r5
 8028dde:	4630      	mov	r0, r6
 8028de0:	f7ff ffa1 	bl	8028d26 <__sfputs_r>
 8028de4:	3001      	adds	r0, #1
 8028de6:	f000 80a9 	beq.w	8028f3c <_vfiprintf_r+0x1f0>
 8028dea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028dec:	445a      	add	r2, fp
 8028dee:	9209      	str	r2, [sp, #36]	; 0x24
 8028df0:	f89a 3000 	ldrb.w	r3, [sl]
 8028df4:	2b00      	cmp	r3, #0
 8028df6:	f000 80a1 	beq.w	8028f3c <_vfiprintf_r+0x1f0>
 8028dfa:	2300      	movs	r3, #0
 8028dfc:	f04f 32ff 	mov.w	r2, #4294967295
 8028e00:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028e04:	f10a 0a01 	add.w	sl, sl, #1
 8028e08:	9304      	str	r3, [sp, #16]
 8028e0a:	9307      	str	r3, [sp, #28]
 8028e0c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028e10:	931a      	str	r3, [sp, #104]	; 0x68
 8028e12:	4654      	mov	r4, sl
 8028e14:	2205      	movs	r2, #5
 8028e16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028e1a:	4854      	ldr	r0, [pc, #336]	; (8028f6c <_vfiprintf_r+0x220>)
 8028e1c:	f7d7 f9e8 	bl	80001f0 <memchr>
 8028e20:	9a04      	ldr	r2, [sp, #16]
 8028e22:	b9d8      	cbnz	r0, 8028e5c <_vfiprintf_r+0x110>
 8028e24:	06d1      	lsls	r1, r2, #27
 8028e26:	bf44      	itt	mi
 8028e28:	2320      	movmi	r3, #32
 8028e2a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028e2e:	0713      	lsls	r3, r2, #28
 8028e30:	bf44      	itt	mi
 8028e32:	232b      	movmi	r3, #43	; 0x2b
 8028e34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028e38:	f89a 3000 	ldrb.w	r3, [sl]
 8028e3c:	2b2a      	cmp	r3, #42	; 0x2a
 8028e3e:	d015      	beq.n	8028e6c <_vfiprintf_r+0x120>
 8028e40:	9a07      	ldr	r2, [sp, #28]
 8028e42:	4654      	mov	r4, sl
 8028e44:	2000      	movs	r0, #0
 8028e46:	f04f 0c0a 	mov.w	ip, #10
 8028e4a:	4621      	mov	r1, r4
 8028e4c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028e50:	3b30      	subs	r3, #48	; 0x30
 8028e52:	2b09      	cmp	r3, #9
 8028e54:	d94d      	bls.n	8028ef2 <_vfiprintf_r+0x1a6>
 8028e56:	b1b0      	cbz	r0, 8028e86 <_vfiprintf_r+0x13a>
 8028e58:	9207      	str	r2, [sp, #28]
 8028e5a:	e014      	b.n	8028e86 <_vfiprintf_r+0x13a>
 8028e5c:	eba0 0308 	sub.w	r3, r0, r8
 8028e60:	fa09 f303 	lsl.w	r3, r9, r3
 8028e64:	4313      	orrs	r3, r2
 8028e66:	9304      	str	r3, [sp, #16]
 8028e68:	46a2      	mov	sl, r4
 8028e6a:	e7d2      	b.n	8028e12 <_vfiprintf_r+0xc6>
 8028e6c:	9b03      	ldr	r3, [sp, #12]
 8028e6e:	1d19      	adds	r1, r3, #4
 8028e70:	681b      	ldr	r3, [r3, #0]
 8028e72:	9103      	str	r1, [sp, #12]
 8028e74:	2b00      	cmp	r3, #0
 8028e76:	bfbb      	ittet	lt
 8028e78:	425b      	neglt	r3, r3
 8028e7a:	f042 0202 	orrlt.w	r2, r2, #2
 8028e7e:	9307      	strge	r3, [sp, #28]
 8028e80:	9307      	strlt	r3, [sp, #28]
 8028e82:	bfb8      	it	lt
 8028e84:	9204      	strlt	r2, [sp, #16]
 8028e86:	7823      	ldrb	r3, [r4, #0]
 8028e88:	2b2e      	cmp	r3, #46	; 0x2e
 8028e8a:	d10c      	bne.n	8028ea6 <_vfiprintf_r+0x15a>
 8028e8c:	7863      	ldrb	r3, [r4, #1]
 8028e8e:	2b2a      	cmp	r3, #42	; 0x2a
 8028e90:	d134      	bne.n	8028efc <_vfiprintf_r+0x1b0>
 8028e92:	9b03      	ldr	r3, [sp, #12]
 8028e94:	1d1a      	adds	r2, r3, #4
 8028e96:	681b      	ldr	r3, [r3, #0]
 8028e98:	9203      	str	r2, [sp, #12]
 8028e9a:	2b00      	cmp	r3, #0
 8028e9c:	bfb8      	it	lt
 8028e9e:	f04f 33ff 	movlt.w	r3, #4294967295
 8028ea2:	3402      	adds	r4, #2
 8028ea4:	9305      	str	r3, [sp, #20]
 8028ea6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8028f7c <_vfiprintf_r+0x230>
 8028eaa:	7821      	ldrb	r1, [r4, #0]
 8028eac:	2203      	movs	r2, #3
 8028eae:	4650      	mov	r0, sl
 8028eb0:	f7d7 f99e 	bl	80001f0 <memchr>
 8028eb4:	b138      	cbz	r0, 8028ec6 <_vfiprintf_r+0x17a>
 8028eb6:	9b04      	ldr	r3, [sp, #16]
 8028eb8:	eba0 000a 	sub.w	r0, r0, sl
 8028ebc:	2240      	movs	r2, #64	; 0x40
 8028ebe:	4082      	lsls	r2, r0
 8028ec0:	4313      	orrs	r3, r2
 8028ec2:	3401      	adds	r4, #1
 8028ec4:	9304      	str	r3, [sp, #16]
 8028ec6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028eca:	4829      	ldr	r0, [pc, #164]	; (8028f70 <_vfiprintf_r+0x224>)
 8028ecc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028ed0:	2206      	movs	r2, #6
 8028ed2:	f7d7 f98d 	bl	80001f0 <memchr>
 8028ed6:	2800      	cmp	r0, #0
 8028ed8:	d03f      	beq.n	8028f5a <_vfiprintf_r+0x20e>
 8028eda:	4b26      	ldr	r3, [pc, #152]	; (8028f74 <_vfiprintf_r+0x228>)
 8028edc:	bb1b      	cbnz	r3, 8028f26 <_vfiprintf_r+0x1da>
 8028ede:	9b03      	ldr	r3, [sp, #12]
 8028ee0:	3307      	adds	r3, #7
 8028ee2:	f023 0307 	bic.w	r3, r3, #7
 8028ee6:	3308      	adds	r3, #8
 8028ee8:	9303      	str	r3, [sp, #12]
 8028eea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028eec:	443b      	add	r3, r7
 8028eee:	9309      	str	r3, [sp, #36]	; 0x24
 8028ef0:	e768      	b.n	8028dc4 <_vfiprintf_r+0x78>
 8028ef2:	fb0c 3202 	mla	r2, ip, r2, r3
 8028ef6:	460c      	mov	r4, r1
 8028ef8:	2001      	movs	r0, #1
 8028efa:	e7a6      	b.n	8028e4a <_vfiprintf_r+0xfe>
 8028efc:	2300      	movs	r3, #0
 8028efe:	3401      	adds	r4, #1
 8028f00:	9305      	str	r3, [sp, #20]
 8028f02:	4619      	mov	r1, r3
 8028f04:	f04f 0c0a 	mov.w	ip, #10
 8028f08:	4620      	mov	r0, r4
 8028f0a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028f0e:	3a30      	subs	r2, #48	; 0x30
 8028f10:	2a09      	cmp	r2, #9
 8028f12:	d903      	bls.n	8028f1c <_vfiprintf_r+0x1d0>
 8028f14:	2b00      	cmp	r3, #0
 8028f16:	d0c6      	beq.n	8028ea6 <_vfiprintf_r+0x15a>
 8028f18:	9105      	str	r1, [sp, #20]
 8028f1a:	e7c4      	b.n	8028ea6 <_vfiprintf_r+0x15a>
 8028f1c:	fb0c 2101 	mla	r1, ip, r1, r2
 8028f20:	4604      	mov	r4, r0
 8028f22:	2301      	movs	r3, #1
 8028f24:	e7f0      	b.n	8028f08 <_vfiprintf_r+0x1bc>
 8028f26:	ab03      	add	r3, sp, #12
 8028f28:	9300      	str	r3, [sp, #0]
 8028f2a:	462a      	mov	r2, r5
 8028f2c:	4b12      	ldr	r3, [pc, #72]	; (8028f78 <_vfiprintf_r+0x22c>)
 8028f2e:	a904      	add	r1, sp, #16
 8028f30:	4630      	mov	r0, r6
 8028f32:	f3af 8000 	nop.w
 8028f36:	4607      	mov	r7, r0
 8028f38:	1c78      	adds	r0, r7, #1
 8028f3a:	d1d6      	bne.n	8028eea <_vfiprintf_r+0x19e>
 8028f3c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028f3e:	07d9      	lsls	r1, r3, #31
 8028f40:	d405      	bmi.n	8028f4e <_vfiprintf_r+0x202>
 8028f42:	89ab      	ldrh	r3, [r5, #12]
 8028f44:	059a      	lsls	r2, r3, #22
 8028f46:	d402      	bmi.n	8028f4e <_vfiprintf_r+0x202>
 8028f48:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028f4a:	f7ff fe1b 	bl	8028b84 <__retarget_lock_release_recursive>
 8028f4e:	89ab      	ldrh	r3, [r5, #12]
 8028f50:	065b      	lsls	r3, r3, #25
 8028f52:	f53f af1d 	bmi.w	8028d90 <_vfiprintf_r+0x44>
 8028f56:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028f58:	e71c      	b.n	8028d94 <_vfiprintf_r+0x48>
 8028f5a:	ab03      	add	r3, sp, #12
 8028f5c:	9300      	str	r3, [sp, #0]
 8028f5e:	462a      	mov	r2, r5
 8028f60:	4b05      	ldr	r3, [pc, #20]	; (8028f78 <_vfiprintf_r+0x22c>)
 8028f62:	a904      	add	r1, sp, #16
 8028f64:	4630      	mov	r0, r6
 8028f66:	f000 f879 	bl	802905c <_printf_i>
 8028f6a:	e7e4      	b.n	8028f36 <_vfiprintf_r+0x1ea>
 8028f6c:	0802d74c 	.word	0x0802d74c
 8028f70:	0802d756 	.word	0x0802d756
 8028f74:	00000000 	.word	0x00000000
 8028f78:	08028d27 	.word	0x08028d27
 8028f7c:	0802d752 	.word	0x0802d752

08028f80 <_printf_common>:
 8028f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028f84:	4616      	mov	r6, r2
 8028f86:	4699      	mov	r9, r3
 8028f88:	688a      	ldr	r2, [r1, #8]
 8028f8a:	690b      	ldr	r3, [r1, #16]
 8028f8c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8028f90:	4293      	cmp	r3, r2
 8028f92:	bfb8      	it	lt
 8028f94:	4613      	movlt	r3, r2
 8028f96:	6033      	str	r3, [r6, #0]
 8028f98:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8028f9c:	4607      	mov	r7, r0
 8028f9e:	460c      	mov	r4, r1
 8028fa0:	b10a      	cbz	r2, 8028fa6 <_printf_common+0x26>
 8028fa2:	3301      	adds	r3, #1
 8028fa4:	6033      	str	r3, [r6, #0]
 8028fa6:	6823      	ldr	r3, [r4, #0]
 8028fa8:	0699      	lsls	r1, r3, #26
 8028faa:	bf42      	ittt	mi
 8028fac:	6833      	ldrmi	r3, [r6, #0]
 8028fae:	3302      	addmi	r3, #2
 8028fb0:	6033      	strmi	r3, [r6, #0]
 8028fb2:	6825      	ldr	r5, [r4, #0]
 8028fb4:	f015 0506 	ands.w	r5, r5, #6
 8028fb8:	d106      	bne.n	8028fc8 <_printf_common+0x48>
 8028fba:	f104 0a19 	add.w	sl, r4, #25
 8028fbe:	68e3      	ldr	r3, [r4, #12]
 8028fc0:	6832      	ldr	r2, [r6, #0]
 8028fc2:	1a9b      	subs	r3, r3, r2
 8028fc4:	42ab      	cmp	r3, r5
 8028fc6:	dc26      	bgt.n	8029016 <_printf_common+0x96>
 8028fc8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8028fcc:	1e13      	subs	r3, r2, #0
 8028fce:	6822      	ldr	r2, [r4, #0]
 8028fd0:	bf18      	it	ne
 8028fd2:	2301      	movne	r3, #1
 8028fd4:	0692      	lsls	r2, r2, #26
 8028fd6:	d42b      	bmi.n	8029030 <_printf_common+0xb0>
 8028fd8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8028fdc:	4649      	mov	r1, r9
 8028fde:	4638      	mov	r0, r7
 8028fe0:	47c0      	blx	r8
 8028fe2:	3001      	adds	r0, #1
 8028fe4:	d01e      	beq.n	8029024 <_printf_common+0xa4>
 8028fe6:	6823      	ldr	r3, [r4, #0]
 8028fe8:	6922      	ldr	r2, [r4, #16]
 8028fea:	f003 0306 	and.w	r3, r3, #6
 8028fee:	2b04      	cmp	r3, #4
 8028ff0:	bf02      	ittt	eq
 8028ff2:	68e5      	ldreq	r5, [r4, #12]
 8028ff4:	6833      	ldreq	r3, [r6, #0]
 8028ff6:	1aed      	subeq	r5, r5, r3
 8028ff8:	68a3      	ldr	r3, [r4, #8]
 8028ffa:	bf0c      	ite	eq
 8028ffc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8029000:	2500      	movne	r5, #0
 8029002:	4293      	cmp	r3, r2
 8029004:	bfc4      	itt	gt
 8029006:	1a9b      	subgt	r3, r3, r2
 8029008:	18ed      	addgt	r5, r5, r3
 802900a:	2600      	movs	r6, #0
 802900c:	341a      	adds	r4, #26
 802900e:	42b5      	cmp	r5, r6
 8029010:	d11a      	bne.n	8029048 <_printf_common+0xc8>
 8029012:	2000      	movs	r0, #0
 8029014:	e008      	b.n	8029028 <_printf_common+0xa8>
 8029016:	2301      	movs	r3, #1
 8029018:	4652      	mov	r2, sl
 802901a:	4649      	mov	r1, r9
 802901c:	4638      	mov	r0, r7
 802901e:	47c0      	blx	r8
 8029020:	3001      	adds	r0, #1
 8029022:	d103      	bne.n	802902c <_printf_common+0xac>
 8029024:	f04f 30ff 	mov.w	r0, #4294967295
 8029028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802902c:	3501      	adds	r5, #1
 802902e:	e7c6      	b.n	8028fbe <_printf_common+0x3e>
 8029030:	18e1      	adds	r1, r4, r3
 8029032:	1c5a      	adds	r2, r3, #1
 8029034:	2030      	movs	r0, #48	; 0x30
 8029036:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802903a:	4422      	add	r2, r4
 802903c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8029040:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8029044:	3302      	adds	r3, #2
 8029046:	e7c7      	b.n	8028fd8 <_printf_common+0x58>
 8029048:	2301      	movs	r3, #1
 802904a:	4622      	mov	r2, r4
 802904c:	4649      	mov	r1, r9
 802904e:	4638      	mov	r0, r7
 8029050:	47c0      	blx	r8
 8029052:	3001      	adds	r0, #1
 8029054:	d0e6      	beq.n	8029024 <_printf_common+0xa4>
 8029056:	3601      	adds	r6, #1
 8029058:	e7d9      	b.n	802900e <_printf_common+0x8e>
	...

0802905c <_printf_i>:
 802905c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8029060:	7e0f      	ldrb	r7, [r1, #24]
 8029062:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8029064:	2f78      	cmp	r7, #120	; 0x78
 8029066:	4691      	mov	r9, r2
 8029068:	4680      	mov	r8, r0
 802906a:	460c      	mov	r4, r1
 802906c:	469a      	mov	sl, r3
 802906e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8029072:	d807      	bhi.n	8029084 <_printf_i+0x28>
 8029074:	2f62      	cmp	r7, #98	; 0x62
 8029076:	d80a      	bhi.n	802908e <_printf_i+0x32>
 8029078:	2f00      	cmp	r7, #0
 802907a:	f000 80d4 	beq.w	8029226 <_printf_i+0x1ca>
 802907e:	2f58      	cmp	r7, #88	; 0x58
 8029080:	f000 80c0 	beq.w	8029204 <_printf_i+0x1a8>
 8029084:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029088:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802908c:	e03a      	b.n	8029104 <_printf_i+0xa8>
 802908e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8029092:	2b15      	cmp	r3, #21
 8029094:	d8f6      	bhi.n	8029084 <_printf_i+0x28>
 8029096:	a101      	add	r1, pc, #4	; (adr r1, 802909c <_printf_i+0x40>)
 8029098:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802909c:	080290f5 	.word	0x080290f5
 80290a0:	08029109 	.word	0x08029109
 80290a4:	08029085 	.word	0x08029085
 80290a8:	08029085 	.word	0x08029085
 80290ac:	08029085 	.word	0x08029085
 80290b0:	08029085 	.word	0x08029085
 80290b4:	08029109 	.word	0x08029109
 80290b8:	08029085 	.word	0x08029085
 80290bc:	08029085 	.word	0x08029085
 80290c0:	08029085 	.word	0x08029085
 80290c4:	08029085 	.word	0x08029085
 80290c8:	0802920d 	.word	0x0802920d
 80290cc:	08029135 	.word	0x08029135
 80290d0:	080291c7 	.word	0x080291c7
 80290d4:	08029085 	.word	0x08029085
 80290d8:	08029085 	.word	0x08029085
 80290dc:	0802922f 	.word	0x0802922f
 80290e0:	08029085 	.word	0x08029085
 80290e4:	08029135 	.word	0x08029135
 80290e8:	08029085 	.word	0x08029085
 80290ec:	08029085 	.word	0x08029085
 80290f0:	080291cf 	.word	0x080291cf
 80290f4:	682b      	ldr	r3, [r5, #0]
 80290f6:	1d1a      	adds	r2, r3, #4
 80290f8:	681b      	ldr	r3, [r3, #0]
 80290fa:	602a      	str	r2, [r5, #0]
 80290fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8029100:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8029104:	2301      	movs	r3, #1
 8029106:	e09f      	b.n	8029248 <_printf_i+0x1ec>
 8029108:	6820      	ldr	r0, [r4, #0]
 802910a:	682b      	ldr	r3, [r5, #0]
 802910c:	0607      	lsls	r7, r0, #24
 802910e:	f103 0104 	add.w	r1, r3, #4
 8029112:	6029      	str	r1, [r5, #0]
 8029114:	d501      	bpl.n	802911a <_printf_i+0xbe>
 8029116:	681e      	ldr	r6, [r3, #0]
 8029118:	e003      	b.n	8029122 <_printf_i+0xc6>
 802911a:	0646      	lsls	r6, r0, #25
 802911c:	d5fb      	bpl.n	8029116 <_printf_i+0xba>
 802911e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8029122:	2e00      	cmp	r6, #0
 8029124:	da03      	bge.n	802912e <_printf_i+0xd2>
 8029126:	232d      	movs	r3, #45	; 0x2d
 8029128:	4276      	negs	r6, r6
 802912a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802912e:	485a      	ldr	r0, [pc, #360]	; (8029298 <_printf_i+0x23c>)
 8029130:	230a      	movs	r3, #10
 8029132:	e012      	b.n	802915a <_printf_i+0xfe>
 8029134:	682b      	ldr	r3, [r5, #0]
 8029136:	6820      	ldr	r0, [r4, #0]
 8029138:	1d19      	adds	r1, r3, #4
 802913a:	6029      	str	r1, [r5, #0]
 802913c:	0605      	lsls	r5, r0, #24
 802913e:	d501      	bpl.n	8029144 <_printf_i+0xe8>
 8029140:	681e      	ldr	r6, [r3, #0]
 8029142:	e002      	b.n	802914a <_printf_i+0xee>
 8029144:	0641      	lsls	r1, r0, #25
 8029146:	d5fb      	bpl.n	8029140 <_printf_i+0xe4>
 8029148:	881e      	ldrh	r6, [r3, #0]
 802914a:	4853      	ldr	r0, [pc, #332]	; (8029298 <_printf_i+0x23c>)
 802914c:	2f6f      	cmp	r7, #111	; 0x6f
 802914e:	bf0c      	ite	eq
 8029150:	2308      	moveq	r3, #8
 8029152:	230a      	movne	r3, #10
 8029154:	2100      	movs	r1, #0
 8029156:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802915a:	6865      	ldr	r5, [r4, #4]
 802915c:	60a5      	str	r5, [r4, #8]
 802915e:	2d00      	cmp	r5, #0
 8029160:	bfa2      	ittt	ge
 8029162:	6821      	ldrge	r1, [r4, #0]
 8029164:	f021 0104 	bicge.w	r1, r1, #4
 8029168:	6021      	strge	r1, [r4, #0]
 802916a:	b90e      	cbnz	r6, 8029170 <_printf_i+0x114>
 802916c:	2d00      	cmp	r5, #0
 802916e:	d04b      	beq.n	8029208 <_printf_i+0x1ac>
 8029170:	4615      	mov	r5, r2
 8029172:	fbb6 f1f3 	udiv	r1, r6, r3
 8029176:	fb03 6711 	mls	r7, r3, r1, r6
 802917a:	5dc7      	ldrb	r7, [r0, r7]
 802917c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8029180:	4637      	mov	r7, r6
 8029182:	42bb      	cmp	r3, r7
 8029184:	460e      	mov	r6, r1
 8029186:	d9f4      	bls.n	8029172 <_printf_i+0x116>
 8029188:	2b08      	cmp	r3, #8
 802918a:	d10b      	bne.n	80291a4 <_printf_i+0x148>
 802918c:	6823      	ldr	r3, [r4, #0]
 802918e:	07de      	lsls	r6, r3, #31
 8029190:	d508      	bpl.n	80291a4 <_printf_i+0x148>
 8029192:	6923      	ldr	r3, [r4, #16]
 8029194:	6861      	ldr	r1, [r4, #4]
 8029196:	4299      	cmp	r1, r3
 8029198:	bfde      	ittt	le
 802919a:	2330      	movle	r3, #48	; 0x30
 802919c:	f805 3c01 	strble.w	r3, [r5, #-1]
 80291a0:	f105 35ff 	addle.w	r5, r5, #4294967295
 80291a4:	1b52      	subs	r2, r2, r5
 80291a6:	6122      	str	r2, [r4, #16]
 80291a8:	f8cd a000 	str.w	sl, [sp]
 80291ac:	464b      	mov	r3, r9
 80291ae:	aa03      	add	r2, sp, #12
 80291b0:	4621      	mov	r1, r4
 80291b2:	4640      	mov	r0, r8
 80291b4:	f7ff fee4 	bl	8028f80 <_printf_common>
 80291b8:	3001      	adds	r0, #1
 80291ba:	d14a      	bne.n	8029252 <_printf_i+0x1f6>
 80291bc:	f04f 30ff 	mov.w	r0, #4294967295
 80291c0:	b004      	add	sp, #16
 80291c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80291c6:	6823      	ldr	r3, [r4, #0]
 80291c8:	f043 0320 	orr.w	r3, r3, #32
 80291cc:	6023      	str	r3, [r4, #0]
 80291ce:	4833      	ldr	r0, [pc, #204]	; (802929c <_printf_i+0x240>)
 80291d0:	2778      	movs	r7, #120	; 0x78
 80291d2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80291d6:	6823      	ldr	r3, [r4, #0]
 80291d8:	6829      	ldr	r1, [r5, #0]
 80291da:	061f      	lsls	r7, r3, #24
 80291dc:	f851 6b04 	ldr.w	r6, [r1], #4
 80291e0:	d402      	bmi.n	80291e8 <_printf_i+0x18c>
 80291e2:	065f      	lsls	r7, r3, #25
 80291e4:	bf48      	it	mi
 80291e6:	b2b6      	uxthmi	r6, r6
 80291e8:	07df      	lsls	r7, r3, #31
 80291ea:	bf48      	it	mi
 80291ec:	f043 0320 	orrmi.w	r3, r3, #32
 80291f0:	6029      	str	r1, [r5, #0]
 80291f2:	bf48      	it	mi
 80291f4:	6023      	strmi	r3, [r4, #0]
 80291f6:	b91e      	cbnz	r6, 8029200 <_printf_i+0x1a4>
 80291f8:	6823      	ldr	r3, [r4, #0]
 80291fa:	f023 0320 	bic.w	r3, r3, #32
 80291fe:	6023      	str	r3, [r4, #0]
 8029200:	2310      	movs	r3, #16
 8029202:	e7a7      	b.n	8029154 <_printf_i+0xf8>
 8029204:	4824      	ldr	r0, [pc, #144]	; (8029298 <_printf_i+0x23c>)
 8029206:	e7e4      	b.n	80291d2 <_printf_i+0x176>
 8029208:	4615      	mov	r5, r2
 802920a:	e7bd      	b.n	8029188 <_printf_i+0x12c>
 802920c:	682b      	ldr	r3, [r5, #0]
 802920e:	6826      	ldr	r6, [r4, #0]
 8029210:	6961      	ldr	r1, [r4, #20]
 8029212:	1d18      	adds	r0, r3, #4
 8029214:	6028      	str	r0, [r5, #0]
 8029216:	0635      	lsls	r5, r6, #24
 8029218:	681b      	ldr	r3, [r3, #0]
 802921a:	d501      	bpl.n	8029220 <_printf_i+0x1c4>
 802921c:	6019      	str	r1, [r3, #0]
 802921e:	e002      	b.n	8029226 <_printf_i+0x1ca>
 8029220:	0670      	lsls	r0, r6, #25
 8029222:	d5fb      	bpl.n	802921c <_printf_i+0x1c0>
 8029224:	8019      	strh	r1, [r3, #0]
 8029226:	2300      	movs	r3, #0
 8029228:	6123      	str	r3, [r4, #16]
 802922a:	4615      	mov	r5, r2
 802922c:	e7bc      	b.n	80291a8 <_printf_i+0x14c>
 802922e:	682b      	ldr	r3, [r5, #0]
 8029230:	1d1a      	adds	r2, r3, #4
 8029232:	602a      	str	r2, [r5, #0]
 8029234:	681d      	ldr	r5, [r3, #0]
 8029236:	6862      	ldr	r2, [r4, #4]
 8029238:	2100      	movs	r1, #0
 802923a:	4628      	mov	r0, r5
 802923c:	f7d6 ffd8 	bl	80001f0 <memchr>
 8029240:	b108      	cbz	r0, 8029246 <_printf_i+0x1ea>
 8029242:	1b40      	subs	r0, r0, r5
 8029244:	6060      	str	r0, [r4, #4]
 8029246:	6863      	ldr	r3, [r4, #4]
 8029248:	6123      	str	r3, [r4, #16]
 802924a:	2300      	movs	r3, #0
 802924c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8029250:	e7aa      	b.n	80291a8 <_printf_i+0x14c>
 8029252:	6923      	ldr	r3, [r4, #16]
 8029254:	462a      	mov	r2, r5
 8029256:	4649      	mov	r1, r9
 8029258:	4640      	mov	r0, r8
 802925a:	47d0      	blx	sl
 802925c:	3001      	adds	r0, #1
 802925e:	d0ad      	beq.n	80291bc <_printf_i+0x160>
 8029260:	6823      	ldr	r3, [r4, #0]
 8029262:	079b      	lsls	r3, r3, #30
 8029264:	d413      	bmi.n	802928e <_printf_i+0x232>
 8029266:	68e0      	ldr	r0, [r4, #12]
 8029268:	9b03      	ldr	r3, [sp, #12]
 802926a:	4298      	cmp	r0, r3
 802926c:	bfb8      	it	lt
 802926e:	4618      	movlt	r0, r3
 8029270:	e7a6      	b.n	80291c0 <_printf_i+0x164>
 8029272:	2301      	movs	r3, #1
 8029274:	4632      	mov	r2, r6
 8029276:	4649      	mov	r1, r9
 8029278:	4640      	mov	r0, r8
 802927a:	47d0      	blx	sl
 802927c:	3001      	adds	r0, #1
 802927e:	d09d      	beq.n	80291bc <_printf_i+0x160>
 8029280:	3501      	adds	r5, #1
 8029282:	68e3      	ldr	r3, [r4, #12]
 8029284:	9903      	ldr	r1, [sp, #12]
 8029286:	1a5b      	subs	r3, r3, r1
 8029288:	42ab      	cmp	r3, r5
 802928a:	dcf2      	bgt.n	8029272 <_printf_i+0x216>
 802928c:	e7eb      	b.n	8029266 <_printf_i+0x20a>
 802928e:	2500      	movs	r5, #0
 8029290:	f104 0619 	add.w	r6, r4, #25
 8029294:	e7f5      	b.n	8029282 <_printf_i+0x226>
 8029296:	bf00      	nop
 8029298:	0802d75d 	.word	0x0802d75d
 802929c:	0802d76e 	.word	0x0802d76e

080292a0 <__sflush_r>:
 80292a0:	898a      	ldrh	r2, [r1, #12]
 80292a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80292a6:	4605      	mov	r5, r0
 80292a8:	0710      	lsls	r0, r2, #28
 80292aa:	460c      	mov	r4, r1
 80292ac:	d458      	bmi.n	8029360 <__sflush_r+0xc0>
 80292ae:	684b      	ldr	r3, [r1, #4]
 80292b0:	2b00      	cmp	r3, #0
 80292b2:	dc05      	bgt.n	80292c0 <__sflush_r+0x20>
 80292b4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80292b6:	2b00      	cmp	r3, #0
 80292b8:	dc02      	bgt.n	80292c0 <__sflush_r+0x20>
 80292ba:	2000      	movs	r0, #0
 80292bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80292c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80292c2:	2e00      	cmp	r6, #0
 80292c4:	d0f9      	beq.n	80292ba <__sflush_r+0x1a>
 80292c6:	2300      	movs	r3, #0
 80292c8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80292cc:	682f      	ldr	r7, [r5, #0]
 80292ce:	6a21      	ldr	r1, [r4, #32]
 80292d0:	602b      	str	r3, [r5, #0]
 80292d2:	d032      	beq.n	802933a <__sflush_r+0x9a>
 80292d4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80292d6:	89a3      	ldrh	r3, [r4, #12]
 80292d8:	075a      	lsls	r2, r3, #29
 80292da:	d505      	bpl.n	80292e8 <__sflush_r+0x48>
 80292dc:	6863      	ldr	r3, [r4, #4]
 80292de:	1ac0      	subs	r0, r0, r3
 80292e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80292e2:	b10b      	cbz	r3, 80292e8 <__sflush_r+0x48>
 80292e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80292e6:	1ac0      	subs	r0, r0, r3
 80292e8:	2300      	movs	r3, #0
 80292ea:	4602      	mov	r2, r0
 80292ec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80292ee:	6a21      	ldr	r1, [r4, #32]
 80292f0:	4628      	mov	r0, r5
 80292f2:	47b0      	blx	r6
 80292f4:	1c43      	adds	r3, r0, #1
 80292f6:	89a3      	ldrh	r3, [r4, #12]
 80292f8:	d106      	bne.n	8029308 <__sflush_r+0x68>
 80292fa:	6829      	ldr	r1, [r5, #0]
 80292fc:	291d      	cmp	r1, #29
 80292fe:	d82b      	bhi.n	8029358 <__sflush_r+0xb8>
 8029300:	4a29      	ldr	r2, [pc, #164]	; (80293a8 <__sflush_r+0x108>)
 8029302:	410a      	asrs	r2, r1
 8029304:	07d6      	lsls	r6, r2, #31
 8029306:	d427      	bmi.n	8029358 <__sflush_r+0xb8>
 8029308:	2200      	movs	r2, #0
 802930a:	6062      	str	r2, [r4, #4]
 802930c:	04d9      	lsls	r1, r3, #19
 802930e:	6922      	ldr	r2, [r4, #16]
 8029310:	6022      	str	r2, [r4, #0]
 8029312:	d504      	bpl.n	802931e <__sflush_r+0x7e>
 8029314:	1c42      	adds	r2, r0, #1
 8029316:	d101      	bne.n	802931c <__sflush_r+0x7c>
 8029318:	682b      	ldr	r3, [r5, #0]
 802931a:	b903      	cbnz	r3, 802931e <__sflush_r+0x7e>
 802931c:	6560      	str	r0, [r4, #84]	; 0x54
 802931e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029320:	602f      	str	r7, [r5, #0]
 8029322:	2900      	cmp	r1, #0
 8029324:	d0c9      	beq.n	80292ba <__sflush_r+0x1a>
 8029326:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802932a:	4299      	cmp	r1, r3
 802932c:	d002      	beq.n	8029334 <__sflush_r+0x94>
 802932e:	4628      	mov	r0, r5
 8029330:	f7ff fc96 	bl	8028c60 <_free_r>
 8029334:	2000      	movs	r0, #0
 8029336:	6360      	str	r0, [r4, #52]	; 0x34
 8029338:	e7c0      	b.n	80292bc <__sflush_r+0x1c>
 802933a:	2301      	movs	r3, #1
 802933c:	4628      	mov	r0, r5
 802933e:	47b0      	blx	r6
 8029340:	1c41      	adds	r1, r0, #1
 8029342:	d1c8      	bne.n	80292d6 <__sflush_r+0x36>
 8029344:	682b      	ldr	r3, [r5, #0]
 8029346:	2b00      	cmp	r3, #0
 8029348:	d0c5      	beq.n	80292d6 <__sflush_r+0x36>
 802934a:	2b1d      	cmp	r3, #29
 802934c:	d001      	beq.n	8029352 <__sflush_r+0xb2>
 802934e:	2b16      	cmp	r3, #22
 8029350:	d101      	bne.n	8029356 <__sflush_r+0xb6>
 8029352:	602f      	str	r7, [r5, #0]
 8029354:	e7b1      	b.n	80292ba <__sflush_r+0x1a>
 8029356:	89a3      	ldrh	r3, [r4, #12]
 8029358:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802935c:	81a3      	strh	r3, [r4, #12]
 802935e:	e7ad      	b.n	80292bc <__sflush_r+0x1c>
 8029360:	690f      	ldr	r7, [r1, #16]
 8029362:	2f00      	cmp	r7, #0
 8029364:	d0a9      	beq.n	80292ba <__sflush_r+0x1a>
 8029366:	0793      	lsls	r3, r2, #30
 8029368:	680e      	ldr	r6, [r1, #0]
 802936a:	bf08      	it	eq
 802936c:	694b      	ldreq	r3, [r1, #20]
 802936e:	600f      	str	r7, [r1, #0]
 8029370:	bf18      	it	ne
 8029372:	2300      	movne	r3, #0
 8029374:	eba6 0807 	sub.w	r8, r6, r7
 8029378:	608b      	str	r3, [r1, #8]
 802937a:	f1b8 0f00 	cmp.w	r8, #0
 802937e:	dd9c      	ble.n	80292ba <__sflush_r+0x1a>
 8029380:	6a21      	ldr	r1, [r4, #32]
 8029382:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8029384:	4643      	mov	r3, r8
 8029386:	463a      	mov	r2, r7
 8029388:	4628      	mov	r0, r5
 802938a:	47b0      	blx	r6
 802938c:	2800      	cmp	r0, #0
 802938e:	dc06      	bgt.n	802939e <__sflush_r+0xfe>
 8029390:	89a3      	ldrh	r3, [r4, #12]
 8029392:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8029396:	81a3      	strh	r3, [r4, #12]
 8029398:	f04f 30ff 	mov.w	r0, #4294967295
 802939c:	e78e      	b.n	80292bc <__sflush_r+0x1c>
 802939e:	4407      	add	r7, r0
 80293a0:	eba8 0800 	sub.w	r8, r8, r0
 80293a4:	e7e9      	b.n	802937a <__sflush_r+0xda>
 80293a6:	bf00      	nop
 80293a8:	dfbffffe 	.word	0xdfbffffe

080293ac <_fflush_r>:
 80293ac:	b538      	push	{r3, r4, r5, lr}
 80293ae:	690b      	ldr	r3, [r1, #16]
 80293b0:	4605      	mov	r5, r0
 80293b2:	460c      	mov	r4, r1
 80293b4:	b913      	cbnz	r3, 80293bc <_fflush_r+0x10>
 80293b6:	2500      	movs	r5, #0
 80293b8:	4628      	mov	r0, r5
 80293ba:	bd38      	pop	{r3, r4, r5, pc}
 80293bc:	b118      	cbz	r0, 80293c6 <_fflush_r+0x1a>
 80293be:	6a03      	ldr	r3, [r0, #32]
 80293c0:	b90b      	cbnz	r3, 80293c6 <_fflush_r+0x1a>
 80293c2:	f7ff fa2f 	bl	8028824 <__sinit>
 80293c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80293ca:	2b00      	cmp	r3, #0
 80293cc:	d0f3      	beq.n	80293b6 <_fflush_r+0xa>
 80293ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80293d0:	07d0      	lsls	r0, r2, #31
 80293d2:	d404      	bmi.n	80293de <_fflush_r+0x32>
 80293d4:	0599      	lsls	r1, r3, #22
 80293d6:	d402      	bmi.n	80293de <_fflush_r+0x32>
 80293d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80293da:	f7ff fbd2 	bl	8028b82 <__retarget_lock_acquire_recursive>
 80293de:	4628      	mov	r0, r5
 80293e0:	4621      	mov	r1, r4
 80293e2:	f7ff ff5d 	bl	80292a0 <__sflush_r>
 80293e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80293e8:	07da      	lsls	r2, r3, #31
 80293ea:	4605      	mov	r5, r0
 80293ec:	d4e4      	bmi.n	80293b8 <_fflush_r+0xc>
 80293ee:	89a3      	ldrh	r3, [r4, #12]
 80293f0:	059b      	lsls	r3, r3, #22
 80293f2:	d4e1      	bmi.n	80293b8 <_fflush_r+0xc>
 80293f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80293f6:	f7ff fbc5 	bl	8028b84 <__retarget_lock_release_recursive>
 80293fa:	e7dd      	b.n	80293b8 <_fflush_r+0xc>

080293fc <__swbuf_r>:
 80293fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80293fe:	460e      	mov	r6, r1
 8029400:	4614      	mov	r4, r2
 8029402:	4605      	mov	r5, r0
 8029404:	b118      	cbz	r0, 802940e <__swbuf_r+0x12>
 8029406:	6a03      	ldr	r3, [r0, #32]
 8029408:	b90b      	cbnz	r3, 802940e <__swbuf_r+0x12>
 802940a:	f7ff fa0b 	bl	8028824 <__sinit>
 802940e:	69a3      	ldr	r3, [r4, #24]
 8029410:	60a3      	str	r3, [r4, #8]
 8029412:	89a3      	ldrh	r3, [r4, #12]
 8029414:	071a      	lsls	r2, r3, #28
 8029416:	d525      	bpl.n	8029464 <__swbuf_r+0x68>
 8029418:	6923      	ldr	r3, [r4, #16]
 802941a:	b31b      	cbz	r3, 8029464 <__swbuf_r+0x68>
 802941c:	6823      	ldr	r3, [r4, #0]
 802941e:	6922      	ldr	r2, [r4, #16]
 8029420:	1a98      	subs	r0, r3, r2
 8029422:	6963      	ldr	r3, [r4, #20]
 8029424:	b2f6      	uxtb	r6, r6
 8029426:	4283      	cmp	r3, r0
 8029428:	4637      	mov	r7, r6
 802942a:	dc04      	bgt.n	8029436 <__swbuf_r+0x3a>
 802942c:	4621      	mov	r1, r4
 802942e:	4628      	mov	r0, r5
 8029430:	f7ff ffbc 	bl	80293ac <_fflush_r>
 8029434:	b9e0      	cbnz	r0, 8029470 <__swbuf_r+0x74>
 8029436:	68a3      	ldr	r3, [r4, #8]
 8029438:	3b01      	subs	r3, #1
 802943a:	60a3      	str	r3, [r4, #8]
 802943c:	6823      	ldr	r3, [r4, #0]
 802943e:	1c5a      	adds	r2, r3, #1
 8029440:	6022      	str	r2, [r4, #0]
 8029442:	701e      	strb	r6, [r3, #0]
 8029444:	6962      	ldr	r2, [r4, #20]
 8029446:	1c43      	adds	r3, r0, #1
 8029448:	429a      	cmp	r2, r3
 802944a:	d004      	beq.n	8029456 <__swbuf_r+0x5a>
 802944c:	89a3      	ldrh	r3, [r4, #12]
 802944e:	07db      	lsls	r3, r3, #31
 8029450:	d506      	bpl.n	8029460 <__swbuf_r+0x64>
 8029452:	2e0a      	cmp	r6, #10
 8029454:	d104      	bne.n	8029460 <__swbuf_r+0x64>
 8029456:	4621      	mov	r1, r4
 8029458:	4628      	mov	r0, r5
 802945a:	f7ff ffa7 	bl	80293ac <_fflush_r>
 802945e:	b938      	cbnz	r0, 8029470 <__swbuf_r+0x74>
 8029460:	4638      	mov	r0, r7
 8029462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029464:	4621      	mov	r1, r4
 8029466:	4628      	mov	r0, r5
 8029468:	f000 f806 	bl	8029478 <__swsetup_r>
 802946c:	2800      	cmp	r0, #0
 802946e:	d0d5      	beq.n	802941c <__swbuf_r+0x20>
 8029470:	f04f 37ff 	mov.w	r7, #4294967295
 8029474:	e7f4      	b.n	8029460 <__swbuf_r+0x64>
	...

08029478 <__swsetup_r>:
 8029478:	b538      	push	{r3, r4, r5, lr}
 802947a:	4b2a      	ldr	r3, [pc, #168]	; (8029524 <__swsetup_r+0xac>)
 802947c:	4605      	mov	r5, r0
 802947e:	6818      	ldr	r0, [r3, #0]
 8029480:	460c      	mov	r4, r1
 8029482:	b118      	cbz	r0, 802948c <__swsetup_r+0x14>
 8029484:	6a03      	ldr	r3, [r0, #32]
 8029486:	b90b      	cbnz	r3, 802948c <__swsetup_r+0x14>
 8029488:	f7ff f9cc 	bl	8028824 <__sinit>
 802948c:	89a3      	ldrh	r3, [r4, #12]
 802948e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029492:	0718      	lsls	r0, r3, #28
 8029494:	d422      	bmi.n	80294dc <__swsetup_r+0x64>
 8029496:	06d9      	lsls	r1, r3, #27
 8029498:	d407      	bmi.n	80294aa <__swsetup_r+0x32>
 802949a:	2309      	movs	r3, #9
 802949c:	602b      	str	r3, [r5, #0]
 802949e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80294a2:	81a3      	strh	r3, [r4, #12]
 80294a4:	f04f 30ff 	mov.w	r0, #4294967295
 80294a8:	e034      	b.n	8029514 <__swsetup_r+0x9c>
 80294aa:	0758      	lsls	r0, r3, #29
 80294ac:	d512      	bpl.n	80294d4 <__swsetup_r+0x5c>
 80294ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80294b0:	b141      	cbz	r1, 80294c4 <__swsetup_r+0x4c>
 80294b2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80294b6:	4299      	cmp	r1, r3
 80294b8:	d002      	beq.n	80294c0 <__swsetup_r+0x48>
 80294ba:	4628      	mov	r0, r5
 80294bc:	f7ff fbd0 	bl	8028c60 <_free_r>
 80294c0:	2300      	movs	r3, #0
 80294c2:	6363      	str	r3, [r4, #52]	; 0x34
 80294c4:	89a3      	ldrh	r3, [r4, #12]
 80294c6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80294ca:	81a3      	strh	r3, [r4, #12]
 80294cc:	2300      	movs	r3, #0
 80294ce:	6063      	str	r3, [r4, #4]
 80294d0:	6923      	ldr	r3, [r4, #16]
 80294d2:	6023      	str	r3, [r4, #0]
 80294d4:	89a3      	ldrh	r3, [r4, #12]
 80294d6:	f043 0308 	orr.w	r3, r3, #8
 80294da:	81a3      	strh	r3, [r4, #12]
 80294dc:	6923      	ldr	r3, [r4, #16]
 80294de:	b94b      	cbnz	r3, 80294f4 <__swsetup_r+0x7c>
 80294e0:	89a3      	ldrh	r3, [r4, #12]
 80294e2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80294e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80294ea:	d003      	beq.n	80294f4 <__swsetup_r+0x7c>
 80294ec:	4621      	mov	r1, r4
 80294ee:	4628      	mov	r0, r5
 80294f0:	f000 f840 	bl	8029574 <__smakebuf_r>
 80294f4:	89a0      	ldrh	r0, [r4, #12]
 80294f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80294fa:	f010 0301 	ands.w	r3, r0, #1
 80294fe:	d00a      	beq.n	8029516 <__swsetup_r+0x9e>
 8029500:	2300      	movs	r3, #0
 8029502:	60a3      	str	r3, [r4, #8]
 8029504:	6963      	ldr	r3, [r4, #20]
 8029506:	425b      	negs	r3, r3
 8029508:	61a3      	str	r3, [r4, #24]
 802950a:	6923      	ldr	r3, [r4, #16]
 802950c:	b943      	cbnz	r3, 8029520 <__swsetup_r+0xa8>
 802950e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8029512:	d1c4      	bne.n	802949e <__swsetup_r+0x26>
 8029514:	bd38      	pop	{r3, r4, r5, pc}
 8029516:	0781      	lsls	r1, r0, #30
 8029518:	bf58      	it	pl
 802951a:	6963      	ldrpl	r3, [r4, #20]
 802951c:	60a3      	str	r3, [r4, #8]
 802951e:	e7f4      	b.n	802950a <__swsetup_r+0x92>
 8029520:	2000      	movs	r0, #0
 8029522:	e7f7      	b.n	8029514 <__swsetup_r+0x9c>
 8029524:	20000160 	.word	0x20000160

08029528 <__swhatbuf_r>:
 8029528:	b570      	push	{r4, r5, r6, lr}
 802952a:	460c      	mov	r4, r1
 802952c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029530:	2900      	cmp	r1, #0
 8029532:	b096      	sub	sp, #88	; 0x58
 8029534:	4615      	mov	r5, r2
 8029536:	461e      	mov	r6, r3
 8029538:	da0d      	bge.n	8029556 <__swhatbuf_r+0x2e>
 802953a:	89a3      	ldrh	r3, [r4, #12]
 802953c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8029540:	f04f 0100 	mov.w	r1, #0
 8029544:	bf0c      	ite	eq
 8029546:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802954a:	2340      	movne	r3, #64	; 0x40
 802954c:	2000      	movs	r0, #0
 802954e:	6031      	str	r1, [r6, #0]
 8029550:	602b      	str	r3, [r5, #0]
 8029552:	b016      	add	sp, #88	; 0x58
 8029554:	bd70      	pop	{r4, r5, r6, pc}
 8029556:	466a      	mov	r2, sp
 8029558:	f000 f848 	bl	80295ec <_fstat_r>
 802955c:	2800      	cmp	r0, #0
 802955e:	dbec      	blt.n	802953a <__swhatbuf_r+0x12>
 8029560:	9901      	ldr	r1, [sp, #4]
 8029562:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8029566:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802956a:	4259      	negs	r1, r3
 802956c:	4159      	adcs	r1, r3
 802956e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029572:	e7eb      	b.n	802954c <__swhatbuf_r+0x24>

08029574 <__smakebuf_r>:
 8029574:	898b      	ldrh	r3, [r1, #12]
 8029576:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029578:	079d      	lsls	r5, r3, #30
 802957a:	4606      	mov	r6, r0
 802957c:	460c      	mov	r4, r1
 802957e:	d507      	bpl.n	8029590 <__smakebuf_r+0x1c>
 8029580:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029584:	6023      	str	r3, [r4, #0]
 8029586:	6123      	str	r3, [r4, #16]
 8029588:	2301      	movs	r3, #1
 802958a:	6163      	str	r3, [r4, #20]
 802958c:	b002      	add	sp, #8
 802958e:	bd70      	pop	{r4, r5, r6, pc}
 8029590:	ab01      	add	r3, sp, #4
 8029592:	466a      	mov	r2, sp
 8029594:	f7ff ffc8 	bl	8029528 <__swhatbuf_r>
 8029598:	9900      	ldr	r1, [sp, #0]
 802959a:	4605      	mov	r5, r0
 802959c:	4630      	mov	r0, r6
 802959e:	f7ff f81b 	bl	80285d8 <_malloc_r>
 80295a2:	b948      	cbnz	r0, 80295b8 <__smakebuf_r+0x44>
 80295a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80295a8:	059a      	lsls	r2, r3, #22
 80295aa:	d4ef      	bmi.n	802958c <__smakebuf_r+0x18>
 80295ac:	f023 0303 	bic.w	r3, r3, #3
 80295b0:	f043 0302 	orr.w	r3, r3, #2
 80295b4:	81a3      	strh	r3, [r4, #12]
 80295b6:	e7e3      	b.n	8029580 <__smakebuf_r+0xc>
 80295b8:	89a3      	ldrh	r3, [r4, #12]
 80295ba:	6020      	str	r0, [r4, #0]
 80295bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80295c0:	81a3      	strh	r3, [r4, #12]
 80295c2:	9b00      	ldr	r3, [sp, #0]
 80295c4:	6163      	str	r3, [r4, #20]
 80295c6:	9b01      	ldr	r3, [sp, #4]
 80295c8:	6120      	str	r0, [r4, #16]
 80295ca:	b15b      	cbz	r3, 80295e4 <__smakebuf_r+0x70>
 80295cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80295d0:	4630      	mov	r0, r6
 80295d2:	f000 f81d 	bl	8029610 <_isatty_r>
 80295d6:	b128      	cbz	r0, 80295e4 <__smakebuf_r+0x70>
 80295d8:	89a3      	ldrh	r3, [r4, #12]
 80295da:	f023 0303 	bic.w	r3, r3, #3
 80295de:	f043 0301 	orr.w	r3, r3, #1
 80295e2:	81a3      	strh	r3, [r4, #12]
 80295e4:	89a3      	ldrh	r3, [r4, #12]
 80295e6:	431d      	orrs	r5, r3
 80295e8:	81a5      	strh	r5, [r4, #12]
 80295ea:	e7cf      	b.n	802958c <__smakebuf_r+0x18>

080295ec <_fstat_r>:
 80295ec:	b538      	push	{r3, r4, r5, lr}
 80295ee:	4d07      	ldr	r5, [pc, #28]	; (802960c <_fstat_r+0x20>)
 80295f0:	2300      	movs	r3, #0
 80295f2:	4604      	mov	r4, r0
 80295f4:	4608      	mov	r0, r1
 80295f6:	4611      	mov	r1, r2
 80295f8:	602b      	str	r3, [r5, #0]
 80295fa:	f7d8 fdf9 	bl	80021f0 <_fstat>
 80295fe:	1c43      	adds	r3, r0, #1
 8029600:	d102      	bne.n	8029608 <_fstat_r+0x1c>
 8029602:	682b      	ldr	r3, [r5, #0]
 8029604:	b103      	cbz	r3, 8029608 <_fstat_r+0x1c>
 8029606:	6023      	str	r3, [r4, #0]
 8029608:	bd38      	pop	{r3, r4, r5, pc}
 802960a:	bf00      	nop
 802960c:	20014264 	.word	0x20014264

08029610 <_isatty_r>:
 8029610:	b538      	push	{r3, r4, r5, lr}
 8029612:	4d06      	ldr	r5, [pc, #24]	; (802962c <_isatty_r+0x1c>)
 8029614:	2300      	movs	r3, #0
 8029616:	4604      	mov	r4, r0
 8029618:	4608      	mov	r0, r1
 802961a:	602b      	str	r3, [r5, #0]
 802961c:	f7d8 fdee 	bl	80021fc <_isatty>
 8029620:	1c43      	adds	r3, r0, #1
 8029622:	d102      	bne.n	802962a <_isatty_r+0x1a>
 8029624:	682b      	ldr	r3, [r5, #0]
 8029626:	b103      	cbz	r3, 802962a <_isatty_r+0x1a>
 8029628:	6023      	str	r3, [r4, #0]
 802962a:	bd38      	pop	{r3, r4, r5, pc}
 802962c:	20014264 	.word	0x20014264

08029630 <_init>:
 8029630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029632:	bf00      	nop
 8029634:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029636:	bc08      	pop	{r3}
 8029638:	469e      	mov	lr, r3
 802963a:	4770      	bx	lr

0802963c <_fini>:
 802963c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802963e:	bf00      	nop
 8029640:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029642:	bc08      	pop	{r3}
 8029644:	469e      	mov	lr, r3
 8029646:	4770      	bx	lr
